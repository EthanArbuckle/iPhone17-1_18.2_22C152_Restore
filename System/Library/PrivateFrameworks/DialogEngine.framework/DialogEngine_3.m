uint64_t SnippetUI::CustomCanvas::GetCachedSize(SnippetUI::CustomCanvas *this)
{
  return *((unsigned int *)this + 13);
}

char *SnippetUI::CustomCanvas::ByteSizeLong(SnippetUI::CustomCanvas *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  uint64_t v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *((void *)this + 3);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v8 = *((void *)this + 4);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_18;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v11 = *((void *)this + 5);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_23;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_23:
  if (*((unsigned char *)this + 48)) {
    v4 += 2;
  }
  if (*((unsigned char *)this + 49)) {
    v4 += 2;
  }
  if (*((unsigned char *)this + 50)) {
    v14 = (const google::protobuf::UnknownFieldSet *)(v4 + 2);
  }
  else {
    v14 = (const google::protobuf::UnknownFieldSet *)v4;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::CustomCanvas *)((char *)this + 8), v14, (_DWORD *)this + 13);
  }
  *((_DWORD *)this + 13) = v14;
  return (char *)v14;
}

uint64_t SnippetUI::CustomCanvas::IsInitialized(SnippetUI::CustomCanvas *this)
{
  return 1;
}

SnippetUI::CustomCanvas *SnippetUI::CustomCanvas::New(SnippetUI::CustomCanvas *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomCanvas>(a2);
}

SnippetUI::CustomCanvas *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomCanvas>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::CustomCanvas *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::CustomCanvas>);
  }
  SnippetUI::CustomCanvas::CustomCanvas(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5D92690(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C404D509FBCLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::CustomCanvas>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::CustomCanvas *SnippetUI::CustomCanvas::New(SnippetUI::CustomCanvas *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomCanvas>(0);
}

void SnippetUI::CustomCanvas::~CustomCanvas(SnippetUI::CustomCanvas *this)
{
  SnippetUI::CustomCanvas::~CustomCanvas(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  *(void *)this = &unk_1F211B5F0;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 4);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 5);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1C8796D70](v8, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

SnippetUI::CustomCanvas *SnippetUI::CustomCanvas::CustomCanvas(SnippetUI::CustomCanvas *this, const SnippetUI::CustomCanvas *a2)
{
  *(void *)this = &unk_1F211B5F0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 13) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::CustomCanvas *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v10 = *((void *)a2 + 4);
  if (*(char *)(v10 + 23) < 0) {
    uint64_t v11 = *(void *)(v10 + 8);
  }
  else {
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  }
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v11) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, v10);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v12 = *((void *)a2 + 5);
  if (*(char *)(v12 + 23) < 0) {
    uint64_t v13 = *(void *)(v12 + 8);
  }
  else {
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  }
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v13) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v12);
  }
  __int16 v14 = *((_WORD *)a2 + 24);
  *((unsigned char *)this + 50) = *((unsigned char *)a2 + 50);
  *((_WORD *)this + 24) = v14;
  return this;
}

void sub_1C5D929A0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::CustomCanvas::default_instance(SnippetUI::CustomCanvas *this)
{
  if (atomic_load_explicit(scc_info_CustomCanvas_CustomCanvas_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_CustomCanvas_CustomCanvas_2eproto);
  }
  return &SnippetUI::_CustomCanvas_default_instance_;
}

void SnippetUI::CustomCanvas::CopyFrom(SnippetUI::CustomCanvas *this, const SnippetUI::CustomCanvas *a2)
{
  if (a2 != this)
  {
    SnippetUI::CustomCanvas::Clear(this);
    SnippetUI::CustomCanvas::MergeFrom(this, a2);
  }
}

void SnippetUI::CustomCanvas::InternalSwap(SnippetUI::CustomCanvas *this, SnippetUI::CustomCanvas *a2)
{
  uint64_t v4 = (SnippetUI::CustomCanvas *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v34;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = (uint64_t *)*((void *)this + 3);
  __int16 v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 3);
  }
  v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  v13[2] = v18;
  *(_OWORD *)v15 = v17;
  v15[2] = v16;
LABEL_19:
  v19 = (uint64_t *)*((void *)this + 4);
  v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_25;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    v19 = (uint64_t *)*((void *)this + 4);
  }
  v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)v19 = *(_OWORD *)v21;
  v19[2] = v24;
  *(_OWORD *)v21 = v23;
  v21[2] = v22;
LABEL_25:
  v25 = (uint64_t *)*((void *)this + 5);
  v26 = (uint64_t **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_31;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    v25 = (uint64_t *)*((void *)this + 5);
  }
  v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)v25 = *(_OWORD *)v27;
  v25[2] = v30;
  *(_OWORD *)v27 = v29;
  v27[2] = v28;
LABEL_31:
  char v31 = *((unsigned char *)this + 48);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((unsigned char *)a2 + 48) = v31;
  char v32 = *((unsigned char *)this + 49);
  *((unsigned char *)this + 49) = *((unsigned char *)a2 + 49);
  *((unsigned char *)a2 + 49) = v32;
  char v33 = *((unsigned char *)this + 50);
  *((unsigned char *)this + 50) = *((unsigned char *)a2 + 50);
  *((unsigned char *)a2 + 50) = v33;
}

void siri::dialogengine::GradingAllowListFactory::GetAllowListForBundleId(char *a1@<X0>, const char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = (const void **)a1;
  if (a1[23] >= 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(char **)a1;
  }
  siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"GetAllowListForBundleId: Looking for allow list for bundleId [%s]...", a2, v5);
  {
    operator new();
  }
  uint64_t v6 = (std::once_flag::_State_type *)siri::dialogengine::GetGradingAllowListCacheMutex(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetGradingAllowListCacheMutex(void)::flag, memory_order_acquire) != -1)
  {
    __p = v28;
    v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
    std::__call_once(v6, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetGradingAllowListCacheMutex(void)::$_0 &&>>);
  }
  uint64_t v7 = (std::mutex *)siri::dialogengine::GetGradingAllowListCacheMutex(void)::sMutex;
  std::mutex::lock((std::mutex *)siri::dialogengine::GetGradingAllowListCacheMutex(void)::sMutex);
  {
    operator new();
  }
  uint64_t v9 = (std::once_flag::_State_type *)siri::dialogengine::GetGradingAllowListCache(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetGradingAllowListCache(void)::flag, memory_order_acquire) != -1)
  {
    __p = v28;
    v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
    std::__call_once(v9, &v30, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetGradingAllowListCache(void)::$_0 &&>>);
  }
  uint64_t v10 = siri::dialogengine::GetGradingAllowListCache(void)::sCache;
  uint64_t v11 = siri::dialogengine::GetGradingAllowListCache(void)::sCache + 8;
  uint64_t v12 = *(void *)(siri::dialogengine::GetGradingAllowListCache(void)::sCache + 8);
  if (!v12) {
    goto LABEL_17;
  }
  uint64_t v13 = siri::dialogengine::GetGradingAllowListCache(void)::sCache + 8;
  do
  {
    BOOL v14 = std::less<std::string>::operator()[abi:ne180100](v10 + 16, (const void **)(v12 + 32), v3);
    v15 = (uint64_t *)(v12 + 8);
    if (!v14)
    {
      v15 = (uint64_t *)v12;
      uint64_t v13 = v12;
    }
    uint64_t v12 = *v15;
  }
  while (*v15);
  if (v13 == v11 || std::less<std::string>::operator()[abi:ne180100](v10 + 16, v3, (const void **)(v13 + 32)))
  {
LABEL_17:
    if (*((char *)v3 + 23) >= 0) {
      uint64_t v16 = v3;
    }
    else {
      uint64_t v16 = *v3;
    }
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"GetAllowListForBundleId: Allow list for bundleId [%s] was not found in the cache", v8, v16);
    siri::dialogengine::GetGradingAllowListSearchPaths(v17, &v30);
    std::string::basic_string[abi:ne180100]<0>(v28, "\n");
    siri::dialogengine::StringJoinInternal<std::vector<std::string>>((uint64_t)&__p, (uint64_t)v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_, (uint64_t)v28);
    if (v32 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"GetAllowListForBundleId: Grading allow list search path...\n%s", v18, p_p);
    if (v32 < 0) {
      operator delete(__p);
    }
    if (v29 < 0) {
      operator delete(v28[0]);
    }
    *a3 = 0;
    a3[1] = 0;
    std::string::size_type size = v30.__r_.__value_.__l.__size_;
    for (uint64_t i = v30.__r_.__value_.__r.__words[0]; i != size; i += 24)
    {
      siri::dialogengine::JoinPath(i, (uint64_t)v3, (uint64_t)&__p);
      if (siri::dialogengine::FileExists((uint64_t *)&__p))
      {
        v25 = &__p;
        if (v32 < 0) {
          v25 = __p;
        }
        siri::dialogengine::Log::Info((siri::dialogengine::Log *)"GetAllowListForBundleId: Found allow list: [%s]", v22, v25);
        operator new();
      }
      if (v32 < 0) {
        operator delete(__p);
      }
    }
    if (*((char *)v3 + 23) < 0) {
      uint64_t v3 = (const void **)*v3;
    }
    std::string::basic_string[abi:ne180100]<0>(v28, "\n");
    siri::dialogengine::StringJoinInternal<std::vector<std::string>>((uint64_t)&__p, (uint64_t)v30.__r_.__value_.__l.__data_, v30.__r_.__value_.__l.__size_, (uint64_t)v28);
    if (v32 >= 0) {
      uint64_t v24 = &__p;
    }
    else {
      uint64_t v24 = __p;
    }
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"GetAllowListForBundleId: No allow list found for bundleId [%s]\nSearch paths:\n%s", v23, v3, v24);
    if (v32 < 0) {
      operator delete(__p);
    }
    if (v29 < 0) {
      operator delete(v28[0]);
    }
    __p = &v30;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  }
  else
  {
    if (*((char *)v3 + 23) >= 0) {
      v26 = v3;
    }
    else {
      v26 = *v3;
    }
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"GetAllowListForBundleId: Allow list for bundleId [%s] was found in the cache", v8, v26);
    uint64_t v27 = *(void *)(v13 + 64);
    *a3 = *(void *)(v13 + 56);
    a3[1] = v27;
    if (v27) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v27 + 8), 1uLL, memory_order_relaxed);
    }
  }
  std::mutex::unlock(v7);
}

void sub_1C5D93248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  std::mutex::unlock(v26);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::GradingAllowList>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::GradingAllowList>>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v2 = *(std::__shared_weak_count **)(v1 + 64);
      if (v2) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v2);
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    operator delete((void *)v1);
  }
}

uint64_t std::default_delete<siri::dialogengine::GradingAllowList>::operator()[abi:ne180100](uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    std::__tree<std::string>::destroy(*(char **)(result + 56));
    if (*(char *)(v1 + 47) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    JUMPOUT(0x1C8796D70);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::GradingAllowList *,std::shared_ptr<siri::dialogengine::GradingAllowList>::__shared_ptr_default_delete<siri::dialogengine::GradingAllowList,siri::dialogengine::GradingAllowList>,std::allocator<siri::dialogengine::GradingAllowList>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::GradingAllowList *,std::shared_ptr<siri::dialogengine::GradingAllowList>::__shared_ptr_default_delete<siri::dialogengine::GradingAllowList,siri::dialogengine::GradingAllowList>,std::allocator<siri::dialogengine::GradingAllowList>>::__on_zero_shared(uint64_t a1)
{
  return std::default_delete<siri::dialogengine::GradingAllowList>::operator()[abi:ne180100](*(void *)(a1 + 24));
}

void std::__shared_ptr_pointer<siri::dialogengine::GradingAllowList *,std::shared_ptr<siri::dialogengine::GradingAllowList>::__shared_ptr_default_delete<siri::dialogengine::GradingAllowList,siri::dialogengine::GradingAllowList>,std::allocator<siri::dialogengine::GradingAllowList>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetGradingAllowListCache(void)::$_0 &&>>()
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetGradingAllowListCacheMutex(void)::$_0 &&>>()
{
}

void siri::dialogengine::GradingAllowListFactory::GetAllowListForTemplateDir(char *a1@<X0>, void *a2@<X8>)
{
  BundleRegistryMutex = (std::mutex *)siri::dialogengine::GetBundleRegistryMutex((siri::dialogengine *)a1);
  std::mutex::lock(BundleRegistryMutex);
  uint64_t BundleRegistryRef = siri::dialogengine::GetBundleRegistryRef(v5);
  uint64_t v7 = std::__tree<std::string>::find<std::string>(BundleRegistryRef, (const void **)a1);
  if (BundleRegistryRef + 8 == v7)
  {
    if (a1[23] >= 0) {
      uint64_t v13 = a1;
    }
    else {
      uint64_t v13 = *(char **)a1;
    }
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"GetAllowListForTemplateDir: No bundleId registered for templateDir [%s]", v8, v13);
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    uint64_t v9 = (char *)(v7 + 56);
    uint64_t v10 = v7 + 56;
    if (*(char *)(v7 + 79) < 0) {
      uint64_t v10 = *(void *)v9;
    }
    if (a1[23] >= 0) {
      uint64_t v11 = a1;
    }
    else {
      uint64_t v11 = *(char **)a1;
    }
    siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Using bundleId [%s] for templateDir [%s]", v8, v10, v11);
    siri::dialogengine::GradingAllowListFactory::GetAllowListForBundleId(v9, v12, a2);
  }
  std::mutex::unlock(BundleRegistryMutex);
}

void sub_1C5D93650(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::GetBundleRegistryMutex(siri::dialogengine *this)
{
  {
    operator new();
  }
  uint64_t v1 = (std::once_flag::_State_type *)siri::dialogengine::GetBundleRegistryMutex(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetBundleRegistryMutex(void)::flag, memory_order_acquire) != -1)
  {
    uint64_t v5 = &v3;
    uint64_t v4 = &v5;
    std::__call_once(v1, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetBundleRegistryMutex(void)::$_0 &&>>);
  }
  return siri::dialogengine::GetBundleRegistryMutex(void)::m;
}

void sub_1C5D93720(_Unwind_Exception *a1)
{
}

uint64_t siri::dialogengine::GetBundleRegistryRef(siri::dialogengine *this)
{
  {
    operator new();
  }
  uint64_t v1 = (std::once_flag::_State_type *)siri::dialogengine::GetBundleRegistryRef(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetBundleRegistryRef(void)::flag, memory_order_acquire) != -1)
  {
    uint64_t v5 = &v3;
    uint64_t v4 = &v5;
    std::__call_once(v1, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetBundleRegistryRef(void)::$_0 &&>>);
  }
  return siri::dialogengine::GetBundleRegistryRef(void)::sTemplatDirToBundleIdMap;
}

void sub_1C5D937F0(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetBundleRegistryRef(void)::$_0 &&>>()
{
}

void sub_1C5D93910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v24 - 24) = &a24;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v24 - 24));
  *(void *)(v24 - 24) = &a21;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v24 - 24));
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(a1);
}

_OWORD *std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t **a1, const void **a2, _OWORD **a3)
{
  uint64_t v5 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v13, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x50uLL);
    v11[1] = a1 + 1;
    uint64_t v8 = *a3;
    uint64_t v9 = *((void *)*a3 + 2);
    v6[2] = **a3;
    *((void *)v6 + 6) = v9;
    *uint64_t v8 = 0;
    v8[1] = 0;
    v8[2] = 0;
    *((void *)v6 + 8) = 0;
    *((void *)v6 + 9) = 0;
    *((void *)v6 + 7) = 0;
    char v12 = 1;
    std::__tree<std::string>::__insert_node_at(a1, v13, v7, (uint64_t *)v6);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)v11);
  }
  return v6;
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetBundleRegistryMutex(void)::$_0 &&>>()
{
}

void siri::dialogengine::GradingAllowListFactory::RegisterBundle(char *a1, long long *a2)
{
  BundleRegistryMutex = (std::mutex *)siri::dialogengine::GetBundleRegistryMutex((siri::dialogengine *)a1);
  std::mutex::lock(BundleRegistryMutex);
  uint64_t BundleRegistryRef = (uint64_t **)siri::dialogengine::GetBundleRegistryRef(v5);
  uint64_t v11 = a2;
  uint64_t v7 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(BundleRegistryRef, (const void **)a2, &v11);
  std::string::operator=((std::string *)(v7 + 7), (const std::string *)a1);
  if (a1[23] >= 0) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = *(char **)a1;
  }
  if (*((char *)a2 + 23) >= 0) {
    uint64_t v10 = (uint64_t *)a2;
  }
  else {
    uint64_t v10 = *(uint64_t **)a2;
  }
  siri::dialogengine::Log::Info((siri::dialogengine::Log *)"GradingAllowListFactory: Registered bundle with bundleId [%s] and templateDir [%s]", v8, v9, v10);
  std::mutex::unlock(BundleRegistryMutex);
}

void sub_1C5D93B28(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1C5D93DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5D943A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  _Unwind_Resume(a1);
}

void AppendVisualResultToPatternExecutionResult(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  if (!v6) {
    goto LABEL_40;
  }
  uint64_t v42 = 0;
  long long v40 = 0u;
  long long v41 = 0u;
  long long v39 = 0u;
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::size_type v7 = *(void *)(a3 + 8);
    if (v7)
    {
      std::string::__init_copy_ctor_external(&v38, *(const std::string::value_type **)a3, v7);
      goto LABEL_8;
    }
LABEL_7:
    std::string::basic_string[abi:ne180100]<0>(&v38, "*");
    goto LABEL_8;
  }
  if (!*(unsigned char *)(a3 + 23)) {
    goto LABEL_7;
  }
  std::string v38 = *(std::string *)a3;
LABEL_8:
  id v8 = [v6 base64EncodedStringWithOptions:0];
  std::string::basic_string[abi:ne180100]<0>(v36, (char *)[v8 UTF8String]);
  siri::dialogengine::FilterSnippetUISections((std::string::size_type)v36, &v38, (uint64_t)&v39, &__p);
  uint64_t v9 = [v5 visual];

  if (v9)
  {
    uint64_t v11 = [v5 visual];
    char v12 = [v11 base64EncodedStringWithOptions:0];

    id v13 = v12;
    BOOL v14 = std::string::basic_string[abi:ne180100]<0>(&v43, (char *)[v13 UTF8String]);
    siri::dialogengine::MergeSnippetUIResults((std::string::size_type)v14, (std::string::size_type)&__p, (uint64_t)&v39, &v34);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v34;
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
  }
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size && (unint64_t)v39 | (unint64_t)v40)
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    long long v17 = [NSString stringWithUTF8String:p_p];
    uint64_t v18 = (void *)[objc_alloc(MEMORY[0x1E4F1C9B8]) initWithBase64EncodedString:v17 options:0];
    [v5 setVisual:v18];

    v19 = [MEMORY[0x1E4F1CA48] array];
    v21 = (long long *)*((void *)&v41 + 1);
    v20 = (long long *)v41;
    uint64_t v29 = MEMORY[0x1E4F143A8];
    uint64_t v30 = 3221225472;
    char v31 = ___ZL42AppendVisualResultToPatternExecutionResultP22PatternExecutionResultP6NSDataRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE_block_invoke;
    char v32 = &unk_1E651DE20;
    id v22 = v19;
    id v33 = v22;
    long long v23 = &v29;
    while (v20 != v21)
    {
      if (*((char *)v20 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v43, *(const std::string::value_type **)v20, *((void *)v20 + 1));
      }
      else
      {
        long long v24 = *v20;
        v43.__r_.__value_.__r.__words[2] = *((void *)v20 + 2);
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v24;
      }
      v31((uint64_t)v23, (uint64_t *)&v43);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      v20 = (long long *)((char *)v20 + 24);
    }
    v25 = (void *)MEMORY[0x1C8797450](v23);

    v26 = objc_msgSend(v5, "visualInfo", v29, v30);

    if (!v26)
    {
      uint64_t v27 = objc_opt_new();
      [v5 setVisualInfo:v27];
    }
    uint64_t v28 = [v5 visualInfo];
    [v28 setSectionIds:v22];
  }
  else
  {
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Visual has no sections or ornaments. Setting result.visual to nil", v10);
    [v5 setVisual:0];
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v37 < 0) {
    operator delete(v36[0]);
  }

  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  v43.__r_.__value_.__r.__words[0] = (std::string::size_type)&v41;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v43);
LABEL_40:
}

void sub_1C5D947D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }

  if (a34 < 0) {
    operator delete(a29);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a29);

  _Unwind_Resume(a1);
}

void ___ZL42AppendVisualResultToPatternExecutionResultP22PatternExecutionResultP6NSDataRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE_block_invoke(uint64_t a1, uint64_t *a2)
{
  if (*((char *)a2 + 23) < 0) {
    a2 = (uint64_t *)*a2;
  }
  id v3 = [NSString stringWithUTF8String:a2];
  objc_msgSend(*(id *)(a1 + 32), "addObject:");
}

void sub_1C5D94934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C5D94B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1C5D9951C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,void *a26,void *a27,void *a28,void *a29,uint64_t a30,void *a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,void *a42,uint64_t a43,void *a44)
{
  if (v45) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v45);
  }

  STACK[0x2B0] = (unint64_t)&STACK[0x2D0];
  std::vector<CATResult * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x2B0]);
  STACK[0x2D0] = (unint64_t)&STACK[0x2F0];
  std::vector<CATResult * {__strong}>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x2D0]);
  if (SLOBYTE(STACK[0x327]) < 0) {
    operator delete((void *)STACK[0x310]);
  }
  STACK[0x310] = (unint64_t)&STACK[0x328];
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x310]);
  std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  STACK[0x328] = (unint64_t)&STACK[0x340];
  std::vector<siri::dialogengine::ExecutePatternBase::Stage>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x328]);
  if (STACK[0x360]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x360]);
  }
  if (STACK[0x370]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x370]);
  }

  if (STACK[0x380]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x380]);
  }
  if (STACK[0x390]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x390]);
  }
  if (STACK[0x3A0]) {
    std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)STACK[0x3A0]);
  }
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&STACK[0x6B0]);
  STACK[0x6B0] = (unint64_t)&STACK[0x3A8];
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x6B0]);
  if (SLOBYTE(STACK[0x3DF]) < 0) {
    operator delete((void *)STACK[0x3C8]);
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete((void *)STACK[0x3E0]);
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete((void *)STACK[0x3F8]);
  }

  _Unwind_Resume(a1);
}

id GetPatternLog(void)
{
  v0 = &unk_1EA3D8000;
  {
    v0 = (void *)&unk_1EA3D8000;
    if (v3)
    {
      GetPatternLog(void)::sPatternLog = (uint64_t)os_log_create("com.apple.siri.DialogEngine", "ResponseFramework");
      v0 = (void *)&unk_1EA3D8000;
    }
  }
  uint64_t v1 = (void *)v0[200];
  return v1;
}

void LogPatternExecutionResult(PatternExecutionResult *a1)
{
  uint64_t v271 = *MEMORY[0x1E4F143B8];
  v200 = a1;
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)v263);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"PatternExecutionResult...\n", 26);
  if (v200)
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    uint64_t v1 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"patternId: ", 11);
    uint64_t v2 = [(PatternExecutionResult *)v200 patternId];
    uint64_t p_p = (uint64_t)&__p;
    PrintStringOrNil(&__p, v2, 1);
    if ((v262 & 0x80u) == 0) {
      uint64_t v4 = &__p;
    }
    else {
      uint64_t v4 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v5 = v262;
    }
    else {
      uint64_t v5 = v261;
    }
    id v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)v4, v5);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)"\n", 1);
    if ((char)v262 < 0) {
      operator delete(__p);
    }

    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"meta (count = ", 14);
    std::string::size_type v7 = [(PatternExecutionResult *)v200 meta];
    if (v7)
    {
      uint64_t p_p = [(PatternExecutionResult *)v200 meta];
      [(id)p_p count];
    }
    id v8 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"):\n", 3);
    if (v7) {

    }
    uint64_t v9 = [(PatternExecutionResult *)v200 meta];
    BOOL v10 = v9 == 0;

    if (!v10)
    {
      long long v258 = 0u;
      long long v259 = 0u;
      long long v256 = 0u;
      long long v257 = 0u;
      id obj = [(PatternExecutionResult *)v200 meta];
      uint64_t v11 = [obj countByEnumeratingWithState:&v256 objects:v270 count:16];
      if (v11)
      {
        uint64_t v12 = *(void *)v257;
        do
        {
          for (uint64_t p_p = 0; p_p != v11; ++p_p)
          {
            if (*(void *)v257 != v12) {
              objc_enumerationMutation(obj);
            }
            id v13 = *(void **)(*((void *)&v256 + 1) + 8 * p_p);
            BOOL v14 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
            PrintStringOrNil(&__p, v13, 1);
            if ((v262 & 0x80u) == 0) {
              v15 = &__p;
            }
            else {
              v15 = __p;
            }
            if ((v262 & 0x80u) == 0) {
              uint64_t v16 = v262;
            }
            else {
              uint64_t v16 = v261;
            }
            long long v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)v15, v16);
            uint64_t v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)" = ", 3);
            v19 = [(PatternExecutionResult *)v200 meta];
            v20 = [v19 objectForKeyedSubscript:v13];
            PrintStringOrNil(&v253, v20, 1);
            if ((v255 & 0x80u) == 0) {
              v21 = &v253;
            }
            else {
              v21 = v253;
            }
            if ((v255 & 0x80u) == 0) {
              uint64_t v22 = v255;
            }
            else {
              uint64_t v22 = v254;
            }
            long long v23 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)v21, v22);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v23, (uint64_t)"\n", 1);
            if ((char)v255 < 0) {
              operator delete(v253);
            }

            if ((char)v262 < 0) {
              operator delete(__p);
            }
          }
          uint64_t v11 = [obj countByEnumeratingWithState:&v256 objects:v270 count:16];
        }
        while (v11);
      }
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"dialog (count = ", 16);
    long long v24 = [(PatternExecutionResult *)v200 dialog];
    if (v24)
    {
      uint64_t p_p = [(PatternExecutionResult *)v200 dialog];
      [(id)p_p count];
    }
    v25 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v25, (uint64_t)"):\n", 3);
    if (v24) {

    }
    v26 = [(PatternExecutionResult *)v200 dialog];
    BOOL v27 = v26 == 0;

    if (!v27)
    {
      uint64_t v28 = [(PatternExecutionResult *)v200 dialog];
      BOOL v29 = [v28 count] == 0;

      if (!v29)
      {
        uint64_t v30 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
        char v31 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v30, (uint64_t)"----", 4);
        LOBYTE(__p) = 10;
        std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v31, (uint64_t)&__p, 1);
      }
      long long v251 = 0u;
      long long v252 = 0u;
      long long v249 = 0u;
      long long v250 = 0u;
      id v197 = [(PatternExecutionResult *)v200 dialog];
      uint64_t v199 = [v197 countByEnumeratingWithState:&v249 objects:v269 count:16];
      if (v199)
      {
        uint64_t v198 = *(void *)v250;
        do
        {
          for (id obja = 0; obja != (id)v199; id obja = (char *)obja + 1)
          {
            if (*(void *)v250 != v198) {
              objc_enumerationMutation(v197);
            }
            char v32 = *(void **)(*((void *)&v249 + 1) + 8 * (void)obja);
            id v33 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
            std::string v34 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v33, (uint64_t)"dialogId: ", 10);
            v210 = [v32 dialogId];
            PrintStringOrNil(&__p, v210, 1);
            if ((v262 & 0x80u) == 0) {
              v35 = &__p;
            }
            else {
              v35 = __p;
            }
            if ((v262 & 0x80u) == 0) {
              uint64_t v36 = v262;
            }
            else {
              uint64_t v36 = v261;
            }
            char v37 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v34, (uint64_t)v35, v36);
            std::string v38 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v37, (uint64_t)"\n", 1);
            long long v39 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v38, (uint64_t)"    ", 4);
            long long v40 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v39, (uint64_t)"groupName: ", 11);
            v209 = [v32 groupName];
            PrintStringOrNil(&v253, v209, 1);
            if ((v255 & 0x80u) == 0) {
              long long v41 = &v253;
            }
            else {
              long long v41 = v253;
            }
            if ((v255 & 0x80u) == 0) {
              uint64_t v42 = v255;
            }
            else {
              uint64_t v42 = v254;
            }
            std::string v43 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v40, (uint64_t)v41, v42);
            v44 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v43, (uint64_t)"\n", 1);
            v45 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v44, (uint64_t)"    ", 4);
            v46 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v45, (uint64_t)"fullPrint: ", 11);
            v208 = [v32 fullPrint];
            PrintStringOrNil(v247, v208, 1);
            if ((v248 & 0x80u) == 0) {
              v47 = v247;
            }
            else {
              v47 = (NSString *)v247[0];
            }
            if ((v248 & 0x80u) == 0) {
              uint64_t v48 = v248;
            }
            else {
              uint64_t v48 = (uint64_t)v247[1];
            }
            v49 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v46, (uint64_t)v47, v48);
            v50 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v49, (uint64_t)"\n", 1);
            v51 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v50, (uint64_t)"    ", 4);
            v52 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v51, (uint64_t)"fullSpeak: ", 11);
            v207 = [v32 fullSpeak];
            PrintStringOrNil(v245, v207, 1);
            if ((v246 & 0x80u) == 0) {
              v53 = v245;
            }
            else {
              v53 = (NSString *)v245[0];
            }
            if ((v246 & 0x80u) == 0) {
              uint64_t v54 = v246;
            }
            else {
              uint64_t v54 = (uint64_t)v245[1];
            }
            v55 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v52, (uint64_t)v53, v54);
            v56 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v55, (uint64_t)"\n", 1);
            v57 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v56, (uint64_t)"    ", 4);
            v58 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v57, (uint64_t)"supportingPrint: ", 17);
            v206 = [v32 supportingPrint];
            PrintStringOrNil(v243, v206, 1);
            if ((v244 & 0x80u) == 0) {
              v59 = v243;
            }
            else {
              v59 = (NSString *)v243[0];
            }
            if ((v244 & 0x80u) == 0) {
              uint64_t v60 = v244;
            }
            else {
              uint64_t v60 = (uint64_t)v243[1];
            }
            v61 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v58, (uint64_t)v59, v60);
            v62 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v61, (uint64_t)"\n", 1);
            v63 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v62, (uint64_t)"    ", 4);
            v64 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v63, (uint64_t)"supportingSpeak: ", 17);
            v205 = [v32 supportingSpeak];
            PrintStringOrNil(v241, v205, 1);
            if ((v242 & 0x80u) == 0) {
              v65 = v241;
            }
            else {
              v65 = (NSString *)v241[0];
            }
            if ((v242 & 0x80u) == 0) {
              uint64_t v66 = v242;
            }
            else {
              uint64_t v66 = (uint64_t)v241[1];
            }
            v67 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v64, (uint64_t)v65, v66);
            v68 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v67, (uint64_t)"\n", 1);
            v69 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v68, (uint64_t)"    ", 4);
            v70 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v69, (uint64_t)"printOnly: ", 11);
            v204 = [v32 printOnly];
            PrintBoolOrNil(&v238, v204);
            if ((v240 & 0x80u) == 0) {
              isa = &v238;
            }
            else {
              isa = v238.super.super.isa;
            }
            if ((v240 & 0x80u) == 0) {
              uint64_t v72 = v240;
            }
            else {
              uint64_t v72 = v239;
            }
            v73 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v70, (uint64_t)isa, v72);
            v74 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v73, (uint64_t)"\n", 1);
            v75 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v74, (uint64_t)"    ", 4);
            v76 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v75, (uint64_t)"spokenOnly: ", 12);
            v203 = [v32 spokenOnly];
            PrintBoolOrNil(&v235, v203);
            if ((v237 & 0x80u) == 0) {
              v77 = &v235;
            }
            else {
              v77 = v235.super.super.isa;
            }
            if ((v237 & 0x80u) == 0) {
              uint64_t v78 = v237;
            }
            else {
              uint64_t v78 = v236;
            }
            v79 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v76, (uint64_t)v77, v78);
            v80 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v79, (uint64_t)"\n", 1);
            v81 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v80, (uint64_t)"    ", 4);
            v82 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v81, (uint64_t)"unfilteredFullPrint: ", 21);
            v202 = [v32 unfilteredFullPrint];
            PrintStringOrNil(v233, v202, 1);
            if ((v234 & 0x80u) == 0) {
              v83 = v233;
            }
            else {
              v83 = (NSString *)v233[0];
            }
            if ((v234 & 0x80u) == 0) {
              uint64_t v84 = v234;
            }
            else {
              uint64_t v84 = (uint64_t)v233[1];
            }
            v85 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v82, (uint64_t)v83, v84);
            v86 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v85, (uint64_t)"\n", 1);
            v87 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v86, (uint64_t)"    ", 4);
            v88 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v87, (uint64_t)"unfilteredFullSpeak: ", 21);
            v201 = [v32 unfilteredFullSpeak];
            PrintStringOrNil(v231, v201, 1);
            if ((v232 & 0x80u) == 0) {
              v89 = v231;
            }
            else {
              v89 = (NSString *)v231[0];
            }
            if ((v232 & 0x80u) == 0) {
              uint64_t v90 = v232;
            }
            else {
              uint64_t v90 = (uint64_t)v231[1];
            }
            v91 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v88, (uint64_t)v89, v90);
            v92 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v91, (uint64_t)"\n", 1);
            v93 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v92, (uint64_t)"    ", 4);
            v94 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v93, (uint64_t)"unfilteredSupportingPrint: ", 27);
            v95 = [v32 unfilteredSupportingPrint];
            PrintStringOrNil(v229, v95, 1);
            if ((v230 & 0x80u) == 0) {
              v96 = v229;
            }
            else {
              v96 = (NSString *)v229[0];
            }
            if ((v230 & 0x80u) == 0) {
              uint64_t v97 = v230;
            }
            else {
              uint64_t v97 = (uint64_t)v229[1];
            }
            v98 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v94, (uint64_t)v96, v97);
            v99 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v98, (uint64_t)"\n", 1);
            v100 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v99, (uint64_t)"    ", 4);
            v101 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v100, (uint64_t)"unfilteredSupportingSpeak: ", 27);
            v102 = [v32 unfilteredSupportingSpeak];
            PrintStringOrNil(v227, v102, 1);
            if ((v228 & 0x80u) == 0) {
              v103 = v227;
            }
            else {
              v103 = (NSString *)v227[0];
            }
            if ((v228 & 0x80u) == 0) {
              uint64_t v104 = v228;
            }
            else {
              uint64_t v104 = (uint64_t)v227[1];
            }
            v105 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v101, (uint64_t)v103, v104);
            v106 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v105, (uint64_t)"\n", 1);
            v107 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v106, (uint64_t)"    ", 4);
            v108 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v107, (uint64_t)"redactedFullPrint: ", 19);
            v109 = [v32 redactedFullPrint];
            PrintStringOrNil(v225, v109, 1);
            if ((v226 & 0x80u) == 0) {
              v110 = v225;
            }
            else {
              v110 = (NSString *)v225[0];
            }
            if ((v226 & 0x80u) == 0) {
              uint64_t v111 = v226;
            }
            else {
              uint64_t v111 = (uint64_t)v225[1];
            }
            v112 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v108, (uint64_t)v110, v111);
            v113 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v112, (uint64_t)"\n", 1);
            v114 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v113, (uint64_t)"    ", 4);
            v115 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v114, (uint64_t)"redactedFullSpeak: ", 19);
            v116 = [v32 redactedFullSpeak];
            PrintStringOrNil(v223, v116, 1);
            if ((v224 & 0x80u) == 0) {
              v117 = v223;
            }
            else {
              v117 = (NSString *)v223[0];
            }
            if ((v224 & 0x80u) == 0) {
              uint64_t v118 = v224;
            }
            else {
              uint64_t v118 = (uint64_t)v223[1];
            }
            v119 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v115, (uint64_t)v117, v118);
            v120 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v119, (uint64_t)"\n", 1);
            v121 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v120, (uint64_t)"    ", 4);
            v122 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v121, (uint64_t)"redactedSupportingPrint: ", 25);
            v123 = [v32 redactedSupportingPrint];
            PrintStringOrNil(v221, v123, 1);
            if ((v222 & 0x80u) == 0) {
              v124 = v221;
            }
            else {
              v124 = (NSString *)v221[0];
            }
            if ((v222 & 0x80u) == 0) {
              uint64_t v125 = v222;
            }
            else {
              uint64_t v125 = (uint64_t)v221[1];
            }
            v126 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v122, (uint64_t)v124, v125);
            v127 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v126, (uint64_t)"\n", 1);
            v128 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v127, (uint64_t)"    ", 4);
            v129 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v128, (uint64_t)"redactedSupportingSpeak: ", 25);
            v130 = [v32 redactedSupportingSpeak];
            PrintStringOrNil(v219, v130, 1);
            if ((v220 & 0x80u) == 0) {
              v131 = v219;
            }
            else {
              v131 = (NSString *)v219[0];
            }
            if ((v220 & 0x80u) == 0) {
              uint64_t v132 = v220;
            }
            else {
              uint64_t v132 = (uint64_t)v219[1];
            }
            v133 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v129, (uint64_t)v131, v132);
            v134 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v133, (uint64_t)"\n", 1);
            v135 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v134, (uint64_t)"    ", 4);
            v136 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v135, (uint64_t)"isApprovedForGrading: ", 22);
            if ([v32 isApprovedForGrading]) {
              v137 = "true";
            }
            else {
              v137 = "false";
            }
            std::string::basic_string[abi:ne180100]<0>(v217, v137);
            if ((v218 & 0x80u) == 0) {
              v138 = v217;
            }
            else {
              v138 = (void **)v217[0];
            }
            if ((v218 & 0x80u) == 0) {
              uint64_t v139 = v218;
            }
            else {
              uint64_t v139 = (uint64_t)v217[1];
            }
            v140 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v136, (uint64_t)v138, v139);
            v141 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v140, (uint64_t)"\n", 1);
            v142 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v141, (uint64_t)"    ", 4);
            v143 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v142, (uint64_t)"----", 4);
            char v267 = 10;
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v143, (uint64_t)&v267, 1);
            if ((char)v218 < 0) {
              operator delete(v217[0]);
            }
            if ((char)v220 < 0) {
              operator delete(v219[0]);
            }

            if ((char)v222 < 0) {
              operator delete(v221[0]);
            }

            if ((char)v224 < 0) {
              operator delete(v223[0]);
            }

            if ((char)v226 < 0) {
              operator delete(v225[0]);
            }

            if ((char)v228 < 0) {
              operator delete(v227[0]);
            }

            if ((char)v230 < 0) {
              operator delete(v229[0]);
            }

            if ((char)v232 < 0) {
              operator delete(v231[0]);
            }

            if ((char)v234 < 0) {
              operator delete(v233[0]);
            }

            if ((char)v237 < 0) {
              operator delete(v235.super.super.isa);
            }

            if ((char)v240 < 0) {
              operator delete(v238.super.super.isa);
            }

            if ((char)v242 < 0) {
              operator delete(v241[0]);
            }

            if ((char)v244 < 0) {
              operator delete(v243[0]);
            }

            if ((char)v246 < 0) {
              operator delete(v245[0]);
            }

            if ((char)v248 < 0) {
              operator delete(v247[0]);
            }

            if ((char)v255 < 0) {
              operator delete(v253);
            }

            if ((char)v262 < 0) {
              operator delete(__p);
            }
          }
          uint64_t v199 = [v197 countByEnumeratingWithState:&v249 objects:v269 count:16];
        }
        while (v199);
      }
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    v144 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"visual: ", 8);
    v145 = [(PatternExecutionResult *)v200 visual];
    v146 = [v145 base64EncodedStringWithOptions:0];
    PrintStringOrNil(&__p, v146, 0);
    if ((v262 & 0x80u) == 0) {
      v147 = &__p;
    }
    else {
      v147 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v148 = v262;
    }
    else {
      uint64_t v148 = v261;
    }
    v149 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v144, (uint64_t)v147, v148);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v149, (uint64_t)"\n", 1);
    if ((char)v262 < 0) {
      operator delete(__p);
    }

    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    v150 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"responseMode: ", 14);
    v151 = [(PatternExecutionResult *)v200 responseMode];
    PrintStringOrNil(&__p, v151, 1);
    if ((v262 & 0x80u) == 0) {
      v152 = &__p;
    }
    else {
      v152 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v153 = v262;
    }
    else {
      uint64_t v153 = v261;
    }
    v154 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v150, (uint64_t)v152, v153);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v154, (uint64_t)"\n", 1);
    if ((char)v262 < 0) {
      operator delete(__p);
    }

    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    v155 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"printSupportingDialog: ", 23);
    v156 = [(PatternExecutionResult *)v200 printSupportingDialog];
    PrintBoolOrNil((NSNumber *)&__p, v156);
    if ((v262 & 0x80u) == 0) {
      v157 = &__p;
    }
    else {
      v157 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v158 = v262;
    }
    else {
      uint64_t v158 = v261;
    }
    v159 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v155, (uint64_t)v157, v158);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v159, (uint64_t)"\n", 1);
    if ((char)v262 < 0) {
      operator delete(__p);
    }

    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"patternType: ", 13);
    [(PatternExecutionResult *)v200 patternType];
    v160 = (void *)std::ostream::operator<<();
    v161 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v160, (uint64_t)" (", 2);
    unint64_t v162 = [(PatternExecutionResult *)v200 patternType];
    if (v162 > 0x12) {
      v163 = "UNKNOWN_PATTERN";
    }
    else {
      v163 = off_1E651DE40[v162];
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, v163);
    if ((v262 & 0x80u) == 0) {
      v164 = &__p;
    }
    else {
      v164 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v165 = v262;
    }
    else {
      uint64_t v165 = v261;
    }
    v166 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v161, (uint64_t)v164, v165);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v166, (uint64_t)")\n", 2);
    if ((char)v262 < 0) {
      operator delete(__p);
    }
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"\n", 1);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"visualInfo:\n", 12);
    v167 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v167, (uint64_t)"visualLocation: ", 16);
    v168 = [(PatternExecutionResult *)v200 visualInfo];
    [v168 visualLocation];
    v169 = (void *)std::ostream::operator<<();
    v170 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v169, (uint64_t)" (", 2);
    v171 = [(PatternExecutionResult *)v200 visualInfo];
    uint64_t v172 = [v171 visualLocation];
    v173 = "Invalid";
    if (!v172) {
      v173 = "SnippetSpace";
    }
    if (v172 == 1) {
      v174 = "ConversationSpace";
    }
    else {
      v174 = (char *)v173;
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, v174);
    if ((v262 & 0x80u) == 0) {
      v175 = &__p;
    }
    else {
      v175 = __p;
    }
    if ((v262 & 0x80u) == 0) {
      uint64_t v176 = v262;
    }
    else {
      uint64_t v176 = v261;
    }
    v177 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v170, (uint64_t)v175, v176);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v177, (uint64_t)")\n", 2);
    if ((char)v262 < 0) {
      operator delete(__p);
    }

    v178 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v178, (uint64_t)"sectionIds (count = ", 20);
    v179 = [(PatternExecutionResult *)v200 visualInfo];
    v180 = [v179 sectionIds];
    [v180 count];
    v181 = (void *)std::ostream::operator<<();
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v181, (uint64_t)"):\n", 3);

    v182 = [(PatternExecutionResult *)v200 visualInfo];
    v183 = [v182 sectionIds];
    BOOL v184 = v183 == 0;

    if (!v184)
    {
      long long v215 = 0u;
      long long v216 = 0u;
      long long v213 = 0u;
      long long v214 = 0u;
      v185 = [(PatternExecutionResult *)v200 visualInfo];
      v186 = [v185 sectionIds];

      uint64_t v187 = [v186 countByEnumeratingWithState:&v213 objects:v268 count:16];
      if (v187)
      {
        uint64_t v188 = *(void *)v214;
        do
        {
          for (uint64_t i = 0; i != v187; ++i)
          {
            if (*(void *)v214 != v188) {
              objc_enumerationMutation(v186);
            }
            v190 = *(void **)(*((void *)&v213 + 1) + 8 * i);
            v191 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"    ", 4);
            v192 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v191, (uint64_t)"    ", 4);
            PrintStringOrNil(&__p, v190, 1);
            if ((v262 & 0x80u) == 0) {
              v193 = &__p;
            }
            else {
              v193 = __p;
            }
            if ((v262 & 0x80u) == 0) {
              uint64_t v194 = v262;
            }
            else {
              uint64_t v194 = v261;
            }
            v195 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v192, (uint64_t)v193, v194);
            std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v195, (uint64_t)"\n", 1);
            if ((char)v262 < 0) {
              operator delete(__p);
            }
          }
          uint64_t v187 = [v186 countByEnumeratingWithState:&v213 objects:v268 count:16];
        }
        while (v187);
      }
    }
  }
  else
  {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v264, (uint64_t)"nil", 3);
  }
  std::stringbuf::str();
  siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 0);
  if ((char)v262 < 0) {
    operator delete(__p);
  }
  v263[0] = *MEMORY[0x1E4FBA408];
  uint64_t v196 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v263 + *(void *)(v263[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v264[0] = v196;
  v264[1] = MEMORY[0x1E4FBA470] + 16;
  if (v265 < 0) {
    operator delete((void *)v264[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x1C8796CC0](&v266);
}

void sub_1C5D9C0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&STACK[0x2F0]);
  _Unwind_Resume(a1);
}

id NSErrorFromString(uint64_t *a1, uint64_t *a2)
{
  v18[2] = *MEMORY[0x1E4F143B8];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t v3 = a2[1];
    if (v3 == 7)
    {
      if (*(_DWORD *)*a2 != 1667462515 || *(_DWORD *)(*a2 + 3) != 1936942435) {
        goto LABEL_17;
      }
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v3 = *((unsigned __int8 *)a2 + 23);
    if (v3 == 7 && *(_DWORD *)a2 == 1667462515 && *(_DWORD *)((char *)a2 + 3) == 1936942435) {
      goto LABEL_15;
    }
  }
  if (v3)
  {
LABEL_17:
    if (*((char *)a1 + 23) >= 0) {
      std::string::size_type v7 = a1;
    }
    else {
      std::string::size_type v7 = (uint64_t *)*a1;
    }
    id v8 = [NSString stringWithUTF8String:v7];
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v9 = a2;
    }
    else {
      uint64_t v9 = (uint64_t *)*a2;
    }
    BOOL v10 = [NSString stringWithUTF8String:v9];
    v17[0] = *MEMORY[0x1E4F28568];
    uint64_t v11 = [MEMORY[0x1E4F28B50] mainBundle];
    uint64_t v12 = [v11 localizedStringForKey:v8 value:&stru_1F2127290 table:0];
    v18[0] = v12;
    v17[1] = *MEMORY[0x1E4F28588];
    id v13 = [MEMORY[0x1E4F28B50] mainBundle];
    BOOL v14 = [v13 localizedStringForKey:v10 value:&stru_1F2127290 table:0];
    v18[1] = v14;
    v15 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v18 forKeys:v17 count:2];

    id v6 = [MEMORY[0x1E4F28C58] errorWithDomain:@"com.apple.siri.DialogEngine" code:0 userInfo:v15];

    goto LABEL_24;
  }
LABEL_15:
  id v6 = 0;
LABEL_24:
  return v6;
}

void sub_1C5D9C850(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void VariableFromNSDictionary(void *a1, const std::string *a2, void *a3)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  *a1 = 0;
  a1[1] = 0;
  id v16 = v5;
  if (v5)
  {
    std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableObject,std::allocator<siri::dialogengine::VariableObject>,std::string const&,void>(&__p, a2);
    long long v6 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_OWORD *)a1 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v7 = v16;
    uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (!v8) {
      goto LABEL_20;
    }
    uint64_t v9 = *(void *)v22;
    while (1)
    {
      for (uint64_t i = 0; i != v8; ++i)
      {
        if (*(void *)v22 != v9) {
          objc_enumerationMutation(v7);
        }
        uint64_t v11 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0)
        {
          siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Pattern parameter dictionary has a non-string key", v12);
          continue;
        }
        id v13 = v11;
        std::string::basic_string[abi:ne180100]<0>(&__p, (char *)[v13 UTF8String]);
        BOOL v14 = [v7 objectForKey:v13];
        VariableFromNSObject((uint64_t)&v18, &__p, v14);
        v15 = v19;
        if (v18)
        {
          v17[0] = v18;
          v17[1] = v19;
          if (v19) {
            atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          siri::dialogengine::VariableObject::AddProperty(v6, v17);
          if (!v15) {
            goto LABEL_16;
          }
          std::__shared_weak_count::__release_shared[abi:ne180100](v15);
        }
        else if (!v19)
        {
          goto LABEL_16;
        }
        std::__shared_weak_count::__release_shared[abi:ne180100](v15);
LABEL_16:

        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v25 count:16];
      if (!v8)
      {
LABEL_20:

        break;
      }
    }
  }
}

void sub_1C5D9CAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }

  _Unwind_Resume(a1);
}

uint64_t PatternTypeFromName(uint64_t a1)
{
  siri::dialogengine::StringToLower(a1, (uint64_t)&__p);
  if ((v29 & 0x80000000) == 0)
  {
    uint64_t p_p = (uint64_t *)&__p;
    switch(v29)
    {
      case 16:
        if (__p != (void *)0x2E6E726574746170 || *(void *)v28 != 0x746573656C626174) {
          goto LABEL_96;
        }
        goto LABEL_15;
      case 17:
        if (__p != (void *)0x2E6E726574746170 || *(void *)v28 != 0x6573746C75736572 || v28[8] != 116) {
          goto LABEL_96;
        }
        goto LABEL_60;
      case 20:
        if (__p != (void *)0x2E6E726574746170
          || *(void *)v28 != 0x6572656C706D6973
          || *(_DWORD *)&v28[8] != 1953265011)
        {
          goto LABEL_96;
        }
        goto LABEL_69;
      case 21:
        if (__p != (void *)0x2E6E726574746170
          || *(void *)v28 != 0x7373736563637573
          || *(void *)&v28[5] != 0x7375746174737373)
        {
          goto LABEL_96;
        }
        goto LABEL_78;
      case 22:
        if (__p != (void *)0x2E6E726574746170
          || *(void *)v28 != 0x64656C6961746564
          || *(void *)&v28[6] != 0x746C757365726465)
        {
          goto LABEL_96;
        }
        goto LABEL_87;
      case 23:
        goto LABEL_89;
      default:
        goto LABEL_96;
    }
  }
  switch(*(void *)v28)
  {
    case 0x10:
      if (*(void *)__p != 0x2E6E726574746170 || *((void *)__p + 1) != 0x746573656C626174) {
        goto LABEL_96;
      }
LABEL_15:
      uint64_t v4 = 2;
      break;
    case 0x11:
      if (*(void *)__p != 0x2E6E726574746170
        || *((void *)__p + 1) != 0x6573746C75736572
        || *((unsigned char *)__p + 16) != 116)
      {
        goto LABEL_96;
      }
LABEL_60:
      uint64_t v4 = 1;
      break;
    case 0x14:
      if (*(void *)__p != 0x2E6E726574746170
        || *((void *)__p + 1) != 0x6572656C706D6973
        || *((_DWORD *)__p + 4) != 1953265011)
      {
        goto LABEL_96;
      }
LABEL_69:
      uint64_t v4 = 3;
      break;
    case 0x15:
      if (*(void *)__p != 0x2E6E726574746170
        || *((void *)__p + 1) != 0x7373736563637573
        || *(void *)((char *)__p + 13) != 0x7375746174737373)
      {
        goto LABEL_96;
      }
LABEL_78:
      uint64_t v4 = 5;
      break;
    case 0x16:
      if (*(void *)__p != 0x2E6E726574746170
        || *((void *)__p + 1) != 0x64656C6961746564
        || *(void *)((char *)__p + 14) != 0x746C757365726465)
      {
        goto LABEL_96;
      }
LABEL_87:
      uint64_t v4 = 4;
      break;
    case 0x17:
      uint64_t p_p = (uint64_t *)__p;
LABEL_89:
      uint64_t v21 = *p_p;
      uint64_t v22 = p_p[1];
      uint64_t v23 = *(uint64_t *)((char *)p_p + 15);
      if (v21 != 0x2E6E726574746170 || v22 != 0x656C6C65636E6163 || v23 != 0x7375746174736465) {
        goto LABEL_96;
      }
      uint64_t v4 = 6;
      break;
    default:
LABEL_96:
      if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.errorstatus"))
      {
        uint64_t v4 = 7;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.progresssstatus"))
      {
        uint64_t v4 = 8;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.disambiguationclarification"))
      {
        uint64_t v4 = 9;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.openendedclarification"))
      {
        uint64_t v4 = 10;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.yesnoclarification"))
      {
        uint64_t v4 = 11;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.simpledisambiguationclarification"))
      {
        uint64_t v4 = 12;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.detaileddisambiguationclarification"))
      {
        uint64_t v4 = 13;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "pattern.multilevelresultset"))
      {
        uint64_t v4 = 14;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "prompt.DetailedDisambiguationPrompt"))
      {
        uint64_t v4 = 15;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "prompt.OpenEndedPrompt"))
      {
        uint64_t v4 = 16;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "prompt.SimpleDisambiguationPrompt"))
      {
        uint64_t v4 = 17;
      }
      else if (std::operator==[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>(&__p, "prompt.YesNoPrompt"))
      {
        uint64_t v4 = 18;
      }
      else
      {
        uint64_t v4 = 0;
      }
      break;
  }
  if (v29 < 0) {
    operator delete(__p);
  }
  return v4;
}

uint64_t std::__split_buffer<CATResult * {__strong}>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Response_Section>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    id v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      id v13 = (const SnippetUI::Response_Section **)(v6 + 8);
      BOOL v14 = (SnippetUI::Response_Section **)v7;
      do
      {
        id v16 = *v13++;
        v15 = v16;
        long long v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Section>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      uint64_t v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (SnippetUI::Response_Section **)((char *)v8 + v20);
      uint64_t v22 = (const SnippetUI::Response_Section **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        long long v24 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Response_Section>(v18);
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Section>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5D9D230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<SnippetUI::Response_Section>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5D9D308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Response_Component>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    char v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      id v13 = (const SnippetUI::Response_Component **)(v6 + 8);
      BOOL v14 = (SnippetUI::Response_Component **)v7;
      do
      {
        id v16 = *v13++;
        v15 = v16;
        long long v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Component>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      uint64_t v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (SnippetUI::Response_Component **)((char *)v8 + v20);
      uint64_t v22 = (const SnippetUI::Response_Component **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        long long v24 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Response_Component>(v18);
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Component>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5D9D480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void std::vector<CATResult * {__strong}>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (void *)*((void *)v4 - 1);
        v4 -= 8;
      }
      while (v4 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Component>::Merge(const SnippetUI::Response_Component *a1, SnippetUI::Response_Component *a2)
{
}

void google::protobuf::internal::GenericTypeHandler<SnippetUI::Response_Section>::Merge(const SnippetUI::Response_Section *a1, SnippetUI::Response_Section *a2)
{
}

void VariableToNSObjectVisitor::Visit(VariableToNSObjectVisitor *this, siri::dialogengine::VariableString *a2)
{
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  int v5 = (void *)*((void *)this + 2);
  *((void *)this + 2) = 0;

  VariableToNSObjectVisitor::GetKeyFromVarName(this, a2);
  uint64_t v6 = NSString;
  if (*((char *)a2 + 95) < 0) {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)a2 + 9), *((void *)a2 + 10));
  }
  else {
    std::string __p = *(std::string *)((unsigned char *)a2 + 3);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t p_p = &__p;
  }
  else {
    uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v8 = objc_msgSend(v6, "stringWithUTF8String:", p_p, *(_OWORD *)&__p.__r_.__value_.__l.__data_, __p.__r_.__value_.__r.__words[2]);
  uint64_t v9 = (void *)*((void *)this + 2);
  *((void *)this + 2) = v8;

  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C5D9D600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void VariableToNSObjectVisitor::GetKeyFromVarName(VariableToNSObjectVisitor *this, siri::dialogengine::Variable *a2)
{
  uint64_t v3 = NSString;
  if (*((char *)a2 + 31) < 0) {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)a2 + 1), *((void *)a2 + 2));
  }
  else {
    std::string __p = *(std::string *)((char *)a2 + 8);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t p_p = &__p;
  }
  else {
    uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  uint64_t v5 = objc_msgSend(v3, "stringWithUTF8String:", p_p, *(_OWORD *)&__p.__r_.__value_.__l.__data_, __p.__r_.__value_.__r.__words[2]);
  uint64_t v6 = (void *)*((void *)this + 1);
  *((void *)this + 1) = v5;

  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C5D9D6B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void VariableToNSObjectVisitor::Visit(VariableToNSObjectVisitor *this, const void ***a2)
{
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  uint64_t v5 = (void *)*((void *)this + 2);
  *((void *)this + 2) = 0;

  VariableToNSObjectVisitor::GetKeyFromVarName(this, (siri::dialogengine::Variable *)a2);
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  id v19 = 0;
  id v20 = 0;
  uint64_t v18 = &unk_1F211B740;
  std::map<std::string,std::shared_ptr<siri::dialogengine::Variable>>::map[abi:ne180100]((uint64_t)&v16, a2 + 9);
  char v7 = v16;
  if (v16 != v17)
  {
    do
    {
      uint64_t v8 = v7[7];
      if (v8)
      {
        (*(void (**)(uint64_t, void **))(*(void *)v8 + 16))(v8, &v18);
        id v9 = v20;
        id v10 = v19;
        [v6 setObject:v9 forKey:v10];
      }
      int v11 = (void *)v7[1];
      if (v11)
      {
        do
        {
          uint64_t v12 = (void **)v11;
          int v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          uint64_t v12 = (void **)v7[2];
          BOOL v13 = *v12 == v7;
          char v7 = v12;
        }
        while (!v13);
      }
      char v7 = v12;
    }
    while (v12 != v17);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v17[0]);
  BOOL v14 = (void *)*((void *)this + 2);
  *((void *)this + 2) = v6;
  id v15 = v6;
}

void sub_1C5D9D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t VariableToNSObjectVisitor::Visit(VariableToNSObjectVisitor *this, siri::dialogengine::VariableNumber *a2)
{
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  uint64_t v5 = (void *)*((void *)this + 2);
  *((void *)this + 2) = 0;

  VariableToNSObjectVisitor::GetKeyFromVarName(this, a2);
  *((void *)this + 2) = [NSNumber numberWithDouble:*((double *)a2 + 9)];
  return MEMORY[0x1F41817F8]();
}

uint64_t VariableToNSObjectVisitor::Visit(VariableToNSObjectVisitor *this, siri::dialogengine::VariableBoolean *a2)
{
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  uint64_t v5 = (void *)*((void *)this + 2);
  *((void *)this + 2) = 0;

  VariableToNSObjectVisitor::GetKeyFromVarName(this, a2);
  *((void *)this + 2) = [NSNumber numberWithBool:*((unsigned __int8 *)a2 + 66)];
  return MEMORY[0x1F41817F8]();
}

void VariableToNSObjectVisitor::Visit(VariableToNSObjectVisitor *this, siri::dialogengine::VariableArray *a2)
{
  uint64_t v4 = (void *)*((void *)this + 1);
  *((void *)this + 1) = 0;

  uint64_t v5 = (void *)*((void *)this + 2);
  *((void *)this + 2) = 0;

  VariableToNSObjectVisitor::GetKeyFromVarName(this, a2);
  id v6 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unint64_t v7 = 0;
  id v15 = 0;
  id v16 = 0;
  BOOL v14 = &unk_1F211B740;
  while (1)
  {
    uint64_t v8 = *((void *)a2 + 9);
    if (v7 >= (*((void *)a2 + 10) - v8) >> 4) {
      break;
    }
    __n128 v9 = *(__n128 *)(v8 + 16 * v7);
    id v10 = *(std::__shared_weak_count **)(v8 + 16 * v7 + 8);
    if (v10) {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v9.n128_u64[0]) {
      (*(void (**)(unint64_t, void **, __n128))(*(void *)v9.n128_u64[0] + 16))(v9.n128_u64[0], &v14, v9);
    }
    id v11 = v16;
    [v6 addObject:v11];

    if (v10) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v10);
    }
    ++v7;
  }
  uint64_t v12 = (void *)*((void *)this + 2);
  *((void *)this + 2) = v6;
  id v13 = v6;
}

void sub_1C5D9DAC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }

  _Unwind_Resume(a1);
}

void VariableToNSObjectVisitor::~VariableToNSObjectVisitor(id *this)
{
  JUMPOUT(0x1C8796D70);
}

{
}

void std::__shared_ptr_emplace<siri::dialogengine::PatternContext>::__on_zero_shared(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 104);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(a1 + 80));
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(a1 + 56));
  uint64_t v3 = *(void **)(a1 + 32);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v3);
}

void std::__shared_ptr_emplace<siri::dialogengine::PatternContext>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211B7A0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::PatternContext>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211B7A0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void *std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableObject,std::allocator<siri::dialogengine::VariableObject>,std::string const&,void>(void *a1, const std::string *a2)
{
  uint64_t v4 = operator new(0x78uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = &unk_1F2123A90;
  result = siri::dialogengine::VariableObject::VariableObject(v4 + 3, a2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C5D9DCB8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void VariableFromNSObject(uint64_t a1, const std::string *a2, void *a3)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  id v5 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      id v9 = v5;
      objc_getClass("__NSCFBoolean");
      if (objc_opt_isKindOfClass())
      {
        char v10 = [v9 BOOLValue];
        id v11 = operator new(0x60uLL);
        v11[1] = 0;
        void v11[2] = 0;
        *id v11 = &unk_1F2126A20;
        uint64_t v12 = siri::dialogengine::VariableBoolean::VariableBoolean((uint64_t)(v11 + 3), a2, v10);
      }
      else
      {
        [v9 doubleValue];
        double v14 = v13;
        id v11 = operator new(0x68uLL);
        v11[1] = 0;
        void v11[2] = 0;
        *id v11 = &unk_1F2126A88;
        uint64_t v12 = siri::dialogengine::VariableNumber::VariableNumber((uint64_t)(v11 + 3), a2, v14);
      }
      *(void *)&long long v15 = v12;
      *((void *)&v15 + 1) = v11;
      *(_OWORD *)a1 = v15;

      goto LABEL_13;
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      VariableFromNSDictionary(__p, a2, v5);
      long long v8 = *(_OWORD *)__p;
      goto LABEL_5;
    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
      std::operator+<char>();
      siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
      if (v32 < 0) {
        operator delete(__p[0]);
      }
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      goto LABEL_13;
    }
    std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableArray,std::allocator<siri::dialogengine::VariableArray>,std::string const&,void>(&v30, a2);
    long long v28 = 0u;
    long long v29 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    id v16 = v5;
    uint64_t v17 = [v16 countByEnumeratingWithState:&v26 objects:v33 count:16];
    if (!v17) {
      goto LABEL_31;
    }
    uint64_t v18 = *(void *)v27;
    id v19 = (void *)v30;
LABEL_17:
    uint64_t v20 = 0;
    while (1)
    {
      if (*(void *)v27 != v18) {
        objc_enumerationMutation(v16);
      }
      uint64_t v21 = *(void *)(*((void *)&v26 + 1) + 8 * v20);
      std::string::basic_string[abi:ne180100]<0>(__p, "");
      VariableFromNSObject(&v24, __p, v21);
      if (v32 < 0) {
        operator delete(__p[0]);
      }
      uint64_t v22 = v25;
      if (v24) {
        break;
      }
      if (v25) {
        goto LABEL_28;
      }
LABEL_29:
      if (v17 == ++v20)
      {
        uint64_t v17 = [v16 countByEnumeratingWithState:&v26 objects:v33 count:16];
        if (!v17)
        {
LABEL_31:

          long long v8 = v30;
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    v23[0] = v24;
    v23[1] = v25;
    if (v25) {
      atomic_fetch_add_explicit(&v25->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    siri::dialogengine::VariableArray::AddItem(v19, v23);
    if (!v22) {
      goto LABEL_29;
    }
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
LABEL_28:
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
    goto LABEL_29;
  }
  id v6 = (char *)[v5 UTF8String];
  unint64_t v7 = operator new(0x108uLL);
  v7[1] = 0;
  v7[2] = 0;
  *unint64_t v7 = &unk_1F2126AF0;
  std::string::basic_string[abi:ne180100]<0>(__p, v6);
  siri::dialogengine::VariableString::VariableString((uint64_t)(v7 + 3), a2, (uint64_t)__p);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  *(void *)&long long v8 = v7 + 3;
  *((void *)&v8 + 1) = v7;
LABEL_5:
  *(_OWORD *)a1 = v8;
LABEL_13:
}

void sub_1C5D9E06C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableArray,std::allocator<siri::dialogengine::VariableArray>,std::string const&,void>(void *a1, const std::string *a2)
{
  uint64_t v4 = operator new(0x78uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = &unk_1F2123AE0;
  result = siri::dialogengine::VariableArray::VariableArray(v4 + 3, a2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1C5D9E1BC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::VariableArray>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::VariableArray>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2123AE0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::VariableArray>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2123AE0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::VariableNumber>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::VariableNumber>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2126A88;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::VariableNumber>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2126A88;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void PrintStringOrNil(NSString *a1, void *a2, int a3)
{
  id v5 = a2;
  if (v5)
  {
    if (a3)
    {
      std::string::basic_string[abi:ne180100]<0>(&v10, (char *)[v5 UTF8String]);
      id v6 = std::string::insert(&v10, 0, "[");
      long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
      v11.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v11.__r_.__value_.__l.__data_ = v7;
      v6->__r_.__value_.__l.__size_ = 0;
      v6->__r_.__value_.__r.__words[2] = 0;
      v6->__r_.__value_.__r.__words[0] = 0;
      long long v8 = std::string::append(&v11, "]");
      long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      a1[2] = (NSString)v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)a1 = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v11.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v10.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(a1, (char *)[v5 UTF8String]);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a1, "nil");
  }
}

void sub_1C5D9E40C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }

  _Unwind_Resume(a1);
}

void PrintBoolOrNil(NSNumber *a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (v3)
  {
    if ([v3 BOOLValue]) {
      uint64_t v4 = "true";
    }
    else {
      uint64_t v4 = "false";
    }
  }
  else
  {
    uint64_t v4 = "nil";
  }
  std::string::basic_string[abi:ne180100]<0>(a1, v4);
}

void sub_1C5D9E4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C5D9E73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }

  _Unwind_Resume(a1);
}

void sub_1C5D9EC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0) {
    operator delete(__p);
  }

  if (a25 < 0) {
    operator delete(a20);
  }

  _Unwind_Resume(a1);
}

id PatternLoader(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x1F4188790](a1);
  id v3 = v2;
  uint64_t v5 = v4;
  long long v7 = v6;
  id v8 = v1;
  id v9 = v7;
  std::string v10 = v3;
  id v11 = (id)objc_opt_new();
  if (v8)
  {
    id v12 = +[DEExecutor bundleTemplateDir:v8];
    std::string::basic_string[abi:ne180100]<0>(__p, (char *)[v12 UTF8String]);
    siri::dialogengine::GetTemplateDirs((uint64_t)__p, +[CATCommonApi UpdatesEnabled:v5], (uint64_t)v95);
    if (v109 < 0) {
      operator delete(__p[0]);
    }

    std::string::basic_string[abi:ne180100]<0>(v93, (char *)[v9 UTF8String]);
    siri::dialogengine::Context::Context((siri::dialogengine::Context *)v91, v95);
    v86 = v10;
    siri::dialogengine::PatternFile::LoadFromId((uint64_t)v91, (uint64_t)v93, 1, &v89);
    uint64_t v13 = v89;
    if (v89)
    {
      double v14 = v90;
      if (v90) {
        atomic_fetch_add_explicit(&v90->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      siri::dialogengine::Context::Context((siri::dialogengine::Context *)__p);
      long long v15 = objc_opt_new();
      id v16 = NSString;
      v87 = v15;
      if (*(char *)(v13 + 87) < 0) {
        std::string::__init_copy_ctor_external(&v104, *(const std::string::value_type **)(v13 + 64), *(void *)(v13 + 72));
      }
      else {
        std::string v104 = *(std::string *)(v13 + 64);
      }
      if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v20 = &v104;
      }
      else {
        uint64_t v20 = (std::string *)v104.__r_.__value_.__r.__words[0];
      }
      uint64_t v21 = [v16 stringWithUTF8String:v20];
      [v15 setPatternId:v21];

      if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v104.__r_.__value_.__l.__data_);
      }
      if (*(char *)(v13 + 135) < 0) {
        std::string::__init_copy_ctor_external(&v104, *(const std::string::value_type **)(v13 + 112), *(void *)(v13 + 120));
      }
      else {
        std::string v104 = *(std::string *)(v13 + 112);
      }
      [v15 setPatternType:PatternTypeFromName((uint64_t)&v104)];
      if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v104.__r_.__value_.__l.__data_);
      }
      v88 = objc_opt_new();
      v85 = v14;
      uint64_t v84 = v11;
      std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)&v106, (const void ***)(v13 + 160));
      uint64_t v22 = v106;
      if (v106 != (long long *)v107)
      {
        do
        {
          std::pair<std::string const,std::string>::pair[abi:ne180100](&v104, v22 + 2);
          if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&v103, v104.__r_.__value_.__l.__data_, v104.__r_.__value_.__l.__size_);
          }
          else {
            std::string v103 = v104;
          }
          if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&v102, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
          }
          else {
            std::string v102 = __s;
          }
          std::string::size_type size = HIBYTE(v103.__r_.__value_.__r.__words[2]);
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type size = v103.__r_.__value_.__l.__size_;
          }
          if (!size) {
            goto LABEL_125;
          }
          std::string::basic_string[abi:ne180100]<0>(&__s1, "");
          std::string::basic_string[abi:ne180100]<0>(&v98, "");
          siri::dialogengine::ResolveValue((uint64_t **)__p, (const void **)&__s.__r_.__value_.__l.__data_, 1, (uint64_t)&__s1, (uint64_t)&v98, (uint64_t *)&lpsrc);
          if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v98.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__s1.__r_.__value_.__l.__data_);
          }
          if (lpsrc)
          {
            if (*((char *)lpsrc + 55) < 0) {
              std::string::__init_copy_ctor_external(&__s1, *((const std::string::value_type **)lpsrc + 4), *((void *)lpsrc + 5));
            }
            else {
              std::string __s1 = *(std::string *)((char *)lpsrc + 32);
            }
            size_t v27 = strlen(siri::dialogengine::TYPE_STRING);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
            {
              if (v27 == __s1.__r_.__value_.__l.__size_)
              {
                if (v27 == -1) {
                  std::string::__throw_out_of_range[abi:ne180100]();
                }
                long long v28 = (void *)__s1.__r_.__value_.__r.__words[0];
                int v29 = memcmp(__s1.__r_.__value_.__l.__data_, siri::dialogengine::TYPE_STRING, v27);
                operator delete(v28);
                if (!v29)
                {
LABEL_58:
                  long long v30 = (char *)lpsrc;
                  if (lpsrc
                  {
                    char v31 = v101;
                    if (v101) {
                      atomic_fetch_add_explicit(&v101->__shared_owners_, 1uLL, memory_order_relaxed);
                    }
                  }
                  else
                  {
                    char v31 = 0;
                  }
                  v50 = NSString;
                  if (v30[95] < 0) {
                    std::string::__init_copy_ctor_external(&__s1, *((const std::string::value_type **)v30 + 9), *((void *)v30 + 10));
                  }
                  else {
                    std::string __s1 = *(std::string *)(v30 + 3);
                  }
                  if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    p_s1 = &__s1;
                  }
                  else {
                    p_s1 = (std::string *)__s1.__r_.__value_.__r.__words[0];
                  }
                  long long v41 = [v50 stringWithUTF8String:p_s1];
                  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(__s1.__r_.__value_.__l.__data_);
                  }
                  goto LABEL_116;
                }
              }
              else
              {
                operator delete(__s1.__r_.__value_.__l.__data_);
              }
            }
            else if (v27 == HIBYTE(__s1.__r_.__value_.__r.__words[2]) {
                   && !memcmp(&__s1, siri::dialogengine::TYPE_STRING, v27))
            }
            {
              goto LABEL_58;
            }
            if (*((char *)lpsrc + 55) < 0) {
              std::string::__init_copy_ctor_external(&__s1, *((const std::string::value_type **)lpsrc + 4), *((void *)lpsrc + 5));
            }
            else {
              std::string __s1 = *(std::string *)((char *)lpsrc + 32);
            }
            size_t v32 = strlen(siri::dialogengine::TYPE_NUMBER);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
            {
              if (v32 == __s1.__r_.__value_.__l.__size_)
              {
                if (v32 == -1) {
                  std::string::__throw_out_of_range[abi:ne180100]();
                }
                id v33 = (void *)__s1.__r_.__value_.__r.__words[0];
                int v34 = memcmp(__s1.__r_.__value_.__l.__data_, siri::dialogengine::TYPE_NUMBER, v32);
                operator delete(v33);
                if (!v34)
                {
LABEL_73:
                  char v31 = v101;
                  if (v101) {
                    atomic_fetch_add_explicit(&v101->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                  uint64_t v36 = [NSNumber numberWithDouble:v35[9]];
LABEL_90:
                  long long v41 = (void *)v36;
LABEL_116:
                  if (v31) {
                    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
                  }
                  if (v41)
                  {
                    if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                      v52 = &v103;
                    }
                    else {
                      v52 = (std::string *)v103.__r_.__value_.__r.__words[0];
                    }
                    v53 = [NSString stringWithUTF8String:v52];
                    [v88 setObject:v41 forKey:v53];
                  }
                  goto LABEL_123;
                }
              }
              else
              {
                operator delete(__s1.__r_.__value_.__l.__data_);
              }
            }
            else if (v32 == HIBYTE(__s1.__r_.__value_.__r.__words[2]) {
                   && !memcmp(&__s1, siri::dialogengine::TYPE_NUMBER, v32))
            }
            {
              goto LABEL_73;
            }
            if (*((char *)lpsrc + 55) < 0) {
              std::string::__init_copy_ctor_external(&__s1, *((const std::string::value_type **)lpsrc + 4), *((void *)lpsrc + 5));
            }
            else {
              std::string __s1 = *(std::string *)((char *)lpsrc + 32);
            }
            size_t v37 = strlen(siri::dialogengine::TYPE_BOOLEAN);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0)
            {
              if (v37 == __s1.__r_.__value_.__l.__size_)
              {
                if (v37 == -1) {
                  std::string::__throw_out_of_range[abi:ne180100]();
                }
                std::string v38 = (void *)__s1.__r_.__value_.__r.__words[0];
                int v39 = memcmp(__s1.__r_.__value_.__l.__data_, siri::dialogengine::TYPE_BOOLEAN, v37);
                operator delete(v38);
                if (!v39)
                {
LABEL_87:
                  char v31 = v101;
                  if (v101) {
                    atomic_fetch_add_explicit(&v101->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                  uint64_t v36 = [NSNumber numberWithBool:v40[66]];
                  goto LABEL_90;
                }
              }
              else
              {
                operator delete(__s1.__r_.__value_.__l.__data_);
              }
            }
            else if (v37 == HIBYTE(__s1.__r_.__value_.__r.__words[2]) {
                   && !memcmp(&__s1, siri::dialogengine::TYPE_BOOLEAN, v37))
            }
            {
              goto LABEL_87;
            }
            std::operator+<char>();
            uint64_t v42 = std::string::append(&v96, "': with value: '");
            long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
            v97.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v43;
            v42->__r_.__value_.__l.__size_ = 0;
            v42->__r_.__value_.__r.__words[2] = 0;
            v42->__r_.__value_.__r.__words[0] = 0;
            if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v44 = &v102;
            }
            else {
              v44 = (std::string *)v102.__r_.__value_.__r.__words[0];
            }
            if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v45 = HIBYTE(v102.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v45 = v102.__r_.__value_.__l.__size_;
            }
            v46 = std::string::append(&v97, (const std::string::value_type *)v44, v45);
            long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
            v98.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v47;
            v46->__r_.__value_.__l.__size_ = 0;
            v46->__r_.__value_.__r.__words[2] = 0;
            v46->__r_.__value_.__r.__words[0] = 0;
            uint64_t v48 = std::string::append(&v98, "'");
            long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
            __s1.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v49;
            v48->__r_.__value_.__l.__size_ = 0;
            v48->__r_.__value_.__r.__words[2] = 0;
            v48->__r_.__value_.__r.__words[0] = 0;
            siri::dialogengine::Log::LogWithLevel((uint64_t)&__s1, 3u);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s1.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v98.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v97.__r_.__value_.__l.__data_);
            }
            if ((SHIBYTE(v96.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_123;
            }
            long long v26 = (void *)v96.__r_.__value_.__r.__words[0];
          }
          else
          {
            std::operator+<char>();
            uint64_t v24 = std::string::append(&v98, "'");
            long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
            __s1.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v25;
            v24->__r_.__value_.__l.__size_ = 0;
            v24->__r_.__value_.__r.__words[2] = 0;
            v24->__r_.__value_.__r.__words[0] = 0;
            siri::dialogengine::Log::LogWithLevel((uint64_t)&__s1, 3u);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s1.__r_.__value_.__l.__data_);
            }
            if ((SHIBYTE(v98.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_123;
            }
            long long v26 = (void *)v98.__r_.__value_.__r.__words[0];
          }
          operator delete(v26);
LABEL_123:
          if (v101) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v101);
          }
LABEL_125:
          if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v102.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v103.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__s.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v104.__r_.__value_.__l.__data_);
          }
          uint64_t v54 = (long long *)*((void *)v22 + 1);
          if (v54)
          {
            do
            {
              v55 = v54;
              uint64_t v54 = *(long long **)v54;
            }
            while (v54);
          }
          else
          {
            do
            {
              v55 = (long long *)*((void *)v22 + 2);
              BOOL v56 = *(void *)v55 == (void)v22;
              uint64_t v22 = v55;
            }
            while (!v56);
          }
          uint64_t v22 = v55;
        }
        while (v55 != (long long *)v107);
      }
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v107[0]);
      [v87 setSettings:v88];
      v57 = objc_opt_new();
      std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)&v106, (const void ***)(v13 + 184));
      v58 = v106;
      if (v106 != (long long *)v107)
      {
        do
        {
          std::pair<std::string const,std::string>::pair[abi:ne180100](&v104, v58 + 2);
          if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v59 = &v104;
          }
          else {
            v59 = (std::string *)v104.__r_.__value_.__r.__words[0];
          }
          uint64_t v60 = [NSString stringWithUTF8String:v59];
          if ((__s.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_s = &__s;
          }
          else {
            p_s = (std::string *)__s.__r_.__value_.__r.__words[0];
          }
          v62 = [NSString stringWithUTF8String:p_s];
          [v57 setObject:v62 forKey:v60];

          if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__s.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v104.__r_.__value_.__l.__data_);
          }
          v63 = (long long *)*((void *)v58 + 1);
          if (v63)
          {
            do
            {
              v64 = v63;
              v63 = *(long long **)v63;
            }
            while (v63);
          }
          else
          {
            do
            {
              v64 = (long long *)*((void *)v58 + 2);
              BOOL v56 = *(void *)v64 == (void)v58;
              v58 = v64;
            }
            while (!v56);
          }
          v58 = v64;
        }
        while (v64 != (long long *)v107);
      }
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v107[0]);
      [v87 setMeta:v57];
      v65 = objc_opt_new();
      std::map<std::string,std::shared_ptr<siri::dialogengine::PatternGroup>>::map[abi:ne180100]((uint64_t)&v106, (const void ***)(v13 + 208));
      uint64_t v66 = v106;
      if (v106 != (long long *)v107)
      {
        do
        {
          std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::pair[abi:ne180100](&v104, v66 + 2);
          v67 = objc_opt_new();
          v68 = NSString;
          if (*(char *)(__s.__r_.__value_.__r.__words[0] + 87) < 0) {
            std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(__s.__r_.__value_.__r.__words[0] + 64), *(void *)(__s.__r_.__value_.__r.__words[0] + 72));
          }
          else {
            std::string v103 = *(std::string *)(__s.__r_.__value_.__r.__words[0] + 64);
          }
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v69 = &v103;
          }
          else {
            v69 = (std::string *)v103.__r_.__value_.__r.__words[0];
          }
          v70 = [v68 stringWithUTF8String:v69];
          [v67 setName:v70];

          if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v103.__r_.__value_.__l.__data_);
          }
          v71 = NSString;
          if (*(char *)(__s.__r_.__value_.__r.__words[0] + 111) < 0) {
            std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(__s.__r_.__value_.__r.__words[0] + 88), *(void *)(__s.__r_.__value_.__r.__words[0] + 96));
          }
          else {
            std::string v103 = *(std::string *)(__s.__r_.__value_.__r.__words[0] + 88);
          }
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v72 = &v103;
          }
          else {
            uint64_t v72 = (std::string *)v103.__r_.__value_.__r.__words[0];
          }
          v73 = [v71 stringWithUTF8String:v72];
          [v67 setDialogId:v73];

          if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v103.__r_.__value_.__l.__data_);
          }
          v74 = NSString;
          if (*(char *)(__s.__r_.__value_.__r.__words[0] + 135) < 0) {
            std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(__s.__r_.__value_.__r.__words[0] + 112), *(void *)(__s.__r_.__value_.__r.__words[0] + 120));
          }
          else {
            std::string v103 = *(std::string *)(__s.__r_.__value_.__r.__words[0] + 112);
          }
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v75 = &v103;
          }
          else {
            v75 = (std::string *)v103.__r_.__value_.__r.__words[0];
          }
          v76 = [v74 stringWithUTF8String:v75];
          [v67 setVisualId:v76];

          if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v103.__r_.__value_.__l.__data_);
          }
          v77 = NSString;
          if (*(char *)(__s.__r_.__value_.__r.__words[0] + 159) < 0) {
            std::string::__init_copy_ctor_external(&v103, *(const std::string::value_type **)(__s.__r_.__value_.__r.__words[0] + 136), *(void *)(__s.__r_.__value_.__r.__words[0] + 144));
          }
          else {
            std::string v103 = *(std::string *)(__s.__r_.__value_.__r.__words[0] + 136);
          }
          if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v78 = &v103;
          }
          else {
            uint64_t v78 = (std::string *)v103.__r_.__value_.__r.__words[0];
          }
          v79 = [v77 stringWithUTF8String:v78];
          [v67 setPatternId:v79];

          if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v103.__r_.__value_.__l.__data_);
          }
          v80 = [v67 name];
          [v65 setObject:v67 forKey:v80];

          if (__s.__r_.__value_.__l.__size_) {
            std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)__s.__r_.__value_.__l.__size_);
          }
          if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v104.__r_.__value_.__l.__data_);
          }
          v81 = (long long *)*((void *)v66 + 1);
          if (v81)
          {
            do
            {
              v82 = v81;
              v81 = *(long long **)v81;
            }
            while (v81);
          }
          else
          {
            do
            {
              v82 = (long long *)*((void *)v66 + 2);
              BOOL v56 = *(void *)v82 == (void)v66;
              uint64_t v66 = v82;
            }
            while (!v56);
          }
          uint64_t v66 = v82;
        }
        while (v82 != (long long *)v107);
      }
      std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v107[0]);
      [v87 setGroups:v65];
      id v11 = v87;

      siri::dialogengine::Context::~Context((siri::dialogengine::Context *)__p);
      std::string v10 = v86;
      if (v85) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v85);
      }
      v86[2](v86, v11, 0);
    }
    else
    {
      std::operator+<char>();
      std::string::basic_string[abi:ne180100]<0>(&v104, "load-failed");
      id v19 = NSErrorFromString((uint64_t *)__p, (uint64_t *)&v104);
      v10[2](v10, v11, v19);

      if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v104.__r_.__value_.__l.__data_);
      }
      if (v109 < 0) {
        operator delete(__p[0]);
      }
    }
    id v18 = v11;
    if (v90) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v90);
    }
    siri::dialogengine::Context::~Context((siri::dialogengine::Context *)v91);
    if (v94 < 0) {
      operator delete(v93[0]);
    }
    __p[0] = v95;
    std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "Nil bundle supplied");
    std::string::basic_string[abi:ne180100]<0>(v91, "request-error");
    uint64_t v17 = NSErrorFromString((uint64_t *)__p, (uint64_t *)v91);
    v10[2](v10, v11, v17);

    if (v92 < 0) {
      operator delete(v91[0]);
    }
    if (v109 < 0) {
      operator delete(__p[0]);
    }
    id v18 = v11;
  }

  return v18;
}

void sub_1C5D9FC48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18, void *a19)
{
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&STACK[0xF50]);
  if (v20) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v20);
  }
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&a19);
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete((void *)STACK[0xE08]);
  }
  a19 = &STACK[0xE20];
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&a19);

  _Unwind_Resume(a1);
}

void sub_1C5DA0098()
{
}

void sub_1C5DA05AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45)
{
  siri::dialogengine::SpeakableString::~SpeakableString(&a45);
  if (*(char *)(v49 - 105) < 0) {
    operator delete(*(void **)(v49 - 128));
  }

  _Unwind_Resume(a1);
}

void sub_1C5DA07C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::DefaultUserSettings(siri::dialogengine *this)
{
  {
    operator new();
  }
  uint64_t v1 = (std::once_flag::_State_type *)siri::dialogengine::DefaultUserSettings(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::DefaultUserSettings(void)::flag, memory_order_acquire) != -1)
  {
    uint64_t v5 = &v3;
    uint64_t v4 = &v5;
    std::__call_once(v1, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::DefaultUserSettings(void)::$_0 &&>>);
  }
  return siri::dialogengine::DefaultUserSettings(void)::sDefaultSettings;
}

void sub_1C5DA0894(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::DefaultUserSettings(void)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5DA0AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v24 = 336;
  while (1)
  {
    uint64_t v25 = v22 + v24;
    if (*(char *)(v22 + v24 - 1) < 0) {
      operator delete(*(void **)(v25 - 24));
    }
    if (*(char *)(v25 - 25) < 0) {
      operator delete(*(void **)(v25 - 48));
    }
    v24 -= 48;
    if (!v24)
    {
      if (a15 < 0) {
        operator delete(__p);
      }
      if (a21 < 0) {
        operator delete(a16);
      }
      MEMORY[0x1C8796D70](v21, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

BOOL siri::dialogengine::IsValidUserSetting(siri::dialogengine *a1)
{
  uint64_t v2 = siri::dialogengine::DefaultUserSettings(a1);
  return v2 + 8 != std::__tree<std::string>::find<std::string>(v2, (const void **)a1);
}

void siri::dialogengine::ExtractUserSettings(siri::dialogengine *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = a3 + 8;
  if (a2)
  {
    uint64_t v5 = siri::dialogengine::DefaultUserSettings(a1);
    if (v5 != a3) {
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>(a3, *(long long **)v5, (long long *)(v5 + 8));
    }
  }
  if (rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>::HasMember((unsigned int *)a1, "userSettings"))
  {
    id v6 = (unsigned int *)rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>::operator[]<char const>((unsigned int *)a1, "userSettings");
    if (*((_WORD *)v6 + 11) == 3)
    {
      uint64_t v8 = *v6;
      if (v8)
      {
        uint64_t v9 = 48 * v8;
        uint64_t v10 = *((void *)v6 + 1) + 24;
        do
        {
          String = (char *)rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>::GetString(v10 - 24);
          id v12 = (siri::dialogengine *)std::string::basic_string[abi:ne180100]<0>(__p, String);
          uint64_t v13 = siri::dialogengine::DefaultUserSettings(v12);
          if (v13 + 8 == std::__tree<std::string>::find<std::string>(v13, (const void **)__p))
          {
            if (v27 >= 0) {
              long long v15 = __p;
            }
            else {
              long long v15 = (void **)__p[0];
            }
            id v16 = "Ignoring unsupported user setting '%s'";
          }
          else
          {
            if ((*(_WORD *)(v10 + 22) & 0x400) != 0)
            {
              uint64_t v17 = (char *)rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>::GetString(v10);
              std::string::basic_string[abi:ne180100]<0>(&__str, v17);
              std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                std::string::size_type size = __str.__r_.__value_.__l.__size_;
              }
              if (size)
              {
                long long v28 = __p;
                uint64_t v20 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)a3, (const void **)__p, (long long **)&v28);
                std::string::operator=((std::string *)(v20 + 7), &__str);
                if (v27 >= 0) {
                  uint64_t v22 = __p;
                }
                else {
                  uint64_t v22 = (void **)__p[0];
                }
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  p_str = &__str;
                }
                else {
                  p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
                }
                siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Parsed user setting '%s': '%s'", v21, v22, p_str);
              }
              else
              {
                if (v27 >= 0) {
                  uint64_t v24 = __p;
                }
                else {
                  uint64_t v24 = (void **)__p[0];
                }
                siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Ignoring user setting '%s' with empty string value", v18, v24);
              }
              if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__str.__r_.__value_.__l.__data_);
              }
              goto LABEL_35;
            }
            if (v27 >= 0) {
              long long v15 = __p;
            }
            else {
              long long v15 = (void **)__p[0];
            }
            id v16 = "Value for user setting '%s' is not a string";
          }
          siri::dialogengine::Log::Warn((siri::dialogengine::Log *)v16, v14, v15);
LABEL_35:
          if (v27 < 0) {
            operator delete(__p[0]);
          }
          v10 += 48;
          v9 -= 48;
        }
        while (v9);
      }
    }
    else
    {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Value for key 'userSettings' is not an object", v7);
    }
  }
}

void sub_1C5DA0EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*v23);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>(uint64_t a1, long long *a2, long long *a3)
{
  if (*(void *)(a1 + 16))
  {
    id v6 = *(uint64_t **)a1;
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)a1 = a1 + 8;
    *(void *)(v7 + 16) = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    if (v6[1]) {
      uint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v8 = v6;
    }
    uint64_t v19 = a1;
    uint64_t v20 = v8;
    uint64_t v21 = v8;
    if (v8)
    {
      uint64_t v20 = std::__tree<std::string>::_DetachedTreeCache::__detach_next((uint64_t)v8);
      if (a2 != a3)
      {
        uint64_t v9 = a2;
        do
        {
          std::string::operator=((std::string *)(v8 + 4), (const std::string *)(v9 + 2));
          std::string::operator=((std::string *)(v8 + 7), (const std::string *)((char *)v9 + 56));
          uint64_t v10 = v21;
          leaf_high = (uint64_t **)std::__tree<std::string>::__find_leaf_high(a1, &v18, (const void **)v21 + 4);
          std::__tree<std::string>::__insert_node_at((uint64_t **)a1, v18, leaf_high, v10);
          uint64_t v8 = v20;
          uint64_t v21 = v20;
          if (v20) {
            uint64_t v20 = std::__tree<std::string>::_DetachedTreeCache::__detach_next((uint64_t)v20);
          }
          id v12 = (long long *)*((void *)v9 + 1);
          if (v12)
          {
            do
            {
              a2 = v12;
              id v12 = *(long long **)v12;
            }
            while (v12);
          }
          else
          {
            do
            {
              a2 = (long long *)*((void *)v9 + 2);
              BOOL v13 = *(void *)a2 == (void)v9;
              uint64_t v9 = a2;
            }
            while (!v13);
          }
          if (!v8) {
            break;
          }
          uint64_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v19);
  }
  if (a2 != a3)
  {
    do
    {
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__construct_node<std::pair<std::string const,std::string> const&>((uint64_t)&v19, a1, a2 + 2);
      double v14 = (uint64_t *)v19;
      long long v15 = (uint64_t **)std::__tree<std::string>::__find_leaf_high(a1, &v18, (const void **)(v19 + 32));
      std::__tree<std::string>::__insert_node_at((uint64_t **)a1, v18, v15, v14);
      uint64_t v19 = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)&v19);
      id v16 = (long long *)*((void *)a2 + 1);
      if (v16)
      {
        do
        {
          uint64_t v17 = v16;
          id v16 = *(long long **)v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          uint64_t v17 = (long long *)*((void *)a2 + 2);
          BOOL v13 = *(void *)v17 == (void)a2;
          a2 = v17;
        }
        while (!v13);
      }
      a2 = v17;
    }
    while (v17 != a3);
  }
}

void sub_1C5DA10A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    char v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        char v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v2);
  }
  return a1;
}

void siri::dialogengine::ExtractUserSettings(siri::dialogengine *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = a3 + 8;
  if (a2)
  {
    uint64_t v5 = siri::dialogengine::DefaultUserSettings(a1);
    if (v5 != a3) {
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>(a3, *(long long **)v5, (long long *)(v5 + 8));
    }
  }
  uint64_t v6 = *(void *)a1;
  if (!v6)
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"ExtractUserSettings received NULL variable argument", a2);
    return;
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "userSettings");
  uint64_t v7 = std::__tree<std::string>::find<std::string>(v6 + 72, (const void **)&__p);
  if (v6 + 80 == v7)
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = *(const void **)(v7 + 56);
    uint64_t v8 = *(std::__shared_weak_count **)(v7 + 64);
    if (v8) {
      atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  if (v32 < 0)
  {
    operator delete(__p);
    if (!v9) {
      goto LABEL_53;
    }
LABEL_14:
    if (v10)
    {
      siri::dialogengine::VariableObject::GetValues(v10, &__p);
      BOOL v13 = (const void **)__p;
      double v14 = v31;
      if (__p != v31)
      {
        do
        {
          long long v15 = (char *)*v13;
          if (*((char *)*v13 + 31) < 0)
          {
            std::string::__init_copy_ctor_external(&v29, *((const std::string::value_type **)v15 + 1), *((void *)v15 + 2));
          }
          else
          {
            long long v16 = *(_OWORD *)(v15 + 8);
            v29.__r_.__value_.__r.__words[2] = *((void *)v15 + 3);
            *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v16;
          }
          uint64_t v17 = siri::dialogengine::DefaultUserSettings(v12);
          if (v17 + 8 == std::__tree<std::string>::find<std::string>(v17, (const void **)&v29.__r_.__value_.__l.__data_))
          {
            if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v21 = &v29;
            }
            else {
              uint64_t v21 = (std::string *)v29.__r_.__value_.__r.__words[0];
            }
            siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Ignoring unsupported user setting '%s'", v18, v21);
          }
          else if (*v13
          {
            if (v19[95] < 0) {
              std::string::__init_copy_ctor_external(&__str, *((const std::string::value_type **)v19 + 9), *((void *)v19 + 10));
            }
            else {
              std::string __str = *(std::string *)(v19 + 3);
            }
            std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type size = __str.__r_.__value_.__l.__size_;
            }
            if (size)
            {
              id v33 = &v29;
              uint64_t v23 = std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)a3, (const void **)&v29.__r_.__value_.__l.__data_, (long long **)&v33);
              std::string::operator=((std::string *)(v23 + 7), &__str);
              if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                uint64_t v25 = &v29;
              }
              else {
                uint64_t v25 = (std::string *)v29.__r_.__value_.__r.__words[0];
              }
              p_str = &__str;
              if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
              }
              siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Parsed user setting '%s': '%s'", v24, v25, p_str);
            }
            else
            {
              if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                char v27 = &v29;
              }
              else {
                char v27 = (std::string *)v29.__r_.__value_.__r.__words[0];
              }
              siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Ignoring user setting '%s' with empty string value", v18, v27);
            }
            if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__str.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              uint64_t v20 = &v29;
            }
            else {
              uint64_t v20 = (std::string *)v29.__r_.__value_.__r.__words[0];
            }
            siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Value for user setting '%s' is not a string", v18, v20);
          }
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v29.__r_.__value_.__l.__data_);
          }
          v13 += 2;
        }
        while (v13 != v14);
      }
      v29.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
      std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v29);
    }
    else
    {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Variable 'userSettings' is not an object", v11);
    }
    goto LABEL_53;
  }
  if (v9) {
    goto LABEL_14;
  }
LABEL_53:
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_1C5DA1460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,char a25)
{
  if (v25) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v25);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*v26);
  _Unwind_Resume(a1);
}

void __assign_helper_atomic_property__2034(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  *a1 = v3;
  a1[1] = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void *__copy_helper_atomic_property__2036(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  void *result = *a2;
  result[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1C5DA1638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DA1704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DA17F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DA1924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DA1C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DA1D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::Node>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::Node>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211B7F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::Node>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211B7F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t siri::dialogengine::File::Accept(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a1 + 312);
  uint64_t v4 = *(void *)(a1 + 224);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 24))(v4, a2);
  }
  uint64_t result = *(void *)(a1 + 296);
  if (result)
  {
    uint64_t v6 = *(uint64_t (**)(void))(*(void *)result + 24);
    return v6();
  }
  return result;
}

{
  uint64_t v4;
  uint64_t result;
  uint64_t (*v6)(void);
  uint64_t vars8;

  (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a1 + 312);
  uint64_t v4 = *(void *)(a1 + 224);
  if (v4) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 16))(v4, a2);
  }
  uint64_t result = *(void *)(a1 + 296);
  if (result)
  {
    uint64_t v6 = *(uint64_t (**)(void))(*(void *)result + 16);
    return v6();
  }
  return result;
}

BOOL siri::dialogengine::File::Validate(siri::dialogengine::File *this, siri::dialogengine::Context *a2)
{
  uint64_t v2 = MEMORY[0x1F4188790](this);
  BOOL v4 = (BOOL)v3;
  if (!v3)
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Context is null when validating file", 0);
    return v4;
  }
  uint64_t v5 = v2;
  siri::dialogengine::Context::Validate(v3);
  v313 = (Context *)v4;
  siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)&v353, (const siri::dialogengine::RequestInfo *)(v4 + 8));
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v352, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  }
  else {
    std::string v352 = __s;
  }
  if (v353 == 1) {
    uint64_t v6 = "CatVisual.dtd";
  }
  else {
    uint64_t v6 = "CatDialog.dtd";
  }
  std::string::basic_string[abi:ne180100]<0>(&v351, v6);
  if (siri::dialogengine::HasCATExtension(&v352, 0))
  {
    if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__p, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
    }
    else {
      std::string __p = v351;
    }
    uint64_t v7 = (v352.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? &v352
       : (std::string *)v352.__r_.__value_.__r.__words[0];
    uint64_t v8 = xmlParseFile((const char *)v7);
    siri::dialogengine::ValidateXmlDoc((Context *)v4, v8, (uint64_t)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v9 = (const std::string::value_type *)(v5 + 56);
  if (*(char *)(v5 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(&v349, *(const std::string::value_type **)(v5 + 56), *(void *)(v5 + 64));
  }
  else
  {
    *(_OWORD *)&v349.__r_.__value_.__l.__data_ = *(_OWORD *)v9;
    v349.__r_.__value_.__r.__words[2] = *(void *)(v5 + 72);
  }
  std::string::size_type size = HIBYTE(v349.__r_.__value_.__r.__words[2]);
  if ((v349.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v349.__r_.__value_.__l.__size_;
  }
  if (!size) {
    std::string::operator=(&v349, (const std::string *)(v5 + 80));
  }
  if ((siri::dialogengine::HasCATExtension(&v349, 0) & 1) != 0
    || siri::dialogengine::HasVisualCATExtension(&v349, 0))
  {
    if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v348, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
    }
    else {
      std::string v348 = v351;
    }
    id v11 = (v349.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v349
        : (std::string *)v349.__r_.__value_.__r.__words[0];
    id v12 = xmlParseFile((const char *)v11);
    siri::dialogengine::ValidateXmlDoc((Context *)v4, v12, (uint64_t)&v348);
    if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v348.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v356.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v347, v356.__r_.__value_.__l.__data_, v356.__r_.__value_.__l.__size_);
  }
  else {
    std::string v347 = v356;
  }
  std::string::basic_string[abi:ne180100]<0>(v327, "<cat");
  int v13 = siri::dialogengine::StringContains(&v347.__r_.__value_.__l.__data_, (char *)v327);
  int v14 = v13;
  if (SHIBYTE(v327[0].__end_) < 0)
  {
    operator delete(v327[0].__first_);
    if (!v14) {
      goto LABEL_53;
    }
  }
  else if (!v13)
  {
    goto LABEL_53;
  }
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v346, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
  }
  else {
    std::string v346 = v351;
  }
  if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v15 = &v347;
  }
  else {
    long long v15 = (std::string *)v347.__r_.__value_.__r.__words[0];
  }
  if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = HIBYTE(v347.__r_.__value_.__r.__words[2]);
  }
  else {
    int v16 = v347.__r_.__value_.__r.__words[1];
  }
  uint64_t v17 = xmlParseMemory((const char *)v15, v16);
  siri::dialogengine::ValidateXmlDoc((Context *)v4, v17, (uint64_t)&v346);
  if (SHIBYTE(v346.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v346.__r_.__value_.__l.__data_);
  }
LABEL_53:
  if (SHIBYTE(v358.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v345, v358.__r_.__value_.__l.__data_, v358.__r_.__value_.__l.__size_);
  }
  else {
    std::string v345 = v358;
  }
  std::string::size_type v18 = HIBYTE(v345.__r_.__value_.__r.__words[2]);
  if ((v345.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v18 = v345.__r_.__value_.__l.__size_;
  }
  if (!v18)
  {
    if (SHIBYTE(v361) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v327, (const std::string::value_type *)v360, *((std::string::size_type *)&v360 + 1));
      if ((*((unsigned char *)&v345.__r_.__value_.__s + 23) & 0x80) == 0) {
        goto LABEL_62;
      }
    }
    else
    {
      *(_OWORD *)&v327[0].__first_ = v360;
      v327[0].__end_ = v361;
      if ((*((unsigned char *)&v345.__r_.__value_.__s + 23) & 0x80) == 0)
      {
LABEL_62:
        *(_OWORD *)&v345.__r_.__value_.__l.__data_ = *(_OWORD *)&v327[0].__first_;
        v345.__r_.__value_.__r.__words[2] = (std::string::size_type)v327[0].__end_;
        goto LABEL_63;
      }
    }
    operator delete(v345.__r_.__value_.__l.__data_);
    goto LABEL_62;
  }
LABEL_63:
  std::string::basic_string[abi:ne180100]<0>(v327, "<cat");
  int v19 = siri::dialogengine::StringContains(&v345.__r_.__value_.__l.__data_, (char *)v327);
  int v20 = v19;
  if ((SHIBYTE(v327[0].__end_) & 0x80000000) == 0)
  {
    if (!v19) {
      goto LABEL_78;
    }
LABEL_67:
    if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v344, v351.__r_.__value_.__l.__data_, v351.__r_.__value_.__l.__size_);
    }
    else {
      std::string v344 = v351;
    }
    if ((v345.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v21 = &v345;
    }
    else {
      uint64_t v21 = (std::string *)v345.__r_.__value_.__r.__words[0];
    }
    if ((v345.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v22 = HIBYTE(v345.__r_.__value_.__r.__words[2]);
    }
    else {
      int v22 = v345.__r_.__value_.__r.__words[1];
    }
    uint64_t v23 = xmlParseMemory((const char *)v21, v22);
    siri::dialogengine::ValidateXmlDoc((Context *)v4, v23, (uint64_t)&v344);
    if (SHIBYTE(v344.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v344.__r_.__value_.__l.__data_);
    }
    goto LABEL_78;
  }
  operator delete(v327[0].__first_);
  if (v20) {
    goto LABEL_67;
  }
LABEL_78:
  std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)(v4 + 616));
  siri::dialogengine::ObjectRegistry::Clear(v24);
  v343[1] = 0;
  v343[0] = 0;
  v342[0] = &unk_1F2122780;
  v342[1] = v343;
  (*(void (**)(uint64_t, void *))(*(void *)v5 + 32))(v5, v342);
  siri::dialogengine::CollectIteratorsVisitor::GetIterators((siri::dialogengine::CollectIteratorsVisitor *)v342, (uint64_t)&v340);
  uint64_t v312 = v5;
  if (!v341[1]) {
    goto LABEL_126;
  }
  memset(&__s1, 0, sizeof(__s1));
  std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(&__s1, *(void *)(v5 + 176), *(void *)(v5 + 184), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*(void *)(v5 + 184) - *(void *)(v5 + 176)) >> 4));
  uint64_t v25 = v340;
  if (v340 == v341) {
    goto LABEL_125;
  }
  do
  {
    if (*((char *)v25 + 55) < 0) {
      std::string::__init_copy_ctor_external(&v339, (const std::string::value_type *)v25[4], (std::string::size_type)v25[5]);
    }
    else {
      std::string v339 = *(std::string *)(v25 + 4);
    }
    std::string::size_type v27 = __s1.__r_.__value_.__l.__size_;
    for (std::string::size_type i = __s1.__r_.__value_.__r.__words[0]; i != v27; i += 336)
    {
      if (*(char *)(i + 31) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v327, *(const std::string::value_type **)(i + 8), *(void *)(i + 16));
      }
      else
      {
        long long v28 = *(_OWORD *)(i + 8);
        v327[0].__end_ = *(std::__split_buffer<std::string>::pointer *)(i + 24);
        *(_OWORD *)&v327[0].__first_ = v28;
      }
      BOOL v29 = siri::dialogengine::StringsEqual((uint64_t)v327, (uint64_t)&v339);
      BOOL v30 = v29;
      if (SHIBYTE(v327[0].__end_) < 0)
      {
        operator delete(v327[0].__first_);
        if (!v30) {
          continue;
        }
      }
      else if (!v29)
      {
        continue;
      }
      std::operator+<char>();
      char v31 = std::string::append(&v338, "' is the same as existing parameter of the same name");
      long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      v327[0].__end_ = (std::__split_buffer<std::string>::pointer)v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v327[0].__first_ = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)v327, 0);
      if (SHIBYTE(v327[0].__end_) < 0) {
        operator delete(v327[0].__first_);
      }
      if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v338.__r_.__value_.__l.__data_);
      }
    }
    siri::dialogengine::ResolveType(0, (uint64_t)v313, (uint64_t)(v25 + 7), 1, (uint64_t)&v338);
    siri::dialogengine::GetArrayElementType((uint64_t)&v338, &v337);
    std::string::basic_string[abi:ne180100]<0>(&v336, "");
    std::string::basic_string[abi:ne180100]<0>(&v335, "");
    std::string::basic_string[abi:ne180100]<0>(&v334, "");
    std::string::basic_string[abi:ne180100]<0>(&__n, "");
    std::string::basic_string[abi:ne180100]<0>(&v332, "");
    std::string::basic_string[abi:ne180100]<0>(&v331, "");
    siri::dialogengine::Parameter::Parameter((uint64_t)v327, (const std::string *)(v25 + 4), &v337, &v336, &v335, &v334, &__n, &v332, &v331, 1, 0, 0, 1);
    if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v331.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v332.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__n.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v334.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v335.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v336.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v337.__r_.__value_.__l.__data_);
    }
    id v33 = (siri::dialogengine::File *)*((void *)v313 + 63);
    int v34 = (std::__shared_weak_count *)*((void *)v313 + 64);
    if (v34) {
      atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    siri::dialogengine::File::AddParameter(v33, (const siri::dialogengine::Parameter *)v327);
    if (v34) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v34);
    }
    v328[8] = &unk_1F21271E8;
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((void *)v328[10]);
    siri::dialogengine::LineNumberBase::~LineNumberBase(v328);
    siri::dialogengine::ObjectProperty::~ObjectProperty((void **)&v327[0].__first_);
    if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v338.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v339.__r_.__value_.__l.__data_);
    }
    v35 = v25[1];
    if (v35)
    {
      do
      {
        uint64_t v36 = (void **)v35;
        v35 = (void *)*v35;
      }
      while (v35);
    }
    else
    {
      do
      {
        uint64_t v36 = (void **)v25[2];
        BOOL v126 = *v36 == v25;
        uint64_t v25 = v36;
      }
      while (!v126);
    }
    uint64_t v25 = v36;
  }
  while (v36 != v341);
LABEL_125:
  v327[0].__first_ = &__s1;
  std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)v327);
  uint64_t v9 = (const std::string::value_type *)(v5 + 56);
LABEL_126:
  if (*(char *)(v5 + 55) < 0)
  {
    if (!*(void *)(v5 + 40)) {
      goto LABEL_166;
    }
  }
  else if (!*(unsigned char *)(v5 + 55))
  {
    goto LABEL_166;
  }
  siri::dialogengine::CatPathToId((unsigned __int8 *)(v5 + 32), v327);
  uint64_t end_high = HIBYTE(v327[0].__end_);
  if (SHIBYTE(v327[0].__end_) >= 0) {
    std::__split_buffer<std::string>::pointer begin = (std::__split_buffer<std::string>::pointer)HIBYTE(v327[0].__end_);
  }
  else {
    std::__split_buffer<std::string>::pointer begin = v327[0].__begin_;
  }
  std::__split_buffer<std::string>::pointer v39 = (std::__split_buffer<std::string>::pointer)*(unsigned __int8 *)(v5 + 663);
  int v40 = (char)v39;
  if ((char)v39 < 0) {
    std::__split_buffer<std::string>::pointer v39 = *(std::__split_buffer<std::string>::pointer *)(v5 + 648);
  }
  if (begin == v39)
  {
    if (v40 >= 0) {
      long long v41 = (unsigned __int8 *)(v5 + 640);
    }
    else {
      long long v41 = *(unsigned __int8 **)(v5 + 640);
    }
    if ((SHIBYTE(v327[0].__end_) & 0x80000000) == 0)
    {
      if (!HIBYTE(v327[0].__end_)) {
        goto LABEL_166;
      }
      uint64_t v42 = v327;
      while (LOBYTE(v42->__first_) == *v41)
      {
        uint64_t v42 = (std::__split_buffer<std::string> *)((char *)v42 + 1);
        ++v41;
        if (!--end_high)
        {
          if ((HIBYTE(v327[0].__end_) & 0x80) == 0) {
            goto LABEL_166;
          }
          goto LABEL_164;
        }
      }
      goto LABEL_149;
    }
    std::__split_buffer<std::string>::pointer first = v327[0].__first_;
    if (memcmp(v327[0].__first_, v41, (size_t)v327[0].__begin_)) {
      goto LABEL_149;
    }
LABEL_165:
    operator delete(first);
    goto LABEL_166;
  }
LABEL_149:
  std::operator+<char>();
  v44 = std::string::append(&v337, ") does not match the ID in the CAT file (");
  long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
  v338.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v338.__r_.__value_.__l.__data_ = v45;
  v44->__r_.__value_.__l.__size_ = 0;
  v44->__r_.__value_.__r.__words[2] = 0;
  v44->__r_.__value_.__r.__words[0] = 0;
  int v46 = *(char *)(v5 + 663);
  if (v46 >= 0) {
    long long v47 = (const std::string::value_type *)(v5 + 640);
  }
  else {
    long long v47 = *(const std::string::value_type **)(v5 + 640);
  }
  if (v46 >= 0) {
    std::string::size_type v48 = *(unsigned __int8 *)(v5 + 663);
  }
  else {
    std::string::size_type v48 = *(void *)(v5 + 648);
  }
  uint64_t v49 = std::string::append(&v338, v47, v48);
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  v339.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v339.__r_.__value_.__l.__data_ = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  v51 = std::string::append(&v339, ")");
  long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
  __s1.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v52;
  v51->__r_.__value_.__l.__size_ = 0;
  v51->__r_.__value_.__r.__words[2] = 0;
  v51->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, 0);
  if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s1.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v339.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v338.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v337.__r_.__value_.__l.__data_);
  }
  if ((HIBYTE(v327[0].__end_) & 0x80) != 0)
  {
LABEL_164:
    std::__split_buffer<std::string>::pointer first = v327[0].__first_;
    goto LABEL_165;
  }
LABEL_166:
  std::string::size_type v53 = HIBYTE(v349.__r_.__value_.__r.__words[2]);
  if ((v349.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v53 = v349.__r_.__value_.__l.__size_;
  }
  if (v53)
  {
    siri::dialogengine::CatPathToId((unsigned __int8 *)&v349, v327);
    if (!v353)
    {
      siri::dialogengine::CatPathToId((unsigned __int8 *)(v5 + 32), &__s1);
      if (*(char *)(v5 + 55) < 0)
      {
        if (!*(void *)(v5 + 40)) {
          goto LABEL_189;
        }
LABEL_172:
        uint64_t v54 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
        if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v55 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v55 = __s1.__r_.__value_.__l.__size_;
        }
        if (v55)
        {
          std::__split_buffer<std::string>::pointer v56 = (std::__split_buffer<std::string>::pointer)HIBYTE(v327[0].__end_);
          if (SHIBYTE(v327[0].__end_) < 0) {
            std::__split_buffer<std::string>::pointer v56 = v327[0].__begin_;
          }
          if ((std::__split_buffer<std::string>::pointer)v55 == v56)
          {
            if (SHIBYTE(v327[0].__end_) >= 0) {
              v57 = (unsigned __int8 *)v327;
            }
            else {
              v57 = (unsigned __int8 *)v327[0].__first_;
            }
            if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
            {
              if (!memcmp(__s1.__r_.__value_.__l.__data_, v57, __s1.__r_.__value_.__l.__size_)) {
                goto LABEL_207;
              }
            }
            else
            {
              if (!*((unsigned char *)&__s1.__r_.__value_.__s + 23)) {
                goto LABEL_207;
              }
              p_s1 = &__s1;
              while (p_s1->__r_.__value_.__s.__data_[0] == *v57)
              {
                p_s1 = (std::string *)((char *)p_s1 + 1);
                ++v57;
                if (!--v54) {
                  goto LABEL_207;
                }
              }
            }
          }
          std::operator+<char>();
          uint64_t v60 = std::string::append(&v336, ") does not match the filename ID (");
          long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
          v337.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v337.__r_.__value_.__l.__data_ = v61;
          v60->__r_.__value_.__l.__size_ = 0;
          v60->__r_.__value_.__r.__words[2] = 0;
          v60->__r_.__value_.__r.__words[0] = 0;
          if ((v349.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            v62 = &v349;
          }
          else {
            v62 = (std::string *)v349.__r_.__value_.__r.__words[0];
          }
          if ((v349.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v63 = HIBYTE(v349.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v63 = v349.__r_.__value_.__l.__size_;
          }
          v64 = std::string::append(&v337, (const std::string::value_type *)v62, v63);
          long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
          v338.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v338.__r_.__value_.__l.__data_ = v65;
          v64->__r_.__value_.__l.__size_ = 0;
          v64->__r_.__value_.__r.__words[2] = 0;
          v64->__r_.__value_.__r.__words[0] = 0;
          uint64_t v66 = std::string::append(&v338, ")");
          long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
          v339.__r_.__value_.__r.__words[2] = v66->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v339.__r_.__value_.__l.__data_ = v67;
          v66->__r_.__value_.__l.__size_ = 0;
          v66->__r_.__value_.__r.__words[2] = 0;
          v66->__r_.__value_.__r.__words[0] = 0;
          siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&v339, 0);
          if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v339.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v338.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v337.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
          {
            v59 = (void *)v336.__r_.__value_.__r.__words[0];
LABEL_206:
            operator delete(v59);
          }
        }
      }
      else
      {
        if (*(unsigned char *)(v5 + 55)) {
          goto LABEL_172;
        }
LABEL_189:
        std::string::basic_string[abi:ne180100]<0>(&v339, "No params file exists for this CAT file, e.g., _params.cat.xml");
        siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&v339, 0);
        if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
        {
          v59 = (void *)v339.__r_.__value_.__r.__words[0];
          goto LABEL_206;
        }
      }
LABEL_207:
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
    }
    char v68 = *(unsigned char *)(v5 + 127);
    if (v68 < 0)
    {
      if (!*(void *)(v5 + 112)) {
        goto LABEL_228;
      }
LABEL_211:
      uint64_t v69 = HIBYTE(v327[0].__end_);
      if (SHIBYTE(v327[0].__end_) >= 0) {
        std::__split_buffer<std::string>::pointer v70 = (std::__split_buffer<std::string>::pointer)HIBYTE(v327[0].__end_);
      }
      else {
        std::__split_buffer<std::string>::pointer v70 = v327[0].__begin_;
      }
      if (v68 >= 0) {
        std::__split_buffer<std::string>::pointer v71 = (std::__split_buffer<std::string>::pointer)*(unsigned __int8 *)(v5 + 127);
      }
      else {
        std::__split_buffer<std::string>::pointer v71 = *(std::__split_buffer<std::string>::pointer *)(v5 + 112);
      }
      if (v70 == v71)
      {
        if (v68 >= 0) {
          uint64_t v72 = (unsigned __int8 *)(v5 + 104);
        }
        else {
          uint64_t v72 = *(unsigned __int8 **)(v5 + 104);
        }
        if ((HIBYTE(v327[0].__end_) & 0x80) != 0)
        {
          if (!memcmp(v327[0].__first_, v72, (size_t)v327[0].__begin_)) {
            goto LABEL_248;
          }
        }
        else
        {
          if (!HIBYTE(v327[0].__end_)) {
            goto LABEL_248;
          }
          v73 = v327;
          while (LOBYTE(v73->__first_) == *v72)
          {
            v73 = (std::__split_buffer<std::string> *)((char *)v73 + 1);
            ++v72;
            if (!--v69) {
              goto LABEL_248;
            }
          }
        }
      }
      std::operator+<char>();
      v77 = std::string::append(&v337, ") does not match the ID in the CAT file (");
      long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
      v338.__r_.__value_.__r.__words[2] = v77->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v338.__r_.__value_.__l.__data_ = v78;
      v77->__r_.__value_.__l.__size_ = 0;
      v77->__r_.__value_.__r.__words[2] = 0;
      v77->__r_.__value_.__r.__words[0] = 0;
      int v79 = *(char *)(v5 + 127);
      if (v79 >= 0) {
        v80 = (const std::string::value_type *)(v5 + 104);
      }
      else {
        v80 = *(const std::string::value_type **)(v5 + 104);
      }
      if (v79 >= 0) {
        std::string::size_type v81 = *(unsigned __int8 *)(v5 + 127);
      }
      else {
        std::string::size_type v81 = *(void *)(v5 + 112);
      }
      v82 = std::string::append(&v338, v80, v81);
      long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
      v339.__r_.__value_.__r.__words[2] = v82->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v339.__r_.__value_.__l.__data_ = v83;
      v82->__r_.__value_.__l.__size_ = 0;
      v82->__r_.__value_.__r.__words[2] = 0;
      v82->__r_.__value_.__r.__words[0] = 0;
      uint64_t v84 = std::string::append(&v339, ")");
      long long v85 = *(_OWORD *)&v84->__r_.__value_.__l.__data_;
      __s1.__r_.__value_.__r.__words[2] = v84->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v85;
      v84->__r_.__value_.__l.__size_ = 0;
      v84->__r_.__value_.__r.__words[2] = 0;
      v84->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, 0);
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v339.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v338.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0)
      {
        v76 = (void *)v337.__r_.__value_.__r.__words[0];
LABEL_247:
        operator delete(v76);
      }
    }
    else
    {
      if (*(unsigned char *)(v5 + 127)) {
        goto LABEL_211;
      }
LABEL_228:
      std::operator+<char>();
      v74 = std::string::append(&v339, ") does not specify a CAT ID in the <cat> element");
      long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
      __s1.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v75;
      v74->__r_.__value_.__l.__size_ = 0;
      v74->__r_.__value_.__r.__words[2] = 0;
      v74->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, 0);
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0)
      {
        v76 = (void *)v339.__r_.__value_.__r.__words[0];
        goto LABEL_247;
      }
    }
LABEL_248:
    siri::dialogengine::CatLocalePathToLocale((uint64_t)v9, &v339);
    siri::dialogengine::GetCanonicalLocale(&v339, 0, &__s1);
    if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v339.__r_.__value_.__l.__data_);
    }
    if (*(char *)(v5 + 79) < 0)
    {
      if (!*(void *)(v5 + 64)) {
        goto LABEL_294;
      }
    }
    else if (!*(unsigned char *)(v5 + 79))
    {
      goto LABEL_294;
    }
    uint64_t v86 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
    if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v87 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v87 = __s1.__r_.__value_.__l.__size_;
    }
    uint64_t v88 = *(unsigned __int8 *)(v5 + 151);
    int v89 = (char)v88;
    if ((v88 & 0x80u) != 0) {
      uint64_t v88 = *(void *)(v5 + 136);
    }
    if (v87 == v88)
    {
      if (v89 >= 0) {
        uint64_t v90 = (unsigned __int8 *)(v5 + 128);
      }
      else {
        uint64_t v90 = *(unsigned __int8 **)(v5 + 128);
      }
      if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        if (!memcmp(__s1.__r_.__value_.__l.__data_, v90, __s1.__r_.__value_.__l.__size_)) {
          goto LABEL_294;
        }
      }
      else
      {
        if (!*((unsigned char *)&__s1.__r_.__value_.__s + 23)) {
          goto LABEL_294;
        }
        v91 = &__s1;
        while (v91->__r_.__value_.__s.__data_[0] == *v90)
        {
          v91 = (std::string *)((char *)v91 + 1);
          ++v90;
          if (!--v86) {
            goto LABEL_294;
          }
        }
      }
    }
    std::operator+<char>();
    char v92 = std::string::append(&v334, "' is invalid or does not match the locale attribute '");
    long long v93 = *(_OWORD *)&v92->__r_.__value_.__l.__data_;
    v335.__r_.__value_.__r.__words[2] = v92->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v335.__r_.__value_.__l.__data_ = v93;
    v92->__r_.__value_.__l.__size_ = 0;
    v92->__r_.__value_.__r.__words[2] = 0;
    v92->__r_.__value_.__r.__words[0] = 0;
    int v94 = *(char *)(v5 + 151);
    if (v94 >= 0) {
      v95 = (const std::string::value_type *)(v5 + 128);
    }
    else {
      v95 = *(const std::string::value_type **)(v5 + 128);
    }
    if (v94 >= 0) {
      std::string::size_type v96 = *(unsigned __int8 *)(v5 + 151);
    }
    else {
      std::string::size_type v96 = *(void *)(v5 + 136);
    }
    std::string v97 = std::string::append(&v335, v95, v96);
    long long v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
    v336.__r_.__value_.__r.__words[2] = v97->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v336.__r_.__value_.__l.__data_ = v98;
    v97->__r_.__value_.__l.__size_ = 0;
    v97->__r_.__value_.__r.__words[2] = 0;
    v97->__r_.__value_.__r.__words[0] = 0;
    v99 = std::string::append(&v336, "' declared in the file '");
    long long v100 = *(_OWORD *)&v99->__r_.__value_.__l.__data_;
    v337.__r_.__value_.__r.__words[2] = v99->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v337.__r_.__value_.__l.__data_ = v100;
    v99->__r_.__value_.__l.__size_ = 0;
    v99->__r_.__value_.__r.__words[2] = 0;
    v99->__r_.__value_.__r.__words[0] = 0;
    int v101 = *(char *)(v5 + 79);
    if (v101 >= 0) {
      std::string v102 = v9;
    }
    else {
      std::string v102 = *(const std::string::value_type **)(v5 + 56);
    }
    if (v101 >= 0) {
      std::string::size_type v103 = *(unsigned __int8 *)(v5 + 79);
    }
    else {
      std::string::size_type v103 = *(void *)(v5 + 64);
    }
    std::string v104 = std::string::append(&v337, v102, v103);
    long long v105 = *(_OWORD *)&v104->__r_.__value_.__l.__data_;
    v338.__r_.__value_.__r.__words[2] = v104->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v338.__r_.__value_.__l.__data_ = v105;
    v104->__r_.__value_.__l.__size_ = 0;
    v104->__r_.__value_.__r.__words[2] = 0;
    v104->__r_.__value_.__r.__words[0] = 0;
    v106 = std::string::append(&v338, "'");
    long long v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
    v339.__r_.__value_.__r.__words[2] = v106->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v339.__r_.__value_.__l.__data_ = v107;
    v106->__r_.__value_.__l.__size_ = 0;
    v106->__r_.__value_.__r.__words[2] = 0;
    v106->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)&v339, 0);
    if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v339.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v338.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v337.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v336.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v335.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v334.__r_.__value_.__l.__data_);
    }
LABEL_294:
    if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s1.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v327[0].__end_) < 0) {
      operator delete(v327[0].__first_);
    }
  }
  char v108 = *(unsigned char *)(v5 + 127);
  if (v108 < 0)
  {
    if (!*(void *)(v5 + 112)) {
      goto LABEL_327;
    }
  }
  else if (!*(unsigned char *)(v5 + 127))
  {
    goto LABEL_327;
  }
  char v109 = *(unsigned char **)(v5 + 104);
  uint64_t v110 = *(void *)(v5 + 112);
  if (v108 >= 0) {
    uint64_t v111 = (unsigned __int8 *)(v5 + 104);
  }
  else {
    uint64_t v111 = *(unsigned __int8 **)(v5 + 104);
  }
  if (v108 >= 0) {
    uint64_t v112 = *(unsigned __int8 *)(v5 + 127);
  }
  else {
    uint64_t v112 = *(void *)(v5 + 112);
  }
  if (!v112) {
    goto LABEL_319;
  }
  uint64_t v113 = 0;
  do
  {
    int v114 = *v111++;
    if (v114 == 35) {
      ++v113;
    }
    --v112;
  }
  while (v112);
  if (v113 != 1) {
    goto LABEL_319;
  }
  if ((*(unsigned char *)(v5 + 127) & 0x80) != 0)
  {
    if (*v109 != 35) {
      goto LABEL_318;
    }
    goto LABEL_319;
  }
  char v109 = (unsigned char *)(v5 + 104);
  uint64_t v110 = *(unsigned __int8 *)(v5 + 127);
  if (*(void *)(v5 + 104) == 35) {
    goto LABEL_319;
  }
LABEL_318:
  if (v109[v110 - 1] == 35)
  {
LABEL_319:
    std::operator+<char>();
    siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)v327, 0);
    if (SHIBYTE(v327[0].__end_) < 0) {
      operator delete(v327[0].__first_);
    }
  }
  std::string::basic_string[abi:ne180100]<0>(v327, ".cat");
  int v115 = siri::dialogengine::StringContains((char **)(v5 + 104), (char *)v327);
  int v116 = v115;
  if (SHIBYTE(v327[0].__end_) < 0)
  {
    operator delete(v327[0].__first_);
    if (!v116) {
      goto LABEL_327;
    }
  }
  else if (!v115)
  {
    goto LABEL_327;
  }
  std::operator+<char>();
  siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)v327, 0);
  if (SHIBYTE(v327[0].__end_) < 0) {
    operator delete(v327[0].__first_);
  }
LABEL_327:
  v117 = *(void **)(v5 + 200);
  if (v117 != (void *)(v5 + 208))
  {
    do
    {
      if (v117[9] >= 2uLL && siri::dialogengine::File::IsUniqueMetadataName((uint64_t)(v117 + 4)))
      {
        std::operator+<char>();
        uint64_t v118 = std::string::append(&__s1, "' has multiple values; This name must have a unique value.");
        long long v119 = *(_OWORD *)&v118->__r_.__value_.__l.__data_;
        v327[0].__end_ = (std::__split_buffer<std::string>::pointer)v118->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v327[0].__first_ = v119;
        v118->__r_.__value_.__l.__size_ = 0;
        v118->__r_.__value_.__r.__words[2] = 0;
        v118->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)v327, 0);
        if (SHIBYTE(v327[0].__end_) < 0) {
          operator delete(v327[0].__first_);
        }
        if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s1.__r_.__value_.__l.__data_);
        }
      }
      v120 = (void *)v117[1];
      if (v120)
      {
        do
        {
          v121 = v120;
          v120 = (void *)*v120;
        }
        while (v120);
      }
      else
      {
        do
        {
          v121 = (void *)v117[2];
          BOOL v126 = *v121 == (void)v117;
          v117 = v121;
        }
        while (!v126);
      }
      v117 = v121;
    }
    while (v121 != (void *)(v5 + 208));
  }
  std::string::basic_string[abi:ne180100]<0>(v327, "readyForLoc");
  siri::dialogengine::File::GetMetadataUnique(v5, (uint64_t)v327, &v339);
  if (SHIBYTE(v327[0].__end_) < 0) {
    operator delete(v327[0].__first_);
  }
  std::string::size_type v122 = HIBYTE(v339.__r_.__value_.__r.__words[2]);
  if ((v339.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v122 = v339.__r_.__value_.__l.__size_;
  }
  if (v122)
  {
    siri::dialogengine::StringToLower((uint64_t)&v339, (uint64_t)v327);
    if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v339.__r_.__value_.__l.__data_);
    }
    v339.__r_.__value_.__r.__words[2] = (std::string::size_type)v327[0].__end_;
    *(_OWORD *)&v339.__r_.__value_.__l.__data_ = *(_OWORD *)&v327[0].__first_;
    if (SHIBYTE(v327[0].__end_) < 0)
    {
      if (v339.__r_.__value_.__l.__size_ == 4)
      {
        int v127 = *(_DWORD *)v339.__r_.__value_.__l.__data_;
        goto LABEL_362;
      }
      if (v339.__r_.__value_.__l.__size_ != 5) {
        goto LABEL_363;
      }
      v123 = (std::string *)v339.__r_.__value_.__r.__words[0];
LABEL_354:
      int data = (int)v123->__r_.__value_.__l.__data_;
      int v125 = v123->__r_.__value_.__s.__data_[4];
      BOOL v126 = data == 1936482662 && v125 == 101;
      if (!v126)
      {
LABEL_363:
        std::string::basic_string[abi:ne180100]<0>(v327, "The value for meta name 'readyForLoc' must be either 'true' or 'false'.");
        siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)v327, 0);
        if (SHIBYTE(v327[0].__end_) < 0) {
          operator delete(v327[0].__first_);
        }
      }
    }
    else
    {
      if (HIBYTE(v327[0].__end_) != 4)
      {
        if (HIBYTE(v327[0].__end_) == 5)
        {
          v123 = &v339;
          goto LABEL_354;
        }
        goto LABEL_363;
      }
      int v127 = (int)v339.__r_.__value_.__l.__data_;
LABEL_362:
      if (v127 != 1702195828) {
        goto LABEL_363;
      }
    }
  }
  std::string::basic_string[abi:ne180100]<0>(v327, "sourceLocale");
  siri::dialogengine::File::GetMetadataUnique(v5, (uint64_t)v327, &v338);
  if (SHIBYTE(v327[0].__end_) < 0) {
    operator delete(v327[0].__first_);
  }
  std::string::size_type v128 = HIBYTE(v338.__r_.__value_.__r.__words[2]);
  if ((v338.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v128 = v338.__r_.__value_.__l.__size_;
  }
  if (v128)
  {
    if ((siri::dialogengine::IsValidLocale((uint64_t)&v338) & 1) == 0)
    {
      std::string::basic_string[abi:ne180100]<0>(v327, "The value for meta name 'sourceLocale' must be a valid locale identifier");
      siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)v327, 0);
      if (SHIBYTE(v327[0].__end_) < 0) {
        operator delete(v327[0].__first_);
      }
    }
  }
  uint64_t v129 = *(void *)(v5 + 176);
  uint64_t v130 = *(void *)(v5 + 184);
  if (v129 != v130)
  {
    uint64_t v308 = *(void *)(v5 + 184);
    do
    {
      (*(void (**)(uint64_t, Context *))(*(void *)v129 + 24))(v129, v313);
      if (*(char *)(v129 + 207) < 0) {
        std::string::__init_copy_ctor_external(&v337, *(const std::string::value_type **)(v129 + 184), *(void *)(v129 + 192));
      }
      else {
        std::string v337 = *(std::string *)(v129 + 184);
      }
      std::string::size_type v131 = HIBYTE(v337.__r_.__value_.__r.__words[2]);
      if ((v337.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v131 = v337.__r_.__value_.__l.__size_;
      }
      if (!v131) {
        goto LABEL_636;
      }
      memset(v327, 0, 24);
      std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v327, v354, v355, 0xAAAAAAAAAAAAAAABLL * ((v355 - v354) >> 5));
      long long v132 = *(_OWORD *)&v327[0].__first_;
      __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)v327;
      std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s1);
      if ((void)v132 == *((void *)&v132 + 1))
      {
        std::string::basic_string[abi:ne180100]<0>(v327, "Template directory not supplied, unable to validate valueFromCat param.");
        siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)v327, v129 + 240);
        if (SHIBYTE(v327[0].__end_) < 0) {
          operator delete(v327[0].__first_);
        }
        goto LABEL_636;
      }
      memset(v327, 0, 24);
      std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v327, v354, v355, 0xAAAAAAAAAAAAAAABLL * ((v355 - v354) >> 5));
      siri::dialogengine::FindParamsFile((long long **)v327, (uint64_t)&v337, (uint64_t)&v336);
      __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)v327;
      std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s1);
      memset(&v335, 0, sizeof(v335));
      if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)v327, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v327[0].__first_ = *(_OWORD *)&v359.__r_.__value_.__l.__data_;
        v327[0].__end_ = (std::__split_buffer<std::string>::pointer)v359.__r_.__value_.__r.__words[2];
      }
      if (SHIBYTE(v327[0].__end_) < 0)
      {
        std::__split_buffer<std::string>::pointer v133 = v327[0].__begin_;
        operator delete(v327[0].__first_);
        if (v133)
        {
LABEL_389:
          if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&__s1, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
          }
          else {
            std::string __s1 = v359;
          }
          v136 = (_OWORD *)v335.__r_.__value_.__l.__size_;
          if (v335.__r_.__value_.__l.__size_ >= v335.__r_.__value_.__r.__words[2])
          {
            unint64_t v138 = 0xAAAAAAAAAAAAAAABLL
                 * ((uint64_t)(v335.__r_.__value_.__l.__size_ - v335.__r_.__value_.__r.__words[0]) >> 3);
            unint64_t v139 = v138 + 1;
            if (v138 + 1 > 0xAAAAAAAAAAAAAAALL) {
              std::vector<BOOL>::__throw_length_error[abi:ne180100]();
            }
            if (0x5555555555555556
               * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3) > v139)
              unint64_t v139 = 0x5555555555555556
                   * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3);
            if (0xAAAAAAAAAAAAAAABLL
               * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
              unint64_t v140 = 0xAAAAAAAAAAAAAAALL;
            else {
              unint64_t v140 = v139;
            }
            v327[0].__end_cap_.__value_ = (std::allocator<std::string> *)&v335.__r_.__value_.__r.__words[2];
            if (v140) {
              v141 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v335.__r_.__value_.__r.__words[2], v140);
            }
            else {
              v141 = 0;
            }
            v146 = v141 + v138;
            v327[0].__first_ = v141;
            v327[0].__begin_ = v146;
            v327[0].__end_cap_.__value_ = &v141[v140];
            long long v147 = *(_OWORD *)&__s1.__r_.__value_.__l.__data_;
            v146->__r_.__value_.__r.__words[2] = __s1.__r_.__value_.__r.__words[2];
            *(_OWORD *)&v146->__r_.__value_.__l.__data_ = v147;
            memset(&__s1, 0, sizeof(__s1));
            v327[0].__end_ = v146 + 1;
            std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&v335, v327);
            std::string::size_type v148 = v335.__r_.__value_.__l.__size_;
            std::__split_buffer<std::string>::~__split_buffer(v327);
            v335.__r_.__value_.__l.__size_ = v148;
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s1.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            long long v137 = *(_OWORD *)&__s1.__r_.__value_.__l.__data_;
            *(void *)(v335.__r_.__value_.__l.__size_ + 16) = *((void *)&__s1.__r_.__value_.__l + 2);
            _OWORD *v136 = v137;
            v335.__r_.__value_.__l.__size_ = (std::string::size_type)v136 + 24;
          }
          goto LABEL_419;
        }
      }
      else if (HIBYTE(v327[0].__end_))
      {
        goto LABEL_389;
      }
      std::string::size_type v134 = v335.__r_.__value_.__l.__size_;
      if (v335.__r_.__value_.__l.__size_ >= v335.__r_.__value_.__r.__words[2])
      {
        unint64_t v142 = 0xAAAAAAAAAAAAAAABLL
             * ((uint64_t)(v335.__r_.__value_.__l.__size_ - v335.__r_.__value_.__r.__words[0]) >> 3);
        unint64_t v143 = v142 + 1;
        if (v142 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        if (0x5555555555555556
           * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3) > v143)
          unint64_t v143 = 0x5555555555555556
               * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3);
        if (0xAAAAAAAAAAAAAAABLL
           * ((uint64_t)(v335.__r_.__value_.__r.__words[2] - v335.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
          unint64_t v144 = 0xAAAAAAAAAAAAAAALL;
        else {
          unint64_t v144 = v143;
        }
        v327[0].__end_cap_.__value_ = (std::allocator<std::string> *)&v335.__r_.__value_.__r.__words[2];
        if (v144) {
          v145 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v335.__r_.__value_.__r.__words[2], v144);
        }
        else {
          v145 = 0;
        }
        v327[0].__first_ = v145;
        v327[0].__begin_ = v145 + v142;
        v327[0].__end_ = v327[0].__begin_;
        v327[0].__end_cap_.__value_ = &v145[v144];
        std::string::basic_string[abi:ne180100]<0>(v327[0].__begin_->__r_.__value_.__r.__words, "en");
        ++v327[0].__end_;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&v335, v327);
        std::string::size_type v135 = v335.__r_.__value_.__l.__size_;
        std::__split_buffer<std::string>::~__split_buffer(v327);
      }
      else
      {
        std::string::basic_string[abi:ne180100]<0>((void *)v335.__r_.__value_.__l.__size_, "en");
        std::string::size_type v135 = v134 + 24;
      }
      v335.__r_.__value_.__l.__size_ = v135;
LABEL_419:
      memset(v327, 0, 24);
      std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v327, v354, v355, 0xAAAAAAAAAAAAAAABLL * ((v355 - v354) >> 5));
      siri::dialogengine::FindLocaleFile((long long **)v327, (long long **)&v335, (uint64_t)&v337, (uint64_t)&v334);
      __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)v327;
      std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s1);
      std::string::size_type v149 = HIBYTE(v334.__r_.__value_.__r.__words[2]);
      if ((v334.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v149 = v334.__r_.__value_.__l.__size_;
      }
      if (v149)
      {
        std::string::size_type v150 = HIBYTE(v336.__r_.__value_.__r.__words[2]);
        if ((v336.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v150 = v336.__r_.__value_.__l.__size_;
        }
        if (v150)
        {
          siri::dialogengine::Context::Context((siri::dialogengine::Context *)v327);
          siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)&__s1);
          if (SHIBYTE(v359.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&__n, v359.__r_.__value_.__l.__data_, v359.__r_.__value_.__l.__size_);
          }
          else {
            std::string __n = v359;
          }
          std::string::operator=(v325, &__n);
          if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__n.__r_.__value_.__l.__data_);
          }
          memset(&__n, 0, sizeof(__n));
          std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(&__n, v354, v355, 0xAAAAAAAAAAAAAAABLL * ((v355 - v354) >> 5));
          std::vector<siri::dialogengine::UpdatableDir>::__assign_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>((uint64_t)&__s1.__r_.__value_.__l.__size_, (std::string *)__n.__r_.__value_.__l.__data_, (std::string *)__n.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(__n.__r_.__value_.__l.__size_ - __n.__r_.__value_.__r.__words[0]) >> 5));
          v332.__r_.__value_.__r.__words[0] = (std::string::size_type)&__n;
          std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&v332);
          std::string::operator=(v324, &v336);
          std::string::operator=(v326, &v334);
          std::string::operator=(v323, &v337);
          siri::dialogengine::Context::SetRequestInfo((uint64_t)v327, (uint64_t)&__s1);
          siri::dialogengine::RequestInfo::~RequestInfo((void **)&__s1.__r_.__value_.__l.__data_);
          if (siri::dialogengine::Context::Load((siri::dialogengine::Context *)v327))
          {
            v157 = v328[33];
            uint64_t v158 = v329;
            if (v329) {
              atomic_fetch_add_explicit(&v329->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            uint64_t v309 = v129;
            v310 = v158;
            memset(&__s1, 0, sizeof(__s1));
            std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(&__s1, v157[22], v157[23], 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v157[23] - v157[22]) >> 4));
            std::string::size_type v311 = __s1.__r_.__value_.__l.__size_;
            std::string::size_type v159 = __s1.__r_.__value_.__r.__words[0];
            if (__s1.__r_.__value_.__r.__words[0] == __s1.__r_.__value_.__l.__size_) {
              goto LABEL_586;
            }
            while (1)
            {
              uint64_t v161 = *(void *)(v5 + 176);
              uint64_t v160 = *(void *)(v5 + 184);
              if (v161 == v160) {
                goto LABEL_585;
              }
              unint64_t v162 = (_OWORD *)(v159 + 32);
              while (1)
              {
                if (*(char *)(v159 + 31) < 0)
                {
                  std::string::__init_copy_ctor_external(&__n, *(const std::string::value_type **)(v159 + 8), *(void *)(v159 + 16));
                }
                else
                {
                  long long v163 = *(_OWORD *)(v159 + 8);
                  __n.__r_.__value_.__r.__words[2] = *(void *)(v159 + 24);
                  *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v163;
                }
                v164 = (long long *)(v161 + 8);
                if (*(char *)(v161 + 31) < 0)
                {
                  std::string::__init_copy_ctor_external(&v332, *(const std::string::value_type **)(v161 + 8), *(void *)(v161 + 16));
                }
                else
                {
                  long long v165 = *v164;
                  v332.__r_.__value_.__r.__words[2] = *(void *)(v161 + 24);
                  *(_OWORD *)&v332.__r_.__value_.__l.__data_ = v165;
                }
                uint64_t v166 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
                char v167 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
                if ((__n.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::string::size_type v168 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::string::size_type v168 = __n.__r_.__value_.__l.__size_;
                }
                std::string::size_type v169 = HIBYTE(v332.__r_.__value_.__r.__words[2]);
                int v170 = SHIBYTE(v332.__r_.__value_.__r.__words[2]);
                if ((v332.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::string::size_type v169 = v332.__r_.__value_.__l.__size_;
                }
                if (v168 != v169) {
                  goto LABEL_462;
                }
                v171 = (void *)v332.__r_.__value_.__r.__words[0];
                uint64_t v172 = (v332.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                     ? &v332
                     : (std::string *)v332.__r_.__value_.__r.__words[0];
                if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
                  break;
                }
                if (!*((unsigned char *)&__n.__r_.__value_.__s + 23)) {
                  goto LABEL_465;
                }
                p_n = &__n;
                while (p_n->__r_.__value_.__s.__data_[0] == v172->__r_.__value_.__s.__data_[0])
                {
                  p_n = (std::string *)((char *)p_n + 1);
                  uint64_t v172 = (std::string *)((char *)v172 + 1);
                  if (!--v166) {
                    goto LABEL_465;
                  }
                }
LABEL_462:
                if (v170 < 0)
                {
                  operator delete(v332.__r_.__value_.__l.__data_);
                  if ((*((unsigned char *)&__n.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_470:
                  }
                    operator delete(__n.__r_.__value_.__l.__data_);
                }
                else if (v167 < 0)
                {
                  goto LABEL_470;
                }
LABEL_510:
                v161 += 336;
                if (v161 == v160) {
                  goto LABEL_585;
                }
              }
              if (memcmp(__n.__r_.__value_.__l.__data_, v172, __n.__r_.__value_.__l.__size_)) {
                goto LABEL_462;
              }
LABEL_465:
              int v174 = *(unsigned __int8 *)(v161 + 232);
              if (v170 < 0)
              {
                operator delete(v171);
                if ((*((unsigned char *)&__n.__r_.__value_.__s + 23) & 0x80) == 0) {
                  goto LABEL_467;
                }
LABEL_472:
                operator delete(__n.__r_.__value_.__l.__data_);
                if (v174) {
                  goto LABEL_510;
                }
                goto LABEL_473;
              }
              if (v167 < 0) {
                goto LABEL_472;
              }
LABEL_467:
              if (v174) {
                goto LABEL_510;
              }
LABEL_473:
              if (*(char *)(v161 + 207) < 0) {
                std::string::__init_copy_ctor_external(&__n, *(const std::string::value_type **)(v161 + 184), *(void *)(v161 + 192));
              }
              else {
                std::string __n = *(std::string *)(v161 + 184);
              }
              if ((SHIBYTE(__n.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
              {
                if (*((unsigned char *)&__n.__r_.__value_.__s + 23)) {
                  goto LABEL_516;
                }
LABEL_480:
                uint64_t v176 = (_OWORD *)(v161 + 32);
                if (*(char *)(v161 + 55) < 0)
                {
                  std::string::__init_copy_ctor_external(&__n, *(const std::string::value_type **)(v161 + 32), *(void *)(v161 + 40));
                }
                else
                {
                  *(_OWORD *)&__n.__r_.__value_.__l.__data_ = *v176;
                  __n.__r_.__value_.__r.__words[2] = *(void *)(v161 + 48);
                }
                if (*(char *)(v159 + 55) < 0)
                {
                  std::string::__init_copy_ctor_external(&v332, *(const std::string::value_type **)(v159 + 32), *(void *)(v159 + 40));
                }
                else
                {
                  *(_OWORD *)&v332.__r_.__value_.__l.__data_ = *v162;
                  v332.__r_.__value_.__r.__words[2] = *(void *)(v159 + 48);
                }
                char v177 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
                if ((__n.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::string::size_type v178 = HIBYTE(__n.__r_.__value_.__r.__words[2]);
                }
                else {
                  std::string::size_type v178 = __n.__r_.__value_.__l.__size_;
                }
                std::string::size_type v179 = HIBYTE(v332.__r_.__value_.__r.__words[2]);
                int v180 = SHIBYTE(v332.__r_.__value_.__r.__words[2]);
                if ((v332.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  std::string::size_type v179 = v332.__r_.__value_.__l.__size_;
                }
                if (v178 == v179)
                {
                  if ((v332.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                    v181 = &v332;
                  }
                  else {
                    v181 = (std::string *)v332.__r_.__value_.__r.__words[0];
                  }
                  if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0)
                  {
                    BOOL v190 = memcmp(__n.__r_.__value_.__l.__data_, v181, __n.__r_.__value_.__l.__size_) == 0;
                    if (v180 < 0) {
                      goto LABEL_508;
                    }
                  }
                  else
                  {
                    if (*((unsigned char *)&__n.__r_.__value_.__s + 23))
                    {
                      uint64_t v182 = HIBYTE(__n.__r_.__value_.__r.__words[2]) - 1;
                      v183 = &__n;
                      do
                      {
                        int v185 = v183->__r_.__value_.__s.__data_[0];
                        v183 = (std::string *)((char *)v183 + 1);
                        int v184 = v185;
                        int v187 = v181->__r_.__value_.__s.__data_[0];
                        v181 = (std::string *)((char *)v181 + 1);
                        int v186 = v187;
                        BOOL v189 = v182-- != 0;
                        BOOL v190 = v184 == v186;
                      }
                      while (v184 == v186 && v189);
                      if ((SHIBYTE(v332.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                        goto LABEL_504;
                      }
LABEL_508:
                      operator delete(v332.__r_.__value_.__l.__data_);
                      if ((*((unsigned char *)&__n.__r_.__value_.__s + 23) & 0x80) == 0)
                      {
LABEL_505:
                        if (!v190) {
                          goto LABEL_518;
                        }
                        goto LABEL_510;
                      }
LABEL_509:
                      operator delete(__n.__r_.__value_.__l.__data_);
                      if (!v190)
                      {
LABEL_518:
                        if (*(char *)(v161 + 31) < 0)
                        {
                          std::string::__init_copy_ctor_external(&v316, *(const std::string::value_type **)(v161 + 8), *(void *)(v161 + 16));
                        }
                        else
                        {
                          long long v192 = *v164;
                          v316.__r_.__value_.__r.__words[2] = *(void *)(v161 + 24);
                          *(_OWORD *)&v316.__r_.__value_.__l.__data_ = v192;
                        }
                        v204 = std::string::insert(&v316, 0, "ValueFromCat Parameter '");
                        long long v205 = *(_OWORD *)&v204->__r_.__value_.__l.__data_;
                        v317.__r_.__value_.__r.__words[2] = v204->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v317.__r_.__value_.__l.__data_ = v205;
                        v204->__r_.__value_.__l.__size_ = 0;
                        v204->__r_.__value_.__r.__words[2] = 0;
                        v204->__r_.__value_.__r.__words[0] = 0;
                        v206 = std::string::append(&v317, "' of type '");
                        long long v207 = *(_OWORD *)&v206->__r_.__value_.__l.__data_;
                        v318.__r_.__value_.__r.__words[2] = v206->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v318.__r_.__value_.__l.__data_ = v207;
                        v206->__r_.__value_.__l.__size_ = 0;
                        v206->__r_.__value_.__r.__words[2] = 0;
                        v206->__r_.__value_.__r.__words[0] = 0;
                        if (*(char *)(v161 + 55) < 0)
                        {
                          std::string::__init_copy_ctor_external(&v315, *(const std::string::value_type **)(v161 + 32), *(void *)(v161 + 40));
                        }
                        else
                        {
                          *(_OWORD *)&v315.__r_.__value_.__l.__data_ = *v176;
                          v315.__r_.__value_.__r.__words[2] = *(void *)(v161 + 48);
                        }
                        if ((v315.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          v208 = &v315;
                        }
                        else {
                          v208 = (std::string *)v315.__r_.__value_.__r.__words[0];
                        }
                        if ((v315.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          std::string::size_type v209 = HIBYTE(v315.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          std::string::size_type v209 = v315.__r_.__value_.__l.__size_;
                        }
                        v210 = std::string::append(&v318, (const std::string::value_type *)v208, v209);
                        long long v211 = *(_OWORD *)&v210->__r_.__value_.__l.__data_;
                        v319.__r_.__value_.__r.__words[2] = v210->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v319.__r_.__value_.__l.__data_ = v211;
                        v210->__r_.__value_.__l.__size_ = 0;
                        v210->__r_.__value_.__r.__words[2] = 0;
                        v210->__r_.__value_.__r.__words[0] = 0;
                        v212 = std::string::append(&v319, "' conflicts with parameter in valueFromCat file '");
                        long long v213 = *(_OWORD *)&v212->__r_.__value_.__l.__data_;
                        v320.__r_.__value_.__r.__words[2] = v212->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v320.__r_.__value_.__l.__data_ = v213;
                        v212->__r_.__value_.__l.__size_ = 0;
                        v212->__r_.__value_.__r.__words[2] = 0;
                        v212->__r_.__value_.__r.__words[0] = 0;
                        if ((v337.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          long long v214 = &v337;
                        }
                        else {
                          long long v214 = (std::string *)v337.__r_.__value_.__r.__words[0];
                        }
                        if ((v337.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          std::string::size_type v215 = HIBYTE(v337.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          std::string::size_type v215 = v337.__r_.__value_.__l.__size_;
                        }
                        long long v216 = std::string::append(&v320, (const std::string::value_type *)v214, v215);
                        long long v217 = *(_OWORD *)&v216->__r_.__value_.__l.__data_;
                        v321.__r_.__value_.__r.__words[2] = v216->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v321.__r_.__value_.__l.__data_ = v217;
                        v216->__r_.__value_.__l.__size_ = 0;
                        v216->__r_.__value_.__r.__words[2] = 0;
                        v216->__r_.__value_.__r.__words[0] = 0;
                        unsigned __int8 v218 = std::string::append(&v321, "' of type '");
                        long long v219 = *(_OWORD *)&v218->__r_.__value_.__l.__data_;
                        v331.__r_.__value_.__r.__words[2] = v218->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v331.__r_.__value_.__l.__data_ = v219;
                        v218->__r_.__value_.__l.__size_ = 0;
                        v218->__r_.__value_.__r.__words[2] = 0;
                        v218->__r_.__value_.__r.__words[0] = 0;
                        if (*(char *)(v159 + 55) < 0)
                        {
                          std::string::__init_copy_ctor_external(&v314, *(const std::string::value_type **)(v159 + 32), *(void *)(v159 + 40));
                        }
                        else
                        {
                          *(_OWORD *)&v314.__r_.__value_.__l.__data_ = *v162;
                          v314.__r_.__value_.__r.__words[2] = *(void *)(v159 + 48);
                        }
                        if ((v314.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          unsigned __int8 v220 = &v314;
                        }
                        else {
                          unsigned __int8 v220 = (std::string *)v314.__r_.__value_.__r.__words[0];
                        }
                        if ((v314.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                          std::string::size_type v221 = HIBYTE(v314.__r_.__value_.__r.__words[2]);
                        }
                        else {
                          std::string::size_type v221 = v314.__r_.__value_.__l.__size_;
                        }
                        unsigned __int8 v222 = std::string::append(&v331, (const std::string::value_type *)v220, v221);
                        long long v223 = *(_OWORD *)&v222->__r_.__value_.__l.__data_;
                        v332.__r_.__value_.__r.__words[2] = v222->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&v332.__r_.__value_.__l.__data_ = v223;
                        v222->__r_.__value_.__l.__size_ = 0;
                        v222->__r_.__value_.__r.__words[2] = 0;
                        v222->__r_.__value_.__r.__words[0] = 0;
                        unsigned __int8 v224 = std::string::append(&v332, "'.");
                        long long v225 = *(_OWORD *)&v224->__r_.__value_.__l.__data_;
                        __n.__r_.__value_.__r.__words[2] = v224->__r_.__value_.__r.__words[2];
                        *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v225;
                        v224->__r_.__value_.__l.__size_ = 0;
                        v224->__r_.__value_.__r.__words[2] = 0;
                        v224->__r_.__value_.__r.__words[0] = 0;
                        siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)&__n, v161 + 240);
                        if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(__n.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v332.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v314.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v314.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v331.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v321.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v320.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v319.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v315.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v315.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v318.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v317.__r_.__value_.__r.__words[2]) < 0) {
                          operator delete(v317.__r_.__value_.__l.__data_);
                        }
                        if (SHIBYTE(v316.__r_.__value_.__r.__words[2]) < 0)
                        {
                          v203 = (void *)v316.__r_.__value_.__r.__words[0];
                          goto LABEL_584;
                        }
                        goto LABEL_585;
                      }
                      goto LABEL_510;
                    }
                    BOOL v190 = 1;
                    if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
                      goto LABEL_508;
                    }
                  }
                }
                else
                {
                  BOOL v190 = 0;
                  if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
                    goto LABEL_508;
                  }
                }
LABEL_504:
                if ((v177 & 0x80) == 0) {
                  goto LABEL_505;
                }
                goto LABEL_509;
              }
              std::string::size_type v175 = __n.__r_.__value_.__l.__size_;
              operator delete(__n.__r_.__value_.__l.__data_);
              if (!v175) {
                goto LABEL_480;
              }
LABEL_516:
              if (*(char *)(v161 + 31) < 0)
              {
                std::string::__init_copy_ctor_external(&v320, *(const std::string::value_type **)(v161 + 8), *(void *)(v161 + 16));
              }
              else
              {
                long long v191 = *v164;
                v320.__r_.__value_.__r.__words[2] = *(void *)(v161 + 24);
                *(_OWORD *)&v320.__r_.__value_.__l.__data_ = v191;
              }
              v193 = std::string::insert(&v320, 0, "ValueFromCat Parameter '");
              long long v194 = *(_OWORD *)&v193->__r_.__value_.__l.__data_;
              v321.__r_.__value_.__r.__words[2] = v193->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v321.__r_.__value_.__l.__data_ = v194;
              v193->__r_.__value_.__l.__size_ = 0;
              v193->__r_.__value_.__r.__words[2] = 0;
              v193->__r_.__value_.__r.__words[0] = 0;
              v195 = std::string::append(&v321, "' collides with parameter in valueFromCat file '");
              long long v196 = *(_OWORD *)&v195->__r_.__value_.__l.__data_;
              v331.__r_.__value_.__r.__words[2] = v195->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v331.__r_.__value_.__l.__data_ = v196;
              v195->__r_.__value_.__l.__size_ = 0;
              v195->__r_.__value_.__r.__words[2] = 0;
              v195->__r_.__value_.__r.__words[0] = 0;
              if ((v337.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                id v197 = &v337;
              }
              else {
                id v197 = (std::string *)v337.__r_.__value_.__r.__words[0];
              }
              if ((v337.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                std::string::size_type v198 = HIBYTE(v337.__r_.__value_.__r.__words[2]);
              }
              else {
                std::string::size_type v198 = v337.__r_.__value_.__l.__size_;
              }
              uint64_t v199 = std::string::append(&v331, (const std::string::value_type *)v197, v198);
              long long v200 = *(_OWORD *)&v199->__r_.__value_.__l.__data_;
              v332.__r_.__value_.__r.__words[2] = v199->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v332.__r_.__value_.__l.__data_ = v200;
              v199->__r_.__value_.__l.__size_ = 0;
              v199->__r_.__value_.__r.__words[2] = 0;
              v199->__r_.__value_.__r.__words[0] = 0;
              v201 = std::string::append(&v332, "'.");
              long long v202 = *(_OWORD *)&v201->__r_.__value_.__l.__data_;
              __n.__r_.__value_.__r.__words[2] = v201->__r_.__value_.__r.__words[2];
              *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v202;
              v201->__r_.__value_.__l.__size_ = 0;
              v201->__r_.__value_.__r.__words[2] = 0;
              v201->__r_.__value_.__r.__words[0] = 0;
              siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)&__n, v161 + 240);
              if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__n.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v332.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v331.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v321.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0)
              {
                v203 = (void *)v320.__r_.__value_.__r.__words[0];
LABEL_584:
                operator delete(v203);
              }
LABEL_585:
              v159 += 336;
              uint64_t v5 = v312;
              if (v159 == v311)
              {
LABEL_586:
                __n.__r_.__value_.__r.__words[0] = (std::string::size_type)&__s1;
                std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&__n);
                uint64_t v130 = v308;
                uint64_t v129 = v309;
                if (v310) {
                  std::__shared_weak_count::__release_shared[abi:ne180100](v310);
                }
                goto LABEL_631;
              }
            }
          }
          if (SHIBYTE(v330.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&__s1, v330.__r_.__value_.__l.__data_, v330.__r_.__value_.__l.__size_);
          }
          else {
            std::string __s1 = v330;
          }
          std::operator+<char>();
          NSNumber v238 = std::string::append(&v331, "'. ");
          long long v239 = *(_OWORD *)&v238->__r_.__value_.__l.__data_;
          v332.__r_.__value_.__r.__words[2] = v238->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v332.__r_.__value_.__l.__data_ = v239;
          v238->__r_.__value_.__l.__size_ = 0;
          v238->__r_.__value_.__r.__words[2] = 0;
          v238->__r_.__value_.__r.__words[0] = 0;
          if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unsigned __int8 v240 = &__s1;
          }
          else {
            unsigned __int8 v240 = (std::string *)__s1.__r_.__value_.__r.__words[0];
          }
          if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v241 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v241 = __s1.__r_.__value_.__l.__size_;
          }
          unsigned __int8 v242 = std::string::append(&v332, (const std::string::value_type *)v240, v241);
          long long v243 = *(_OWORD *)&v242->__r_.__value_.__l.__data_;
          __n.__r_.__value_.__r.__words[2] = v242->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v243;
          v242->__r_.__value_.__l.__size_ = 0;
          v242->__r_.__value_.__r.__words[2] = 0;
          v242->__r_.__value_.__r.__words[0] = 0;
          siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__n, v129 + 240);
          if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__n.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v332.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v331.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__s1.__r_.__value_.__l.__data_);
          }
LABEL_631:
          siri::dialogengine::Context::~Context((siri::dialogengine::Context *)v327);
          goto LABEL_632;
        }
        std::operator+<char>();
        v154 = std::string::append(&v332, "' referenced by valueFromCat parameter '");
        long long v155 = *(_OWORD *)&v154->__r_.__value_.__l.__data_;
        __n.__r_.__value_.__r.__words[2] = v154->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v155;
        v154->__r_.__value_.__l.__size_ = 0;
        v154->__r_.__value_.__r.__words[2] = 0;
        v154->__r_.__value_.__r.__words[0] = 0;
        if (*(char *)(v129 + 31) < 0)
        {
          std::string::__init_copy_ctor_external(&v331, *(const std::string::value_type **)(v129 + 8), *(void *)(v129 + 16));
        }
        else
        {
          long long v156 = *(_OWORD *)(v129 + 8);
          v331.__r_.__value_.__r.__words[2] = *(void *)(v129 + 24);
          *(_OWORD *)&v331.__r_.__value_.__l.__data_ = v156;
        }
        if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unsigned __int8 v232 = &v331;
        }
        else {
          unsigned __int8 v232 = (std::string *)v331.__r_.__value_.__r.__words[0];
        }
        if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v233 = HIBYTE(v331.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v233 = v331.__r_.__value_.__l.__size_;
        }
        unsigned __int8 v234 = std::string::append(&__n, (const std::string::value_type *)v232, v233);
        long long v235 = *(_OWORD *)&v234->__r_.__value_.__l.__data_;
        __s1.__r_.__value_.__r.__words[2] = v234->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v235;
        v234->__r_.__value_.__l.__size_ = 0;
        v234->__r_.__value_.__r.__words[2] = 0;
        v234->__r_.__value_.__r.__words[0] = 0;
        uint64_t v236 = std::string::append(&__s1, "' has no _params file, so there can be no parameter collisions");
        long long v237 = *(_OWORD *)&v236->__r_.__value_.__l.__data_;
        v327[0].__end_ = (std::__split_buffer<std::string>::pointer)v236->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v327[0].__first_ = v237;
        v236->__r_.__value_.__l.__size_ = 0;
        v236->__r_.__value_.__r.__words[2] = 0;
        v236->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Log::Debug((siri::dialogengine *)v327);
      }
      else
      {
        std::operator+<char>();
        v151 = std::string::append(&v332, "' referenced by valueFromCat parameter '");
        long long v152 = *(_OWORD *)&v151->__r_.__value_.__l.__data_;
        __n.__r_.__value_.__r.__words[2] = v151->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v152;
        v151->__r_.__value_.__l.__size_ = 0;
        v151->__r_.__value_.__r.__words[2] = 0;
        v151->__r_.__value_.__r.__words[0] = 0;
        if (*(char *)(v129 + 31) < 0)
        {
          std::string::__init_copy_ctor_external(&v331, *(const std::string::value_type **)(v129 + 8), *(void *)(v129 + 16));
        }
        else
        {
          long long v153 = *(_OWORD *)(v129 + 8);
          v331.__r_.__value_.__r.__words[2] = *(void *)(v129 + 24);
          *(_OWORD *)&v331.__r_.__value_.__l.__data_ = v153;
        }
        if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unsigned __int8 v226 = &v331;
        }
        else {
          unsigned __int8 v226 = (std::string *)v331.__r_.__value_.__r.__words[0];
        }
        if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v227 = HIBYTE(v331.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v227 = v331.__r_.__value_.__l.__size_;
        }
        unsigned __int8 v228 = std::string::append(&__n, (const std::string::value_type *)v226, v227);
        long long v229 = *(_OWORD *)&v228->__r_.__value_.__l.__data_;
        __s1.__r_.__value_.__r.__words[2] = v228->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v229;
        v228->__r_.__value_.__l.__size_ = 0;
        v228->__r_.__value_.__r.__words[2] = 0;
        v228->__r_.__value_.__r.__words[0] = 0;
        unsigned __int8 v230 = std::string::append(&__s1, "' was not found");
        long long v231 = *(_OWORD *)&v230->__r_.__value_.__l.__data_;
        v327[0].__end_ = (std::__split_buffer<std::string>::pointer)v230->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v327[0].__first_ = v231;
        v230->__r_.__value_.__l.__size_ = 0;
        v230->__r_.__value_.__r.__words[2] = 0;
        v230->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)v327, v129 + 240);
      }
      if (SHIBYTE(v327[0].__end_) < 0) {
        operator delete(v327[0].__first_);
      }
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v331.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__n.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v332.__r_.__value_.__l.__data_);
      }
LABEL_632:
      if (SHIBYTE(v334.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v334.__r_.__value_.__l.__data_);
      }
      v327[0].__first_ = &v335;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)v327);
      if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v336.__r_.__value_.__l.__data_);
      }
LABEL_636:
      if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v337.__r_.__value_.__l.__data_);
      }
      v129 += 336;
    }
    while (v129 != v130);
  }
  uint64_t v244 = *(void *)(v5 + 224);
  if (v244) {
    (*(void (**)(uint64_t, Context *))(*(void *)v244 + 32))(v244, v313);
  }
  v245 = *(void **)(v5 + 272);
  if (v245 != (void *)(v5 + 280))
  {
    do
    {
      (*(void (**)(void, Context *))(*(void *)v245[7] + 16))(v245[7], v313);
      if (siri::dialogengine::Condition::HasInfiniteLoop((siri::dialogengine::Condition *)v245[7], (siri::dialogengine::Context *)v313))
      {
        uint64_t v246 = v245[7];
        if (*(char *)(v246 + 119) < 0)
        {
          std::string::__init_copy_ctor_external((std::string *)v327, *(const std::string::value_type **)(v246 + 96), *(void *)(v246 + 104));
        }
        else
        {
          *(_OWORD *)&v327[0].__first_ = *(_OWORD *)(v246 + 96);
          v327[0].__end_ = *(std::__split_buffer<std::string>::pointer *)(v246 + 112);
        }
        std::operator+<char>();
        v247 = std::string::append(&v337, "'");
        long long v248 = *(_OWORD *)&v247->__r_.__value_.__l.__data_;
        __s1.__r_.__value_.__r.__words[2] = v247->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s1.__r_.__value_.__l.__data_ = v248;
        v247->__r_.__value_.__l.__size_ = 0;
        v247->__r_.__value_.__r.__words[2] = 0;
        v247->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, v245[7]);
        if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s1.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v337.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v337.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v327[0].__end_) < 0) {
          operator delete(v327[0].__first_);
        }
      }
      long long v249 = (void *)v245[1];
      if (v249)
      {
        do
        {
          long long v250 = v249;
          long long v249 = (void *)*v249;
        }
        while (v249);
      }
      else
      {
        do
        {
          long long v250 = (void *)v245[2];
          BOOL v126 = *v250 == (void)v245;
          v245 = v250;
        }
        while (!v126);
      }
      v245 = v250;
    }
    while (v250 != (void *)(v5 + 280));
  }
  siri::dialogengine::File::CheckForUnusedConditions((siri::dialogengine::File *)v5, (siri::dialogengine::Context *)v313);
  siri::dialogengine::GroupPhrases::Validate((siri::dialogengine::GroupPhrases *)(v5 + 312), (siri::dialogengine::Context *)v313);
  uint64_t v251 = *(void *)(v5 + 240);
  if (v251) {
    (*(void (**)(uint64_t, Context *))(*(void *)v251 + 32))(v251, v313);
  }
  uint64_t v252 = *(void *)(v5 + 296);
  if (v252)
  {
    memset(v327, 0, 24);
    std::vector<std::shared_ptr<siri::dialogengine::Node>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::Node>*,std::shared_ptr<siri::dialogengine::Node>*>(v327, *(void **)(v252 + 208), *(void **)(v252 + 216), (uint64_t)(*(void *)(v252 + 216) - *(void *)(v252 + 208)) >> 4);
    std::__split_buffer<std::string>::pointer v254 = v327[0].__begin_;
    for (std::__split_buffer<std::string>::pointer j = v327[0].__first_; j != v254; std::__split_buffer<std::string>::pointer j = (std::__split_buffer<std::string>::pointer)((char *)j + 16))
    {
      unsigned __int8 v255 = (const void *)j->__r_.__value_.__r.__words[0];
      if (j->__r_.__value_.__r.__words[0])
      {
        {
          std::string::basic_string[abi:ne180100]<0>(&__s1, "Cannot nest grouping elements under the fallback");
          siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, (uint64_t)v255);
          if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__s1.__r_.__value_.__l.__data_);
          }
        }
        if (v256)
        {
          if (siri::dialogengine::Dialog::HasRequiredVariablesOrPhrases(v256, v257))
          {
            std::string::basic_string[abi:ne180100]<0>(&__s1, "Fallback dialog can only have optional variables or phrases");
            siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&__s1, (uint64_t)v255);
            if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__s1.__r_.__value_.__l.__data_);
            }
          }
        }
      }
    }
    __s1.__r_.__value_.__r.__words[0] = (std::string::size_type)v327;
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__s1);
    uint64_t v5 = v312;
    (*(void (**)(void, Context *))(**(void **)(v312 + 296) + 32))(*(void *)(v312 + 296), v313);
  }
  siri::dialogengine::File::GetDialogs((siri::dialogengine::File *)v5, &__s1);
  *(_OWORD *)&v337.__r_.__value_.__r.__words[1] = 0uLL;
  v337.__r_.__value_.__r.__words[0] = (std::string::size_type)&v337.__r_.__value_.__l.__size_;
  std::string::size_type v260 = __s1.__r_.__value_.__l.__size_;
  for (k = (uint64_t *)__s1.__r_.__value_.__r.__words[0]; k != (uint64_t *)v260; k += 2)
  {
    uint64_t v261 = *k;
    if (*(char *)(*k + 119) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v327, *(const std::string::value_type **)(v261 + 96), *(void *)(v261 + 104));
    }
    else
    {
      *(_OWORD *)&v327[0].__first_ = *(_OWORD *)(v261 + 96);
      v327[0].__end_ = *(std::__split_buffer<std::string>::pointer *)(v261 + 112);
    }
    std::__split_buffer<std::string>::pointer v262 = (std::__split_buffer<std::string>::pointer)HIBYTE(v327[0].__end_);
    char v263 = HIBYTE(v327[0].__end_);
    if (SHIBYTE(v327[0].__end_) < 0) {
      std::__split_buffer<std::string>::pointer v262 = v327[0].__begin_;
    }
    if (v262)
    {
      if (&v337.__r_.__value_.__r.__words[1] != (std::string::size_type *)std::__tree<std::string>::find<std::string>((uint64_t)&v337, (const void **)&v327[0].__first_))
      {
        std::operator+<char>();
        v264 = std::string::append(&v335, "'");
        long long v265 = *(_OWORD *)&v264->__r_.__value_.__l.__data_;
        v336.__r_.__value_.__r.__words[2] = v264->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v336.__r_.__value_.__l.__data_ = v265;
        v264->__r_.__value_.__l.__size_ = 0;
        v264->__r_.__value_.__r.__words[2] = 0;
        v264->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)&v336, *k);
        if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v336.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v335.__r_.__value_.__l.__data_);
        }
      }
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v337, (const void **)&v327[0].__first_, (uint64_t)v327);
      char v263 = HIBYTE(v327[0].__end_);
    }
    if (v263 < 0) {
      operator delete(v327[0].__first_);
    }
  }
  if (*(unsigned char *)(v5 + 672) && !v353)
  {
    std::string::basic_string[abi:ne180100]<0>(&v335, "category");
    siri::dialogengine::File::GetMetadataUnique(v5, (uint64_t)&v335, (std::string *)v327);
    siri::dialogengine::StringToLower((uint64_t)v327, (uint64_t)&v336);
    if (SHIBYTE(v327[0].__end_) < 0) {
      operator delete(v327[0].__first_);
    }
    if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v335.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0)
    {
      v268 = (std::string *)v336.__r_.__value_.__r.__words[0];
      if (v336.__r_.__value_.__l.__size_ != 14) {
        goto LABEL_709;
      }
      if (*(void *)v336.__r_.__value_.__l.__data_ != 0x73726F6664657375
        || *(void *)(v336.__r_.__value_.__r.__words[0] + 6) != 0x74657070696E7372)
      {
        goto LABEL_709;
      }
    }
    else if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) != 14 {
           || (v336.__r_.__value_.__r.__words[0] == 0x73726F6664657375
    }
             ? (BOOL v267 = *(std::string::size_type *)((char *)v336.__r_.__value_.__r.__words + 6) == 0x74657070696E7372)
             : (BOOL v267 = 0),
               !v267))
    {
      v268 = &v336;
LABEL_709:
      siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Snippet dialog ID check: Skip because meta category is not 'usedforsnippet' (value: '%s')", v266, v268);
LABEL_710:
      if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v336.__r_.__value_.__l.__data_);
      }
      goto LABEL_712;
    }
    siri::dialogengine::File::GetSourceLocale((siri::dialogengine::File *)v5, &v335);
    std::string::size_type v274 = HIBYTE(v335.__r_.__value_.__r.__words[2]);
    if ((v335.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v274 = v335.__r_.__value_.__l.__size_;
    }
    if (!v274) {
      MEMORY[0x1C8796900](&v335, "en");
    }
    v275 = (_OWORD *)(v5 + 128);
    if (*(char *)(v5 + 151) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)v327, *(const std::string::value_type **)(v5 + 128), *(void *)(v5 + 136));
    }
    else
    {
      *(_OWORD *)&v327[0].__first_ = *v275;
      v327[0].__end_ = *(std::__split_buffer<std::string>::pointer *)(v5 + 144);
    }
    if (SHIBYTE(v327[0].__end_) >= 0) {
      std::__split_buffer<std::string>::pointer v276 = (std::__split_buffer<std::string>::pointer)HIBYTE(v327[0].__end_);
    }
    else {
      std::__split_buffer<std::string>::pointer v276 = v327[0].__begin_;
    }
    std::string::size_type v277 = HIBYTE(v335.__r_.__value_.__r.__words[2]);
    char v278 = HIBYTE(v335.__r_.__value_.__r.__words[2]);
    if ((v335.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v277 = v335.__r_.__value_.__l.__size_;
    }
    if (v276 == (std::__split_buffer<std::string>::pointer)v277)
    {
      std::string::size_type v279 = v335.__r_.__value_.__r.__words[0];
      if ((v335.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v280 = &v335;
      }
      else {
        v280 = (std::string *)v335.__r_.__value_.__r.__words[0];
      }
      if ((HIBYTE(v327[0].__end_) & 0x80) != 0)
      {
        std::__split_buffer<std::string>::pointer v285 = v327[0].__first_;
        int v286 = memcmp(v327[0].__first_, v280, (size_t)v327[0].__begin_);
        operator delete(v285);
        if (!v286)
        {
          char v278 = HIBYTE(v335.__r_.__value_.__r.__words[2]);
          std::string::size_type v279 = v335.__r_.__value_.__r.__words[0];
LABEL_808:
          BOOL v306 = v278 < 0;
          v307 = &v335;
          if (v306) {
            v307 = (std::string *)v279;
          }
          siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Snippet dialog ID check: Skip because locale is source locale ('%s')", (const char *)v280, v307);
LABEL_811:
          if (SHIBYTE(v335.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v335.__r_.__value_.__l.__data_);
          }
          goto LABEL_710;
        }
      }
      else
      {
        if (!HIBYTE(v327[0].__end_)) {
          goto LABEL_808;
        }
        uint64_t v281 = 0;
        do
        {
          int v282 = *((unsigned __int8 *)&v327[0].__first_ + v281);
          int v283 = v280->__r_.__value_.__s.__data_[v281];
        }
        while (v282 == v283 && HIBYTE(v327[0].__end_) - 1 != v281++);
        if (v282 == v283) {
          goto LABEL_808;
        }
      }
    }
    else if ((HIBYTE(v327[0].__end_) & 0x80) != 0)
    {
      operator delete(v327[0].__first_);
    }
    SourceLocaleDialogIds = (const void ***)siri::dialogengine::File::GetSourceLocaleDialogIds((siri::dialogengine::File *)v5);
    std::set<std::string>::set[abi:ne180100]((uint64_t *)&v334, SourceLocaleDialogIds);
    if (v334.__r_.__value_.__r.__words[2])
    {
      v327[0].__end_cap_.__value_ = 0;
      v327[0].__end_ = 0;
      v327[0].__first_ = (std::__split_buffer<std::string>::pointer)&unk_1F211B858;
      v327[0].__begin_ = (std::__split_buffer<std::string>::pointer)&v327[0].__end_;
      (*(void (**)(uint64_t, std::__split_buffer<std::string> *))(*(void *)v5 + 32))(v5, v327);
      std::string::size_type v289 = v334.__r_.__value_.__r.__words[0];
      if ((std::string::size_type *)v334.__r_.__value_.__l.__data_ != &v334.__r_.__value_.__r.__words[1])
      {
        do
        {
          if (&v327[0].__end_ == (std::__split_buffer<std::string>::pointer *)std::__tree<std::string>::find<std::string>((uint64_t)&v327[0].__begin_, (const void **)(v289 + 32)))
          {
            std::operator+<char>();
            v290 = std::string::append(&v319, "' in the source locale file (");
            long long v291 = *(_OWORD *)&v290->__r_.__value_.__l.__data_;
            v320.__r_.__value_.__r.__words[2] = v290->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v320.__r_.__value_.__l.__data_ = v291;
            v290->__r_.__value_.__l.__size_ = 0;
            v290->__r_.__value_.__r.__words[2] = 0;
            v290->__r_.__value_.__r.__words[0] = 0;
            if ((v335.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v292 = &v335;
            }
            else {
              v292 = (std::string *)v335.__r_.__value_.__r.__words[0];
            }
            if ((v335.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v293 = HIBYTE(v335.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v293 = v335.__r_.__value_.__l.__size_;
            }
            v294 = std::string::append(&v320, (const std::string::value_type *)v292, v293);
            long long v295 = *(_OWORD *)&v294->__r_.__value_.__l.__data_;
            v321.__r_.__value_.__r.__words[2] = v294->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v321.__r_.__value_.__l.__data_ = v295;
            v294->__r_.__value_.__l.__size_ = 0;
            v294->__r_.__value_.__r.__words[2] = 0;
            v294->__r_.__value_.__r.__words[0] = 0;
            v296 = std::string::append(&v321, ") was not found in this locale file (");
            long long v297 = *(_OWORD *)&v296->__r_.__value_.__l.__data_;
            v331.__r_.__value_.__r.__words[2] = v296->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v331.__r_.__value_.__l.__data_ = v297;
            v296->__r_.__value_.__l.__size_ = 0;
            v296->__r_.__value_.__r.__words[2] = 0;
            v296->__r_.__value_.__r.__words[0] = 0;
            if (*(char *)(v312 + 151) < 0)
            {
              std::string::__init_copy_ctor_external(&v318, *(const std::string::value_type **)(v312 + 128), *(void *)(v312 + 136));
            }
            else
            {
              *(_OWORD *)&v318.__r_.__value_.__l.__data_ = *v275;
              v318.__r_.__value_.__r.__words[2] = *(void *)(v5 + 144);
            }
            if ((v318.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v298 = &v318;
            }
            else {
              v298 = (std::string *)v318.__r_.__value_.__r.__words[0];
            }
            if ((v318.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v299 = HIBYTE(v318.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v299 = v318.__r_.__value_.__l.__size_;
            }
            v300 = std::string::append(&v331, (const std::string::value_type *)v298, v299);
            long long v301 = *(_OWORD *)&v300->__r_.__value_.__l.__data_;
            v332.__r_.__value_.__r.__words[2] = v300->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v332.__r_.__value_.__l.__data_ = v301;
            v300->__r_.__value_.__l.__size_ = 0;
            v300->__r_.__value_.__r.__words[2] = 0;
            v300->__r_.__value_.__r.__words[0] = 0;
            v302 = std::string::append(&v332, ")");
            long long v303 = *(_OWORD *)&v302->__r_.__value_.__l.__data_;
            __n.__r_.__value_.__r.__words[2] = v302->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__n.__r_.__value_.__l.__data_ = v303;
            v302->__r_.__value_.__l.__size_ = 0;
            v302->__r_.__value_.__r.__words[2] = 0;
            v302->__r_.__value_.__r.__words[0] = 0;
            siri::dialogengine::Context::AddValidationWarning((uint64_t)v313, (long long *)&__n, 0);
            if (SHIBYTE(__n.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__n.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v332.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v332.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v318.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v318.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v331.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v321.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v321.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v320.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v320.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v319.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v319.__r_.__value_.__l.__data_);
            }
          }
          v304 = *(std::string **)(v289 + 8);
          if (v304)
          {
            do
            {
              v305 = v304;
              v304 = (std::string *)v304->__r_.__value_.__r.__words[0];
            }
            while (v304);
          }
          else
          {
            do
            {
              v305 = *(std::string **)(v289 + 16);
              BOOL v126 = v305->__r_.__value_.__r.__words[0] == v289;
              std::string::size_type v289 = (std::string::size_type)v305;
            }
            while (!v126);
          }
          std::string::size_type v289 = (std::string::size_type)v305;
        }
        while (v305 != (std::string *)&v334.__r_.__value_.__r.__words[1]);
      }
      v327[0].__first_ = (std::__split_buffer<std::string>::pointer)&unk_1F211B858;
      std::__tree<std::string>::destroy((uint64_t)&v327[0].__begin_, (char *)v327[0].__end_);
      uint64_t v5 = v312;
    }
    else
    {
      siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Snippet dialog ID check: Source locale file has no dialog IDs (perhaps because the file was not found or could not be loaded)", v288);
    }
    std::__tree<std::string>::destroy((uint64_t)&v334, (char *)v334.__r_.__value_.__l.__size_);
    goto LABEL_811;
  }
  siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Snippet dialog ID check: Skip because either mCheckSnippetDialogIds is false or request type is not DIALOG_REQUEST", v258);
LABEL_712:
  uint64_t v270 = *(void *)(v5 + 256);
  if (v270) {
    (*(void (**)(uint64_t, Context *))(*(void *)v270 + 32))(v270, v313);
  }
  memset(v327, 0, 24);
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)v327, *((long long **)v313 + 77), *((long long **)v313 + 78), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v313 + 78) - *((void *)v313 + 77)) >> 3));
  std::__split_buffer<std::string>::pointer v272 = v327[0].__begin_;
  for (std::__split_buffer<std::string>::pointer m = v327[0].__first_; m != v272; ++m)
  {
    std::operator+<char>();
    siri::dialogengine::Context::AddValidationError((uint64_t)v313, (long long *)&v336, 0);
    if (SHIBYTE(v336.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v336.__r_.__value_.__l.__data_);
    }
  }
  v336.__r_.__value_.__r.__words[0] = (std::string::size_type)v327;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v336);
  if (*(void *)(v5 + 584)) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *(void *)(v5 + 608) == 0;
  }
  std::__tree<std::string>::destroy((uint64_t)&v337, (char *)v337.__r_.__value_.__l.__size_);
  v327[0].__first_ = &__s1;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)v327);
  if (SHIBYTE(v338.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v338.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v339.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v339.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v341[0]);
  v342[0] = &unk_1F2122780;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v343[0]);
  if (SHIBYTE(v345.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v345.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v347.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v349.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v349.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v351.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v351.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v352.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v352.__r_.__value_.__l.__data_);
  }
  siri::dialogengine::RequestInfo::~RequestInfo(&v353);
  return v4;
}

void sub_1C5DA54B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59)
{
  if (SLOBYTE(STACK[0x11C7]) < 0) {
    operator delete((void *)STACK[0x11B0]);
  }
  if (SLOBYTE(STACK[0x11E7]) < 0) {
    operator delete((void *)STACK[0x11D0]);
  }
  std::__tree<std::string>::destroy((uint64_t)&STACK[0x11F0], (char *)STACK[0x11F8]);
  STACK[0x11F0] = (unint64_t)&a59;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x11F0]);
  if (SLOBYTE(STACK[0x1227]) < 0) {
    operator delete((void *)STACK[0x1210]);
  }
  if (SLOBYTE(STACK[0x1247]) < 0) {
    operator delete((void *)STACK[0x1230]);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((void *)STACK[0x1250]);
  STACK[0x1260] = a13;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((void *)STACK[0x1270]);
  if (SLOBYTE(STACK[0x12B7]) < 0) {
    operator delete((void *)STACK[0x12A0]);
  }
  if (SLOBYTE(STACK[0x12F7]) < 0) {
    operator delete((void *)STACK[0x12E0]);
  }
  if (SLOBYTE(STACK[0x1337]) < 0) {
    operator delete((void *)STACK[0x1320]);
  }
  if (SLOBYTE(STACK[0x136F]) < 0) {
    operator delete((void *)STACK[0x1358]);
  }
  if (SLOBYTE(STACK[0x1387]) < 0) {
    operator delete((void *)STACK[0x1370]);
  }
  siri::dialogengine::RequestInfo::~RequestInfo((void **)&STACK[0x1390]);
  _Unwind_Resume(a1);
}

void *std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    std::vector<siri::dialogengine::Parameter>::__vallocate[abi:ne180100](result, a4);
    uint64_t result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1C5DA62C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100](&a9);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::File::AddParameter(siri::dialogengine::File *this, const siri::dialogengine::Parameter *a2)
{
  BOOL v4 = (char *)this + 192;
  unint64_t v5 = *((void *)this + 24);
  unint64_t v6 = *((void *)this + 23);
  if (v6 >= v5)
  {
    uint64_t v9 = *((void *)this + 22);
    unint64_t v10 = 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v6 - v9) >> 4);
    if (v10 + 1 > 0xC30C30C30C30C3) {
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(v5 - v9) >> 4);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x61861861861861) {
      unint64_t v13 = 0xC30C30C30C30C3;
    }
    else {
      unint64_t v13 = v12;
    }
    long long v26 = v4;
    if (v13) {
      unint64_t v13 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>>(v13);
    }
    else {
      uint64_t v14 = 0;
    }
    unint64_t v24 = v13;
    *(void *)uint64_t v25 = v13 + 336 * v10;
    *(void *)&v25[16] = v13 + 336 * v14;
    siri::dialogengine::Parameter::Parameter(*(siri::dialogengine::Parameter **)v25, a2);
    *(void *)&v25[8] = *(void *)v25 + 336;
    uint64_t v16 = *((void *)this + 22);
    uint64_t v15 = *((void *)this + 23);
    for (uint64_t i = 336; ; i -= 336)
    {
      uint64_t v18 = *(void *)v25 + i;
      if (v15 + i - 336 == v16) {
        break;
      }
      int v19 = (const siri::dialogengine::Parameter *)(v15 + i - 672);
      siri::dialogengine::Parameter::Parameter((siri::dialogengine::Parameter *)(v18 - 672), v19);
    }
    uint64_t v20 = *((void *)this + 24);
    long long v21 = *(_OWORD *)&v25[8];
    unint64_t v23 = *(void *)&v25[8];
    long long v22 = *((_OWORD *)this + 11);
    *((void *)this + 22) = v18 - 336;
    *(_OWORD *)uint64_t v25 = v22;
    *(_OWORD *)((char *)this + 184) = v21;
    *(void *)&v25[16] = v20;
    unint64_t v24 = v22;
    uint64_t result = std::__split_buffer<siri::dialogengine::Parameter>::~__split_buffer((uint64_t)&v24);
    unint64_t v8 = v23;
  }
  else
  {
    uint64_t result = (uint64_t)siri::dialogengine::Parameter::Parameter(*((siri::dialogengine::Parameter **)this + 23), a2);
    unint64_t v8 = v6 + 336;
    *((void *)this + 23) = v6 + 336;
  }
  *((void *)this + 23) = v8;
  return result;
}

void sub_1C5DA6470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::__split_buffer<siri::dialogengine::Parameter>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL siri::dialogengine::File::IsUniqueMetadataName(uint64_t a1)
{
  {
    operator new();
  }
  uint64_t v2 = (std::once_flag::_State_type *)siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::flag, memory_order_acquire) != -1)
  {
    __p[0] = &v9;
    unint64_t v10 = __p;
    std::__call_once(v2, &v10, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::$_0 &&>>);
  }
  uint64_t v3 = siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::sUniqueNames;
  siri::dialogengine::StringToLower(a1, (uint64_t)__p);
  uint64_t v4 = std::__tree<std::string>::find<std::string>(v3, (const void **)__p);
  uint64_t v5 = siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::sUniqueNames;
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  return v5 + 8 != v4;
}

void sub_1C5DA65D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

void siri::dialogengine::File::GetMetadataUnique(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  if (!siri::dialogengine::File::IsUniqueMetadataName(a2))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = *(void *)a2;
    }
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"GetMetadataUnique() was called with a name that allows multiple values: %s", v6, v7);
  }
  siri::dialogengine::File::GetMetadata(a1, a2, v11);
  if (!v12) {
    goto LABEL_14;
  }
  if (v12 != 1)
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = *(void *)a2;
    }
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Found %zu values for unique meta name '%s'. Returning empty string.", v8, v12, v10);
LABEL_14:
    std::string::basic_string[abi:ne180100]<0>(a3, "");
    goto LABEL_15;
  }
  if (*(char *)(v11[0] + 55) < 0)
  {
    std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)(v11[0] + 32), *(void *)(v11[0] + 40));
  }
  else
  {
    long long v9 = *(_OWORD *)(v11[0] + 32);
    a3->__r_.__value_.__r.__words[2] = *(void *)(v11[0] + 48);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v9;
  }
LABEL_15:
  std::__tree<std::string>::destroy((uint64_t)v11, (char *)v11[1]);
}

void sub_1C5DA66F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
}

void siri::dialogengine::File::CheckForUnusedConditions(siri::dialogengine::File *this, siri::dialogengine::Context *a2)
{
  if (*((void *)this + 36))
  {
    v48[0] = 0;
    v48[1] = 0;
    long long v47 = v48;
    uint64_t v4 = (const void **)*((void *)this + 34);
    uint64_t v5 = (char *)this + 280;
    if (v4 != (const void **)((char *)this + 280))
    {
      do
      {
        std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v47, v4 + 4, (uint64_t)(v4 + 4));
        unint64_t v6 = (char *)v4[1];
        if (v6)
        {
          do
          {
            uint64_t v7 = v6;
            unint64_t v6 = *(char **)v6;
          }
          while (v6);
        }
        else
        {
          do
          {
            uint64_t v7 = (char *)v4[2];
            BOOL v8 = *(void *)v7 == (void)v4;
            uint64_t v4 = (const void **)v7;
          }
          while (!v8);
        }
        uint64_t v4 = (const void **)v7;
      }
      while (v7 != v5);
    }
    v46[0] = 0;
    v46[1] = 0;
    v44[1] = 0;
    long long v45 = v46;
    long long v43 = (const void **)v44;
    v44[0] = 0;
    uint64_t v42 = &unk_1F211E030;
    (*(void (**)(siri::dialogengine::File *, void **))(*(void *)this + 32))(this, &v42);
    std::set<std::string>::insert[abi:ne180100]<std::__tree_const_iterator<std::string,std::__tree_node<std::string,void *> *,long>>((uint64_t *)&v45, v43, v44);
    long long v9 = (char **)((char *)this + 272);
    uint64_t v10 = *v9;
    if (*v9 != v5)
    {
      do
      {
        uint64_t v11 = *((void *)v10 + 7);
        int v40 = 0;
        uint64_t v41 = 0;
        std::__split_buffer<std::string>::pointer v39 = 0;
        std::vector<std::shared_ptr<siri::dialogengine::ConditionEntry>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::ConditionEntry>*,std::shared_ptr<siri::dialogengine::ConditionEntry>*>(&v39, *(void **)(v11 + 144), *(void **)(v11 + 152), (uint64_t)(*(void *)(v11 + 152) - *(void *)(v11 + 144)) >> 4);
        uint64_t v12 = (uint64_t *)v39;
        unint64_t v13 = v40;
        while (v12 != (uint64_t *)v13)
        {
          siri::dialogengine::CollectConditionNamesFromSubConditions(*v12, (uint64_t **)&v45);
          v12 += 2;
        }
        __p[0] = &v39;
        std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
        uint64_t v14 = (char *)*((void *)v10 + 1);
        if (v14)
        {
          do
          {
            uint64_t v15 = v14;
            uint64_t v14 = *(char **)v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            uint64_t v15 = (char *)*((void *)v10 + 2);
            BOOL v8 = *(void *)v15 == (void)v10;
            uint64_t v10 = v15;
          }
          while (!v8);
        }
        uint64_t v10 = v15;
      }
      while (v15 != v5);
    }
    int v40 = 0;
    uint64_t v41 = 0;
    std::__split_buffer<std::string>::pointer v39 = &v40;
    uint64_t v16 = (uint64_t *)v47;
    uint64_t v17 = (uint64_t *)v45;
    v36.__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
    v36.__r_.__value_.__l.__size_ = (std::string::size_type)&v40;
    if (v47 != v48)
    {
      if (v45 == v46)
      {
        long long v26 = &v39;
        std::string::size_type size = &v40;
LABEL_47:
        __p[0] = v26;
        __p[1] = size;
        if (v16 != (uint64_t *)v48)
        {
          do
          {
            std::insert_iterator<std::set<std::string>>::operator=[abi:ne180100]((uint64_t)__p, (const void **)v16 + 4);
            long long v28 = (char *)v16[1];
            if (v28)
            {
              do
              {
                BOOL v29 = (char **)v28;
                long long v28 = *(char **)v28;
              }
              while (v28);
            }
            else
            {
              do
              {
                BOOL v29 = (char **)v16[2];
                BOOL v8 = *v29 == (char *)v16;
                uint64_t v16 = (uint64_t *)v29;
              }
              while (!v8);
            }
            uint64_t v16 = (uint64_t *)v29;
          }
          while (v29 != v48);
        }
      }
      else
      {
        while (1)
        {
          if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v16 + 4, v17 + 4))
          {
            std::insert_iterator<std::set<std::string>>::operator=[abi:ne180100]((uint64_t)&v36, (const void **)v16 + 4);
            uint64_t v18 = (uint64_t *)v16[1];
            if (v18)
            {
              do
              {
                uint64_t v16 = v18;
                uint64_t v18 = (uint64_t *)*v18;
              }
              while (v18);
            }
            else
            {
              do
              {
                int v19 = v16;
                uint64_t v16 = (uint64_t *)v16[2];
              }
              while ((uint64_t *)*v16 != v19);
            }
          }
          else if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v17 + 4, v16 + 4))
          {
            uint64_t v20 = (uint64_t *)v17[1];
            if (v20)
            {
              do
              {
                uint64_t v17 = v20;
                uint64_t v20 = (uint64_t *)*v20;
              }
              while (v20);
            }
            else
            {
              do
              {
                long long v21 = v17;
                uint64_t v17 = (uint64_t *)v17[2];
              }
              while ((uint64_t *)*v17 != v21);
            }
          }
          else
          {
            long long v22 = (uint64_t *)v16[1];
            if (v22)
            {
              do
              {
                unint64_t v23 = v22;
                long long v22 = (uint64_t *)*v22;
              }
              while (v22);
            }
            else
            {
              do
              {
                unint64_t v23 = (uint64_t *)v16[2];
                BOOL v8 = *v23 == (void)v16;
                uint64_t v16 = v23;
              }
              while (!v8);
            }
            unint64_t v24 = (uint64_t *)v17[1];
            if (v24)
            {
              do
              {
                uint64_t v17 = v24;
                unint64_t v24 = (uint64_t *)*v24;
              }
              while (v24);
            }
            else
            {
              do
              {
                uint64_t v25 = v17;
                uint64_t v17 = (uint64_t *)v17[2];
              }
              while ((uint64_t *)*v17 != v25);
            }
            uint64_t v16 = v23;
          }
          if (v16 == (uint64_t *)v48) {
            break;
          }
          if (v17 == (uint64_t *)v46)
          {
            std::string::size_type size = (char **)v36.__r_.__value_.__l.__size_;
            long long v26 = (char ***)v36.__r_.__value_.__r.__words[0];
            goto LABEL_47;
          }
        }
      }
    }
    BOOL v30 = v39;
    if (v39 != &v40)
    {
      do
      {
        uint64_t v31 = *(void *)(std::__tree<std::string>::find<std::string>((uint64_t)v9, (const void **)v30 + 4) + 56);
        std::operator+<char>();
        long long v32 = std::string::append(&v36, "' is not used; Consider removing it");
        long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
        std::string::size_type v38 = v32->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v33;
        v32->__r_.__value_.__l.__size_ = 0;
        v32->__r_.__value_.__r.__words[2] = 0;
        v32->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Context::AddValidationNit((uint64_t)a2, (long long *)__p, v31);
        if (SHIBYTE(v38) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v36.__r_.__value_.__l.__data_);
        }
        int v34 = v30[1];
        if (v34)
        {
          do
          {
            v35 = (char **)v34;
            int v34 = *(char **)v34;
          }
          while (v34);
        }
        else
        {
          do
          {
            v35 = (char **)v30[2];
            BOOL v8 = *v35 == (char *)v30;
            BOOL v30 = v35;
          }
          while (!v8);
        }
        BOOL v30 = v35;
      }
      while (v35 != &v40);
    }
    std::__tree<std::string>::destroy((uint64_t)&v39, v40);
    uint64_t v42 = &unk_1F211E030;
    std::__tree<std::string>::destroy((uint64_t)&v43, (char *)v44[0]);
    std::__tree<std::string>::destroy((uint64_t)&v45, v46[0]);
    std::__tree<std::string>::destroy((uint64_t)&v47, v48[0]);
  }
}

void sub_1C5DA6B6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char *a28,uint64_t a29,char a30,char *a31)
{
  std::__tree<std::string>::destroy(a9, a28);
  std::__tree<std::string>::destroy((uint64_t)&a30, a31);
  std::__tree<std::string>::destroy(v31 - 112, *(char **)(v31 - 104));
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::GetDialogs(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v4 = *((void *)this + 28);
  uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 29);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  siri::dialogengine::WalkNodesForDialogs((uint64_t)a2, v4);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  siri::dialogengine::WalkNodesForDialogs((uint64_t)a2, *((void *)this + 37));
}

void sub_1C5DA6C84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::GetSourceLocale(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v4 = (std::string *)((char *)this + 680);
  if (!*((unsigned char *)this + 704))
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "sourceLocale");
    siri::dialogengine::File::GetMetadataUnique((uint64_t)this, (uint64_t)&__p, &__str);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __str.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      siri::dialogengine::GetCanonicalLocale(&__str, 0, &__p);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string __str = __p;
      if ((siri::dialogengine::IsValidLocale((uint64_t)&__str) & 1) == 0)
      {
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
        {
          *__str.__r_.__value_.__l.__data_ = 0;
          __str.__r_.__value_.__l.__size_ = 0;
        }
        else
        {
          __str.__r_.__value_.__s.__data_[0] = 0;
          *((unsigned char *)&__str.__r_.__value_.__s + 23) = 0;
        }
      }
    }
    if (*((unsigned char *)this + 704))
    {
      std::string::operator=(v4, &__str);
    }
    else
    {
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(v4, __str.__r_.__value_.__l.__data_, __str.__r_.__value_.__l.__size_);
      }
      else {
        *uint64_t v4 = __str;
      }
      *((unsigned char *)this + 704) = 1;
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  if (*((char *)this + 703) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 85), *((void *)this + 86));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    a2->__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  }
}

void sub_1C5DA6E18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *siri::dialogengine::File::GetSourceLocaleDialogIds(siri::dialogengine::File *this)
{
  *(void *)&long long v48 = *MEMORY[0x1E4F143B8];
  if (*((unsigned char *)this + 736)) {
    return (std::string *)((char *)this + 712);
  }
  uint64_t v2 = (std::string *)((char *)this + 744);
  if (*((unsigned char *)this + 768)) {
    return v2;
  }
  *(_OWORD *)&v36.__r_.__value_.__r.__words[1] = 0uLL;
  v36.__r_.__value_.__r.__words[0] = (std::string::size_type)&v36.__r_.__value_.__l.__size_;
  *((void *)this + 95) = 0;
  *((void *)this + 94) = 0;
  *((void *)this + 93) = (char *)this + 752;
  *((unsigned char *)this + 768) = 1;
  std::__tree<std::string>::destroy((uint64_t)&v36, 0);
  siri::dialogengine::File::GetSourceLocale(this, &v44);
  std::string::size_type size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v44.__r_.__value_.__l.__size_;
  }
  if (!size) {
    MEMORY[0x1C8796900](&v44, "en");
  }
  if (*((char *)this + 151) < 0) {
    std::string::__init_copy_ctor_external(&v36, *((const std::string::value_type **)this + 16), *((void *)this + 17));
  }
  else {
    std::string v36 = *(std::string *)((char *)this + 128);
  }
  if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v4 = HIBYTE(v36.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v4 = v36.__r_.__value_.__l.__size_;
  }
  std::string::size_type v5 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  char v6 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v5 = v44.__r_.__value_.__l.__size_;
  }
  if (v4 != v5)
  {
    if ((*((unsigned char *)&v36.__r_.__value_.__s + 23) & 0x80) != 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    goto LABEL_33;
  }
  std::string::size_type v7 = v44.__r_.__value_.__r.__words[0];
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    BOOL v8 = &v44;
  }
  else {
    BOOL v8 = (std::string *)v44.__r_.__value_.__r.__words[0];
  }
  if ((*((unsigned char *)&v36.__r_.__value_.__s + 23) & 0x80) == 0)
  {
    if (!*((unsigned char *)&v36.__r_.__value_.__s + 23)) {
      goto LABEL_90;
    }
    uint64_t v9 = 0;
    do
    {
      int v10 = v36.__r_.__value_.__s.__data_[v9];
      int v11 = v8->__r_.__value_.__s.__data_[v9];
    }
    while (v10 == v11 && HIBYTE(v36.__r_.__value_.__r.__words[2]) - 1 != v9++);
    if (v10 == v11) {
      goto LABEL_90;
    }
LABEL_33:
    if (*((char *)this + 55) < 0) {
      std::string::__init_copy_ctor_external(&v36, *((const std::string::value_type **)this + 4), *((void *)this + 5));
    }
    else {
      std::string v36 = *(std::string *)((char *)this + 32);
    }
    if (*((char *)this + 79) < 0) {
      std::string::__init_copy_ctor_external(&__str, *((const std::string::value_type **)this + 7), *((void *)this + 8));
    }
    else {
      std::string __str = *(std::string *)((char *)this + 56);
    }
    siri::dialogengine::DirName(&__str, (uint64_t)&__p);
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v47, v44.__r_.__value_.__l.__data_, v44.__r_.__value_.__l.__size_);
    }
    else {
      std::string v47 = v44;
    }
    std::string::size_type v38 = 0;
    std::__split_buffer<std::string>::pointer v39 = 0;
    int v40 = 0;
    long long v45 = &v38;
    char v46 = 0;
    std::string::size_type v38 = (std::string *)operator new(0x18uLL);
    std::__split_buffer<std::string>::pointer v39 = v38;
    int v40 = v38 + 1;
    std::__split_buffer<std::string>::pointer v39 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v40, (long long *)&v47, &v48, v38);
    siri::dialogengine::FindLocaleFile((uint64_t)&__p, (long long **)&v38, (uint64_t)&v43);
    long long v45 = &v38;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v45);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string::size_type v16 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
    if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v16 = v43.__r_.__value_.__l.__size_;
    }
    if (v16)
    {
      _ZNSt3__115allocate_sharedB8ne180100IN4siri12dialogengine7ContextENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_((siri::dialogengine::Context **)&__p);
      uint64_t v17 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
      std::string::size_type v18 = __p.__r_.__value_.__r.__words[0];
      int Files = siri::dialogengine::Context::LoadFiles((uint64_t)__p.__r_.__value_.__l.__data_, (uint64_t)&v36, (uint64_t)&v43);
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v21 = &v44;
      }
      else {
        long long v21 = (std::string *)v44.__r_.__value_.__r.__words[0];
      }
      long long v22 = (_OWORD *)((char *)this + 104);
      if (Files)
      {
        if (*((char *)this + 127) < 0)
        {
          std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 13), *((void *)this + 14));
        }
        else
        {
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v22;
          __p.__r_.__value_.__r.__words[2] = *((void *)this + 15);
        }
        uint64_t p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Loaded source locale file (%s) for CAT %s", v20, v21, p_p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string::size_type v27 = *(siri::dialogengine::File **)(v18 + 504);
        long long v26 = *(std::__shared_weak_count **)(v18 + 512);
        if (v26)
        {
          atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
          std::__shared_weak_count::__release_shared[abi:ne180100](v26);
        }
LABEL_83:
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v36.__r_.__value_.__l.__data_);
        }
        if (!v27) {
          goto LABEL_124;
        }
        goto LABEL_101;
      }
      if (*((char *)this + 127) < 0)
      {
        std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 13), *((void *)this + 14));
      }
      else
      {
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *v22;
        __p.__r_.__value_.__r.__words[2] = *((void *)this + 15);
      }
      long long v28 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        long long v28 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Failed to load source locale file (%s) for CAT %s", v20, v21, v28);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v23 = &v44;
      }
      else {
        unint64_t v23 = (std::string *)v44.__r_.__value_.__r.__words[0];
      }
      if (*((char *)this + 127) < 0) {
        std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 13), *((void *)this + 14));
      }
      else {
        std::string __p = *(std::string *)((char *)this + 104);
      }
      unint64_t v24 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        unint64_t v24 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Source locale file (%s) not found for CAT %s", v15, v23, v24);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t v17 = 0;
    }
    std::string::size_type v27 = 0;
    goto LABEL_83;
  }
  unint64_t v13 = (void *)v36.__r_.__value_.__r.__words[0];
  int v14 = memcmp(v36.__r_.__value_.__l.__data_, v8, v36.__r_.__value_.__l.__size_);
  operator delete(v13);
  if (v14) {
    goto LABEL_33;
  }
  char v6 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
  std::string::size_type v7 = v44.__r_.__value_.__r.__words[0];
LABEL_90:
  if (v6 >= 0) {
    BOOL v29 = &v44;
  }
  else {
    BOOL v29 = (std::string *)v7;
  }
  if (*((char *)this + 127) < 0) {
    std::string::__init_copy_ctor_external(&v36, *((const std::string::value_type **)this + 13), *((void *)this + 14));
  }
  else {
    std::string v36 = *(std::string *)((char *)this + 104);
  }
  BOOL v30 = &v36;
  if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    BOOL v30 = (std::string *)v36.__r_.__value_.__r.__words[0];
  }
  siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Source locale file (%s) is the current file for CAT %s", (const char *)v8, v29, v30);
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  uint64_t v17 = 0;
  std::string::size_type v27 = this;
LABEL_101:
  v36.__r_.__value_.__r.__words[2] = 0;
  uint64_t v37 = 0;
  v36.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F211B858;
  v36.__r_.__value_.__l.__size_ = (std::string::size_type)&v36.__r_.__value_.__r.__words[2];
  (*(void (**)(siri::dialogengine::File *, std::string *))(*(void *)v27 + 32))(v27, &v36);
  if (*((unsigned char *)this + 768))
  {
    if (v2 != (std::string *)&v36.__r_.__value_.__r.__words[1]) {
      std::__tree<std::string>::__assign_multi<std::__tree_const_iterator<std::string,std::__tree_node<std::string,void *> *,long>>((uint64_t *)this + 93, (void *)v36.__r_.__value_.__l.__size_, &v36.__r_.__value_.__r.__words[2]);
    }
  }
  else
  {
    std::set<std::string>::set[abi:ne180100]((uint64_t *)this + 93, (const void ***)&v36.__r_.__value_.__l.__size_);
    *((unsigned char *)this + 768) = 1;
  }
  if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v31 = &v44;
  }
  else {
    uint64_t v31 = (std::string *)v44.__r_.__value_.__r.__words[0];
  }
  if (*((char *)this + 127) < 0) {
    std::string::__init_copy_ctor_external(&v43, *((const std::string::value_type **)this + 13), *((void *)this + 14));
  }
  else {
    std::string v43 = *(std::string *)((char *)this + 104);
  }
  if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v32 = &v43;
  }
  else {
    long long v32 = (std::string *)v43.__r_.__value_.__r.__words[0];
  }
  std::string::basic_string[abi:ne180100]<0>(&__str, ", ");
  siri::dialogengine::StringJoin(v2, (uint64_t)&__str, (uint64_t)&__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v34 = &__p;
  }
  else {
    int v34 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Read dialog IDs from source locale file (%s) for CAT %s: [%s]", v33, v31, v32, v34);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  v36.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F211B858;
  std::__tree<std::string>::destroy((uint64_t)&v36.__r_.__value_.__l.__size_, (char *)v36.__r_.__value_.__r.__words[2]);
LABEL_124:
  if (v17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v17);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1C5DA750C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0) {
    operator delete(__p);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
  if (*(char *)(v44 - 113) < 0) {
    operator delete(*(void **)(v44 - 136));
  }
  _Unwind_Resume(exception_object);
}

siri::dialogengine::Context *_ZNSt3__115allocate_sharedB8ne180100IN4siri12dialogengine7ContextENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(siri::dialogengine::Context **a1)
{
  uint64_t v2 = operator new(0xDD0uLL);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = &unk_1F211FE68;
  uint64_t result = siri::dialogengine::Context::Context((siri::dialogengine::Context *)(v2 + 3));
  *a1 = result;
  a1[1] = (siri::dialogengine::Context *)v2;
  return result;
}

void sub_1C5DA7708(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::Context>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::Context>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211FE68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::Context>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211FE68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void siri::dialogengine::WalkNodesForDialogs(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    std::vector<std::shared_ptr<siri::dialogengine::Node>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::Node>*,std::shared_ptr<siri::dialogengine::Node>*>(&v27, *(void **)(a2 + 208), *(void **)(a2 + 216), (uint64_t)(*(void *)(a2 + 216) - *(void *)(a2 + 208)) >> 4);
    uint64_t v3 = v27;
    uint64_t v4 = v28;
    if (v27 != v28)
    {
      while (1)
      {
        char v6 = *(const void **)v3;
        long long v26 = 0u;
        if (!*(void *)v3) {
          goto LABEL_34;
        }
        if (!v7) {
          break;
        }
        siri::dialogengine::WalkNodesForDialogs(a1, v7);
LABEL_36:
        v3 += 16;
        if (v3 == v4) {
          goto LABEL_40;
        }
      }
      if (!v8)
      {
LABEL_34:
        if (*((void *)&v26 + 1)) {
          std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v26 + 1));
        }
        goto LABEL_36;
      }
      uint64_t v9 = *(void *)(v3 + 8);
      *(void *)&long long v10 = v8;
      *((void *)&v10 + 1) = v9;
      long long v26 = v10;
      if (v9)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        uint64_t v12 = *(void **)(a1 + 8);
        unint64_t v11 = *(void *)(a1 + 16);
        if ((unint64_t)v12 < v11)
        {
          *uint64_t v12 = v8;
          v12[1] = v9;
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
LABEL_13:
          unint64_t v13 = v12 + 2;
          *(void *)(a1 + 8) = v12 + 2;
          goto LABEL_33;
        }
      }
      else
      {
        uint64_t v12 = *(void **)(a1 + 8);
        unint64_t v11 = *(void *)(a1 + 16);
        if ((unint64_t)v12 < v11)
        {
          *uint64_t v12 = v8;
          v12[1] = 0;
          goto LABEL_13;
        }
      }
      int v14 = *(void **)a1;
      uint64_t v15 = ((uint64_t)v12 - *(void *)a1) >> 4;
      unint64_t v16 = v15 + 1;
      if ((unint64_t)(v15 + 1) >> 60) {
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v17 = v5;
      uint64_t v18 = v11 - (void)v14;
      if (v18 >> 3 > v16) {
        unint64_t v16 = v18 >> 3;
      }
      if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v19 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v19 = v16;
      }
      if (v19 >> 60) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v20 = (char *)operator new(16 * v19);
      long long v21 = &v20[16 * v15];
      *(_OWORD *)long long v21 = v26;
      if (v9)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        int v14 = *(void **)a1;
        uint64_t v12 = *(void **)(a1 + 8);
      }
      long long v22 = &v20[16 * v19];
      unint64_t v13 = v21 + 16;
      if (v12 == v14)
      {
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v22;
        std::string::size_type v5 = v17;
        if (!v14) {
          goto LABEL_33;
        }
      }
      else
      {
        std::string::size_type v5 = v17;
        do
        {
          long long v23 = *((_OWORD *)v12 - 1);
          v12 -= 2;
          *((_OWORD *)v21 - 1) = v23;
          v21 -= 16;
          *uint64_t v12 = 0;
          v12[1] = 0;
        }
        while (v12 != v14);
        unint64_t v24 = *(void **)a1;
        int v14 = *(void **)(a1 + 8);
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v22;
        if (v14 != v24)
        {
          do
          {
            uint64_t v25 = (std::__shared_weak_count *)*(v14 - 1);
            if (v25) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v25);
            }
            v14 -= 2;
          }
          while (v14 != v24);
          int v14 = v24;
        }
        if (!v14) {
          goto LABEL_33;
        }
      }
      operator delete(v14);
LABEL_33:
      *(void *)(a1 + 8) = v13;
      goto LABEL_34;
    }
LABEL_40:
    BOOL v30 = (void **)&v27;
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&v30);
  }
}

void sub_1C5DA7A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void **a14)
{
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  a14 = (void **)&a11;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&a14);
  _Unwind_Resume(a1);
}

void siri::dialogengine::CollectConditionNamesFromSubConditions(uint64_t a1, uint64_t **a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 32);
  if (v3 >= 3)
  {
    if (v3 == 4)
    {
      if (v6)
      {
        if (v6[175] < 0) {
          std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v6 + 19), *((void *)v6 + 20));
        }
        else {
          std::string __p = *(std::string *)(v6 + 152);
        }
        std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>(a2, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        siri::dialogengine::Log::Error((siri::dialogengine::Log *)"A ConditionEntry had type SUB_CONDITION but casting it to ConditionSubCondition failed", v7);
      }
    }
  }
  else
  {
    memset(&__p, 0, sizeof(__p));
    std::vector<std::shared_ptr<siri::dialogengine::ConditionEntry>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::ConditionEntry>*,std::shared_ptr<siri::dialogengine::ConditionEntry>*>(&__p, *(void **)(a1 + 64), *(void **)(a1 + 72), (uint64_t)(*(void *)(a1 + 72) - *(void *)(a1 + 64)) >> 4);
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
    for (uint64_t i = (void *)__p.__r_.__value_.__r.__words[0]; i != (void *)size; i += 2)
      siri::dialogengine::CollectConditionNamesFromSubConditions(*i, a2);
    uint64_t p_p = &__p;
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)&p_p);
  }
}

void sub_1C5DA7BE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::insert_iterator<std::set<std::string>>::operator=[abi:ne180100](uint64_t a1, const void **a2)
{
  unsigned int v3 = std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>(*(uint64_t ***)a1, *(void *)(a1 + 8), a2, (uint64_t)a2);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      std::string::size_type v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    do
    {
      std::string::size_type v5 = (uint64_t *)v3[2];
      BOOL v6 = *v5 == (void)v3;
      unsigned int v3 = v5;
    }
    while (!v6);
  }
  *(void *)(a1 + 8) = v5;
  return a1;
}

void siri::dialogengine::File::GetMetadata(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1 + 200;
  siri::dialogengine::StringToLower(a2, (uint64_t)__p);
  uint64_t v6 = std::__tree<std::string>::find<std::string>(v5, (const void **)__p);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  if (a1 + 208 == v6)
  {
    a3[2] = 0;
    a3[1] = 0;
    *a3 = (uint64_t)(a3 + 1);
  }
  else
  {
    std::set<std::string>::set[abi:ne180100](a3, (const void ***)(v6 + 56));
  }
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::File::IsUniqueMetadataName(std::string const&)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5DA7ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  uint64_t v43 = 0;
  while (1)
  {
    if (*(char *)(v41 + v43 + 119) < 0) {
      operator delete(*(void **)(v41 + v43 + 96));
    }
    v43 -= 24;
    if (v43 == -120)
    {
      if (a15 < 0) {
        operator delete(__p);
      }
      if (a21 < 0) {
        operator delete(a16);
      }
      if (a27 < 0) {
        operator delete(a22);
      }
      if (a33 < 0) {
        operator delete(a28);
      }
      if (a39 < 0) {
        operator delete(a34);
      }
      MEMORY[0x1C8796D70](v40, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1C5DA7FF4()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>>(unint64_t a1)
{
  if (a1 >= 0xC30C30C30C30C4) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(336 * a1);
}

uint64_t std::__split_buffer<siri::dialogengine::Parameter>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 336;
    (**(void (***)(void))(i - 336))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

char *std::vector<siri::dialogengine::Parameter>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0xC30C30C30C30C4) {
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  uint64_t result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[336 * v4];
  return result;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = 0;
    do
    {
      siri::dialogengine::Parameter::Parameter((siri::dialogengine::Parameter *)(a3 + v6), (const siri::dialogengine::Parameter *)(a1 + v6));
      v6 += 336;
    }
    while (a1 + v6 != a2);
    a3 += v6;
  }
  return a3;
}

void siri::dialogengine::File::~File(siri::dialogengine::File *this)
{
  siri::dialogengine::File::~File(this);
  JUMPOUT(0x1C8796D70);
}

{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  void **v6;

  *(void *)this = &unk_1F2126948;
  if (*((unsigned char *)this + 768)) {
    std::__tree<std::string>::destroy((uint64_t)this + 744, *((char **)this + 94));
  }
  if (*((unsigned char *)this + 736)) {
    std::__tree<std::string>::destroy((uint64_t)this + 712, *((char **)this + 90));
  }
  if (*((unsigned char *)this + 704) && *((char *)this + 703) < 0) {
    operator delete(*((void **)this + 85));
  }
  if (*((char *)this + 663) < 0) {
    operator delete(*((void **)this + 80));
  }
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*((void **)this + 78));
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*((void **)this + 75));
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*((void **)this + 72));
  siri::dialogengine::Group::~Group((siri::dialogengine::File *)((char *)this + 312));
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 38);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*((void **)this + 35));
  uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 33);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  uint64_t v4 = (std::__shared_weak_count *)*((void *)this + 31);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  uint64_t v5 = (std::__shared_weak_count *)*((void *)this + 29);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::destroy(*((void **)this + 26));
  uint64_t v6 = (void **)((char *)this + 176);
  std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100](&v6);
  if (*((char *)this + 175) < 0) {
    operator delete(*((void **)this + 19));
  }
  if (*((char *)this + 151) < 0) {
    operator delete(*((void **)this + 16));
  }
  if (*((char *)this + 127) < 0) {
    operator delete(*((void **)this + 13));
  }
  if (*((char *)this + 103) < 0) {
    operator delete(*((void **)this + 10));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  if (*((char *)this + 55) < 0) {
    operator delete(*((void **)this + 4));
  }
  *(void *)this = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 2));
}

void std::__tree<siri::dialogengine::ValidationEntry>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<siri::dialogengine::ValidationEntry>::destroy(*a1);
    std::__tree<siri::dialogengine::ValidationEntry>::destroy(a1[1]);
    (*(void (**)(void))a1[4])();
    operator delete(a1);
  }
}

uint64_t siri::dialogengine::File::File(uint64_t a1, const std::string *a2)
{
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &unk_1F2126948;
  *(void *)(a1 + 8) = a1 + 16;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(void *)(a1 + 144) = 0;
  std::string::basic_string[abi:ne180100]<0>((void *)(a1 + 152), "5.2");
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 200) = a1 + 208;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(void *)(a1 + 272) = a1 + 280;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 288) = 0;
  siri::dialogengine::GroupPhrases::GroupPhrases((siri::dialogengine::GroupPhrases *)(a1 + 312));
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 568) = a1 + 576;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 592) = a1 + 600;
  *(void *)(a1 + 624) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 616) = a1 + 624;
  *(void *)(a1 + 656) = 0;
  *(void *)(a1 + 648) = 0;
  *(unsigned char *)(a1 + 672) = 1;
  *(unsigned char *)(a1 + 680) = 0;
  *(unsigned char *)(a1 + 704) = 0;
  *(unsigned char *)(a1 + 712) = 0;
  *(unsigned char *)(a1 + 736) = 0;
  *(unsigned char *)(a1 + 744) = 0;
  *(unsigned char *)(a1 + 768) = 0;
  siri::dialogengine::File::SetLocale(a1, a2);
  return a1;
}

void sub_1C5DA855C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(unsigned char *)(v2 + 768)) {
    std::__tree<std::string>::destroy(v6, *(char **)(v2 + 752));
  }
  if (*(unsigned char *)(v2 + 736)) {
    std::__tree<std::string>::destroy(v5, *(char **)(v2 + 720));
  }
  if (*(unsigned char *)(v2 + 704) && *(char *)(v2 + 703) < 0) {
    operator delete(*(void **)(v2 + 680));
  }
  if (*(char *)(v2 + 663) < 0) {
    operator delete(*v8);
  }
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*(void **)(v2 + 624));
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*(void **)(v2 + 600));
  std::__tree<siri::dialogengine::ValidationEntry>::destroy(*(void **)(v2 + 576));
  siri::dialogengine::Group::~Group(v4);
  long long v10 = *(std::__shared_weak_count **)(v2 + 304);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*(void **)(v2 + 280));
  unint64_t v11 = *(std::__shared_weak_count **)(v2 + 264);
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  uint64_t v12 = *(std::__shared_weak_count **)(v2 + 248);
  if (v12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
  }
  unint64_t v13 = *(std::__shared_weak_count **)(v2 + 232);
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::destroy(*(void **)(v2 + 208));
  std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  if (*(char *)(v2 + 175) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v2 + 151) < 0) {
    operator delete(*(void **)(v2 + 128));
  }
  if (*(char *)(v2 + 127) < 0) {
    operator delete(*(void **)(v2 + 104));
  }
  if (*(char *)(v2 + 103) < 0) {
    operator delete(*(void **)(v2 + 80));
  }
  if (*(char *)(v2 + 79) < 0) {
    operator delete(*(void **)(v2 + 56));
  }
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v7);
  }
  *(void *)uint64_t v2 = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(v2 + 16));
  _Unwind_Resume(a1);
}

double siri::dialogengine::File::SetLocale(uint64_t a1, const std::string *a2)
{
  siri::dialogengine::GetCanonicalLocale(a2, 0, &v5);
  uint64_t v3 = (void **)(a1 + 128);
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*v3);
  }
  double result = *(double *)&v5.__r_.__value_.__l.__data_;
  *(_OWORD *)uint64_t v3 = *(_OWORD *)&v5.__r_.__value_.__l.__data_;
  *(void *)(a1 + 144) = *((void *)&v5.__r_.__value_.__l + 2);
  return result;
}

void siri::dialogengine::File::GetParamsFilename(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 55) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 4), *((void *)this + 5));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 2);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 6);
  }
}

std::string *siri::dialogengine::File::SetParamsFilename(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 32), a2);
}

void siri::dialogengine::File::GetLocaleFilename(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 7), *((void *)this + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 56);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 9);
  }
}

std::string *siri::dialogengine::File::SetLocaleFilename(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 56), a2);
}

void siri::dialogengine::File::GetVisualFilename(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 103) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 10), *((void *)this + 11));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 5);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 12);
  }
}

std::string *siri::dialogengine::File::SetVisualFilename(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 80), a2);
}

void siri::dialogengine::File::GetId(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 127) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 13), *((void *)this + 14));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 104);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 15);
  }
}

std::string *siri::dialogengine::File::SetId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 104), a2);
}

void siri::dialogengine::File::GetParamsId(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 663) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 80), *((void *)this + 81));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 40);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 82);
  }
}

std::string *siri::dialogengine::File::SetParamsId(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 640), a2);
}

void siri::dialogengine::File::GetLocale(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 151) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 16), *((void *)this + 17));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *((_OWORD *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 18);
  }
}

void siri::dialogengine::File::GetFormatVersion(siri::dialogengine::File *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 175) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 19), *((void *)this + 20));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 152);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 21);
  }
}

std::string *siri::dialogengine::File::SetFormatVersion(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 152), a2);
}

void *siri::dialogengine::File::GetParameters@<X0>(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(a2, *((void *)this + 22), *((void *)this + 23), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*((void *)this + 23) - *((void *)this + 22)) >> 4));
}

void *siri::dialogengine::File::SetParameters(void *result, uint64_t *a2)
{
  uint64_t v2 = (void **)(result + 22);
  if (result + 22 != a2)
  {
    uint64_t v3 = result;
    uint64_t v5 = *a2;
    uint64_t v4 = a2[1];
    unint64_t v6 = 0xCF3CF3CF3CF3CF3DLL * ((v4 - *a2) >> 4);
    uint64_t v7 = result[24];
    uint64_t v8 = result[22];
    if (0xCF3CF3CF3CF3CF3DLL * ((v7 - v8) >> 4) < v6)
    {
      if (v8)
      {
        uint64_t v9 = result[23];
        long long v10 = (void *)result[22];
        if (v9 != v8)
        {
          uint64_t v11 = v9 - 336;
          uint64_t v12 = (void (***)(void))(v9 - 336);
          do
          {
            (**v12)(v12);
            v11 -= 336;
            BOOL v13 = v12 == (void (***)(void))v8;
            v12 -= 42;
          }
          while (!v13);
          long long v10 = *v2;
        }
        v3[23] = v8;
        operator delete(v10);
        uint64_t v7 = 0;
        *uint64_t v2 = 0;
        v2[1] = 0;
        v2[2] = 0;
      }
      if (v6 > 0xC30C30C30C30C3) {
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v14 = 0xCF3CF3CF3CF3CF3DLL * (v7 >> 4);
      uint64_t v15 = 2 * v14;
      if (2 * v14 <= v6) {
        uint64_t v15 = v6;
      }
      if (v14 >= 0x61861861861861) {
        unint64_t v16 = 0xC30C30C30C30C3;
      }
      else {
        unint64_t v16 = v15;
      }
      std::vector<siri::dialogengine::Parameter>::__vallocate[abi:ne180100](v2, v16);
      double result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(v5, v4, v3[23]);
LABEL_23:
      v3[23] = result;
      return result;
    }
    uint64_t v17 = result[23];
    if (0xCF3CF3CF3CF3CF3DLL * ((v17 - v8) >> 4) < v6)
    {
      uint64_t v18 = v5 + 16 * ((v17 - v8) >> 4);
      if (v17 != v8)
      {
        uint64_t v19 = 16 * ((v17 - v8) >> 4);
        do
        {
          siri::dialogengine::Parameter::operator=(v8, v5);
          v5 += 336;
          v8 += 336;
          v19 -= 336;
        }
        while (v19);
        uint64_t v8 = v3[23];
      }
      double result = (void *)std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::Parameter>,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(v18, v4, v8);
      goto LABEL_23;
    }
    if (v5 != v4)
    {
      do
      {
        double result = (void *)siri::dialogengine::Parameter::operator=(v8, v5);
        v5 += 336;
        v8 += 336;
      }
      while (v5 != v4);
      uint64_t v17 = v3[23];
    }
    if (v17 != v8)
    {
      uint64_t v20 = v17 - 336;
      long long v21 = (uint64_t (***)(void))(v17 - 336);
      do
      {
        double result = (void *)(**v21)(v21);
        v20 -= 336;
        BOOL v13 = v21 == (uint64_t (***)(void))v8;
        v21 -= 42;
      }
      while (!v13);
    }
    v3[23] = v8;
  }
  return result;
}

void sub_1C5DA8AF0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 184) = v2;
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::Parameter::operator=(uint64_t a1, uint64_t a2)
{
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
  std::string::operator=((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
  std::string::operator=((std::string *)(a1 + 80), (const std::string *)(a2 + 80));
  std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  std::string::operator=((std::string *)(a1 + 128), (const std::string *)(a2 + 128));
  char v4 = *(unsigned char *)(a2 + 154);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(unsigned char *)(a1 + 154) = v4;
  std::string::operator=((std::string *)(a1 + 160), (const std::string *)(a2 + 160));
  std::string::operator=((std::string *)(a1 + 184), (const std::string *)(a2 + 184));
  std::string::operator=((std::string *)(a1 + 208), (const std::string *)(a2 + 208));
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  std::string::operator=((std::string *)(a1 + 256), (const std::string *)(a2 + 256));
  std::string::operator=((std::string *)(a1 + 280), (const std::string *)(a2 + 280));
  if (a1 != a2) {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__assign_multi<std::__tree_const_iterator<std::__value_type<std::string,std::string>,std::__tree_node<std::__value_type<std::string,std::string>,void *> *,long>>(a1 + 312, *(long long **)(a2 + 312), (long long *)(a2 + 320));
  }
  return a1;
}

uint64_t siri::dialogengine::File::GetParameter(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v2 = *(void *)(a1 + 176);
  for (uint64_t i = *(void *)(a1 + 184); v2 != i; v2 += 336)
  {
    if (*(char *)(v2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v2 + 8), *(void *)(v2 + 16));
    }
    else
    {
      long long v5 = *(_OWORD *)(v2 + 8);
      __p.__r_.__value_.__r.__words[2] = *(void *)(v2 + 24);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v5;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v7 = (unsigned __int8 *)*((unsigned __int8 *)a2 + 23);
    int v8 = (char)v7;
    if ((char)v7 < 0) {
      uint64_t v7 = a2[1];
    }
    if ((unsigned __int8 *)size == v7)
    {
      if (v8 >= 0) {
        uint64_t v9 = (unsigned __int8 *)a2;
      }
      else {
        uint64_t v9 = *a2;
      }
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        unint64_t v14 = (void *)__p.__r_.__value_.__r.__words[0];
        int v15 = memcmp(__p.__r_.__value_.__l.__data_, v9, __p.__r_.__value_.__l.__size_);
        operator delete(v14);
        if (!v15) {
          return v2;
        }
      }
      else
      {
        if (!*((unsigned char *)&__p.__r_.__value_.__s + 23)) {
          return v2;
        }
        uint64_t v10 = 0;
        do
        {
          int v11 = __p.__r_.__value_.__s.__data_[v10];
          int v12 = v9[v10];
        }
        while (v11 == v12 && HIBYTE(__p.__r_.__value_.__r.__words[2]) - 1 != v10++);
        if (v11 == v12) {
          return v2;
        }
      }
    }
    else if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return 0;
}

void siri::dialogengine::File::GetMetadata(siri::dialogengine::File *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  uint64_t v2 = a2 + 8;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = a2 + 8;
  uint64_t v3 = (const void **)*((void *)this + 25);
  char v4 = (const void ***)((char *)this + 208);
  if (v3 != (const void **)((char *)this + 208))
  {
    do
    {
      std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::set<std::string>> const&>((uint64_t **)a2, v2, v3 + 4, (uint64_t)(v3 + 4));
      unint64_t v6 = (const void **)v3[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = (const void ***)v6;
          unint64_t v6 = (const void **)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (const void ***)v3[2];
          BOOL v8 = *v7 == v3;
          uint64_t v3 = (const void **)v7;
        }
        while (!v8);
      }
      uint64_t v3 = (const void **)v7;
    }
    while (v7 != v4);
  }
}

void sub_1C5DA8D98(_Unwind_Exception *a1)
{
  std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::destroy(*v1);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::__emplace_hint_unique_key_args<std::string,std::pair<std::string const,std::set<std::string>> const&>(uint64_t **a1, uint64_t a2, const void **a3, uint64_t a4)
{
  BOOL v8 = a1 + 1;
  if (a1 + 1 != (uint64_t **)a2
    && !std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a3, (const void **)(a2 + 32)))
  {
    if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)(a2 + 32), a3))
    {
      uint64_t v22 = a2;
      uint64_t v23 = a2;
      int v12 = (uint64_t **)&v22;
      if (a2) {
        return;
      }
      goto LABEL_31;
    }
    int v12 = (uint64_t **)(a2 + 8);
    int v11 = *(uint64_t **)(a2 + 8);
    if (v11)
    {
      BOOL v13 = *(void **)(a2 + 8);
      do
      {
        uint64_t v14 = (uint64_t)v13;
        BOOL v13 = (void *)*v13;
      }
      while (v13);
    }
    else
    {
      uint64_t v17 = a2;
      do
      {
        uint64_t v14 = *(void *)(v17 + 16);
        BOOL v16 = *(void *)v14 == v17;
        uint64_t v17 = v14;
      }
      while (!v16);
    }
    if ((uint64_t **)v14 != v8)
    {
      if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), a3, (const void **)(v14 + 32)))
      {
LABEL_29:
        int v12 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v23, a3);
        goto LABEL_30;
      }
      int v11 = *v12;
    }
    if (v11)
    {
      uint64_t v23 = v14;
      int v12 = (uint64_t **)v14;
    }
    else
    {
      uint64_t v23 = a2;
    }
LABEL_30:
    if (*v12) {
      return;
    }
    goto LABEL_31;
  }
  if (*a1 != (uint64_t *)a2)
  {
    uint64_t v9 = *(void *)a2;
    if (*(void *)a2)
    {
      do
      {
        uint64_t v10 = v9;
        uint64_t v9 = *(void *)(v9 + 8);
      }
      while (v9);
    }
    else
    {
      uint64_t v15 = a2;
      do
      {
        uint64_t v10 = *(void *)(v15 + 16);
        BOOL v16 = *(void *)v10 == v15;
        uint64_t v15 = v10;
      }
      while (v16);
    }
    if (std::less<std::string>::operator()[abi:ne180100]((uint64_t)(a1 + 2), (const void **)(v10 + 32), a3)) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
  uint64_t v10 = a2;
LABEL_16:
  if (*(void *)a2)
  {
    uint64_t v23 = v10;
    int v12 = (uint64_t **)(v10 + 8);
    goto LABEL_30;
  }
  uint64_t v23 = a2;
  int v12 = (uint64_t **)a2;
LABEL_31:
  uint64_t v18 = (char *)operator new(0x50uLL);
  uint64_t v19 = (uint64_t *)v18;
  v20[0] = v18;
  v20[1] = v8;
  char v21 = 0;
  if (*(char *)(a4 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(v18 + 32), *(const std::string::value_type **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *((_OWORD *)v18 + 2) = *(_OWORD *)a4;
    *((void *)v18 + 6) = *(void *)(a4 + 16);
  }
  std::set<std::string>::set[abi:ne180100](v19 + 7, (const void ***)(a4 + 24));
  char v21 = 1;
  std::__tree<std::string>::__insert_node_at(a1, v23, v12, v19);
  v20[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)v20);
}

void sub_1C5DA8FBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::set<std::string>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void siri::dialogengine::File::SetMetadata(uint64_t a1, void *a2)
{
  char v4 = (void *)(a1 + 208);
  std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::destroy(*(void **)(a1 + 208));
  *(v4 - 1) = v4;
  *char v4 = 0;
  v4[1] = 0;
  uint64_t v7 = (void *)*a2;
  long long v5 = a2 + 1;
  unint64_t v6 = v7;
  if (v7 != v5)
  {
    do
    {
      BOOL v8 = (const void **)v6[7];
      if (v8 != v6 + 8)
      {
        do
        {
          siri::dialogengine::File::AddMetadata(a1, (uint64_t)(v6 + 4), v8 + 4);
          uint64_t v9 = (const void **)v8[1];
          if (v9)
          {
            do
            {
              uint64_t v10 = (const void ***)v9;
              uint64_t v9 = (const void **)*v9;
            }
            while (v9);
          }
          else
          {
            do
            {
              uint64_t v10 = (const void ***)v8[2];
              BOOL v11 = *v10 == v8;
              BOOL v8 = (const void **)v10;
            }
            while (!v11);
          }
          BOOL v8 = (const void **)v10;
        }
        while (v10 != v6 + 8);
      }
      int v12 = (void *)v6[1];
      if (v12)
      {
        do
        {
          BOOL v13 = v12;
          int v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          BOOL v13 = (void *)v6[2];
          BOOL v11 = *v13 == (void)v6;
          unint64_t v6 = v13;
        }
        while (!v11);
      }
      unint64_t v6 = v13;
    }
    while (v13 != v5);
  }
}

void siri::dialogengine::File::AddMetadata(uint64_t a1, uint64_t a2, const void **a3)
{
  long long v5 = (uint64_t **)(a1 + 200);
  siri::dialogengine::StringToLower(a2, (uint64_t)__p);
  unint64_t v6 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)v5, &v14, (const void **)__p);
  uint64_t v7 = (char *)*v6;
  if (!*v6)
  {
    BOOL v8 = (uint64_t **)v6;
    uint64_t v7 = (char *)operator new(0x50uLL);
    v12[1] = a1 + 208;
    *((_OWORD *)v7 + 2) = *(_OWORD *)__p;
    uint64_t v9 = v11;
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v11 = 0;
    *((void *)v7 + 8) = 0;
    *((void *)v7 + 9) = 0;
    *((void *)v7 + 6) = v9;
    *((void *)v7 + 7) = v7 + 64;
    char v13 = 1;
    std::__tree<std::string>::__insert_node_at(v5, v14, v8, (uint64_t *)v7);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)v12);
  }
  std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)v7 + 7, a3, (uint64_t)a3);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C5DA9210(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::File::GetWhitespaceMode(siri::dialogengine::File *this)
{
  std::string::basic_string[abi:ne180100]<0>(v12, "whitespace");
  siri::dialogengine::File::GetMetadataUnique((uint64_t)this, (uint64_t)v12, &v14);
  siri::dialogengine::StringTrim(" \t\n\r", &v14, &__p);
  siri::dialogengine::StringToLower((uint64_t)&__p, (uint64_t)&v16);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v14.__r_.__value_.__l.__data_);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v18 < 0)
  {
    switch(v17)
    {
      case 5uLL:
        if (*(_DWORD *)v16 == 1769108595 && *((unsigned char *)v16 + 4) == 112)
        {
          uint64_t v9 = 2;
LABEL_46:
          operator delete(v16);
          return v9;
        }
        break;
      case 8uLL:
        if (*v16 == 0x6576726573657270)
        {
          uint64_t v9 = 3;
          goto LABEL_46;
        }
        break;
      case 0x10uLL:
        unint64_t v5 = 0x636F6D7072657373;
        unint64_t v6 = bswap64(*v16);
        if (v6 == 0x636F6D7072657373 && (unint64_t v5 = 0x656163686C696E65, v6 = bswap64(v16[1]), v6 == 0x656163686C696E65))
        {
          int v7 = 0;
        }
        else if (v6 < v5)
        {
          int v7 = -1;
        }
        else
        {
          int v7 = 1;
        }
        uint64_t v9 = v7 == 0;
        goto LABEL_46;
    }
    uint64_t v9 = 0;
    goto LABEL_46;
  }
  if (v18 == 5)
  {
    if (v16 == 1769108595 && BYTE4(v16) == 112) {
      return 2;
    }
    return 0;
  }
  if (v18 == 8)
  {
    if (v16 == (unint64_t *)0x6576726573657270) {
      return 3;
    }
    return 0;
  }
  if (v18 != 16) {
    return 0;
  }
  unint64_t v2 = 0x636F6D7072657373;
  unint64_t v3 = bswap64((unint64_t)v16);
  if (v3 == 0x636F6D7072657373 && (unint64_t v2 = 0x656163686C696E65, v3 = bswap64(v17), v3 == 0x656163686C696E65))
  {
    int v4 = 0;
  }
  else if (v3 < v2)
  {
    int v4 = -1;
  }
  else
  {
    int v4 = 1;
  }
  return v4 == 0;
}

void sub_1C5DA946C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::File::GetRoot@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 232);
  *a2 = *(void *)(this + 224);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void siri::dialogengine::File::SetRoot(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 232);
  *(void *)(a1 + 224) = v3;
  *(void *)(a1 + 232) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

uint64_t siri::dialogengine::File::GetVisualRef@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 248);
  *a2 = *(void *)(this + 240);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void siri::dialogengine::File::SetVisualRef(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 248);
  *(void *)(a1 + 240) = v3;
  *(void *)(a1 + 248) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

uint64_t siri::dialogengine::File::GetVisualResponse@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(this + 264);
  *a2 = *(void *)(this + 256);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

void siri::dialogengine::File::SetVisualResponse(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 264);
  *(void *)(a1 + 256) = v3;
  *(void *)(a1 + 264) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

uint64_t siri::dialogengine::File::GetConditions@<X0>(uint64_t this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v2 = *(void **)(this + 272);
  uint64_t v3 = (void *)(this + 280);
  if (v2 != (void *)(this + 280))
  {
    unint64_t v5 = 0;
    unint64_t v6 = a2 + 2;
    do
    {
      if ((unint64_t)v5 >= *v6)
      {
        uint64_t v8 = ((uint64_t)v5 - *a2) >> 4;
        if ((unint64_t)(v8 + 1) >> 60) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v9 = *v6 - *a2;
        uint64_t v10 = v9 >> 3;
        if (v9 >> 3 <= (unint64_t)(v8 + 1)) {
          uint64_t v10 = v8 + 1;
        }
        if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v11 = v10;
        }
        v19[4] = v6;
        int v12 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v11);
        char v13 = &v12[16 * v8];
        v19[0] = v12;
        v19[1] = v13;
        v19[3] = &v12[16 * v14];
        long long v15 = *(_OWORD *)(v2 + 7);
        *(_OWORD *)char v13 = v15;
        if (*((void *)&v15 + 1)) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 1uLL, memory_order_relaxed);
        }
        v19[2] = v13 + 16;
        std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__swap_out_circular_buffer(a2, v19);
        unint64_t v5 = (void *)a2[1];
        this = std::__split_buffer<std::shared_ptr<siri::dialogengine::ChunkText>>::~__split_buffer((uint64_t)v19);
      }
      else
      {
        *unint64_t v5 = v2[7];
        uint64_t v7 = v2[8];
        v5[1] = v7;
        if (v7) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
        }
        v5 += 2;
        a2[1] = v5;
      }
      a2[1] = v5;
      BOOL v16 = (void *)v2[1];
      if (v16)
      {
        do
        {
          unint64_t v17 = v16;
          BOOL v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          unint64_t v17 = (void *)v2[2];
          BOOL v18 = *v17 == (void)v2;
          uint64_t v2 = v17;
        }
        while (!v18);
      }
      uint64_t v2 = v17;
    }
    while (v17 != v3);
  }
  return this;
}

void sub_1C5DA96F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t siri::dialogengine::File::GetCondition@<X0>(uint64_t a1@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  uint64_t result = std::__tree<std::string>::find<std::string>(a1 + 272, a2);
  if (a1 + 280 == result)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 64);
    *a3 = *(void *)(result + 56);
    a3[1] = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void siri::dialogengine::File::SetConditions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 280;
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*(void **)(a1 + 280));
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 272) = v4;
  unint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  if (*(void **)a2 != v6)
  {
    do
    {
      uint64_t v7 = (std::__shared_weak_count *)v5[1];
      v8[0] = *v5;
      v8[1] = v7;
      if (v7) {
        atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      siri::dialogengine::File::AddCondition(a1, (uint64_t)v8);
      if (v7) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v7);
      }
      v5 += 2;
    }
    while (v5 != v6);
  }
}

void sub_1C5DA9800(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::File::AddCondition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(std::string **)a2;
  if (*(char *)(*(void *)a2 + 119) < 0) {
    std::string::__init_copy_ctor_external(&v15, v4[4].__r_.__value_.__l.__data_, v4[4].__r_.__value_.__l.__size_);
  }
  else {
    std::string v15 = v4[4];
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = v15.__r_.__value_.__l.__size_;
    operator delete(v15.__r_.__value_.__l.__data_);
    if (size) {
      goto LABEL_6;
    }
LABEL_9:
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Condition defined without a name: ignoring it.", (const char *)a2);
    return;
  }
  if (!*((unsigned char *)&v15.__r_.__value_.__s + 23)) {
    goto LABEL_9;
  }
LABEL_6:
  unint64_t v5 = *(std::string **)a2;
  if (*(char *)(*(void *)a2 + 119) < 0) {
    std::string::__init_copy_ctor_external(&__p, v5[4].__r_.__value_.__l.__data_, v5[4].__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v5[4];
  }
  uint64_t v7 = (void **)std::__tree<std::string>::__find_equal<std::string>(a1 + 272, &v16, (const void **)&__p.__r_.__value_.__l.__data_);
  uint64_t v8 = *v7;
  if (!*v7)
  {
    uint64_t v9 = (uint64_t **)v7;
    uint64_t v8 = operator new(0x48uLL);
    v15.__r_.__value_.__l.__size_ = a1 + 280;
    *((_OWORD *)v8 + 2) = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    std::string::size_type v10 = __p.__r_.__value_.__r.__words[2];
    memset(&__p, 0, sizeof(__p));
    *((void *)v8 + 7) = 0;
    *((void *)v8 + 8) = 0;
    *((void *)v8 + 6) = v10;
    v15.__r_.__value_.__s.__data_[16] = 1;
    std::__tree<std::string>::__insert_node_at((uint64_t **)(a1 + 272), v16, v9, (uint64_t *)v8);
    v15.__r_.__value_.__r.__words[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v15);
  }
  int v12 = *(std::string **)a2;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  char v13 = (std::__shared_weak_count *)*((void *)v8 + 8);
  *((void *)v8 + 7) = v12;
  *((void *)v8 + 8) = v11;
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DA9980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::File::GetPhrases(siri::dialogengine::File *this)
{
  return (uint64_t)this + 312;
}

char *siri::dialogengine::File::GetPhrase(uint64_t a1, unsigned __int8 *a2)
{
  return siri::dialogengine::GroupPhrases::GetPhrase(a1 + 312, a2);
}

void siri::dialogengine::File::SetPhrases(uint64_t a1, uint64_t a2)
{
  memset(v8, 0, sizeof(v8));
  siri::dialogengine::Group::SetNodes((uint64_t *)(a1 + 312), v8);
  uint64_t v9 = (void **)v8;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&v9);
  uint64_t v4 = *(void **)a2;
  unint64_t v5 = *(void **)(a2 + 8);
  if (*(void **)a2 != v5)
  {
    do
    {
      uint64_t v6 = (std::__shared_weak_count *)v4[1];
      v7[0] = *v4;
      v7[1] = v6;
      if (v6) {
        atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      siri::dialogengine::File::AddPhrase(a1, v7);
      if (v6) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v6);
      }
      v4 += 2;
    }
    while (v4 != v5);
  }
}

void sub_1C5DA9A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::AddPhrase(uint64_t a1, void *a2)
{
  uint64_t v2 = (void *)(a1 + 312);
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  v4[0] = *a2;
  v4[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  siri::dialogengine::Group::AddNode(v2, v4);
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1C5DA9AF0(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::File::GetFallback(siri::dialogengine::File *this)
{
  return *((void *)this + 37);
}

void siri::dialogengine::File::SetFallback(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 304);
  *(void *)(a1 + 296) = v3;
  *(void *)(a1 + 304) = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void siri::dialogengine::File::GetTexts(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  siri::dialogengine::WalkNodesForTexts((uint64_t)a2, (uint64_t)this + 312);
}

void sub_1C5DA9B78(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::WalkNodesForTexts(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    std::vector<std::shared_ptr<siri::dialogengine::Node>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::Node>*,std::shared_ptr<siri::dialogengine::Node>*>(&v27, *(void **)(a2 + 208), *(void **)(a2 + 216), (uint64_t)(*(void *)(a2 + 216) - *(void *)(a2 + 208)) >> 4);
    uint64_t v3 = v27;
    uint64_t v4 = v28;
    if (v27 != v28)
    {
      while (1)
      {
        uint64_t v6 = *(const void **)v3;
        long long v26 = 0u;
        if (!*(void *)v3) {
          goto LABEL_34;
        }
        if (!v7) {
          break;
        }
        siri::dialogengine::WalkNodesForTexts(a1, v7);
LABEL_36:
        v3 += 16;
        if (v3 == v4) {
          goto LABEL_40;
        }
      }
      if (!v8)
      {
LABEL_34:
        if (*((void *)&v26 + 1)) {
          std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v26 + 1));
        }
        goto LABEL_36;
      }
      uint64_t v9 = *(void *)(v3 + 8);
      *(void *)&long long v10 = v8;
      *((void *)&v10 + 1) = v9;
      long long v26 = v10;
      if (v9)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        int v12 = *(void **)(a1 + 8);
        unint64_t v11 = *(void *)(a1 + 16);
        if ((unint64_t)v12 < v11)
        {
          *int v12 = v8;
          v12[1] = v9;
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
LABEL_13:
          char v13 = v12 + 2;
          *(void *)(a1 + 8) = v12 + 2;
          goto LABEL_33;
        }
      }
      else
      {
        int v12 = *(void **)(a1 + 8);
        unint64_t v11 = *(void *)(a1 + 16);
        if ((unint64_t)v12 < v11)
        {
          *int v12 = v8;
          v12[1] = 0;
          goto LABEL_13;
        }
      }
      uint64_t v14 = *(void **)a1;
      uint64_t v15 = ((uint64_t)v12 - *(void *)a1) >> 4;
      unint64_t v16 = v15 + 1;
      if ((unint64_t)(v15 + 1) >> 60) {
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      }
      unint64_t v17 = v5;
      uint64_t v18 = v11 - (void)v14;
      if (v18 >> 3 > v16) {
        unint64_t v16 = v18 >> 3;
      }
      if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v19 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v19 = v16;
      }
      if (v19 >> 60) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v20 = (char *)operator new(16 * v19);
      char v21 = &v20[16 * v15];
      *(_OWORD *)char v21 = v26;
      if (v9)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        uint64_t v14 = *(void **)a1;
        int v12 = *(void **)(a1 + 8);
      }
      uint64_t v22 = &v20[16 * v19];
      char v13 = v21 + 16;
      if (v12 == v14)
      {
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v22;
        unint64_t v5 = v17;
        if (!v14) {
          goto LABEL_33;
        }
      }
      else
      {
        unint64_t v5 = v17;
        do
        {
          long long v23 = *((_OWORD *)v12 - 1);
          v12 -= 2;
          *((_OWORD *)v21 - 1) = v23;
          v21 -= 16;
          *int v12 = 0;
          v12[1] = 0;
        }
        while (v12 != v14);
        unint64_t v24 = *(void **)a1;
        uint64_t v14 = *(void **)(a1 + 8);
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v13;
        *(void *)(a1 + 16) = v22;
        if (v14 != v24)
        {
          do
          {
            uint64_t v25 = (std::__shared_weak_count *)*(v14 - 1);
            if (v25) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v25);
            }
            v14 -= 2;
          }
          while (v14 != v24);
          uint64_t v14 = v24;
        }
        if (!v14) {
          goto LABEL_33;
        }
      }
      operator delete(v14);
LABEL_33:
      *(void *)(a1 + 8) = v13;
      goto LABEL_34;
    }
LABEL_40:
    BOOL v30 = (void **)&v27;
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&v30);
  }
}

void sub_1C5DA9E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, void **a14)
{
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  a14 = (void **)&a11;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&a14);
  _Unwind_Resume(a1);
}

double siri::dialogengine::File::GetOrCreateId@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>((void *)a5, "");
  if (!a2) {
    return result;
  }
  if (a4 != 1)
  {
    unint64_t v11 = (_OWORD *)(a2 + 96);
    if (*(char *)(a2 + 119) < 0)
    {
      std::string::__init_copy_ctor_external(&v20, *(const std::string::value_type **)(a2 + 96), *(void *)(a2 + 104));
    }
    else
    {
      *(_OWORD *)&v20.__r_.__value_.__l.__data_ = *v11;
      v20.__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    }
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v20.__r_.__value_.__l.__size_;
    }
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v20.__r_.__value_.__l.__data_);
      if (size)
      {
LABEL_11:
        if (*(char *)(a2 + 119) < 0)
        {
          std::string::__init_copy_ctor_external(&v20, *(const std::string::value_type **)(a2 + 96), *(void *)(a2 + 104));
        }
        else
        {
          *(_OWORD *)&v20.__r_.__value_.__l.__data_ = *v11;
          v20.__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
        }
        if (*(char *)(a5 + 23) < 0) {
          operator delete(*(void **)a5);
        }
        *(std::string *)a5 = v20;
        if (siri::dialogengine::StringStartsWith((std::string *)a5, (unsigned __int8 *)(a1 + 104))) {
          return result;
        }
        goto LABEL_42;
      }
    }
    else if (size)
    {
      goto LABEL_11;
    }
  }
  uint64_t v14 = *(void *)(a1 + 224);
  char v13 = *(std::__shared_weak_count **)(a1 + 232);
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "");
  siri::dialogengine::WalkNodesForDialogId(&v20, v14, (const void *)a2, (const void **)&__p.__r_.__value_.__l.__data_);
  if (*(char *)(a5 + 23) < 0) {
    operator delete(*(void **)a5);
  }
  double result = *(double *)&v20.__r_.__value_.__l.__data_;
  *(std::string *)a5 = v20;
  *((unsigned char *)&v20.__r_.__value_.__s + 23) = 0;
  v20.__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v13);
  }
  if (*(void *)(a1 + 296) == a2) {
    MEMORY[0x1C8796900](a5, "fallback");
  }
  uint64_t v15 = *(unsigned __int8 *)(a5 + 23);
  if ((v15 & 0x80u) != 0) {
    uint64_t v15 = *(void *)(a5 + 8);
  }
  if (!v15)
  {
    uint64_t v16 = *(void *)(a1 + 296);
    std::string::basic_string[abi:ne180100]<0>(&__p, "fallback");
    siri::dialogengine::WalkNodesForDialogId(&v20, v16, (const void *)a2, (const void **)&__p.__r_.__value_.__l.__data_);
    if (*(char *)(a5 + 23) < 0) {
      operator delete(*(void **)a5);
    }
    double result = *(double *)&v20.__r_.__value_.__l.__data_;
    *(std::string *)a5 = v20;
    *((unsigned char *)&v20.__r_.__value_.__s + 23) = 0;
    v20.__r_.__value_.__s.__data_[0] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    uint64_t v17 = *(unsigned __int8 *)(a5 + 23);
    if ((v17 & 0x80u) != 0) {
      uint64_t v17 = *(void *)(a5 + 8);
    }
    if (!v17)
    {
      std::string::basic_string[abi:ne180100]<0>(&__p, "phrase");
      siri::dialogengine::WalkNodesForDialogId(&v20, a1 + 312, (const void *)a2, (const void **)&__p.__r_.__value_.__l.__data_);
      if (*(char *)(a5 + 23) < 0) {
        operator delete(*(void **)a5);
      }
      double result = *(double *)&v20.__r_.__value_.__l.__data_;
      *(std::string *)a5 = v20;
      *((unsigned char *)&v20.__r_.__value_.__s + 23) = 0;
      v20.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
LABEL_42:
  if (a3 == 1)
  {
    siri::dialogengine::JoinIDs(&__p, a1 + 128, a5);
    siri::dialogengine::JoinIDs(&v20, a1 + 104, (uint64_t)&__p);
    if (*(char *)(a5 + 23) < 0) {
      operator delete(*(void **)a5);
    }
    double result = *(double *)&v20.__r_.__value_.__l.__data_;
    *(std::string *)a5 = v20;
    *((unsigned char *)&v20.__r_.__value_.__s + 23) = 0;
    v20.__r_.__value_.__s.__data_[0] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    if (*(char *)(a5 + 23) < 0)
    {
      if (!*(void *)(a5 + 8)) {
        return result;
      }
      uint64_t v18 = *(unsigned char **)a5;
    }
    else
    {
      uint64_t v18 = (unsigned char *)a5;
      if (!*(unsigned char *)(a5 + 23)) {
        return result;
      }
    }
    if (*v18 == 35)
    {
      std::string::basic_string(&v20, (const std::string *)a5, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__p);
      if (*(char *)(a5 + 23) < 0) {
        operator delete(*(void **)a5);
      }
      double result = *(double *)&v20.__r_.__value_.__l.__data_;
      *(std::string *)a5 = v20;
    }
  }
  return result;
}

void sub_1C5DAA1C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::WalkNodesForDialogId(void *a1, uint64_t a2, const void *a3, const void **a4)
{
  uint64_t v4 = a1;
  if (a2)
  {
    std::string::size_type v55 = 0;
    std::__split_buffer<std::string>::pointer v56 = 0;
    uint64_t v57 = 0;
    std::vector<std::shared_ptr<siri::dialogengine::Node>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::Node>*,std::shared_ptr<siri::dialogengine::Node>*>(&v55, *(void **)(a2 + 208), *(void **)(a2 + 216), (uint64_t)(*(void *)(a2 + 216) - *(void *)(a2 + 208)) >> 4);
    uint64_t v7 = v55;
    uint64_t v6 = v56;
    if (v55 == v56)
    {
LABEL_90:
      long long v52 = (std::string::value_type *)&v55;
      std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v52);
      std::string::basic_string[abi:ne180100]<0>(v4, "");
      return;
    }
    uint64_t v8 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    int v43 = 0;
    uint64_t v9 = "node";
    char v46 = v4;
    while (1)
    {
      std::string::basic_string[abi:ne180100]<0>(&v52, v9);
      unint64_t v11 = *v7;
      if (*v7)
      {
        {
          MEMORY[0x1C8796900](&v52, "dialog");
          uint64_t v8 = (v8 + 1);
          int v12 = v8;
        }
        {
          MEMORY[0x1C8796900](&v52, "text");
          int v12 = ++HIDWORD(v45);
        }
        {
          MEMORY[0x1C8796900](&v52, "first");
          int v12 = v45 + 1;
          LODWORD(v45) = v45 + 1;
        }
        {
          MEMORY[0x1C8796900](&v52, "random");
          int v12 = ++HIDWORD(v44);
        }
        {
          MEMORY[0x1C8796900](&v52, "all");
          int v12 = v44 + 1;
          LODWORD(v44) = v44 + 1;
        }
        {
          MEMORY[0x1C8796900](&v52, "switch");
          int v12 = ++v43;
        }
        else
        {
          int v12 = 0;
        }
        if (v11 == a3)
        {
          if (*((char *)a4 + 23) >= 0) {
            size_t v32 = *((unsigned __int8 *)a4 + 23);
          }
          else {
            size_t v32 = (size_t)a4[1];
          }
          std::string::basic_string[abi:ne180100]((uint64_t)&v50, v32 + 1);
          if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            long long v33 = &v50;
          }
          else {
            long long v33 = (std::string *)v50.__r_.__value_.__r.__words[0];
          }
          if (v32)
          {
            if (*((char *)a4 + 23) >= 0) {
              int v34 = a4;
            }
            else {
              int v34 = *a4;
            }
            memmove(v33, v34, v32);
          }
          *(_WORD *)((char *)&v33->__r_.__value_.__l.__data_ + v32) = 35;
          if ((v54 & 0x80u) == 0) {
            v35 = (const std::string::value_type *)&v52;
          }
          else {
            v35 = v52;
          }
          if ((v54 & 0x80u) == 0) {
            std::string::size_type v36 = v54;
          }
          else {
            std::string::size_type v36 = v53;
          }
          uint64_t v37 = std::string::append(&v50, v35, v36);
          long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v38;
          v37->__r_.__value_.__l.__size_ = 0;
          v37->__r_.__value_.__r.__words[2] = 0;
          v37->__r_.__value_.__r.__words[0] = 0;
          std::to_string(&v49, v12);
          uint64_t v4 = v46;
          if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::__split_buffer<std::string>::pointer v39 = &v49;
          }
          else {
            std::__split_buffer<std::string>::pointer v39 = (std::string *)v49.__r_.__value_.__r.__words[0];
          }
          if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v49.__r_.__value_.__l.__size_;
          }
          uint64_t v41 = std::string::append(&__p, (const std::string::value_type *)v39, size);
          long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
          v46[2] = *((void *)&v41->__r_.__value_.__l + 2);
          *(_OWORD *)char v46 = v42;
          v41->__r_.__value_.__l.__size_ = 0;
          v41->__r_.__value_.__r.__words[2] = 0;
          v41->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v49.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v50.__r_.__value_.__l.__data_);
          }
LABEL_83:
          BOOL v31 = 1;
          goto LABEL_86;
        }
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = v10;
          uint64_t v16 = v8;
          uint64_t v17 = v6;
          uint64_t v18 = a3;
          unint64_t v19 = v9;
          if (*((char *)a4 + 23) >= 0) {
            size_t v20 = *((unsigned __int8 *)a4 + 23);
          }
          else {
            size_t v20 = (size_t)a4[1];
          }
          std::string::basic_string[abi:ne180100]((uint64_t)&v49, v20 + 1);
          if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            char v21 = &v49;
          }
          else {
            char v21 = (std::string *)v49.__r_.__value_.__r.__words[0];
          }
          if (v20)
          {
            if (*((char *)a4 + 23) >= 0) {
              uint64_t v22 = a4;
            }
            else {
              uint64_t v22 = *a4;
            }
            memmove(v21, v22, v20);
          }
          *(_WORD *)((char *)&v21->__r_.__value_.__l.__data_ + v20) = 35;
          if ((v54 & 0x80u) == 0) {
            long long v23 = (const std::string::value_type *)&v52;
          }
          else {
            long long v23 = v52;
          }
          if ((v54 & 0x80u) == 0) {
            std::string::size_type v24 = v54;
          }
          else {
            std::string::size_type v24 = v53;
          }
          uint64_t v25 = std::string::append(&v49, v23, v24);
          long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
          v50.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v26;
          v25->__r_.__value_.__l.__size_ = 0;
          v25->__r_.__value_.__r.__words[2] = 0;
          v25->__r_.__value_.__r.__words[0] = 0;
          std::to_string(&v48, v12);
          uint64_t v4 = v46;
          uint64_t v9 = v19;
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v27 = &v48;
          }
          else {
            uint64_t v27 = (std::string *)v48.__r_.__value_.__r.__words[0];
          }
          if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v28 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v28 = v48.__r_.__value_.__l.__size_;
          }
          uint64_t v29 = std::string::append(&v50, (const std::string::value_type *)v27, v28);
          a3 = v18;
          std::string __p = *v29;
          v29->__r_.__value_.__l.__size_ = 0;
          v29->__r_.__value_.__r.__words[2] = 0;
          v29->__r_.__value_.__r.__words[0] = 0;
          siri::dialogengine::WalkNodesForDialogId(v46, v14, v18, &__p);
          uint64_t v6 = v17;
          uint64_t v8 = v16;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          long long v10 = v15;
          if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v48.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v50.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v49.__r_.__value_.__l.__data_);
          }
          int v30 = *((char *)v46 + 23);
          if ((v30 & 0x80000000) == 0)
          {
            BOOL v31 = v30 != 0;
            goto LABEL_86;
          }
          if (v46[1]) {
            goto LABEL_83;
          }
          operator delete((void *)*v46);
        }
      }
      BOOL v31 = 0;
LABEL_86:
      if ((char)v54 < 0) {
        operator delete(v52);
      }
      if (v31)
      {
        long long v52 = (std::string::value_type *)&v55;
        std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v52);
        return;
      }
      v7 += 2;
      if (v7 == v6) {
        goto LABEL_90;
      }
    }
  }
  std::string::basic_string[abi:ne180100]<0>(a1, "");
}

void sub_1C5DAA850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (*(char *)(v39 - 113) < 0) {
    operator delete(*(void **)(v39 - 136));
  }
  *(void *)(v39 - 136) = v39 - 112;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v39 - 136));
  _Unwind_Resume(a1);
}

void siri::dialogengine::JoinIDs(std::string *this, uint64_t a2, uint64_t a3)
{
  int v5 = *(char *)(a2 + 23);
  std::string::size_type v6 = *(void *)(a2 + 8);
  if (v5 >= 0) {
    uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  uint64_t v8 = *(unsigned __int8 *)(a3 + 23);
  if (!v7)
  {
    if ((v8 & 0x80) == 0)
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
      std::string::size_type v11 = *(void *)(a3 + 16);
LABEL_14:
      this->__r_.__value_.__r.__words[2] = v11;
      return;
    }
    size_t v20 = *(const std::string::value_type **)a3;
    std::string::size_type v6 = *(void *)(a3 + 8);
LABEL_42:
    std::string::__init_copy_ctor_external(this, v20, v6);
    return;
  }
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a3 + 8);
  }
  if (!v8)
  {
    if ((v5 & 0x80000000) == 0)
    {
      *(_OWORD *)&this->__r_.__value_.__l.__data_ = *(_OWORD *)a2;
      std::string::size_type v11 = *(void *)(a2 + 16);
      goto LABEL_14;
    }
    size_t v20 = *(const std::string::value_type **)a2;
    goto LABEL_42;
  }
  std::string::basic_string[abi:ne180100]<0>(&v23, "#");
  if (siri::dialogengine::StringEndsWith((std::string *)a2, (unsigned __int8 *)&v23))
  {
    BOOL v10 = 1;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "#");
    BOOL v10 = siri::dialogengine::StringStartsWith((std::string *)a3, (unsigned __int8 *)__p);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v23.__r_.__value_.__l.__data_);
    if (v10) {
      goto LABEL_19;
    }
  }
  else if (v10)
  {
LABEL_19:
    std::operator+[abi:ne180100]<char,std::char_traits<char>,std::allocator<char>>((const void **)a2, (const void **)a3, (uint64_t)this);
    return;
  }
  if (*(char *)(a2 + 23) >= 0) {
    size_t v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    size_t v12 = *(void *)(a2 + 8);
  }
  char v13 = &v23;
  std::string::basic_string[abi:ne180100]((uint64_t)&v23, v12 + 1);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    char v13 = (std::string *)v23.__r_.__value_.__r.__words[0];
  }
  if (v12)
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v14 = (const void *)a2;
    }
    else {
      uint64_t v14 = *(const void **)a2;
    }
    memmove(v13, v14, v12);
  }
  *(_WORD *)((char *)&v13->__r_.__value_.__l.__data_ + v12) = 35;
  int v15 = *(char *)(a3 + 23);
  if (v15 >= 0) {
    uint64_t v16 = (const std::string::value_type *)a3;
  }
  else {
    uint64_t v16 = *(const std::string::value_type **)a3;
  }
  if (v15 >= 0) {
    std::string::size_type v17 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    std::string::size_type v17 = *(void *)(a3 + 8);
  }
  uint64_t v18 = std::string::append(&v23, v16, v17);
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  this->__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DAAB30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::File::AddValidationError(uint64_t a1, long long *a2, uint64_t a3)
{
  siri::dialogengine::ValidationEntry::ValidationEntry((uint64_t)v9, a2, a3);
  std::__tree<siri::dialogengine::ValidationEntry>::__emplace_unique_key_args<siri::dialogengine::ValidationEntry,siri::dialogengine::ValidationEntry const&>((uint64_t **)(a1 + 568), (uint64_t)v9, (const siri::dialogengine::ValidationEntry *)v9);
  siri::dialogengine::ValidationEntry::GetFormattedText((siri::dialogengine::ValidationEntry *)v9, &v6);
  uint64_t v4 = std::string::insert(&v6, 0, "Validation Error: ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  std::string::size_type v8 = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  v9[0] = &unk_1F211E4D0;
  if (v10 < 0) {
    operator delete(v9[8]);
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v9);
}

void sub_1C5DAAC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  siri::dialogengine::ValidationEntry::~ValidationEntry(&a22);
  _Unwind_Resume(a1);
}

void std::__tree<siri::dialogengine::ValidationEntry>::__emplace_unique_key_args<siri::dialogengine::ValidationEntry,siri::dialogengine::ValidationEntry const&>(uint64_t **a1, uint64_t a2, const siri::dialogengine::ValidationEntry *a3)
{
  std::string v6 = a1 + 1;
  long long v5 = a1[1];
  uint64_t v7 = a1 + 1;
  std::string::size_type v8 = a1 + 1;
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (uint64_t **)v5;
        uint64_t v10 = (uint64_t)(v5 + 4);
        if (!siri::dialogengine::operator<(a2, (uint64_t)(v5 + 4))) {
          break;
        }
        long long v5 = *v7;
        std::string::size_type v8 = v7;
        if (!*v7) {
          goto LABEL_7;
        }
      }
      if (!siri::dialogengine::operator<(v10, a2)) {
        break;
      }
      std::string::size_type v8 = v7 + 1;
      long long v5 = v7[1];
      if (!v5) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    std::string::size_type v11 = (uint64_t *)operator new(0x78uLL);
    v13[0] = v11;
    v13[1] = v6;
    siri::dialogengine::ValidationEntry::ValidationEntry((siri::dialogengine::ValidationEntry *)(v11 + 4), a3);
    char v14 = 1;
    *std::string::size_type v11 = 0;
    v11[1] = 0;
    uint64_t v11[2] = (uint64_t)v7;
    *std::string::size_type v8 = v11;
    size_t v12 = (uint64_t *)**a1;
    if (v12)
    {
      *a1 = v12;
      std::string::size_type v11 = *v8;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    v13[0] = 0;
    std::unique_ptr<std::__tree_node<siri::dialogengine::ValidationEntry,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<siri::dialogengine::ValidationEntry,void *>>>>::reset[abi:ne180100]((uint64_t)v13);
  }
}

void sub_1C5DAAD94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<siri::dialogengine::ValidationEntry,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<siri::dialogengine::ValidationEntry,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<siri::dialogengine::ValidationEntry,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<siri::dialogengine::ValidationEntry,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void (****)(void))a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      (*v1[4])();
    }
    operator delete(v1);
  }
}

siri::dialogengine::ValidationEntry *siri::dialogengine::ValidationEntry::ValidationEntry(siri::dialogengine::ValidationEntry *this, const siri::dialogengine::ValidationEntry *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  *(void *)this = &unk_1F21271B8;
  *((void *)this + 1) = v4;
  if (*((char *)a2 + 39) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 16), *((const std::string::value_type **)a2 + 2), *((void *)a2 + 3));
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((_OWORD *)this + 1) = v5;
  }
  std::string v6 = (std::string *)((char *)this + 40);
  if (*((char *)a2 + 63) < 0)
  {
    std::string::__init_copy_ctor_external(v6, *((const std::string::value_type **)a2 + 5), *((void *)a2 + 6));
  }
  else
  {
    long long v7 = *(_OWORD *)((char *)a2 + 40);
    *((void *)this + 7) = *((void *)a2 + 7);
    *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
  }
  *(void *)this = &unk_1F211E4D0;
  std::string::size_type v8 = (std::string *)((char *)this + 64);
  if (*((char *)a2 + 87) < 0)
  {
    std::string::__init_copy_ctor_external(v8, *((const std::string::value_type **)a2 + 8), *((void *)a2 + 9));
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 4);
    *((void *)this + 10) = *((void *)a2 + 10);
    *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v9;
  }
  return this;
}

void sub_1C5DAAF14(_Unwind_Exception *a1)
{
  siri::dialogengine::LineNumberBase::~LineNumberBase(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::AddValidationWarning(uint64_t a1, long long *a2, uint64_t a3)
{
  siri::dialogengine::ValidationEntry::ValidationEntry((uint64_t)v9, a2, a3);
  std::__tree<siri::dialogengine::ValidationEntry>::__emplace_unique_key_args<siri::dialogengine::ValidationEntry,siri::dialogengine::ValidationEntry const&>((uint64_t **)(a1 + 592), (uint64_t)v9, (const siri::dialogengine::ValidationEntry *)v9);
  siri::dialogengine::ValidationEntry::GetFormattedText((siri::dialogengine::ValidationEntry *)v9, &v6);
  uint64_t v4 = std::string::insert(&v6, 0, "Validation Warning: ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  std::string::size_type v8 = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  v9[0] = &unk_1F211E4D0;
  if (v10 < 0) {
    operator delete(v9[8]);
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v9);
}

void sub_1C5DAB01C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  siri::dialogengine::ValidationEntry::~ValidationEntry(&a22);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::AddValidationNit(uint64_t a1, long long *a2, uint64_t a3)
{
  siri::dialogengine::ValidationEntry::ValidationEntry((uint64_t)v9, a2, a3);
  std::__tree<siri::dialogengine::ValidationEntry>::__emplace_unique_key_args<siri::dialogengine::ValidationEntry,siri::dialogengine::ValidationEntry const&>((uint64_t **)(a1 + 616), (uint64_t)v9, (const siri::dialogengine::ValidationEntry *)v9);
  siri::dialogengine::ValidationEntry::GetFormattedText((siri::dialogengine::ValidationEntry *)v9, &v6);
  uint64_t v4 = std::string::insert(&v6, 0, "Validation Nit: ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  std::string::size_type v8 = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
  v9[0] = &unk_1F211E4D0;
  if (v10 < 0) {
    operator delete(v9[8]);
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v9);
}

void sub_1C5DAB140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  siri::dialogengine::ValidationEntry::~ValidationEntry(&a22);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::AddValidationError(uint64_t **this, const siri::dialogengine::ValidationEntry *a2)
{
}

void siri::dialogengine::File::AddValidationWarning(uint64_t **this, const siri::dialogengine::ValidationEntry *a2)
{
}

void siri::dialogengine::File::AddValidationNit(uint64_t **this, const siri::dialogengine::ValidationEntry *a2)
{
}

void *siri::dialogengine::File::GetValidationErrors@<X0>(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  return std::vector<siri::dialogengine::ValidationEntry>::vector<std::__tree_const_iterator<siri::dialogengine::ValidationEntry,std::__tree_node<siri::dialogengine::ValidationEntry,void *> *,long>,0>(a2, *((void **)this + 71), (void *)this + 72);
}

void *std::vector<siri::dialogengine::ValidationEntry>::vector<std::__tree_const_iterator<siri::dialogengine::ValidationEntry,std::__tree_node<siri::dialogengine::ValidationEntry,void *> *,long>,0>(void *a1, void *a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 != a3)
  {
    long long v5 = a2;
    unint64_t v6 = 0;
    long long v7 = v5;
    do
    {
      std::string::size_type v8 = (void *)v7[1];
      if (v8)
      {
        do
        {
          long long v9 = v8;
          std::string::size_type v8 = (void *)*v8;
        }
        while (v8);
      }
      else
      {
        do
        {
          long long v9 = (void *)v7[2];
          BOOL v10 = *v9 == (void)v7;
          long long v7 = v9;
        }
        while (!v10);
      }
      ++v6;
      long long v7 = v9;
    }
    while (v9 != a3);
    std::vector<siri::dialogengine::ValidationEntry>::__vallocate[abi:ne180100](a1, v6);
    uint64_t v11 = 0;
    size_t v12 = (siri::dialogengine::ValidationEntry *)a1[1];
    do
    {
      siri::dialogengine::ValidationEntry::ValidationEntry(v12, (const siri::dialogengine::ValidationEntry *)(v5 + 4));
      char v13 = (void *)v5[1];
      if (v13)
      {
        do
        {
          char v14 = v13;
          char v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          char v14 = (void *)v5[2];
          BOOL v10 = *v14 == (void)v5;
          long long v5 = v14;
        }
        while (!v10);
      }
      size_t v12 = (siri::dialogengine::ValidationEntry *)((char *)v12 + 88);
      v11 += 88;
      long long v5 = v14;
    }
    while (v14 != a3);
    a1[1] = v12;
  }
  return a1;
}

void sub_1C5DAB2C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *std::vector<siri::dialogengine::ValidationEntry>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v3 = 88 * a2;
  double result = (char *)operator new(88 * a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[v3];
  return result;
}

void *siri::dialogengine::File::GetValidationWarnings@<X0>(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  return std::vector<siri::dialogengine::ValidationEntry>::vector<std::__tree_const_iterator<siri::dialogengine::ValidationEntry,std::__tree_node<siri::dialogengine::ValidationEntry,void *> *,long>,0>(a2, *((void **)this + 74), (void *)this + 75);
}

void *siri::dialogengine::File::GetValidationNits@<X0>(siri::dialogengine::File *this@<X0>, void *a2@<X8>)
{
  return std::vector<siri::dialogengine::ValidationEntry>::vector<std::__tree_const_iterator<siri::dialogengine::ValidationEntry,std::__tree_node<siri::dialogengine::ValidationEntry,void *> *,long>,0>(a2, *((void **)this + 77), (void *)this + 78);
}

void siri::dialogengine::File::IgnoreVariablesWithoutParameter(siri::dialogengine::File *this, const void ***a2)
{
  if (a2 && *((_DWORD *)a2 + 2) != 1)
  {
    v33[0] = 0;
    v33[1] = 0;
    size_t v32 = v33;
    __p[0] = 0;
    __p[1] = 0;
    v35 = 0;
    std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(__p, *((void *)this + 22), *((void *)this + 23), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*((void *)this + 23) - *((void *)this + 22)) >> 4));
    uint64_t v3 = (char *)__p[0];
    uint64_t v4 = (char *)__p[1];
    while (v3 != v4)
    {
      if (v3[31] < 0)
      {
        std::string::__init_copy_ctor_external(&v31, *((const std::string::value_type **)v3 + 1), *((void *)v3 + 2));
      }
      else
      {
        long long v5 = *(_OWORD *)(v3 + 8);
        v31.__r_.__value_.__r.__words[2] = *((void *)v3 + 3);
        *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v5;
      }
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)&v32, (const void **)&v31.__r_.__value_.__l.__data_, (uint64_t)&v31);
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      v3 += 336;
    }
    v31.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
    std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&v31);
    siri::dialogengine::Context::GetGlobalParameters((siri::dialogengine::Context *)a2, (uint64_t)__p);
    unint64_t v6 = (void **)__p[0];
    if (__p[0] != &__p[1])
    {
      do
      {
        std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)&v32, (const void **)v6 + 4, (uint64_t)(v6 + 4));
        long long v7 = (void **)v6[1];
        if (v7)
        {
          do
          {
            std::string::size_type v8 = v7;
            long long v7 = (void **)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            std::string::size_type v8 = (void **)v6[2];
            BOOL v9 = *v8 == v6;
            unint64_t v6 = v8;
          }
          while (!v9);
        }
        unint64_t v6 = v8;
      }
      while (v8 != &__p[1]);
    }
    std::__tree<std::__value_type<std::string,siri::dialogengine::Parameter>,std::__map_value_compare<std::string,std::__value_type<std::string,siri::dialogengine::Parameter>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,siri::dialogengine::Parameter>>>::destroy((void *)__p[1]);
    memset(&v31, 0, sizeof(v31));
    std::map<std::string,std::shared_ptr<siri::dialogengine::Variable>>::map[abi:ne180100]((uint64_t)&v29, a2 + 65);
    BOOL v10 = v29;
    if (v29 == v30)
    {
      std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*v29);
    }
    else
    {
      char v11 = 1;
      do
      {
        if (*((char *)v10 + 55) < 0) {
          std::string::__init_copy_ctor_external(&v28, (const std::string::value_type *)v10[4], (std::string::size_type)v10[5]);
        }
        else {
          std::string v28 = *(std::string *)(v10 + 4);
        }
        if (v33 == (char **)std::__tree<std::string>::find<std::string>((uint64_t)&v32, (const void **)&v28.__r_.__value_.__l.__data_))
        {
          std::operator+<char>();
          int v15 = std::string::append(&v27, "' as it is not a defined parameter for this CAT file.");
          long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
          v35 = (_OWORD *)v15->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v16;
          v15->__r_.__value_.__l.__size_ = 0;
          v15->__r_.__value_.__r.__words[2] = 0;
          v15->__r_.__value_.__r.__words[0] = 0;
          siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 1u);
          if (SHIBYTE(v35) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v27.__r_.__value_.__l.__data_);
          }
          char v11 = 0;
        }
        else
        {
          std::string::size_type size = v31.__r_.__value_.__l.__size_;
          if (v31.__r_.__value_.__l.__size_ >= v31.__r_.__value_.__r.__words[2])
          {
            uint64_t v17 = (uint64_t)(v31.__r_.__value_.__l.__size_ - v31.__r_.__value_.__r.__words[0]) >> 4;
            unint64_t v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 60) {
              std::vector<BOOL>::__throw_length_error[abi:ne180100]();
            }
            int64_t v19 = v31.__r_.__value_.__r.__words[2] - v31.__r_.__value_.__r.__words[0];
            if ((uint64_t)(v31.__r_.__value_.__r.__words[2] - v31.__r_.__value_.__r.__words[0]) >> 3 > v18) {
              unint64_t v18 = v19 >> 3;
            }
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v20 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v18;
            }
            uint64_t v37 = &v31.__r_.__value_.__s.__data_[16];
            char v21 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v20);
            char v22 = &v21[16 * v17];
            __p[0] = v21;
            __p[1] = v22;
            std::string::size_type v36 = &v21[16 * v23];
            long long v24 = *(_OWORD *)(v10 + 7);
            *(_OWORD *)char v22 = v24;
            if (*((void *)&v24 + 1)) {
              atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v24 + 1) + 8), 1uLL, memory_order_relaxed);
            }
            v35 = v22 + 16;
            std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__swap_out_circular_buffer(&v31, __p);
            std::string::size_type v14 = v31.__r_.__value_.__l.__size_;
            std::__split_buffer<std::shared_ptr<siri::dialogengine::ChunkText>>::~__split_buffer((uint64_t)__p);
          }
          else
          {
            *(void *)v31.__r_.__value_.__l.__size_ = v10[7];
            char v13 = v10[8];
            *(void *)(size + 8) = v13;
            if (v13) {
              atomic_fetch_add_explicit(v13 + 1, 1uLL, memory_order_relaxed);
            }
            std::string::size_type v14 = size + 16;
          }
          v31.__r_.__value_.__l.__size_ = v14;
        }
        if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v28.__r_.__value_.__l.__data_);
        }
        uint64_t v25 = v10[1];
        if (v25)
        {
          do
          {
            long long v26 = (void **)v25;
            uint64_t v25 = (void *)*v25;
          }
          while (v25);
        }
        else
        {
          do
          {
            long long v26 = (void **)v10[2];
            BOOL v9 = *v26 == v10;
            BOOL v10 = v26;
          }
          while (!v9);
        }
        BOOL v10 = v26;
      }
      while (v26 != v30);
      std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v30[0]);
      if ((v11 & 1) == 0) {
        siri::dialogengine::Context::SetVariables((uint64_t)a2, (uint64_t **)&v31);
      }
    }
    __p[0] = &v31;
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    std::__tree<std::string>::destroy((uint64_t)&v32, v33[0]);
  }
}

void sub_1C5DAB748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void **__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31,char *a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  std::string __p = &a25;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&__p);
  std::__tree<std::string>::destroy((uint64_t)&a31, a32);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<std::string,siri::dialogengine::Parameter>,std::__map_value_compare<std::string,std::__value_type<std::string,siri::dialogengine::Parameter>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,siri::dialogengine::Parameter>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,siri::dialogengine::Parameter>,std::__map_value_compare<std::string,std::__value_type<std::string,siri::dialogengine::Parameter>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,siri::dialogengine::Parameter>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,siri::dialogengine::Parameter>,std::__map_value_compare<std::string,std::__value_type<std::string,siri::dialogengine::Parameter>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,siri::dialogengine::Parameter>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,siri::dialogengine::Parameter>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,siri::dialogengine::Parameter>,0>(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  *(void *)(a1 + 328) = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(a1 + 344));
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)(a1 + 264));
  siri::dialogengine::ObjectProperty::~ObjectProperty(v2);
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

void siri::dialogengine::File::PerformProfanityFiltering(siri::dialogengine::File *this, siri::dialogengine::Context *a2)
{
  if (a2)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    std::vector<siri::dialogengine::Parameter>::__init_with_size[abi:ne180100]<siri::dialogengine::Parameter*,siri::dialogengine::Parameter*>(&v13, *((void *)this + 22), *((void *)this + 23), 0xCF3CF3CF3CF3CF3DLL * ((uint64_t)(*((void *)this + 23) - *((void *)this + 22)) >> 4));
    uint64_t v3 = v13;
    for (uint64_t i = v14; v3 != i; v3 += 336)
    {
      if (*(unsigned char *)(v3 + 152))
      {
        if (*(char *)(v3 + 31) < 0)
        {
          std::string::__init_copy_ctor_external(&v10, *(const std::string::value_type **)(v3 + 8), *(void *)(v3 + 16));
        }
        else
        {
          long long v5 = *(_OWORD *)(v3 + 8);
          v10.__r_.__value_.__r.__words[2] = *(void *)(v3 + 24);
          *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
        }
        siri::dialogengine::Context::FindVariable(&v11, a2, &v10);
        if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v10.__r_.__value_.__l.__data_);
        }
        unint64_t v6 = v12;
        uint64_t v7 = v11;
        std::string::size_type v8 = v12;
        if (v12) {
          atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        siri::dialogengine::RemoveProfanity(a2, (uint64_t)&v7, &v9);
        if (*((void *)&v9 + 1)) {
          std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v9 + 1));
        }
        if (v8) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v8);
        }
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
      }
    }
    v10.__r_.__value_.__r.__words[0] = (std::string::size_type)&v13;
    std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&v10);
  }
}

void sub_1C5DABA30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,char a21)
{
  std::string __p = &a21;
  std::vector<siri::dialogengine::Parameter>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::Expand(siri::dialogengine::File *this, siri::dialogengine::Context *a2)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  *(_OWORD *)&v2.__r_.__value_.__r.__words[1] = 0uLL;
  v2.__r_.__value_.__r.__words[0] = (std::string::size_type)&v2.__r_.__value_.__l.__size_;
  siri::dialogengine::CreateJSONObjectVal();
}

void sub_1C5DABE4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,std::__shared_weak_count *a45)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a42);
  if (a45) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a45);
  }
  std::string v47 = *(std::__shared_weak_count **)(v45 - 200);
  if (v47) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v47);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::File::ExpandAsDAG(siri::dialogengine::Context *a1@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, unsigned int a4@<W3>, int a5@<W4>, void *a6@<X8>)
{
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  v65[0] = 0;
  v65[1] = 0;
  v64 = v65;
  uint64_t v11 = *(siri::dialogengine::Node **)(a2 + 224);
  if (v11)
  {
    siri::dialogengine::Node::GetGlobalId(v11, a1, &v66);
    siri::dialogengine::Group::ExpandAsDAG(*(void *)(a2 + 224), a1, a3, a4, a5);
  }
  size_t v12 = *(siri::dialogengine::Node **)(a2 + 296);
  if (v12)
  {
    siri::dialogengine::Node::GetGlobalId(v12, a1, &v66);
    siri::dialogengine::Group::ExpandAsDAG(*(void *)(a2 + 296), a1, a3, a4, a5);
  }
  long long v61 = 0;
  v62 = 0;
  unint64_t v63 = 0;
  v58 = 0;
  v59 = 0;
  unint64_t v60 = 0;
  uint64_t v55 = 0;
  std::__split_buffer<std::string>::pointer v56 = 0;
  unint64_t v57 = 0;
  uint64_t v13 = v64;
  if (v64 == v65)
  {
    a6[2] = 0;
    a6[1] = 0;
    *a6 = a6 + 1;
    goto LABEL_74;
  }
  do
  {
    uint64_t v14 = (std::__shared_weak_count *)v13[8];
    v54[0] = v13[7];
    v54[1] = v14;
    if (v14) {
      atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    siri::dialogengine::GetJSONObjectVal(v54, (const char *)a1, &v67);
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
    std::string::size_type v16 = v67.__r_.__value_.__r.__words[0];
    if ((std::string::size_type *)v67.__r_.__value_.__l.__data_ != &v67.__r_.__value_.__r.__words[1])
    {
      while (1)
      {
        uint64_t v17 = *(std::__shared_weak_count **)(v16 + 64);
        v53[0] = *(const void **)(v16 + 56);
        v53[1] = v17;
        if (v17) {
          atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        siri::dialogengine::GetJSONObjectVal(v53, v15, &v66);
        if (v17) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v17);
        }
        std::string::size_type v19 = v66.__r_.__value_.__r.__words[0];
        if ((std::string::size_type *)v66.__r_.__value_.__l.__data_ != &v66.__r_.__value_.__r.__words[1]) {
          break;
        }
LABEL_50:
        std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy((void *)v66.__r_.__value_.__l.__size_);
        std::string::size_type v36 = *(std::string **)(v16 + 8);
        if (v36)
        {
          do
          {
            uint64_t v37 = v36;
            std::string::size_type v36 = (std::string *)v36->__r_.__value_.__r.__words[0];
          }
          while (v36);
        }
        else
        {
          do
          {
            uint64_t v37 = *(std::string **)(v16 + 16);
            BOOL v25 = v37->__r_.__value_.__r.__words[0] == v16;
            std::string::size_type v16 = (std::string::size_type)v37;
          }
          while (!v25);
        }
        std::string::size_type v16 = (std::string::size_type)v37;
        if (v37 == (std::string *)&v67.__r_.__value_.__r.__words[1]) {
          goto LABEL_56;
        }
      }
      while (1)
      {
        unint64_t v20 = *(std::__shared_weak_count **)(v19 + 64);
        v49[0] = *(const void **)(v19 + 56);
        v49[1] = v20;
        if (v20) {
          atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        siri::dialogengine::GetJSONArrayVal(v49, v18, (uint64_t)&v50);
        if (v20) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v20);
        }
        int v21 = *(char *)(v16 + 55);
        if (v21 < 0)
        {
          if (*(void *)(v16 + 40) != 5) {
            goto LABEL_29;
          }
          std::string::size_type v22 = *(void *)(v16 + 32);
        }
        else
        {
          std::string::size_type v22 = v16 + 32;
          if (v21 != 5) {
            goto LABEL_29;
          }
        }
        int v23 = *(_DWORD *)v22;
        int v24 = *(unsigned __int8 *)(v22 + 4);
        BOOL v25 = v23 == 1634037875 && v24 == 107;
        if (v25)
        {
          int v30 = (long long *)(v19 + 32);
          std::string v31 = v56;
          if ((unint64_t)v56 >= v57)
          {
            long long v33 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(&v55, v30);
          }
          else
          {
            if (*(char *)(v19 + 55) < 0)
            {
              std::string::__init_copy_ctor_external(v56, *(const std::string::value_type **)(v19 + 32), *(void *)(v19 + 40));
            }
            else
            {
              long long v32 = *v30;
              v56->__r_.__value_.__r.__words[2] = *(void *)(v19 + 48);
              *(_OWORD *)&v31->__r_.__value_.__l.__data_ = v32;
            }
            long long v33 = v31 + 1;
          }
          std::__split_buffer<std::string>::pointer v56 = v33;
          int v34 = v59;
          if ((unint64_t)v59 >= v60)
          {
            uint64_t v35 = std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__push_back_slow_path<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>> const&>((uint64_t *)&v58, (void **)&v50);
          }
          else
          {
            *(void *)v59 = 0;
            *((void *)v34 + 1) = 0;
            *((void *)v34 + 2) = 0;
            std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::JSONValue>*,std::shared_ptr<siri::dialogengine::JSONValue>*>(v34, v50, v51, (v51 - v50) >> 4);
            uint64_t v35 = (uint64_t)(v34 + 24);
          }
          v59 = (char *)v35;
          goto LABEL_33;
        }
LABEL_29:
        long long v26 = v62;
        if ((unint64_t)v62 >= v63)
        {
          uint64_t v27 = std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__push_back_slow_path<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>> const&>((uint64_t *)&v61, (void **)&v50);
        }
        else
        {
          *(void *)v62 = 0;
          *((void *)v26 + 1) = 0;
          *((void *)v26 + 2) = 0;
          std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::JSONValue>*,std::shared_ptr<siri::dialogengine::JSONValue>*>(v26, v50, v51, (v51 - v50) >> 4);
          uint64_t v27 = (uint64_t)(v26 + 24);
        }
        v62 = (char *)v27;
LABEL_33:
        std::string v48 = &v50;
        std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v48);
        std::string v28 = *(std::string **)(v19 + 8);
        if (v28)
        {
          do
          {
            uint64_t v29 = v28;
            std::string v28 = (std::string *)v28->__r_.__value_.__r.__words[0];
          }
          while (v28);
        }
        else
        {
          do
          {
            uint64_t v29 = *(std::string **)(v19 + 16);
            BOOL v25 = v29->__r_.__value_.__r.__words[0] == v19;
            std::string::size_type v19 = (std::string::size_type)v29;
          }
          while (!v25);
        }
        std::string::size_type v19 = (std::string::size_type)v29;
        if (v29 == (std::string *)&v66.__r_.__value_.__r.__words[1]) {
          goto LABEL_50;
        }
      }
    }
LABEL_56:
    std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy((void *)v67.__r_.__value_.__l.__size_);
    long long v38 = v13[1];
    if (v38)
    {
      do
      {
        uint64_t v39 = (void **)v38;
        long long v38 = (void *)*v38;
      }
      while (v38);
    }
    else
    {
      do
      {
        uint64_t v39 = (void **)v13[2];
        BOOL v25 = *v39 == v13;
        uint64_t v13 = v39;
      }
      while (!v25);
    }
    uint64_t v13 = v39;
  }
  while (v39 != v65);
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  a6[1] = 0;
  a6[2] = 0;
  *a6 = a6 + 1;
  if (v40 != (std::string *)v41)
  {
    std::string v50 = 0;
    v51 = 0;
    uint64_t v52 = 0;
    long long v42 = *v61;
    if (v61[1] != *v61)
    {
      std::string::basic_string[abi:ne180100]<0>(&v67, "print");
      long long v43 = *v42;
      long long v68 = v43;
      if (*((void *)&v43 + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v43 + 1) + 8), 1uLL, memory_order_relaxed);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((v59 - v58) >> 3) && (uint64_t)(*((void *)v58 + 1) - *(void *)v58) >> 4)
      {
        long long v44 = *(_OWORD *)*(void *)v58;
        long long v47 = v44;
        if (*((void *)&v44 + 1)) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v44 + 1) + 8), 1uLL, memory_order_relaxed);
        }
        std::string::basic_string[abi:ne180100]<0>(v69, "speak");
        long long v70 = v47;
        long long v47 = 0uLL;
        std::map<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>::map[abi:ne180100]((uint64_t)&v48, (const void **)&v67.__r_.__value_.__l.__data_, 2);
        siri::dialogengine::CreateJSONObjectVal();
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      siri::dialogengine::CreateJSONStringVal();
    }
    siri::dialogengine::CreateJSONArrayVal();
  }
LABEL_74:
  v67.__r_.__value_.__r.__words[0] = (std::string::size_type)&v55;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v67);
  v67.__r_.__value_.__r.__words[0] = (std::string::size_type)&v58;
  std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v67);
  v67.__r_.__value_.__r.__words[0] = (std::string::size_type)&v61;
  std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v67);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v65[0]);
}

void sub_1C5DAC78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,char a38,std::__shared_weak_count *a39,uint64_t a40,uint64_t a41,char a42,void *a43,uint64_t a44,uint64_t a45,void *a46)
{
  if (a39) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a39);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a43);
  if (*(char *)(v46 - 217) < 0) {
    operator delete(*(void **)(v46 - 240));
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a46);
  _Unwind_Resume(a1);
}

char *std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::JSONValue>*,std::shared_ptr<siri::dialogengine::JSONValue>*>(char *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    double result = std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__vallocate[abi:ne180100](result, a4);
    for (uint64_t i = (void *)*((void *)v6 + 1); a2 != a3; a2 += 2)
    {
      *uint64_t i = *a2;
      uint64_t v8 = a2[1];
      i[1] = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      }
      i += 2;
    }
    *((void *)v6 + 1) = i;
  }
  return result;
}

void sub_1C5DACA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__push_back_slow_path<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>> const&>(uint64_t *a1, void **a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0xAAAAAAAAAAAAAAALL) {
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v3;
  }
  unint64_t v20 = a1 + 2;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    uint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v2];
  uint64_t v17 = v7;
  v18.i64[0] = (uint64_t)v8;
  v18.i64[1] = (uint64_t)v8;
  std::string::size_type v19 = &v7[24 * v6];
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)uint64_t v8 = 0;
  std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::JSONValue>*,std::shared_ptr<siri::dialogengine::JSONValue>*>(v8, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  uint64_t v9 = v18.i64[0];
  uint64_t v10 = v18.i64[1] + 24;
  v18.i64[1] += 24;
  size_t v12 = (void *)*a1;
  uint64_t v11 = (void *)a1[1];
  if (v11 == (void *)*a1)
  {
    int64x2_t v14 = vdupq_n_s64((unint64_t)v11);
  }
  else
  {
    do
    {
      *(void *)(v9 - 24) = 0;
      *(void *)(v9 - 16) = 0;
      v9 -= 24;
      *(void *)(v9 + 16) = 0;
      long long v13 = *(_OWORD *)(v11 - 3);
      v11 -= 3;
      *(_OWORD *)uint64_t v9 = v13;
      *(void *)(v9 + 16) = v11[2];
      *uint64_t v11 = 0;
      v11[1] = 0;
      uint64_t v11[2] = 0;
    }
    while (v11 != v12);
    int64x2_t v14 = *(int64x2_t *)a1;
    uint64_t v10 = v18.i64[1];
  }
  *a1 = v9;
  a1[1] = v10;
  int64x2_t v18 = v14;
  uint64_t v15 = (char *)a1[2];
  a1[2] = (uint64_t)v19;
  std::string::size_type v19 = v15;
  uint64_t v17 = (char *)v14.i64[0];
  std::__split_buffer<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::~__split_buffer((uint64_t)&v17);
  return v10;
}

void sub_1C5DACBD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        unint64_t v6 = v4;
        std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v6);
      }
      while (v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__split_buffer<std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    unint64_t v6 = v4;
    std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](&v6);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t siri::dialogengine::File::SetMaxLineNumber(uint64_t this, unint64_t a2)
{
  unint64_t v2 = *(void *)(this + 664);
  if (v2 <= a2) {
    unint64_t v2 = a2;
  }
  *(void *)(this + 664) = v2;
  return this;
}

uint64_t siri::dialogengine::File::GetMaxLineNumber(siri::dialogengine::File *this)
{
  return *((void *)this + 83);
}

void siri::dialogengine::File::Execute(siri::dialogengine::File *this@<X0>, const void ***a2@<X1>, uint64_t *a3@<X8>)
{
  siri::dialogengine::File::IgnoreVariablesWithoutParameter(this, a2);
  siri::dialogengine::File::PerformProfanityFiltering(this, (siri::dialogengine::Context *)a2);
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)&v29, (const siri::dialogengine::RequestInfo *)(a2 + 1));
  int v6 = v29;
  siri::dialogengine::RequestInfo::~RequestInfo((void **)&v29);
  if (v6 == 1)
  {
    uint64_t v25 = *((void *)this + 32);
    if (!v25) {
      return;
    }
    (*(void (**)(long long *__return_ptr))(*(void *)v25 + 40))(&v29);
    std::vector<std::shared_ptr<siri::dialogengine::Node>>::__vdeallocate(a3);
    *(_OWORD *)a3 = v29;
    a3[2] = (uint64_t)v30;
    int v30 = 0;
    long long v29 = 0uLL;
    uint64_t v27 = (void **)&v29;
    int v24 = &v27;
    goto LABEL_31;
  }
  if (!v6)
  {
    uint64_t v8 = *((void *)this + 28);
    if (v8)
    {
      (*(void (**)(long long *__return_ptr))(*(void *)v8 + 40))(&v29);
      std::vector<std::shared_ptr<siri::dialogengine::Node>>::__vdeallocate(a3);
      *(_OWORD *)a3 = v29;
      a3[2] = (uint64_t)v30;
      int v30 = 0;
      long long v29 = 0uLL;
      uint64_t v27 = (void **)&v29;
      std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&v27);
    }
    if (*a3 == a3[1] && *((void *)this + 37))
    {
      siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"No selectable dialog found. Trying fallback.", v7);
      (*(void (**)(long long *__return_ptr))(**((void **)this + 37) + 40))(&v29);
      std::vector<std::shared_ptr<siri::dialogengine::Node>>::__vdeallocate(a3);
      *(_OWORD *)a3 = v29;
      a3[2] = (uint64_t)v30;
      int v30 = 0;
      long long v29 = 0uLL;
      uint64_t v27 = (void **)&v29;
      std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&v27);
    }
    uint64_t v9 = *((void *)this + 30);
    if (v9)
    {
      (*(void (**)(void ***__return_ptr))(*(void *)v9 + 40))(&v27);
      uint64_t v10 = v27;
      for (uint64_t i = v28; v10 != i; v10 += 2)
      {
        long long v12 = *(_OWORD *)v10;
        long long v13 = (std::__shared_weak_count *)v10[1];
        if (v13)
        {
          atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
          int64x2_t v14 = (_OWORD *)a3[1];
          unint64_t v15 = a3[2];
          if ((unint64_t)v14 >= v15) {
            goto LABEL_16;
          }
          _OWORD *v14 = v12;
          atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        else
        {
          int64x2_t v14 = (_OWORD *)a3[1];
          unint64_t v15 = a3[2];
          if ((unint64_t)v14 >= v15)
          {
LABEL_16:
            long long v26 = v12;
            uint64_t v17 = ((uint64_t)v14 - *a3) >> 4;
            unint64_t v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 60) {
              std::vector<BOOL>::__throw_length_error[abi:ne180100]();
            }
            uint64_t v19 = v15 - *a3;
            if (v19 >> 3 > v18) {
              unint64_t v18 = v19 >> 3;
            }
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFF0) {
              unint64_t v20 = 0xFFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v18;
            }
            long long v32 = a3 + 2;
            int v21 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v20);
            std::string::size_type v22 = &v21[16 * v17];
            *(void *)&long long v29 = v21;
            *((void *)&v29 + 1) = v22;
            std::string v31 = &v21[16 * v23];
            *(_OWORD *)std::string::size_type v22 = v26;
            if (v13) {
              atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            int v30 = v22 + 16;
            std::vector<std::shared_ptr<siri::dialogengine::ChunkText>>::__swap_out_circular_buffer(a3, &v29);
            std::string::size_type v16 = (_OWORD *)a3[1];
            std::__split_buffer<std::shared_ptr<siri::dialogengine::ChunkText>>::~__split_buffer((uint64_t)&v29);
            goto LABEL_25;
          }
          _OWORD *v14 = v12;
        }
        std::string::size_type v16 = v14 + 1;
        a3[1] = (uint64_t)(v14 + 1);
LABEL_25:
        a3[1] = (uint64_t)v16;
        if (v13) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v13);
        }
      }
      *(void *)&long long v29 = &v27;
      int v24 = (void ***)&v29;
LABEL_31:
      std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](v24);
    }
  }
}

void sub_1C5DAD018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void std::vector<std::shared_ptr<siri::dialogengine::Node>>::__vdeallocate(uint64_t *a1)
{
  if (*a1)
  {
    std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__clear[abi:ne180100](a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t siri::dialogengine::File::SetCheckSnippetDialogIds(uint64_t this, char a2)
{
  *(unsigned char *)(this + 672) = a2;
  return this;
}

void siri::dialogengine::File::SetSourceLocaleDialogIds(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + 712);
  if (*(unsigned __int8 *)(a1 + 736) == *(unsigned __int8 *)(a2 + 24))
  {
    if (v3 != (uint64_t *)a2 && *(unsigned char *)(a1 + 736))
    {
      long long v5 = (void *)(a2 + 8);
      uint64_t v4 = *(const void ***)a2;
      std::__tree<std::string>::__assign_multi<std::__tree_const_iterator<std::string,std::__tree_node<std::string,void *> *,long>>(v3, v4, v5);
    }
  }
  else if (*(unsigned char *)(a1 + 736))
  {
    std::__tree<std::string>::destroy((uint64_t)v3, *(char **)(a1 + 720));
    *(unsigned char *)(a1 + 736) = 0;
  }
  else
  {
    std::set<std::string>::set[abi:ne180100](v3, (const void ***)a2);
    *(unsigned char *)(a1 + 736) = 1;
  }
}

uint64_t siri::dialogengine::File::operator==(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 127);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 127);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 112);
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 127);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 112);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v8 = (const void **)(a1 + 104);
  if (v5 >= 0) {
    uint64_t v9 = (unsigned __int8 *)(a2 + 104);
  }
  else {
    uint64_t v9 = *(unsigned __int8 **)(a2 + 104);
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*v8, v9, *(void *)(a1 + 112))) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a1 + 127))
  {
    while (*(unsigned __int8 *)v8 == *v9)
    {
      uint64_t v8 = (const void **)((char *)v8 + 1);
      ++v9;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  uint64_t v10 = *(unsigned __int8 *)(a1 + 151);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = *(unsigned __int8 *)(a1 + 151);
  }
  else {
    uint64_t v11 = *(void *)(a1 + 136);
  }
  uint64_t v12 = *(unsigned __int8 *)(a2 + 151);
  int v13 = (char)v12;
  if ((v12 & 0x80u) != 0) {
    uint64_t v12 = *(void *)(a2 + 136);
  }
  if (v11 != v12) {
    return 0;
  }
  int64x2_t v14 = (const void **)(a1 + 128);
  if (v13 >= 0) {
    unint64_t v15 = (unsigned __int8 *)(a2 + 128);
  }
  else {
    unint64_t v15 = *(unsigned __int8 **)(a2 + 128);
  }
  if ((v10 & 0x80) != 0)
  {
    if (memcmp(*v14, v15, *(void *)(a1 + 136))) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a1 + 151))
  {
    while (*(unsigned __int8 *)v14 == *v15)
    {
      int64x2_t v14 = (const void **)((char *)v14 + 1);
      ++v15;
      if (!--v10) {
        goto LABEL_31;
      }
    }
    return 0;
  }
LABEL_31:
  uint64_t v16 = *(void *)(a1 + 176);
  uint64_t v17 = *(void *)(a1 + 184);
  if (v17 - v16 == *(void *)(a2 + 184) - *(void *)(a2 + 176))
  {
    if (v17 != v16)
    {
      uint64_t v18 = 0;
      unint64_t v19 = 0;
      while (1)
      {
        uint64_t v20 = v16 + v18;
        uint64_t v21 = v16 + v18 + 8;
        if (*(char *)(v20 + 31) < 0)
        {
          std::string::__init_copy_ctor_external(&v73, *(const std::string::value_type **)v21, *(void *)(v20 + 16));
        }
        else
        {
          long long v22 = *(_OWORD *)v21;
          v73.__r_.__value_.__r.__words[2] = *(void *)(v21 + 16);
          *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v22;
        }
        uint64_t Parameter = siri::dialogengine::File::GetParameter(a2, (unsigned __int8 **)&v73);
        if (!Parameter
          || ((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)Parameter + 16))(Parameter, *(void *)(a1 + 176) + v18) & 1) == 0)
        {
          break;
        }
        if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v73.__r_.__value_.__l.__data_);
        }
        ++v19;
        uint64_t v16 = *(void *)(a1 + 176);
        v18 += 336;
        if (v19 >= 0xCF3CF3CF3CF3CF3DLL * ((*(void *)(a1 + 184) - v16) >> 4)) {
          goto LABEL_42;
        }
      }
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
      return 0;
    }
LABEL_42:
    if (*(void *)(a1 + 216) == *(void *)(a2 + 216))
    {
      int v24 = *(const void ***)(a1 + 200);
      if (v24 != (const void **)(a1 + 208))
      {
        do
        {
          uint64_t v25 = std::__tree<std::string>::find<std::string>(a2 + 200, v24 + 4);
          if (a2 + 208 == v25 || v24[9] != *(const void **)(v25 + 72)) {
            return 0;
          }
          long long v26 = (const void **)v24[7];
          if (v26 != v24 + 8)
          {
            uint64_t v27 = *(void **)(v25 + 56);
            do
            {
              uint64_t v28 = *((unsigned __int8 *)v26 + 55);
              if ((v28 & 0x80u) == 0) {
                long long v29 = (const void *)*((unsigned __int8 *)v26 + 55);
              }
              else {
                long long v29 = v26[5];
              }
              int v30 = (const void *)*((unsigned __int8 *)v27 + 55);
              int v31 = (char)v30;
              if ((char)v30 < 0) {
                int v30 = (const void *)v27[5];
              }
              if (v29 != v30) {
                return 0;
              }
              long long v32 = v26 + 4;
              if (v31 >= 0) {
                long long v33 = (unsigned __int8 *)(v27 + 4);
              }
              else {
                long long v33 = (unsigned __int8 *)v27[4];
              }
              if ((v28 & 0x80) != 0)
              {
                if (memcmp(*v32, v33, (size_t)v26[5])) {
                  return 0;
                }
              }
              else if (*((unsigned char *)v26 + 55))
              {
                uint64_t v34 = v28 - 1;
                do
                {
                  int v36 = *(unsigned __int8 *)v32;
                  long long v32 = (const void **)((char *)v32 + 1);
                  int v35 = v36;
                  int v38 = *v33++;
                  int v37 = v38;
                  BOOL v40 = v34-- != 0;
                }
                while (v35 == v37 && v40);
                if (v35 != v37) {
                  return 0;
                }
              }
              uint64_t v41 = (const void **)v26[1];
              if (v41)
              {
                do
                {
                  long long v42 = v41;
                  uint64_t v41 = (const void **)*v41;
                }
                while (v41);
              }
              else
              {
                do
                {
                  long long v42 = (const void **)v26[2];
                  BOOL v43 = *v42 == v26;
                  long long v26 = v42;
                }
                while (!v43);
              }
              long long v44 = (void *)v27[1];
              if (v44)
              {
                do
                {
                  uint64_t v45 = v44;
                  long long v44 = (void *)*v44;
                }
                while (v44);
              }
              else
              {
                do
                {
                  uint64_t v45 = (void *)v27[2];
                  BOOL v43 = *v45 == (void)v27;
                  uint64_t v27 = v45;
                }
                while (!v43);
              }
              uint64_t v27 = v45;
              long long v26 = v42;
            }
            while (v42 != v24 + 8);
          }
          uint64_t v46 = (const void **)v24[1];
          if (v46)
          {
            do
            {
              long long v47 = (const void ***)v46;
              uint64_t v46 = (const void **)*v46;
            }
            while (v46);
          }
          else
          {
            do
            {
              long long v47 = (const void ***)v24[2];
              BOOL v43 = *v47 == v24;
              int v24 = (const void **)v47;
            }
            while (!v43);
          }
          int v24 = (const void **)v47;
        }
        while (v47 != (const void ***)(a1 + 208));
      }
      uint64_t v48 = *(void *)(a1 + 224);
      uint64_t v49 = *(void *)(a2 + 224);
      if ((v48 != 0) != (v49 == 0) && (!v48 || !v49 || siri::dialogengine::Group::operator==(v48, v49)))
      {
        std::map<std::string,std::shared_ptr<siri::dialogengine::Condition>>::map[abi:ne180100]((uint64_t)&v73, (const void ***)(a1 + 272));
        std::map<std::string,std::shared_ptr<siri::dialogengine::Condition>>::map[abi:ne180100]((uint64_t)v70, (const void ***)(a2 + 272));
        if (v73.__r_.__value_.__r.__words[2] == v72)
        {
          std::string v50 = *(void **)(a1 + 272);
          if (v50 == (void *)(a1 + 280))
          {
LABEL_110:
            uint64_t v57 = *(void *)(a1 + 296);
            uint64_t v58 = *(void *)(a2 + 296);
            if ((v57 != 0) != (v58 == 0) && (!v57 || !v58 || siri::dialogengine::Group::operator==(v57, v58)))
            {
              siri::dialogengine::GroupPhrases::GetPhrases((siri::dialogengine::GroupPhrases *)(a1 + 312), &v69);
              siri::dialogengine::GroupPhrases::GetPhrases((siri::dialogengine::GroupPhrases *)(a2 + 312), v68);
              std::string::size_type size = v69.__r_.__value_.__l.__size_;
              unint64_t v60 = (uint64_t *)v69.__r_.__value_.__r.__words[0];
              if (v69.__r_.__value_.__l.__size_ - v69.__r_.__value_.__r.__words[0] != (char *)v68[1] - (char *)v68[0]) {
                goto LABEL_136;
              }
              while (v60 != (uint64_t *)size)
              {
                uint64_t v61 = *v60;
                if (*(char *)(*v60 + 255) < 0) {
                  std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v61 + 232), *(void *)(v61 + 240));
                }
                else {
                  std::string __p = *(std::string *)(v61 + 232);
                }
                Phrase = siri::dialogengine::GroupPhrases::GetPhrase(a2 + 312, (unsigned __int8 *)&__p);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__p.__r_.__value_.__l.__data_);
                }
                if (!Phrase || !siri::dialogengine::Group::operator==(*v60, (uint64_t)Phrase)) {
                  goto LABEL_136;
                }
                v60 += 2;
              }
              uint64_t v65 = *(void *)(a1 + 240);
              uint64_t v66 = *(void *)(a2 + 240);
              if ((v65 != 0) == (v66 == 0)
                || v65 && v66 && ((*(uint64_t (**)(uint64_t))(*(void *)v65 + 64))(v65) & 1) != 0)
              {
LABEL_136:
                uint64_t v63 = 0;
              }
              else
              {
                uint64_t v63 = 1;
              }
              __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v68;
              std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
              v68[0] = (void **)&v69;
              std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](v68);
              goto LABEL_131;
            }
          }
          else
          {
            while (1)
            {
              uint64_t v51 = v50[7];
              if (*(char *)(v51 + 119) < 0) {
                std::string::__init_copy_ctor_external(&v69, *(const std::string::value_type **)(v51 + 96), *(void *)(v51 + 104));
              }
              else {
                std::string v69 = *(std::string *)(v51 + 96);
              }
              uint64_t v52 = std::__tree<std::string>::find<std::string>(a2 + 272, (const void **)&v69.__r_.__value_.__l.__data_);
              if (a2 + 280 == v52)
              {
                uint64_t v54 = 0;
                std::string::size_type v53 = 0;
              }
              else
              {
                uint64_t v54 = *(void *)(v52 + 56);
                std::string::size_type v53 = *(std::__shared_weak_count **)(v52 + 64);
                if (v53) {
                  atomic_fetch_add_explicit(&v53->__shared_owners_, 1uLL, memory_order_relaxed);
                }
              }
              if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v69.__r_.__value_.__l.__data_);
              }
              if (v54 && (siri::dialogengine::Condition::operator==(v50[7], v54) & 1) == 0) {
                break;
              }
              if (v53) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v53);
              }
              uint64_t v55 = (void *)v50[1];
              if (v55)
              {
                do
                {
                  std::__split_buffer<std::string>::pointer v56 = v55;
                  uint64_t v55 = (void *)*v55;
                }
                while (v55);
              }
              else
              {
                do
                {
                  std::__split_buffer<std::string>::pointer v56 = (void *)v50[2];
                  BOOL v43 = *v56 == (void)v50;
                  std::string v50 = v56;
                }
                while (!v43);
              }
              std::string v50 = v56;
              if (v56 == (void *)(a1 + 280)) {
                goto LABEL_110;
              }
            }
            if (v53) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v53);
            }
          }
        }
        uint64_t v63 = 0;
LABEL_131:
        std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v71);
        std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy((void *)v73.__r_.__value_.__l.__size_);
        return v63;
      }
    }
  }
  return 0;
}

void sub_1C5DAD7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char **__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char *a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,void *a24,void *a25,int a26,__int16 a27,char a28,char a29)
{
  std::string __p = &a15;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  a15 = &a18;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a15);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a22);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a25);
  _Unwind_Resume(a1);
}

uint64_t std::map<std::string,std::shared_ptr<siri::dialogengine::Condition>>::map[abi:ne180100](uint64_t a1, const void ***a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = (uint64_t **)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v4 = a2 + 1;
  int v5 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    while (1)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (*(uint64_t ***)a1 == v3) {
        break;
      }
      uint64_t v7 = v3;
      if (v6)
      {
        do
        {
          uint64_t v8 = v6;
          uint64_t v6 = *(void *)(v6 + 8);
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v8 = (uint64_t)v7[2];
          BOOL v9 = *(void *)v8 == (void)v7;
          uint64_t v7 = (uint64_t **)v8;
        }
        while (v9);
      }
      if (std::less<std::string>::operator()[abi:ne180100](a1 + 16, (const void **)(v8 + 32), v5 + 4))
      {
        if (!*v3) {
          goto LABEL_9;
        }
LABEL_11:
        uint64_t v20 = (void *)v8;
        uint64_t v10 = (uint64_t **)(v8 + 8);
        goto LABEL_13;
      }
      uint64_t v10 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>(a1, &v20, v5 + 4);
LABEL_13:
      if (!*v10) {
        goto LABEL_14;
      }
LABEL_20:
      unint64_t v15 = (const void **)v5[1];
      if (v15)
      {
        do
        {
          uint64_t v16 = (const void ***)v15;
          unint64_t v15 = (const void **)*v15;
        }
        while (v15);
      }
      else
      {
        do
        {
          uint64_t v16 = (const void ***)v5[2];
          BOOL v9 = *v16 == v5;
          int v5 = (const void **)v16;
        }
        while (!v9);
      }
      int v5 = (const void **)v16;
      if (v16 == v4) {
        return a1;
      }
    }
    uint64_t v8 = (uint64_t)v3;
    if (!v6)
    {
LABEL_9:
      uint64_t v20 = v3;
      uint64_t v10 = v3;
LABEL_14:
      uint64_t v11 = (uint64_t *)operator new(0x48uLL);
      v18[0] = v11;
      v18[1] = v3;
      char v19 = 0;
      uint64_t v12 = (std::string *)(v11 + 4);
      if (*((char *)v5 + 55) < 0)
      {
        std::string::__init_copy_ctor_external(v12, (const std::string::value_type *)v5[4], (std::string::size_type)v5[5]);
      }
      else
      {
        long long v13 = *((_OWORD *)v5 + 2);
        v11[6] = (uint64_t)v5[6];
        *(_OWORD *)&v12->__r_.__value_.__l.__data_ = v13;
      }
      v11[7] = (uint64_t)v5[7];
      uint64_t v14 = (uint64_t)v5[8];
      v11[8] = v14;
      if (v14) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
      }
      char v19 = 1;
      std::__tree<std::string>::__insert_node_at((uint64_t **)a1, (uint64_t)v20, v10, v11);
      v18[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)v18);
      goto LABEL_20;
    }
    goto LABEL_11;
  }
  return a1;
}

void sub_1C5DADA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*v9);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::File::operator!=(uint64_t a1, uint64_t a2)
{
  return siri::dialogengine::File::operator==(a1, a2) ^ 1;
}

void siri::dialogengine::ParsePatternBinaryFile(long long **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  siri::dialogengine::FindPatternFile(a1, a2, (uint64_t)v6);
  if (siri::dialogengine::FileExists((uint64_t *)v6))
  {
    siri::dialogengine::ParsePatternBinaryFile(a3);
  }
  else
  {
    std::operator+<char>();
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
    if (v5 < 0) {
      operator delete(__p);
    }
    *a3 = 0;
    a3[1] = 0;
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
}

void sub_1C5DADADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::ParsePatternBinaryFile(void *a1@<X8>)
{
  siri::dialogengine::ParseGzippedFile();
  unint64_t v2 = v12;
  unsigned __int8 v3 = v12;
  if ((v12 & 0x80u) != 0) {
    unint64_t v2 = (unint64_t)__p[1];
  }
  if (!v2)
  {
    *a1 = 0;
    a1[1] = 0;
    if ((v3 & 0x80) == 0) {
      return;
    }
    goto LABEL_20;
  }
  siri::dialogengine::PatternBinary::Pattern::Pattern((siri::dialogengine::PatternBinary::Pattern *)v9);
  if (google::protobuf::MessageLite::ParseFromString(v9, __p))
  {
    uint64_t v4 = (int *)v10;
    int v5 = *((char *)v10 + 23);
    if (v5 < 0)
    {
      if (v10[1] != 5) {
        goto LABEL_17;
      }
      uint64_t v4 = (int *)*v10;
    }
    else if (v5 != 5)
    {
      goto LABEL_17;
    }
    int v6 = *v4;
    int v7 = *((unsigned __int8 *)v4 + 4);
    if (v6 == 1347699024 && v7 == 66) {
      operator new();
    }
  }
LABEL_17:
  std::operator+<char>();
  siri::dialogengine::Log::LogWithLevel((uint64_t)&v13, 3u);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  *a1 = 0;
  a1[1] = 0;
  siri::dialogengine::PatternBinary::Pattern::~Pattern((siri::dialogengine::PatternBinary::Pattern *)v9);
  if ((v12 & 0x80) != 0) {
LABEL_20:
  }
    operator delete(__p[0]);
}

void sub_1C5DADFBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::PatternGroup *,std::shared_ptr<siri::dialogengine::PatternGroup>::__shared_ptr_default_delete<siri::dialogengine::PatternGroup,siri::dialogengine::PatternGroup>,std::allocator<siri::dialogengine::PatternGroup>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::PatternGroup *,std::shared_ptr<siri::dialogengine::PatternGroup>::__shared_ptr_default_delete<siri::dialogengine::PatternGroup,siri::dialogengine::PatternGroup>,std::allocator<siri::dialogengine::PatternGroup>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::PatternGroup *,std::shared_ptr<siri::dialogengine::PatternGroup>::__shared_ptr_default_delete<siri::dialogengine::PatternGroup,siri::dialogengine::PatternGroup>,std::allocator<siri::dialogengine::PatternGroup>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void siri::dialogengine::PatternGroup::~PatternGroup(void **this)
{
  siri::dialogengine::PatternGroup::~PatternGroup(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t vars8;

  *this = &unk_1F211EA78;
  if (*((char *)this + 207) < 0) {
    operator delete(this[23]);
  }
  if (*((char *)this + 183) < 0) {
    operator delete(this[20]);
  }
  if (*((char *)this + 159) < 0) {
    operator delete(this[17]);
  }
  if (*((char *)this + 135) < 0) {
    operator delete(this[14]);
  }
  if (*((char *)this + 111) < 0) {
    operator delete(this[11]);
  }
  if (*((char *)this + 87) < 0) {
    operator delete(this[8]);
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(this);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::PatternFile *,std::shared_ptr<siri::dialogengine::PatternFile>::__shared_ptr_default_delete<siri::dialogengine::PatternFile,siri::dialogengine::PatternFile>,std::allocator<siri::dialogengine::PatternFile>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::PatternFile *,std::shared_ptr<siri::dialogengine::PatternFile>::__shared_ptr_default_delete<siri::dialogengine::PatternFile,siri::dialogengine::PatternFile>,std::allocator<siri::dialogengine::PatternFile>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::PatternFile *,std::shared_ptr<siri::dialogengine::PatternFile>::__shared_ptr_default_delete<siri::dialogengine::PatternFile,siri::dialogengine::PatternFile>,std::allocator<siri::dialogengine::PatternFile>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void siri::dialogengine::GetRequestTimeStamp(siri::dialogengine *this@<X0>, siri::dialogengine::Context *a2@<X1>, void *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "utcOffsetSecs");
  OptionalNumberuint64_t Parameter = (double *)siri::dialogengine::GetOptionalNumberParameter((const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "secs");
  RequiredNumberuint64_t Parameter = (double *)siri::dialogengine::GetRequiredNumberParameter((const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "timeZone");
  OptionalStringuint64_t Parameter = (char *)siri::dialogengine::GetOptionalStringParameter((const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (RequiredNumberParameter)
    {
LABEL_7:
      uint64_t v10 = (uint64_t)RequiredNumberParameter[9];
      if (OptionalNumberParameter) {
        goto LABEL_8;
      }
LABEL_12:
      if (!OptionalStringParameter)
      {
        siri::dialogengine::Context::GetCurrentTimeZone(this, &v12);
        int v11 = 0;
LABEL_18:
        std::string __p = v12;
        goto LABEL_19;
      }
      int v11 = 0;
LABEL_14:
      if (OptionalStringParameter[95] < 0) {
        std::string::__init_copy_ctor_external(&v12, *((const std::string::value_type **)OptionalStringParameter + 9), *((void *)OptionalStringParameter + 10));
      }
      else {
        std::string v12 = *(std::string *)(OptionalStringParameter + 3);
      }
      goto LABEL_18;
    }
  }
  else if (RequiredNumberParameter)
  {
    goto LABEL_7;
  }
  uint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
  if (!OptionalNumberParameter) {
    goto LABEL_12;
  }
LABEL_8:
  int v11 = (int)OptionalNumberParameter[9];
  memset(&__p, 0, sizeof(__p));
  if (OptionalStringParameter) {
    goto LABEL_14;
  }
LABEL_19:
  siri::dialogengine::GetICUTimeStamp(v10, v11, (uint64_t)&__p, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DAE4D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

void siri::dialogengine::GetNowTimeStamp(siri::dialogengine *this@<X0>, siri::dialogengine::Context *a2@<X1>, void *a3@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "utcOffsetSecs");
  OptionalNumberuint64_t Parameter = (double *)siri::dialogengine::GetOptionalNumberParameter((const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::basic_string[abi:ne180100]<0>(&__p, "timeZone");
  OptionalStringuint64_t Parameter = (char *)siri::dialogengine::GetOptionalStringParameter((const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  double CurrentTime = siri::dialogengine::Context::GetCurrentTime(this);
  if (!OptionalNumberParameter)
  {
    if (!OptionalStringParameter)
    {
      siri::dialogengine::Context::GetCurrentTimeZone(this, &v11);
      int v10 = 0;
LABEL_14:
      std::string __p = v11;
      goto LABEL_15;
    }
    int v10 = 0;
LABEL_10:
    if (OptionalStringParameter[95] < 0) {
      std::string::__init_copy_ctor_external(&v11, *((const std::string::value_type **)OptionalStringParameter + 9), *((void *)OptionalStringParameter + 10));
    }
    else {
      std::string v11 = *(std::string *)(OptionalStringParameter + 3);
    }
    goto LABEL_14;
  }
  int v10 = (int)OptionalNumberParameter[9];
  memset(&__p, 0, sizeof(__p));
  if (OptionalStringParameter) {
    goto LABEL_10;
  }
LABEL_15:
  siri::dialogengine::GetICUTimeStamp((uint64_t)CurrentTime, v10, (uint64_t)&__p, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DAE64C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
}

void siri::dialogengine::GetNonSpecificDateTimePeriodSpeakableString(siri::dialogengine *a1, siri::dialogengine::Context *a2)
{
  v3[69] = *(void **)MEMORY[0x1E4F143B8];
  siri::dialogengine::GetRequestTimeStamp(a1, a2, v3);
  if ((siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)v3, 7) & 1) == 0) {
    siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)v3, 8);
  }
  if ((siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)v3, 6) & 1) == 0) {
    siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)v3, 5);
  }
  siri::dialogengine::GetUCalendarFieldValue<(UCalendarDateFields)11>(v3);
  siri::dialogengine::GetUCalendarFieldValue<(UCalendarDateFields)12>(v3);
  siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)1);
}

void sub_1C5DAEA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *__p,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
  if (a51 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a37);
  if (a45 < 0) {
    operator delete(a40);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetNonSpecificTimePeriodSpeakableString(siri::dialogengine::Context *a1, char *a2)
{
  v8[68] = *(void **)MEMORY[0x1E4F143B8];
  siri::dialogengine::Context::GetLocaleWithUserCalendar(a1, a2, (uint64_t)v8);
  siri::dialogengine::GetRequestTimeStamp(a1, (siri::dialogengine::Context *)a2, &v7);
  siri::dialogengine::GetNowTimeStamp(a1, (siri::dialogengine::Context *)a2, &v6);
  int ICUDifferenceInDays = siri::dialogengine::GetICUDifferenceInDays((siri::dialogengine *)&v6, (const siri::dialogengine::TimeStamp *)&v7, v4);
  if ((siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)&v7, 7) & 1) == 0) {
    siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)&v7, 8);
  }
  if ((siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)&v7, 6) & 1) == 0) {
    siri::dialogengine::IsContainedByDateTimeConstant(a1, (char *)&v7, 5);
  }
  siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)(ICUDifferenceInDays == 0));
}

void sub_1C5DAF0E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,void *a52,uint64_t a53,int a54,__int16 a55,char a56,char a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (a63 < 0) {
    operator delete(__p);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a36);
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a57 < 0) {
    operator delete(a52);
  }
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::ShouldUse24HrDisplay(siri::dialogengine *this, siri::dialogengine::Context *a2)
{
  if (!this) {
    return 0;
  }
  siri::dialogengine::Context::GetDeviceLocale(this, __p);
  uint64_t IsICU24HourDisplay = siri::dialogengine::IsICU24HourDisplay();
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)__p, (siri::dialogengine *)((char *)this + 8));
  std::string::basic_string[abi:ne180100]<0>(v12, "user24HourTimeOverride");
  siri::dialogengine::RequestInfo::GetUserSetting((uint64_t)__p, (const void **)v12, &v15);
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  siri::dialogengine::RequestInfo::~RequestInfo((void **)&__p[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    if (v15.__r_.__value_.__l.__size_ == 4)
    {
      if (*(_DWORD *)v15.__r_.__value_.__l.__data_ == 1919431730)
      {
        uint64_t IsICU24HourDisplay = 1;
      }
      else
      {
        unsigned int v4 = bswap32(*(_DWORD *)v15.__r_.__value_.__l.__data_);
        BOOL v5 = v4 >= 0x31326872;
        int v6 = v4 > 0x31326872;
        int v7 = !v5;
        if (v6 == v7) {
          uint64_t IsICU24HourDisplay = 0;
        }
        else {
          uint64_t IsICU24HourDisplay = IsICU24HourDisplay;
        }
      }
    }
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  else if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) == 4)
  {
    if (LODWORD(v15.__r_.__value_.__l.__data_) == 1919431730)
    {
      return 1;
    }
    else
    {
      unsigned int v8 = bswap32(v15.__r_.__value_.__l.__data_);
      BOOL v5 = v8 >= 0x31326872;
      int v9 = v8 > 0x31326872;
      int v10 = !v5;
      if (v9 == v10) {
        return 0;
      }
      else {
        return IsICU24HourDisplay;
      }
    }
  }
  return IsICU24HourDisplay;
}

void sub_1C5DAF418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::RequestInfo::~RequestInfo(&a15);
  _Unwind_Resume(a1);
}

void sub_1C5DAF514(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DAF5A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DAF6C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DAF774(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogArea::toString(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::FormatArea(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100]<0>(&__p, "value");
  RequiredNumberuint64_t Parameter = siri::dialogengine::GetRequiredNumberParameter((const void **)&__p.__r_.__value_.__l.__data_, a2);
  unsigned int v4 = RequiredNumberParameter;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v4)
    {
LABEL_3:
      std::string::basic_string[abi:ne180100]<0>(&__p, "units");
      OptionalStringuint64_t Parameter = (char *)siri::dialogengine::GetOptionalStringParameter((const void **)&__p.__r_.__value_.__l.__data_, a2);
      int v6 = OptionalStringParameter;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v6)
        {
LABEL_5:
          if (v6[95] < 0) {
            std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v6 + 9), *((void *)v6 + 10));
          }
          else {
            std::string __p = *(std::string *)(v6 + 3);
          }
LABEL_12:
          siri::dialogengine::ParseUnitLabel<siri::dialogengine::Area>();
        }
      }
      else if (OptionalStringParameter)
      {
        goto LABEL_5;
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      goto LABEL_12;
    }
  }
  else if (RequiredNumberParameter)
  {
    goto LABEL_3;
  }
  operator new();
}

void sub_1C5DAFEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::SpeakableString::~SpeakableString(&a43);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogArea::approximate(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogArea::compactDecimalLong(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogArea::compactDecimalShort(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogArea::units(siri::dialogengine::DialogArea *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB0214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v21, 0x10B3C40D3060B95);
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogArea::value(siri::dialogengine::DialogArea *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  std::string::basic_string[abi:ne180100]<0>(&v6, "value");
  RequiredNumberuint64_t Parameter = siri::dialogengine::GetRequiredNumberParameter((const void **)&v6, (uint64_t)a2);
  BOOL v5 = RequiredNumberParameter;
  if (v7 < 0)
  {
    operator delete(v6);
    if (v5) {
LABEL_3:
    }
      siri::dialogengine::GetConvertedUnitInfo<siri::dialogengine::Area>();
  }
  else if (RequiredNumberParameter)
  {
    goto LABEL_3;
  }
  operator new();
}

void sub_1C5DB0398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, void *a16, int a17, __int16 a18, char a19, char a20,int a21,__int16 a22,char a23,char a24)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v24, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::RegisterMorphunData(uint64_t a1, const std::string *a2, uint64_t a3)
{
  siri::dialogengine::GetCanonicalLocale(a2, 0, &v19);
  uint64_t v5 = *(unsigned __int8 *)(a3 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a3 + 8);
  }
  if (v5)
  {
    memset(&v18, 0, sizeof(v18));
    memset(&v15, 0, sizeof(v15));
    morphun::util::ULocale::ULocale();
    morphun::resources::DataRegistrationService::registerDataPathForLocale();
    morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v16);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    std::operator+<char>();
    int v6 = std::string::append(&v15, "' from: ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v18.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    int v8 = *(char *)(a3 + 23);
    if (v8 >= 0) {
      int v9 = (const std::string::value_type *)a3;
    }
    else {
      int v9 = *(const std::string::value_type **)a3;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v10 = *(void *)(a3 + 8);
    }
    std::string v11 = std::string::append(&v18, v9, v10);
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    std::string::size_type v17 = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)uint64_t v16 = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::Debug((siri::dialogengine *)v16);
    if (SHIBYTE(v17) < 0) {
      operator delete(v16[0]);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    if (a1) {
      *(unsigned char *)(a1 + 928) = 1;
    }
  }
  else
  {
    std::operator+<char>();
    char v13 = std::string::append(&v18, "'");
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    std::string::size_type v17 = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)uint64_t v16 = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)v16, 1u);
    if (SHIBYTE(v17) < 0) {
      operator delete(v16[0]);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DB063C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v26 - 57) < 0) {
    operator delete(*(void **)(v26 - 80));
  }
  if (*(char *)(v26 - 33) < 0) {
    operator delete(*(void **)(v26 - 56));
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::RegisterMorphunData(siri::dialogengine *this, siri::dialogengine::Context *a2)
{
  memset(&v29, 0, sizeof(v29));
  if (!this || *((unsigned char *)this + 928)) {
    return;
  }
  siri::dialogengine::Context::GetLocale(this, (const char *)a2, (uint64_t)__p);
  siri::dialogengine::GetCanonicalLocale(__p, 0, &v28);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  char v4 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v28.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    long long v26 = 0uLL;
    uint64_t v27 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    std::string v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    std::string v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    morphun::util::ULocale::ULocale();
    morphun::resources::DataRegistrationService::getDataPathForLocale((uint64_t *)&v24, (morphun::resources::DataRegistrationService *)__p, v5);
    long long v26 = v24;
    uint64_t v27 = v25;
    HIBYTE(v25) = 0;
    LOBYTE(v24) = 0;
    morphun::util::ULocale::~ULocale((morphun::util::ULocale *)__p);
    if (SHIBYTE(v17) < 0) {
      operator delete(v15);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v23) < 0) {
      operator delete(v21);
    }
    uint64_t v6 = HIBYTE(v27);
    char v7 = HIBYTE(v27);
    if (v27 < 0) {
      uint64_t v6 = *((void *)&v26 + 1);
    }
    if (v6)
    {
      std::operator+<char>();
      siri::dialogengine::Log::Debug((siri::dialogengine *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      *((unsigned char *)this + 928) = 1;
      char v7 = HIBYTE(v27);
      goto LABEL_29;
    }
    int v8 = siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)__p, (siri::dialogengine *)((char *)this + 8));
    if ((v14 & 2) != 0)
    {
      siri::dialogengine::RequestInfo::~RequestInfo((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    else
    {
      BOOL UnentitledAppEnvVar = siri::dialogengine::GetUnentitledAppEnvVar(v8);
      siri::dialogengine::RequestInfo::~RequestInfo((void **)&__p[0].__r_.__value_.__l.__data_);
      if (!UnentitledAppEnvVar)
      {
        *(void *)&long long v24 = &unk_1F211B9D8;
        siri::dialogengine::MorphunUpdaterTuriTrial::GetPath((uint64_t *)&v28, __p);
        std::string v29 = __p[0];
        std::string::size_type v11 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v11 = v29.__r_.__value_.__l.__size_;
        }
        if (!v11)
        {
          siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Attempting background download of missing locale data using Turi Trial...", v10);
          siri::dialogengine::MorphunUpdaterTuriTrial::Download(v12, (uint64_t *)&v28, 0, 0);
        }
        goto LABEL_28;
      }
    }
    *(void *)&long long v24 = &unk_1F211B980;
    siri::dialogengine::MorphunUpdaterCatutil::GetPath((uint64_t)&v28, __p);
    std::string v29 = __p[0];
LABEL_28:
    siri::dialogengine::RegisterMorphunData((uint64_t)this, &v28, (uint64_t)&v29);
LABEL_29:
    if (v7 < 0) {
      operator delete((void *)v26);
    }
    char v4 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  }
  if (v4 < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DB0990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (v14 < 0) {
    operator delete(*(void **)(v15 - 112));
  }
  if (*(char *)(v15 - 65) < 0) {
    operator delete(*(void **)(v15 - 88));
  }
  if (*(char *)(v15 - 41) < 0) {
    operator delete(*(void **)(v15 - 64));
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::RegisterMorphunData(std::string *a1)
{
  {
    operator new();
  }
  {
    __cxa_atexit(MEMORY[0x1E4FBA268], &siri::dialogengine::RegisterMorphunData(std::string const&)::m, &dword_1C5C1E000);
  }
  std::mutex::lock(&siri::dialogengine::RegisterMorphunData(std::string const&)::m);
  unint64_t v2 = (uint64_t **)siri::dialogengine::RegisterMorphunData(std::string const&)::sRegisteredLocales;
  uint64_t v3 = siri::dialogengine::RegisterMorphunData(std::string const&)::sRegisteredLocales + 8;
  char v4 = *(void **)(siri::dialogengine::RegisterMorphunData(std::string const&)::sRegisteredLocales + 8);
  if (!v4) {
    goto LABEL_11;
  }
  uint64_t v5 = siri::dialogengine::RegisterMorphunData(std::string const&)::sRegisteredLocales + 8;
  do
  {
    BOOL v6 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v4 + 4, a1);
    char v7 = v4 + 1;
    if (!v6)
    {
      char v7 = v4;
      uint64_t v5 = (uint64_t)v4;
    }
    char v4 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v3
    || std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a1, (void *)(v5 + 32))
    || v3 == v5)
  {
LABEL_11:
    std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(v2, a1, (uint64_t)a1);
    siri::dialogengine::Context::Context((siri::dialogengine::Context *)v11);
    siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)v9);
    std::string::operator=(v10, a1);
    siri::dialogengine::Context::SetRequestInfo((uint64_t)v11, (uint64_t)v9);
    siri::dialogengine::RegisterMorphunData((siri::dialogengine *)v11, v8);
    siri::dialogengine::RequestInfo::~RequestInfo(v9);
    siri::dialogengine::Context::~Context((siri::dialogengine::Context *)v11);
  }
  std::mutex::unlock(&siri::dialogengine::RegisterMorphunData(std::string const&)::m);
}

void sub_1C5DB0C1C(_Unwind_Exception *a1)
{
}

uint64_t *std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t **a1, void *a2, uint64_t a3)
{
  uint64_t result = std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v8, a2);
  if (!*result)
  {
    BOOL v6 = (uint64_t **)result;
    std::__tree<std::string>::__construct_node<std::string const&>((uint64_t)&v7, (uint64_t)a1, a3);
    return std::__tree<std::string>::__insert_node_at(a1, v8, v6, v7);
  }
  return result;
}

void *std::__tree<std::string>::__find_equal<std::string>(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  char v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        char v7 = v4;
        uint64_t v8 = v4 + 4;
        if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a3, v4 + 4)) {
          break;
        }
        char v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      char v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    char v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

void std::__tree<std::string>::__construct_node<std::string const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 8;
  BOOL v6 = (char *)operator new(0x38uLL);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = 0;
  char v7 = (std::string *)(v6 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v7, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v7->__r_.__value_.__r.__words[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a1 + 16) = 1;
}

void sub_1C5DB0DF4(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::string,void *>>>::operator()[abi:ne180100](v3, v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PreloadMorphunData(const std::string *a1)
{
  siri::dialogengine::GetCanonicalLocale(a1, 0, &v9);
  std::string::size_type size = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  char v2 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v9.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v8 = &unk_1F211B9D8;
    siri::dialogengine::MorphunUpdaterTuriTrial::GetPath((uint64_t *)&v9, v6);
    unint64_t v3 = v7;
    unsigned __int8 v4 = v7;
    if ((v7 & 0x80u) != 0) {
      unint64_t v3 = (unint64_t)v6[1];
    }
    if (v3)
    {
      morphun::util::ULocale::ULocale();
      morphun::resources::DataRegistrationService::registerDataPathForLocale();
      morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v5);
      unsigned __int8 v4 = v7;
    }
    if ((v4 & 0x80) != 0) {
      operator delete(v6[0]);
    }
    char v2 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  }
  if (v2 < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DB0F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27)
{
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a27);
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (*(char *)(v27 - 49) < 0) {
    operator delete(*(void **)(v27 - 72));
  }
  if (*(char *)(v27 - 17) < 0) {
    operator delete(*(void **)(v27 - 40));
  }
  _Unwind_Resume(a1);
}

void InitDefaultsscc_info_CustomElement_CustomElement_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/CustomElement.pb.cc", a4);
  SnippetUI::CustomElement::CustomElement((SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_CustomElement_default_instance_, v4);
  qword_1EB6908A0 = (uint64_t)&SnippetUI::_CustomCanvas_default_instance_;
}

SnippetUI::CustomElement *SnippetUI::CustomElement::CustomElement(SnippetUI::CustomElement *this)
{
  *(void *)this = &unk_1F211BA30;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (atomic_load_explicit(scc_info_CustomElement_CustomElement_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_CustomElement_CustomElement_2eproto);
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_1C5DB108C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedField<int>::~RepeatedField(v1 + 16);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::CustomElement::GetMetadata(SnippetUI::CustomElement *this)
{
  return file_level_metadata_CustomElement_2eproto;
}

uint64_t SnippetUI::CustomElement::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void SnippetUI::CustomElement::MergeFrom(SnippetUI::CustomElement *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/CustomElement.pb.cc", 283);
    unsigned __int8 v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::CustomElement::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DB11B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::CustomElement::MergeFrom(SnippetUI::CustomElement *this, const SnippetUI::CustomElement *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/CustomElement.pb.cc", 298);
    unsigned __int8 v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::CustomElement *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 4, (int *)a2 + 4);
  if (a2 != (const SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_)
  {
    BOOL v6 = (const SnippetUI::CustomCanvas *)*((void *)a2 + 5);
    if (v6)
    {
      char v7 = (SnippetUI::CustomCanvas *)*((void *)this + 5);
      if (!v7)
      {
        char v7 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomCanvas>(0);
        *((void *)this + 5) = v7;
        BOOL v6 = (const SnippetUI::CustomCanvas *)*((void *)a2 + 5);
      }
      if (v6) {
        uint64_t v8 = v6;
      }
      else {
        uint64_t v8 = (const SnippetUI::CustomCanvas *)&SnippetUI::_CustomCanvas_default_instance_;
      }
      SnippetUI::CustomCanvas::MergeFrom(v7, v8);
    }
  }
}

void sub_1C5DB1298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::CustomElement::CopyFrom(SnippetUI::CustomElement *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::CustomElement::Clear(this);
    SnippetUI::CustomElement::MergeFrom(this, a2);
  }
}

void SnippetUI::CustomElement::Clear(SnippetUI::CustomElement *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  char v4 = *((unsigned char *)this + 8);
  unint64_t v3 = (SnippetUI::CustomElement *)((char *)this + 8);
  *((void *)v3 + 4) = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v3);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::CustomElement::InternalSerializeWithCachedSizesToArray(SnippetUI::CustomElement *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this != (SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_)
  {
    char v7 = (SnippetUI::CustomCanvas *)*((void *)this + 5);
    if (v7)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        char v7 = (SnippetUI::CustomCanvas *)*((void *)this + 5);
      }
      *uint64_t v5 = 10;
      unsigned int v8 = *((_DWORD *)v7 + 13);
      if (v8 > 0x7F)
      {
        v5[1] = v8 | 0x80;
        unsigned int v10 = v8 >> 7;
        if (v8 >> 14)
        {
          std::string::size_type v11 = v5 + 2;
          do
          {
            uint64_t v12 = v11;
            *v11++ = v10 | 0x80;
            unsigned int v13 = v10 >> 7;
            unsigned int v14 = v10 >> 14;
            v10 >>= 7;
          }
          while (v14);
          char v9 = v12 + 2;
          *std::string::size_type v11 = v13;
        }
        else
        {
          v5[2] = v10;
          char v9 = v5 + 3;
        }
      }
      else
      {
        v5[1] = v8;
        char v9 = v5 + 2;
      }
      uint64_t v5 = (char *)SnippetUI::CustomCanvas::InternalSerializeWithCachedSizesToArray(v7, v9, a3, a4);
    }
  }
  unsigned int v15 = *((_DWORD *)this + 8);
  if ((int)v15 >= 1)
  {
    unint64_t v16 = *(void *)a3;
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unint64_t v16 = *(void *)a3;
    }
    if (v16 <= (unint64_t)v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
      uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: ptr < end_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
    }
    *uint64_t v5 = 18;
    std::string v18 = v5 + 1;
    if (v15 >= 0x80)
    {
      do
      {
        *v18++ = v15 | 0x80;
        unsigned int v30 = v15 >> 14;
        v15 >>= 7;
      }
      while (v30);
      uint64_t v5 = v18 - 1;
    }
    v5 += 2;
    *std::string v18 = v15;
    uint64_t v19 = (int *)*((void *)this + 3);
    uint64_t v20 = &v19[*((int *)this + 4)];
    do
    {
      if ((unint64_t)v5 >= *(void *)a3) {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      }
      unint64_t v22 = *v19++;
      unint64_t v21 = v22;
      if (v22 > 0x7F)
      {
        *uint64_t v5 = v21 | 0x80;
        unint64_t v23 = v21 >> 7;
        if (v21 >> 14)
        {
          long long v24 = v5 + 1;
          do
          {
            uint64_t v25 = v24;
            *v24++ = v23 | 0x80;
            unint64_t v26 = v23 >> 7;
            unint64_t v27 = v23 >> 14;
            v23 >>= 7;
          }
          while (v27);
          uint64_t v5 = v25 + 2;
          *long long v24 = v26;
        }
        else
        {
          v5[1] = v23;
          v5 += 2;
        }
      }
      else
      {
        *v5++ = v21;
      }
    }
    while (v19 < v20);
  }
  uint64_t v28 = *((void *)this + 1);
  if (v28) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v28 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  return (const google::protobuf::UnknownFieldSet *)v5;
}

void sub_1C5DB15CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *SnippetUI::CustomElement::_InternalParse(SnippetUI::CustomElement *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v17 = a2;
  uint64_t v5 = (SnippetUI::CustomElement *)((char *)this + 16);
  BOOL v6 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v17, *((_DWORD *)a3 + 23))) {
        return v17;
      }
      TagFallback = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v10 = (char *)*(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0)
      {
        TagFallback = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
        uint64_t v17 = TagFallback;
        goto LABEL_7;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, v10);
      uint64_t v17 = TagFallback;
      if (!TagFallback) {
        return TagFallback;
      }
LABEL_7:
      if (v10 >> 3 == 2) {
        break;
      }
      if (v10 >> 3 != 1 || v10 != 10)
      {
LABEL_12:
        if (v10) {
          BOOL v12 = (v10 & 7) == 4;
        }
        else {
          BOOL v12 = 1;
        }
        if (v12)
        {
          *((_DWORD *)a3 + 20) = v10 - 1;
          return TagFallback;
        }
        unsigned int v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v6, TagFallback, a3, v8);
        goto LABEL_22;
      }
      unsigned int v14 = (SnippetUI::CustomCanvas *)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomCanvas>(0);
        *((void *)this + 5) = v14;
        TagFallback = v17;
      }
      unsigned int v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::CustomCanvas>(a3, v14, TagFallback);
LABEL_22:
      uint64_t v17 = (google::protobuf::internal *)v13;
      if (!v13) {
        return 0;
      }
    }
    if (v10 == 18)
    {
      unsigned int v13 = google::protobuf::internal::PackedInt32Parser(v5, TagFallback, a3, v7);
      goto LABEL_22;
    }
    if (v10 != 16) {
      goto LABEL_12;
    }
    int v15 = google::protobuf::internal::ReadVarint(&v17, (const char **)v10);
    if (!v17) {
      return 0;
    }
    SnippetUI::ColorElement::_internal_add_idioms((uint64_t)this, v15);
  }
}

char *google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::CustomCanvas>(google::protobuf::internal::EpsCopyInputStream *this, SnippetUI::CustomCanvas *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  char v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    unsigned int v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    unsigned int v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)SnippetUI::CustomCanvas::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t SnippetUI::CustomElement::GetCachedSize(SnippetUI::CustomElement *this)
{
  return *((unsigned int *)this + 12);
}

char *SnippetUI::CustomElement::ByteSizeLong(SnippetUI::CustomElement *this)
{
  uint64_t v2 = (_DWORD *)((char *)this + 16);
  int v3 = *((_DWORD *)this + 4);
  if (!v3)
  {
    uint64_t v5 = 0;
LABEL_11:
    int v9 = 0;
    uint64_t v8 = 0;
    goto LABEL_14;
  }
  int v4 = 0;
  uint64_t v5 = 0;
  do
  {
    int v6 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v2, v4);
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    v5 += v7;
    ++v4;
  }
  while (v3 != v4);
  if (!v5) {
    goto LABEL_11;
  }
  if ((v5 & 0x80000000) != 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v9 = v5;
LABEL_14:
  *((_DWORD *)this + 8) = v9;
  int v10 = (const google::protobuf::UnknownFieldSet *)(v8 + v5);
  if (this != (SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_)
  {
    int v11 = (SnippetUI::CustomCanvas *)*((void *)this + 5);
    if (v11)
    {
      int v12 = SnippetUI::CustomCanvas::ByteSizeLong(v11);
      int v10 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v10
                                                          + 1
                                                          + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::CustomElement *)((char *)this + 8), v10, (_DWORD *)this + 12);
  }
  else
  {
    *((_DWORD *)this + 12) = v10;
    return (char *)v10;
  }
}

uint64_t SnippetUI::CustomElement::IsInitialized(SnippetUI::CustomElement *this)
{
  return 1;
}

SnippetUI::CustomElement *SnippetUI::CustomElement::New(SnippetUI::CustomElement *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomElement>(a2);
}

SnippetUI::CustomElement *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomElement>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::CustomElement *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::CustomElement>);
  }
  SnippetUI::CustomElement::CustomElement(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DB1A14(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C407499B434);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::CustomElement>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::CustomElement *SnippetUI::CustomElement::New(SnippetUI::CustomElement *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::CustomElement>(0);
}

void SnippetUI::CustomElement::~CustomElement(SnippetUI::CustomElement *this)
{
  SnippetUI::CustomElement::~CustomElement(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F211BA30;
  if (this != (SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 16);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::CustomElement::InitAsDefaultInstance(SnippetUI::CustomElement *this)
{
  qword_1EB6908A0 = (uint64_t)&SnippetUI::_CustomCanvas_default_instance_;
}

uint64_t SnippetUI::CustomElement::_Internal::canvas(SnippetUI::CustomElement::_Internal *this, const SnippetUI::CustomElement *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::CustomElement::clear_canvas(SnippetUI::CustomElement *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

SnippetUI::CustomElement *SnippetUI::CustomElement::CustomElement(SnippetUI::CustomElement *this, const SnippetUI::CustomElement *a2)
{
  *(void *)this = &unk_1F211BA30;
  *((void *)this + 1) = 0;
  int v4 = (SnippetUI::CustomElement *)((char *)this + 8);
  google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)this + 16, (int *)a2 + 4);
  *((_DWORD *)this + 12) = 0;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom(v4, (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  if (a2 != (const SnippetUI::CustomElement *)&SnippetUI::_CustomElement_default_instance_ && *((void *)a2 + 5)) {
    operator new();
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_1C5DB1C64(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v3, 0x10A1C404D509FBCLL);
  google::protobuf::RepeatedField<int>::~RepeatedField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::CustomElement::default_instance(SnippetUI::CustomElement *this)
{
  if (atomic_load_explicit(scc_info_CustomElement_CustomElement_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_CustomElement_CustomElement_2eproto);
  }
  return &SnippetUI::_CustomElement_default_instance_;
}

void SnippetUI::CustomElement::CopyFrom(SnippetUI::CustomElement *this, const SnippetUI::CustomElement *a2)
{
  if (a2 != this)
  {
    SnippetUI::CustomElement::Clear(this);
    SnippetUI::CustomElement::MergeFrom(this, a2);
  }
}

void SnippetUI::CustomElement::InternalSwap(SnippetUI::CustomElement *this, SnippetUI::CustomElement *a2)
{
  int v4 = (SnippetUI::CustomElement *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      int v6 = v8;
      goto LABEL_6;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_7;
  }
  int v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
  google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
LABEL_7:
  google::protobuf::RepeatedField<int>::InternalSwap((uint64_t)this + 16, (uint64_t)a2 + 16);
  uint64_t v7 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v7;
}

void InitDefaultsscc_info_PrimaryHeader_Marquee_PrimaryHeader_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", a4);
  SnippetUI::PrimaryHeader_Marquee::PrimaryHeader_Marquee((SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_PrimaryHeader_Marquee_default_instance_, v4);
  qword_1EB690DB0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690DB8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690DC0 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690DC8 = &SnippetUI::_VisualProperty_default_instance_;
}

SnippetUI::PrimaryHeader_Marquee *SnippetUI::PrimaryHeader_Marquee::PrimaryHeader_Marquee(SnippetUI::PrimaryHeader_Marquee *this)
{
  *(void *)this = &unk_1F211BBC8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 14) = 0;
  if (atomic_load_explicit(scc_info_PrimaryHeader_Marquee_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Marquee_PrimaryHeader_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return this;
}

void sub_1C5DB1EB8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::GetMetadata(SnippetUI::PrimaryHeader_Marquee *this)
{
  return qword_1EA3D8698;
}

void InitDefaultsscc_info_PrimaryHeader_Standard_PrimaryHeader_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", a4);
  SnippetUI::PrimaryHeader_Standard::PrimaryHeader_Standard((SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_PrimaryHeader_Standard_default_instance_, v4);
  qword_1EB690E38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E40 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690E48 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E50 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::PrimaryHeader_Standard *SnippetUI::PrimaryHeader_Standard::PrimaryHeader_Standard(SnippetUI::PrimaryHeader_Standard *this)
{
  *(void *)this = &unk_1F211BB08;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 14) = 0;
  if (atomic_load_explicit(scc_info_PrimaryHeader_Standard_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Standard_PrimaryHeader_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return this;
}

void sub_1C5DB1FF4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::PrimaryHeader_Standard::GetMetadata(SnippetUI::PrimaryHeader_Standard *this)
{
  return file_level_metadata_PrimaryHeader_2eproto;
}

uint64_t SnippetUI::PrimaryHeader_Standard::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void SnippetUI::PrimaryHeader_Standard::MergeFrom(SnippetUI::PrimaryHeader_Standard *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 507);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::PrimaryHeader_Standard::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DB2110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Standard::MergeFrom(SnippetUI::PrimaryHeader_Standard *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 522);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Standard *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  if (a2 != (const SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_)
  {
    uint64_t v8 = (int **)*((void *)a2 + 3);
    if (v8)
    {
      int v9 = (int **)*((void *)this + 3);
      if (!v9)
      {
        int v9 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v9;
        uint64_t v8 = (int **)*((void *)a2 + 3);
      }
      if (v8) {
        int v10 = v8;
      }
      else {
        int v10 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v9, v10);
    }
    int v11 = (int **)*((void *)a2 + 4);
    if (v11)
    {
      int v12 = (int **)*((void *)this + 4);
      if (!v12)
      {
        int v12 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v12;
        int v11 = (int **)*((void *)a2 + 4);
      }
      if (v11) {
        BOOL v13 = v11;
      }
      else {
        BOOL v13 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v12, v13);
    }
    int v14 = (int **)*((void *)a2 + 5);
    if (v14)
    {
      int v15 = (int **)*((void *)this + 5);
      if (!v15)
      {
        int v15 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v15;
        int v14 = (int **)*((void *)a2 + 5);
      }
      if (v14) {
        unint64_t v16 = v14;
      }
      else {
        unint64_t v16 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v15, v16);
    }
    uint64_t v17 = (int **)*((void *)a2 + 6);
    if (v17)
    {
      std::string v18 = (int **)*((void *)this + 6);
      if (!v18)
      {
        std::string v18 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 6) = v18;
        uint64_t v17 = (int **)*((void *)a2 + 6);
      }
      if (v17) {
        uint64_t v19 = v17;
      }
      else {
        uint64_t v19 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v18, v19);
    }
  }
}

void sub_1C5DB22C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Standard::CopyFrom(SnippetUI::PrimaryHeader_Standard *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Standard::Clear(this);
    SnippetUI::PrimaryHeader_Standard::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Standard::Clear(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  char v8 = *((unsigned char *)this + 8);
  char v7 = (SnippetUI::PrimaryHeader_Standard *)((char *)this + 8);
  *((void *)v7 + 5) = 0;
  if (v8)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v7);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::PrimaryHeader_Standard::InternalSerializeWithCachedSizesToArray(SnippetUI::PrimaryHeader_Standard *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_) {
    goto LABEL_49;
  }
  char v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        int v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *int v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    int v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  unint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        unint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      char v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  char v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  uint64_t v25 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v25 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      std::string v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  std::string v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::ActionProperty *)*((void *)this + 6);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v34 = (SnippetUI::ActionProperty *)*((void *)this + 6);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        int v38 = v5 + 2;
        do
        {
          uint64_t v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        int v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *int v38 = v40;
      }
      else
      {
        v5[2] = v37;
        int v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      int v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  long long v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    BOOL v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    long long v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  BOOL v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Standard.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  uint64_t v44 = *((void *)this + 1);
  if ((v44 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v44 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::PrimaryHeader_Standard::_InternalParse(SnippetUI::PrimaryHeader_Standard *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v15 = a2;
  uint64_t v5 = (std::string **)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23))) {
      return v15;
    }
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    uint64_t v9 = (char *)*(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v9 = (char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      unsigned int v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    unsigned int v15 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 3);
        if (v10) {
          goto LABEL_18;
        }
        unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v10;
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v10) {
          goto LABEL_18;
        }
        unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v10;
        goto LABEL_17;
      case 3u:
        if (v9 != 26) {
          goto LABEL_27;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v10) {
          goto LABEL_18;
        }
        unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v10;
LABEL_17:
        TagFallback = v15;
LABEL_18:
        int v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v10, TagFallback);
        goto LABEL_32;
      case 4u:
        if (v9 != 34) {
          goto LABEL_27;
        }
        int v12 = (SnippetUI::ActionProperty *)*((void *)this + 6);
        if (!v12)
        {
          int v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 6) = v12;
          TagFallback = v15;
        }
        int v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v12, TagFallback);
        goto LABEL_32;
      case 5u:
        if (v9 != 42) {
          goto LABEL_27;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        int v11 = google::protobuf::internal::InlineGreedyStringParserUTF8(*v5, (std::string::value_type *)TagFallback, (uint64_t)a3, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Standard.component_name");
        goto LABEL_32;
      default:
LABEL_27:
        if (v9) {
          BOOL v13 = (v9 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
          *((_DWORD *)a3 + 20) = v9 - 1;
          return TagFallback;
        }
        int v11 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, v6, TagFallback, a3, v7);
LABEL_32:
        unsigned int v15 = (google::protobuf::internal *)v11;
        if (v11) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::PrimaryHeader_Standard::GetCachedSize(SnippetUI::PrimaryHeader_Standard *this)
{
  return *((unsigned int *)this + 14);
}

char *SnippetUI::PrimaryHeader_Standard::ByteSizeLong(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_)
  {
    uint64_t v6 = (SnippetUI::TextProperty *)*((void *)this + 3);
    if (v6)
    {
      char v7 = SnippetUI::TextProperty::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v8 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = SnippetUI::TextProperty::ByteSizeLong(v8);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v9[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v10)
    {
      int v11 = SnippetUI::TextProperty::ByteSizeLong(v10);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v12 = (SnippetUI::ActionProperty *)*((void *)this + 6);
    if (v12)
    {
      BOOL v13 = SnippetUI::ActionProperty::ByteSizeLong(v12);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v13[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::PrimaryHeader_Standard *)((char *)this + 8), v5, (_DWORD *)this + 14);
  }
  else
  {
    *((_DWORD *)this + 14) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::PrimaryHeader_Standard::IsInitialized(SnippetUI::PrimaryHeader_Standard *this)
{
  return 1;
}

SnippetUI::PrimaryHeader_Standard *SnippetUI::PrimaryHeader_Standard::New(SnippetUI::PrimaryHeader_Standard *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Standard>(a2);
}

SnippetUI::PrimaryHeader_Standard *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Standard>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::PrimaryHeader_Standard *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x40uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Standard>);
  }
  SnippetUI::PrimaryHeader_Standard::PrimaryHeader_Standard(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DB2C14(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Standard>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::PrimaryHeader_Standard *SnippetUI::PrimaryHeader_Standard::New(SnippetUI::PrimaryHeader_Standard *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Standard>(0);
}

void SnippetUI::PrimaryHeader_Standard::~PrimaryHeader_Standard(SnippetUI::PrimaryHeader_Standard *this)
{
  SnippetUI::PrimaryHeader_Standard::~PrimaryHeader_Standard(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(void *)this = &unk_1F211BB08;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    char v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_PrimaryHeader_Rich_PrimaryHeader_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", a4);
  SnippetUI::PrimaryHeader_Rich::PrimaryHeader_Rich((SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_PrimaryHeader_Rich_default_instance_, v4);
  qword_1EB68FBB0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FBB8 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FBC0 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FBC8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FBD0 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FBD8 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::PrimaryHeader_Rich *SnippetUI::PrimaryHeader_Rich::PrimaryHeader_Rich(SnippetUI::PrimaryHeader_Rich *this)
{
  *(void *)this = &unk_1F211BC88;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 18) = 0;
  if (atomic_load_explicit(scc_info_PrimaryHeader_Rich_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Rich_PrimaryHeader_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return this;
}

void sub_1C5DB2EFC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::PrimaryHeader_Rich::GetMetadata(SnippetUI::PrimaryHeader_Rich *this)
{
  return qword_1EA3D86A8;
}

uint64_t SnippetUI::PrimaryHeader_Rich::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

void SnippetUI::PrimaryHeader_Rich::MergeFrom(SnippetUI::PrimaryHeader_Rich *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 1389);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::PrimaryHeader_Rich::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DB3018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Rich::MergeFrom(SnippetUI::PrimaryHeader_Rich *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v27, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 1404);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v27, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v27[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Rich *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  if (a2 != (const SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_)
  {
    unsigned int v8 = (int **)*((void *)a2 + 3);
    if (v8)
    {
      uint64_t v9 = (int **)*((void *)this + 3);
      if (!v9)
      {
        uint64_t v9 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v9;
        unsigned int v8 = (int **)*((void *)a2 + 3);
      }
      if (v8) {
        unsigned int v10 = v8;
      }
      else {
        unsigned int v10 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v9, v10);
    }
    int v11 = (int **)*((void *)a2 + 4);
    if (v11)
    {
      int v12 = (int **)*((void *)this + 4);
      if (!v12)
      {
        int v12 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 4) = v12;
        int v11 = (int **)*((void *)a2 + 4);
      }
      if (v11) {
        BOOL v13 = v11;
      }
      else {
        BOOL v13 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v12, v13);
    }
    unsigned int v14 = (int **)*((void *)a2 + 5);
    if (v14)
    {
      unsigned int v15 = (int **)*((void *)this + 5);
      if (!v15)
      {
        unsigned int v15 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v15;
        unsigned int v14 = (int **)*((void *)a2 + 5);
      }
      if (v14) {
        unint64_t v16 = v14;
      }
      else {
        unint64_t v16 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v15, v16);
    }
    unsigned int v17 = (int **)*((void *)a2 + 6);
    if (v17)
    {
      uint64_t v18 = (int **)*((void *)this + 6);
      if (!v18)
      {
        uint64_t v18 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v18;
        unsigned int v17 = (int **)*((void *)a2 + 6);
      }
      if (v17) {
        unsigned int v19 = v17;
      }
      else {
        unsigned int v19 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v18, v19);
    }
    char v20 = (int **)*((void *)a2 + 7);
    if (v20)
    {
      unint64_t v21 = (int **)*((void *)this + 7);
      if (!v21)
      {
        unint64_t v21 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 7) = v21;
        char v20 = (int **)*((void *)a2 + 7);
      }
      if (v20) {
        unint64_t v22 = v20;
      }
      else {
        unint64_t v22 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v21, v22);
    }
    unsigned int v23 = (int **)*((void *)a2 + 8);
    if (v23)
    {
      unsigned int v24 = (int **)*((void *)this + 8);
      if (!v24)
      {
        unsigned int v24 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 8) = v24;
        unsigned int v23 = (int **)*((void *)a2 + 8);
      }
      if (v23) {
        uint64_t v25 = v23;
      }
      else {
        uint64_t v25 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v24, v25);
    }
  }
}

void sub_1C5DB322C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Rich::CopyFrom(SnippetUI::PrimaryHeader_Rich *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Rich::Clear(this);
    SnippetUI::PrimaryHeader_Rich::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Rich::Clear(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  char v10 = *((unsigned char *)this + 8);
  uint64_t v9 = (SnippetUI::PrimaryHeader_Rich *)((char *)this + 8);
  *((void *)v9 + 7) = 0;
  if (v10)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v9);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::PrimaryHeader_Rich::InternalSerializeWithCachedSizesToArray(SnippetUI::PrimaryHeader_Rich *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_) {
    goto LABEL_73;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        int v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *int v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    int v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  unint64_t v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 4);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 4);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        unint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      char v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  char v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  uint64_t v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      std::string v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  std::string v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v34 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      uint64_t v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      int v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *uint64_t v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  int v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  BOOL v43 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    BOOL v43 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      uint64_t v48 = v5 + 2;
      do
      {
        uint64_t v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      long long v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *uint64_t v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  long long v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  uint64_t v52 = (SnippetUI::ActionProperty *)*((void *)this + 8);
  if (v52)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v52 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    }
    *uint64_t v5 = 50;
    unsigned int v53 = *((_DWORD *)v52 + 12);
    if (v53 > 0x7F)
    {
      v5[1] = v53 | 0x80;
      unsigned int v55 = v53 >> 7;
      if (v53 >> 14)
      {
        std::__split_buffer<std::string>::pointer v56 = v5 + 2;
        do
        {
          uint64_t v57 = v56;
          *v56++ = v55 | 0x80;
          unsigned int v58 = v55 >> 7;
          unsigned int v59 = v55 >> 14;
          v55 >>= 7;
        }
        while (v59);
        uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v57 + 2);
        unsigned char *v56 = v58;
      }
      else
      {
        v5[2] = v55;
        uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v53;
      uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v52, v54, a3, a4);
  }
LABEL_73:
  unint64_t v60 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v60 + 23) < 0)
  {
    uint64_t v61 = (const char *)*((void *)v60 + 1);
    if (!v61) {
      goto LABEL_79;
    }
    unint64_t v60 = *(google::protobuf::internal **)v60;
    goto LABEL_78;
  }
  uint64_t v61 = (const char *)*((unsigned __int8 *)v60 + 23);
  if (*((unsigned char *)v60 + 23))
  {
LABEL_78:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v60, v61, 1, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Rich.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 2), v5);
  }
LABEL_79:
  uint64_t v62 = *((void *)this + 1);
  if ((v62 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v62 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::PrimaryHeader_Rich::_InternalParse(SnippetUI::PrimaryHeader_Rich *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v17 = a2;
  uint64_t v5 = (std::string **)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v17, *((_DWORD *)a3 + 23))) {
      return v17;
    }
    TagFallback = (google::protobuf::internal *)((char *)v17 + 1);
    uint64_t v9 = (char *)*(unsigned __int8 *)v17;
    if ((*(char *)v17 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v9 = (char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
      unsigned int v17 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, v9);
    unsigned int v17 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 3);
        if (v10) {
          goto LABEL_25;
        }
        unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v10;
        goto LABEL_24;
      case 2u:
        if (v9 != 18) {
          goto LABEL_38;
        }
        int v11 = (SnippetUI::MultilineTextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_20;
        }
        int v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_19;
      case 3u:
        if (v9 != 26) {
          goto LABEL_38;
        }
        int v11 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_20;
        }
        int v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v11;
LABEL_19:
        TagFallback = v17;
LABEL_20:
        int v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v11, TagFallback);
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (!v10)
        {
          unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 6) = v10;
LABEL_24:
          TagFallback = v17;
        }
LABEL_25:
        int v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v10, TagFallback);
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_38;
        }
        BOOL v13 = (SnippetUI::VisualProperty *)*((void *)this + 7);
        if (!v13)
        {
          BOOL v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 7) = v13;
          TagFallback = v17;
        }
        int v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_43;
      case 6u:
        if (v9 != 50) {
          goto LABEL_38;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 8);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 8) = v14;
          TagFallback = v17;
        }
        int v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_43;
      case 7u:
        if (v9 != 58) {
          goto LABEL_38;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        int v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(*v5, (std::string::value_type *)TagFallback, (uint64_t)a3, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Rich.component_name");
        goto LABEL_43;
      default:
LABEL_38:
        if (v9) {
          BOOL v15 = (v9 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          *((_DWORD *)a3 + 20) = v9 - 1;
          return TagFallback;
        }
        int v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, v6, TagFallback, a3, v7);
LABEL_43:
        unsigned int v17 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::PrimaryHeader_Rich::GetCachedSize(SnippetUI::PrimaryHeader_Rich *this)
{
  return *((unsigned int *)this + 18);
}

char *SnippetUI::PrimaryHeader_Rich::ByteSizeLong(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_)
  {
    uint64_t v6 = (SnippetUI::TextProperty *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = SnippetUI::TextProperty::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v8 = (SnippetUI::MultilineTextProperty *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = SnippetUI::MultilineTextProperty::ByteSizeLong(v8);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v9[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v10 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
    if (v10)
    {
      int v11 = SnippetUI::MultilineTextProperty::ByteSizeLong(v10);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v12 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v12)
    {
      BOOL v13 = SnippetUI::TextProperty::ByteSizeLong(v12);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v13[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 7);
    if (v14)
    {
      BOOL v15 = SnippetUI::VisualProperty::ByteSizeLong(v14);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v15[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unint64_t v16 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    if (v16)
    {
      unsigned int v17 = SnippetUI::ActionProperty::ByteSizeLong(v16);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v17[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::PrimaryHeader_Rich *)((char *)this + 8), v5, (_DWORD *)this + 18);
  }
  else
  {
    *((_DWORD *)this + 18) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::PrimaryHeader_Rich::IsInitialized(SnippetUI::PrimaryHeader_Rich *this)
{
  return 1;
}

SnippetUI::PrimaryHeader_Rich *SnippetUI::PrimaryHeader_Rich::New(SnippetUI::PrimaryHeader_Rich *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Rich>(a2);
}

SnippetUI::PrimaryHeader_Rich *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Rich>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::PrimaryHeader_Rich *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x50uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Rich>);
  }
  SnippetUI::PrimaryHeader_Rich::PrimaryHeader_Rich(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DB3DF0(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C406DED95A8);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Rich>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::PrimaryHeader_Rich *SnippetUI::PrimaryHeader_Rich::New(SnippetUI::PrimaryHeader_Rich *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Rich>(0);
}

void SnippetUI::PrimaryHeader_Rich::~PrimaryHeader_Rich(SnippetUI::PrimaryHeader_Rich *this)
{
  SnippetUI::PrimaryHeader_Rich::~PrimaryHeader_Rich(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)this = &unk_1F211BC88;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    unsigned int v8 = *((void *)this + 7);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 8);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void SnippetUI::PrimaryHeader_Marquee::MergeFrom(SnippetUI::PrimaryHeader_Marquee *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 903);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::PrimaryHeader_Marquee::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DB40F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Marquee::MergeFrom(SnippetUI::PrimaryHeader_Marquee *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/PrimaryHeader.pb.cc", 918);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Marquee *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  if (a2 != (const SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_)
  {
    unsigned int v8 = (int **)*((void *)a2 + 3);
    if (v8)
    {
      uint64_t v9 = (int **)*((void *)this + 3);
      if (!v9)
      {
        uint64_t v9 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v9;
        unsigned int v8 = (int **)*((void *)a2 + 3);
      }
      if (v8) {
        unsigned int v10 = v8;
      }
      else {
        unsigned int v10 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v9, v10);
    }
    int v11 = (int **)*((void *)a2 + 4);
    if (v11)
    {
      int v12 = (int **)*((void *)this + 4);
      if (!v12)
      {
        int v12 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v12;
        int v11 = (int **)*((void *)a2 + 4);
      }
      if (v11) {
        BOOL v13 = v11;
      }
      else {
        BOOL v13 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v12, v13);
    }
    unsigned int v14 = (int **)*((void *)a2 + 5);
    if (v14)
    {
      BOOL v15 = (int **)*((void *)this + 5);
      if (!v15)
      {
        BOOL v15 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 5) = v15;
        unsigned int v14 = (int **)*((void *)a2 + 5);
      }
      if (v14) {
        unint64_t v16 = v14;
      }
      else {
        unint64_t v16 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v15, v16);
    }
    unsigned int v17 = (int **)*((void *)a2 + 6);
    if (v17)
    {
      uint64_t v18 = (int **)*((void *)this + 6);
      if (!v18)
      {
        uint64_t v18 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 6) = v18;
        unsigned int v17 = (int **)*((void *)a2 + 6);
      }
      if (v17) {
        unsigned int v19 = v17;
      }
      else {
        unsigned int v19 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v18, v19);
    }
  }
}

void sub_1C5DB42B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::PrimaryHeader_Marquee::CopyFrom(SnippetUI::PrimaryHeader_Marquee *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Marquee::Clear(this);
    SnippetUI::PrimaryHeader_Marquee::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Marquee::Clear(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  char v8 = *((unsigned char *)this + 8);
  char v7 = (SnippetUI::PrimaryHeader_Marquee *)((char *)this + 8);
  *((void *)v7 + 5) = 0;
  if (v8)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v7);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::PrimaryHeader_Marquee::InternalSerializeWithCachedSizesToArray(SnippetUI::PrimaryHeader_Marquee *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_) {
    goto LABEL_37;
  }
  char v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v7 = (SnippetUI::TextProperty *)*((void *)this + 3);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        int v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *int v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    int v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  unint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        unint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      char v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  char v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  uint64_t v25 = (SnippetUI::ActionProperty *)*((void *)this + 5);
  if (v25)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v25 = (SnippetUI::ActionProperty *)*((void *)this + 5);
    }
    *uint64_t v5 = 26;
    unsigned int v26 = *((_DWORD *)v25 + 12);
    if (v26 > 0x7F)
    {
      v5[1] = v26 | 0x80;
      unsigned int v28 = v26 >> 7;
      if (v26 >> 14)
      {
        std::string v29 = v5 + 2;
        do
        {
          unsigned int v30 = v29;
          *v29++ = v28 | 0x80;
          unsigned int v31 = v28 >> 7;
          unsigned int v32 = v28 >> 14;
          v28 >>= 7;
        }
        while (v32);
        uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v30 + 2);
        *std::string v29 = v31;
      }
      else
      {
        v5[2] = v28;
        uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v26;
      uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v25, v27, a3, a4);
  }
LABEL_37:
  unsigned int v33 = (uint64_t *)*((void *)this + 2);
  if ((*((char *)v33 + 23) & 0x80000000) == 0)
  {
    uint64_t v34 = (const char *)*((unsigned __int8 *)v33 + 23);
    if (!*((unsigned char *)v33 + 23)) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  uint64_t v34 = (const char *)v33[1];
  if (v34)
  {
    unsigned int v33 = (uint64_t *)*v33;
LABEL_42:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v33, v34, 1, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Marquee.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 2), v5);
  }
LABEL_43:
  if (this != (SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_)
  {
    unsigned int v35 = (SnippetUI::VisualProperty *)*((void *)this + 6);
    if (v35)
    {
      if ((unint64_t)v5 >= *(void *)a3)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unsigned int v35 = (SnippetUI::VisualProperty *)*((void *)this + 6);
      }
      *uint64_t v5 = 42;
      unsigned int v36 = *((_DWORD *)v35 + 15);
      if (v36 > 0x7F)
      {
        v5[1] = v36 | 0x80;
        unsigned int v38 = v36 >> 7;
        if (v36 >> 14)
        {
          uint64_t v39 = v5 + 2;
          do
          {
            unsigned int v40 = v39;
            *v39++ = v38 | 0x80;
            unsigned int v41 = v38 >> 7;
            unsigned int v42 = v38 >> 14;
            v38 >>= 7;
          }
          while (v42);
          unsigned int v37 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
          *uint64_t v39 = v41;
        }
        else
        {
          v5[2] = v38;
          unsigned int v37 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v36;
        unsigned int v37 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v35, v37, a3, a4);
    }
  }
  uint64_t v43 = *((void *)this + 1);
  if ((v43 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v43 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::PrimaryHeader_Marquee::_InternalParse(SnippetUI::PrimaryHeader_Marquee *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v16 = a2;
  uint64_t v5 = (std::string **)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v16, *((_DWORD *)a3 + 23))) {
      return v16;
    }
    TagFallback = (google::protobuf::internal *)((char *)v16 + 1);
    uint64_t v9 = (char *)*(unsigned __int8 *)v16;
    if ((*(char *)v16 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v9 = (char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
      unint64_t v16 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, v9);
    unint64_t v16 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 3);
        if (v10) {
          goto LABEL_15;
        }
        unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 3) = v10;
        goto LABEL_14;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (!v10)
        {
          unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 4) = v10;
LABEL_14:
          TagFallback = v16;
        }
LABEL_15:
        int v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v10, TagFallback);
        goto LABEL_33;
      case 3u:
        if (v9 != 26) {
          goto LABEL_28;
        }
        int v12 = (SnippetUI::ActionProperty *)*((void *)this + 5);
        if (!v12)
        {
          int v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 5) = v12;
          TagFallback = v16;
        }
        int v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v12, TagFallback);
        goto LABEL_33;
      case 4u:
        if (v9 != 34) {
          goto LABEL_28;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        int v11 = google::protobuf::internal::InlineGreedyStringParserUTF8(*v5, (std::string::value_type *)TagFallback, (uint64_t)a3, (google::protobuf::internal *)"SnippetUI.PrimaryHeader_Marquee.component_name");
        goto LABEL_33;
      case 5u:
        if (v9 != 42) {
          goto LABEL_28;
        }
        BOOL v13 = (SnippetUI::VisualProperty *)*((void *)this + 6);
        if (!v13)
        {
          BOOL v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 6) = v13;
          TagFallback = v16;
        }
        int v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_33;
      default:
LABEL_28:
        if (v9) {
          BOOL v14 = (v9 & 7) == 4;
        }
        else {
          BOOL v14 = 1;
        }
        if (v14)
        {
          *((_DWORD *)a3 + 20) = v9 - 1;
          return TagFallback;
        }
        int v11 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, v6, TagFallback, a3, v7);
LABEL_33:
        unint64_t v16 = (google::protobuf::internal *)v11;
        if (v11) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::PrimaryHeader_Marquee::GetCachedSize(SnippetUI::PrimaryHeader_Marquee *this)
{
  return *((unsigned int *)this + 14);
}

char *SnippetUI::PrimaryHeader_Marquee::ByteSizeLong(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_)
  {
    uint64_t v6 = (SnippetUI::TextProperty *)*((void *)this + 3);
    if (v6)
    {
      char v7 = SnippetUI::TextProperty::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v8 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = SnippetUI::TextProperty::ByteSizeLong(v8);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v9[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v10 = (SnippetUI::ActionProperty *)*((void *)this + 5);
    if (v10)
    {
      int v11 = SnippetUI::ActionProperty::ByteSizeLong(v10);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v12 = (SnippetUI::VisualProperty *)*((void *)this + 6);
    if (v12)
    {
      BOOL v13 = SnippetUI::VisualProperty::ByteSizeLong(v12);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v13[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::PrimaryHeader_Marquee *)((char *)this + 8), v5, (_DWORD *)this + 14);
  }
  else
  {
    *((_DWORD *)this + 14) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::PrimaryHeader_Marquee::IsInitialized(SnippetUI::PrimaryHeader_Marquee *this)
{
  return 1;
}

SnippetUI::PrimaryHeader_Marquee *SnippetUI::PrimaryHeader_Marquee::New(SnippetUI::PrimaryHeader_Marquee *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Marquee>(a2);
}

SnippetUI::PrimaryHeader_Marquee *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Marquee>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::PrimaryHeader_Marquee *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x40uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Marquee>);
  }
  SnippetUI::PrimaryHeader_Marquee::PrimaryHeader_Marquee(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DB4C14(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C406AB77EA5);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::PrimaryHeader_Marquee>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::PrimaryHeader_Marquee *SnippetUI::PrimaryHeader_Marquee::New(SnippetUI::PrimaryHeader_Marquee *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::PrimaryHeader_Marquee>(0);
}

void SnippetUI::PrimaryHeader_Marquee::~PrimaryHeader_Marquee(SnippetUI::PrimaryHeader_Marquee *this)
{
  SnippetUI::PrimaryHeader_Marquee::~PrimaryHeader_Marquee(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(void *)this = &unk_1F211BBC8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    char v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::PrimaryHeader_Standard::InitAsDefaultInstance(SnippetUI::PrimaryHeader_Standard *this)
{
  qword_1EB690E38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E40 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690E48 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E50 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::PrimaryHeader_Standard::_Internal::text_1(SnippetUI::PrimaryHeader_Standard::_Internal *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  return *((void *)this + 3);
}

uint64_t SnippetUI::PrimaryHeader_Standard::_Internal::text_2(SnippetUI::PrimaryHeader_Standard::_Internal *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::PrimaryHeader_Standard::_Internal::text_3(SnippetUI::PrimaryHeader_Standard::_Internal *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::PrimaryHeader_Standard::_Internal::action(SnippetUI::PrimaryHeader_Standard::_Internal *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::PrimaryHeader_Standard::clear_text_1(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Standard::clear_text_2(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Standard::clear_text_3(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Standard::clear_action(SnippetUI::PrimaryHeader_Standard *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

SnippetUI::PrimaryHeader_Standard *SnippetUI::PrimaryHeader_Standard::PrimaryHeader_Standard(SnippetUI::PrimaryHeader_Standard *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  *(void *)this = &unk_1F211BB08;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 14) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Standard *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  if (a2 == (const SnippetUI::PrimaryHeader_Standard *)&SnippetUI::_PrimaryHeader_Standard_default_instance_)
  {
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  else
  {
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
  }
  *((void *)this + 6) = 0;
  return this;
}

void sub_1C5DB5114(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::PrimaryHeader_Standard::default_instance(SnippetUI::PrimaryHeader_Standard *this)
{
  if (atomic_load_explicit(scc_info_PrimaryHeader_Standard_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Standard_PrimaryHeader_2eproto);
  }
  return &SnippetUI::_PrimaryHeader_Standard_default_instance_;
}

void SnippetUI::PrimaryHeader_Standard::CopyFrom(SnippetUI::PrimaryHeader_Standard *this, const SnippetUI::PrimaryHeader_Standard *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Standard::Clear(this);
    SnippetUI::PrimaryHeader_Standard::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Standard::InternalSwap(SnippetUI::PrimaryHeader_Standard *this, SnippetUI::PrimaryHeader_Standard *a2)
{
  uint64_t v4 = (SnippetUI::PrimaryHeader_Standard *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v17;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  char v7 = (uint64_t *)*((void *)this + 2);
  unsigned int v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)char v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v13;
  uint64_t v14 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v14;
  uint64_t v15 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v15;
  uint64_t v16 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v16;
}

void SnippetUI::PrimaryHeader_Marquee::InitAsDefaultInstance(SnippetUI::PrimaryHeader_Marquee *this)
{
  qword_1EB690DB0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690DB8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690DC0 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690DC8 = &SnippetUI::_VisualProperty_default_instance_;
}

uint64_t SnippetUI::PrimaryHeader_Marquee::_Internal::text_1(SnippetUI::PrimaryHeader_Marquee::_Internal *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  return *((void *)this + 3);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::_Internal::text_2(SnippetUI::PrimaryHeader_Marquee::_Internal *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::_Internal::action(SnippetUI::PrimaryHeader_Marquee::_Internal *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::_Internal::thumbnail(SnippetUI::PrimaryHeader_Marquee::_Internal *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::PrimaryHeader_Marquee::clear_text_1(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Marquee::clear_text_2(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Marquee::clear_action(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Marquee::clear_thumbnail(SnippetUI::PrimaryHeader_Marquee *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

SnippetUI::PrimaryHeader_Marquee *SnippetUI::PrimaryHeader_Marquee::PrimaryHeader_Marquee(SnippetUI::PrimaryHeader_Marquee *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  *(void *)this = &unk_1F211BBC8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 14) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Marquee *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  if (a2 == (const SnippetUI::PrimaryHeader_Marquee *)&SnippetUI::_PrimaryHeader_Marquee_default_instance_)
  {
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  else
  {
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
  }
  *((void *)this + 6) = 0;
  return this;
}

void sub_1C5DB565C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::PrimaryHeader_Marquee::default_instance(SnippetUI::PrimaryHeader_Marquee *this)
{
  if (atomic_load_explicit(scc_info_PrimaryHeader_Marquee_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Marquee_PrimaryHeader_2eproto);
  }
  return &SnippetUI::_PrimaryHeader_Marquee_default_instance_;
}

void SnippetUI::PrimaryHeader_Marquee::CopyFrom(SnippetUI::PrimaryHeader_Marquee *this, const SnippetUI::PrimaryHeader_Marquee *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Marquee::Clear(this);
    SnippetUI::PrimaryHeader_Marquee::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Marquee::InternalSwap(SnippetUI::PrimaryHeader_Marquee *this, SnippetUI::PrimaryHeader_Marquee *a2)
{
  uint64_t v4 = (SnippetUI::PrimaryHeader_Marquee *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v17;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  char v7 = (uint64_t *)*((void *)this + 2);
  unsigned int v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)char v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v13;
  uint64_t v14 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v14;
  uint64_t v15 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v15;
  uint64_t v16 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v16;
}

void SnippetUI::PrimaryHeader_Rich::InitAsDefaultInstance(SnippetUI::PrimaryHeader_Rich *this)
{
  qword_1EB68FBB0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FBB8 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FBC0 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FBC8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FBD0 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FBD8 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::text_1(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 3);
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::text_2(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::text_3(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::text_4(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::thumbnail(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::PrimaryHeader_Rich::_Internal::action(SnippetUI::PrimaryHeader_Rich::_Internal *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_text_1(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_text_2(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_text_3(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_text_4(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_thumbnail(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::PrimaryHeader_Rich::clear_action(SnippetUI::PrimaryHeader_Rich *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

SnippetUI::PrimaryHeader_Rich *SnippetUI::PrimaryHeader_Rich::PrimaryHeader_Rich(SnippetUI::PrimaryHeader_Rich *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  *(void *)this = &unk_1F211BC88;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 18) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::PrimaryHeader_Rich *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  if (a2 == (const SnippetUI::PrimaryHeader_Rich *)&SnippetUI::_PrimaryHeader_Rich_default_instance_)
  {
    *((void *)this + 7) = 0;
    *(_OWORD *)((char *)this + 40) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
  }
  else
  {
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
  }
  *((void *)this + 8) = 0;
  return this;
}

void sub_1C5DB5CD8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::PrimaryHeader_Rich::default_instance(SnippetUI::PrimaryHeader_Rich *this)
{
  if (atomic_load_explicit(scc_info_PrimaryHeader_Rich_PrimaryHeader_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PrimaryHeader_Rich_PrimaryHeader_2eproto);
  }
  return &SnippetUI::_PrimaryHeader_Rich_default_instance_;
}

void SnippetUI::PrimaryHeader_Rich::CopyFrom(SnippetUI::PrimaryHeader_Rich *this, const SnippetUI::PrimaryHeader_Rich *a2)
{
  if (a2 != this)
  {
    SnippetUI::PrimaryHeader_Rich::Clear(this);
    SnippetUI::PrimaryHeader_Rich::MergeFrom(this, a2);
  }
}

void SnippetUI::PrimaryHeader_Rich::InternalSwap(SnippetUI::PrimaryHeader_Rich *this, SnippetUI::PrimaryHeader_Rich *a2)
{
  uint64_t v4 = (SnippetUI::PrimaryHeader_Rich *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v19;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  char v7 = (uint64_t *)*((void *)this + 2);
  unsigned int v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)char v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v13;
  uint64_t v14 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v14;
  uint64_t v15 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v15;
  uint64_t v16 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v16;
  uint64_t v17 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v17;
  uint64_t v18 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v18;
}

void *YAML::Parser::Parser(void *this)
{
  *this = 0;
  this[1] = 0;
  return this;
}

{
  *this = 0;
  this[1] = 0;
  return this;
}

void YAML::Parser::Parser(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  YAML::Parser::Load();
}

{
  *a1 = 0;
  a1[1] = 0;
  YAML::Parser::Load();
}

void sub_1C5DB5F50(_Unwind_Exception *a1)
{
  YAML::Parser::~Parser(v1);
  _Unwind_Resume(a1);
}

void YAML::Parser::Load()
{
}

void sub_1C5DB6050(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10F0C409A6F53B6);
  _Unwind_Resume(a1);
}

void YAML::Parser::~Parser(YAML::Parser *this)
{
}

{
  std::unique_ptr<YAML::Directives>::reset[abi:ne180100]((uint64_t *)this + 1, 0);
  std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0);
}

uint64_t *std::unique_ptr<YAML::Directives>::reset[abi:ne180100](uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  char *result = a2;
  if (v2)
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(v2 + 24));
    JUMPOUT(0x1C8796D70);
  }
  return result;
}

YAML::Scanner *std::unique_ptr<YAML::Scanner>::reset[abi:ne180100](YAML::Scanner **a1, YAML::Scanner *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    YAML::Scanner::~Scanner(result);
    JUMPOUT(0x1C8796D70);
  }
  return result;
}

void sub_1C5DB618C(_Unwind_Exception *a1)
{
  YAML::Parser::~Parser(v1);
  _Unwind_Resume(a1);
}

BOOL YAML::Parser::operator BOOL(YAML::Scanner **a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return 0;
  }
  YAML::Scanner::EnsureTokensInQueue(*a1);
  return *((void *)v1 + 17) != 0;
}

uint64_t YAML::Parser::HandleNextDocument(YAML::Scanner **a1)
{
  if (*a1)
  {
    YAML::Parser::ParseDirectives(a1);
    uint64_t v2 = *a1;
    YAML::Scanner::EnsureTokensInQueue(*a1);
    if (*((void *)v2 + 17))
    {
      long long v4 = *(_OWORD *)a1;
      operator new();
    }
  }
  return 0;
}

void sub_1C5DB62DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char *a13)
{
  std::__tree<std::string>::destroy(a13);
  std::unique_ptr<YAML::CollectionStack>::reset[abi:ne180100](v13);
  _Unwind_Resume(a1);
}

void YAML::Parser::ParseDirectives(YAML::Scanner **this)
{
  for (char i = 0; ; char i = 1)
  {
    uint64_t v3 = *this;
    YAML::Scanner::EnsureTokensInQueue(*this);
    if (!*((void *)v3 + 17)) {
      break;
    }
    long long v4 = (const YAML::Token *)YAML::Scanner::peek(*this);
    if (*((_DWORD *)v4 + 1)) {
      break;
    }
    if ((i & 1) == 0) {
      operator new();
    }
    YAML::Parser::HandleDirective((std::string *)this, v4);
    YAML::Scanner::pop(*this);
  }
}

std::string *YAML::Parser::HandleDirective(std::string *this, const YAML::Token *a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)a2 + 24);
  if (*((char *)a2 + 47) < 0)
  {
    uint64_t v4 = *((void *)a2 + 4);
    if (v4 != 3)
    {
      if (v4 != 4) {
        return this;
      }
      uint64_t v2 = *(unsigned __int16 **)v2;
      goto LABEL_8;
    }
    uint64_t v2 = *(unsigned __int16 **)v2;
  }
  else
  {
    int v3 = *((unsigned __int8 *)a2 + 47);
    if (v3 != 3)
    {
      if (v3 != 4) {
        return this;
      }
LABEL_8:
      if (*(_DWORD *)v2 == 1280131417) {
        return (std::string *)YAML::Parser::HandleYamlDirective((YAML::Parser *)this, a2);
      }
      return this;
    }
  }
  int v5 = *v2;
  int v6 = *((unsigned __int8 *)v2 + 2);
  if (v5 == 16724 && v6 == 71) {
    return YAML::Parser::HandleTagDirective((YAML::Parser *)this, a2);
  }
  return this;
}

uint64_t YAML::Parser::HandleYamlDirective(YAML::Parser *this, const YAML::Token *a2)
{
  uint64_t v4 = (char *)a2 + 48;
  int v3 = (const std::string *)*((void *)a2 + 6);
  if (*((void *)v4 + 1) - (void)v3 != 24)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v22, "YAML directives must have exactly one argument");
    YAML::Exception::Exception((uint64_t)exception, (_DWORD *)a2 + 2, &v22);
    void *exception = &unk_1F2127238;
  }
  if (!**((unsigned char **)this + 1))
  {
    uint64_t v17 = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v22, "repeated YAML directive");
    YAML::Exception::Exception((uint64_t)v17, (_DWORD *)a2 + 2, &v22);
    *uint64_t v17 = &unk_1F2127238;
  }
  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::basic_stringstream[abi:ne180100]((uint64_t)&v22, v3);
  MEMORY[0x1C8796A90](&v22, *((void *)this + 1) + 4);
  std::istream::get();
  MEMORY[0x1C8796A90](&v22, *((void *)this + 1) + 8);
  if ((v25[*(void *)(v22 - 24)] & 5) != 0 || std::istream::peek() != -1)
  {
    uint64_t v9 = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v19, "bad YAML version: ");
    uint64_t v10 = *((void *)a2 + 6);
    int v11 = *(char *)(v10 + 23);
    if (v11 >= 0) {
      uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 6);
    }
    else {
      uint64_t v12 = *(const std::string::value_type **)v10;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      std::string::size_type v13 = *(void *)(v10 + 8);
    }
    uint64_t v14 = std::string::append(&v19, v12, v13);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    std::string::size_type v21 = v14->__r_.__value_.__r.__words[2];
    long long v20 = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    YAML::Exception::Exception((uint64_t)v9, (_DWORD *)a2 + 2, &v20);
    *uint64_t v9 = &unk_1F2127238;
  }
  uint64_t v6 = *((void *)this + 1);
  if (*(int *)(v6 + 4) >= 2)
  {
    uint64_t v18 = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v20, "YAML major version too large");
    YAML::Exception::Exception((uint64_t)v18, (_DWORD *)a2 + 2, &v20);
    *uint64_t v18 = &unk_1F2127238;
  }
  *(unsigned char *)uint64_t v6 = 0;
  *(void *)&long long v22 = *MEMORY[0x1E4FBA408];
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)&v22 + *(void *)(v22 - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  uint64_t v23 = v7;
  uint64_t v24 = MEMORY[0x1E4FBA470] + 16;
  if (v27 < 0) {
    operator delete(__p);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x1C8796CC0](&v28);
}

void sub_1C5DB6830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((v28 & 1) == 0)
    {
LABEL_6:
      std::basic_stringstream<char,std::char_traits<char>,std::allocator<char>>::~basic_stringstream((uint64_t)&a22);
      _Unwind_Resume(a1);
    }
  }
  else if (!v28)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v27);
  goto LABEL_6;
}

std::string *YAML::Parser::HandleTagDirective(YAML::Parser *this, const YAML::Token *a2)
{
  int v3 = (std::string *)*((void *)a2 + 6);
  if (*((void *)a2 + 7) - (void)v3 != 48)
  {
    exception = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v11, "TAG directives must have exactly two arguments");
    YAML::Exception::Exception((uint64_t)exception, (_DWORD *)a2 + 2, &v11);
    void *exception = &unk_1F2127238;
  }
  uint64_t v5 = std::__tree<std::string>::find<std::string>(*((void *)this + 1) + 16, *((const void ***)a2 + 6));
  uint64_t v6 = *((void *)this + 1);
  if (v6 + 24 != v5)
  {
    uint64_t v10 = __cxa_allocate_exception(0x38uLL);
    std::string::basic_string[abi:ne180100]<0>(&v11, "repeated TAG directive");
    YAML::Exception::Exception((uint64_t)v10, (_DWORD *)a2 + 2, &v11);
    *uint64_t v10 = &unk_1F2127238;
  }
  *(void *)&long long v11 = v3;
  uint64_t v7 = (std::string *)(std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>((uint64_t **)(v6 + 16), (const void **)&v3->__r_.__value_.__l.__data_, (long long **)&v11)+ 7);
  return std::string::operator=(v7, v3 + 1);
}

void sub_1C5DB6A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v16) {
    __cxa_free_exception(v15);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Parser::PrintTokens(YAML::Scanner **a1, void *a2)
{
  v49[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  if (*a1)
  {
    while (1)
    {
      YAML::Scanner::EnsureTokensInQueue(v2);
      if (!*((void *)v2 + 17)) {
        break;
      }
      unint64_t v5 = YAML::Scanner::peek(*a1);
      std::string::basic_string[abi:ne180100]<0>(v30, "DIRECTIVE");
      std::string::basic_string[abi:ne180100]<0>(v31, "DOC_START");
      std::string::basic_string[abi:ne180100]<0>(v32, "DOC_END");
      std::string::basic_string[abi:ne180100]<0>(v33, "BLOCK_SEQ_START");
      std::string::basic_string[abi:ne180100]<0>(v34, "BLOCK_MAP_START");
      std::string::basic_string[abi:ne180100]<0>(v35, "BLOCK_SEQ_END");
      std::string::basic_string[abi:ne180100]<0>(v36, "BLOCK_MAP_END");
      std::string::basic_string[abi:ne180100]<0>(v37, "BLOCK_ENTRY");
      std::string::basic_string[abi:ne180100]<0>(v38, "FLOW_SEQ_START");
      std::string::basic_string[abi:ne180100]<0>(v39, "FLOW_MAP_START");
      std::string::basic_string[abi:ne180100]<0>(v40, "FLOW_SEQ_END");
      std::string::basic_string[abi:ne180100]<0>(v41, "FLOW_MAP_END");
      std::string::basic_string[abi:ne180100]<0>(v42, "FLOW_MAP_COMPACT");
      std::string::basic_string[abi:ne180100]<0>(v43, "FLOW_ENTRY");
      std::string::basic_string[abi:ne180100]<0>(v44, "KEY");
      std::string::basic_string[abi:ne180100]<0>(v45, "VALUE");
      std::string::basic_string[abi:ne180100]<0>(v46, "ANCHOR");
      std::string::basic_string[abi:ne180100]<0>(v47, "ALIAS");
      std::string::basic_string[abi:ne180100]<0>(v48, "TAG");
      std::string::basic_string[abi:ne180100]<0>(v49, "SCALAR");
      uint64_t v6 = &v30[3 * *(unsigned int *)(v5 + 4)];
      int v7 = *((char *)v6 + 23);
      if (v7 >= 0) {
        unsigned int v8 = &v30[3 * *(unsigned int *)(v5 + 4)];
      }
      else {
        unsigned int v8 = (void *)*v6;
      }
      if (v7 >= 0) {
        uint64_t v9 = *((unsigned __int8 *)v6 + 23);
      }
      else {
        uint64_t v9 = v6[1];
      }
      uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a2, (uint64_t)v8, v9);
      std::string::basic_string[abi:ne180100]<0>(&__p, ": ");
      if ((v29 & 0x80u) == 0) {
        uint64_t p_p = &__p;
      }
      else {
        uint64_t p_p = __p;
      }
      if ((v29 & 0x80u) == 0) {
        uint64_t v12 = v29;
      }
      else {
        uint64_t v12 = v28;
      }
      std::string::size_type v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)p_p, v12);
      int v14 = *(char *)(v5 + 47);
      if (v14 >= 0) {
        uint64_t v15 = v5 + 24;
      }
      else {
        uint64_t v15 = *(void *)(v5 + 24);
      }
      if (v14 >= 0) {
        uint64_t v16 = *(unsigned __int8 *)(v5 + 47);
      }
      else {
        uint64_t v16 = *(void *)(v5 + 32);
      }
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, v15, v16);
      if ((char)v29 < 0) {
        operator delete(__p);
      }
      if (*(void *)(v5 + 56) != *(void *)(v5 + 48))
      {
        uint64_t v17 = 0;
        unint64_t v18 = 0;
        do
        {
          std::string::basic_string[abi:ne180100]<0>(&__p, " ");
          if ((v29 & 0x80u) == 0) {
            std::string v19 = &__p;
          }
          else {
            std::string v19 = __p;
          }
          if ((v29 & 0x80u) == 0) {
            uint64_t v20 = v29;
          }
          else {
            uint64_t v20 = v28;
          }
          std::string::size_type v21 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a2, (uint64_t)v19, v20);
          uint64_t v22 = *(void *)(v5 + 48) + v17;
          int v23 = *(char *)(v22 + 23);
          if (v23 >= 0) {
            uint64_t v24 = *(void *)(v5 + 48) + v17;
          }
          else {
            uint64_t v24 = *(void *)v22;
          }
          if (v23 >= 0) {
            uint64_t v25 = *(unsigned __int8 *)(v22 + 23);
          }
          else {
            uint64_t v25 = *(void *)(v22 + 8);
          }
          std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, v24, v25);
          if ((char)v29 < 0) {
            operator delete(__p);
          }
          ++v18;
          v17 += 24;
        }
        while (v18 < 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v5 + 56) - *(void *)(v5 + 48)) >> 3));
      }
      uint64_t v26 = 60;
      do
      {
        if (SHIBYTE(v30[v26 - 1]) < 0) {
          operator delete(*(void **)((char *)&__p + v26 * 8));
        }
        v26 -= 3;
      }
      while (v26 * 8);
      std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a2, (uint64_t)"\n", 1);
      YAML::Scanner::pop(*a1);
      uint64_t v2 = *a1;
    }
  }
}

void sub_1C5DB6EC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  uint64_t v35 = 480;
  while (1)
  {
    if (*(&a34 + v35 - 1) < 0) {
      operator delete(*(void **)(&a34 + v35 - 24));
    }
    v35 -= 24;
    if (!v35) {
      _Unwind_Resume(exception_object);
    }
  }
}

double siri::dialogengine::RoundToInteger(siri::dialogengine *this, double a2)
{
  return (double)(int)llround(a2);
}

double siri::dialogengine::RoundToNearestTenth(siri::dialogengine *this, double a2)
{
  return round(a2 * 10.0) / 10.0;
}

double siri::dialogengine::RoundToNearestHundredth(siri::dialogengine *this, double a2)
{
  return round(a2 * 100.0) / 100.0;
}

void siri::dialogengine::DialogDuration::years(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 31556952;
  std::string::basic_string[abi:ne180100]<0>(&__p, "years");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB7148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB71C4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB71BCLL);
}

uint64_t siri::dialogengine::GetDurationForRequest(siri::dialogengine *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "secs");
  RequiredNumberuint64_t Parameter = (double *)siri::dialogengine::GetRequiredNumberParameter((const void **)__p, (uint64_t)this);
  unint64_t v5 = RequiredNumberParameter;
  if (v8 < 0)
  {
    operator delete(__p[0]);
    if (v5) {
      return (uint64_t)v5[9];
    }
  }
  else if (RequiredNumberParameter)
  {
    return (uint64_t)v5[9];
  }
  return 0;
}

void sub_1C5DB724C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::GetUnitAndAmount(int a1, int a2, siri::dialogengine *this)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  siri::dialogengine::CreateJSONInt64Val(this);
}

void sub_1C5DB739C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::AddFractionalPeriodParameters(int a1, _DWORD *a2, uint64_t a3)
{
  if (!a3) {
    return;
  }
  siri::dialogengine::UnitQuantities::UnitQuantities(&__p, a3, 0);
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t v5 = *((void *)a2 + 1);
    if (v5 <= 13)
    {
      if (v5 != 7)
      {
        if (v5 != 12) {
          return;
        }
        a2 = *(_DWORD **)a2;
        goto LABEL_11;
      }
      if (**(_DWORD **)a2 != 1868785011 || *(_DWORD *)(*(void *)a2 + 3) != 1935961711) {
        return;
      }
LABEL_60:
      if (v18 == 30 || !v18) {
        goto LABEL_74;
      }
      return;
    }
    if (v5 != 14)
    {
      if (v5 != 19) {
        return;
      }
      BOOL v9 = **(void **)a2 == 0x6E694D7372756F68 && *(void *)(*(void *)a2 + 8) == 0x6F63655373657475;
      if (!v9 || *(void *)(*(void *)a2 + 11) != 0x73646E6F63655373) {
        return;
      }
LABEL_40:
      if (v17 != 30 && v17)
      {
LABEL_71:
        char v15 = 0;
        goto LABEL_72;
      }
LABEL_70:
      char v15 = 1;
LABEL_72:
      if (v18 == 30 || !v18 || (v15 & 1) != 0) {
        goto LABEL_74;
      }
      return;
    }
    if (**(void **)a2 != 0x53736574756E696DLL || *(void *)(*(void *)a2 + 6) != 0x73646E6F63655373) {
      return;
    }
LABEL_68:
    if (v17 != 30 && v17) {
      goto LABEL_71;
    }
    goto LABEL_70;
  }
  unsigned int v4 = *((unsigned __int8 *)a2 + 23);
  if (v4 > 0xD)
  {
    if (v4 != 14)
    {
      if (v4 != 19) {
        return;
      }
      BOOL v7 = *(void *)a2 == 0x6E694D7372756F68 && *((void *)a2 + 1) == 0x6F63655373657475;
      if (!v7 || *(void *)((char *)a2 + 11) != 0x73646E6F63655373) {
        return;
      }
      goto LABEL_40;
    }
    if (*(void *)a2 != 0x53736574756E696DLL || *(void *)((char *)a2 + 6) != 0x73646E6F63655373) {
      return;
    }
    goto LABEL_68;
  }
  if (v4 == 7)
  {
    if (*a2 != 1868785011 || *(_DWORD *)((char *)a2 + 3) != 1935961711) {
      return;
    }
    goto LABEL_60;
  }
  if (v4 != 12) {
    return;
  }
LABEL_11:
  BOOL v6 = *(void *)a2 == 0x6E694D7372756F68 && a2[2] == 1936028789;
  if (v6 && (v17 == 30 || !v17)) {
LABEL_74:
  }
    siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)1);
}

void sub_1C5DB7808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void *siri::dialogengine::UnitQuantities::UnitQuantities(void *this, uint64_t a2, int a3)
{
  *this = a2;
  this[1] = a2 / 31556952;
  this[2] = a2 % 31556952 / 2629746;
  this[3] = 0;
  uint64_t v3 = a2 % 31556952 % 2629746;
  if (a3)
  {
    this[3] = v3 / 604800;
    v3 %= 604800;
  }
  uint64_t v4 = v3 / 86400;
  uint64_t v5 = v3 % 86400;
  this[4] = v4;
  this[5] = v5 / 3600;
  v5 %= 3600;
  this[6] = v5 / 60;
  this[7] = v5 % 60;
  return this;
}

void siri::dialogengine::DialogDuration::months(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 2629746;
  std::string::basic_string[abi:ne180100]<0>(&__p, "months");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB7B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB7B94(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB7B8CLL);
}

void siri::dialogengine::DialogDuration::weeks(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 604800;
  std::string::basic_string[abi:ne180100]<0>(&__p, "weeks");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB7D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB7DEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB7DE4);
}

void siri::dialogengine::DialogDuration::days(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 86400;
  std::string::basic_string[abi:ne180100]<0>(&__p, "days");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB7FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB8044(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB803CLL);
}

void siri::dialogengine::DialogDuration::hours(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 3600;
  std::string::basic_string[abi:ne180100]<0>(&__p, "hours");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB8220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB829C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB8294);
}

void siri::dialogengine::DialogDuration::minutes(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  uint64_t v4 = siri::dialogengine::GetDurationForRequest(a2, a2, a3) / 60;
  std::string::basic_string[abi:ne180100]<0>(&__p, "minutes");
  siri::dialogengine::GetUnitAndAmount((int)v6, v3, (siri::dialogengine *)v4);
}

void sub_1C5DB8474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  MEMORY[0x1C8796D70](v31, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a31);
  _Unwind_Resume(a1);
}

void sub_1C5DB84F0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  JUMPOUT(0x1C5DB84E8);
}

void siri::dialogengine::DialogDuration::seconds(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)this;
  DurationForRequest = (siri::dialogengine *)siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::executeSeconds((int)v5, v3, DurationForRequest);
}

void sub_1C5DB868C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  MEMORY[0x1C8796D70](v29, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a29);
  _Unwind_Resume(a1);
}

void siri::dialogengine::executeSeconds(int a1, int a2, siri::dialogengine *a3)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, "seconds");
  siri::dialogengine::GetUnitAndAmount(a1, a2, a3);
}

void sub_1C5DB877C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::DialogDuration::valueInYears(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB8824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInMonths(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB88EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInWeeks(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB89B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInDays(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB8A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInHours(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB8B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInMinutes(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB8C0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::valueInSeconds(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5DB8CC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v15, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::duration(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t v63 = 0;
  v64 = 0;
  uint64_t v65 = 0;
  uint64_t DurationForRequest = siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::UnitQuantities::UnitQuantities(&v55, DurationForRequest, 1);
  BOOL v6 = v56;
  if (v56)
  {
    std::string::basic_string[abi:ne180100]<0>(&v53, "years");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v6);
  }
  BOOL v7 = v57;
  if (v57)
  {
    std::string::basic_string[abi:ne180100]<0>(&v52, "months");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v7);
  }
  char v8 = v58;
  if (v58)
  {
    std::string::basic_string[abi:ne180100]<0>(&v51, "weeks");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v8);
  }
  BOOL v9 = v59;
  if (v59)
  {
    std::string::basic_string[abi:ne180100]<0>(&v50, "days");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v9);
  }
  uint64_t v10 = v60;
  if (v60)
  {
    std::string::basic_string[abi:ne180100]<0>(&v49, "hours");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v10);
  }
  long long v11 = v61;
  if (v61)
  {
    std::string::basic_string[abi:ne180100]<0>(&v48, "minutes");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v11);
  }
  uint64_t v12 = v62;
  if (v62)
  {
    std::string::basic_string[abi:ne180100]<0>(&v47, "seconds");
    siri::dialogengine::GetUnitAndAmount((int)&v54, (int)this, v12);
  }
  memset(&v54, 0, sizeof(v54));
  memset(&v66, 0, sizeof(v66));
  siri::dialogengine::Context::GetLocale(this, v5, (uint64_t)&v42);
  siri::dialogengine::GetLocaleLanguage(&v43);
  std::string::basic_string[abi:ne180100]<0>(v40, "ja");
  if (siri::dialogengine::StringsEqual((uint64_t)&v43, (uint64_t)v40)) {
    std::string::size_type v13 = "";
  }
  else {
    std::string::size_type v13 = ", ";
  }
  std::string::basic_string[abi:ne180100]<0>(&v44, v13);
  if (v41 < 0) {
    operator delete(v40[0]);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  int v14 = v63;
  if (v64 == v63) {
LABEL_89:
  }
    operator new();
  uint64_t v15 = 0;
  unint64_t v16 = 0;
  while (1)
  {
    if (v16)
    {
      uint64_t v17 = (long long *)((char *)v14 + v15);
      if (*((char *)v17 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v42, *(const std::string::value_type **)v17, *((void *)v17 + 1));
      }
      else
      {
        long long v18 = *v17;
        v42.__r_.__value_.__r.__words[2] = *((void *)v17 + 2);
        *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v18;
      }
      if ((v46 & 0x80u) == 0) {
        uint64_t v20 = (const std::string::value_type *)&v44;
      }
      else {
        uint64_t v20 = (const std::string::value_type *)v44;
      }
      if ((v46 & 0x80u) == 0) {
        std::string::size_type v21 = v46;
      }
      else {
        std::string::size_type v21 = v45;
      }
      uint64_t v22 = std::string::insert(&v42, 0, v20, v21);
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v24 = &v43;
      }
      else {
        uint64_t v24 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v43.__r_.__value_.__l.__size_;
      }
      std::string::append(&v54, (const std::string::value_type *)v24, size);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      uint64_t v26 = (uint64_t)v63 + v15;
      char v27 = (const std::string::value_type **)((char *)v63 + v15 + 24);
      if (*((char *)v63 + v15 + 47) < 0)
      {
        std::string::__init_copy_ctor_external(&v42, *v27, *(void *)(v26 + 32));
      }
      else
      {
        long long v28 = *(_OWORD *)v27;
        v42.__r_.__value_.__r.__words[2] = *(void *)(v26 + 40);
        *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v28;
      }
      if ((v46 & 0x80u) == 0) {
        uint64_t v29 = (const std::string::value_type *)&v44;
      }
      else {
        uint64_t v29 = (const std::string::value_type *)v44;
      }
      if ((v46 & 0x80u) == 0) {
        std::string::size_type v30 = v46;
      }
      else {
        std::string::size_type v30 = v45;
      }
      uint64_t v31 = std::string::insert(&v42, 0, v29, v30);
      long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v33 = &v43;
      }
      else {
        unsigned int v33 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v34 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v34 = v43.__r_.__value_.__l.__size_;
      }
      std::string::append(&v66, (const std::string::value_type *)v33, v34);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v42.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_88;
      }
      uint64_t v35 = (void *)v42.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (*((char *)v14 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v43, *(const std::string::value_type **)v14, *((void *)v14 + 1));
      }
      else
      {
        long long v19 = *v14;
        v43.__r_.__value_.__r.__words[2] = *((void *)v14 + 2);
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v19;
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v36 = &v43;
      }
      else {
        unsigned int v36 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v37 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v37 = v43.__r_.__value_.__l.__size_;
      }
      std::string::append(&v54, (const std::string::value_type *)v36, v37);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (*((char *)v63 + 47) < 0) {
        std::string::__init_copy_ctor_external(&v43, *((const std::string::value_type **)v63 + 3), *((void *)v63 + 4));
      }
      else {
        std::string v43 = *(std::string *)((unsigned char *)v63 + 1);
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v38 = &v43;
      }
      else {
        unsigned int v38 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v39 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v39 = v43.__r_.__value_.__l.__size_;
      }
      std::string::append(&v66, (const std::string::value_type *)v38, v39);
      if ((SHIBYTE(v43.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_88;
      }
      uint64_t v35 = (void *)v43.__r_.__value_.__r.__words[0];
    }
    operator delete(v35);
LABEL_88:
    ++v16;
    int v14 = v63;
    v15 += 168;
    if (0xCF3CF3CF3CF3CF3DLL * (((char *)v64 - (char *)v63) >> 3) <= v16) {
      goto LABEL_89;
    }
  }
}

void sub_1C5DB9BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  *(void *)(v48 - 104) = v47;
  siri::dialogengine::SpeakableString::~SpeakableString((void **)&a47);
  if (a28 < 0) {
    operator delete(__p);
  }
  a47 = v48 - 112;
  std::vector<siri::dialogengine::SpeakableString>::__destroy_vector::operator()[abi:ne180100]((void ***)&a47);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::descriptivePeriod(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t DurationForRequest = siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::UnitQuantities::UnitQuantities(v5, DurationForRequest, 0);
  siri::dialogengine::descriptivePeriodInternal((uint64_t)this, (uint64_t)v5);
}

void siri::dialogengine::descriptivePeriodInternal(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  memset(&v21, 0, sizeof(v21));
  memset(v20, 0, sizeof(v20));
  memset(v19, 0, sizeof(v19));
  memset(v18, 0, sizeof(v18));
  uint64_t v3 = *(void *)a2;
  if (*(uint64_t *)a2 >= 86400)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v24 = &v25;
    uint64_t v4 = *(siri::dialogengine **)(a2 + 8);
    uint64_t v5 = *(siri::dialogengine **)(a2 + 16);
    BOOL v7 = *(siri::dialogengine **)(a2 + 32);
    BOOL v6 = *(siri::dialogengine **)(a2 + 40);
    BOOL v9 = *(siri::dialogengine **)(a2 + 48);
    char v8 = *(siri::dialogengine **)(a2 + 56);
    if (v4) {
      siri::dialogengine::CreateJSONInt64Val(v4);
    }
    if (v5) {
      siri::dialogengine::CreateJSONInt64Val(v5);
    }
    if (v7) {
      siri::dialogengine::CreateJSONInt64Val(v7);
    }
    if (v6) {
      siri::dialogengine::CreateJSONInt64Val(v6);
    }
    if (v9) {
      siri::dialogengine::CreateJSONInt64Val(v9);
    }
    if (v8) {
      siri::dialogengine::CreateJSONInt64Val(v8);
    }
    std::string::basic_string[abi:ne180100]<0>(&v22, "dateTime#defaultPeriod");
    siri::dialogengine::ExecuteSharedCat(a1, (uint64_t)&__str);
    if (v23 < 0) {
      operator delete(v22);
    }
    std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(v25);
    std::string::operator=(v18, &__str);
    std::string::operator=(&v18[1], &v12);
    std::string::operator=(v19, &v13);
    std::string::operator=(&v19[1], &v14);
    std::string::operator=(v20, &v15);
    std::string::operator=(&v20[1], &v16);
    std::string::operator=(&v21, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v12.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    operator new();
  }
  if (v3 >= 3600)
  {
    HIDWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = -286331153 * v3;
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = -286331153 * v3;
    if ((v10 >> 2) > 0x4444444)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v24 = &v25;
      siri::dialogengine::CreateJSONInt64Val(*(siri::dialogengine **)(a2 + 40));
    }
    siri::dialogengine::CreateJSONBoolVal(0);
  }
  if (v3 >= 60) {
    siri::dialogengine::CreateJSONBoolVal(0);
  }
  siri::dialogengine::executeSeconds((int)&__str, a1, (siri::dialogengine *)v3);
}

void sub_1C5DBAB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34)
{
  if (*(char *)(v34 - 145) < 0) {
    operator delete(*(void **)(v34 - 168));
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*(void **)(v34 - 184));
  siri::dialogengine::SpeakableString::~SpeakableString(&a34);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::descriptiveApproximateMinutesPeriod(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t DurationForRequest = siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::UnitQuantities::UnitQuantities(v6, DurationForRequest, 0);
  if (*((uint64_t *)&v7 + 1) >= 1)
  {
    siri::dialogengine::UnitQuantities::UnitQuantities(v5, *(void *)&v6[0] - *((void *)&v7 + 1) + 60, 0);
    v6[0] = v5[0];
    v6[1] = v5[1];
    v6[2] = v5[2];
    long long v7 = v5[3];
  }
  siri::dialogengine::descriptivePeriodInternal((uint64_t)this, (uint64_t)v6);
}

void siri::dialogengine::DialogDuration::descriptiveFractionalUnitsPeriod(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t DurationForRequest = siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::UnitQuantities::UnitQuantities(v5, DurationForRequest, 0);
  siri::dialogengine::descriptivePeriodInternal((uint64_t)this, (uint64_t)v5);
}

void siri::dialogengine::DialogDuration::hoursMinutes(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)1);
}

void sub_1C5DBB204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  MEMORY[0x1C8796D70](v37, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a32);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a30);
  _Unwind_Resume(a1);
}

void sub_1C5DBB2E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::~pair((uint64_t)va);
  JUMPOUT(0x1C5DBB2DCLL);
}

void sub_1C5DBB2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  JUMPOUT(0x1C5DBB2DCLL);
}

void sub_1C5DBB308()
{
}

void siri::dialogengine::DialogDuration::hoursMinutesAbbreviated(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  siri::dialogengine::GetDurationForRequest(a2, a2, a3);
  siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)1);
}

void sub_1C5DBB6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  MEMORY[0x1C8796D70](v37, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a32);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a30);
  _Unwind_Resume(a1);
}

void sub_1C5DBB78C()
{
  for (uint64_t i = 40; i != -40; i -= 40)
    std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::~pair(v0 + i);
  JUMPOUT(0x1C5DBB784);
}

void sub_1C5DBB7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  if (&a23 != v23)
  {
    for (uint64_t i = 0; i != -40; i -= 40)
      std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::~pair((uint64_t)(&a23 + i));
  }
  JUMPOUT(0x1C5DBB784);
}

void sub_1C5DBB7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  JUMPOUT(0x1C5DBB784);
}

void sub_1C5DBB80C()
{
}

void siri::dialogengine::DialogDuration::adjectivePeriod(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::GetAdjectivePeriod(int a1, siri::dialogengine *this, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)a3;
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t DurationForRequest = siri::dialogengine::GetDurationForRequest(this, this, a3);
  uint64_t v13 = 0;
  long long v11 = 0u;
  *(_OWORD *)std::string v12 = 0u;
  *(_OWORD *)BOOL v9 = 0u;
  *(_OWORD *)unint64_t v10 = 0u;
  *(_OWORD *)long long v7 = 0u;
  long long v8 = 0u;
  *(_OWORD *)BOOL v6 = 0u;
  memset(v5, 0, sizeof(v5));
  if ((unint64_t)(DurationForRequest + 3599) < 0x1C1F) {
    siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)(v3 != 0));
  }
  siri::dialogengine::CreateJSONInt64Val((siri::dialogengine *)(DurationForRequest / 3600));
}

void sub_1C5DBBEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, std::__shared_weak_count *a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27)
{
  if (*(char *)(v27 - 201) < 0) {
    operator delete(*(void **)(v27 - 224));
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a21);
  siri::dialogengine::SpeakableString::~SpeakableString(&a27);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDuration::adjectivePeriodDigitsBasedDisplay(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogDuration::minutesSeconds(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::GetMinutesSeconds(int a1, siri::dialogengine *this, const siri::dialogengine::VariableObject *a3)
{
  int v3 = (int)a3;
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  siri::dialogengine::GetDurationForRequest(this, this, a3);
  siri::dialogengine::CreateJSONBoolVal((siri::dialogengine *)(v3 != 0));
}

void sub_1C5DBC3DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  MEMORY[0x1C8796D70](v37, 0x10B3C40D3060B95);
  siri::dialogengine::SpeakableString::~SpeakableString(&a32);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(a30);
  _Unwind_Resume(a1);
}

void sub_1C5DBC4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::~pair((uint64_t)va);
  JUMPOUT(0x1C5DBC4B4);
}

void sub_1C5DBC4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  JUMPOUT(0x1C5DBC4B4);
}

void sub_1C5DBC4E0()
{
}

void siri::dialogengine::DialogDuration::minutesSecondsDigitsBasedDisplay(siri::dialogengine::DialogDuration *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void InitDefaultsscc_info_BackgroundElement_BackgroundElement_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/BackgroundElement.pb.cc", a4);
  SnippetUI::BackgroundElement::BackgroundElement((SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_BackgroundElement_default_instance_, v4);
  qword_1EB690AA8 = (uint64_t)&SnippetUI::_VisualElement_default_instance_;
}

SnippetUI::BackgroundElement *SnippetUI::BackgroundElement::BackgroundElement(SnippetUI::BackgroundElement *this)
{
  *(void *)this = &unk_1F211BD90;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 13) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  if (atomic_load_explicit(scc_info_BackgroundElement_BackgroundElement_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_BackgroundElement_BackgroundElement_2eproto);
  }
  *((unsigned char *)this + 48) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_1C5DBC5DC(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedField<int>::~RepeatedField(v1 + 16);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::BackgroundElement::GetMetadata(SnippetUI::BackgroundElement *this)
{
  return file_level_metadata_BackgroundElement_2eproto;
}

uint64_t SnippetUI::BackgroundElement::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void SnippetUI::BackgroundElement::MergeFrom(SnippetUI::BackgroundElement *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/BackgroundElement.pb.cc", 307);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::BackgroundElement::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DBC700(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::BackgroundElement::MergeFrom(SnippetUI::BackgroundElement *this, const SnippetUI::BackgroundElement *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/BackgroundElement.pb.cc", 322);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::BackgroundElement *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  google::protobuf::RepeatedField<int>::MergeFrom((int *)this + 4, (int *)a2 + 4);
  if (a2 != (const SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_)
  {
    BOOL v6 = (const SnippetUI::VisualElement *)*((void *)a2 + 5);
    if (v6)
    {
      char v7 = (SnippetUI::VisualElement *)*((void *)this + 5);
      if (!v7)
      {
        char v7 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualElement>(0);
        *((void *)this + 5) = v7;
        BOOL v6 = (const SnippetUI::VisualElement *)*((void *)a2 + 5);
      }
      if (v6) {
        long long v8 = v6;
      }
      else {
        long long v8 = (const SnippetUI::VisualElement *)&SnippetUI::_VisualElement_default_instance_;
      }
      SnippetUI::VisualElement::MergeFrom(v7, v8);
    }
  }
  if (*((unsigned char *)a2 + 48)) {
    *((unsigned char *)this + 48) = 1;
  }
}

void sub_1C5DBC7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::BackgroundElement::CopyFrom(SnippetUI::BackgroundElement *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::BackgroundElement::Clear(this);
    SnippetUI::BackgroundElement::MergeFrom(this, a2);
  }
}

void SnippetUI::BackgroundElement::Clear(SnippetUI::BackgroundElement *this)
{
  *((_DWORD *)this + 4) = 0;
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  char v4 = *((unsigned char *)this + 8);
  int v3 = (char *)this + 8;
  *((void *)v3 + 4) = 0;
  v3[40] = 0;
  if (v4)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear((google::protobuf::internal::InternalMetadataWithArena *)v3);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::BackgroundElement::InternalSerializeWithCachedSizesToArray(SnippetUI::BackgroundElement *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this != (SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_)
  {
    char v7 = (SnippetUI::VisualElement *)*((void *)this + 5);
    if (v7)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        char v7 = (SnippetUI::VisualElement *)*((void *)this + 5);
      }
      *uint64_t v5 = 10;
      unsigned int v8 = *((_DWORD *)v7 + 6);
      if (v8 > 0x7F)
      {
        v5[1] = v8 | 0x80;
        unsigned int v10 = v8 >> 7;
        if (v8 >> 14)
        {
          long long v11 = v5 + 2;
          do
          {
            std::string v12 = v11;
            *v11++ = v10 | 0x80;
            unsigned int v13 = v10 >> 7;
            unsigned int v14 = v10 >> 14;
            v10 >>= 7;
          }
          while (v14);
          char v9 = v12 + 2;
          *long long v11 = v13;
        }
        else
        {
          v5[2] = v10;
          char v9 = v5 + 3;
        }
      }
      else
      {
        v5[1] = v8;
        char v9 = v5 + 2;
      }
      uint64_t v5 = (char *)SnippetUI::VisualElement::InternalSerializeWithCachedSizesToArray(v7, v9, a3, a4);
    }
  }
  unsigned int v15 = *((_DWORD *)this + 8);
  if ((int)v15 >= 1)
  {
    unint64_t v16 = *(void *)a3;
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unint64_t v16 = *(void *)a3;
    }
    if (v16 <= (unint64_t)v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/io/coded_stream.h", 856);
      uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v33, "CHECK failed: ptr < end_: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v32, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
    }
    *uint64_t v5 = 18;
    long long v18 = v5 + 1;
    if (v15 >= 0x80)
    {
      do
      {
        *v18++ = v15 | 0x80;
        unsigned int v31 = v15 >> 14;
        v15 >>= 7;
      }
      while (v31);
      uint64_t v5 = v18 - 1;
    }
    v5 += 2;
    *long long v18 = v15;
    long long v19 = (int *)*((void *)this + 3);
    uint64_t v20 = &v19[*((int *)this + 4)];
    do
    {
      if ((unint64_t)v5 >= *(void *)a3) {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      }
      unint64_t v22 = *v19++;
      unint64_t v21 = v22;
      if (v22 > 0x7F)
      {
        *uint64_t v5 = v21 | 0x80;
        unint64_t v23 = v21 >> 7;
        if (v21 >> 14)
        {
          uint64_t v24 = v5 + 1;
          do
          {
            uint64_t v25 = v24;
            *v24++ = v23 | 0x80;
            unint64_t v26 = v23 >> 7;
            unint64_t v27 = v23 >> 14;
            v23 >>= 7;
          }
          while (v27);
          uint64_t v5 = v25 + 2;
          *uint64_t v24 = v26;
        }
        else
        {
          v5[1] = v23;
          v5 += 2;
        }
      }
      else
      {
        *v5++ = v21;
      }
    }
    while (v19 < v20);
  }
  if (*((unsigned char *)this + 48))
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      char v28 = *((unsigned char *)this + 48);
    }
    else
    {
      char v28 = 1;
    }
    *uint64_t v5 = 24;
    v5[1] = v28;
    v5 += 2;
  }
  uint64_t v29 = *((void *)this + 1);
  if (v29) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v29 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
  }
  return (const google::protobuf::UnknownFieldSet *)v5;
}

void sub_1C5DBCB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *SnippetUI::BackgroundElement::_InternalParse(SnippetUI::BackgroundElement *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v23 = a2;
  uint64_t v5 = (SnippetUI::BackgroundElement *)((char *)this + 16);
  BOOL v6 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v23, *((_DWORD *)a3 + 23)))return v23; {
        TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
        }
        unsigned int v10 = (char *)*(unsigned __int8 *)v23;
        if ((*(char *)v23 & 0x80000000) == 0) {
          goto LABEL_6;
        }
        unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if ((*(char *)TagFallback & 0x80000000) == 0)
        {
          TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
          unint64_t v23 = TagFallback;
          goto LABEL_7;
        }
        TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, v10);
        unint64_t v23 = TagFallback;
        if (!TagFallback) {
          return TagFallback;
        }
LABEL_7:
        unsigned int v11 = v10 >> 3;
        if (v10 >> 3 != 3) {
          break;
        }
        if (v10 != 24) {
          goto LABEL_13;
        }
        unsigned int v15 = (google::protobuf::internal *)((char *)TagFallback + 1);
        unint64_t v16 = *(unsigned __int8 *)TagFallback;
        if (*(char *)TagFallback < 0)
        {
          int v17 = *(char *)v15;
          unint64_t v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            unsigned int v15 = (google::protobuf::internal *)((char *)TagFallback + 2);
            goto LABEL_22;
          }
          long long v19 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v16);
          unint64_t v23 = v19;
          *((unsigned char *)this + 48) = v20 != 0;
          if (!v19) {
            return 0;
          }
        }
        else
        {
LABEL_22:
          unint64_t v23 = v15;
          *((unsigned char *)this + 48) = v16 != 0;
        }
      }
      if (v11 == 2) {
        break;
      }
      if (v11 != 1 || v10 != 10)
      {
LABEL_13:
        if (v10) {
          BOOL v13 = (v10 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        unsigned int v14 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v6, TagFallback, a3, v8);
        goto LABEL_28;
      }
      long long v18 = (SnippetUI::VisualElement *)*((void *)this + 5);
      if (!v18)
      {
        long long v18 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualElement>(0);
        *((void *)this + 5) = v18;
        TagFallback = v23;
      }
      unsigned int v14 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualElement>(a3, v18, TagFallback);
LABEL_28:
      unint64_t v23 = (google::protobuf::internal *)v14;
      if (!v14) {
        return 0;
      }
    }
    if (v10 == 18)
    {
      unsigned int v14 = google::protobuf::internal::PackedInt32Parser(v5, TagFallback, a3, v7);
      goto LABEL_28;
    }
    if (v10 != 16) {
      goto LABEL_13;
    }
    int v21 = google::protobuf::internal::ReadVarint(&v23, (const char **)v10);
    if (!v23) {
      return 0;
    }
    SnippetUI::ColorElement::_internal_add_idioms((uint64_t)this, v21);
  }
}

char *google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualElement>(google::protobuf::internal::EpsCopyInputStream *this, SnippetUI::VisualElement *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  char v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    unsigned int v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    unsigned int v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)SnippetUI::VisualElement::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t SnippetUI::BackgroundElement::GetCachedSize(SnippetUI::BackgroundElement *this)
{
  return *((unsigned int *)this + 13);
}

char *SnippetUI::BackgroundElement::ByteSizeLong(SnippetUI::BackgroundElement *this)
{
  uint64_t v2 = (_DWORD *)((char *)this + 16);
  int v3 = *((_DWORD *)this + 4);
  if (!v3)
  {
    uint64_t v5 = 0;
LABEL_11:
    int v9 = 0;
    uint64_t v8 = 0;
    goto LABEL_14;
  }
  int v4 = 0;
  uint64_t v5 = 0;
  do
  {
    int v6 = *(_DWORD *)google::protobuf::RepeatedField<int>::Get(v2, v4);
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    v5 += v7;
    ++v4;
  }
  while (v3 != v4);
  if (!v5) {
    goto LABEL_11;
  }
  if ((v5 & 0x80000000) != 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  int v9 = v5;
LABEL_14:
  *((_DWORD *)this + 8) = v9;
  uint64_t v10 = v8 + v5;
  if (this != (SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_)
  {
    int v11 = (SnippetUI::ImageElement **)*((void *)this + 5);
    if (v11)
    {
      int v12 = SnippetUI::VisualElement::ByteSizeLong(v11);
      v10 += (uint64_t)&v12[((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1];
    }
  }
  if (*((unsigned char *)this + 48)) {
    BOOL v13 = (const google::protobuf::UnknownFieldSet *)(v10 + 2);
  }
  else {
    BOOL v13 = (const google::protobuf::UnknownFieldSet *)v10;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::BackgroundElement *)((char *)this + 8), v13, (_DWORD *)this + 13);
  }
  else
  {
    *((_DWORD *)this + 13) = v13;
    return (char *)v13;
  }
}

uint64_t SnippetUI::BackgroundElement::IsInitialized(SnippetUI::BackgroundElement *this)
{
  return 1;
}

SnippetUI::BackgroundElement *SnippetUI::BackgroundElement::New(SnippetUI::BackgroundElement *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::BackgroundElement>(a2);
}

SnippetUI::BackgroundElement *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::BackgroundElement>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::BackgroundElement *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::BackgroundElement>);
  }
  SnippetUI::BackgroundElement::BackgroundElement(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DBD034(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4023CD61A6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::BackgroundElement>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::BackgroundElement *SnippetUI::BackgroundElement::New(SnippetUI::BackgroundElement *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::BackgroundElement>(0);
}

void SnippetUI::BackgroundElement::~BackgroundElement(SnippetUI::BackgroundElement *this)
{
  SnippetUI::BackgroundElement::~BackgroundElement(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;

  *(void *)this = &unk_1F211BD90;
  if (this != (SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_)
  {
    uint64_t v2 = *((void *)this + 5);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  google::protobuf::RepeatedField<int>::~RepeatedField((char *)this + 16);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::BackgroundElement::InitAsDefaultInstance(SnippetUI::BackgroundElement *this)
{
  qword_1EB690AA8 = (uint64_t)&SnippetUI::_VisualElement_default_instance_;
}

uint64_t SnippetUI::BackgroundElement::_Internal::visual(SnippetUI::BackgroundElement::_Internal *this, const SnippetUI::BackgroundElement *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::BackgroundElement::clear_visual(SnippetUI::BackgroundElement *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

SnippetUI::BackgroundElement *SnippetUI::BackgroundElement::BackgroundElement(SnippetUI::BackgroundElement *this, const SnippetUI::BackgroundElement *a2)
{
  *(void *)this = &unk_1F211BD90;
  *((void *)this + 1) = 0;
  int v4 = (SnippetUI::BackgroundElement *)((char *)this + 8);
  google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)this + 16, (int *)a2 + 4);
  *((_DWORD *)this + 13) = 0;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom(v4, (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  if (a2 != (const SnippetUI::BackgroundElement *)&SnippetUI::_BackgroundElement_default_instance_
    && *((void *)a2 + 5))
  {
    operator new();
  }
  *((void *)this + 5) = 0;
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  return this;
}

void sub_1C5DBD28C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v3, 0x10A1C406A65A86DLL);
  google::protobuf::RepeatedField<int>::~RepeatedField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::BackgroundElement::default_instance(SnippetUI::BackgroundElement *this)
{
  if (atomic_load_explicit(scc_info_BackgroundElement_BackgroundElement_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_BackgroundElement_BackgroundElement_2eproto);
  }
  return &SnippetUI::_BackgroundElement_default_instance_;
}

void SnippetUI::BackgroundElement::CopyFrom(SnippetUI::BackgroundElement *this, const SnippetUI::BackgroundElement *a2)
{
  if (a2 != this)
  {
    SnippetUI::BackgroundElement::Clear(this);
    SnippetUI::BackgroundElement::MergeFrom(this, a2);
  }
}

void SnippetUI::BackgroundElement::InternalSwap(SnippetUI::BackgroundElement *this, SnippetUI::BackgroundElement *a2)
{
  int v4 = (SnippetUI::BackgroundElement *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      int v6 = v8;
      goto LABEL_6;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_7;
  }
  int v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
  google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
LABEL_7:
  google::protobuf::RepeatedField<int>::InternalSwap((uint64_t)this + 16, (uint64_t)a2 + 16);
  uint64_t v7 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 48);
  *((unsigned char *)this + 48) = *((unsigned char *)a2 + 48);
  *((unsigned char *)a2 + 48) = v7;
}

uint64_t non-virtual thunk to'siri::dialogengine::VisualResponse::Validate(siri::dialogengine::VisualResponse *this, siri::dialogengine::Context *a2)
{
  return siri::dialogengine::VisualResponse::Validate((siri::dialogengine::VisualResponse *)((char *)this - 64), a2);
}

uint64_t siri::dialogengine::VisualResponse::Validate(siri::dialogengine::VisualResponse *this, siri::dialogengine::Context *a2)
{
  int v4 = siri::dialogengine::Node::Validate(this, a2);
  std::string::basic_string[abi:ne180100]<0>(__p, "response");
  siri::dialogengine::ValidateXmlElementVersion((uint64_t)a2, (uint64_t)__p, v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  unint64_t v6 = v12;
  if ((v12 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)v11[1];
  }
  if (v6)
  {
    siri::dialogengine::Context::AddValidationError((uint64_t)a2, (long long *)v11, (uint64_t)this);
    int v4 = 0;
  }
  unsigned int v7 = siri::dialogengine::ValidateSnippetUIMessage(a2, (siri::dialogengine::VisualResponse *)((char *)this + 208), v5);
  if ((char)v12 < 0) {
    operator delete(v11[0]);
  }
  return v4 & v7;
}

void sub_1C5DBD4B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void non-virtual thunk to'siri::dialogengine::VisualResponse::~VisualResponse(siri::dialogengine::VisualResponse *this)
{
  siri::dialogengine::VisualResponse::~VisualResponse((siri::dialogengine::VisualResponse *)((char *)this - 64));
  JUMPOUT(0x1C8796D70);
}

{
  siri::dialogengine::VisualResponse::~VisualResponse((siri::dialogengine::VisualResponse *)((char *)this - 64));
}

void siri::dialogengine::VisualResponse::~VisualResponse(siri::dialogengine::VisualResponse *this)
{
  *(void *)this = &unk_1F211BE68;
  *((void *)this + 8) = &unk_1F211BEC0;
  SnippetUI::Response::~Response((siri::dialogengine::VisualResponse *)((char *)this + 208));
  *(void *)this = &unk_1F2126C60;
  *((void *)this + 8) = &unk_1F2126CB8;
  if (*((char *)this + 191) < 0) {
    operator delete(*((void **)this + 21));
  }
  if (*((char *)this + 167) < 0) {
    operator delete(*((void **)this + 18));
  }
  if (*((char *)this + 143) < 0) {
    operator delete(*((void **)this + 15));
  }
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  *((void *)this + 8) = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 10));
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)this);
}

{
  uint64_t vars8;

  siri::dialogengine::VisualResponse::~VisualResponse(this);
  JUMPOUT(0x1C8796D70);
}

void siri::dialogengine::VisualResponse::Execute(siri::dialogengine::VisualResponse *this, siri::dialogengine::Context *a2)
{
}

void sub_1C5DBD754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  _Unwind_Resume(a1);
}

siri::dialogengine::VisualResponse *siri::dialogengine::VisualResponse::VisualResponse(siri::dialogengine::VisualResponse *this, const siri::dialogengine::VisualResponse *a2)
{
  int v4 = siri::dialogengine::Node::Node(this, a2);
  *(void *)int v4 = &unk_1F211BE68;
  *((void *)v4 + 8) = &unk_1F211BEC0;
  SnippetUI::Response::Response((siri::dialogengine::Node *)((char *)v4 + 208), (const siri::dialogengine::VisualResponse *)((char *)a2 + 208));
  return this;
}

void sub_1C5DBD848(_Unwind_Exception *a1)
{
  siri::dialogengine::Node::~Node(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::VisualResponse *,std::shared_ptr<siri::dialogengine::VisualResponse>::__shared_ptr_default_delete<siri::dialogengine::VisualResponse,siri::dialogengine::VisualResponse>,std::allocator<siri::dialogengine::VisualResponse>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::VisualResponse *,std::shared_ptr<siri::dialogengine::VisualResponse>::__shared_ptr_default_delete<siri::dialogengine::VisualResponse,siri::dialogengine::VisualResponse>,std::allocator<siri::dialogengine::VisualResponse>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::VisualResponse *,std::shared_ptr<siri::dialogengine::VisualResponse>::__shared_ptr_default_delete<siri::dialogengine::VisualResponse,siri::dialogengine::VisualResponse>,std::allocator<siri::dialogengine::VisualResponse>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

siri::dialogengine::VisualResponse *siri::dialogengine::VisualResponse::VisualResponse(siri::dialogengine::VisualResponse *this)
{
  *((void *)this + 24) = 0;
  *((void *)this + 25) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((void *)this + 7) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 9) = (char *)this + 80;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 1065353216;
  *(void *)this = &unk_1F211BE68;
  *((void *)this + 8) = &unk_1F211BEC0;
  SnippetUI::Response::Response((siri::dialogengine::VisualResponse *)((char *)this + 208));
  return this;
}

void sub_1C5DBD9E8(_Unwind_Exception *a1)
{
  siri::dialogengine::Node::~Node(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::VisualResponse::operator==(uint64_t a1, uint64_t a2)
{
  BOOL v4 = siri::dialogengine::Node::operator==(a1, a2);
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)(a1 + 208), (uint64_t)&__s1);
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)(a2 + 208), (uint64_t)__p);
  unsigned __int8 v5 = v24;
  if ((v24 & 0x80u) == 0) {
    size_t v6 = v24;
  }
  else {
    size_t v6 = __n;
  }
  unint64_t v7 = v21;
  int v8 = (char)v21;
  if ((v21 & 0x80u) != 0) {
    unint64_t v7 = (unint64_t)__p[1];
  }
  if (v6 != v7)
  {
    BOOL v18 = 0;
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_26;
  }
  if ((v21 & 0x80u) == 0) {
    int v9 = __p;
  }
  else {
    int v9 = (void **)__p[0];
  }
  if ((char)v24 < 0)
  {
    BOOL v18 = memcmp(__s1, v9, __n) == 0;
    goto LABEL_22;
  }
  if (v24)
  {
    uint64_t v10 = v24 - 1;
    p_s1 = &__s1;
    do
    {
      int v13 = *(unsigned __int8 *)p_s1;
      p_s1 = (void **)((char *)p_s1 + 1);
      int v12 = v13;
      int v15 = *(unsigned __int8 *)v9;
      int v9 = (void **)((char *)v9 + 1);
      int v14 = v15;
      BOOL v17 = v10-- != 0;
      BOOL v18 = v12 == v14;
    }
    while (v12 == v14 && v17);
LABEL_22:
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
LABEL_26:
    operator delete(__p[0]);
    if ((v24 & 0x80) == 0) {
      return v4 & v18;
    }
LABEL_27:
    operator delete(__s1);
    return v4 & v18;
  }
  BOOL v18 = 1;
  if ((char)v21 < 0) {
    goto LABEL_26;
  }
LABEL_23:
  if ((v5 & 0x80) != 0) {
    goto LABEL_27;
  }
  return v4 & v18;
}

void sub_1C5DBDB18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::VisualResponse::operator!=(uint64_t a1, uint64_t a2)
{
  return siri::dialogengine::VisualResponse::operator==(a1, a2) ^ 1;
}

uint64_t siri::dialogengine::VisualResponse::GetResponseMessage(siri::dialogengine::VisualResponse *this)
{
  return (uint64_t)this + 208;
}

uint64_t siri::dialogengine::VisualResponse::SetResponseMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = google::protobuf::MessageLite::ParseFromString(a1 + 208, a2);
  if ((v3 & 1) == 0) {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Could not parse Visual CAT from array", v2);
  }
  return v3;
}

uint64_t siri::dialogengine::VisualResponse::AddedRequiredVariableOrPhrase(uint64_t this)
{
  *(unsigned char *)(this + 352) = 1;
  return this;
}

void siri::dialogengine::VisualResponse::GetResponseJSON(siri::dialogengine::VisualResponse *this@<X0>, void *a2@<X8>)
{
  google::protobuf::util::Status::Status((uint64_t)v7);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  int v10 = 0;
  google::protobuf::util::MessageToJsonString((siri::dialogengine::VisualResponse *)((char *)this + 208), (uint64_t)a2, (uint64_t)&v10, (uint64_t)v4);
  google::protobuf::util::Status::operator=((uint64_t)v7, (uint64_t)v4);
  if (v6 < 0) {
    operator delete(__p);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
}

void sub_1C5DBDC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v23 + 23) < 0) {
    operator delete(*(void **)v23);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VisualResponse::GetResponseBase64Protobuf(siri::dialogengine::VisualResponse *this@<X0>, std::string *a2@<X8>)
{
  google::protobuf::MessageLite::SerializeAsString((siri::dialogengine::VisualResponse *)((char *)this + 208), (uint64_t)__p);
  siri::dialogengine::EncodeBase64((uint64_t)__p, a2);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C5DBDCB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::dialogengine::VisualResponse::GetResponseBytes@<W0>(siri::dialogengine::VisualResponse *this@<X0>, uint64_t a2@<X8>)
{
  return google::protobuf::MessageLite::SerializeAsString((siri::dialogengine::VisualResponse *)((char *)this + 208), a2);
}

uint64_t siri::dialogengine::GrammarFeature::GrammarFeature(uint64_t a1, int a2, long long *a3, const void ***a4, char a5)
{
  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 8), *(const std::string::value_type **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v8;
  }
  std::set<std::string>::set[abi:ne180100]((uint64_t *)(a1 + 32), a4);
  *(unsigned char *)(a1 + 56) = a5;
  return a1;
}

void sub_1C5DBDD4C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::GrammarFeature::GrammarFeature(uint64_t a1, int a2, uint64_t a3, void *a4, char a5)
{
  *(_DWORD *)a1 = a2;
  morphun::util::StringUtils::to_string();
  *(void *)(a1 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(void *)(a1 + 32) = a1 + 40;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = a5;
  int v10 = (void *)*a4;
  long long v8 = a4 + 1;
  char v9 = v10;
  if (v10 != v8)
  {
    do
    {
      if (*((char *)v9 + 55) < 0) {
        std::basic_string<char16_t>::__init_copy_ctor_external(&v17, (const std::basic_string<char16_t>::value_type *)v9[4], v9[5]);
      }
      else {
        std::basic_string<char16_t> v17 = *(std::basic_string<char16_t> *)(v9 + 4);
      }
      morphun::util::StringUtils::to_string();
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string>((uint64_t **)(a1 + 32), (const void **)__p, (uint64_t)__p);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v17.__r_.__value_.__l.__data_);
      }
      int v11 = (void *)v9[1];
      if (v11)
      {
        do
        {
          int v12 = v11;
          int v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          int v12 = (void *)v9[2];
          BOOL v13 = *v12 == (void)v9;
          char v9 = v12;
        }
        while (!v13);
      }
      char v9 = v12;
    }
    while (v12 != v8);
  }
  return a1;
}

void sub_1C5DBDE88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  std::__tree<std::string>::destroy(v23, *(char **)(v22 + 40));
  if (*(char *)(v22 + 31) < 0) {
    operator delete(*v21);
  }
  _Unwind_Resume(a1);
}

void std::basic_string<char16_t>::__init_copy_ctor_external(std::basic_string<char16_t> *this, const std::basic_string<char16_t>::value_type *__s, std::basic_string<char16_t>::size_type __sz)
{
  unsigned __int8 v5 = this;
  if (__sz > 0xA)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::basic_string<char16_t>::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((__sz | 3) != 0xB) {
      std::basic_string<char16_t>::size_type v6 = __sz | 3;
    }
    unint64_t v7 = (std::basic_string<char16_t> *)std::__allocate_at_least[abi:ne180100]<std::allocator<char16_t>>(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::basic_string<char16_t>::size_type)v7;
    unsigned __int8 v5 = v7;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, 2 * __sz + 2);
}

uint64_t siri::dialogengine::GrammarFeature::GetType(siri::dialogengine::GrammarFeature *this)
{
  return *(unsigned int *)this;
}

void siri::dialogengine::GrammarFeature::GetName(siri::dialogengine::GrammarFeature *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 8);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
}

uint64_t *siri::dialogengine::GrammarFeature::GetValues@<X0>(const void ***this@<X0>, uint64_t *a2@<X8>)
{
  return std::set<std::string>::set[abi:ne180100](a2, this + 4);
}

uint64_t siri::dialogengine::GrammarFeature::IsUniqueValues(siri::dialogengine::GrammarFeature *this)
{
  return *((unsigned __int8 *)this + 56);
}

__n128 siri::dialogengine::GrammarFeature::GetCanonicalGrammarName@<Q0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  {
    operator new();
  }
  char v4 = (std::once_flag::_State_type *)siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::flag, memory_order_acquire) != -1)
  {
    int v15 = &v13;
    int v14 = &v15;
    std::__call_once(v4, &v14, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::$_0 &&>>);
  }
  uint64_t v5 = siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::sGrammarNameAliases + 8;
  std::basic_string<char16_t>::size_type v6 = *(void **)(siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::sGrammarNameAliases
                  + 8);
  if (!v6) {
    goto LABEL_11;
  }
  uint64_t v7 = siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::sGrammarNameAliases + 8;
  do
  {
    BOOL v8 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v6 + 4, (void *)a1);
    char v9 = v6 + 1;
    if (!v8)
    {
      char v9 = v6;
      uint64_t v7 = (uint64_t)v6;
    }
    std::basic_string<char16_t>::size_type v6 = (void *)*v9;
  }
  while (*v9);
  if (v7 == v5
    || std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>((void *)a1, (void *)(v7 + 32)))
  {
LABEL_11:
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    {
      __n128 result = *(__n128 *)a1;
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
      a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
      return result;
    }
    int v11 = *(const std::string::value_type **)a1;
    std::string::size_type v12 = *(void *)(a1 + 8);
    goto LABEL_14;
  }
  if (*(char *)(v7 + 79) < 0)
  {
    int v11 = *(const std::string::value_type **)(v7 + 56);
    std::string::size_type v12 = *(void *)(v7 + 64);
LABEL_14:
    std::string::__init_copy_ctor_external(a2, v11, v12);
    return result;
  }
  __n128 result = *(__n128 *)(v7 + 56);
  a2->__r_.__value_.__r.__words[2] = *(void *)(v7 + 72);
  *(__n128 *)&a2->__r_.__value_.__l.__data_ = result;
  return result;
}

void sub_1C5DBE130(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(std::string const&)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5DBE284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::string>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::string>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*v24);
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  MEMORY[0x1C8796D70](v23, 0x1020C4062D53EE8);
  _Unwind_Resume(a1);
}

void *siri::dialogengine::GrammarFeature::GetFeatures(uint64_t a1)
{
  {
    operator new();
  }
  uint64_t v2 = (std::once_flag::_State_type *)siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::flag, memory_order_acquire) != -1)
  {
    v54[0] = (uint64_t)&v46;
    uint64_t v49 = v54;
    std::__call_once(v2, &v49, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::$_0 &&>>);
  }
  {
    __cxa_atexit(MEMORY[0x1E4FBA268], &siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeaturesMutex, &dword_1C5C1E000);
  }
  std::mutex::lock(&siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeaturesMutex);
  uint64_t v3 = siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures;
  uint64_t v5 = siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8;
  char v4 = *(void **)(siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8);
  std::basic_string<char16_t>::size_type v6 = (uint64_t **)(siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8);
  uint64_t v7 = (uint64_t **)(siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8);
  if (v4)
  {
    uint64_t v8 = siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8;
    char v9 = *(void **)(siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeatures + 8);
    do
    {
      BOOL v10 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v9 + 4, (void *)a1);
      int v11 = v9 + 1;
      if (!v10)
      {
        int v11 = v9;
        uint64_t v8 = (uint64_t)v9;
      }
      char v9 = (void *)*v11;
    }
    while (*v11);
    if (v8 != v5
      && !std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>((void *)a1, (void *)(v8 + 32))
      && v5 != v8)
    {
      std::string::size_type v12 = (void *)(v8 + 56);
      goto LABEL_70;
    }
    while (1)
    {
      while (1)
      {
        std::basic_string<char16_t>::size_type v6 = (uint64_t **)v4;
        if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>((void *)a1, v4 + 4)) {
          break;
        }
        char v4 = (void *)*v4;
        uint64_t v7 = v6;
        if (!*v6) {
          goto LABEL_19;
        }
      }
      if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v4 + 4, (void *)a1)) {
        break;
      }
      uint64_t v7 = (uint64_t **)(v4 + 1);
      char v4 = (void *)v4[1];
      if (!v4) {
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    char v4 = operator new(0x50uLL);
    v54[0] = (uint64_t)v4;
    v54[1] = v5;
    char v55 = 0;
    char v13 = (std::string *)(v4 + 4);
    if (*(char *)(a1 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v13, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
      v4[6] = *(void *)(a1 + 16);
    }
    unsigned char v4[8] = 0;
    v4[9] = 0;
    v4[7] = 0;
    char v55 = 1;
    *char v4 = 0;
    v4[1] = 0;
    void v4[2] = v6;
    *uint64_t v7 = v4;
    uint64_t v14 = **(void **)v3;
    int v15 = v4;
    if (v14)
    {
      *(void *)uint64_t v3 = v14;
      int v15 = *v7;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(*(uint64_t **)(v3 + 8), v15);
    ++*(void *)(v3 + 16);
    v54[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<siri::dialogengine::GrammarFeature>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<siri::dialogengine::GrammarFeature>>,void *>>>>::reset[abi:ne180100](v54);
  }
  std::string::size_type v12 = v4 + 7;
  unsigned __int8 v46 = 0;
  uint64_t v47 = 0;
  uint64_t v48 = 0;
  v44[0] = 0;
  v44[1] = 0;
  uint64_t v45 = 0;
  std::string __p = 0;
  std::string v42 = 0;
  uint64_t v43 = 0;
  morphun::util::ULocale::ULocale();
  morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures();
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&v49);
  if (SHIBYTE(v48) < 0) {
    operator delete(v46);
  }
  morphun::lang::features::LanguageGrammarFeatures::getCategories((uint64_t *)&v46, (morphun::lang::features::LanguageGrammarFeatures *)v54);
  char v16 = (char *)v46;
  if (v46 != &v47)
  {
    do
    {
      morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getName((uint64_t *)v44, (morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)(v16 + 56));
      morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::getValues((uint64_t *)&__p, (morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)(v16 + 56));
      char isUniqueValues = morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::isUniqueValues((morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)(v16 + 56));
      unint64_t v19 = v4[8];
      unint64_t v18 = v4[9];
      if (v19 >= v18)
      {
        uint64_t v21 = (uint64_t)(v19 - *v12) >> 6;
        if ((unint64_t)(v21 + 1) >> 58) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v22 = v18 - *v12;
        uint64_t v23 = v22 >> 5;
        if (v22 >> 5 <= (unint64_t)(v21 + 1)) {
          uint64_t v23 = v21 + 1;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFC0) {
          unint64_t v24 = 0x3FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v24 = v23;
        }
        unsigned int v53 = v4 + 9;
        if (v24) {
          unint64_t v24 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::GrammarFeature>>(v24);
        }
        else {
          uint64_t v25 = 0;
        }
        uint64_t v49 = (uint64_t *)v24;
        uint64_t v50 = v24 + (v21 << 6);
        uint64_t v51 = v50;
        unint64_t v52 = v24 + (v25 << 6);
        siri::dialogengine::GrammarFeature::GrammarFeature(v50, 1, (uint64_t)v44, &__p, isUniqueValues);
        v51 += 64;
        std::vector<siri::dialogengine::GrammarFeature>::__swap_out_circular_buffer(v4 + 7, &v49);
        unint64_t v20 = v4[8];
        std::__split_buffer<siri::dialogengine::GrammarFeature>::~__split_buffer((uint64_t)&v49);
      }
      else
      {
        siri::dialogengine::GrammarFeature::GrammarFeature(v4[8], 1, (uint64_t)v44, &__p, isUniqueValues);
        unint64_t v20 = v19 + 64;
        unsigned char v4[8] = v19 + 64;
      }
      unsigned char v4[8] = v20;
      std::__tree<std::string>::destroy(v42);
      if (SHIBYTE(v45) < 0) {
        operator delete(v44[0]);
      }
      unint64_t v26 = (char *)*((void *)v16 + 1);
      if (v26)
      {
        do
        {
          unint64_t v27 = (char **)v26;
          unint64_t v26 = *(char **)v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          unint64_t v27 = (char **)*((void *)v16 + 2);
          BOOL v28 = *v27 == v16;
          char v16 = (char *)v27;
        }
        while (!v28);
      }
      char v16 = (char *)v27;
    }
    while (v27 != &v47);
  }
  std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(v47);
  morphun::lang::features::LanguageGrammarFeatures::getFeatures((uint64_t *)&v46, (morphun::lang::features::LanguageGrammarFeatures *)v54);
  uint64_t v29 = (char *)v46;
  if (v46 != &v47)
  {
    do
    {
      morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures::getName((uint64_t *)v44, (morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures *)(v29 + 32));
      unint64_t v31 = v4[8];
      unint64_t v30 = v4[9];
      if (v31 >= v30)
      {
        uint64_t v33 = (uint64_t)(v31 - *v12) >> 6;
        if ((unint64_t)(v33 + 1) >> 58) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v34 = v30 - *v12;
        uint64_t v35 = v34 >> 5;
        if (v34 >> 5 <= (unint64_t)(v33 + 1)) {
          uint64_t v35 = v33 + 1;
        }
        if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFC0) {
          unint64_t v36 = 0x3FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v36 = v35;
        }
        unsigned int v53 = v4 + 9;
        if (v36) {
          unint64_t v36 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::GrammarFeature>>(v36);
        }
        else {
          uint64_t v37 = 0;
        }
        uint64_t v49 = (uint64_t *)v36;
        uint64_t v50 = v36 + (v33 << 6);
        uint64_t v51 = v50;
        unint64_t v52 = v36 + (v37 << 6);
        std::allocator<siri::dialogengine::GrammarFeature>::construct[abi:ne180100]<siri::dialogengine::GrammarFeature,siri::dialogengine::GrammarFeature::Type,std::basic_string<char16_t>>(v50, 2, (uint64_t)v44);
        v51 += 64;
        std::vector<siri::dialogengine::GrammarFeature>::__swap_out_circular_buffer(v4 + 7, &v49);
        unint64_t v32 = v4[8];
        std::__split_buffer<siri::dialogengine::GrammarFeature>::~__split_buffer((uint64_t)&v49);
      }
      else
      {
        std::allocator<siri::dialogengine::GrammarFeature>::construct[abi:ne180100]<siri::dialogengine::GrammarFeature,siri::dialogengine::GrammarFeature::Type,std::basic_string<char16_t>>(v4[8], 2, (uint64_t)v44);
        unint64_t v32 = v31 + 64;
        unsigned char v4[8] = v32;
      }
      unsigned char v4[8] = v32;
      if (SHIBYTE(v45) < 0) {
        operator delete(v44[0]);
      }
      unsigned int v38 = (char *)*((void *)v29 + 1);
      if (v38)
      {
        do
        {
          std::string::size_type v39 = (char **)v38;
          unsigned int v38 = *(char **)v38;
        }
        while (v38);
      }
      else
      {
        do
        {
          std::string::size_type v39 = (char **)*((void *)v29 + 2);
          BOOL v28 = *v39 == v29;
          uint64_t v29 = (char *)v39;
        }
        while (!v28);
      }
      uint64_t v29 = (char *)v39;
    }
    while (v39 != &v47);
  }
  std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(v47);
  morphun::lang::features::LanguageGrammarFeatures::~LanguageGrammarFeatures((morphun::lang::features::LanguageGrammarFeatures *)v54);
LABEL_70:
  std::mutex::unlock(&siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::sFeaturesMutex);
  return v12;
}

void sub_1C5DBE8CC(_Unwind_Exception *a1)
{
}

void sub_1C5DBE908(void *a1, std::string *a2, std::string *a3, void *a4, uint64_t a5, int a6, __int16 a7, char a8, char a9, char a10, void *a11, uint64_t a12, uint64_t a13, long long a14, std::string::size_type a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,long long __pa,std::string::size_type a36)
{
  int v36 = (int)a2;
  morphun::lang::features::LanguageGrammarFeatures::~LanguageGrammarFeatures((morphun::lang::features::LanguageGrammarFeatures *)&__pa);
  if (v36 == 1)
  {
    unsigned int v38 = __cxa_begin_catch(a1);
    std::string::size_type v39 = (char *)(*(uint64_t (**)(void *))(*(void *)v38 + 16))(v38);
    std::string::basic_string[abi:ne180100]<0>(&a11, v39);
    unsigned int v40 = std::string::insert((std::string *)&a11, 0, "In GrammarFeature::GetFeatures(const string &locale): morphun::lang::features::LanguageGrammarFeatures::getLanguageGrammarFeatures failed: [");
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    a15 = v40->__r_.__value_.__r.__words[2];
    a14 = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    std::string v42 = std::string::append((std::string *)&a14, "]");
    long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    a36 = v42->__r_.__value_.__r.__words[2];
    __pa = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__pa, 3u);
    if (SHIBYTE(a36) < 0) {
      operator delete((void *)__pa);
    }
    if (SHIBYTE(a15) < 0) {
      operator delete((void *)a14);
    }
    if (SHIBYTE(a13) < 0) {
      operator delete(a11);
    }
    __cxa_end_catch();
    JUMPOUT(0x1C5DBE800);
  }
  JUMPOUT(0x1C5DBE8F4);
}

void sub_1C5DBEB10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (a46 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  __cxa_end_catch();
  JUMPOUT(0x1C5DBE8F4);
}

void std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::__map_value_compare<std::basic_string<char16_t>,std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>,std::less<std::basic_string<char16_t>>,true>,std::allocator<std::__value_type<std::basic_string<char16_t>,morphun::lang::features::LanguageGrammarFeatures_GrammarCategory>>>::destroy(*((void *)a1 + 1));
    morphun::lang::features::LanguageGrammarFeatures_GrammarCategory::~LanguageGrammarFeatures_GrammarCategory((morphun::lang::features::LanguageGrammarFeatures_GrammarCategory *)(a1 + 56));
    if (a1[55] < 0) {
      operator delete(*((void **)a1 + 4));
    }
    operator delete(a1);
  }
}

void std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(*a1);
    std::__tree<morphun::lang::features::LanguageGrammarFeatures_GrammarFeatures>::destroy(a1[1]);
    (*(void (**)(void))(a1[4] + 8))();
    operator delete(a1);
  }
}

void std::allocator<siri::dialogengine::GrammarFeature>::construct[abi:ne180100]<siri::dialogengine::GrammarFeature,siri::dialogengine::GrammarFeature::Type,std::basic_string<char16_t>>(uint64_t a1, int a2, uint64_t a3)
{
  v4[0] = 0;
  v4[1] = 0;
  uint64_t v3 = v4;
  siri::dialogengine::GrammarFeature::GrammarFeature(a1, a2, a3, &v3, 1);
  std::__tree<std::string>::destroy(v4[0]);
}

void sub_1C5DBEC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11)
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::GrammarFeature>>(unint64_t a1)
{
  if (a1 >> 58) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(a1 << 6);
}

uint64_t *std::vector<siri::dialogengine::GrammarFeature>::__swap_out_circular_buffer(uint64_t *result, void *a2)
{
  uint64_t v3 = *result;
  uint64_t v2 = result[1];
  uint64_t v4 = a2[1];
  if (v2 != *result)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = v2 + v5;
      *(_DWORD *)(v6 - 64) = *(_DWORD *)(v2 + v5 - 64);
      long long v8 = *(_OWORD *)(v2 + v5 - 56);
      *(void *)(v6 - 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(void *)(v2 + v5 - 40);
      *(_OWORD *)(v6 - 56) = v8;
      *(void *)(v7 - 48) = 0;
      *(void *)(v7 - 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
      *(void *)(v7 - 56) = 0;
      *(void *)(v6 - 32) = *(void *)(v2 + v5 - 32);
      char v9 = (uint64_t *)(v2 + v5 - 24);
      uint64_t v10 = *v9;
      *(void *)(v4 + v5 - 24) = *v9;
      uint64_t v11 = v4 + v5 - 24;
      uint64_t v12 = *(void *)(v2 + v5 - 16);
      *(void *)(v6 - 16) = v12;
      if (v12)
      {
        *(void *)(v10 + 16) = v11;
        *(void *)(v7 - 32) = v9;
        *char v9 = 0;
        *(void *)(v2 + v5 - 16) = 0;
      }
      else
      {
        *(void *)(v6 - 32) = v11;
      }
      *(unsigned char *)(v4 + v5 - 8) = *(unsigned char *)(v2 + v5 - 8);
      v5 -= 64;
    }
    while (v2 + v5 != v3);
    v4 += v5;
  }
  a2[1] = v4;
  uint64_t v13 = *result;
  char *result = v4;
  a2[1] = v13;
  uint64_t v14 = result[1];
  result[1] = a2[2];
  a2[2] = v14;
  uint64_t v15 = result[2];
  result[2] = a2[3];
  a2[3] = v15;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<siri::dialogengine::GrammarFeature>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 64;
    std::allocator<siri::dialogengine::GrammarFeature>::destroy[abi:ne180100](i - 64);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::allocator<siri::dialogengine::GrammarFeature>::destroy[abi:ne180100](uint64_t a1)
{
  std::__tree<std::string>::destroy(a1 + 32, *(char **)(a1 + 40));
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 8);
    operator delete(v2);
  }
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<siri::dialogengine::GrammarFeature>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<siri::dialogengine::GrammarFeature>>,void *>>>>::reset[abi:ne180100](uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      uint64_t v2 = *(void *)(v1 + 56);
      if (v2)
      {
        uint64_t v3 = *(void *)(v1 + 64);
        uint64_t v4 = *(void **)(v1 + 56);
        if (v3 != v2)
        {
          do
          {
            v3 -= 64;
            std::allocator<siri::dialogengine::GrammarFeature>::destroy[abi:ne180100](v3);
          }
          while (v3 != v2);
          uint64_t v4 = *(void **)(v1 + 56);
        }
        *(void *)(v1 + 64) = v2;
        operator delete(v4);
      }
      if (*(char *)(v1 + 55) < 0) {
        operator delete(*(void **)(v1 + 32));
      }
    }
    operator delete((void *)v1);
  }
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GrammarFeature::GetFeatures(std::string const&)::$_0 &&>>()
{
}

void siri::dialogengine::ParseBinaryFile(siri::dialogengine::Context *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X8>)
{
  if (!a1)
  {
    uint64_t v11 = "Context cannot be null, not writing.";
LABEL_14:
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)v11, (const char *)a2);
    *(void *)a3 = 0;
    *((void *)a3 + 1) = 0;
    return;
  }
  uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (!v4)
  {
    uint64_t v11 = "Filename cannot be empty, not writing.";
    goto LABEL_14;
  }
  siri::dialogengine::ParseGzippedFile();
  unint64_t v6 = v95;
  unsigned __int8 v7 = v95;
  if ((v95 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)v94[1];
  }
  if (v6)
  {
    unsigned int v53 = google::protobuf::SetLogHandler((uint64_t (*)())siri::dialogengine::ScopedLogHandler::logHandler);
    siri::dialogengine::CatBinary::cat::cat((siri::dialogengine::CatBinary::cat *)v75);
    if ((google::protobuf::MessageLite::ParseFromString(v75, v94) & 1) == 0)
    {
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Unable to parse binary CAT file data.", v8);
LABEL_24:
      *(void *)a3 = 0;
      *((void *)a3 + 1) = 0;
      goto LABEL_25;
    }
    char v9 = v88;
    int v10 = *((char *)v88 + 23);
    if (v10 < 0)
    {
      char v9 = (uint64_t *)*v88;
      if (v88[1] != 5)
      {
LABEL_23:
        siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Error parsing CAT header, expected '%s', read '%s'", v8, "CATPB", v9);
        goto LABEL_24;
      }
    }
    else if (v10 != 5)
    {
      goto LABEL_23;
    }
    if (*(_DWORD *)v9 != 1347699011 || *((unsigned char *)v9 + 4) != 66) {
      goto LABEL_23;
    }
    uint64_t v14 = *((void *)a1 + 63);
    uint64_t v13 = (std::__shared_weak_count *)*((void *)a1 + 64);
    if (v13)
    {
      atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
      std::__shared_weak_count::__release_shared[abi:ne180100](v13);
      if (!v14) {
LABEL_33:
      }
        operator new();
      uint64_t v15 = *((void *)a1 + 63);
      uint64_t v16 = *((void *)a1 + 64);
      *(void *)&long long v74 = v15;
      *((void *)&v74 + 1) = v16;
      if (v16) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      if (!v14) {
        goto LABEL_33;
      }
      uint64_t v15 = *((void *)a1 + 63);
      long long v74 = (unint64_t)v15;
    }
    std::string::operator=((std::string *)(v15 + 152), __str);
    char v18 = v76;
    if ((v76 & 4) != 0)
    {
      std::string::operator=((std::string *)(v15 + 104), v90);
      char v18 = v76;
    }
    if ((v18 & 8) != 0) {
      siri::dialogengine::File::SetLocale(v15, v91);
    }
    if (v78) {
      uint64_t v19 = v78 + 8;
    }
    else {
      uint64_t v19 = 0;
    }
    if (v77)
    {
      uint64_t v20 = 8 * v77;
      do
      {
        siri::dialogengine::File::AddMetadata(v15, *(void *)(*(void *)v19 + 24), *(const void ***)(*(void *)v19 + 32));
        v19 += 8;
        v20 -= 8;
      }
      while (v20);
    }
    std::string v54 = (siri::dialogengine::File *)v15;
    if (v80) {
      uint64_t v21 = (uint64_t *)(v80 + 8);
    }
    else {
      uint64_t v21 = 0;
    }
    if (!v79)
    {
LABEL_72:
      if (v81) {
        operator new();
      }
      if (v83) {
        unint64_t v27 = (siri::dialogengine **)(v83 + 8);
      }
      else {
        unint64_t v27 = 0;
      }
      if (v82)
      {
        BOOL v28 = (siri::dialogengine::Node *)siri::dialogengine::ParseNodeMsg(*v27, v17);
        uint64_t v29 = v28;
        if (v28)
        {
          if (v30) {
            std::shared_ptr<siri::dialogengine::Group>::shared_ptr[abi:ne180100]<siri::dialogengine::Group,void>(&v57, (uint64_t)v30);
          }
          siri::dialogengine::Node::GetIdForDebug(v29, a1, 0, &v64);
          if ((v64.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unsigned __int8 v46 = &v64;
          }
          else {
            unsigned __int8 v46 = (std::string *)v64.__r_.__value_.__r.__words[0];
          }
          siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Error: Unexpected node type from phrase '%s'", v45, v46);
          if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v64.__r_.__value_.__l.__data_);
          }
        }
      }
      else if ((v76 & 0x20) != 0)
      {
        std::string::size_type v39 = v93;
        if (!v93)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v64, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.h", 3139);
          unsigned int v40 = google::protobuf::internal::LogMessage::operator<<(&v64, "CHECK failed: !value || root_ != nullptr: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v63, (const char **)&v40->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v64.__r_.__value_.__l.__data_);
          std::string::size_type v39 = v93;
        }
        if (v39) {
          long long v41 = v39;
        }
        else {
          long long v41 = (siri::dialogengine *)&siri::dialogengine::CatBinary::_node_default_instance_;
        }
        std::string v42 = (const void *)siri::dialogengine::ParseNodeMsg(v41, v17);
        if (v42)
        {
          if (v44) {
            std::shared_ptr<siri::dialogengine::Group>::shared_ptr[abi:ne180100]<siri::dialogengine::Group,void>(&v56, (uint64_t)v44);
          }
        }
        siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Error: root node has invalid non-Group type", v43);
      }
      else
      {
        if (v85) {
          unint64_t v31 = (siri::dialogengine **)(v85 + 8);
        }
        else {
          unint64_t v31 = 0;
        }
        if (v84)
        {
          uint64_t v32 = siri::dialogengine::ParseNodeMsg(*v31, v17);
          if (v32)
          {
            if (!*((void *)v54 + 37)) {
              operator new();
            }
            std::shared_ptr<siri::dialogengine::Node>::shared_ptr[abi:ne180100]<siri::dialogengine::Node,void>(&v64, v32);
          }
        }
        else
        {
          if (v87) {
            uint64_t v33 = (siri::dialogengine **)(v87 + 8);
          }
          else {
            uint64_t v33 = 0;
          }
          if (v86)
          {
            uint64_t v34 = 8 * v86;
            do
            {
              uint64_t v35 = (const void *)siri::dialogengine::ParseNodeMsg(*v33, v17);
              if (v35)
              {
                if (v37) {
                  std::shared_ptr<siri::dialogengine::VisualRef>::shared_ptr[abi:ne180100]<siri::dialogengine::VisualRef,void>(&v55, (uint64_t)v37);
                }
              }
              siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Visual ref from node message is null", v36);
              ++v33;
              v34 -= 8;
            }
            while (v34);
          }
          if ((v76 & 0x10) != 0)
          {
            if (*((char *)v92 + 23) < 0)
            {
              std::string::__init_copy_ctor_external(&v64, *(const std::string::value_type **)v92, *((void *)v92 + 1));
            }
            else
            {
              long long v38 = *v92;
              v64.__r_.__value_.__r.__words[2] = *((void *)v92 + 2);
              *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v38;
            }
            std::string::size_type size = HIBYTE(v64.__r_.__value_.__r.__words[2]);
            char v48 = HIBYTE(v64.__r_.__value_.__r.__words[2]);
            if ((v64.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type size = v64.__r_.__value_.__l.__size_;
            }
            if (size)
            {
              _ZNSt3__115allocate_sharedB8ne180100IN4siri12dialogengine14VisualResponseENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_((siri::dialogengine::VisualResponse **)&v63);
              std::string::size_type v49 = v63.__r_.__value_.__r.__words[0];
              if ((google::protobuf::MessageLite::ParseFromString(v63.__r_.__value_.__r.__words[0] + 208, &v64) & 1) == 0) {
                siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Could not parse Visual CAT from array", v50);
              }
              uint64_t v51 = (std::__shared_weak_count *)v63.__r_.__value_.__l.__size_;
              if (v63.__r_.__value_.__l.__size_)
              {
                atomic_fetch_add_explicit((atomic_ullong *volatile)(v63.__r_.__value_.__l.__size_ + 8), 1uLL, memory_order_relaxed);
                atomic_fetch_add_explicit(&v51->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              unint64_t v52 = (std::__shared_weak_count *)*((void *)v54 + 33);
              *((void *)v54 + 32) = v49;
              *((void *)v54 + 33) = v51;
              if (v52) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v52);
              }
              if (v51)
              {
                std::__shared_weak_count::__release_shared[abi:ne180100](v51);
                std::__shared_weak_count::__release_shared[abi:ne180100](v51);
              }
              char v48 = HIBYTE(v64.__r_.__value_.__r.__words[2]);
            }
            if (v48 < 0) {
              operator delete(v64.__r_.__value_.__l.__data_);
            }
          }
          *a3 = v74;
          a3 = &v74;
        }
      }
      *(void *)a3 = 0;
      *((void *)a3 + 1) = 0;
      if (*((void *)&v74 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v74 + 1));
      }
LABEL_25:
      siri::dialogengine::CatBinary::cat::~cat((siri::dialogengine::CatBinary::cat *)v75);
      google::protobuf::SetLogHandler(v53);
      if ((v95 & 0x80) == 0) {
        return;
      }
      goto LABEL_26;
    }
    uint64_t v22 = 8 * v79;
    while (1)
    {
      uint64_t v23 = *v21;
      unint64_t v24 = *(const std::string **)(*v21 + 24);
      uint64_t v25 = *(const std::string **)(*v21 + 32);
      std::string::basic_string[abi:ne180100]<0>(&v63, "");
      std::string::basic_string[abi:ne180100]<0>(&v62, "");
      std::string::basic_string[abi:ne180100]<0>(&v61, "");
      std::string::basic_string[abi:ne180100]<0>(&v60, "");
      std::string::basic_string[abi:ne180100]<0>(&v59, "");
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      siri::dialogengine::Parameter::Parameter((uint64_t)&v64, v24, v25, &v63, &v62, &v61, &v60, &v59, &__p, 1, 0, 0, 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v59.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v60.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v61.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v62.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v63.__r_.__value_.__l.__data_);
      }
      std::string::operator=(&v65, *(const std::string **)(v23 + 40));
      std::string::operator=(&v71, *(const std::string **)(v23 + 48));
      std::string::operator=(v66, *(const std::string **)(v23 + 56));
      std::string::operator=(&v67, *(const std::string **)(v23 + 64));
      std::string::operator=(v72, *(const std::string **)(v23 + 72));
      int v26 = *(_DWORD *)(v23 + 16);
      if ((v26 & 0x100) != 0)
      {
        char v69 = *(unsigned char *)(v23 + 81);
        if ((v26 & 0x80) != 0)
        {
LABEL_70:
          char v68 = *(unsigned char *)(v23 + 80);
          if ((v26 & 0x200) == 0) {
            goto LABEL_67;
          }
LABEL_66:
          char v70 = *(unsigned char *)(v23 + 82);
          goto LABEL_67;
        }
      }
      else if ((v26 & 0x80) != 0)
      {
        goto LABEL_70;
      }
      if ((v26 & 0x200) != 0) {
        goto LABEL_66;
      }
LABEL_67:
      siri::dialogengine::File::AddParameter(v54, (const siri::dialogengine::Parameter *)&v64);
      v73[8] = &unk_1F21271E8;
      std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy((void *)v73[10]);
      siri::dialogengine::LineNumberBase::~LineNumberBase(v73);
      siri::dialogengine::ObjectProperty::~ObjectProperty((void **)&v64.__r_.__value_.__l.__data_);
      ++v21;
      v22 -= 8;
      if (!v22) {
        goto LABEL_72;
      }
    }
  }
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  if ((v7 & 0x80) == 0) {
    return;
  }
LABEL_26:
  operator delete(v94[0]);
}

void sub_1C5DBFA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, int a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)())
{
  if ((a14 & 1) == 0) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  siri::dialogengine::CatBinary::cat::~cat((siri::dialogengine::CatBinary::cat *)&STACK[0x2C8]);
  google::protobuf::SetLogHandler(a20);
  if (*(char *)(v20 - 89) < 0) {
    operator delete(*(void **)(v20 - 112));
  }
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::ParseConditionEntry(uint64_t *a1, uint64_t a2)
{
  switch(*(_DWORD *)(a2 + 80))
  {
    case 0:
      operator new();
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      operator new();
    default:
      if (*((char *)a1 + 23) >= 0) {
        uint64_t v2 = a1;
      }
      else {
        uint64_t v2 = (uint64_t *)*a1;
      }
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Invalid or missing condition entry type: '%d' on '%s", (const char *)a2, *(unsigned int *)(a2 + 80), v2);
      return 0;
  }
}

void sub_1C5DBFFD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::ParseNodeMsg(siri::dialogengine *this, const siri::dialogengine::CatBinary::node *a2)
{
  switch(*((_DWORD *)this + 42))
  {
    case 0:
      operator new();
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      operator new();
    case 5:
      operator new();
    case 6:
      operator new();
    default:
      std::string::basic_string[abi:ne180100]<0>(&v5, "siri.dialogengine.CatBinary.node");
      if ((v5.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v3 = &v5;
      }
      else {
        uint64_t v3 = (std::string *)v5.__r_.__value_.__r.__words[0];
      }
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Unrecognized group node type '%s'", v2, v3);
      if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v5.__r_.__value_.__l.__data_);
      }
      return 0;
  }
}

void sub_1C5DC06D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
}

void std::shared_ptr<siri::dialogengine::Group>::shared_ptr[abi:ne180100]<siri::dialogengine::Group,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1C5DC07C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

void std::shared_ptr<siri::dialogengine::Node>::shared_ptr[abi:ne180100]<siri::dialogengine::Node,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1C5DC0860(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

siri::dialogengine::VisualResponse *_ZNSt3__115allocate_sharedB8ne180100IN4siri12dialogengine14VisualResponseENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(siri::dialogengine::VisualResponse **a1)
{
  uint64_t v2 = operator new(0x180uLL);
  v2[1] = 0;
  v2[2] = 0;
  *uint64_t v2 = &unk_1F2121A68;
  __n128 result = siri::dialogengine::VisualResponse::VisualResponse((siri::dialogengine::VisualResponse *)(v2 + 3));
  *a1 = result;
  a1[1] = (siri::dialogengine::VisualResponse *)v2;
  return result;
}

void sub_1C5DC08E8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::VisualResponse>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::VisualResponse>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2121A68;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::VisualResponse>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2121A68;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::Node *,std::shared_ptr<siri::dialogengine::Node>::__shared_ptr_default_delete<siri::dialogengine::Node,siri::dialogengine::Node>,std::allocator<siri::dialogengine::Node>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::Node *,std::shared_ptr<siri::dialogengine::Node>::__shared_ptr_default_delete<siri::dialogengine::Node,siri::dialogengine::Node>,std::allocator<siri::dialogengine::Node>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::Node *,std::shared_ptr<siri::dialogengine::Node>::__shared_ptr_default_delete<siri::dialogengine::Node,siri::dialogengine::Node>,std::allocator<siri::dialogengine::Node>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::Group *,std::shared_ptr<siri::dialogengine::Group>::__shared_ptr_default_delete<siri::dialogengine::Group,siri::dialogengine::Group>,std::allocator<siri::dialogengine::Group>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::Group *,std::shared_ptr<siri::dialogengine::Group>::__shared_ptr_default_delete<siri::dialogengine::Group,siri::dialogengine::Group>,std::allocator<siri::dialogengine::Group>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::Group *,std::shared_ptr<siri::dialogengine::Group>::__shared_ptr_default_delete<siri::dialogengine::Group,siri::dialogengine::Group>,std::allocator<siri::dialogengine::Group>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

double siri::dialogengine::Text::Text(siri::dialogengine::Text *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 9) = (char *)this + 80;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 1065353216;
  *((void *)this + 25) = 0;
  *(void *)this = &unk_1F2121998;
  *((void *)this + 8) = &unk_1F21219F0;
  *((void *)this + 46) = 0;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  return result;
}

double siri::dialogengine::Dialog::Dialog(siri::dialogengine::Dialog *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 9) = (char *)this + 80;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_DWORD *)this + 48) = 1065353216;
  *((void *)this + 25) = 0;
  *(void *)this = &unk_1F2122610;
  *((void *)this + 8) = &unk_1F2122668;
  *(_OWORD *)((char *)this + 568) = 0u;
  *(_OWORD *)((char *)this + 584) = 0u;
  *(_OWORD *)((char *)this + 552) = 0u;
  *((_DWORD *)this + 136) = 0;
  *((_OWORD *)this + 32) = 0u;
  *((_OWORD *)this + 33) = 0u;
  *((_OWORD *)this + 3std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 31) = 0u;
  *((_OWORD *)this + 28) = 0u;
  *((_OWORD *)this + 29) = 0u;
  *((_OWORD *)this + 26) = 0u;
  *((_OWORD *)this + 27) = 0u;
  *((_OWORD *)this + 24) = 0u;
  *((_OWORD *)this + 25) = 0u;
  *((_OWORD *)this + 22) = 0u;
  *((_OWORD *)this + 23) = 0u;
  *((_OWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 21) = 0u;
  *((_OWORD *)this + 18) = 0u;
  *((_OWORD *)this + 19) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 13) = 0u;
  return result;
}

void siri::dialogengine::ScopedLogHandler::logHandler(int a1, const char *a2, uint64_t a3, uint64_t *a4)
{
  if (a1 == 1)
  {
    if (*((char *)a4 + 23) >= 0) {
      std::string v5 = a4;
    }
    else {
      std::string v5 = (uint64_t *)*a4;
    }
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"%s at %s:%d", a2, v5, a2, a3);
  }
  else if (a1)
  {
    if (*((char *)a4 + 23) >= 0) {
      unint64_t v6 = a4;
    }
    else {
      unint64_t v6 = (uint64_t *)*a4;
    }
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"%s at %s:%d", a2, v6, a2, a3);
  }
  else
  {
    if (*((char *)a4 + 23) >= 0) {
      uint64_t v4 = a4;
    }
    else {
      uint64_t v4 = (uint64_t *)*a4;
    }
    siri::dialogengine::Log::Info((siri::dialogengine::Log *)"%s at %s:%d", a2, v4, a2, a3);
  }
}

void sub_1C5DC0F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DC1038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DC1110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void siri::dialogengine::GetOption(void *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  siri::dialogengine::StringToLower(a2, (uint64_t)__p);
  uint64_t v5 = a1[1] - *a1;
  if (!v5)
  {
LABEL_26:
    std::string::basic_string[abi:ne180100]<0>(a3, "");
    goto LABEL_27;
  }
  unint64_t v6 = 0;
  unint64_t v7 = v5 / 24;
  unint64_t v8 = v7 - 1;
  if (v7 <= 1) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = v7;
  }
  while (1)
  {
    siri::dialogengine::StringToLower(*a1 + 24 * v6, (uint64_t)&__s1);
    uint64_t v10 = v21;
    unsigned __int8 v11 = v21;
    if ((v21 & 0x80u) == 0) {
      size_t v12 = v21;
    }
    else {
      size_t v12 = __n;
    }
    unint64_t v13 = v23;
    if ((v23 & 0x80u) != 0) {
      unint64_t v13 = (unint64_t)__p[1];
    }
    if (v12 == v13)
    {
      uint64_t v14 = (v23 & 0x80u) == 0 ? __p : (void **)__p[0];
      if ((v21 & 0x80) != 0)
      {
        BOOL v16 = memcmp(__s1, v14, __n) == 0;
      }
      else
      {
        if (v21)
        {
          p_s1 = &__s1;
          while (*(unsigned __int8 *)p_s1 == *(unsigned __int8 *)v14)
          {
            p_s1 = (void **)((char *)p_s1 + 1);
            uint64_t v14 = (void **)((char *)v14 + 1);
            if (!--v10) {
              goto LABEL_19;
            }
          }
          goto LABEL_23;
        }
LABEL_19:
        BOOL v16 = 1;
      }
      if (v6 < v8 && v16) {
        break;
      }
    }
LABEL_23:
    if ((v11 & 0x80) != 0) {
      operator delete(__s1);
    }
    if (++v6 == v9) {
      goto LABEL_26;
    }
  }
  uint64_t v17 = *a1 + 24 * v6;
  if (*(char *)(v17 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)(v17 + 24), *(void *)(v17 + 32));
    if ((v21 & 0x80) != 0) {
      goto LABEL_34;
    }
  }
  else
  {
    long long v18 = *(_OWORD *)(v17 + 24);
    a3->__r_.__value_.__r.__words[2] = *(void *)(v17 + 40);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v18;
    if ((v11 & 0x80) != 0) {
LABEL_34:
    }
      operator delete(__s1);
  }
LABEL_27:
  if ((char)v23 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C5DC1300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::GetMultipleOptions(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  siri::dialogengine::StringToLower(a2, (uint64_t)v27);
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v5 = a1[1] - *a1;
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    unint64_t v8 = v5 / 24;
    if (v8 <= 1) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = v8;
    }
    while (1)
    {
      siri::dialogengine::StringToLower(*a1 + 24 * v6, (uint64_t)&__s1);
      uint64_t v10 = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
      if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __s1.__r_.__value_.__l.__size_;
      }
      unint64_t v12 = v28;
      if ((v28 & 0x80u) != 0) {
        unint64_t v12 = (unint64_t)v27[1];
      }
      if (size == v12)
      {
        if ((v28 & 0x80u) == 0) {
          unint64_t v13 = v27;
        }
        else {
          unint64_t v13 = (void **)v27[0];
        }
        if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
        {
          int v17 = memcmp(__s1.__r_.__value_.__l.__data_, v13, __s1.__r_.__value_.__l.__size_);
          BOOL v18 = v17 == 0;
          uint64_t v16 = v18 | v7;
          int v15 = 4 * v18;
          if (!v17 || ((v7 ^ 1) & 1) != 0) {
            goto LABEL_33;
          }
LABEL_24:
          std::string::basic_string[abi:ne180100]<0>(__p, "-");
          BOOL v19 = siri::dialogengine::StringStartsWith(&__s1, (unsigned __int8 *)__p);
          BOOL v20 = v19;
          if (v25 < 0)
          {
            operator delete(__p[0]);
            if (!v20) {
              goto LABEL_28;
            }
LABEL_26:
            int v15 = 2;
          }
          else
          {
            if (v19) {
              goto LABEL_26;
            }
LABEL_28:
            unsigned __int8 v21 = (long long *)(*a1 + 24 * v6);
            unint64_t v22 = a3[1];
            if (v22 >= a3[2])
            {
              uint64_t v23 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a3, v21);
            }
            else
            {
              std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a3, v21);
              uint64_t v23 = v22 + 24;
            }
            int v15 = 0;
            a3[1] = v23;
          }
          uint64_t v16 = v7;
          goto LABEL_33;
        }
        if (!*((unsigned char *)&__s1.__r_.__value_.__s + 23))
        {
LABEL_19:
          int v15 = 4;
          uint64_t v16 = 1;
          goto LABEL_33;
        }
        p_s1 = &__s1;
        while (p_s1->__r_.__value_.__s.__data_[0] == *(unsigned __int8 *)v13)
        {
          p_s1 = (std::string *)((char *)p_s1 + 1);
          unint64_t v13 = (void **)((char *)v13 + 1);
          if (!--v10) {
            goto LABEL_19;
          }
        }
      }
      if (v7) {
        goto LABEL_24;
      }
      uint64_t v16 = 0;
      int v15 = 0;
LABEL_33:
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
      if ((v15 | 4) == 4)
      {
        ++v6;
        uint64_t v7 = v16;
        if (v6 != v9) {
          continue;
        }
      }
      break;
    }
  }
  if ((char)v28 < 0) {
    operator delete(v27[0]);
  }
}

void sub_1C5DC1544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::OptionExists(uint64_t *a1, uint64_t a2)
{
  siri::dialogengine::StringToLower(a2, (uint64_t)v19);
  uint64_t v3 = *a1;
  if (a1[1] == *a1)
  {
LABEL_26:
    uint64_t v14 = 0;
    goto LABEL_28;
  }
  unint64_t v4 = 0;
  while (1)
  {
    siri::dialogengine::StringToLower(v3 + 24 * v4, (uint64_t)&__p);
    if ((v18 & 0x80u) == 0) {
      size_t v5 = v18;
    }
    else {
      size_t v5 = __n;
    }
    unint64_t v6 = v20;
    if ((v20 & 0x80u) != 0) {
      unint64_t v6 = (unint64_t)v19[1];
    }
    if (v5 != v6)
    {
      if ((v18 & 0x80) != 0) {
        operator delete(__p);
      }
      goto LABEL_25;
    }
    uint64_t v7 = (v20 & 0x80u) == 0 ? v19 : (void **)v19[0];
    if ((v18 & 0x80) == 0) {
      break;
    }
    unint64_t v12 = __p;
    int v13 = memcmp(__p, v7, __n);
    operator delete(v12);
    if (!v13) {
      goto LABEL_27;
    }
LABEL_25:
    ++v4;
    uint64_t v3 = *a1;
    if (v4 >= 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3)) {
      goto LABEL_26;
    }
  }
  if (v18)
  {
    uint64_t v8 = 0;
    do
    {
      int v9 = *((unsigned __int8 *)&__p + v8);
      int v10 = *((unsigned __int8 *)v7 + v8);
    }
    while (v9 == v10 && v18 - 1 != v8++);
    if (v9 != v10) {
      goto LABEL_25;
    }
  }
LABEL_27:
  uint64_t v14 = 1;
LABEL_28:
  if ((char)v20 < 0) {
    operator delete(v19[0]);
  }
  return v14;
}

void sub_1C5DC16F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::dialogengine::PopOption(uint64_t *a1, uint64_t a2)
{
  if (!a1) {
    return 0;
  }
  siri::dialogengine::StringToLower(a2, (uint64_t)v15);
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == v4) {
    goto LABEL_23;
  }
  do
  {
    siri::dialogengine::StringToLower(v3, (uint64_t)&__p);
    if ((v19 & 0x80u) == 0) {
      size_t v5 = v19;
    }
    else {
      size_t v5 = __n;
    }
    unint64_t v6 = v16;
    if ((v16 & 0x80u) != 0) {
      unint64_t v6 = (unint64_t)v15[1];
    }
    if (v5 != v6) {
      goto LABEL_18;
    }
    if ((v16 & 0x80u) == 0) {
      uint64_t v7 = v15;
    }
    else {
      uint64_t v7 = (void **)v15[0];
    }
    if ((v19 & 0x80) == 0)
    {
      if (!v19) {
        goto LABEL_23;
      }
      uint64_t v8 = 0;
      while (*((unsigned __int8 *)&__p + v8) == *((unsigned __int8 *)v7 + v8))
      {
        if (v19 == ++v8) {
          goto LABEL_23;
        }
      }
LABEL_18:
      if ((v19 & 0x80) != 0) {
        operator delete(__p);
      }
      goto LABEL_21;
    }
    int v9 = __p;
    int v10 = memcmp(__p, v7, __n);
    operator delete(v9);
    if (!v10) {
      goto LABEL_23;
    }
LABEL_21:
    v3 += 24;
  }
  while (v3 != v4);
  uint64_t v3 = v4;
LABEL_23:
  uint64_t v11 = a1[1];
  BOOL v12 = v3 != v11;
  if (v3 != v11)
  {
    if (v3 + 24 != v11)
    {
      do
      {
        if (*(char *)(v3 + 23) < 0) {
          operator delete(*(void **)v3);
        }
        *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
        *(void *)(v3 + 16) = *(void *)(v3 + 40);
        *(unsigned char *)(v3 + 47) = 0;
        uint64_t v13 = v3 + 48;
        *(unsigned char *)(v3 + 24) = 0;
        v3 += 24;
      }
      while (v13 != v11);
      uint64_t v11 = a1[1];
    }
    while (v11 != v3)
    {
      if (*(char *)(v11 - 1) < 0) {
        operator delete(*(void **)(v11 - 24));
      }
      v11 -= 24;
    }
    a1[1] = v3;
  }
  if ((char)v16 < 0) {
    operator delete(v15[0]);
  }
  return v12;
}

void sub_1C5DC18BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::PopStringOptions(std::vector<std::string> *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (a1)
  {
    siri::dialogengine::StringToLower(a2, (uint64_t)&__s1);
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    unint64_t v34 = 0;
    std::vector<std::string>::pointer begin = a1->__begin_;
    uint64_t v6 = (char *)a1->__end_ - (char *)a1->__begin_;
    if (v6)
    {
      unint64_t v7 = 0;
      unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
      while (1)
      {
        unint64_t v9 = v7 + 1;
        if (v7 + 1 >= v8)
        {
LABEL_31:
          int v26 = &begin[v7];
          unint64_t v27 = v33;
          if ((unint64_t)v33 >= v34)
          {
            uint64_t v29 = (long long *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v32, (long long *)v26);
          }
          else
          {
            if (SHIBYTE(v26->__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::__init_copy_ctor_external(v33, v26->__r_.__value_.__l.__data_, v26->__r_.__value_.__l.__size_);
            }
            else
            {
              long long v28 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
              v33->__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
              *(_OWORD *)&v27->__r_.__value_.__l.__data_ = v28;
            }
            uint64_t v29 = (long long *)&v27[1];
          }
          uint64_t v33 = (std::string *)v29;
          unint64_t v7 = v9;
          goto LABEL_40;
        }
        siri::dialogengine::StringToLower((uint64_t)&begin[v7], (uint64_t)__p);
        if ((v37 & 0x80u) == 0) {
          size_t v10 = v37;
        }
        else {
          size_t v10 = __n;
        }
        unint64_t v11 = v31;
        int v12 = (char)v31;
        if ((v31 & 0x80u) != 0) {
          unint64_t v11 = (unint64_t)__p[1];
        }
        if (v10 != v11) {
          break;
        }
        if ((v31 & 0x80u) == 0) {
          uint64_t v13 = __p;
        }
        else {
          uint64_t v13 = (void **)__p[0];
        }
        if ((v37 & 0x80) != 0)
        {
          BOOL v22 = memcmp(__s1, v13, __n) == 0;
LABEL_26:
          if ((v12 & 0x80000000) == 0) {
            goto LABEL_28;
          }
LABEL_27:
          operator delete(__p[0]);
          goto LABEL_28;
        }
        if (v37)
        {
          uint64_t v14 = v37 - 1;
          p_s1 = &__s1;
          do
          {
            int v17 = *(unsigned __int8 *)p_s1;
            p_s1 = (void **)((char *)p_s1 + 1);
            int v16 = v17;
            int v19 = *(unsigned __int8 *)v13;
            uint64_t v13 = (void **)((char *)v13 + 1);
            int v18 = v19;
            BOOL v21 = v14-- != 0;
            BOOL v22 = v16 == v18;
          }
          while (v16 == v18 && v21);
          goto LABEL_26;
        }
        BOOL v22 = 1;
        if ((char)v31 < 0) {
          goto LABEL_27;
        }
LABEL_28:
        std::vector<std::string>::pointer begin = a1->__begin_;
        if (!v22) {
          goto LABEL_31;
        }
        uint64_t v23 = (long long *)&begin[v9];
        unint64_t v24 = a3[1];
        if (v24 >= a3[2])
        {
          uint64_t v25 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a3, v23);
        }
        else
        {
          std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a3, v23);
          uint64_t v25 = v24 + 24;
        }
        a3[1] = v25;
        v7 += 2;
LABEL_40:
        std::vector<std::string>::pointer begin = a1->__begin_;
        unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)a1->__end_ - (char *)a1->__begin_) >> 3);
        if (v7 >= v8) {
          goto LABEL_44;
        }
      }
      BOOL v22 = 0;
      if (((char)v31 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
LABEL_44:
    if (&v32 != (std::string **)a1) {
      std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>(a1, v32, (long long *)v33, 0xAAAAAAAAAAAAAAABLL * (((char *)v33 - (char *)v32) >> 3));
    }
    __p[0] = &v32;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__p);
    if ((char)v37 < 0) {
      operator delete(__s1);
    }
  }
}

void sub_1C5DC1B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  a10 = &a13;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a10);
  if (a21 < 0) {
    operator delete(__p);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PopStringOption(std::vector<std::string> *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  siri::dialogengine::PopStringOptions(a1, a2, &v5);
  if (v6 == v5)
  {
    std::string::basic_string[abi:ne180100]<0>(a3, "");
  }
  else if (*(char *)(v6 - 1) < 0)
  {
    std::string::__init_copy_ctor_external(a3, *(const std::string::value_type **)(v6 - 24), *(void *)(v6 - 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(v6 - 24);
    a3->__r_.__value_.__r.__words[2] = *(void *)(v6 - 8);
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = v4;
  }
  unint64_t v7 = (void **)&v5;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v7);
}

void sub_1C5DC1BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PopStringSetOption(std::vector<std::string> *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    siri::dialogengine::StringToLower(a2, (uint64_t)__p);
    p_int data = (void **)&a1->__end_->__r_.__value_.__l.__data_;
    if ((void **)a1->__begin_ != p_data)
    {
      while (1)
      {
        siri::dialogengine::StringToLower((uint64_t)(p_data - 3), (uint64_t)&__s1);
        if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __s1.__r_.__value_.__l.__size_;
        }
        unint64_t v8 = v24;
        if ((v24 & 0x80u) != 0) {
          unint64_t v8 = (unint64_t)__p[1];
        }
        if (size != v8) {
          break;
        }
        if ((v24 & 0x80u) == 0) {
          unint64_t v9 = __p;
        }
        else {
          unint64_t v9 = (void **)__p[0];
        }
        if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0)
        {
          uint64_t v14 = (void *)__s1.__r_.__value_.__r.__words[0];
          int v15 = memcmp(__s1.__r_.__value_.__l.__data_, v9, __s1.__r_.__value_.__l.__size_);
          operator delete(v14);
          if (v15) {
            goto LABEL_30;
          }
        }
        else if (*((unsigned char *)&__s1.__r_.__value_.__s + 23))
        {
          uint64_t v10 = 0;
          do
          {
            int v11 = __s1.__r_.__value_.__s.__data_[v10];
            int v12 = *((unsigned __int8 *)v9 + v10);
          }
          while (v11 == v12 && HIBYTE(__s1.__r_.__value_.__r.__words[2]) - 1 != v10++);
          if (v11 != v12) {
            goto LABEL_30;
          }
        }
        std::vector<std::string>::pointer end = a1->__end_;
        p_int data = (void **)&end[-1].__r_.__value_.__l.__data_;
        if (SHIBYTE(end[-1].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(*p_data);
        }
        a1->__end_ = (std::vector<std::string>::pointer)p_data;
        if ((void **)a1->__begin_ == p_data) {
          goto LABEL_30;
        }
      }
      if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
    }
LABEL_30:
    if (siri::dialogengine::OptionExists((uint64_t *)a1, a2))
    {
      siri::dialogengine::PopStringOption(a1, a2, &__s1);
      siri::dialogengine::StringSplit((unsigned __int8 *)&__s1, ", ", v21);
      int v17 = (const void **)v21[0];
      int v18 = (const void **)v21[1];
      v20[0] = 0;
      v20[1] = 0;
      int v19 = v20;
      while (v17 != v18)
      {
        std::__tree<std::string>::__emplace_hint_unique_key_args<std::string,std::string const&>((uint64_t **)&v19, (uint64_t)v20, v17, (uint64_t)v17);
        v17 += 3;
      }
      std::set<std::string>::set[abi:ne180100]((uint64_t *)a3, (const void ***)&v19);
      *(unsigned char *)(a3 + 24) = 1;
      std::__tree<std::string>::destroy((uint64_t)&v19, v20[0]);
      int v19 = (char **)v21;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v19);
      if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s1.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      *(unsigned char *)a3 = 0;
      *(unsigned char *)(a3 + 24) = 0;
    }
    if ((char)v24 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 24) = 0;
  }
}

void sub_1C5DC1E28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *a9, char *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  a9 = &a12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a9);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetExecutableName(uint64_t *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (v3 == a1[1]) {
    std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
  else {
    siri::dialogengine::BaseName(v3, a2);
  }
}

uint64_t YAML::operator<<(uint64_t a1, const YAML::Node *a2)
{
  v7[0] = &unk_1F211C1B8;
  v7[1] = a1;
  memset(v8, 0, sizeof(v8));
  YAML::NodeEvents::NodeEvents((YAML::NodeEvents *)&v4, a2);
  YAML::NodeEvents::Emit((YAML::NodeEvents *)&v4, (uint64_t)v7);
  std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(v6);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  v7[0] = &unk_1F211C1B8;
  std::deque<YAML::EmitFromEvents::State::value>::~deque[abi:ne180100]((uint64_t)v8);
  return a1;
}

void sub_1C5DC1F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  YAML::NodeEvents::~NodeEvents((YAML::NodeEvents *)&a9);
  std::deque<YAML::EmitFromEvents::State::value>::~deque[abi:ne180100](v15);
  _Unwind_Resume(a1);
}

void std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(*a1);
    std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(a1[1]);
    operator delete(a1);
  }
}

void YAML::NodeEvents::~NodeEvents(YAML::NodeEvents *this)
{
  std::__tree<std::__value_type<YAML::detail::node_ref const*,int>,std::__map_value_compare<YAML::detail::node_ref const*,std::__value_type<YAML::detail::node_ref const*,int>,std::less<YAML::detail::node_ref const*>,true>,std::allocator<std::__value_type<YAML::detail::node_ref const*,int>>>::destroy(*((void **)this + 4));
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 1);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
}

void YAML::operator<<()
{
}

void sub_1C5DC204C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Emitter::~Emitter((YAML::Emitter *)va);
  _Unwind_Resume(a1);
}

void YAML::Dump(YAML *this, const YAML::Node *a2)
{
  YAML::Emitter::Emitter((YAML::Emitter *)v2);
}

void sub_1C5DC20D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  YAML::Emitter::~Emitter((YAML::Emitter *)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::TestResult::TestResult(std::string *this, const siri::dialogengine::TestCase *a2)
{
  uint64_t v2 = siri::dialogengine::TestCase::TestCase(this, a2);
  LODWORD(v2[10].__r_.__value_.__r.__words[2]) = 0;
  v2[11].__r_.__value_.__l.__size_ = 0;
  v2[11].__r_.__value_.__r.__words[2] = 0;
  v2[11].__r_.__value_.__r.__words[0] = 0;
  operator new();
}

void sub_1C5DC2164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  int v12 = v11;
  a10 = v12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&a10);
  siri::dialogengine::TestCase::~TestCase(v10);
  _Unwind_Resume(a1);
}

std::string *siri::dialogengine::TestCase::TestCase(std::string *this, const siri::dialogengine::TestCase *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *(_OWORD *)a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v5;
  }
  if (*((char *)a2 + 71) < 0)
  {
    std::string::__init_copy_ctor_external(this + 2, *((const std::string::value_type **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 3);
    this[2].__r_.__value_.__r.__words[2] = *((void *)a2 + 8);
    *(_OWORD *)&this[2].__r_.__value_.__l.__data_ = v6;
  }
  if (*((char *)a2 + 95) < 0)
  {
    std::string::__init_copy_ctor_external(this + 3, *((const std::string::value_type **)a2 + 9), *((void *)a2 + 10));
  }
  else
  {
    long long v7 = *(_OWORD *)((char *)a2 + 72);
    this[3].__r_.__value_.__r.__words[2] = *((void *)a2 + 11);
    *(_OWORD *)&this[3].__r_.__value_.__l.__data_ = v7;
  }
  if (*((char *)a2 + 119) < 0)
  {
    std::string::__init_copy_ctor_external(this + 4, *((const std::string::value_type **)a2 + 12), *((void *)a2 + 13));
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 6);
    this[4].__r_.__value_.__r.__words[2] = *((void *)a2 + 14);
    *(_OWORD *)&this[4].__r_.__value_.__l.__data_ = v8;
  }
  this[5].__r_.__value_.__s.__data_[0] = *((unsigned char *)a2 + 120);
  if (*((char *)a2 + 151) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 128), *((const std::string::value_type **)a2 + 16), *((void *)a2 + 17));
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 8);
    this[6].__r_.__value_.__r.__words[0] = *((void *)a2 + 18);
    *(_OWORD *)&this[5].__r_.__value_.__r.__words[1] = v9;
  }
  if (*((char *)a2 + 175) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 152), *((const std::string::value_type **)a2 + 19), *((void *)a2 + 20));
  }
  else
  {
    long long v10 = *(_OWORD *)((char *)a2 + 152);
    this[7].__r_.__value_.__r.__words[0] = *((void *)a2 + 21);
    *(_OWORD *)&this[6].__r_.__value_.__r.__words[1] = v10;
  }
  if (*((char *)a2 + 199) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)((char *)this + 176), *((const std::string::value_type **)a2 + 22), *((void *)a2 + 23));
  }
  else
  {
    long long v11 = *((_OWORD *)a2 + 11);
    this[8].__r_.__value_.__r.__words[0] = *((void *)a2 + 24);
    *(_OWORD *)&this[7].__r_.__value_.__r.__words[1] = v11;
  }
  this[8].__r_.__value_.__l.__size_ = 0;
  this[8].__r_.__value_.__r.__words[2] = 0;
  this[9].__r_.__value_.__r.__words[0] = 0;
  std::vector<std::shared_ptr<siri::dialogengine::Condition>>::__init_with_size[abi:ne180100]<std::shared_ptr<siri::dialogengine::Condition>*,std::shared_ptr<siri::dialogengine::Condition>*>(&this[8].__r_.__value_.__l.__size_, *((void **)a2 + 25), *((void **)a2 + 26), (uint64_t)(*((void *)a2 + 26) - *((void *)a2 + 25)) >> 4);
  __int16 v12 = *((_WORD *)a2 + 112);
  this[9].__r_.__value_.__r.__words[2] = 0;
  LOWORD(this[9].__r_.__value_.__r.__words[1]) = v12;
  this[10].__r_.__value_.__r.__words[0] = 0;
  this[10].__r_.__value_.__l.__size_ = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>((std::string *)((char *)this + 232), *((long long **)a2 + 29), *((long long **)a2 + 30), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 30) - *((void *)a2 + 29)) >> 3));
  return this;
}

void sub_1C5DC23A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 175) < 0) {
    operator delete(*v16);
  }
  if (*(char *)(v10 + 151) < 0) {
    operator delete(*v15);
  }
  if (*(char *)(v10 + 119) < 0) {
    operator delete(*v14);
  }
  if (*(char *)(v10 + 95) < 0) {
    operator delete(*v13);
  }
  if (*(char *)(v10 + 71) < 0) {
    operator delete(*v12);
  }
  if (*(char *)(v10 + 47) < 0) {
    operator delete(*v11);
  }
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(exception_object);
}

std::string *siri::dialogengine::TestResult::GetTestCase@<X0>(siri::dialogengine::TestResult *this@<X0>, std::string *a2@<X8>)
{
  return siri::dialogengine::TestCase::TestCase(a2, this);
}

uint64_t siri::dialogengine::TestResult::SetStatus(uint64_t result, int a2)
{
  *(_DWORD *)(result + 256) = a2;
  return result;
}

uint64_t siri::dialogengine::TestResult::GetStatus(siri::dialogengine::TestResult *this)
{
  return *((unsigned int *)this + 64);
}

void *siri::dialogengine::TestResult::GetStatusAsString@<X0>(siri::dialogengine::TestResult *this@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *((unsigned int *)this + 64);
  if (v4 > 3) {
    long long v5 = "???";
  }
  else {
    long long v5 = off_1E651DF90[v4];
  }
  return std::string::basic_string[abi:ne180100]<0>(a2, v5);
}

uint64_t siri::dialogengine::TestResult::AddNote(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = (uint64_t *)(result + 264);
    unint64_t v5 = *(void *)(v3 + 272);
    if (v5 >= *(void *)(v3 + 280))
    {
      double result = std::vector<std::string>::__push_back_slow_path<std::string const&>(v4, (long long *)a2);
    }
    else
    {
      std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)v4, (long long *)a2);
      double result = v5 + 24;
    }
    *(void *)(v3 + 272) = result;
  }
  return result;
}

std::string *siri::dialogengine::TestResult::GetNotes@<X0>(long long **this@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a2, this[33], this[34], 0xAAAAAAAAAAAAAAABLL * (((char *)this[34] - (char *)this[33]) >> 3));
}

std::string **siri::dialogengine::TestResult::SetExecutionResult(std::string **this, const std::string **a2)
{
  return siri::dialogengine::CATExecutionResult::operator=(this + 36, a2);
}

void siri::dialogengine::TestResult::GetExecutionResult(siri::dialogengine::TestResult *this@<X0>, siri::dialogengine::CATExecutionResult *a2@<X8>)
{
}

void *siri::dialogengine::TestResults::TestResults(void *result, uint64_t a2)
{
  siri::dialogengine::VisualResponse *result = a2;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

{
  siri::dialogengine::VisualResponse *result = a2;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void siri::dialogengine::TestResults::AddResult(siri::dialogengine::TestResults *this, const siri::dialogengine::TestResult *a2)
{
  uint64_t v3 = (char *)this + 24;
  unint64_t v4 = *((void *)this + 3);
  unint64_t v5 = *((void *)this + 2);
  if (v5 < v4) {
    std::allocator<siri::dialogengine::TestResult>::construct[abi:ne180100]<siri::dialogengine::TestResult,siri::dialogengine::TestResult const&>(*((std::string **)this + 2), (uint64_t)a2);
  }
  uint64_t v6 = *((void *)this + 1);
  uint64_t v7 = 0x14C1BACF914C1BADLL * ((uint64_t)(v5 - v6) >> 3);
  if ((unint64_t)(v7 + 1) <= 0xDD67C8A60DD67CLL)
  {
    unint64_t v8 = 0x14C1BACF914C1BADLL * ((uint64_t)(v4 - v6) >> 3);
    uint64_t v9 = 2 * v8;
    if (2 * v8 <= v7 + 1) {
      uint64_t v9 = v7 + 1;
    }
    if (v8 >= 0x6EB3E45306EB3ELL) {
      unint64_t v10 = 0xDD67C8A60DD67CLL;
    }
    else {
      unint64_t v10 = v9;
    }
    int v16 = v3;
    if (v10) {
      unint64_t v10 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::TestResult>>(v10);
    }
    else {
      uint64_t v11 = 0;
    }
    unint64_t v12 = v10;
    uint64_t v13 = (std::string *)(v10 + 296 * v7);
    uint64_t v14 = v13;
    unint64_t v15 = v10 + 296 * v11;
    std::allocator<siri::dialogengine::TestResult>::construct[abi:ne180100]<siri::dialogengine::TestResult,siri::dialogengine::TestResult const&>(v13, (uint64_t)a2);
  }
  std::vector<BOOL>::__throw_length_error[abi:ne180100]();
}

void sub_1C5DC2708(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<siri::dialogengine::TestResult>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::allocator<siri::dialogengine::TestResult>::construct[abi:ne180100]<siri::dialogengine::TestResult,siri::dialogengine::TestResult const&>(std::string *a1, uint64_t a2)
{
  unint64_t v4 = siri::dialogengine::TestCase::TestCase(a1, (const siri::dialogengine::TestCase *)a2);
  LODWORD(v4[10].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 256);
  v4[11].__r_.__value_.__l.__size_ = 0;
  v4[11].__r_.__value_.__r.__words[2] = 0;
  v4[11].__r_.__value_.__r.__words[0] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v4 + 11, *(long long **)(a2 + 264), *(long long **)(a2 + 272), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 272) - *(void *)(a2 + 264)) >> 3));
  siri::dialogengine::CATExecutionResult::CATExecutionResult((siri::dialogengine::CATExecutionResult *)&a1[12], (const siri::dialogengine::CATExecutionResult *)(a2 + 288));
}

void sub_1C5DC27C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  siri::dialogengine::TestCase::~TestCase(v2);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::TestResult>>(unint64_t a1)
{
  if (a1 >= 0xDD67C8A60DD67DLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(296 * a1);
}

uint64_t std::__split_buffer<siri::dialogengine::TestResult>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 296;
    std::allocator<siri::dialogengine::TestResult>::destroy[abi:ne180100]((void **)(i - 296));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::allocator<siri::dialogengine::TestResult>::destroy[abi:ne180100](void **a1)
{
  siri::dialogengine::CATExecutionResult::~CATExecutionResult((siri::dialogengine::CATExecutionResult *)(a1 + 36));
  uint64_t v2 = a1 + 33;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  siri::dialogengine::TestCase::~TestCase(a1);
}

uint64_t siri::dialogengine::TestResults::GetResults@<X0>(uint64_t this@<X0>, std::string **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(this + 8);
  uint64_t v4 = *(void *)(this + 16);
  if (v4 != v3)
  {
    unint64_t v5 = 0x14C1BACF914C1BADLL * ((v4 - v3) >> 3);
    if (v5 < 0xDD67C8A60DD67DLL)
    {
      uint64_t v6 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::TestResult>>(v5);
      *a2 = v6;
      a2[1] = v6;
      a2[2] = (std::string *)((char *)v6 + 296 * v7);
      siri::dialogengine::TestCase::TestCase(v6, (const siri::dialogengine::TestCase *)v3);
      LODWORD(v6[10].__r_.__value_.__r.__words[2]) = *(_DWORD *)(v3 + 256);
      v6[11].__r_.__value_.__l.__size_ = 0;
      v6[11].__r_.__value_.__r.__words[2] = 0;
      v6[11].__r_.__value_.__r.__words[0] = 0;
      std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(v6 + 11, *(long long **)(v3 + 264), *(long long **)(v3 + 272), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v3 + 272) - *(void *)(v3 + 264)) >> 3));
      siri::dialogengine::CATExecutionResult::CATExecutionResult((siri::dialogengine::CATExecutionResult *)&v6[12], (const siri::dialogengine::CATExecutionResult *)(v3 + 288));
    }
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  return this;
}

void sub_1C5DC29FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::vector<siri::dialogengine::TestResult>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  _Unwind_Resume(a1);
}

void std::vector<siri::dialogengine::TestResult>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 37;
        std::allocator<siri::dialogengine::TestResult>::destroy[abi:ne180100](v4);
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t siri::dialogengine::TestResults::GetCountByStatus(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v2 == v3) {
    return 0;
  }
  LODWORD(result) = 0;
  do
  {
    if (*(_DWORD *)(v2 + 256) == a2) {
      uint64_t result = (result + 1);
    }
    else {
      uint64_t result = result;
    }
    v2 += 296;
  }
  while (v2 != v3);
  return result;
}

uint64_t siri::dialogengine::TestResults::SummarizeToStdout(siri::dialogengine::TestResults *this)
{
  uint64_t v2 = *(void *)this;
  if (*(void *)this)
  {
    memset(&v46, 0, sizeof(v46));
    std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v46, *(long long **)(v2 + 32), *(long long **)(v2 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v2 + 40) - *(void *)(v2 + 32)) >> 3));
    std::string::size_type size = v46.__r_.__value_.__l.__size_;
    for (std::string::size_type i = v46.__r_.__value_.__r.__words[0]; i != size; i += 24)
    {
      if (*(char *)(i + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v48, *(const std::string::value_type **)i, *(void *)(i + 8));
      }
      else
      {
        long long v5 = *(_OWORD *)i;
        v48.__r_.__value_.__r.__words[2] = *(void *)(i + 16);
        *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v5;
      }
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v6 = &v48;
      }
      else {
        uint64_t v6 = (std::string *)v48.__r_.__value_.__r.__words[0];
      }
      puts((const char *)v6);
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v48.__r_.__value_.__l.__data_);
      }
    }
    v48.__r_.__value_.__r.__words[0] = (std::string::size_type)&v46;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v48);
  }
  uint64_t v7 = *((void *)this + 1);
  uint64_t v40 = *((void *)this + 2);
  if (v7 == v40) {
    goto LABEL_79;
  }
  std::string::size_type v39 = this;
  do
  {
    siri::dialogengine::TestCase::TestCase(&v46, (const siri::dialogengine::TestCase *)v7);
    uint64_t v8 = *(unsigned int *)(v7 + 256);
    uint64_t v9 = "???";
    if (v8 <= 3) {
      uint64_t v9 = off_1E651DF90[v8];
    }
    std::string::basic_string[abi:ne180100]<0>(&v48, v9);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v43, v47.__r_.__value_.__l.__data_, v47.__r_.__value_.__l.__size_);
    }
    else {
      std::string v43 = v47;
    }
    std::string::size_type v10 = HIBYTE(v43.__r_.__value_.__r.__words[2]);
    if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v10 = v43.__r_.__value_.__l.__size_;
    }
    if (v10) {
      uint64_t v11 = "Pattern";
    }
    else {
      uint64_t v11 = "CAT";
    }
    std::string::basic_string[abi:ne180100]<0>(v44, v11);
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    memset(&v43, 0, sizeof(v43));
    std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v43, *(long long **)(v7 + 264), *(long long **)(v7 + 272), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v7 + 272) - *(void *)(v7 + 264)) >> 3));
    long long v12 = *(_OWORD *)&v43.__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
    if ((void)v12 == *((void *)&v12 + 1))
    {
      int v24 = v45;
      uint64_t v25 = (void **)v44[0];
      int v26 = SHIBYTE(v48.__r_.__value_.__r.__words[2]);
      std::string::size_type v27 = v48.__r_.__value_.__r.__words[0];
      siri::dialogengine::TestCase::ToString((siri::dialogengine::TestCase *)&v46, &v43);
      if (v26 >= 0) {
        long long v28 = &v48;
      }
      else {
        long long v28 = (std::string *)v27;
      }
      if (v24 >= 0) {
        uint64_t v29 = v44;
      }
      else {
        uint64_t v29 = v25;
      }
      if ((v43.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v30 = &v43;
      }
      else {
        unint64_t v30 = (std::string *)v43.__r_.__value_.__r.__words[0];
      }
      printf("%s Test %s: %s\n", (const char *)v29, (const char *)v28, (const char *)v30);
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      memset(&v43, 0, sizeof(v43));
      std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(&v43, *(long long **)(v7 + 264), *(long long **)(v7 + 272), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v7 + 272) - *(void *)(v7 + 264)) >> 3));
      std::string::size_type v14 = v43.__r_.__value_.__l.__size_;
      for (std::string::size_type j = v43.__r_.__value_.__r.__words[0]; j != v14; j += 24)
      {
        if (*(char *)(j + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v42, *(const std::string::value_type **)j, *(void *)(j + 8));
        }
        else
        {
          long long v15 = *(_OWORD *)j;
          v42.__r_.__value_.__r.__words[2] = *(void *)(j + 16);
          *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v15;
        }
        int v16 = v45;
        int v17 = (void **)v44[0];
        int v18 = SHIBYTE(v48.__r_.__value_.__r.__words[2]);
        std::string::size_type v19 = v48.__r_.__value_.__r.__words[0];
        siri::dialogengine::TestCase::ToString((siri::dialogengine::TestCase *)&v46, &__p);
        if (v18 >= 0) {
          unsigned __int8 v20 = &v48;
        }
        else {
          unsigned __int8 v20 = (std::string *)v19;
        }
        if (v16 >= 0) {
          BOOL v21 = v44;
        }
        else {
          BOOL v21 = v17;
        }
        uint64_t p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        uint64_t v23 = &v42;
        if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v23 = (std::string *)v42.__r_.__value_.__r.__words[0];
        }
        printf("%s Test %s: %s: %s\n", (const char *)v21, (const char *)v20, (const char *)p_p, (const char *)v23);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
      }
      v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v42);
    }
    if (v45 < 0) {
      operator delete(v44[0]);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    siri::dialogengine::TestCase::~TestCase((void **)&v46.__r_.__value_.__l.__data_);
    v7 += 296;
  }
  while (v7 != v40);
  uint64_t v31 = *((void *)v39 + 1);
  uint64_t v32 = *((void *)v39 + 2);
  if (v31 == v32)
  {
LABEL_79:
    int v35 = 0;
    int v33 = 0;
    int v37 = 0;
  }
  else
  {
    int v33 = 0;
    uint64_t v34 = *((void *)v39 + 1);
    do
    {
      if (*(_DWORD *)(v34 + 256) == 1) {
        ++v33;
      }
      v34 += 296;
    }
    while (v34 != v32);
    int v35 = 0;
    uint64_t v36 = *((void *)v39 + 1);
    do
    {
      if (*(_DWORD *)(v36 + 256) == 2) {
        ++v35;
      }
      v36 += 296;
    }
    while (v36 != v32);
    int v37 = 0;
    do
    {
      if (*(_DWORD *)(v31 + 256) == 3) {
        ++v37;
      }
      v31 += 296;
    }
    while (v31 != v32);
  }
  return printf("%d passed, %d failed, %d skipped\n", v33, v35, v37);
}

void sub_1C5DC2F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,char a38)
{
  *(void *)(v38 - 112) = &a38;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)(v38 - 112));
  _Unwind_Resume(a1);
}

void siri::dialogengine::TestResults::SaveAsJson(uint64_t a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  memset(v27, 0, sizeof(v27));
  uint64_t v28 = 0;
  uint64_t v29 = 256;
  long long v20 = 0u;
  long long v21 = 0u;
  std::string::size_type v19 = v27;
  uint64_t v22 = 0;
  uint64_t v23 = 512;
  int v24 = 324;
  __int16 v25 = 0x2000;
  uint64_t v26 = 4;
  rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::StartObject(&v19);
  rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::PrettyPrefix(&v19, 5);
  rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::WriteString((uint64_t *)&v19, (uint64_t)"results", 7u);
  rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::StartArray(&v19);
  std::string::basic_string[abi:ne180100]<0>(&v18, "INPUT_JSON_OBJECT_");
  uint64_t v2 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) != v2)
  {
    siri::dialogengine::TestCase::TestCase(&v30, (const siri::dialogengine::TestCase *)v2);
    siri::dialogengine::CATExecutionResult::CATExecutionResult((siri::dialogengine::CATExecutionResult *)&__p, (const siri::dialogengine::CATExecutionResult *)(v2 + 288));
  }
  rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::EndArray(&v19);
  rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0u>::EndObject(&v19);
  String = (char *)rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>::GetString(v27);
  std::string::basic_string[abi:ne180100]<0>(&__p, String);
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(a1 + 16) != v4)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    do
    {
      siri::dialogengine::TestCase::TestCase(&v30, (const siri::dialogengine::TestCase *)(v4 + v5));
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v12, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
      }
      else {
        std::string v12 = v31;
      }
      siri::dialogengine::TestCase::~TestCase((void **)&v30.__r_.__value_.__l.__data_);
      std::operator+<char>();
      std::to_string(&v14, v6);
      if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v7 = &v14;
      }
      else {
        uint64_t v7 = (std::string *)v14.__r_.__value_.__r.__words[0];
      }
      if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v14.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v14.__r_.__value_.__l.__size_;
      }
      uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, size);
      long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
      v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      uint64_t v11 = std::string::append(&v16, "\"");
      std::string v13 = *v11;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::StringReplace((uint64_t)&__p, (char *)&v13, (uint64_t)&v12, 0, &v30);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::string __p = v30;
      *((unsigned char *)&v30.__r_.__value_.__s + 23) = 0;
      v30.__r_.__value_.__s.__data_[0] = 0;
      if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v13.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v14.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v15.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v12.__r_.__value_.__l.__data_);
      }
      ++v6;
      uint64_t v4 = *(void *)(a1 + 8);
      v5 += 296;
    }
    while (0x14C1BACF914C1BADLL * ((*(void *)(a1 + 16) - v4) >> 3) > v6);
  }
  rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::GenericDocument((uint64_t)&v30);
}

void sub_1C5DC3D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  rapidjson::GenericDocument<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>,rapidjson::CrtAllocator>::~GenericDocument((uint64_t)&a72);
  if (a48 < 0) {
    operator delete(__p);
  }
  if (a55 < 0) {
    operator delete(a50);
  }
  rapidjson::internal::Stack<rapidjson::CrtAllocator>::Destroy(a11);
  rapidjson::internal::Stack<rapidjson::CrtAllocator>::Destroy((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void std::vector<siri::dialogengine::CATExecutionDialogResult>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        siri::dialogengine::CATExecutionDialogResult::~CATExecutionDialogResult((siri::dialogengine::CATExecutionDialogResult *)(v4 - 8));
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void InitDefaultsscc_info_SummaryItem_Button_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Button::SummaryItem_Button((SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Button_default_instance_, v4);
  qword_1EB68FC80 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FC88 = &SnippetUI::_Button_default_instance_;
  qword_1EB68FC90 = (uint64_t)&SnippetUI::_Button_default_instance_;
  unk_1EB68FC98 = &SnippetUI::_Button_default_instance_;
  qword_1EB68FCA0 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FCA8 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FCB0 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FCB8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB68FCC0 = &SnippetUI::_TextProperty_default_instance_;
}

SnippetUI::SummaryItem_Button *SnippetUI::SummaryItem_Button::SummaryItem_Button(SnippetUI::SummaryItem_Button *this)
{
  *(void *)this = &unk_1F211C8E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 26) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_Button_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Button_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((void *)this + 12) = 0;
  return this;
}

void sub_1C5DC414C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Button::GetMetadata(SnippetUI::SummaryItem_Button *this)
{
  return qword_1EA3D87A0;
}

void InitDefaultsscc_info_SummaryItem_Text_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Text::SummaryItem_Text((SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Text_default_instance_, v4);
  qword_1EB690A18 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690A20 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690A38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690A40 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690A28 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690A30 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_Text *SnippetUI::SummaryItem_Text::SummaryItem_Text(SnippetUI::SummaryItem_Text *this)
{
  *(void *)this = &unk_1F211C3A8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_Text_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Text_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  return this;
}

void sub_1C5DC4294(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Text::GetMetadata(SnippetUI::SummaryItem_Text *this)
{
  return qword_1EA3D8730;
}

uint64_t SnippetUI::SummaryItem_Text::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void SnippetUI::SummaryItem_Text::MergeFrom(SnippetUI::SummaryItem_Text *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 2381);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Text::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DC43B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Text::MergeFrom(SnippetUI::SummaryItem_Text *this, const SnippetUI::SummaryItem_Text *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v29, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 2396);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v29[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Text *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_)
  {
    long long v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        long long v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        std::string v12 = v10;
      }
      else {
        std::string v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    std::string v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      std::string v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        std::string v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        std::string v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        std::string v15 = v13;
      }
      else {
        std::string v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v17;
        std::string v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        int v18 = v16;
      }
      else {
        int v18 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v17, v18);
    }
    std::string::size_type v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      long long v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        long long v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v20;
        std::string::size_type v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        long long v21 = v19;
      }
      else {
        long long v21 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      uint64_t v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        uint64_t v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        int v24 = v22;
      }
      else {
        int v24 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      uint64_t v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        uint64_t v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        __int16 v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        std::string::size_type v27 = v25;
      }
      else {
        std::string::size_type v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
  }
}

void sub_1C5DC460C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Text::CopyFrom(SnippetUI::SummaryItem_Text *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Text::Clear(this);
    SnippetUI::SummaryItem_Text::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Text::Clear(SnippetUI::SummaryItem_Text *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  char v11 = *((unsigned char *)this + 8);
  long long v10 = (SnippetUI::SummaryItem_Text *)((char *)this + 8);
  *((void *)v10 + 8) = 0;
  if (v11)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v10);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Text::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Text *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_) {
    goto LABEL_49;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        std::string v12 = v5 + 2;
        do
        {
          std::string v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        char v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *std::string v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    char v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      long long v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      long long v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  long long v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      std::string v30 = v5 + 2;
      do
      {
        std::string v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *std::string v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        uint64_t v38 = v5 + 2;
        do
        {
          std::string::size_type v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *uint64_t v38 = v40;
      }
      else
      {
        v5[2] = v37;
        uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  std::string v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    std::string v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    std::string v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  std::string v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Text.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  if (this == (SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_) {
    goto LABEL_79;
  }
  unsigned int v44 = (SnippetUI::TextProperty *)*((void *)this + 8);
  if (v44)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v44 = (SnippetUI::TextProperty *)*((void *)this + 8);
    }
    *uint64_t v5 = 50;
    unsigned int v45 = *((_DWORD *)v44 + 15);
    if (v45 > 0x7F)
    {
      v5[1] = v45 | 0x80;
      unsigned int v47 = v45 >> 7;
      if (v45 >> 14)
      {
        std::string::size_type v49 = v5 + 2;
        do
        {
          uint64_t v50 = v49;
          *v49++ = v47 | 0x80;
          unsigned int v51 = v47 >> 7;
          unsigned int v52 = v47 >> 14;
          v47 >>= 7;
        }
        while (v52);
        std::string v48 = (google::protobuf::UnknownFieldSet *)(v50 + 2);
        unsigned char *v49 = v51;
        goto LABEL_67;
      }
      v5[2] = v47;
      uint64_t v46 = 3;
    }
    else
    {
      v5[1] = v45;
      uint64_t v46 = 2;
    }
    std::string v48 = (google::protobuf::UnknownFieldSet *)&v5[v46];
LABEL_67:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v44, v48, a3, a4);
  }
  unsigned int v53 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (v53)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v53 = (SnippetUI::TextProperty *)*((void *)this + 9);
    }
    *uint64_t v5 = 58;
    unsigned int v54 = *((_DWORD *)v53 + 15);
    if (v54 > 0x7F)
    {
      v5[1] = v54 | 0x80;
      unsigned int v56 = v54 >> 7;
      if (v54 >> 14)
      {
        uint64_t v57 = v5 + 2;
        do
        {
          unsigned int v58 = v57;
          *v57++ = v56 | 0x80;
          unsigned int v59 = v56 >> 7;
          unsigned int v60 = v56 >> 14;
          v56 >>= 7;
        }
        while (v60);
        uint64_t v55 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
        unsigned char *v57 = v59;
      }
      else
      {
        v5[2] = v56;
        uint64_t v55 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v54;
      uint64_t v55 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v53, v55, a3, a4);
  }
LABEL_79:
  std::string v61 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v61 + 23) < 0)
  {
    std::string v62 = (const char *)*((void *)v61 + 1);
    if (!v62) {
      goto LABEL_85;
    }
    std::string v61 = *(google::protobuf::internal **)v61;
    goto LABEL_84;
  }
  std::string v62 = (const char *)*((unsigned __int8 *)v61 + 23);
  if (*((unsigned char *)v61 + 23))
  {
LABEL_84:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v61, v62, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Text.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 3), v5);
  }
LABEL_85:
  uint64_t v63 = *((void *)this + 1);
  if ((v63 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v63 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_Text::_InternalParse(SnippetUI::SummaryItem_Text *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  long long v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      long long v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    long long v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_41;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_35;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_34;
      case 2u:
        if (v10 != 18) {
          goto LABEL_41;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_35;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_34;
      case 3u:
        if (v10 != 26) {
          goto LABEL_41;
        }
        std::string v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
        if (!v12)
        {
          std::string v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
          *((void *)this + 6) = v12;
          TagFallback = v21;
        }
        std::string v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v12, TagFallback);
        goto LABEL_46;
      case 4u:
        if (v10 != 34) {
          goto LABEL_41;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v21;
        }
        std::string v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_46;
      case 5u:
        if (v10 != 42) {
          goto LABEL_41;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        std::string v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_Text.component_name";
        goto LABEL_40;
      case 6u:
        if (v10 != 50) {
          goto LABEL_41;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 8);
        if (v11) {
          goto LABEL_35;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v11;
        goto LABEL_34;
      case 7u:
        if (v10 != 58) {
          goto LABEL_41;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (v11) {
          goto LABEL_35;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v11;
LABEL_34:
        TagFallback = v21;
LABEL_35:
        std::string v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_46;
      case 8u:
        if (v10 != 66) {
          goto LABEL_41;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        std::string v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_Text.link_identifier";
LABEL_40:
        std::string v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_46;
      default:
LABEL_41:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        std::string v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_46:
        long long v21 = (google::protobuf::internal *)v13;
        if (v13) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_Text::GetCachedSize(SnippetUI::SummaryItem_Text *this)
{
  return *((unsigned int *)this + 20);
}

char *SnippetUI::SummaryItem_Text::ByteSizeLong(SnippetUI::SummaryItem_Text *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      std::string v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    std::string v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::MultilineTextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v15)
    {
      std::string v16 = SnippetUI::ActionProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::TextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::TextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      long long v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Text *)((char *)this + 8), v5, (_DWORD *)this + 20);
  }
  else
  {
    *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_Text::IsInitialized(SnippetUI::SummaryItem_Text *this)
{
  return 1;
}

SnippetUI::SummaryItem_Text *SnippetUI::SummaryItem_Text::New(SnippetUI::SummaryItem_Text *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Text>(a2);
}

SnippetUI::SummaryItem_Text *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Text>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Text *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Text>);
  }
  SnippetUI::SummaryItem_Text::SummaryItem_Text(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DC52EC(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C401DBA19FDLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Text>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Text *SnippetUI::SummaryItem_Text::New(SnippetUI::SummaryItem_Text *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Text>(0);
}

void SnippetUI::SummaryItem_Text::~SummaryItem_Text(SnippetUI::SummaryItem_Text *this)
{
  SnippetUI::SummaryItem_Text::~SummaryItem_Text(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F211C3A8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    char v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_SwitchV2_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_SwitchV2::SummaryItem_SwitchV2((SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_SwitchV2_default_instance_, v4);
  qword_1EA3DB308 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EA3DB310 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB318 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EA3DB320 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EA3DB330 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB338 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB328 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_SwitchV2 *SnippetUI::SummaryItem_SwitchV2::SummaryItem_SwitchV2(SnippetUI::SummaryItem_SwitchV2 *this)
{
  *(void *)this = &unk_1F211CB28;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 22) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_SwitchV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_SwitchV2_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return this;
}

void sub_1C5DC5678(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::GetMetadata(SnippetUI::SummaryItem_SwitchV2 *this)
{
  return qword_1EA3D87D0;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void SnippetUI::SummaryItem_SwitchV2::MergeFrom(SnippetUI::SummaryItem_SwitchV2 *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 8897);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_SwitchV2::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DC5794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_SwitchV2::MergeFrom(SnippetUI::SummaryItem_SwitchV2 *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 8912);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_SwitchV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_)
  {
    unsigned int v10 = (const SnippetUI::Switch *)*((void *)a2 + 4);
    if (v10)
    {
      char v11 = (SnippetUI::Switch *)*((void *)this + 4);
      if (!v11)
      {
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (const SnippetUI::Switch *)*((void *)a2 + 4);
      }
      if (v10) {
        std::string v12 = v10;
      }
      else {
        std::string v12 = (const SnippetUI::Switch *)&SnippetUI::_Switch_default_instance_;
      }
      SnippetUI::Switch::MergeFrom(v11, v12);
    }
    std::string v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        std::string v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v17;
        std::string v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      long long v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        long long v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        long long v21 = v19;
      }
      else {
        long long v21 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        __int16 v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      uint64_t v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        uint64_t v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        std::string v30 = v28;
      }
      else {
        std::string v30 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v29, v30);
    }
  }
}

void sub_1C5DC5A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_SwitchV2::CopyFrom(SnippetUI::SummaryItem_SwitchV2 *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_SwitchV2::Clear(this);
    SnippetUI::SummaryItem_SwitchV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_SwitchV2::Clear(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  char v12 = *((unsigned char *)this + 8);
  char v11 = (SnippetUI::SummaryItem_SwitchV2 *)((char *)this + 8);
  *((void *)v11 + 9) = 0;
  if (v12)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v11);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_SwitchV2::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_SwitchV2 *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_) {
    goto LABEL_61;
  }
  uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 13);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          std::string v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        char v11 = v13 + 2;
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    char v11 = &v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::Switch::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      long long v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      long long v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  long long v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      std::string v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *std::string v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      std::string::size_type v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *std::string::size_type v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
  if (v43)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    }
    *uint64_t v5 = 42;
    unsigned int v44 = *((_DWORD *)v43 + 12);
    if (v44 > 0x7F)
    {
      v5[1] = v44 | 0x80;
      unsigned int v46 = v44 >> 7;
      if (v44 >> 14)
      {
        unsigned int v47 = v5 + 2;
        do
        {
          std::string v48 = v47;
          *v47++ = v46 | 0x80;
          unsigned int v49 = v46 >> 7;
          unsigned int v50 = v46 >> 14;
          v46 >>= 7;
        }
        while (v50);
        unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v48 + 2);
        unsigned char *v47 = v49;
      }
      else
      {
        v5[2] = v46;
        unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v44;
      unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v43, v45, a3, a4);
  }
LABEL_61:
  unsigned int v51 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v51 + 23) < 0)
  {
    unsigned int v52 = (const char *)*((void *)v51 + 1);
    if (!v52) {
      goto LABEL_67;
    }
    unsigned int v51 = *(google::protobuf::internal **)v51;
    goto LABEL_66;
  }
  unsigned int v52 = (const char *)*((unsigned __int8 *)v51 + 23);
  if (*((unsigned char *)v51 + 23))
  {
LABEL_66:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v51, v52, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_SwitchV2.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 2), v5);
  }
LABEL_67:
  unsigned int v53 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v53 + 23) < 0)
  {
    unsigned int v54 = (const char *)*((void *)v53 + 1);
    if (!v54) {
      goto LABEL_73;
    }
    unsigned int v53 = *(google::protobuf::internal **)v53;
    goto LABEL_72;
  }
  unsigned int v54 = (const char *)*((unsigned __int8 *)v53 + 23);
  if (*((unsigned char *)v53 + 23))
  {
LABEL_72:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v53, v54, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_SwitchV2.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 3), v5);
  }
LABEL_73:
  if (this == (SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_) {
    goto LABEL_97;
  }
  uint64_t v55 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (v55)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v55 = (SnippetUI::TextProperty *)*((void *)this + 9);
    }
    *uint64_t v5 = 66;
    unsigned int v56 = *((_DWORD *)v55 + 15);
    if (v56 > 0x7F)
    {
      v5[1] = v56 | 0x80;
      unsigned int v58 = v56 >> 7;
      if (v56 >> 14)
      {
        unsigned int v60 = v5 + 2;
        do
        {
          std::string v61 = v60;
          *v60++ = v58 | 0x80;
          unsigned int v62 = v58 >> 7;
          unsigned int v63 = v58 >> 14;
          v58 >>= 7;
        }
        while (v63);
        unsigned int v59 = (google::protobuf::UnknownFieldSet *)(v61 + 2);
        *unsigned int v60 = v62;
        goto LABEL_85;
      }
      v5[2] = v58;
      uint64_t v57 = 3;
    }
    else
    {
      v5[1] = v56;
      uint64_t v57 = 2;
    }
    unsigned int v59 = (google::protobuf::UnknownFieldSet *)&v5[v57];
LABEL_85:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v55, v59, a3, a4);
  }
  std::string v64 = (SnippetUI::VisualProperty *)*((void *)this + 10);
  if (v64)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      std::string v64 = (SnippetUI::VisualProperty *)*((void *)this + 10);
    }
    *uint64_t v5 = 74;
    unsigned int v65 = *((_DWORD *)v64 + 15);
    if (v65 > 0x7F)
    {
      v5[1] = v65 | 0x80;
      unsigned int v67 = v65 >> 7;
      if (v65 >> 14)
      {
        char v68 = v5 + 2;
        do
        {
          char v69 = v68;
          *v68++ = v67 | 0x80;
          unsigned int v70 = v67 >> 7;
          unsigned int v71 = v67 >> 14;
          v67 >>= 7;
        }
        while (v71);
        std::string v66 = (google::protobuf::UnknownFieldSet *)(v69 + 2);
        unsigned char *v68 = v70;
      }
      else
      {
        v5[2] = v67;
        std::string v66 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v65;
      std::string v66 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v64, v66, a3, a4);
  }
LABEL_97:
  uint64_t v72 = *((void *)this + 1);
  if ((v72 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v72 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_SwitchV2::_InternalParse(SnippetUI::SummaryItem_SwitchV2 *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v23 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v23, *((_DWORD *)a3 + 23))) {
      return v23;
    }
    TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v23;
    if ((*(char *)v23 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
      unsigned int v23 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, v10);
    unsigned int v23 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_47;
        }
        char v11 = (SnippetUI::Switch *)*((void *)this + 4);
        if (!v11)
        {
          char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
          *((void *)this + 4) = v11;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Switch>(a3, v11, TagFallback);
        goto LABEL_52;
      case 2u:
        if (v10 != 18) {
          goto LABEL_47;
        }
        std::string v13 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_42;
        }
        std::string v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_41;
      case 3u:
        if (v10 != 26) {
          goto LABEL_47;
        }
        unsigned int v14 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
        if (v14) {
          goto LABEL_24;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v14;
        goto LABEL_23;
      case 4u:
        if (v10 != 34) {
          goto LABEL_47;
        }
        unsigned int v14 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
        if (v14) {
          goto LABEL_24;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 7) = v14;
LABEL_23:
        TagFallback = v23;
LABEL_24:
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v14, TagFallback);
        goto LABEL_52;
      case 5u:
        if (v10 != 42) {
          goto LABEL_47;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 8);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 8) = v15;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_52;
      case 6u:
        if (v10 != 50) {
          goto LABEL_47;
        }
        std::string v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_SwitchV2.component_name";
        goto LABEL_37;
      case 7u:
        if (v10 != 58) {
          goto LABEL_47;
        }
        std::string v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_SwitchV2.link_identifier";
LABEL_37:
        char v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_52;
      case 8u:
        if (v10 != 66) {
          goto LABEL_47;
        }
        std::string v13 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (!v13)
        {
          std::string v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 9) = v13;
LABEL_41:
          TagFallback = v23;
        }
LABEL_42:
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_52;
      case 9u:
        if (v10 != 74) {
          goto LABEL_47;
        }
        long long v20 = (SnippetUI::VisualProperty *)*((void *)this + 10);
        if (!v20)
        {
          long long v20 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v20;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v20, TagFallback);
        goto LABEL_52;
      default:
LABEL_47:
        if (v10) {
          BOOL v21 = (v10 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (v21)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        char v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_52:
        unsigned int v23 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

char *google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Switch>(google::protobuf::internal::EpsCopyInputStream *this, SnippetUI::Switch *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  uint64_t v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    unsigned int v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    unsigned int v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)SnippetUI::Switch::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::GetCachedSize(SnippetUI::SummaryItem_SwitchV2 *this)
{
  return *((unsigned int *)this + 22);
}

char *SnippetUI::SummaryItem_SwitchV2::ByteSizeLong(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_)
  {
    uint64_t v9 = (SnippetUI::Switch *)*((void *)this + 4);
    if (v9)
    {
      int v10 = SnippetUI::Switch::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      int v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
    if (v13)
    {
      int v14 = SnippetUI::MultilineTextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v15 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
    if (v15)
    {
      std::string v16 = SnippetUI::MultilineTextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::ActionProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      long long v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v21 = (SnippetUI::VisualProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::VisualProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_SwitchV2 *)((char *)this + 8), v5, (_DWORD *)this + 22);
  }
  else
  {
    *((_DWORD *)this + 22) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_SwitchV2::IsInitialized(SnippetUI::SummaryItem_SwitchV2 *this)
{
  return 1;
}

SnippetUI::SummaryItem_SwitchV2 *SnippetUI::SummaryItem_SwitchV2::New(SnippetUI::SummaryItem_SwitchV2 *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_SwitchV2>(a2);
}

SnippetUI::SummaryItem_SwitchV2 *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_SwitchV2>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_SwitchV2 *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x60uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_SwitchV2>);
  }
  SnippetUI::SummaryItem_SwitchV2::SummaryItem_SwitchV2(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DC6918(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C404A70EBA6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_SwitchV2>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_SwitchV2 *SnippetUI::SummaryItem_SwitchV2::New(SnippetUI::SummaryItem_SwitchV2 *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_SwitchV2>(0);
}

void SnippetUI::SummaryItem_SwitchV2::~SummaryItem_SwitchV2(SnippetUI::SummaryItem_SwitchV2 *this)
{
  SnippetUI::SummaryItem_SwitchV2::~SummaryItem_SwitchV2(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(void *)this = &unk_1F211CB28;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    int v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    int v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_Switch_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Switch::SummaryItem_Switch((SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Switch_default_instance_, v4);
  qword_1EB68FD60 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EB68FD68 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FD70 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD78 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FD88 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD90 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FD80 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_Switch *SnippetUI::SummaryItem_Switch::SummaryItem_Switch(SnippetUI::SummaryItem_Switch *this)
{
  *(void *)this = &unk_1F211CA68;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 22) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_Switch_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Switch_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return this;
}

void sub_1C5DC6CD0(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Switch::GetMetadata(SnippetUI::SummaryItem_Switch *this)
{
  return qword_1EA3D87C0;
}

uint64_t SnippetUI::SummaryItem_Switch::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void SnippetUI::SummaryItem_Switch::MergeFrom(SnippetUI::SummaryItem_Switch *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 8317);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Switch::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DC6DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Switch::MergeFrom(SnippetUI::SummaryItem_Switch *this, const SnippetUI::SummaryItem_Switch *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 8332);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Switch *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_)
  {
    int v10 = (const SnippetUI::Switch *)*((void *)a2 + 4);
    if (v10)
    {
      int v11 = (SnippetUI::Switch *)*((void *)this + 4);
      if (!v11)
      {
        int v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
        *((void *)this + 4) = v11;
        int v10 = (const SnippetUI::Switch *)*((void *)a2 + 4);
      }
      if (v10) {
        int v12 = v10;
      }
      else {
        int v12 = (const SnippetUI::Switch *)&SnippetUI::_Switch_default_instance_;
      }
      SnippetUI::Switch::MergeFrom(v11, v12);
    }
    BOOL v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        BOOL v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        int v15 = v13;
      }
      else {
        int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        std::string v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    unsigned int v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      long long v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        long long v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 7) = v20;
        unsigned int v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        BOOL v21 = v19;
      }
      else {
        BOOL v21 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        __int16 v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      uint64_t v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        uint64_t v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        std::string v30 = v28;
      }
      else {
        std::string v30 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v29, v30);
    }
  }
}

void sub_1C5DC7080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Switch::CopyFrom(SnippetUI::SummaryItem_Switch *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Switch::Clear(this);
    SnippetUI::SummaryItem_Switch::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Switch::Clear(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  char v12 = *((unsigned char *)this + 8);
  int v11 = (SnippetUI::SummaryItem_Switch *)((char *)this + 8);
  *((void *)v11 + 9) = 0;
  if (v12)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v11);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Switch::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Switch *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_) {
    goto LABEL_61;
  }
  uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 13);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        int v11 = v13 + 2;
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    int v11 = &v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::Switch::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      BOOL v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      long long v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  long long v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  __int16 v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    __int16 v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      std::string v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *std::string v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      std::string::size_type v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *std::string::size_type v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
  if (v43)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    }
    *uint64_t v5 = 42;
    unsigned int v44 = *((_DWORD *)v43 + 12);
    if (v44 > 0x7F)
    {
      v5[1] = v44 | 0x80;
      unsigned int v46 = v44 >> 7;
      if (v44 >> 14)
      {
        unsigned int v47 = v5 + 2;
        do
        {
          std::string v48 = v47;
          *v47++ = v46 | 0x80;
          unsigned int v49 = v46 >> 7;
          unsigned int v50 = v46 >> 14;
          v46 >>= 7;
        }
        while (v50);
        unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v48 + 2);
        unsigned char *v47 = v49;
      }
      else
      {
        v5[2] = v46;
        unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v44;
      unsigned int v45 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v43, v45, a3, a4);
  }
LABEL_61:
  unsigned int v51 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v51 + 23) < 0)
  {
    unsigned int v52 = (const char *)*((void *)v51 + 1);
    if (!v52) {
      goto LABEL_67;
    }
    unsigned int v51 = *(google::protobuf::internal **)v51;
    goto LABEL_66;
  }
  unsigned int v52 = (const char *)*((unsigned __int8 *)v51 + 23);
  if (*((unsigned char *)v51 + 23))
  {
LABEL_66:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v51, v52, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Switch.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 2), v5);
  }
LABEL_67:
  unsigned int v53 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v53 + 23) < 0)
  {
    unsigned int v54 = (const char *)*((void *)v53 + 1);
    if (!v54) {
      goto LABEL_73;
    }
    unsigned int v53 = *(google::protobuf::internal **)v53;
    goto LABEL_72;
  }
  unsigned int v54 = (const char *)*((unsigned __int8 *)v53 + 23);
  if (*((unsigned char *)v53 + 23))
  {
LABEL_72:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v53, v54, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Switch.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 3), v5);
  }
LABEL_73:
  if (this == (SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_) {
    goto LABEL_97;
  }
  uint64_t v55 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (v55)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      uint64_t v55 = (SnippetUI::TextProperty *)*((void *)this + 9);
    }
    *uint64_t v5 = 66;
    unsigned int v56 = *((_DWORD *)v55 + 15);
    if (v56 > 0x7F)
    {
      v5[1] = v56 | 0x80;
      unsigned int v58 = v56 >> 7;
      if (v56 >> 14)
      {
        unsigned int v60 = v5 + 2;
        do
        {
          std::string v61 = v60;
          *v60++ = v58 | 0x80;
          unsigned int v62 = v58 >> 7;
          unsigned int v63 = v58 >> 14;
          v58 >>= 7;
        }
        while (v63);
        unsigned int v59 = (google::protobuf::UnknownFieldSet *)(v61 + 2);
        *unsigned int v60 = v62;
        goto LABEL_85;
      }
      v5[2] = v58;
      uint64_t v57 = 3;
    }
    else
    {
      v5[1] = v56;
      uint64_t v57 = 2;
    }
    unsigned int v59 = (google::protobuf::UnknownFieldSet *)&v5[v57];
LABEL_85:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v55, v59, a3, a4);
  }
  std::string v64 = (SnippetUI::VisualProperty *)*((void *)this + 10);
  if (v64)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      std::string v64 = (SnippetUI::VisualProperty *)*((void *)this + 10);
    }
    *uint64_t v5 = 74;
    unsigned int v65 = *((_DWORD *)v64 + 15);
    if (v65 > 0x7F)
    {
      v5[1] = v65 | 0x80;
      unsigned int v67 = v65 >> 7;
      if (v65 >> 14)
      {
        char v68 = v5 + 2;
        do
        {
          char v69 = v68;
          *v68++ = v67 | 0x80;
          unsigned int v70 = v67 >> 7;
          unsigned int v71 = v67 >> 14;
          v67 >>= 7;
        }
        while (v71);
        std::string v66 = (google::protobuf::UnknownFieldSet *)(v69 + 2);
        unsigned char *v68 = v70;
      }
      else
      {
        v5[2] = v67;
        std::string v66 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v65;
      std::string v66 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v64, v66, a3, a4);
  }
LABEL_97:
  uint64_t v72 = *((void *)this + 1);
  if ((v72 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v72 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_Switch::_InternalParse(SnippetUI::SummaryItem_Switch *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v23 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v23, *((_DWORD *)a3 + 23))) {
      return v23;
    }
    TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v23;
    if ((*(char *)v23 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
      unsigned int v23 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, v10);
    unsigned int v23 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_46;
        }
        int v11 = (SnippetUI::Switch *)*((void *)this + 4);
        if (!v11)
        {
          int v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
          *((void *)this + 4) = v11;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Switch>(a3, v11, TagFallback);
        goto LABEL_51;
      case 2u:
        if (v10 != 18) {
          goto LABEL_46;
        }
        BOOL v13 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_41;
        }
        BOOL v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_40;
      case 3u:
        if (v10 != 26) {
          goto LABEL_46;
        }
        BOOL v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v13) {
          goto LABEL_41;
        }
        BOOL v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v13;
        goto LABEL_40;
      case 4u:
        if (v10 != 34) {
          goto LABEL_46;
        }
        unsigned int v14 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v14, TagFallback);
        goto LABEL_51;
      case 5u:
        if (v10 != 42) {
          goto LABEL_46;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 8);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 8) = v15;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_51;
      case 6u:
        if (v10 != 50) {
          goto LABEL_46;
        }
        std::string v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_Switch.component_name";
        goto LABEL_36;
      case 7u:
        if (v10 != 58) {
          goto LABEL_46;
        }
        std::string v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_Switch.link_identifier";
LABEL_36:
        char v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_51;
      case 8u:
        if (v10 != 66) {
          goto LABEL_46;
        }
        BOOL v13 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (v13) {
          goto LABEL_41;
        }
        BOOL v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v13;
LABEL_40:
        TagFallback = v23;
LABEL_41:
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_51;
      case 9u:
        if (v10 != 74) {
          goto LABEL_46;
        }
        long long v20 = (SnippetUI::VisualProperty *)*((void *)this + 10);
        if (!v20)
        {
          long long v20 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v20;
          TagFallback = v23;
        }
        char v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v20, TagFallback);
        goto LABEL_51;
      default:
LABEL_46:
        if (v10) {
          BOOL v21 = (v10 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (v21)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        char v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_51:
        unsigned int v23 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_Switch::GetCachedSize(SnippetUI::SummaryItem_Switch *this)
{
  return *((unsigned int *)this + 22);
}

char *SnippetUI::SummaryItem_Switch::ByteSizeLong(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_)
  {
    uint64_t v9 = (SnippetUI::Switch *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::Switch::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      char v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
    if (v15)
    {
      std::string v16 = SnippetUI::MultilineTextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::ActionProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      long long v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v21 = (SnippetUI::VisualProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::VisualProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Switch *)((char *)this + 8), v5, (_DWORD *)this + 22);
  }
  else
  {
    *((_DWORD *)this + 22) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_Switch::IsInitialized(SnippetUI::SummaryItem_Switch *this)
{
  return 1;
}

SnippetUI::SummaryItem_Switch *SnippetUI::SummaryItem_Switch::New(SnippetUI::SummaryItem_Switch *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Switch>(a2);
}

SnippetUI::SummaryItem_Switch *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Switch>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Switch *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x60uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Switch>);
  }
  SnippetUI::SummaryItem_Switch::SummaryItem_Switch(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DC7EA8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C404A70EBA6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Switch>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Switch *SnippetUI::SummaryItem_Switch::New(SnippetUI::SummaryItem_Switch *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Switch>(0);
}

void SnippetUI::SummaryItem_Switch::~SummaryItem_Switch(SnippetUI::SummaryItem_Switch *this)
{
  SnippetUI::SummaryItem_Switch::~SummaryItem_Switch(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(void *)this = &unk_1F211CA68;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    int v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    char v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_Standard_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Standard::SummaryItem_Standard((SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Standard_default_instance_, v4);
  qword_1EB690D20 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690D28 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690D30 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690D38 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690D40 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690D48 = &SnippetUI::_TextProperty_default_instance_;
}

SnippetUI::SummaryItem_Standard *SnippetUI::SummaryItem_Standard::SummaryItem_Standard(SnippetUI::SummaryItem_Standard *this)
{
  *(void *)this = &unk_1F211C228;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_Standard_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Standard_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  return this;
}

void sub_1C5DC8250(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Standard::GetMetadata(SnippetUI::SummaryItem_Standard *this)
{
  return file_level_metadata_SummaryItem_2eproto;
}

uint64_t SnippetUI::SummaryItem_Standard::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void SnippetUI::SummaryItem_Standard::MergeFrom(SnippetUI::SummaryItem_Standard *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 1172);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Standard::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DC836C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Standard::MergeFrom(SnippetUI::SummaryItem_Standard *this, const SnippetUI::SummaryItem_Standard *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v29, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 1187);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v29[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Standard *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      int v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        int v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        char v12 = v10;
      }
      else {
        char v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    BOOL v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v14;
        BOOL v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v17;
        std::string v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v17, v18);
    }
    unsigned int v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      long long v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        long long v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 7) = v20;
        unsigned int v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        BOOL v21 = v19;
      }
      else {
        BOOL v21 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        __int16 v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
  }
}

void sub_1C5DC85D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Standard::CopyFrom(SnippetUI::SummaryItem_Standard *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Standard::Clear(this);
    SnippetUI::SummaryItem_Standard::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Standard::Clear(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  char v11 = *((unsigned char *)this + 8);
  unsigned int v10 = (SnippetUI::SummaryItem_Standard *)((char *)this + 8);
  *((void *)v10 + 8) = 0;
  if (v11)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v10);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Standard::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Standard *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_) {
    goto LABEL_73;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        char v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    char v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  std::string v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      BOOL v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      long long v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  long long v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    __int16 v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      std::string v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *std::string v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v34 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      std::string::size_type v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *std::string::size_type v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v43 = (SnippetUI::ActionProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 12);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      std::string v48 = v5 + 2;
      do
      {
        unsigned int v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      unsigned int v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *std::string v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  unsigned int v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  unsigned int v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (v52)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
    }
    *uint64_t v5 = 50;
    unsigned int v53 = *((_DWORD *)v52 + 15);
    if (v53 > 0x7F)
    {
      v5[1] = v53 | 0x80;
      unsigned int v55 = v53 >> 7;
      if (v53 >> 14)
      {
        unsigned int v56 = v5 + 2;
        do
        {
          uint64_t v57 = v56;
          *v56++ = v55 | 0x80;
          unsigned int v58 = v55 >> 7;
          unsigned int v59 = v55 >> 14;
          v55 >>= 7;
        }
        while (v59);
        unsigned int v54 = (google::protobuf::UnknownFieldSet *)(v57 + 2);
        unsigned char *v56 = v58;
      }
      else
      {
        v5[2] = v55;
        unsigned int v54 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v53;
      unsigned int v54 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v52, v54, a3, a4);
  }
LABEL_73:
  unsigned int v60 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v60 + 23) < 0)
  {
    std::string v61 = (const char *)*((void *)v60 + 1);
    if (!v61) {
      goto LABEL_79;
    }
    unsigned int v60 = *(google::protobuf::internal **)v60;
    goto LABEL_78;
  }
  std::string v61 = (const char *)*((unsigned __int8 *)v60 + 23);
  if (*((unsigned char *)v60 + 23))
  {
LABEL_78:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v60, v61, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Standard.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 2), v5);
  }
LABEL_79:
  unsigned int v62 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v62 + 23) < 0)
  {
    unsigned int v63 = (const char *)*((void *)v62 + 1);
    if (!v63) {
      goto LABEL_85;
    }
    unsigned int v62 = *(google::protobuf::internal **)v62;
    goto LABEL_84;
  }
  unsigned int v63 = (const char *)*((unsigned __int8 *)v62 + 23);
  if (*((unsigned char *)v62 + 23))
  {
LABEL_84:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v62, v63, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Standard.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 3), v5);
  }
LABEL_85:
  uint64_t v64 = *((void *)this + 1);
  if ((v64 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v64 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_Standard::_InternalParse(SnippetUI::SummaryItem_Standard *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v22, *((_DWORD *)a3 + 23))) {
      return v22;
    }
    TagFallback = (google::protobuf::internal *)((char *)v22 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v22;
    if ((*(char *)v22 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
      uint64_t v22 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v10);
    uint64_t v22 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_43;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_33;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_32;
      case 2u:
        if (v10 != 18) {
          goto LABEL_43;
        }
        char v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
        if (v12) {
          goto LABEL_20;
        }
        char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v12;
        goto LABEL_19;
      case 3u:
        if (v10 != 26) {
          goto LABEL_43;
        }
        char v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
        if (v12) {
          goto LABEL_20;
        }
        char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v12;
LABEL_19:
        TagFallback = v22;
LABEL_20:
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v12, TagFallback);
        goto LABEL_48;
      case 4u:
        if (v10 != 34) {
          goto LABEL_43;
        }
        unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v22;
        }
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v14, TagFallback);
        goto LABEL_48;
      case 5u:
        if (v10 != 42) {
          goto LABEL_43;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 8);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 8) = v15;
          TagFallback = v22;
        }
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_48;
      case 6u:
        if (v10 != 50) {
          goto LABEL_43;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (!v11)
        {
          char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 9) = v11;
LABEL_32:
          TagFallback = v22;
        }
LABEL_33:
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_48;
      case 7u:
        if (v10 != 58) {
          goto LABEL_43;
        }
        std::string v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_Standard.component_name";
        goto LABEL_42;
      case 8u:
        if (v10 != 66) {
          goto LABEL_43;
        }
        std::string v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_Standard.link_identifier";
LABEL_42:
        BOOL v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_48;
      default:
LABEL_43:
        if (v10) {
          BOOL v20 = (v10 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        BOOL v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_48:
        uint64_t v22 = (google::protobuf::internal *)v13;
        if (v13) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_Standard::GetCachedSize(SnippetUI::SummaryItem_Standard *this)
{
  return *((unsigned int *)this + 20);
}

char *SnippetUI::SummaryItem_Standard::ByteSizeLong(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v11 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
    if (v11)
    {
      char v12 = SnippetUI::MultilineTextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::MultilineTextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::VisualProperty *)*((void *)this + 7);
    if (v15)
    {
      std::string v16 = SnippetUI::VisualProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::ActionProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::ActionProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Standard *)((char *)this + 8), v5, (_DWORD *)this + 20);
  }
  else
  {
    *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_Standard::IsInitialized(SnippetUI::SummaryItem_Standard *this)
{
  return 1;
}

SnippetUI::SummaryItem_Standard *SnippetUI::SummaryItem_Standard::New(SnippetUI::SummaryItem_Standard *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Standard>(a2);
}

SnippetUI::SummaryItem_Standard *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Standard>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Standard *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Standard>);
  }
  SnippetUI::SummaryItem_Standard::SummaryItem_Standard(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DC92B8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C401DBA19FDLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Standard>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Standard *SnippetUI::SummaryItem_Standard::New(SnippetUI::SummaryItem_Standard *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Standard>(0);
}

void SnippetUI::SummaryItem_Standard::~SummaryItem_Standard(SnippetUI::SummaryItem_Standard *this)
{
  SnippetUI::SummaryItem_Standard::~SummaryItem_Standard(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F211C228;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    char v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_ShortNumber_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_ShortNumber::SummaryItem_ShortNumber((SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_ShortNumber_default_instance_, v4);
  qword_1EB690E98 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690EA0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690EA8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690EB0 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690EB8 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690EC0 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690EC8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690ED0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690ED8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
}

SnippetUI::SummaryItem_ShortNumber *SnippetUI::SummaryItem_ShortNumber::SummaryItem_ShortNumber(SnippetUI::SummaryItem_ShortNumber *this)
{
  *(void *)this = &unk_1F211C2E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 26) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_ShortNumber_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_ShortNumber_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((void *)this + 12) = 0;
  return this;
}

void sub_1C5DC9640(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::GetMetadata(SnippetUI::SummaryItem_ShortNumber *this)
{
  return qword_1EA3D8720;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

void SnippetUI::SummaryItem_ShortNumber::MergeFrom(SnippetUI::SummaryItem_ShortNumber *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 1838);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_ShortNumber::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DC975C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_ShortNumber::MergeFrom(SnippetUI::SummaryItem_ShortNumber *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v38, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 1853);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v38, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v37, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v38[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_ShortNumber *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      char v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        char v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        char v12 = v10;
      }
      else {
        char v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    BOOL v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        BOOL v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        std::string v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    unsigned int v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 7) = v20;
        unsigned int v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        BOOL v21 = v19;
      }
      else {
        BOOL v21 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 9) = v26;
        __int16 v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      uint64_t v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        uint64_t v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        std::string v30 = v28;
      }
      else {
        std::string v30 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v32, v33);
    }
    uint64_t v34 = (int **)*((void *)a2 + 12);
    if (v34)
    {
      unsigned int v35 = (int **)*((void *)this + 12);
      if (!v35)
      {
        unsigned int v35 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v35;
        uint64_t v34 = (int **)*((void *)a2 + 12);
      }
      if (v34) {
        uint64_t v36 = v34;
      }
      else {
        uint64_t v36 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v35, v36);
    }
  }
}

void sub_1C5DC9A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_ShortNumber::CopyFrom(SnippetUI::SummaryItem_ShortNumber *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_ShortNumber::Clear(this);
    SnippetUI::SummaryItem_ShortNumber::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_ShortNumber::Clear(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  char v14 = *((unsigned char *)this + 8);
  BOOL v13 = (SnippetUI::SummaryItem_ShortNumber *)((char *)this + 8);
  *((void *)v13 + 11) = 0;
  if (v14)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v13);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_ShortNumber::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_ShortNumber *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_) {
    goto LABEL_85;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          BOOL v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      BOOL v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  __int16 v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    __int16 v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      std::string v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *std::string v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v34 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      std::string::size_type v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *std::string::size_type v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  std::string v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      std::string v48 = v5 + 2;
      do
      {
        unsigned int v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      unsigned int v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *std::string v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  unsigned int v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  unsigned int v52 = (SnippetUI::VisualProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v52 = (SnippetUI::VisualProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      uint64_t v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      unsigned int v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  unsigned int v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  std::string v61 = (SnippetUI::ActionProperty *)*((void *)this + 10);
  if (v61)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      std::string v61 = (SnippetUI::ActionProperty *)*((void *)this + 10);
    }
    *uint64_t v5 = 58;
    unsigned int v62 = *((_DWORD *)v61 + 12);
    if (v62 > 0x7F)
    {
      v5[1] = v62 | 0x80;
      unsigned int v64 = v62 >> 7;
      if (v62 >> 14)
      {
        unsigned int v65 = v5 + 2;
        do
        {
          std::string v66 = v65;
          *v65++ = v64 | 0x80;
          unsigned int v67 = v64 >> 7;
          unsigned int v68 = v64 >> 14;
          v64 >>= 7;
        }
        while (v68);
        unsigned int v63 = (google::protobuf::UnknownFieldSet *)(v66 + 2);
        unsigned char *v65 = v67;
      }
      else
      {
        v5[2] = v64;
        unsigned int v63 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v62;
      unsigned int v63 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v61, v63, a3, a4);
  }
LABEL_85:
  char v69 = (uint64_t *)*((void *)this + 2);
  if ((*((char *)v69 + 23) & 0x80000000) == 0)
  {
    unsigned int v70 = (const char *)*((unsigned __int8 *)v69 + 23);
    if (!*((unsigned char *)v69 + 23)) {
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  unsigned int v70 = (const char *)v69[1];
  if (v70)
  {
    char v69 = (uint64_t *)*v69;
LABEL_90:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v69, v70, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_ShortNumber.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 2), v5);
  }
LABEL_91:
  if (this != (SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    unsigned int v71 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v71)
    {
      if ((unint64_t)v5 >= *(void *)a3)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unsigned int v71 = (SnippetUI::TextProperty *)*((void *)this + 11);
      }
      *uint64_t v5 = 74;
      unsigned int v72 = *((_DWORD *)v71 + 15);
      if (v72 > 0x7F)
      {
        v5[1] = v72 | 0x80;
        unsigned int v74 = v72 >> 7;
        if (v72 >> 14)
        {
          long long v75 = v5 + 2;
          do
          {
            int v76 = v75;
            *v75++ = v74 | 0x80;
            unsigned int v77 = v74 >> 7;
            unsigned int v78 = v74 >> 14;
            v74 >>= 7;
          }
          while (v78);
          std::string v73 = (google::protobuf::UnknownFieldSet *)(v76 + 2);
          unsigned char *v75 = v77;
        }
        else
        {
          v5[2] = v74;
          std::string v73 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v72;
        std::string v73 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v71, v73, a3, a4);
    }
  }
  int v79 = (uint64_t *)*((void *)this + 3);
  if ((*((char *)v79 + 23) & 0x80000000) == 0)
  {
    uint64_t v80 = (const char *)*((unsigned __int8 *)v79 + 23);
    if (!*((unsigned char *)v79 + 23)) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
  uint64_t v80 = (const char *)v79[1];
  if (v80)
  {
    int v79 = (uint64_t *)*v79;
LABEL_108:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v79, v80, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_ShortNumber.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 3), v5);
  }
LABEL_109:
  if (this != (SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    int v81 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v81)
    {
      if ((unint64_t)v5 >= *(void *)a3)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        int v81 = (SnippetUI::TextProperty *)*((void *)this + 12);
      }
      *uint64_t v5 = 90;
      unsigned int v82 = *((_DWORD *)v81 + 15);
      if (v82 > 0x7F)
      {
        v5[1] = v82 | 0x80;
        unsigned int v84 = v82 >> 7;
        if (v82 >> 14)
        {
          uint64_t v85 = v5 + 2;
          do
          {
            int v86 = v85;
            *v85++ = v84 | 0x80;
            unsigned int v87 = v84 >> 7;
            unsigned int v88 = v84 >> 14;
            v84 >>= 7;
          }
          while (v88);
          uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v86 + 2);
          unsigned char *v85 = v87;
        }
        else
        {
          v5[2] = v84;
          uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v82;
        uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v81, v83, a3, a4);
    }
  }
  uint64_t v89 = *((void *)this + 1);
  if ((v89 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v89 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_ShortNumber::_InternalParse(SnippetUI::SummaryItem_ShortNumber *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v22, *((_DWORD *)a3 + 23))) {
      return v22;
    }
    TagFallback = (google::protobuf::internal *)((char *)v22 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v22;
    if ((*(char *)v22 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
      uint64_t v22 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v10);
    uint64_t v22 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_51;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_50;
      case 2u:
        if (v10 != 18) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_51;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_50;
      case 3u:
        if (v10 != 26) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_51;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
        goto LABEL_50;
      case 4u:
        if (v10 != 34) {
          goto LABEL_54;
        }
        uint64_t v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
        if (v12) {
          goto LABEL_26;
        }
        uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 7) = v12;
        goto LABEL_25;
      case 5u:
        if (v10 != 42) {
          goto LABEL_54;
        }
        uint64_t v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
        if (v12) {
          goto LABEL_26;
        }
        uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v12;
LABEL_25:
        TagFallback = v22;
LABEL_26:
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v12, TagFallback);
        goto LABEL_52;
      case 6u:
        if (v10 != 50) {
          goto LABEL_54;
        }
        unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 9);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 9) = v14;
          TagFallback = v22;
        }
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v14, TagFallback);
        goto LABEL_52;
      case 7u:
        if (v10 != 58) {
          goto LABEL_54;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 10);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v15;
          TagFallback = v22;
        }
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_52;
      case 8u:
        if (v10 != 66) {
          goto LABEL_54;
        }
        std::string v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_ShortNumber.component_name";
        goto LABEL_46;
      case 9u:
        if (v10 != 74) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 11);
        if (v11) {
          goto LABEL_51;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v11;
        goto LABEL_50;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_54;
        }
        std::string v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_ShortNumber.link_identifier";
LABEL_46:
        BOOL v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_52;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 12);
        if (v11) {
          goto LABEL_51;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v11;
LABEL_50:
        TagFallback = v22;
LABEL_51:
        BOOL v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_52;
      default:
LABEL_54:
        if (v10) {
          BOOL v20 = (v10 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        BOOL v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_52:
        uint64_t v22 = (google::protobuf::internal *)v13;
        if (v13) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_ShortNumber::GetCachedSize(SnippetUI::SummaryItem_ShortNumber *this)
{
  return *((unsigned int *)this + 26);
}

char *SnippetUI::SummaryItem_ShortNumber::ByteSizeLong(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::MultilineTextProperty *)*((void *)this + 7);
    if (v15)
    {
      std::string v16 = SnippetUI::MultilineTextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::MultilineTextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::VisualProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::VisualProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v21 = (SnippetUI::ActionProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::ActionProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::TextProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
    __int16 v25 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v25)
    {
      unsigned int v26 = SnippetUI::TextProperty::ByteSizeLong(v25);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v26[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_ShortNumber *)((char *)this + 8), v5, (_DWORD *)this + 26);
  }
  else
  {
    *((_DWORD *)this + 26) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_ShortNumber::IsInitialized(SnippetUI::SummaryItem_ShortNumber *this)
{
  return 1;
}

SnippetUI::SummaryItem_ShortNumber *SnippetUI::SummaryItem_ShortNumber::New(SnippetUI::SummaryItem_ShortNumber *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_ShortNumber>(a2);
}

SnippetUI::SummaryItem_ShortNumber *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_ShortNumber>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_ShortNumber *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x70uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_ShortNumber>);
  }
  SnippetUI::SummaryItem_ShortNumber::SummaryItem_ShortNumber(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DCAABC(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40B27C08C4);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_ShortNumber>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_ShortNumber *SnippetUI::SummaryItem_ShortNumber::New(SnippetUI::SummaryItem_ShortNumber *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_ShortNumber>(0);
}

void SnippetUI::SummaryItem_ShortNumber::~SummaryItem_ShortNumber(SnippetUI::SummaryItem_ShortNumber *this)
{
  SnippetUI::SummaryItem_ShortNumber::~SummaryItem_ShortNumber(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(void *)this = &unk_1F211C2E8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    BOOL v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    unsigned int v14 = *((void *)this + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_Player_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Player::SummaryItem_Player((SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Player_default_instance_, v4);
  qword_1EB68FD08 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD10 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FD18 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FD20 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FD28 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FD30 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_Player *SnippetUI::SummaryItem_Player::SummaryItem_Player(SnippetUI::SummaryItem_Player *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F211C9A8;
  *((_DWORD *)this + 26) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (atomic_load_explicit(scc_info_SummaryItem_Player_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Player_SummaryItem_2eproto);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return this;
}

void sub_1C5DCAED0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Player::GetMetadata(SnippetUI::SummaryItem_Player *this)
{
  return qword_1EA3D87B0;
}

uint64_t SnippetUI::SummaryItem_Player::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

void SnippetUI::SummaryItem_Player::MergeFrom(SnippetUI::SummaryItem_Player *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 7739);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Player::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DCAFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Player::MergeFrom(SnippetUI::SummaryItem_Player *this, const SnippetUI::SummaryItem_Player *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v29, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 7754);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v29[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Player *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((int **)this + 2, (uint64_t)a2 + 16);
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 5);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v6);
    }
    std::string::operator=(*((std::string **)this + 5), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 6);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 6);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, v8);
    }
    std::string::operator=(*((std::string **)this + 6), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 7);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 7);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 7);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    BOOL v13 = (int **)*((void *)a2 + 8);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 8);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v14;
        BOOL v13 = (int **)*((void *)a2 + 8);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v14, v15);
    }
    std::string v16 = (int **)*((void *)a2 + 9);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 9);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 9) = v17;
        std::string v16 = (int **)*((void *)a2 + 9);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v17, v18);
    }
    unsigned int v19 = (int **)*((void *)a2 + 10);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 10);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v20;
        unsigned int v19 = (int **)*((void *)a2 + 10);
      }
      if (v19) {
        BOOL v21 = v19;
      }
      else {
        BOOL v21 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 11);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 11);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 11) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 11);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v23, v24);
    }
    __int16 v25 = (int **)*((void *)a2 + 12);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 12);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 12) = v26;
        __int16 v25 = (int **)*((void *)a2 + 12);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v26, v27);
    }
  }
}

void sub_1C5DCB264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    char v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      BOOL v13 = (const SnippetUI::Player **)(v6 + 8);
      unsigned int v14 = (SnippetUI::Player **)v7;
      do
      {
        std::string v16 = *v13++;
        unsigned int v15 = v16;
        unsigned int v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Player>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      uint64_t v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      BOOL v21 = (SnippetUI::Player **)((char *)v8 + v20);
      uint64_t v22 = (const SnippetUI::Player **)(v20 + v6 + 8);
      do
      {
        unsigned int v23 = *v22++;
        unsigned int v24 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Player>(v18);
        google::protobuf::internal::GenericTypeHandler<SnippetUI::Player>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    unsigned int v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5DCB3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<SnippetUI::Player>::Merge(const SnippetUI::Player *a1, SnippetUI::Player *a2)
{
}

void SnippetUI::SummaryItem_Player::CopyFrom(SnippetUI::SummaryItem_Player *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Player::Clear(this);
    SnippetUI::SummaryItem_Player::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Player::Clear(SnippetUI::SummaryItem_Player *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16);
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 6);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 7);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 7) = 0;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 8) = 0;
  uint64_t v6 = *((void *)this + 9);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 9) = 0;
  uint64_t v7 = *((void *)this + 10);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v8 = *((void *)this + 11);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 11) = 0;
  uint64_t v9 = *((void *)this + 12);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  char v11 = *((unsigned char *)this + 8);
  uint64_t v10 = (SnippetUI::SummaryItem_Player *)((char *)this + 8);
  *((void *)v10 + 11) = 0;
  if (v11)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v10);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    uint64_t v3 = (SnippetUI::Player **)(*(void *)(a1 + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      SnippetUI::Player::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1C5DCB6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Player::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Player *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v7 = *((_DWORD *)this + 6);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)a2 >= *(void *)a3) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      }
      uint64_t v9 = (SnippetUI::Player *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16, i);
      *(unsigned char *)a2 = 10;
      unsigned int v11 = *((_DWORD *)v9 + 14);
      if (v11 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v11 | 0x80;
        unsigned int v13 = v11 >> 7;
        if (v11 >> 14)
        {
          unsigned int v14 = (char *)a2 + 2;
          do
          {
            unsigned int v15 = v14;
            *v14++ = v13 | 0x80;
            unsigned int v16 = v13 >> 7;
            unsigned int v17 = v13 >> 14;
            v13 >>= 7;
          }
          while (v17);
          uint64_t v12 = (google::protobuf::UnknownFieldSet *)(v15 + 2);
          unsigned char *v14 = v16;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v13;
          uint64_t v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v11;
        uint64_t v12 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = SnippetUI::Player::InternalSerializeWithCachedSizesToArray(v9, v12, a3, v10);
    }
  }
  if (this != (SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_)
  {
    uint64_t v18 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (!v18) {
      goto LABEL_26;
    }
    if ((unint64_t)a2 >= *(void *)a3)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v18 = (SnippetUI::TextProperty *)*((void *)this + 7);
    }
    *(unsigned char *)a2 = 18;
    unsigned int v19 = *((_DWORD *)v18 + 15);
    if (v19 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v19 | 0x80;
      unsigned int v21 = v19 >> 7;
      if (v19 >> 14)
      {
        unsigned int v23 = (char *)a2 + 2;
        do
        {
          unsigned int v24 = v23;
          *v23++ = v21 | 0x80;
          unsigned int v25 = v21 >> 7;
          unsigned int v26 = v21 >> 14;
          v21 >>= 7;
        }
        while (v26);
        uint64_t v22 = (google::protobuf::UnknownFieldSet *)(v24 + 2);
        *unsigned int v23 = v25;
        goto LABEL_25;
      }
      *((unsigned char *)a2 + 2) = v21;
      uint64_t v20 = 3;
    }
    else
    {
      *((unsigned char *)a2 + 1) = v19;
      uint64_t v20 = 2;
    }
    uint64_t v22 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v20);
LABEL_25:
    a2 = SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v18, v22, a3, a4);
LABEL_26:
    char v27 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    if (!v27) {
      goto LABEL_38;
    }
    if ((unint64_t)a2 >= *(void *)a3)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v27 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    }
    *(unsigned char *)a2 = 26;
    unsigned int v28 = *((_DWORD *)v27 + 15);
    if (v28 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v28 | 0x80;
      unsigned int v30 = v28 >> 7;
      if (v28 >> 14)
      {
        unsigned int v32 = (char *)a2 + 2;
        do
        {
          unsigned int v33 = v32;
          *v32++ = v30 | 0x80;
          unsigned int v34 = v30 >> 7;
          unsigned int v35 = v30 >> 14;
          v30 >>= 7;
        }
        while (v35);
        char v31 = (google::protobuf::UnknownFieldSet *)(v33 + 2);
        *unsigned int v32 = v34;
        goto LABEL_37;
      }
      *((unsigned char *)a2 + 2) = v30;
      uint64_t v29 = 3;
    }
    else
    {
      *((unsigned char *)a2 + 1) = v28;
      uint64_t v29 = 2;
    }
    char v31 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v29);
LABEL_37:
    a2 = SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v27, v31, a3, a4);
LABEL_38:
    uint64_t v36 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
    if (!v36) {
      goto LABEL_50;
    }
    if ((unint64_t)a2 >= *(void *)a3)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v36 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
    }
    *(unsigned char *)a2 = 34;
    unsigned int v37 = *((_DWORD *)v36 + 15);
    if (v37 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v37 | 0x80;
      unsigned int v39 = v37 >> 7;
      if (v37 >> 14)
      {
        unsigned int v41 = (char *)a2 + 2;
        do
        {
          unsigned int v42 = v41;
          *v41++ = v39 | 0x80;
          unsigned int v43 = v39 >> 7;
          unsigned int v44 = v39 >> 14;
          v39 >>= 7;
        }
        while (v44);
        unsigned int v40 = (google::protobuf::UnknownFieldSet *)(v42 + 2);
        *unsigned int v41 = v43;
        goto LABEL_49;
      }
      *((unsigned char *)a2 + 2) = v39;
      uint64_t v38 = 3;
    }
    else
    {
      *((unsigned char *)a2 + 1) = v37;
      uint64_t v38 = 2;
    }
    unsigned int v40 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v38);
LABEL_49:
    a2 = SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v36, v40, a3, a4);
LABEL_50:
    uint64_t v45 = (SnippetUI::TextProperty *)*((void *)this + 10);
    if (!v45) {
      goto LABEL_62;
    }
    if ((unint64_t)a2 >= *(void *)a3)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v45 = (SnippetUI::TextProperty *)*((void *)this + 10);
    }
    *(unsigned char *)a2 = 42;
    unsigned int v46 = *((_DWORD *)v45 + 15);
    if (v46 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v46 | 0x80;
      unsigned int v48 = v46 >> 7;
      if (v46 >> 14)
      {
        unsigned int v50 = (char *)a2 + 2;
        do
        {
          unsigned int v51 = v50;
          *v50++ = v48 | 0x80;
          unsigned int v52 = v48 >> 7;
          unsigned int v53 = v48 >> 14;
          v48 >>= 7;
        }
        while (v53);
        unsigned int v49 = (google::protobuf::UnknownFieldSet *)(v51 + 2);
        unsigned char *v50 = v52;
        goto LABEL_61;
      }
      *((unsigned char *)a2 + 2) = v48;
      uint64_t v47 = 3;
    }
    else
    {
      *((unsigned char *)a2 + 1) = v46;
      uint64_t v47 = 2;
    }
    unsigned int v49 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v47);
LABEL_61:
    a2 = SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v45, v49, a3, a4);
LABEL_62:
    uint64_t v54 = (SnippetUI::VisualProperty *)*((void *)this + 11);
    if (!v54) {
      goto LABEL_74;
    }
    if ((unint64_t)a2 >= *(void *)a3)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v54 = (SnippetUI::VisualProperty *)*((void *)this + 11);
    }
    *(unsigned char *)a2 = 50;
    unsigned int v55 = *((_DWORD *)v54 + 15);
    if (v55 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v55 | 0x80;
      unsigned int v57 = v55 >> 7;
      if (v55 >> 14)
      {
        unsigned int v59 = (char *)a2 + 2;
        do
        {
          unsigned int v60 = v59;
          *v59++ = v57 | 0x80;
          unsigned int v61 = v57 >> 7;
          unsigned int v62 = v57 >> 14;
          v57 >>= 7;
        }
        while (v62);
        unsigned int v58 = (google::protobuf::UnknownFieldSet *)(v60 + 2);
        unsigned char *v59 = v61;
        goto LABEL_73;
      }
      *((unsigned char *)a2 + 2) = v57;
      uint64_t v56 = 3;
    }
    else
    {
      *((unsigned char *)a2 + 1) = v55;
      uint64_t v56 = 2;
    }
    unsigned int v58 = (google::protobuf::UnknownFieldSet *)((char *)a2 + v56);
LABEL_73:
    a2 = SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v54, v58, a3, a4);
LABEL_74:
    unsigned int v63 = (SnippetUI::ActionProperty *)*((void *)this + 12);
    if (v63)
    {
      if ((unint64_t)a2 >= *(void *)a3)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
        unsigned int v63 = (SnippetUI::ActionProperty *)*((void *)this + 12);
      }
      *(unsigned char *)a2 = 58;
      unsigned int v64 = *((_DWORD *)v63 + 12);
      if (v64 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v64 | 0x80;
        unsigned int v66 = v64 >> 7;
        if (v64 >> 14)
        {
          unsigned int v67 = (char *)a2 + 2;
          do
          {
            unsigned int v68 = v67;
            *v67++ = v66 | 0x80;
            unsigned int v69 = v66 >> 7;
            unsigned int v70 = v66 >> 14;
            v66 >>= 7;
          }
          while (v70);
          unsigned int v65 = (google::protobuf::UnknownFieldSet *)(v68 + 2);
          unsigned char *v67 = v69;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v66;
          unsigned int v65 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v64;
        unsigned int v65 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v63, v65, a3, a4);
    }
  }
  unsigned int v71 = (google::protobuf::internal *)*((void *)this + 5);
  if (*((char *)v71 + 23) < 0)
  {
    unsigned int v72 = (const char *)*((void *)v71 + 1);
    if (!v72) {
      goto LABEL_91;
    }
    unsigned int v71 = *(google::protobuf::internal **)v71;
    goto LABEL_90;
  }
  unsigned int v72 = (const char *)*((unsigned __int8 *)v71 + 23);
  if (*((unsigned char *)v71 + 23))
  {
LABEL_90:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v71, v72, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Player.component_name");
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 5), (char *)a2);
  }
LABEL_91:
  std::string v73 = (google::protobuf::internal *)*((void *)this + 6);
  if (*((char *)v73 + 23) < 0)
  {
    unsigned int v74 = (const char *)*((void *)v73 + 1);
    if (!v74) {
      goto LABEL_97;
    }
    std::string v73 = *(google::protobuf::internal **)v73;
    goto LABEL_96;
  }
  unsigned int v74 = (const char *)*((unsigned __int8 *)v73 + 23);
  if (*((unsigned char *)v73 + 23))
  {
LABEL_96:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v73, v74, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Player.link_identifier");
    a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 6), (char *)a2);
  }
LABEL_97:
  uint64_t v75 = *((void *)this + 1);
  if ((v75 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v75 & 0xFFFFFFFFFFFFFFFELL), a2, a3, a4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5DCBD44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *SnippetUI::SummaryItem_Player::_InternalParse(SnippetUI::SummaryItem_Player *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  char v31 = a2;
  uint64_t v5 = (std::string **)((char *)this + 48);
  char v6 = (std::string **)((char *)this + 40);
  char v7 = (unsigned int *)((char *)this + 16);
  uint64_t v8 = (unint64_t *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v31, *((_DWORD *)a3 + 23)) & 1) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v11 = (char *)*(unsigned __int8 *)v31;
      if (*(char *)v31 < 0)
      {
        unsigned int v11 = (char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, v11);
          char v31 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_56;
              }
              uint64_t v12 = (char *)TagFallback - 1;
              break;
            case 2u:
              if (v11 != 18) {
                goto LABEL_56;
              }
              uint64_t v20 = (SnippetUI::TextProperty *)*((void *)this + 7);
              if (v20) {
                goto LABEL_38;
              }
              uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
              *((void *)this + 7) = v20;
              goto LABEL_37;
            case 3u:
              if (v11 != 26) {
                goto LABEL_56;
              }
              unsigned int v21 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
              if (v21) {
                goto LABEL_33;
              }
              unsigned int v21 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
              *((void *)this + 8) = v21;
              goto LABEL_32;
            case 4u:
              if (v11 != 34) {
                goto LABEL_56;
              }
              unsigned int v21 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
              if (v21) {
                goto LABEL_33;
              }
              unsigned int v21 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
              *((void *)this + 9) = v21;
LABEL_32:
              TagFallback = v31;
LABEL_33:
              uint64_t v22 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v21, TagFallback);
              goto LABEL_61;
            case 5u:
              if (v11 != 42) {
                goto LABEL_56;
              }
              uint64_t v20 = (SnippetUI::TextProperty *)*((void *)this + 10);
              if (v20) {
                goto LABEL_38;
              }
              uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
              *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v20;
LABEL_37:
              TagFallback = v31;
LABEL_38:
              uint64_t v22 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v20, TagFallback);
              goto LABEL_61;
            case 6u:
              if (v11 != 50) {
                goto LABEL_56;
              }
              unsigned int v23 = (SnippetUI::VisualProperty *)*((void *)this + 11);
              if (!v23)
              {
                unsigned int v23 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
                *((void *)this + 11) = v23;
                TagFallback = v31;
              }
              uint64_t v22 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v23, TagFallback);
              goto LABEL_61;
            case 7u:
              if (v11 != 58) {
                goto LABEL_56;
              }
              unsigned int v24 = (SnippetUI::ActionProperty *)*((void *)this + 12);
              if (!v24)
              {
                unsigned int v24 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
                *((void *)this + 12) = v24;
                TagFallback = v31;
              }
              uint64_t v22 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v24, TagFallback);
              goto LABEL_61;
            case 8u:
              if (v11 != 66) {
                goto LABEL_56;
              }
              unsigned int v25 = *v6;
              if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              unsigned int v26 = (std::string::value_type *)TagFallback;
              char v27 = a3;
              unsigned int v28 = "SnippetUI.SummaryItem_Player.component_name";
              goto LABEL_55;
            case 9u:
              if (v11 != 74) {
                goto LABEL_56;
              }
              unsigned int v25 = *v5;
              if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              unsigned int v26 = (std::string::value_type *)TagFallback;
              char v27 = a3;
              unsigned int v28 = "SnippetUI.SummaryItem_Player.link_identifier";
LABEL_55:
              uint64_t v22 = google::protobuf::internal::InlineGreedyStringParserUTF8(v25, v26, (uint64_t)v27, (google::protobuf::internal *)v28);
              goto LABEL_61;
            default:
LABEL_56:
              if (v11) {
                BOOL v29 = (v11 & 7) == 4;
              }
              else {
                BOOL v29 = 1;
              }
              if (v29)
              {
                *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11 - 1;
                return TagFallback;
              }
              uint64_t v22 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, v8, TagFallback, a3, v9);
LABEL_61:
              char v31 = (google::protobuf::internal *)v22;
              if (v22) {
                continue;
              }
              return 0;
          }
          while (1)
          {
            unsigned int v13 = (google::protobuf::internal *)(v12 + 1);
            char v31 = (google::protobuf::internal *)(v12 + 1);
            unsigned int v14 = (int *)*((void *)this + 4);
            if (!v14) {
              break;
            }
            uint64_t v15 = *((int *)this + 6);
            int v16 = *v14;
            if ((int)v15 >= *v14)
            {
              if (v16 == *((_DWORD *)this + 7))
              {
LABEL_15:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v16 + 1);
                unsigned int v14 = (int *)*((void *)this + 4);
                int v16 = *v14;
              }
              int *v14 = v16 + 1;
              unsigned int v17 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Player>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                   + 2));
              uint64_t v18 = *((void *)this + 4);
              uint64_t v19 = *((int *)this + 6);
              *((_DWORD *)this + 6) = v19 + 1;
              *(void *)(v18 + 8 * v19 + 8) = v17;
              unsigned int v13 = v31;
              goto LABEL_17;
            }
            *((_DWORD *)this + 6) = v15 + 1;
            unsigned int v17 = *(SnippetUI::Player **)&v14[2 * v15 + 2];
LABEL_17:
            uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Player>(a3, v17, v13);
            char v31 = (google::protobuf::internal *)v12;
            if (!v12) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
              goto LABEL_2;
            }
          }
          int v16 = *((_DWORD *)this + 7);
          goto LABEL_15;
        }
        TagFallback = (google::protobuf::internal *)((char *)v31 + 2);
      }
      char v31 = TagFallback;
      goto LABEL_7;
    }
    return v31;
  }
}

char *google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Player>(google::protobuf::internal::EpsCopyInputStream *this, SnippetUI::Player *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  char v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)SnippetUI::Player::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::GetCachedSize(SnippetUI::SummaryItem_Player *this)
{
  return *((unsigned int *)this + 26);
}

char *SnippetUI::SummaryItem_Player::ByteSizeLong(SnippetUI::SummaryItem_Player *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (SnippetUI::Player **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      char v7 = SnippetUI::Player::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((void *)this + 5);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_14:
  uint64_t v11 = *((void *)this + 6);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_19:
  if (this != (SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_)
  {
    int v14 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v14)
    {
      int v15 = SnippetUI::TextProperty::ByteSizeLong(v14);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v15[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)];
    }
    int v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    if (v16)
    {
      unsigned int v17 = SnippetUI::MultilineTextProperty::ByteSizeLong(v16);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v17[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v18 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
    if (v18)
    {
      uint64_t v19 = SnippetUI::MultilineTextProperty::ByteSizeLong(v18);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v19[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v20 = (SnippetUI::TextProperty *)*((void *)this + 10);
    if (v20)
    {
      unsigned int v21 = SnippetUI::TextProperty::ByteSizeLong(v20);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v21[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v22 = (SnippetUI::VisualProperty *)*((void *)this + 11);
    if (v22)
    {
      unsigned int v23 = SnippetUI::VisualProperty::ByteSizeLong(v22);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v23[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v24 = (SnippetUI::ActionProperty *)*((void *)this + 12);
    if (v24)
    {
      unsigned int v25 = SnippetUI::ActionProperty::ByteSizeLong(v24);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v25[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Player *)((char *)this + 8), v2, (_DWORD *)this + 26);
  }
  else
  {
    *((_DWORD *)this + 26) = v2;
    return (char *)v2;
  }
}

uint64_t SnippetUI::SummaryItem_Player::IsInitialized(SnippetUI::SummaryItem_Player *this)
{
  return 1;
}

SnippetUI::SummaryItem_Player *SnippetUI::SummaryItem_Player::New(SnippetUI::SummaryItem_Player *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Player>(a2);
}

SnippetUI::SummaryItem_Player *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Player>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Player *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x70uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Player>);
  }
  SnippetUI::SummaryItem_Player::SummaryItem_Player(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DCC53C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40BDA5CB28);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Player>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Player *SnippetUI::SummaryItem_Player::New(SnippetUI::SummaryItem_Player *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Player>(0);
}

void SnippetUI::SummaryItem_Player::~SummaryItem_Player(SnippetUI::SummaryItem_Player *this)
{
  SnippetUI::SummaryItem_Player::~SummaryItem_Player(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F211C9A8;
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_)
  {
    int v6 = *((void *)this + 7);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    char v7 = *((void *)this + 8);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 9);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 10);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 11);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 12);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((SnippetUI::SummaryItem_Player *)((char *)this + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_PairV2_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_PairV2::SummaryItem_PairV2((SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_PairV2_default_instance_, v4);
  qword_1EA3DB0F0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB0F8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB100 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB108 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB110 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EA3DB118 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_PairV2 *SnippetUI::SummaryItem_PairV2::SummaryItem_PairV2(SnippetUI::SummaryItem_PairV2 *this)
{
  *(void *)this = &unk_1F211C6A8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_PairV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairV2_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  return this;
}

void sub_1C5DCC8B8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_PairV2::GetMetadata(SnippetUI::SummaryItem_PairV2 *this)
{
  return qword_1EA3D8770;
}

uint64_t SnippetUI::SummaryItem_PairV2::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void SnippetUI::SummaryItem_PairV2::MergeFrom(SnippetUI::SummaryItem_PairV2 *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 4848);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_PairV2::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DCC9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairV2::MergeFrom(SnippetUI::SummaryItem_PairV2 *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v29, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 4863);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v29, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v29[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_)
  {
    uint64_t v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        uint64_t v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        int v15 = v13;
      }
      else {
        int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    int v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        int v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    uint64_t v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      uint64_t v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        uint64_t v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 7) = v20;
        uint64_t v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        char v27 = v25;
      }
      else {
        char v27 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v26, v27);
    }
  }
}

void sub_1C5DCCC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairV2::CopyFrom(SnippetUI::SummaryItem_PairV2 *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairV2::Clear(this);
    SnippetUI::SummaryItem_PairV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairV2::Clear(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  char v11 = *((unsigned char *)this + 8);
  uint64_t v10 = (SnippetUI::SummaryItem_PairV2 *)((char *)this + 8);
  *((void *)v10 + 8) = 0;
  if (v11)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v10);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_PairV2::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_PairV2 *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_) {
    goto LABEL_73;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          uint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        char v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    char v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  int v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      uint64_t v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  uint64_t v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unsigned int v34 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v34 = (SnippetUI::VisualProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::VisualProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::VisualProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        unsigned int v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  unsigned int v52 = (SnippetUI::ActionProperty *)*((void *)this + 9);
  if (v52)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v52 = (SnippetUI::ActionProperty *)*((void *)this + 9);
    }
    *uint64_t v5 = 50;
    unsigned int v53 = *((_DWORD *)v52 + 12);
    if (v53 > 0x7F)
    {
      v5[1] = v53 | 0x80;
      unsigned int v55 = v53 >> 7;
      if (v53 >> 14)
      {
        uint64_t v56 = v5 + 2;
        do
        {
          unsigned int v57 = v56;
          *v56++ = v55 | 0x80;
          unsigned int v58 = v55 >> 7;
          unsigned int v59 = v55 >> 14;
          v55 >>= 7;
        }
        while (v59);
        uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v57 + 2);
        unsigned char *v56 = v58;
      }
      else
      {
        v5[2] = v55;
        uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v53;
      uint64_t v54 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v52, v54, a3, a4);
  }
LABEL_73:
  unsigned int v60 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v60 + 23) < 0)
  {
    unsigned int v61 = (const char *)*((void *)v60 + 1);
    if (!v61) {
      goto LABEL_79;
    }
    unsigned int v60 = *(google::protobuf::internal **)v60;
    goto LABEL_78;
  }
  unsigned int v61 = (const char *)*((unsigned __int8 *)v60 + 23);
  if (*((unsigned char *)v60 + 23))
  {
LABEL_78:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v60, v61, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairV2.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 2), v5);
  }
LABEL_79:
  unsigned int v62 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v62 + 23) < 0)
  {
    unsigned int v63 = (const char *)*((void *)v62 + 1);
    if (!v63) {
      goto LABEL_85;
    }
    unsigned int v62 = *(google::protobuf::internal **)v62;
    goto LABEL_84;
  }
  unsigned int v63 = (const char *)*((unsigned __int8 *)v62 + 23);
  if (*((unsigned char *)v62 + 23))
  {
LABEL_84:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v62, v63, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairV2.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 3), v5);
  }
LABEL_85:
  uint64_t v64 = *((void *)this + 1);
  if ((v64 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v64 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_PairV2::_InternalParse(SnippetUI::SummaryItem_PairV2 *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unsigned int v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unsigned int v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_42;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_20;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_19;
      case 2u:
        if (v10 != 18) {
          goto LABEL_42;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_20;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_19;
      case 3u:
        if (v10 != 26) {
          goto LABEL_42;
        }
        char v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_20;
        }
        char v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
LABEL_19:
        TagFallback = v21;
LABEL_20:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_47;
      case 4u:
        if (v10 != 34) {
          goto LABEL_42;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 7);
        if (v13) {
          goto LABEL_28;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 7) = v13;
        goto LABEL_27;
      case 5u:
        if (v10 != 42) {
          goto LABEL_42;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 8);
        if (v13) {
          goto LABEL_28;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 8) = v13;
LABEL_27:
        TagFallback = v21;
LABEL_28:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_47;
      case 6u:
        if (v10 != 50) {
          goto LABEL_42;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 9);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 9) = v14;
          TagFallback = v21;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_47;
      case 7u:
        if (v10 != 58) {
          goto LABEL_42;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        int v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_PairV2.component_name";
        goto LABEL_41;
      case 8u:
        if (v10 != 66) {
          goto LABEL_42;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        int v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_PairV2.link_identifier";
LABEL_41:
        uint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_47;
      default:
LABEL_42:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_47:
        unsigned int v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_PairV2::GetCachedSize(SnippetUI::SummaryItem_PairV2 *this)
{
  return *((unsigned int *)this + 20);
}

char *SnippetUI::SummaryItem_PairV2::ByteSizeLong(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::VisualProperty *)*((void *)this + 7);
    if (v15)
    {
      int v16 = SnippetUI::VisualProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::VisualProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::VisualProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v19 = (SnippetUI::ActionProperty *)*((void *)this + 9);
    if (v19)
    {
      uint64_t v20 = SnippetUI::ActionProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_PairV2 *)((char *)this + 8), v5, (_DWORD *)this + 20);
  }
  else
  {
    *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_PairV2::IsInitialized(SnippetUI::SummaryItem_PairV2 *this)
{
  return 1;
}

SnippetUI::SummaryItem_PairV2 *SnippetUI::SummaryItem_PairV2::New(SnippetUI::SummaryItem_PairV2 *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairV2>(a2);
}

SnippetUI::SummaryItem_PairV2 *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairV2>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_PairV2 *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairV2>);
  }
  SnippetUI::SummaryItem_PairV2::SummaryItem_PairV2(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DCD90C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C401DBA19FDLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairV2>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_PairV2 *SnippetUI::SummaryItem_PairV2::New(SnippetUI::SummaryItem_PairV2 *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairV2>(0);
}

void SnippetUI::SummaryItem_PairV2::~SummaryItem_PairV2(SnippetUI::SummaryItem_PairV2 *this)
{
  SnippetUI::SummaryItem_PairV2::~SummaryItem_PairV2(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F211C6A8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    char v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_PairNumberV2_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_PairNumberV2::SummaryItem_PairNumberV2((SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_PairNumberV2_default_instance_, v4);
  qword_1EA3DB148 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB150 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB158 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB160 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB168 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB170 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB178 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EA3DB180 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB188 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EA3DB190 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_PairNumberV2 *SnippetUI::SummaryItem_PairNumberV2::SummaryItem_PairNumberV2(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  *(void *)this = &unk_1F211C828;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 28) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_PairNumberV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairNumberV2_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  return this;
}

void sub_1C5DCDC94(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::GetMetadata(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  return qword_1EA3D8790;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 112) = a2;
  return this;
}

void SnippetUI::SummaryItem_PairNumberV2::MergeFrom(SnippetUI::SummaryItem_PairNumberV2 *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 6482);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_PairNumberV2::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DCDDB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairNumberV2::MergeFrom(SnippetUI::SummaryItem_PairNumberV2 *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v41, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 6497);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v41, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v40, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v41[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairNumberV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      char v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        char v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    int v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        int v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      uint64_t v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        uint64_t v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      BOOL v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        BOOL v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        unsigned int v30 = v28;
      }
      else {
        unsigned int v30 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v32, v33);
    }
    unsigned int v34 = (int **)*((void *)a2 + 12);
    if (v34)
    {
      unsigned int v35 = (int **)*((void *)this + 12);
      if (!v35)
      {
        unsigned int v35 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 12) = v35;
        unsigned int v34 = (int **)*((void *)a2 + 12);
      }
      if (v34) {
        uint64_t v36 = v34;
      }
      else {
        uint64_t v36 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v35, v36);
    }
    unsigned int v37 = (int **)*((void *)a2 + 13);
    if (v37)
    {
      uint64_t v38 = (int **)*((void *)this + 13);
      if (!v38)
      {
        uint64_t v38 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 13) = v38;
        unsigned int v37 = (int **)*((void *)a2 + 13);
      }
      if (v37) {
        unsigned int v39 = v37;
      }
      else {
        unsigned int v39 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v38, v39);
    }
  }
}

void sub_1C5DCE0B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairNumberV2::CopyFrom(SnippetUI::SummaryItem_PairNumberV2 *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairNumberV2::Clear(this);
    SnippetUI::SummaryItem_PairNumberV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairNumberV2::Clear(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  *((void *)this + 12) = 0;
  uint64_t v13 = *((void *)this + 13);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  char v15 = *((unsigned char *)this + 8);
  unsigned int v14 = (SnippetUI::SummaryItem_PairNumberV2 *)((char *)this + 8);
  *((void *)v14 + 12) = 0;
  if (v15)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v14);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_PairNumberV2::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_PairNumberV2 *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_) {
    goto LABEL_121;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          uint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  int v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      uint64_t v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  uint64_t v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        char v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        unsigned int v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  unsigned int v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      unsigned int v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  uint64_t v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  unsigned int v61 = (SnippetUI::MultilineTextProperty *)*((void *)this + 10);
  if (!v61) {
    goto LABEL_86;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v61 = (SnippetUI::MultilineTextProperty *)*((void *)this + 10);
  }
  *uint64_t v5 = 58;
  unsigned int v62 = *((_DWORD *)v61 + 15);
  if (v62 > 0x7F)
  {
    v5[1] = v62 | 0x80;
    unsigned int v64 = v62 >> 7;
    if (v62 >> 14)
    {
      unsigned int v66 = v5 + 2;
      do
      {
        unsigned int v67 = v66;
        *v66++ = v64 | 0x80;
        unsigned int v68 = v64 >> 7;
        unsigned int v69 = v64 >> 14;
        v64 >>= 7;
      }
      while (v69);
      unsigned int v65 = (google::protobuf::UnknownFieldSet *)(v67 + 2);
      *unsigned int v66 = v68;
      goto LABEL_85;
    }
    v5[2] = v64;
    uint64_t v63 = 3;
  }
  else
  {
    v5[1] = v62;
    uint64_t v63 = 2;
  }
  unsigned int v65 = (google::protobuf::UnknownFieldSet *)&v5[v63];
LABEL_85:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v61, v65, a3, a4);
LABEL_86:
  unsigned int v70 = (SnippetUI::VisualProperty *)*((void *)this + 11);
  if (!v70) {
    goto LABEL_98;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v70 = (SnippetUI::VisualProperty *)*((void *)this + 11);
  }
  *uint64_t v5 = 66;
  unsigned int v71 = *((_DWORD *)v70 + 15);
  if (v71 > 0x7F)
  {
    v5[1] = v71 | 0x80;
    unsigned int v73 = v71 >> 7;
    if (v71 >> 14)
    {
      uint64_t v75 = v5 + 2;
      do
      {
        int v76 = v75;
        *v75++ = v73 | 0x80;
        unsigned int v77 = v73 >> 7;
        unsigned int v78 = v73 >> 14;
        v73 >>= 7;
      }
      while (v78);
      unsigned int v74 = (google::protobuf::UnknownFieldSet *)(v76 + 2);
      unsigned char *v75 = v77;
      goto LABEL_97;
    }
    v5[2] = v73;
    uint64_t v72 = 3;
  }
  else
  {
    v5[1] = v71;
    uint64_t v72 = 2;
  }
  unsigned int v74 = (google::protobuf::UnknownFieldSet *)&v5[v72];
LABEL_97:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v70, v74, a3, a4);
LABEL_98:
  int v79 = (SnippetUI::VisualProperty *)*((void *)this + 12);
  if (!v79) {
    goto LABEL_110;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v79 = (SnippetUI::VisualProperty *)*((void *)this + 12);
  }
  *uint64_t v5 = 74;
  unsigned int v80 = *((_DWORD *)v79 + 15);
  if (v80 > 0x7F)
  {
    v5[1] = v80 | 0x80;
    unsigned int v82 = v80 >> 7;
    if (v80 >> 14)
    {
      unsigned int v84 = v5 + 2;
      do
      {
        uint64_t v85 = v84;
        *v84++ = v82 | 0x80;
        unsigned int v86 = v82 >> 7;
        unsigned int v87 = v82 >> 14;
        v82 >>= 7;
      }
      while (v87);
      uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v85 + 2);
      *unsigned int v84 = v86;
      goto LABEL_109;
    }
    v5[2] = v82;
    uint64_t v81 = 3;
  }
  else
  {
    v5[1] = v80;
    uint64_t v81 = 2;
  }
  uint64_t v83 = (google::protobuf::UnknownFieldSet *)&v5[v81];
LABEL_109:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v79, v83, a3, a4);
LABEL_110:
  unsigned int v88 = (SnippetUI::ActionProperty *)*((void *)this + 13);
  if (v88)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v88 = (SnippetUI::ActionProperty *)*((void *)this + 13);
    }
    *uint64_t v5 = 114;
    unsigned int v89 = *((_DWORD *)v88 + 12);
    if (v89 > 0x7F)
    {
      v5[1] = v89 | 0x80;
      unsigned int v91 = v89 >> 7;
      if (v89 >> 14)
      {
        char v92 = v5 + 2;
        do
        {
          long long v93 = v92;
          *v92++ = v91 | 0x80;
          unsigned int v94 = v91 >> 7;
          unsigned int v95 = v91 >> 14;
          v91 >>= 7;
        }
        while (v95);
        uint64_t v90 = (google::protobuf::UnknownFieldSet *)(v93 + 2);
        unsigned char *v92 = v94;
      }
      else
      {
        v5[2] = v91;
        uint64_t v90 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v89;
      uint64_t v90 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v88, v90, a3, a4);
  }
LABEL_121:
  std::string::size_type v96 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v96 + 23) < 0)
  {
    std::string v97 = (const char *)*((void *)v96 + 1);
    if (!v97) {
      goto LABEL_127;
    }
    std::string::size_type v96 = *(google::protobuf::internal **)v96;
    goto LABEL_126;
  }
  std::string v97 = (const char *)*((unsigned __int8 *)v96 + 23);
  if (*((unsigned char *)v96 + 23))
  {
LABEL_126:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v96, v97, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairNumberV2.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 15, *((const void ***)this + 2), v5);
  }
LABEL_127:
  long long v98 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v98 + 23) < 0)
  {
    v99 = (const char *)*((void *)v98 + 1);
    if (!v99) {
      goto LABEL_133;
    }
    long long v98 = *(google::protobuf::internal **)v98;
    goto LABEL_132;
  }
  v99 = (const char *)*((unsigned __int8 *)v98 + 23);
  if (*((unsigned char *)v98 + 23))
  {
LABEL_132:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v98, v99, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairNumberV2.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 16, *((const void ***)this + 3), v5);
  }
LABEL_133:
  uint64_t v100 = *((void *)this + 1);
  if ((v100 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v100 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_PairNumberV2::_InternalParse(SnippetUI::SummaryItem_PairNumberV2 *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v22, *((_DWORD *)a3 + 23))) {
      return v22;
    }
    TagFallback = (google::protobuf::internal *)((char *)v22 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v22;
    if ((*(char *)v22 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
      uint64_t v22 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v10);
    uint64_t v22 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_28;
      case 2u:
        if (v10 != 18) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_28;
      case 3u:
        if (v10 != 26) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
        goto LABEL_28;
      case 4u:
        if (v10 != 34) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 7);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        goto LABEL_28;
      case 5u:
        if (v10 != 42) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 8);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v11;
        goto LABEL_28;
      case 6u:
        if (v10 != 50) {
          goto LABEL_55;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (v11) {
          goto LABEL_29;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v11;
LABEL_28:
        TagFallback = v22;
LABEL_29:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_60;
      case 7u:
        if (v10 != 58) {
          goto LABEL_55;
        }
        uint64_t v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 10);
        if (!v13)
        {
          uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v13;
          TagFallback = v22;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v13, TagFallback);
        goto LABEL_60;
      case 8u:
        if (v10 != 66) {
          goto LABEL_55;
        }
        unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 11);
        if (v14) {
          goto LABEL_41;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 11) = v14;
        goto LABEL_40;
      case 9u:
        if (v10 != 74) {
          goto LABEL_55;
        }
        unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 12);
        if (v14) {
          goto LABEL_41;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 12) = v14;
LABEL_40:
        TagFallback = v22;
LABEL_41:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v14, TagFallback);
        goto LABEL_60;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_55;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 13);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 13) = v15;
          TagFallback = v22;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_60;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_55;
        }
        int v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_PairNumberV2.component_name";
        goto LABEL_54;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_55;
        }
        int v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_PairNumberV2.link_identifier";
LABEL_54:
        uint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_60;
      default:
LABEL_55:
        if (v10) {
          BOOL v20 = (v10 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_60:
        uint64_t v22 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::GetCachedSize(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  return *((unsigned int *)this + 28);
}

char *SnippetUI::SummaryItem_PairNumberV2::ByteSizeLong(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v15)
    {
      int v16 = SnippetUI::TextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::TextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::TextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v21 = (SnippetUI::MultilineTextProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::MultilineTextProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::VisualProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::VisualProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v25 = (SnippetUI::VisualProperty *)*((void *)this + 12);
    if (v25)
    {
      unsigned int v26 = SnippetUI::VisualProperty::ByteSizeLong(v25);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v26[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v27 = (SnippetUI::ActionProperty *)*((void *)this + 13);
    if (v27)
    {
      unsigned int v28 = SnippetUI::ActionProperty::ByteSizeLong(v27);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v28[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_PairNumberV2 *)((char *)this + 8), v5, (_DWORD *)this + 28);
  }
  else
  {
    *((_DWORD *)this + 28) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::IsInitialized(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  return 1;
}

SnippetUI::SummaryItem_PairNumberV2 *SnippetUI::SummaryItem_PairNumberV2::New(SnippetUI::SummaryItem_PairNumberV2 *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumberV2>(a2);
}

SnippetUI::SummaryItem_PairNumberV2 *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumberV2>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_PairNumberV2 *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x78uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairNumberV2>);
  }
  SnippetUI::SummaryItem_PairNumberV2::SummaryItem_PairNumberV2(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DCF26C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40E3061A4BLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairNumberV2>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_PairNumberV2 *SnippetUI::SummaryItem_PairNumberV2::New(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumberV2>(0);
}

void SnippetUI::SummaryItem_PairNumberV2::~SummaryItem_PairNumberV2(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  SnippetUI::SummaryItem_PairNumberV2::~SummaryItem_PairNumberV2(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(void *)this = &unk_1F211C828;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    unsigned int v14 = *((void *)this + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    unsigned int v15 = *((void *)this + 13);
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_PairNumber_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_PairNumber::SummaryItem_PairNumber((SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_PairNumber_default_instance_, v4);
  qword_1EB68FF78 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FF80 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FF88 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FF90 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FF98 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFA0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFA8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFB0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFB8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFC0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFC8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFD0 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FFD8 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FFE0 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_PairNumber *SnippetUI::SummaryItem_PairNumber::SummaryItem_PairNumber(SnippetUI::SummaryItem_PairNumber *this)
{
  *(void *)this = &unk_1F211C768;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 36) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_PairNumber_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairNumber_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return this;
}

void sub_1C5DCF6A8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_PairNumber::GetMetadata(SnippetUI::SummaryItem_PairNumber *this)
{
  return qword_1EA3D8780;
}

uint64_t SnippetUI::SummaryItem_PairNumber::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 144) = a2;
  return this;
}

void SnippetUI::SummaryItem_PairNumber::MergeFrom(SnippetUI::SummaryItem_PairNumber *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 5739);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_PairNumber::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DCF7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairNumber::MergeFrom(SnippetUI::SummaryItem_PairNumber *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v53, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 5754);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v53, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v52, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v53[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairNumber *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    int v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        int v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    unsigned int v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v20;
        unsigned int v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      BOOL v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        BOOL v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        unsigned int v30 = v28;
      }
      else {
        unsigned int v30 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v32, v33);
    }
    unsigned int v34 = (int **)*((void *)a2 + 12);
    if (v34)
    {
      unsigned int v35 = (int **)*((void *)this + 12);
      if (!v35)
      {
        unsigned int v35 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v35;
        unsigned int v34 = (int **)*((void *)a2 + 12);
      }
      if (v34) {
        uint64_t v36 = v34;
      }
      else {
        uint64_t v36 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v35, v36);
    }
    unsigned int v37 = (int **)*((void *)a2 + 13);
    if (v37)
    {
      uint64_t v38 = (int **)*((void *)this + 13);
      if (!v38)
      {
        uint64_t v38 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 13) = v38;
        unsigned int v37 = (int **)*((void *)a2 + 13);
      }
      if (v37) {
        unsigned int v39 = v37;
      }
      else {
        unsigned int v39 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v38, v39);
    }
    char v40 = (int **)*((void *)a2 + 14);
    if (v40)
    {
      unsigned int v41 = (int **)*((void *)this + 14);
      if (!v41)
      {
        unsigned int v41 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 14) = v41;
        char v40 = (int **)*((void *)a2 + 14);
      }
      if (v40) {
        unsigned int v42 = v40;
      }
      else {
        unsigned int v42 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v41, v42);
    }
    unsigned int v43 = (int **)*((void *)a2 + 15);
    if (v43)
    {
      unsigned int v44 = (int **)*((void *)this + 15);
      if (!v44)
      {
        unsigned int v44 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 15) = v44;
        unsigned int v43 = (int **)*((void *)a2 + 15);
      }
      if (v43) {
        uint64_t v45 = v43;
      }
      else {
        uint64_t v45 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v44, v45);
    }
    unsigned int v46 = (int **)*((void *)a2 + 16);
    if (v46)
    {
      uint64_t v47 = (int **)*((void *)this + 16);
      if (!v47)
      {
        uint64_t v47 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 16) = v47;
        unsigned int v46 = (int **)*((void *)a2 + 16);
      }
      if (v46) {
        unsigned int v48 = v46;
      }
      else {
        unsigned int v48 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v47, v48);
    }
    unsigned int v49 = (int **)*((void *)a2 + 17);
    if (v49)
    {
      unsigned int v50 = (int **)*((void *)this + 17);
      if (!v50)
      {
        unsigned int v50 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 17) = v50;
        unsigned int v49 = (int **)*((void *)a2 + 17);
      }
      if (v49) {
        unsigned int v51 = v49;
      }
      else {
        unsigned int v51 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v50, v51);
    }
  }
}

void sub_1C5DCFB60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_PairNumber::CopyFrom(SnippetUI::SummaryItem_PairNumber *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairNumber::Clear(this);
    SnippetUI::SummaryItem_PairNumber::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairNumber::Clear(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  *((void *)this + 12) = 0;
  uint64_t v13 = *((void *)this + 13);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  *((void *)this + 13) = 0;
  uint64_t v14 = *((void *)this + 14);
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  *((void *)this + 14) = 0;
  uint64_t v15 = *((void *)this + 15);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  *((void *)this + 15) = 0;
  uint64_t v16 = *((void *)this + 16);
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  *((void *)this + 16) = 0;
  uint64_t v17 = *((void *)this + 17);
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  char v19 = *((unsigned char *)this + 8);
  uint64_t v18 = (SnippetUI::SummaryItem_PairNumber *)((char *)this + 8);
  *((void *)v18 + 16) = 0;
  if (v19)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v18);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_PairNumber::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_PairNumber *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_) {
    goto LABEL_169;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          uint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        char v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        unsigned int v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  char v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      unsigned int v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  uint64_t v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  unsigned int v61 = (SnippetUI::TextProperty *)*((void *)this + 10);
  if (!v61) {
    goto LABEL_86;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v61 = (SnippetUI::TextProperty *)*((void *)this + 10);
  }
  *uint64_t v5 = 58;
  unsigned int v62 = *((_DWORD *)v61 + 15);
  if (v62 > 0x7F)
  {
    v5[1] = v62 | 0x80;
    unsigned int v64 = v62 >> 7;
    if (v62 >> 14)
    {
      unsigned int v66 = v5 + 2;
      do
      {
        unsigned int v67 = v66;
        *v66++ = v64 | 0x80;
        unsigned int v68 = v64 >> 7;
        unsigned int v69 = v64 >> 14;
        v64 >>= 7;
      }
      while (v69);
      unsigned int v65 = (google::protobuf::UnknownFieldSet *)(v67 + 2);
      *unsigned int v66 = v68;
      goto LABEL_85;
    }
    v5[2] = v64;
    uint64_t v63 = 3;
  }
  else
  {
    v5[1] = v62;
    uint64_t v63 = 2;
  }
  unsigned int v65 = (google::protobuf::UnknownFieldSet *)&v5[v63];
LABEL_85:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v61, v65, a3, a4);
LABEL_86:
  unsigned int v70 = (SnippetUI::TextProperty *)*((void *)this + 11);
  if (!v70) {
    goto LABEL_98;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v70 = (SnippetUI::TextProperty *)*((void *)this + 11);
  }
  *uint64_t v5 = 66;
  unsigned int v71 = *((_DWORD *)v70 + 15);
  if (v71 > 0x7F)
  {
    v5[1] = v71 | 0x80;
    unsigned int v73 = v71 >> 7;
    if (v71 >> 14)
    {
      uint64_t v75 = v5 + 2;
      do
      {
        int v76 = v75;
        *v75++ = v73 | 0x80;
        unsigned int v77 = v73 >> 7;
        unsigned int v78 = v73 >> 14;
        v73 >>= 7;
      }
      while (v78);
      unsigned int v74 = (google::protobuf::UnknownFieldSet *)(v76 + 2);
      unsigned char *v75 = v77;
      goto LABEL_97;
    }
    v5[2] = v73;
    uint64_t v72 = 3;
  }
  else
  {
    v5[1] = v71;
    uint64_t v72 = 2;
  }
  unsigned int v74 = (google::protobuf::UnknownFieldSet *)&v5[v72];
LABEL_97:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v70, v74, a3, a4);
LABEL_98:
  int v79 = (SnippetUI::TextProperty *)*((void *)this + 12);
  if (!v79) {
    goto LABEL_110;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v79 = (SnippetUI::TextProperty *)*((void *)this + 12);
  }
  *uint64_t v5 = 74;
  unsigned int v80 = *((_DWORD *)v79 + 15);
  if (v80 > 0x7F)
  {
    v5[1] = v80 | 0x80;
    unsigned int v82 = v80 >> 7;
    if (v80 >> 14)
    {
      unsigned int v84 = v5 + 2;
      do
      {
        uint64_t v85 = v84;
        *v84++ = v82 | 0x80;
        unsigned int v86 = v82 >> 7;
        unsigned int v87 = v82 >> 14;
        v82 >>= 7;
      }
      while (v87);
      uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v85 + 2);
      *unsigned int v84 = v86;
      goto LABEL_109;
    }
    v5[2] = v82;
    uint64_t v81 = 3;
  }
  else
  {
    v5[1] = v80;
    uint64_t v81 = 2;
  }
  uint64_t v83 = (google::protobuf::UnknownFieldSet *)&v5[v81];
LABEL_109:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v79, v83, a3, a4);
LABEL_110:
  unsigned int v88 = (SnippetUI::TextProperty *)*((void *)this + 13);
  if (!v88) {
    goto LABEL_122;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v88 = (SnippetUI::TextProperty *)*((void *)this + 13);
  }
  *uint64_t v5 = 82;
  unsigned int v89 = *((_DWORD *)v88 + 15);
  if (v89 > 0x7F)
  {
    v5[1] = v89 | 0x80;
    unsigned int v91 = v89 >> 7;
    if (v89 >> 14)
    {
      long long v93 = v5 + 2;
      do
      {
        unsigned int v94 = v93;
        *v93++ = v91 | 0x80;
        unsigned int v95 = v91 >> 7;
        unsigned int v96 = v91 >> 14;
        v91 >>= 7;
      }
      while (v96);
      char v92 = (google::protobuf::UnknownFieldSet *)(v94 + 2);
      unsigned char *v93 = v95;
      goto LABEL_121;
    }
    v5[2] = v91;
    uint64_t v90 = 3;
  }
  else
  {
    v5[1] = v89;
    uint64_t v90 = 2;
  }
  char v92 = (google::protobuf::UnknownFieldSet *)&v5[v90];
LABEL_121:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v88, v92, a3, a4);
LABEL_122:
  std::string v97 = (SnippetUI::TextProperty *)*((void *)this + 14);
  if (!v97) {
    goto LABEL_134;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v97 = (SnippetUI::TextProperty *)*((void *)this + 14);
  }
  *uint64_t v5 = 90;
  unsigned int v98 = *((_DWORD *)v97 + 15);
  if (v98 > 0x7F)
  {
    v5[1] = v98 | 0x80;
    unsigned int v100 = v98 >> 7;
    if (v98 >> 14)
    {
      std::string v102 = v5 + 2;
      do
      {
        std::string::size_type v103 = v102;
        *v102++ = v100 | 0x80;
        unsigned int v104 = v100 >> 7;
        unsigned int v105 = v100 >> 14;
        v100 >>= 7;
      }
      while (v105);
      int v101 = (google::protobuf::UnknownFieldSet *)(v103 + 2);
      unsigned char *v102 = v104;
      goto LABEL_133;
    }
    v5[2] = v100;
    uint64_t v99 = 3;
  }
  else
  {
    v5[1] = v98;
    uint64_t v99 = 2;
  }
  int v101 = (google::protobuf::UnknownFieldSet *)&v5[v99];
LABEL_133:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v97, v101, a3, a4);
LABEL_134:
  v106 = (SnippetUI::VisualProperty *)*((void *)this + 15);
  if (!v106) {
    goto LABEL_146;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    v106 = (SnippetUI::VisualProperty *)*((void *)this + 15);
  }
  *uint64_t v5 = 98;
  unsigned int v107 = *((_DWORD *)v106 + 15);
  if (v107 > 0x7F)
  {
    v5[1] = v107 | 0x80;
    unsigned int v109 = v107 >> 7;
    if (v107 >> 14)
    {
      uint64_t v111 = v5 + 2;
      do
      {
        uint64_t v112 = v111;
        *v111++ = v109 | 0x80;
        unsigned int v113 = v109 >> 7;
        unsigned int v114 = v109 >> 14;
        v109 >>= 7;
      }
      while (v114);
      uint64_t v110 = (google::protobuf::UnknownFieldSet *)(v112 + 2);
      *uint64_t v111 = v113;
      goto LABEL_145;
    }
    v5[2] = v109;
    uint64_t v108 = 3;
  }
  else
  {
    v5[1] = v107;
    uint64_t v108 = 2;
  }
  uint64_t v110 = (google::protobuf::UnknownFieldSet *)&v5[v108];
LABEL_145:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v106, v110, a3, a4);
LABEL_146:
  int v115 = (SnippetUI::VisualProperty *)*((void *)this + 16);
  if (!v115) {
    goto LABEL_158;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v115 = (SnippetUI::VisualProperty *)*((void *)this + 16);
  }
  *uint64_t v5 = 106;
  unsigned int v116 = *((_DWORD *)v115 + 15);
  if (v116 > 0x7F)
  {
    v5[1] = v116 | 0x80;
    unsigned int v118 = v116 >> 7;
    if (v116 >> 14)
    {
      v120 = v5 + 2;
      do
      {
        v121 = v120;
        *v120++ = v118 | 0x80;
        unsigned int v122 = v118 >> 7;
        unsigned int v123 = v118 >> 14;
        v118 >>= 7;
      }
      while (v123);
      long long v119 = (google::protobuf::UnknownFieldSet *)(v121 + 2);
      unsigned char *v120 = v122;
      goto LABEL_157;
    }
    v5[2] = v118;
    uint64_t v117 = 3;
  }
  else
  {
    v5[1] = v116;
    uint64_t v117 = 2;
  }
  long long v119 = (google::protobuf::UnknownFieldSet *)&v5[v117];
LABEL_157:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v115, v119, a3, a4);
LABEL_158:
  v124 = (SnippetUI::ActionProperty *)*((void *)this + 17);
  if (v124)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      v124 = (SnippetUI::ActionProperty *)*((void *)this + 17);
    }
    *uint64_t v5 = 114;
    unsigned int v125 = *((_DWORD *)v124 + 12);
    if (v125 > 0x7F)
    {
      v5[1] = v125 | 0x80;
      unsigned int v127 = v125 >> 7;
      if (v125 >> 14)
      {
        std::string::size_type v128 = v5 + 2;
        do
        {
          uint64_t v129 = v128;
          *v128++ = v127 | 0x80;
          unsigned int v130 = v127 >> 7;
          unsigned int v131 = v127 >> 14;
          v127 >>= 7;
        }
        while (v131);
        BOOL v126 = (google::protobuf::UnknownFieldSet *)(v129 + 2);
        unsigned char *v128 = v130;
      }
      else
      {
        v5[2] = v127;
        BOOL v126 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v125;
      BOOL v126 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v124, v126, a3, a4);
  }
LABEL_169:
  long long v132 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v132 + 23) < 0)
  {
    std::__split_buffer<std::string>::pointer v133 = (const char *)*((void *)v132 + 1);
    if (!v133) {
      goto LABEL_175;
    }
    long long v132 = *(google::protobuf::internal **)v132;
    goto LABEL_174;
  }
  std::__split_buffer<std::string>::pointer v133 = (const char *)*((unsigned __int8 *)v132 + 23);
  if (*((unsigned char *)v132 + 23))
  {
LABEL_174:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v132, v133, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairNumber.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 15, *((const void ***)this + 2), v5);
  }
LABEL_175:
  std::string::size_type v134 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v134 + 23) < 0)
  {
    std::string::size_type v135 = (const char *)*((void *)v134 + 1);
    if (!v135) {
      goto LABEL_181;
    }
    std::string::size_type v134 = *(google::protobuf::internal **)v134;
    goto LABEL_180;
  }
  std::string::size_type v135 = (const char *)*((unsigned __int8 *)v134 + 23);
  if (*((unsigned char *)v134 + 23))
  {
LABEL_180:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v134, v135, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_PairNumber.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 16, *((const void ***)this + 3), v5);
  }
LABEL_181:
  uint64_t v136 = *((void *)this + 1);
  if ((v136 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v136 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_PairNumber::_InternalParse(SnippetUI::SummaryItem_PairNumber *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unsigned int v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unsigned int v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_43;
      case 2u:
        if (v10 != 18) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_43;
      case 3u:
        if (v10 != 26) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
        goto LABEL_43;
      case 4u:
        if (v10 != 34) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 7);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        goto LABEL_43;
      case 5u:
        if (v10 != 42) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 8);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v11;
        goto LABEL_43;
      case 6u:
        if (v10 != 50) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v11;
        goto LABEL_43;
      case 7u:
        if (v10 != 58) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 10);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11;
        goto LABEL_43;
      case 8u:
        if (v10 != 66) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 11);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v11;
        goto LABEL_43;
      case 9u:
        if (v10 != 74) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 12);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v11;
        goto LABEL_43;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 13);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 13) = v11;
        goto LABEL_43;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_68;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 14);
        if (v11) {
          goto LABEL_44;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 14) = v11;
LABEL_43:
        TagFallback = v21;
LABEL_44:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_45;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_68;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 15);
        if (v13) {
          goto LABEL_54;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 15) = v13;
        goto LABEL_53;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_68;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 16);
        if (v13) {
          goto LABEL_54;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 16) = v13;
LABEL_53:
        TagFallback = v21;
LABEL_54:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_45;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_68;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 17);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 17) = v14;
          TagFallback = v21;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_45;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_68;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_PairNumber.component_name";
        goto LABEL_67;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_68;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_PairNumber.link_identifier";
LABEL_67:
        uint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_45;
      default:
LABEL_68:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_45:
        unsigned int v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_PairNumber::GetCachedSize(SnippetUI::SummaryItem_PairNumber *this)
{
  return *((unsigned int *)this + 36);
}

char *SnippetUI::SummaryItem_PairNumber::ByteSizeLong(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v15)
    {
      uint64_t v16 = SnippetUI::TextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::TextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::TextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v21 = (SnippetUI::TextProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::TextProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::TextProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v25)
    {
      unsigned int v26 = SnippetUI::TextProperty::ByteSizeLong(v25);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v26[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v27 = (SnippetUI::TextProperty *)*((void *)this + 13);
    if (v27)
    {
      unsigned int v28 = SnippetUI::TextProperty::ByteSizeLong(v27);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v28[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v29 = (SnippetUI::TextProperty *)*((void *)this + 14);
    if (v29)
    {
      unsigned int v30 = SnippetUI::TextProperty::ByteSizeLong(v29);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v30[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v31 = (SnippetUI::VisualProperty *)*((void *)this + 15);
    if (v31)
    {
      unsigned int v32 = SnippetUI::VisualProperty::ByteSizeLong(v31);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v32[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v33 = (SnippetUI::VisualProperty *)*((void *)this + 16);
    if (v33)
    {
      unsigned int v34 = SnippetUI::VisualProperty::ByteSizeLong(v33);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v34[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v35 = (SnippetUI::ActionProperty *)*((void *)this + 17);
    if (v35)
    {
      uint64_t v36 = SnippetUI::ActionProperty::ByteSizeLong(v35);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v36[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_PairNumber *)((char *)this + 8), v5, (_DWORD *)this + 36);
  }
  else
  {
    *((_DWORD *)this + 36) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_PairNumber::IsInitialized(SnippetUI::SummaryItem_PairNumber *this)
{
  return 1;
}

SnippetUI::SummaryItem_PairNumber *SnippetUI::SummaryItem_PairNumber::New(SnippetUI::SummaryItem_PairNumber *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumber>(a2);
}

SnippetUI::SummaryItem_PairNumber *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumber>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_PairNumber *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x98uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairNumber>);
  }
  SnippetUI::SummaryItem_PairNumber::SummaryItem_PairNumber(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DD11C0(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C406288CECBLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_PairNumber>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_PairNumber *SnippetUI::SummaryItem_PairNumber::New(SnippetUI::SummaryItem_PairNumber *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_PairNumber>(0);
}

void SnippetUI::SummaryItem_PairNumber::~SummaryItem_PairNumber(SnippetUI::SummaryItem_PairNumber *this)
{
  SnippetUI::SummaryItem_PairNumber::~SummaryItem_PairNumber(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(void *)this = &unk_1F211C768;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    unsigned int v14 = *((void *)this + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    unsigned int v15 = *((void *)this + 13);
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = *((void *)this + 14);
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    unsigned int v17 = *((void *)this + 15);
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = *((void *)this + 16);
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    BOOL v19 = *((void *)this + 17);
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_Pair_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_Pair::SummaryItem_Pair((SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_Pair_default_instance_, v4);
  qword_1EB68F9B8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9C0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9C8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9D0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9D8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9E0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9E8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9F0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9F8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FA00 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FA08 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FA10 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FA18 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_Pair *SnippetUI::SummaryItem_Pair::SummaryItem_Pair(SnippetUI::SummaryItem_Pair *this)
{
  *(void *)this = &unk_1F211C5E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 34) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_Pair_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Pair_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((void *)this + 16) = 0;
  return this;
}

void sub_1C5DD16AC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_Pair::GetMetadata(SnippetUI::SummaryItem_Pair *this)
{
  return qword_1EA3D8760;
}

uint64_t SnippetUI::SummaryItem_Pair::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 136) = a2;
  return this;
}

void SnippetUI::SummaryItem_Pair::MergeFrom(SnippetUI::SummaryItem_Pair *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 4289);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Pair::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DD17C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Pair::MergeFrom(SnippetUI::SummaryItem_Pair *this, const SnippetUI::SummaryItem_Pair *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v50, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 4304);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v50, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v49, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v50[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Pair *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    uint64_t v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        uint64_t v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v20, v21);
    }
    uint64_t v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v23;
        uint64_t v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      BOOL v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        BOOL v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        unsigned int v30 = v28;
      }
      else {
        unsigned int v30 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v32, v33);
    }
    unsigned int v34 = (int **)*((void *)a2 + 12);
    if (v34)
    {
      unsigned int v35 = (int **)*((void *)this + 12);
      if (!v35)
      {
        unsigned int v35 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v35;
        unsigned int v34 = (int **)*((void *)a2 + 12);
      }
      if (v34) {
        uint64_t v36 = v34;
      }
      else {
        uint64_t v36 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v35, v36);
    }
    unsigned int v37 = (int **)*((void *)a2 + 13);
    if (v37)
    {
      uint64_t v38 = (int **)*((void *)this + 13);
      if (!v38)
      {
        uint64_t v38 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 13) = v38;
        unsigned int v37 = (int **)*((void *)a2 + 13);
      }
      if (v37) {
        unsigned int v39 = v37;
      }
      else {
        unsigned int v39 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v38, v39);
    }
    char v40 = (int **)*((void *)a2 + 14);
    if (v40)
    {
      unsigned int v41 = (int **)*((void *)this + 14);
      if (!v41)
      {
        unsigned int v41 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 14) = v41;
        char v40 = (int **)*((void *)a2 + 14);
      }
      if (v40) {
        unsigned int v42 = v40;
      }
      else {
        unsigned int v42 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v41, v42);
    }
    unsigned int v43 = (int **)*((void *)a2 + 15);
    if (v43)
    {
      unsigned int v44 = (int **)*((void *)this + 15);
      if (!v44)
      {
        unsigned int v44 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 15) = v44;
        unsigned int v43 = (int **)*((void *)a2 + 15);
      }
      if (v43) {
        uint64_t v45 = v43;
      }
      else {
        uint64_t v45 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v44, v45);
    }
    unsigned int v46 = (int **)*((void *)a2 + 16);
    if (v46)
    {
      uint64_t v47 = (int **)*((void *)this + 16);
      if (!v47)
      {
        uint64_t v47 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 16) = v47;
        unsigned int v46 = (int **)*((void *)a2 + 16);
      }
      if (v46) {
        unsigned int v48 = v46;
      }
      else {
        unsigned int v48 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v47, v48);
    }
  }
}

void sub_1C5DD1B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Pair::CopyFrom(SnippetUI::SummaryItem_Pair *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Pair::Clear(this);
    SnippetUI::SummaryItem_Pair::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Pair::Clear(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  *((void *)this + 12) = 0;
  uint64_t v13 = *((void *)this + 13);
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  *((void *)this + 13) = 0;
  uint64_t v14 = *((void *)this + 14);
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  *((void *)this + 14) = 0;
  uint64_t v15 = *((void *)this + 15);
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  *((void *)this + 15) = 0;
  uint64_t v16 = *((void *)this + 16);
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  char v18 = *((unsigned char *)this + 8);
  unsigned int v17 = (SnippetUI::SummaryItem_Pair *)((char *)this + 8);
  *((void *)v17 + 15) = 0;
  if (v18)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v17);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Pair::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Pair *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_) {
    goto LABEL_157;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          uint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        uint64_t v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        char v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::TextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        char v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  char v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v52 = (SnippetUI::TextProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      unsigned int v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  uint64_t v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  unsigned int v61 = (SnippetUI::TextProperty *)*((void *)this + 10);
  if (!v61) {
    goto LABEL_86;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v61 = (SnippetUI::TextProperty *)*((void *)this + 10);
  }
  *uint64_t v5 = 58;
  unsigned int v62 = *((_DWORD *)v61 + 15);
  if (v62 > 0x7F)
  {
    v5[1] = v62 | 0x80;
    unsigned int v64 = v62 >> 7;
    if (v62 >> 14)
    {
      unsigned int v66 = v5 + 2;
      do
      {
        unsigned int v67 = v66;
        *v66++ = v64 | 0x80;
        unsigned int v68 = v64 >> 7;
        unsigned int v69 = v64 >> 14;
        v64 >>= 7;
      }
      while (v69);
      unsigned int v65 = (google::protobuf::UnknownFieldSet *)(v67 + 2);
      *unsigned int v66 = v68;
      goto LABEL_85;
    }
    v5[2] = v64;
    uint64_t v63 = 3;
  }
  else
  {
    v5[1] = v62;
    uint64_t v63 = 2;
  }
  unsigned int v65 = (google::protobuf::UnknownFieldSet *)&v5[v63];
LABEL_85:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v61, v65, a3, a4);
LABEL_86:
  unsigned int v70 = (SnippetUI::TextProperty *)*((void *)this + 11);
  if (!v70) {
    goto LABEL_98;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v70 = (SnippetUI::TextProperty *)*((void *)this + 11);
  }
  *uint64_t v5 = 66;
  unsigned int v71 = *((_DWORD *)v70 + 15);
  if (v71 > 0x7F)
  {
    v5[1] = v71 | 0x80;
    unsigned int v73 = v71 >> 7;
    if (v71 >> 14)
    {
      uint64_t v75 = v5 + 2;
      do
      {
        int v76 = v75;
        *v75++ = v73 | 0x80;
        unsigned int v77 = v73 >> 7;
        unsigned int v78 = v73 >> 14;
        v73 >>= 7;
      }
      while (v78);
      unsigned int v74 = (google::protobuf::UnknownFieldSet *)(v76 + 2);
      unsigned char *v75 = v77;
      goto LABEL_97;
    }
    v5[2] = v73;
    uint64_t v72 = 3;
  }
  else
  {
    v5[1] = v71;
    uint64_t v72 = 2;
  }
  unsigned int v74 = (google::protobuf::UnknownFieldSet *)&v5[v72];
LABEL_97:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v70, v74, a3, a4);
LABEL_98:
  int v79 = (SnippetUI::TextProperty *)*((void *)this + 12);
  if (!v79) {
    goto LABEL_110;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    int v79 = (SnippetUI::TextProperty *)*((void *)this + 12);
  }
  *uint64_t v5 = 74;
  unsigned int v80 = *((_DWORD *)v79 + 15);
  if (v80 > 0x7F)
  {
    v5[1] = v80 | 0x80;
    unsigned int v82 = v80 >> 7;
    if (v80 >> 14)
    {
      unsigned int v84 = v5 + 2;
      do
      {
        uint64_t v85 = v84;
        *v84++ = v82 | 0x80;
        unsigned int v86 = v82 >> 7;
        unsigned int v87 = v82 >> 14;
        v82 >>= 7;
      }
      while (v87);
      uint64_t v83 = (google::protobuf::UnknownFieldSet *)(v85 + 2);
      *unsigned int v84 = v86;
      goto LABEL_109;
    }
    v5[2] = v82;
    uint64_t v81 = 3;
  }
  else
  {
    v5[1] = v80;
    uint64_t v81 = 2;
  }
  uint64_t v83 = (google::protobuf::UnknownFieldSet *)&v5[v81];
LABEL_109:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v79, v83, a3, a4);
LABEL_110:
  unsigned int v88 = (SnippetUI::TextProperty *)*((void *)this + 13);
  if (!v88) {
    goto LABEL_122;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v88 = (SnippetUI::TextProperty *)*((void *)this + 13);
  }
  *uint64_t v5 = 82;
  unsigned int v89 = *((_DWORD *)v88 + 15);
  if (v89 > 0x7F)
  {
    v5[1] = v89 | 0x80;
    unsigned int v91 = v89 >> 7;
    if (v89 >> 14)
    {
      long long v93 = v5 + 2;
      do
      {
        unsigned int v94 = v93;
        *v93++ = v91 | 0x80;
        unsigned int v95 = v91 >> 7;
        unsigned int v96 = v91 >> 14;
        v91 >>= 7;
      }
      while (v96);
      char v92 = (google::protobuf::UnknownFieldSet *)(v94 + 2);
      unsigned char *v93 = v95;
      goto LABEL_121;
    }
    v5[2] = v91;
    uint64_t v90 = 3;
  }
  else
  {
    v5[1] = v89;
    uint64_t v90 = 2;
  }
  char v92 = (google::protobuf::UnknownFieldSet *)&v5[v90];
LABEL_121:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v88, v92, a3, a4);
LABEL_122:
  std::string v97 = (SnippetUI::VisualProperty *)*((void *)this + 14);
  if (!v97) {
    goto LABEL_134;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v97 = (SnippetUI::VisualProperty *)*((void *)this + 14);
  }
  *uint64_t v5 = 90;
  unsigned int v98 = *((_DWORD *)v97 + 15);
  if (v98 > 0x7F)
  {
    v5[1] = v98 | 0x80;
    unsigned int v100 = v98 >> 7;
    if (v98 >> 14)
    {
      std::string v102 = v5 + 2;
      do
      {
        std::string::size_type v103 = v102;
        *v102++ = v100 | 0x80;
        unsigned int v104 = v100 >> 7;
        unsigned int v105 = v100 >> 14;
        v100 >>= 7;
      }
      while (v105);
      int v101 = (google::protobuf::UnknownFieldSet *)(v103 + 2);
      unsigned char *v102 = v104;
      goto LABEL_133;
    }
    v5[2] = v100;
    uint64_t v99 = 3;
  }
  else
  {
    v5[1] = v98;
    uint64_t v99 = 2;
  }
  int v101 = (google::protobuf::UnknownFieldSet *)&v5[v99];
LABEL_133:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v97, v101, a3, a4);
LABEL_134:
  v106 = (SnippetUI::VisualProperty *)*((void *)this + 15);
  if (!v106) {
    goto LABEL_146;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    v106 = (SnippetUI::VisualProperty *)*((void *)this + 15);
  }
  *uint64_t v5 = 98;
  unsigned int v107 = *((_DWORD *)v106 + 15);
  if (v107 > 0x7F)
  {
    v5[1] = v107 | 0x80;
    unsigned int v109 = v107 >> 7;
    if (v107 >> 14)
    {
      uint64_t v111 = v5 + 2;
      do
      {
        uint64_t v112 = v111;
        *v111++ = v109 | 0x80;
        unsigned int v113 = v109 >> 7;
        unsigned int v114 = v109 >> 14;
        v109 >>= 7;
      }
      while (v114);
      uint64_t v110 = (google::protobuf::UnknownFieldSet *)(v112 + 2);
      *uint64_t v111 = v113;
      goto LABEL_145;
    }
    v5[2] = v109;
    uint64_t v108 = 3;
  }
  else
  {
    v5[1] = v107;
    uint64_t v108 = 2;
  }
  uint64_t v110 = (google::protobuf::UnknownFieldSet *)&v5[v108];
LABEL_145:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v106, v110, a3, a4);
LABEL_146:
  int v115 = (SnippetUI::ActionProperty *)*((void *)this + 16);
  if (v115)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      int v115 = (SnippetUI::ActionProperty *)*((void *)this + 16);
    }
    *uint64_t v5 = 106;
    unsigned int v116 = *((_DWORD *)v115 + 12);
    if (v116 > 0x7F)
    {
      v5[1] = v116 | 0x80;
      unsigned int v118 = v116 >> 7;
      if (v116 >> 14)
      {
        long long v119 = v5 + 2;
        do
        {
          v120 = v119;
          *v119++ = v118 | 0x80;
          unsigned int v121 = v118 >> 7;
          unsigned int v122 = v118 >> 14;
          v118 >>= 7;
        }
        while (v122);
        uint64_t v117 = (google::protobuf::UnknownFieldSet *)(v120 + 2);
        unsigned char *v119 = v121;
      }
      else
      {
        v5[2] = v118;
        uint64_t v117 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v116;
      uint64_t v117 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v115, v117, a3, a4);
  }
LABEL_157:
  unsigned int v123 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v123 + 23) < 0)
  {
    v124 = (const char *)*((void *)v123 + 1);
    if (!v124) {
      goto LABEL_163;
    }
    unsigned int v123 = *(google::protobuf::internal **)v123;
    goto LABEL_162;
  }
  v124 = (const char *)*((unsigned __int8 *)v123 + 23);
  if (*((unsigned char *)v123 + 23))
  {
LABEL_162:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v123, v124, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Pair.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 14, *((const void ***)this + 2), v5);
  }
LABEL_163:
  unsigned int v125 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v125 + 23) < 0)
  {
    BOOL v126 = (const char *)*((void *)v125 + 1);
    if (!v126) {
      goto LABEL_169;
    }
    unsigned int v125 = *(google::protobuf::internal **)v125;
    goto LABEL_168;
  }
  BOOL v126 = (const char *)*((unsigned __int8 *)v125 + 23);
  if (*((unsigned char *)v125 + 23))
  {
LABEL_168:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v125, v126, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Pair.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 15, *((const void ***)this + 3), v5);
  }
LABEL_169:
  uint64_t v127 = *((void *)this + 1);
  if ((v127 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v127 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_Pair::_InternalParse(SnippetUI::SummaryItem_Pair *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unsigned int v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unsigned int v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_40;
      case 2u:
        if (v10 != 18) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_40;
      case 3u:
        if (v10 != 26) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
        goto LABEL_40;
      case 4u:
        if (v10 != 34) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 7);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        goto LABEL_40;
      case 5u:
        if (v10 != 42) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 8);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v11;
        goto LABEL_40;
      case 6u:
        if (v10 != 50) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 9);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 9) = v11;
        goto LABEL_40;
      case 7u:
        if (v10 != 58) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 10);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11;
        goto LABEL_40;
      case 8u:
        if (v10 != 66) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 11);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v11;
        goto LABEL_40;
      case 9u:
        if (v10 != 74) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 12);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v11;
        goto LABEL_40;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_65;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 13);
        if (v11) {
          goto LABEL_41;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 13) = v11;
LABEL_40:
        TagFallback = v21;
LABEL_41:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_42;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_65;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 14);
        if (v13) {
          goto LABEL_51;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 14) = v13;
        goto LABEL_50;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_65;
        }
        uint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 15);
        if (v13) {
          goto LABEL_51;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 15) = v13;
LABEL_50:
        TagFallback = v21;
LABEL_51:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_42;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_65;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 16);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 16) = v14;
          TagFallback = v21;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_42;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_65;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_Pair.component_name";
        goto LABEL_64;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_65;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_Pair.link_identifier";
LABEL_64:
        uint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_42;
      default:
LABEL_65:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_42:
        unsigned int v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_Pair::GetCachedSize(SnippetUI::SummaryItem_Pair *this)
{
  return *((unsigned int *)this + 34);
}

char *SnippetUI::SummaryItem_Pair::ByteSizeLong(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v15)
    {
      uint64_t v16 = SnippetUI::TextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::TextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::TextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v19 = (SnippetUI::TextProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::TextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v21 = (SnippetUI::TextProperty *)*((void *)this + 10);
    if (v21)
    {
      uint64_t v22 = SnippetUI::TextProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::TextProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v25)
    {
      unsigned int v26 = SnippetUI::TextProperty::ByteSizeLong(v25);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v26[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v27 = (SnippetUI::TextProperty *)*((void *)this + 13);
    if (v27)
    {
      unsigned int v28 = SnippetUI::TextProperty::ByteSizeLong(v27);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v28[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v29 = (SnippetUI::VisualProperty *)*((void *)this + 14);
    if (v29)
    {
      unsigned int v30 = SnippetUI::VisualProperty::ByteSizeLong(v29);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v30[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v31 = (SnippetUI::VisualProperty *)*((void *)this + 15);
    if (v31)
    {
      unsigned int v32 = SnippetUI::VisualProperty::ByteSizeLong(v31);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v32[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v33 = (SnippetUI::ActionProperty *)*((void *)this + 16);
    if (v33)
    {
      unsigned int v34 = SnippetUI::ActionProperty::ByteSizeLong(v33);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v34[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Pair *)((char *)this + 8), v5, (_DWORD *)this + 34);
  }
  else
  {
    *((_DWORD *)this + 34) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_Pair::IsInitialized(SnippetUI::SummaryItem_Pair *this)
{
  return 1;
}

SnippetUI::SummaryItem_Pair *SnippetUI::SummaryItem_Pair::New(SnippetUI::SummaryItem_Pair *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Pair>(a2);
}

SnippetUI::SummaryItem_Pair *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Pair>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Pair *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x90uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Pair>);
  }
  SnippetUI::SummaryItem_Pair::SummaryItem_Pair(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DD306C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C405455452ELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Pair>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Pair *SnippetUI::SummaryItem_Pair::New(SnippetUI::SummaryItem_Pair *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Pair>(0);
}

void SnippetUI::SummaryItem_Pair::~SummaryItem_Pair(SnippetUI::SummaryItem_Pair *this)
{
  SnippetUI::SummaryItem_Pair::~SummaryItem_Pair(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(void *)this = &unk_1F211C5E8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    unsigned int v14 = *((void *)this + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    unsigned int v15 = *((void *)this + 13);
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = *((void *)this + 14);
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    unsigned int v17 = *((void *)this + 15);
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = *((void *)this + 16);
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_LargeText_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_LargeText::SummaryItem_LargeText((SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_LargeText_default_instance_, v4);
  qword_1EB690DF8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E00 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690E08 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690E10 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::SummaryItem_LargeText *SnippetUI::SummaryItem_LargeText::SummaryItem_LargeText(SnippetUI::SummaryItem_LargeText *this)
{
  *(void *)this = &unk_1F211C468;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 16) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_LargeText_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_LargeText_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return this;
}

void sub_1C5DD350C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_LargeText::GetMetadata(SnippetUI::SummaryItem_LargeText *this)
{
  return qword_1EA3D8740;
}

uint64_t SnippetUI::SummaryItem_LargeText::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void SnippetUI::SummaryItem_LargeText::MergeFrom(SnippetUI::SummaryItem_LargeText *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 2822);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_LargeText::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DD3628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_LargeText::MergeFrom(SnippetUI::SummaryItem_LargeText *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 2837);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_LargeText *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v14, v15);
    }
    uint64_t v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v17;
        uint64_t v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v20, v21);
    }
  }
}

void sub_1C5DD3834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_LargeText::CopyFrom(SnippetUI::SummaryItem_LargeText *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_LargeText::Clear(this);
    SnippetUI::SummaryItem_LargeText::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_LargeText::Clear(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (SnippetUI::SummaryItem_LargeText *)((char *)this + 8);
  *((void *)v8 + 6) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v8);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_LargeText::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_LargeText *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_) {
    goto LABEL_49;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          uint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  uint64_t v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v16 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unsigned int v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        uint64_t v38 = v5 + 2;
        do
        {
          unsigned int v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *uint64_t v38 = v40;
      }
      else
      {
        v5[2] = v37;
        uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      uint64_t v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  unsigned int v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    unsigned int v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    unsigned int v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  unsigned int v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_LargeText.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  unsigned int v44 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v44 + 23) < 0)
  {
    uint64_t v45 = (const char *)*((void *)v44 + 1);
    if (!v45) {
      goto LABEL_61;
    }
    unsigned int v44 = *(google::protobuf::internal **)v44;
    goto LABEL_60;
  }
  uint64_t v45 = (const char *)*((unsigned __int8 *)v44 + 23);
  if (*((unsigned char *)v44 + 23))
  {
LABEL_60:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v44, v45, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_LargeText.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 3), v5);
  }
LABEL_61:
  uint64_t v46 = *((void *)this + 1);
  if ((v46 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v46 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_LargeText::_InternalParse(SnippetUI::SummaryItem_LargeText *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unsigned int v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unsigned int v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (!v11)
        {
          uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 4) = v11;
          TagFallback = v21;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_38;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        uint64_t v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_19;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_18;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        uint64_t v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
        if (v13) {
          goto LABEL_19;
        }
        uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 6) = v13;
LABEL_18:
        TagFallback = v21;
LABEL_19:
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v13, TagFallback);
        goto LABEL_38;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v21;
        }
        uint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_38;
      case 5u:
        if (v10 != 42) {
          goto LABEL_33;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_LargeText.component_name";
        goto LABEL_32;
      case 6u:
        if (v10 != 50) {
          goto LABEL_33;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.SummaryItem_LargeText.link_identifier";
LABEL_32:
        uint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_38;
      default:
LABEL_33:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_38:
        unsigned int v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_LargeText::GetCachedSize(SnippetUI::SummaryItem_LargeText *this)
{
  return *((unsigned int *)this + 16);
}

char *SnippetUI::SummaryItem_LargeText::ByteSizeLong(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::MultilineTextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::MultilineTextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v13 = (SnippetUI::MultilineTextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::MultilineTextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v15)
    {
      uint64_t v16 = SnippetUI::ActionProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_LargeText *)((char *)this + 8), v5, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_LargeText::IsInitialized(SnippetUI::SummaryItem_LargeText *this)
{
  return 1;
}

SnippetUI::SummaryItem_LargeText *SnippetUI::SummaryItem_LargeText::New(SnippetUI::SummaryItem_LargeText *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_LargeText>(a2);
}

SnippetUI::SummaryItem_LargeText *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_LargeText>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_LargeText *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_LargeText>);
  }
  SnippetUI::SummaryItem_LargeText::SummaryItem_LargeText(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DD42B4(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4025EBE0BELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_LargeText>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_LargeText *SnippetUI::SummaryItem_LargeText::New(SnippetUI::SummaryItem_LargeText *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_LargeText>(0);
}

void SnippetUI::SummaryItem_LargeText::~SummaryItem_LargeText(SnippetUI::SummaryItem_LargeText *this)
{
  SnippetUI::SummaryItem_LargeText::~SummaryItem_LargeText(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)this = &unk_1F211C468;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_SummaryItem_DetailedText_SummaryItem_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", a4);
  SnippetUI::SummaryItem_DetailedText::SummaryItem_DetailedText((SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_SummaryItem_DetailedText_default_instance_, v4);
  qword_1EB690420 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690428 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690430 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690438 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690440 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690448 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690450 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690458 = &SnippetUI::_TextProperty_default_instance_;
}

SnippetUI::SummaryItem_DetailedText *SnippetUI::SummaryItem_DetailedText::SummaryItem_DetailedText(SnippetUI::SummaryItem_DetailedText *this)
{
  *(void *)this = &unk_1F211C528;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 24) = 0;
  if (atomic_load_explicit(scc_info_SummaryItem_DetailedText_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_DetailedText_SummaryItem_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return this;
}

void sub_1C5DD45DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::SummaryItem_DetailedText::GetMetadata(SnippetUI::SummaryItem_DetailedText *this)
{
  return qword_1EA3D8750;
}

uint64_t SnippetUI::SummaryItem_DetailedText::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 96) = a2;
  return this;
}

void SnippetUI::SummaryItem_DetailedText::MergeFrom(SnippetUI::SummaryItem_DetailedText *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 3435);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_DetailedText::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DD46F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_DetailedText::MergeFrom(SnippetUI::SummaryItem_DetailedText *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v35, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 3450);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v35, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v34, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v35[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_DetailedText *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    uint64_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint64_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    uint64_t v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        uint64_t v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v20, v21);
    }
    char v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v23;
        char v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      BOOL v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        BOOL v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        unsigned int v30 = v28;
      }
      else {
        unsigned int v30 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v32, v33);
    }
  }
}

void sub_1C5DD49AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_DetailedText::CopyFrom(SnippetUI::SummaryItem_DetailedText *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_DetailedText::Clear(this);
    SnippetUI::SummaryItem_DetailedText::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_DetailedText::Clear(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  char v13 = *((unsigned char *)this + 8);
  uint64_t v12 = (SnippetUI::SummaryItem_DetailedText *)((char *)this + 8);
  *((void *)v12 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if (v13)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v12);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_DetailedText::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_DetailedText *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_) {
    goto LABEL_85;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          char v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  char v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v34 = (SnippetUI::TextProperty *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        char v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  char v52 = (SnippetUI::VisualProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v52 = (SnippetUI::VisualProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      unsigned int v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  uint64_t v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  unsigned int v61 = (SnippetUI::ActionProperty *)*((void *)this + 10);
  if (v61)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v61 = (SnippetUI::ActionProperty *)*((void *)this + 10);
    }
    *uint64_t v5 = 58;
    unsigned int v62 = *((_DWORD *)v61 + 12);
    if (v62 > 0x7F)
    {
      v5[1] = v62 | 0x80;
      unsigned int v64 = v62 >> 7;
      if (v62 >> 14)
      {
        unsigned int v65 = v5 + 2;
        do
        {
          unsigned int v66 = v65;
          *v65++ = v64 | 0x80;
          unsigned int v67 = v64 >> 7;
          unsigned int v68 = v64 >> 14;
          v64 >>= 7;
        }
        while (v68);
        uint64_t v63 = (google::protobuf::UnknownFieldSet *)(v66 + 2);
        unsigned char *v65 = v67;
      }
      else
      {
        v5[2] = v64;
        uint64_t v63 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v62;
      uint64_t v63 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v61, v63, a3, a4);
  }
LABEL_85:
  unsigned int v69 = (uint64_t *)*((void *)this + 2);
  if ((*((char *)v69 + 23) & 0x80000000) == 0)
  {
    unsigned int v70 = (const char *)*((unsigned __int8 *)v69 + 23);
    if (!*((unsigned char *)v69 + 23)) {
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  unsigned int v70 = (const char *)v69[1];
  if (v70)
  {
    unsigned int v69 = (uint64_t *)*v69;
LABEL_90:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v69, v70, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_DetailedText.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 2), v5);
  }
LABEL_91:
  if (this != (SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_)
  {
    unsigned int v71 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v71)
    {
      if ((unint64_t)v5 >= *(void *)a3)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unsigned int v71 = (SnippetUI::TextProperty *)*((void *)this + 11);
      }
      *uint64_t v5 = 74;
      unsigned int v72 = *((_DWORD *)v71 + 15);
      if (v72 > 0x7F)
      {
        v5[1] = v72 | 0x80;
        unsigned int v74 = v72 >> 7;
        if (v72 >> 14)
        {
          uint64_t v75 = v5 + 2;
          do
          {
            int v76 = v75;
            *v75++ = v74 | 0x80;
            unsigned int v77 = v74 >> 7;
            unsigned int v78 = v74 >> 14;
            v74 >>= 7;
          }
          while (v78);
          unsigned int v73 = (google::protobuf::UnknownFieldSet *)(v76 + 2);
          unsigned char *v75 = v77;
        }
        else
        {
          v5[2] = v74;
          unsigned int v73 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v72;
        unsigned int v73 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v71, v73, a3, a4);
    }
  }
  int v79 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v79 + 23) < 0)
  {
    unsigned int v80 = (const char *)*((void *)v79 + 1);
    if (!v80) {
      goto LABEL_109;
    }
    int v79 = *(google::protobuf::internal **)v79;
    goto LABEL_108;
  }
  unsigned int v80 = (const char *)*((unsigned __int8 *)v79 + 23);
  if (*((unsigned char *)v79 + 23))
  {
LABEL_108:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v79, v80, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_DetailedText.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 3), v5);
  }
LABEL_109:
  uint64_t v81 = *((void *)this + 1);
  if ((v81 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v81 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_DetailedText::_InternalParse(SnippetUI::SummaryItem_DetailedText *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  char v22 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v22, *((_DWORD *)a3 + 23))) {
      return v22;
    }
    TagFallback = (google::protobuf::internal *)((char *)v22 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v22;
    if ((*(char *)v22 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
      char v22 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v10);
    char v22 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_48;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_42;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_41;
      case 2u:
        if (v10 != 18) {
          goto LABEL_48;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v11) {
          goto LABEL_42;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v11;
        goto LABEL_41;
      case 3u:
        if (v10 != 26) {
          goto LABEL_48;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v11) {
          goto LABEL_42;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v11;
        goto LABEL_41;
      case 4u:
        if (v10 != 34) {
          goto LABEL_48;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 7);
        if (v11) {
          goto LABEL_42;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        goto LABEL_41;
      case 5u:
        if (v10 != 42) {
          goto LABEL_48;
        }
        uint64_t v12 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
        if (!v12)
        {
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
          *((void *)this + 8) = v12;
          TagFallback = v22;
        }
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v12, TagFallback);
        goto LABEL_53;
      case 6u:
        if (v10 != 50) {
          goto LABEL_48;
        }
        unsigned int v14 = (SnippetUI::VisualProperty *)*((void *)this + 9);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 9) = v14;
          TagFallback = v22;
        }
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v14, TagFallback);
        goto LABEL_53;
      case 7u:
        if (v10 != 58) {
          goto LABEL_48;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 10);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v15;
          TagFallback = v22;
        }
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_53;
      case 8u:
        if (v10 != 66) {
          goto LABEL_48;
        }
        uint64_t v16 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_DetailedText.component_name";
        goto LABEL_47;
      case 9u:
        if (v10 != 74) {
          goto LABEL_48;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 11);
        if (v11) {
          goto LABEL_42;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 11) = v11;
LABEL_41:
        TagFallback = v22;
LABEL_42:
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_53;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_48;
        }
        uint64_t v16 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v17 = (std::string::value_type *)TagFallback;
        uint64_t v18 = a3;
        unsigned int v19 = "SnippetUI.SummaryItem_DetailedText.link_identifier";
LABEL_47:
        char v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v16, v17, (uint64_t)v18, (google::protobuf::internal *)v19);
        goto LABEL_53;
      default:
LABEL_48:
        if (v10) {
          BOOL v20 = (v10 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (v20)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        char v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_53:
        char v22 = (google::protobuf::internal *)v13;
        if (v13) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_DetailedText::GetCachedSize(SnippetUI::SummaryItem_DetailedText *this)
{
  return *((unsigned int *)this + 24);
}

char *SnippetUI::SummaryItem_DetailedText::ByteSizeLong(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v15)
    {
      uint64_t v16 = SnippetUI::TextProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::MultilineTextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::VisualProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::VisualProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v21 = (SnippetUI::ActionProperty *)*((void *)this + 10);
    if (v21)
    {
      char v22 = SnippetUI::ActionProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::TextProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::TextProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_DetailedText *)((char *)this + 8), v5, (_DWORD *)this + 24);
  }
  else
  {
    *((_DWORD *)this + 24) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_DetailedText::IsInitialized(SnippetUI::SummaryItem_DetailedText *this)
{
  return 1;
}

SnippetUI::SummaryItem_DetailedText *SnippetUI::SummaryItem_DetailedText::New(SnippetUI::SummaryItem_DetailedText *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_DetailedText>(a2);
}

SnippetUI::SummaryItem_DetailedText *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_DetailedText>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_DetailedText *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x68uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_DetailedText>);
  }
  SnippetUI::SummaryItem_DetailedText::SummaryItem_DetailedText(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DD58F8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C408A0BA939);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_DetailedText>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_DetailedText *SnippetUI::SummaryItem_DetailedText::New(SnippetUI::SummaryItem_DetailedText *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_DetailedText>(0);
}

void SnippetUI::SummaryItem_DetailedText::~SummaryItem_DetailedText(SnippetUI::SummaryItem_DetailedText *this)
{
  SnippetUI::SummaryItem_DetailedText::~SummaryItem_DetailedText(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(void *)this = &unk_1F211C528;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    char v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t SnippetUI::SummaryItem_Button::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

void SnippetUI::SummaryItem_Button::MergeFrom(SnippetUI::SummaryItem_Button *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 7164);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::SummaryItem_Button::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DD5C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Button::MergeFrom(SnippetUI::SummaryItem_Button *this, const SnippetUI::SummaryItem_Button *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v38, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/SummaryItem.pb.cc", 7179);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v38, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v37, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v38[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Button *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      uint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        uint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    char v13 = (const SnippetUI::Button *)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (SnippetUI::Button *)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 5) = v14;
        char v13 = (const SnippetUI::Button *)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (const SnippetUI::Button *)&SnippetUI::_Button_default_instance_;
      }
      SnippetUI::Button::MergeFrom(v14, v15);
    }
    uint64_t v16 = (const SnippetUI::Button *)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (SnippetUI::Button *)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 6) = v17;
        uint64_t v16 = (const SnippetUI::Button *)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (const SnippetUI::Button *)&SnippetUI::_Button_default_instance_;
      }
      SnippetUI::Button::MergeFrom(v17, v18);
    }
    unsigned int v19 = (const SnippetUI::Button *)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (SnippetUI::Button *)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 7) = v20;
        unsigned int v19 = (const SnippetUI::Button *)*((void *)a2 + 7);
      }
      if (v19) {
        unsigned int v21 = v19;
      }
      else {
        unsigned int v21 = (const SnippetUI::Button *)&SnippetUI::_Button_default_instance_;
      }
      SnippetUI::Button::MergeFrom(v20, v21);
    }
    char v22 = (int **)*((void *)a2 + 8);
    if (v22)
    {
      unsigned int v23 = (int **)*((void *)this + 8);
      if (!v23)
      {
        unsigned int v23 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v23;
        char v22 = (int **)*((void *)a2 + 8);
      }
      if (v22) {
        unsigned int v24 = v22;
      }
      else {
        unsigned int v24 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v23, v24);
    }
    unsigned int v25 = (int **)*((void *)a2 + 9);
    if (v25)
    {
      unsigned int v26 = (int **)*((void *)this + 9);
      if (!v26)
      {
        unsigned int v26 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 9) = v26;
        unsigned int v25 = (int **)*((void *)a2 + 9);
      }
      if (v25) {
        uint64_t v27 = v25;
      }
      else {
        uint64_t v27 = (int **)&SnippetUI::_MultilineTextProperty_default_instance_;
      }
      SnippetUI::MultilineTextProperty::MergeFrom(v26, v27);
    }
    unsigned int v28 = (int **)*((void *)a2 + 10);
    if (v28)
    {
      BOOL v29 = (int **)*((void *)this + 10);
      if (!v29)
      {
        BOOL v29 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v29;
        unsigned int v28 = (int **)*((void *)a2 + 10);
      }
      if (v28) {
        unsigned int v30 = v28;
      }
      else {
        unsigned int v30 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v29, v30);
    }
    char v31 = (int **)*((void *)a2 + 11);
    if (v31)
    {
      unsigned int v32 = (int **)*((void *)this + 11);
      if (!v32)
      {
        unsigned int v32 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 11) = v32;
        char v31 = (int **)*((void *)a2 + 11);
      }
      if (v31) {
        unsigned int v33 = v31;
      }
      else {
        unsigned int v33 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v32, v33);
    }
    char v34 = (int **)*((void *)a2 + 12);
    if (v34)
    {
      unsigned int v35 = (int **)*((void *)this + 12);
      if (!v35)
      {
        unsigned int v35 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 12) = v35;
        char v34 = (int **)*((void *)a2 + 12);
      }
      if (v34) {
        uint64_t v36 = v34;
      }
      else {
        uint64_t v36 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v35, v36);
    }
  }
}

void sub_1C5DD5F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::SummaryItem_Button::CopyFrom(SnippetUI::SummaryItem_Button *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Button::Clear(this);
    SnippetUI::SummaryItem_Button::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Button::Clear(SnippetUI::SummaryItem_Button *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  *((void *)this + 7) = 0;
  uint64_t v8 = *((void *)this + 8);
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  *((void *)this + 8) = 0;
  uint64_t v9 = *((void *)this + 9);
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  *((void *)this + 9) = 0;
  uint64_t v10 = *((void *)this + 10);
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  *((void *)this + 11) = 0;
  uint64_t v12 = *((void *)this + 12);
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  char v14 = *((unsigned char *)this + 8);
  char v13 = (SnippetUI::SummaryItem_Button *)((char *)this + 8);
  *((void *)v13 + 11) = 0;
  if (v14)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v13);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::SummaryItem_Button::InternalSerializeWithCachedSizesToArray(SnippetUI::SummaryItem_Button *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_) {
    goto LABEL_97;
  }
  uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::TextProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        uint64_t v12 = v5 + 2;
        do
        {
          char v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        uint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *uint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    uint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  uint64_t v16 = (SnippetUI::Button *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    uint64_t v16 = (SnippetUI::Button *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 17);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unsigned int v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::Button::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unsigned int v25 = (SnippetUI::Button *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v25 = (SnippetUI::Button *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 17);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      unsigned int v30 = v5 + 2;
      do
      {
        char v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      BOOL v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *unsigned int v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  BOOL v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::Button::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  char v34 = (SnippetUI::Button *)*((void *)this + 7);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v34 = (SnippetUI::Button *)*((void *)this + 7);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 17);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      unsigned int v39 = v5 + 2;
      do
      {
        unsigned int v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *unsigned int v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::Button::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  unsigned int v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  if (!v43) {
    goto LABEL_62;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v43 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
  }
  *uint64_t v5 = 42;
  unsigned int v44 = *((_DWORD *)v43 + 15);
  if (v44 > 0x7F)
  {
    v5[1] = v44 | 0x80;
    unsigned int v46 = v44 >> 7;
    if (v44 >> 14)
    {
      unsigned int v48 = v5 + 2;
      do
      {
        char v49 = v48;
        *v48++ = v46 | 0x80;
        unsigned int v50 = v46 >> 7;
        unsigned int v51 = v46 >> 14;
        v46 >>= 7;
      }
      while (v51);
      uint64_t v47 = (google::protobuf::UnknownFieldSet *)(v49 + 2);
      *unsigned int v48 = v50;
      goto LABEL_61;
    }
    v5[2] = v46;
    uint64_t v45 = 3;
  }
  else
  {
    v5[1] = v44;
    uint64_t v45 = 2;
  }
  uint64_t v47 = (google::protobuf::UnknownFieldSet *)&v5[v45];
LABEL_61:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v43, v47, a3, a4);
LABEL_62:
  char v52 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
  if (!v52) {
    goto LABEL_74;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v52 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
  }
  *uint64_t v5 = 50;
  unsigned int v53 = *((_DWORD *)v52 + 15);
  if (v53 > 0x7F)
  {
    v5[1] = v53 | 0x80;
    unsigned int v55 = v53 >> 7;
    if (v53 >> 14)
    {
      unsigned int v57 = v5 + 2;
      do
      {
        unsigned int v58 = v57;
        *v57++ = v55 | 0x80;
        unsigned int v59 = v55 >> 7;
        unsigned int v60 = v55 >> 14;
        v55 >>= 7;
      }
      while (v60);
      uint64_t v56 = (google::protobuf::UnknownFieldSet *)(v58 + 2);
      unsigned char *v57 = v59;
      goto LABEL_73;
    }
    v5[2] = v55;
    uint64_t v54 = 3;
  }
  else
  {
    v5[1] = v53;
    uint64_t v54 = 2;
  }
  uint64_t v56 = (google::protobuf::UnknownFieldSet *)&v5[v54];
LABEL_73:
  uint64_t v5 = (char *)SnippetUI::MultilineTextProperty::InternalSerializeWithCachedSizesToArray(v52, v56, a3, a4);
LABEL_74:
  unsigned int v61 = (SnippetUI::VisualProperty *)*((void *)this + 10);
  if (!v61) {
    goto LABEL_86;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unsigned int v61 = (SnippetUI::VisualProperty *)*((void *)this + 10);
  }
  *uint64_t v5 = 58;
  unsigned int v62 = *((_DWORD *)v61 + 15);
  if (v62 > 0x7F)
  {
    v5[1] = v62 | 0x80;
    unsigned int v64 = v62 >> 7;
    if (v62 >> 14)
    {
      unsigned int v66 = v5 + 2;
      do
      {
        unsigned int v67 = v66;
        *v66++ = v64 | 0x80;
        unsigned int v68 = v64 >> 7;
        unsigned int v69 = v64 >> 14;
        v64 >>= 7;
      }
      while (v69);
      unsigned int v65 = (google::protobuf::UnknownFieldSet *)(v67 + 2);
      *unsigned int v66 = v68;
      goto LABEL_85;
    }
    v5[2] = v64;
    uint64_t v63 = 3;
  }
  else
  {
    v5[1] = v62;
    uint64_t v63 = 2;
  }
  unsigned int v65 = (google::protobuf::UnknownFieldSet *)&v5[v63];
LABEL_85:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v61, v65, a3, a4);
LABEL_86:
  unsigned int v70 = (SnippetUI::ActionProperty *)*((void *)this + 11);
  if (v70)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v70 = (SnippetUI::ActionProperty *)*((void *)this + 11);
    }
    *uint64_t v5 = 66;
    unsigned int v71 = *((_DWORD *)v70 + 12);
    if (v71 > 0x7F)
    {
      v5[1] = v71 | 0x80;
      unsigned int v73 = v71 >> 7;
      if (v71 >> 14)
      {
        unsigned int v74 = v5 + 2;
        do
        {
          uint64_t v75 = v74;
          *v74++ = v73 | 0x80;
          unsigned int v76 = v73 >> 7;
          unsigned int v77 = v73 >> 14;
          v73 >>= 7;
        }
        while (v77);
        unsigned int v72 = (google::protobuf::UnknownFieldSet *)(v75 + 2);
        unsigned char *v74 = v76;
      }
      else
      {
        v5[2] = v73;
        unsigned int v72 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v71;
      unsigned int v72 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v70, v72, a3, a4);
  }
LABEL_97:
  unsigned int v78 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v78 + 23) < 0)
  {
    int v79 = (const char *)*((void *)v78 + 1);
    if (!v79) {
      goto LABEL_103;
    }
    unsigned int v78 = *(google::protobuf::internal **)v78;
    goto LABEL_102;
  }
  int v79 = (const char *)*((unsigned __int8 *)v78 + 23);
  if (*((unsigned char *)v78 + 23))
  {
LABEL_102:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v78, v79, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Button.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 2), v5);
  }
LABEL_103:
  unsigned int v80 = (uint64_t *)*((void *)this + 3);
  if ((*((char *)v80 + 23) & 0x80000000) == 0)
  {
    uint64_t v81 = (const char *)*((unsigned __int8 *)v80 + 23);
    if (!*((unsigned char *)v80 + 23)) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
  uint64_t v81 = (const char *)v80[1];
  if (v81)
  {
    unsigned int v80 = (uint64_t *)*v80;
LABEL_108:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v80, v81, 1, (google::protobuf::internal *)"SnippetUI.SummaryItem_Button.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 3), v5);
  }
LABEL_109:
  if (this != (SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_)
  {
    unsigned int v82 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v82)
    {
      if ((unint64_t)v5 >= *(void *)a3)
      {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
        unsigned int v82 = (SnippetUI::TextProperty *)*((void *)this + 12);
      }
      *uint64_t v5 = 90;
      unsigned int v83 = *((_DWORD *)v82 + 15);
      if (v83 > 0x7F)
      {
        v5[1] = v83 | 0x80;
        unsigned int v85 = v83 >> 7;
        if (v83 >> 14)
        {
          unsigned int v86 = v5 + 2;
          do
          {
            unsigned int v87 = v86;
            *v86++ = v85 | 0x80;
            unsigned int v88 = v85 >> 7;
            unsigned int v89 = v85 >> 14;
            v85 >>= 7;
          }
          while (v89);
          unsigned int v84 = (google::protobuf::UnknownFieldSet *)(v87 + 2);
          unsigned char *v86 = v88;
        }
        else
        {
          v5[2] = v85;
          unsigned int v84 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v83;
        unsigned int v84 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v82, v84, a3, a4);
    }
  }
  uint64_t v90 = *((void *)this + 1);
  if ((v90 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v90 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::SummaryItem_Button::_InternalParse(SnippetUI::SummaryItem_Button *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v23 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v23, *((_DWORD *)a3 + 23))) {
      return v23;
    }
    TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v23;
    if ((*(char *)v23 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
      unsigned int v23 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, v10);
    unsigned int v23 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v11) {
          goto LABEL_53;
        }
        uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v11;
        goto LABEL_52;
      case 2u:
        if (v10 != 18) {
          goto LABEL_54;
        }
        uint64_t v12 = (SnippetUI::Button *)*((void *)this + 5);
        if (v12) {
          goto LABEL_23;
        }
        uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 5) = v12;
        goto LABEL_22;
      case 3u:
        if (v10 != 26) {
          goto LABEL_54;
        }
        uint64_t v12 = (SnippetUI::Button *)*((void *)this + 6);
        if (v12) {
          goto LABEL_23;
        }
        uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 6) = v12;
        goto LABEL_22;
      case 4u:
        if (v10 != 34) {
          goto LABEL_54;
        }
        uint64_t v12 = (SnippetUI::Button *)*((void *)this + 7);
        if (v12) {
          goto LABEL_23;
        }
        uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Button>(0);
        *((void *)this + 7) = v12;
LABEL_22:
        TagFallback = v23;
LABEL_23:
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Button>(a3, v12, TagFallback);
        goto LABEL_59;
      case 5u:
        if (v10 != 42) {
          goto LABEL_54;
        }
        unsigned int v14 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
        if (v14) {
          goto LABEL_31;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 8) = v14;
        goto LABEL_30;
      case 6u:
        if (v10 != 50) {
          goto LABEL_54;
        }
        unsigned int v14 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
        if (v14) {
          goto LABEL_31;
        }
        unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::MultilineTextProperty>(0);
        *((void *)this + 9) = v14;
LABEL_30:
        TagFallback = v23;
LABEL_31:
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::MultilineTextProperty>(a3, v14, TagFallback);
        goto LABEL_59;
      case 7u:
        if (v10 != 58) {
          goto LABEL_54;
        }
        unsigned int v15 = (SnippetUI::VisualProperty *)*((void *)this + 10);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v15;
          TagFallback = v23;
        }
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v15, TagFallback);
        goto LABEL_59;
      case 8u:
        if (v10 != 66) {
          goto LABEL_54;
        }
        uint64_t v16 = (SnippetUI::ActionProperty *)*((void *)this + 11);
        if (!v16)
        {
          uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 11) = v16;
          TagFallback = v23;
        }
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v16, TagFallback);
        goto LABEL_59;
      case 9u:
        if (v10 != 74) {
          goto LABEL_54;
        }
        unsigned int v17 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v18 = (std::string::value_type *)TagFallback;
        unsigned int v19 = a3;
        BOOL v20 = "SnippetUI.SummaryItem_Button.component_name";
        goto LABEL_48;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_54;
        }
        unsigned int v17 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        uint64_t v18 = (std::string::value_type *)TagFallback;
        unsigned int v19 = a3;
        BOOL v20 = "SnippetUI.SummaryItem_Button.link_identifier";
LABEL_48:
        char v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v17, v18, (uint64_t)v19, (google::protobuf::internal *)v20);
        goto LABEL_59;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_54;
        }
        uint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 12);
        if (!v11)
        {
          uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 12) = v11;
LABEL_52:
          TagFallback = v23;
        }
LABEL_53:
        char v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v11, TagFallback);
        goto LABEL_59;
      default:
LABEL_54:
        if (v10) {
          BOOL v21 = (v10 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (v21)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        char v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_59:
        unsigned int v23 = (google::protobuf::internal *)v13;
        if (v13) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::SummaryItem_Button::GetCachedSize(SnippetUI::SummaryItem_Button *this)
{
  return *((unsigned int *)this + 26);
}

char *SnippetUI::SummaryItem_Button::ByteSizeLong(SnippetUI::SummaryItem_Button *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_)
  {
    uint64_t v9 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::TextProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint64_t v11 = (SnippetUI::Button *)*((void *)this + 5);
    if (v11)
    {
      uint64_t v12 = SnippetUI::Button::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v13 = (SnippetUI::Button *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::Button::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::Button *)*((void *)this + 7);
    if (v15)
    {
      uint64_t v16 = SnippetUI::Button::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v17 = (SnippetUI::MultilineTextProperty *)*((void *)this + 8);
    if (v17)
    {
      uint64_t v18 = SnippetUI::MultilineTextProperty::ByteSizeLong(v17);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v18[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v19 = (SnippetUI::MultilineTextProperty *)*((void *)this + 9);
    if (v19)
    {
      BOOL v20 = SnippetUI::MultilineTextProperty::ByteSizeLong(v19);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v20[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6)];
    }
    BOOL v21 = (SnippetUI::VisualProperty *)*((void *)this + 10);
    if (v21)
    {
      char v22 = SnippetUI::VisualProperty::ByteSizeLong(v21);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v22[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v23 = (SnippetUI::ActionProperty *)*((void *)this + 11);
    if (v23)
    {
      unsigned int v24 = SnippetUI::ActionProperty::ByteSizeLong(v23);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v24[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v25 = (SnippetUI::TextProperty *)*((void *)this + 12);
    if (v25)
    {
      unsigned int v26 = SnippetUI::TextProperty::ByteSizeLong(v25);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v26[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::SummaryItem_Button *)((char *)this + 8), v5, (_DWORD *)this + 26);
  }
  else
  {
    *((_DWORD *)this + 26) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::SummaryItem_Button::IsInitialized(SnippetUI::SummaryItem_Button *this)
{
  return 1;
}

SnippetUI::SummaryItem_Button *SnippetUI::SummaryItem_Button::New(SnippetUI::SummaryItem_Button *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Button>(a2);
}

SnippetUI::SummaryItem_Button *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Button>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::SummaryItem_Button *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x70uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Button>);
  }
  SnippetUI::SummaryItem_Button::SummaryItem_Button(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DD7004(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40B27C08C4);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::SummaryItem_Button>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::SummaryItem_Button *SnippetUI::SummaryItem_Button::New(SnippetUI::SummaryItem_Button *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::SummaryItem_Button>(0);
}

void SnippetUI::SummaryItem_Button::~SummaryItem_Button(SnippetUI::SummaryItem_Button *this)
{
  SnippetUI::SummaryItem_Button::~SummaryItem_Button(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(void *)this = &unk_1F211C8E8;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    unsigned int v10 = *((void *)this + 8);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 9);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 10);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    char v13 = *((void *)this + 11);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    unsigned int v14 = *((void *)this + 12);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::SummaryItem_Standard::InitAsDefaultInstance(SnippetUI::SummaryItem_Standard *this)
{
  qword_1EB690D20 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690D28 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690D30 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690D38 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690D40 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690D48 = &SnippetUI::_TextProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::text_1(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::text_2(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::text_3(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::thumbnail(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::action(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Standard::_Internal::text_4(SnippetUI::SummaryItem_Standard::_Internal *this, const SnippetUI::SummaryItem_Standard *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Standard::clear_text_1(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Standard::clear_text_2(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Standard::clear_text_3(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Standard::clear_thumbnail(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Standard::clear_action(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Standard::clear_text_4(SnippetUI::SummaryItem_Standard *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

SnippetUI::SummaryItem_Standard *SnippetUI::SummaryItem_Standard::SummaryItem_Standard(SnippetUI::SummaryItem_Standard *this, const SnippetUI::SummaryItem_Standard *a2)
{
  *(void *)this = &unk_1F211C228;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Standard *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_Standard *)&SnippetUI::_SummaryItem_Standard_default_instance_)
  {
    *((void *)this + 8) = 0;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
  }
  *((void *)this + 9) = 0;
  return this;
}

void sub_1C5DD7788(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Standard::default_instance(SnippetUI::SummaryItem_Standard *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Standard_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Standard_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Standard_default_instance_;
}

void SnippetUI::SummaryItem_Standard::CopyFrom(SnippetUI::SummaryItem_Standard *this, const SnippetUI::SummaryItem_Standard *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Standard::Clear(this);
    SnippetUI::SummaryItem_Standard::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Standard::InternalSwap(SnippetUI::SummaryItem_Standard *this, SnippetUI::SummaryItem_Standard *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Standard *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v25;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
}

void SnippetUI::SummaryItem_ShortNumber::InitAsDefaultInstance(SnippetUI::SummaryItem_ShortNumber *this)
{
  qword_1EB690E98 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690EA0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690EA8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690EB0 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690EB8 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690EC0 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690EC8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690ED0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690ED8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::number(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_2(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_1(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_3(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_4(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_5(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::thumbnail(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::action(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::_Internal::text_6(SnippetUI::SummaryItem_ShortNumber::_Internal *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  return *((void *)this + 12);
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_number(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_2(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_1(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_3(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_4(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_5(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_thumbnail(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_action(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_ShortNumber::clear_text_6(SnippetUI::SummaryItem_ShortNumber *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

SnippetUI::SummaryItem_ShortNumber *SnippetUI::SummaryItem_ShortNumber::SummaryItem_ShortNumber(SnippetUI::SummaryItem_ShortNumber *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  *(void *)this = &unk_1F211C2E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 26) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_ShortNumber *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_ShortNumber *)&SnippetUI::_SummaryItem_ShortNumber_default_instance_)
  {
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
  }
  *((void *)this + 12) = 0;
  return this;
}

void sub_1C5DD808C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_ShortNumber::default_instance(SnippetUI::SummaryItem_ShortNumber *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_ShortNumber_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_ShortNumber_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_ShortNumber_default_instance_;
}

void SnippetUI::SummaryItem_ShortNumber::CopyFrom(SnippetUI::SummaryItem_ShortNumber *this, const SnippetUI::SummaryItem_ShortNumber *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_ShortNumber::Clear(this);
    SnippetUI::SummaryItem_ShortNumber::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_ShortNumber::InternalSwap(SnippetUI::SummaryItem_ShortNumber *this, SnippetUI::SummaryItem_ShortNumber *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_ShortNumber *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v28;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
  uint64_t v27 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v27;
}

void SnippetUI::SummaryItem_Text::InitAsDefaultInstance(SnippetUI::SummaryItem_Text *this)
{
  qword_1EB690A18 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690A20 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690A38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690A40 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690A28 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690A30 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::text_2(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::text_1(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::text_3(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::text_4(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::text_5(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Text::_Internal::action(SnippetUI::SummaryItem_Text::_Internal *this, const SnippetUI::SummaryItem_Text *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Text::clear_text_2(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Text::clear_text_1(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Text::clear_text_3(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Text::clear_text_4(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Text::clear_text_5(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Text::clear_action(SnippetUI::SummaryItem_Text *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::SummaryItem_Text *SnippetUI::SummaryItem_Text::SummaryItem_Text(SnippetUI::SummaryItem_Text *this, const SnippetUI::SummaryItem_Text *a2)
{
  *(void *)this = &unk_1F211C3A8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Text *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_Text *)&SnippetUI::_SummaryItem_Text_default_instance_)
  {
    *((void *)this + 8) = 0;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
  }
  *((void *)this + 9) = 0;
  return this;
}

void sub_1C5DD880C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Text::default_instance(SnippetUI::SummaryItem_Text *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Text_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Text_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Text_default_instance_;
}

void SnippetUI::SummaryItem_Text::CopyFrom(SnippetUI::SummaryItem_Text *this, const SnippetUI::SummaryItem_Text *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Text::Clear(this);
    SnippetUI::SummaryItem_Text::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Text::InternalSwap(SnippetUI::SummaryItem_Text *this, SnippetUI::SummaryItem_Text *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Text *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v25;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
}

void SnippetUI::SummaryItem_LargeText::InitAsDefaultInstance(SnippetUI::SummaryItem_LargeText *this)
{
  qword_1EB690DF8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690E00 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB690E08 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690E10 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_LargeText::_Internal::text_1(SnippetUI::SummaryItem_LargeText::_Internal *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_LargeText::_Internal::text_2(SnippetUI::SummaryItem_LargeText::_Internal *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_LargeText::_Internal::text_3(SnippetUI::SummaryItem_LargeText::_Internal *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_LargeText::_Internal::action(SnippetUI::SummaryItem_LargeText::_Internal *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_LargeText::clear_text_1(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_LargeText::clear_text_2(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_LargeText::clear_text_3(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_LargeText::clear_action(SnippetUI::SummaryItem_LargeText *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::SummaryItem_LargeText *SnippetUI::SummaryItem_LargeText::SummaryItem_LargeText(SnippetUI::SummaryItem_LargeText *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  *(void *)this = &unk_1F211C468;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 16) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_LargeText *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_LargeText *)&SnippetUI::_SummaryItem_LargeText_default_instance_)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    *((void *)this + 6) = 0;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
  }
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DD8E28(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_LargeText::default_instance(SnippetUI::SummaryItem_LargeText *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_LargeText_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_LargeText_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_LargeText_default_instance_;
}

void SnippetUI::SummaryItem_LargeText::CopyFrom(SnippetUI::SummaryItem_LargeText *this, const SnippetUI::SummaryItem_LargeText *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_LargeText::Clear(this);
    SnippetUI::SummaryItem_LargeText::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_LargeText::InternalSwap(SnippetUI::SummaryItem_LargeText *this, SnippetUI::SummaryItem_LargeText *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_LargeText *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v23;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
}

void SnippetUI::SummaryItem_DetailedText::InitAsDefaultInstance(SnippetUI::SummaryItem_DetailedText *this)
{
  qword_1EB690420 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690428 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690430 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB690438 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB690440 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB690448 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB690450 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB690458 = &SnippetUI::_TextProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_1(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_3(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_2(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_4(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_5(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::text_6(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::thumbnail(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_DetailedText::_Internal::action(SnippetUI::SummaryItem_DetailedText::_Internal *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_1(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_3(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_2(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_4(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_5(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_text_6(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_thumbnail(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_DetailedText::clear_action(SnippetUI::SummaryItem_DetailedText *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

SnippetUI::SummaryItem_DetailedText *SnippetUI::SummaryItem_DetailedText::SummaryItem_DetailedText(SnippetUI::SummaryItem_DetailedText *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  *(void *)this = &unk_1F211C528;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 24) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_DetailedText *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_DetailedText *)&SnippetUI::_SummaryItem_DetailedText_default_instance_)
  {
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
  }
  *((void *)this + 11) = 0;
  return this;
}

void sub_1C5DD9674(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_DetailedText::default_instance(SnippetUI::SummaryItem_DetailedText *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_DetailedText_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_DetailedText_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_DetailedText_default_instance_;
}

void SnippetUI::SummaryItem_DetailedText::CopyFrom(SnippetUI::SummaryItem_DetailedText *this, const SnippetUI::SummaryItem_DetailedText *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_DetailedText::Clear(this);
    SnippetUI::SummaryItem_DetailedText::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_DetailedText::InternalSwap(SnippetUI::SummaryItem_DetailedText *this, SnippetUI::SummaryItem_DetailedText *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_DetailedText *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v27;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
}

void SnippetUI::SummaryItem_Pair::InitAsDefaultInstance(SnippetUI::SummaryItem_Pair *this)
{
  qword_1EB68F9B8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9C0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9C8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9D0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9D8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9E0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9E8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F9F0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F9F8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FA00 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FA08 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FA10 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FA18 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_4(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_6(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_1(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_2(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_3(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_5(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_7(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_8(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_9(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 12);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::text_10(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 13);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::thumbnail_1(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 14);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::thumbnail_2(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 15);
}

uint64_t SnippetUI::SummaryItem_Pair::_Internal::action(SnippetUI::SummaryItem_Pair::_Internal *this, const SnippetUI::SummaryItem_Pair *a2)
{
  return *((void *)this + 16);
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_4(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_6(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_1(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_2(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_3(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_5(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_7(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_8(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_9(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_text_10(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 13);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 13) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_thumbnail_1(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 14);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 14) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_thumbnail_2(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 15);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 15) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Pair::clear_action(SnippetUI::SummaryItem_Pair *this)
{
  uint64_t result = *((void *)this + 16);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 16) = 0;
  return result;
}

SnippetUI::SummaryItem_Pair *SnippetUI::SummaryItem_Pair::SummaryItem_Pair(SnippetUI::SummaryItem_Pair *this, const SnippetUI::SummaryItem_Pair *a2)
{
  *(void *)this = &unk_1F211C5E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 34) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Pair *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_Pair *)&SnippetUI::_SummaryItem_Pair_default_instance_)
  {
    *((_OWORD *)this + 6) = 0u;
    *((_OWORD *)this + 7) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
    *((void *)this + 12) = 0;
    if (*((void *)a2 + 13)) {
      operator new();
    }
    *((void *)this + 13) = 0;
    if (*((void *)a2 + 14)) {
      operator new();
    }
    *((void *)this + 14) = 0;
    if (*((void *)a2 + 15)) {
      operator new();
    }
    *((void *)this + 15) = 0;
    if (*((void *)a2 + 16)) {
      operator new();
    }
  }
  *((void *)this + 16) = 0;
  return this;
}

void sub_1C5DDA1E4(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Pair::default_instance(SnippetUI::SummaryItem_Pair *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Pair_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Pair_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Pair_default_instance_;
}

void SnippetUI::SummaryItem_Pair::CopyFrom(SnippetUI::SummaryItem_Pair *this, const SnippetUI::SummaryItem_Pair *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Pair::Clear(this);
    SnippetUI::SummaryItem_Pair::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Pair::InternalSwap(SnippetUI::SummaryItem_Pair *this, SnippetUI::SummaryItem_Pair *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Pair *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v32;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
  uint64_t v27 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v27;
  uint64_t v28 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v28;
  uint64_t v29 = *((void *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((void *)a2 + 14) = v29;
  uint64_t v30 = *((void *)this + 15);
  *((void *)this + 15) = *((void *)a2 + 15);
  *((void *)a2 + 15) = v30;
  uint64_t v31 = *((void *)this + 16);
  *((void *)this + 16) = *((void *)a2 + 16);
  *((void *)a2 + 16) = v31;
}

void SnippetUI::SummaryItem_PairV2::InitAsDefaultInstance(SnippetUI::SummaryItem_PairV2 *this)
{
  qword_1EA3DB0F0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB0F8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB100 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB108 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB110 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EA3DB118 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::text_1(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::thumbnail_1(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::thumbnail_2(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::text_2(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::text_3(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_PairV2::_Internal::action(SnippetUI::SummaryItem_PairV2::_Internal *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_text_1(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_thumbnail_1(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_thumbnail_2(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_text_2(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_text_3(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairV2::clear_action(SnippetUI::SummaryItem_PairV2 *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

SnippetUI::SummaryItem_PairV2 *SnippetUI::SummaryItem_PairV2::SummaryItem_PairV2(SnippetUI::SummaryItem_PairV2 *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  *(void *)this = &unk_1F211C6A8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_PairV2 *)&SnippetUI::_SummaryItem_PairV2_default_instance_)
  {
    *((void *)this + 8) = 0;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
  }
  *((void *)this + 9) = 0;
  return this;
}

void sub_1C5DDA9B4(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_PairV2::default_instance(SnippetUI::SummaryItem_PairV2 *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_PairV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairV2_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_PairV2_default_instance_;
}

void SnippetUI::SummaryItem_PairV2::CopyFrom(SnippetUI::SummaryItem_PairV2 *this, const SnippetUI::SummaryItem_PairV2 *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairV2::Clear(this);
    SnippetUI::SummaryItem_PairV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairV2::InternalSwap(SnippetUI::SummaryItem_PairV2 *this, SnippetUI::SummaryItem_PairV2 *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_PairV2 *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v25;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
}

void SnippetUI::SummaryItem_PairNumber::InitAsDefaultInstance(SnippetUI::SummaryItem_PairNumber *this)
{
  qword_1EB68FF78 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FF80 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FF88 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FF90 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FF98 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFA0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFA8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFB0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFB8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFC0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FFC8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FFD0 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FFD8 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FFE0 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::number_1(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::number_2(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_1(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_2(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_3(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_4(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_5(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_6(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_7(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 12);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_8(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 13);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::text_9(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 14);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::thumbnail_1(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 15);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::thumbnail_2(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 16);
}

uint64_t SnippetUI::SummaryItem_PairNumber::_Internal::action(SnippetUI::SummaryItem_PairNumber::_Internal *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  return *((void *)this + 17);
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_number_1(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_number_2(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_1(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_2(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_3(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_4(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_5(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_6(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_7(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_8(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 13);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 13) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_text_9(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 14);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 14) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_thumbnail_1(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 15);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 15) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_thumbnail_2(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 16);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 16) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumber::clear_action(SnippetUI::SummaryItem_PairNumber *this)
{
  uint64_t result = *((void *)this + 17);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 17) = 0;
  return result;
}

SnippetUI::SummaryItem_PairNumber *SnippetUI::SummaryItem_PairNumber::SummaryItem_PairNumber(SnippetUI::SummaryItem_PairNumber *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  *(void *)this = &unk_1F211C768;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 36) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairNumber *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_PairNumber *)&SnippetUI::_SummaryItem_PairNumber_default_instance_)
  {
    *((void *)this + 16) = 0;
    *((_OWORD *)this + 6) = 0u;
    *((_OWORD *)this + 7) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
    *((void *)this + 12) = 0;
    if (*((void *)a2 + 13)) {
      operator new();
    }
    *((void *)this + 13) = 0;
    if (*((void *)a2 + 14)) {
      operator new();
    }
    *((void *)this + 14) = 0;
    if (*((void *)a2 + 15)) {
      operator new();
    }
    *((void *)this + 15) = 0;
    if (*((void *)a2 + 16)) {
      operator new();
    }
    *((void *)this + 16) = 0;
    if (*((void *)a2 + 17)) {
      operator new();
    }
  }
  *((void *)this + 17) = 0;
  return this;
}

void sub_1C5DDB590(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_PairNumber::default_instance(SnippetUI::SummaryItem_PairNumber *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_PairNumber_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairNumber_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_PairNumber_default_instance_;
}

void SnippetUI::SummaryItem_PairNumber::CopyFrom(SnippetUI::SummaryItem_PairNumber *this, const SnippetUI::SummaryItem_PairNumber *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairNumber::Clear(this);
    SnippetUI::SummaryItem_PairNumber::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairNumber::InternalSwap(SnippetUI::SummaryItem_PairNumber *this, SnippetUI::SummaryItem_PairNumber *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_PairNumber *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v33;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
  uint64_t v27 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v27;
  uint64_t v28 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v28;
  uint64_t v29 = *((void *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((void *)a2 + 14) = v29;
  uint64_t v30 = *((void *)this + 15);
  *((void *)this + 15) = *((void *)a2 + 15);
  *((void *)a2 + 15) = v30;
  uint64_t v31 = *((void *)this + 16);
  *((void *)this + 16) = *((void *)a2 + 16);
  *((void *)a2 + 16) = v31;
  uint64_t v32 = *((void *)this + 17);
  *((void *)this + 17) = *((void *)a2 + 17);
  *((void *)a2 + 17) = v32;
}

void SnippetUI::SummaryItem_PairNumberV2::InitAsDefaultInstance(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  qword_1EA3DB148 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB150 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB158 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB160 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB168 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB170 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB178 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EA3DB180 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB188 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EA3DB190 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::number_1(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::number_2(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::text_1(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::text_2(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::text_3(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::text_4(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::text_5(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::thumbnail_1(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::thumbnail_2(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 12);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::_Internal::action(SnippetUI::SummaryItem_PairNumberV2::_Internal *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  return *((void *)this + 13);
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_number_1(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_number_2(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_text_1(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_text_2(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_text_3(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_text_4(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_text_5(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_thumbnail_1(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_thumbnail_2(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_PairNumberV2::clear_action(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  uint64_t result = *((void *)this + 13);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 13) = 0;
  return result;
}

SnippetUI::SummaryItem_PairNumberV2 *SnippetUI::SummaryItem_PairNumberV2::SummaryItem_PairNumberV2(SnippetUI::SummaryItem_PairNumberV2 *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  *(void *)this = &unk_1F211C828;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 28) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_PairNumberV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_PairNumberV2 *)&SnippetUI::_SummaryItem_PairNumberV2_default_instance_)
  {
    *((void *)this + 12) = 0;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
    *((void *)this + 12) = 0;
    if (*((void *)a2 + 13)) {
      operator new();
    }
  }
  *((void *)this + 13) = 0;
  return this;
}

void sub_1C5DDBFC8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_PairNumberV2::default_instance(SnippetUI::SummaryItem_PairNumberV2 *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_PairNumberV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_PairNumberV2_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_PairNumberV2_default_instance_;
}

void SnippetUI::SummaryItem_PairNumberV2::CopyFrom(SnippetUI::SummaryItem_PairNumberV2 *this, const SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_PairNumberV2::Clear(this);
    SnippetUI::SummaryItem_PairNumberV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_PairNumberV2::InternalSwap(SnippetUI::SummaryItem_PairNumberV2 *this, SnippetUI::SummaryItem_PairNumberV2 *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_PairNumberV2 *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v29;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
  uint64_t v27 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v27;
  uint64_t v28 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v28;
}

void SnippetUI::SummaryItem_Button::InitAsDefaultInstance(SnippetUI::SummaryItem_Button *this)
{
  qword_1EB68FC80 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FC88 = &SnippetUI::_Button_default_instance_;
  qword_1EB68FC90 = (uint64_t)&SnippetUI::_Button_default_instance_;
  unk_1EB68FC98 = &SnippetUI::_Button_default_instance_;
  qword_1EB68FCA0 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FCA8 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FCB0 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FCB8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
  unk_1EB68FCC0 = &SnippetUI::_TextProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::text_1(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::button_1(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::button_2(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::button_3(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::text_2(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::text_3(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::text_4(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 12);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::thumbnail(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_Button::_Internal::action(SnippetUI::SummaryItem_Button::_Internal *this, const SnippetUI::SummaryItem_Button *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_Button::clear_text_1(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_button_1(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_button_2(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_button_3(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_text_2(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_text_3(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_text_4(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_thumbnail(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Button::clear_action(SnippetUI::SummaryItem_Button *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

SnippetUI::SummaryItem_Button *SnippetUI::SummaryItem_Button::SummaryItem_Button(SnippetUI::SummaryItem_Button *this, const SnippetUI::SummaryItem_Button *a2)
{
  *(void *)this = &unk_1F211C8E8;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 26) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Button *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_Button *)&SnippetUI::_SummaryItem_Button_default_instance_)
  {
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
  }
  *((void *)this + 12) = 0;
  return this;
}

void sub_1C5DDC924(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Button::default_instance(SnippetUI::SummaryItem_Button *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Button_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Button_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Button_default_instance_;
}

void SnippetUI::SummaryItem_Button::CopyFrom(SnippetUI::SummaryItem_Button *this, const SnippetUI::SummaryItem_Button *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Button::Clear(this);
    SnippetUI::SummaryItem_Button::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Button::InternalSwap(SnippetUI::SummaryItem_Button *this, SnippetUI::SummaryItem_Button *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Button *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v28;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
  uint64_t v26 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v26;
  uint64_t v27 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v27;
}

void SnippetUI::SummaryItem_Player::InitAsDefaultInstance(SnippetUI::SummaryItem_Player *this)
{
  qword_1EB68FD08 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD10 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FD18 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EB68FD20 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FD28 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FD30 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::text_1(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::text_2(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::text_3(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::text_4(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::thumbnail(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 11);
}

uint64_t SnippetUI::SummaryItem_Player::_Internal::action(SnippetUI::SummaryItem_Player::_Internal *this, const SnippetUI::SummaryItem_Player *a2)
{
  return *((void *)this + 12);
}

void SnippetUI::SummaryItem_Player::clear_player(SnippetUI::SummaryItem_Player *this)
{
}

uint64_t SnippetUI::SummaryItem_Player::clear_text_1(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::clear_text_2(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::clear_text_3(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::clear_text_4(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::clear_thumbnail(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 11);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 11) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Player::clear_action(SnippetUI::SummaryItem_Player *this)
{
  uint64_t result = *((void *)this + 12);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 12) = 0;
  return result;
}

SnippetUI::SummaryItem_Player *SnippetUI::SummaryItem_Player::SummaryItem_Player(SnippetUI::SummaryItem_Player *this, const SnippetUI::SummaryItem_Player *a2)
{
  *(void *)this = &unk_1F211C9A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (SnippetUI::SummaryItem_Player *)((char *)this + 8);
  *(_OWORD *)((char *)this + 24) = 0u;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((int **)this + 2, (uint64_t)a2 + 16);
  *((_DWORD *)this + 26) = 0;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom(v4, (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0) {
    uint64_t v7 = *(void *)(v6 + 8);
  }
  else {
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  }
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v6);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v9 = *((void *)a2 + 6);
  if (*(char *)(v9 + 23) < 0) {
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else {
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  }
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v10) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, v9);
  }
  if (a2 == (const SnippetUI::SummaryItem_Player *)&SnippetUI::_SummaryItem_Player_default_instance_)
  {
    *((void *)this + 11) = 0;
    *(_OWORD *)((char *)this + 72) = 0u;
    *(_OWORD *)((char *)this + 56) = 0u;
  }
  else
  {
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
    *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    if (*((void *)a2 + 11)) {
      operator new();
    }
    *((void *)this + 11) = 0;
    if (*((void *)a2 + 12)) {
      operator new();
    }
  }
  *((void *)this + 12) = 0;
  return this;
}

void sub_1C5DDD0E8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v3, 0x10A1C40B18DE219);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Player::default_instance(SnippetUI::SummaryItem_Player *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Player_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Player_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Player_default_instance_;
}

void SnippetUI::SummaryItem_Player::CopyFrom(SnippetUI::SummaryItem_Player *this, const SnippetUI::SummaryItem_Player *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Player::Clear(this);
    SnippetUI::SummaryItem_Player::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Player::InternalSwap(SnippetUI::SummaryItem_Player *this, SnippetUI::SummaryItem_Player *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Player *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v25;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((SnippetUI::SummaryItem_Player *)((char *)this + 16), (SnippetUI::SummaryItem_Player *)((char *)a2 + 16));
  uint64_t v7 = (uint64_t *)*((void *)this + 5);
  uint64_t v8 = (uint64_t **)((char *)a2 + 40);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 5);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 6);
  unsigned int v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 6);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v19;
  uint64_t v20 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v20;
  uint64_t v21 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v21;
  uint64_t v22 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v22;
  uint64_t v23 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v23;
  uint64_t v24 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v24;
}

void SnippetUI::SummaryItem_Switch::InitAsDefaultInstance(SnippetUI::SummaryItem_Switch *this)
{
  qword_1EB68FD60 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EB68FD68 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FD70 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD78 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EB68FD88 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FD90 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68FD80 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::switch_(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::text_1(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::text_2(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::text_3(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::text_4(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::thumbnail(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_Switch::_Internal::action(SnippetUI::SummaryItem_Switch::_Internal *this, const SnippetUI::SummaryItem_Switch *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_Switch::clear_switch_(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_text_1(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_text_2(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_text_3(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_text_4(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_thumbnail(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_Switch::clear_action(SnippetUI::SummaryItem_Switch *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

SnippetUI::SummaryItem_Switch *SnippetUI::SummaryItem_Switch::SummaryItem_Switch(SnippetUI::SummaryItem_Switch *this, const SnippetUI::SummaryItem_Switch *a2)
{
  *(void *)this = &unk_1F211CA68;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_Switch *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_Switch *)&SnippetUI::_SummaryItem_Switch_default_instance_)
  {
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return this;
}

void sub_1C5DDD8F4(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_Switch::default_instance(SnippetUI::SummaryItem_Switch *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_Switch_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_Switch_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_Switch_default_instance_;
}

void SnippetUI::SummaryItem_Switch::CopyFrom(SnippetUI::SummaryItem_Switch *this, const SnippetUI::SummaryItem_Switch *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_Switch::Clear(this);
    SnippetUI::SummaryItem_Switch::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_Switch::InternalSwap(SnippetUI::SummaryItem_Switch *this, SnippetUI::SummaryItem_Switch *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_Switch *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v26;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
}

void SnippetUI::SummaryItem_SwitchV2::InitAsDefaultInstance(SnippetUI::SummaryItem_SwitchV2 *this)
{
  qword_1EA3DB308 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EA3DB310 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EA3DB318 = (uint64_t)&SnippetUI::_MultilineTextProperty_default_instance_;
  unk_1EA3DB320 = &SnippetUI::_MultilineTextProperty_default_instance_;
  qword_1EA3DB330 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB338 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EA3DB328 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::switch_(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::text_1(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::text_2(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::text_3(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::text_4(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 9);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::thumbnail(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 10);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::_Internal::action(SnippetUI::SummaryItem_SwitchV2::_Internal *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_switch_(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_text_1(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_text_2(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_text_3(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_text_4(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 9);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 9) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_thumbnail(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 10);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

uint64_t SnippetUI::SummaryItem_SwitchV2::clear_action(SnippetUI::SummaryItem_SwitchV2 *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

SnippetUI::SummaryItem_SwitchV2 *SnippetUI::SummaryItem_SwitchV2::SummaryItem_SwitchV2(SnippetUI::SummaryItem_SwitchV2 *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  *(void *)this = &unk_1F211CB28;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 22) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::SummaryItem_SwitchV2 *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::SummaryItem_SwitchV2 *)&SnippetUI::_SummaryItem_SwitchV2_default_instance_)
  {
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
    *((void *)this + 8) = 0;
    if (*((void *)a2 + 9)) {
      operator new();
    }
    *((void *)this + 9) = 0;
    if (*((void *)a2 + 10)) {
      operator new();
    }
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return this;
}

void sub_1C5DDE100(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40BEC01B52);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::SummaryItem_SwitchV2::default_instance(SnippetUI::SummaryItem_SwitchV2 *this)
{
  if (atomic_load_explicit(scc_info_SummaryItem_SwitchV2_SummaryItem_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SummaryItem_SwitchV2_SummaryItem_2eproto);
  }
  return &SnippetUI::_SummaryItem_SwitchV2_default_instance_;
}

void SnippetUI::SummaryItem_SwitchV2::CopyFrom(SnippetUI::SummaryItem_SwitchV2 *this, const SnippetUI::SummaryItem_SwitchV2 *a2)
{
  if (a2 != this)
  {
    SnippetUI::SummaryItem_SwitchV2::Clear(this);
    SnippetUI::SummaryItem_SwitchV2::MergeFrom(this, a2);
  }
}

void SnippetUI::SummaryItem_SwitchV2::InternalSwap(SnippetUI::SummaryItem_SwitchV2 *this, SnippetUI::SummaryItem_SwitchV2 *a2)
{
  uint64_t v4 = (SnippetUI::SummaryItem_SwitchV2 *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v26;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  char v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)char v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
  uint64_t v23 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v23;
  uint64_t v24 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v24;
  uint64_t v25 = *((void *)this + 10);
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 10);
  *((void *)a2 + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v25;
}

void __assign_helper_atomic_property__2637(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  *a1 = v3;
  a1[1] = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void *__copy_helper_atomic_property__2639(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  char *result = *a2;
  result[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1C5DDE554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DDE614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DDE6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

double _ZNSt3__115allocate_sharedB8ne180100IN4siri12dialogengine14PatternSettingENS_9allocatorIS3_EEJEvEENS_10shared_ptrIT_EERKT0_DpOT1_(void *a1)
{
  uint64_t v2 = (char *)operator new(0x180uLL);
  *(_OWORD *)(v2 + 8) = 0u;
  *(void *)uint64_t v2 = &unk_1F211F710;
  *(_OWORD *)(v2 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 12std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 20std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(v2 + 2google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *((void *)v2 + 47) = 0;
  *(_OWORD *)(v2 + 28std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(v2 + 296) = 0u;
  *(_OWORD *)(v2 + 312) = 0u;
  *(_OWORD *)(v2 + 328) = 0u;
  *(_OWORD *)(v2 + 344) = 0u;
  *(_OWORD *)(v2 + 36std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(v2 + 264) = 0u;
  siri::dialogengine::Parameter::Parameter((siri::dialogengine::Parameter *)(v2 + 24));
  *uint64_t v3 = &unk_1F211F818;
  *((void *)v2 + 33) = &unk_1F211F848;
  v3[38] = &unk_1F211F868;
  v3[42] = 0;
  double result = 0.0;
  *((_OWORD *)v2 + 23) = 0u;
  *a1 = v3;
  a1[1] = v2;
  return result;
}

double siri::dialogengine::Parameter::Parameter(siri::dialogengine::Parameter *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 12std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_WORD *)this + 76) = 256;
  *((unsigned char *)this + 154) = 1;
  *((_OWORD *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *(_OWORD *)((char *)this + 218) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 28std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((void *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 41) = 0;
  *((void *)this + 39) = (char *)this + 320;
  *(void *)this = &unk_1F2127140;
  *((void *)this + 3std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &unk_1F2127170;
  *((void *)this + 37) = 0;
  *((void *)this + 38) = &unk_1F2127190;
  return result;
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::PatternSetting>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::PatternSetting>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211F710;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::PatternSetting>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211F710;
  std::__shared_weak_count::~__shared_weak_count(this);
}

unint64_t siri::dialogengine::ParameterCollection::ParameterHash::operator()(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    if (*(char *)(v2 + 55) < 0) {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v2 + 32), *(void *)(v2 + 40));
    }
    else {
      std::string __p = *(std::string *)(v2 + 32);
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "");
  }
  unint64_t v3 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v6, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

uint64_t siri::dialogengine::ParameterCollection::ParameterEqual::operator()(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *a3;
  if (*a2)
  {
    if (v4)
    {
      if (*(char *)(v3 + 55) < 0)
      {
        std::string::__init_copy_ctor_external(&v22, *(const std::string::value_type **)(v3 + 32), *(void *)(v3 + 40));
        uint64_t v4 = *a3;
      }
      else
      {
        std::string v22 = *(std::string *)(v3 + 32);
      }
      if (*(char *)(v4 + 55) < 0) {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v4 + 32), *(void *)(v4 + 40));
      }
      else {
        std::string __p = *(std::string *)(v4 + 32);
      }
      char v7 = HIBYTE(v22.__r_.__value_.__r.__words[2]);
      if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v22.__r_.__value_.__l.__size_;
      }
      std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      int v10 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
      }
      if (size != v9)
      {
        BOOL v5 = 0;
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_34;
        }
        goto LABEL_37;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t p_p = &__p;
      }
      else {
        uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      {
        BOOL v5 = memcmp(v22.__r_.__value_.__l.__data_, p_p, v22.__r_.__value_.__l.__size_) == 0;
      }
      else
      {
        if (!*((unsigned char *)&v22.__r_.__value_.__s + 23))
        {
          BOOL v5 = 1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_34:
            if ((v7 & 0x80) == 0) {
              return v5;
            }
LABEL_38:
            operator delete(v22.__r_.__value_.__l.__data_);
            return v5;
          }
LABEL_37:
          operator delete(__p.__r_.__value_.__l.__data_);
          if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) == 0) {
            return v5;
          }
          goto LABEL_38;
        }
        uint64_t v12 = HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1;
        char v13 = &v22;
        do
        {
          int v15 = v13->__r_.__value_.__s.__data_[0];
          char v13 = (std::string *)((char *)v13 + 1);
          int v14 = v15;
          int v17 = p_p->__r_.__value_.__s.__data_[0];
          uint64_t p_p = (std::string *)((char *)p_p + 1);
          int v16 = v17;
          BOOL v19 = v12-- != 0;
          BOOL v5 = v14 == v16;
        }
        while (v14 == v16 && v19);
      }
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      goto LABEL_37;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

void sub_1C5DDEB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::ParameterCollection::AddParameter(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    if (*(char *)(v2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(&v14, *(const std::string::value_type **)(v2 + 8), *(void *)(v2 + 16));
    }
    else
    {
      long long v5 = *(_OWORD *)(v2 + 8);
      v14.__r_.__value_.__r.__words[2] = *(void *)(v2 + 24);
      *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v5;
    }
    if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v14.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v14.__r_.__value_.__l.__size_;
    }
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v14.__r_.__value_.__l.__data_);
      if (!size) {
        return;
      }
    }
    else if (!size)
    {
      return;
    }
    uint64_t v7 = *a2;
    if (*(char *)(*a2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v7 + 8), *(void *)(v7 + 16));
    }
    else
    {
      long long v8 = *(_OWORD *)(v7 + 8);
      __p.__r_.__value_.__r.__words[2] = *(void *)(v7 + 24);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v8;
    }
    std::string::size_type v9 = (void **)std::__tree<std::string>::__find_equal<std::string>(a1, &v15, &__p);
    int v10 = (char *)*v9;
    if (!*v9)
    {
      long long v11 = (uint64_t **)v9;
      int v10 = (char *)operator new(0x60uLL);
      v14.__r_.__value_.__l.__size_ = a1 + 8;
      *(std::string *)(v10 + 32) = __p;
      memset(&__p, 0, sizeof(__p));
      *(_OWORD *)(v10 + 56) = 0u;
      *(_OWORD *)(v10 + 72) = 0u;
      *((_DWORD *)v10 + 22) = 1065353216;
      v14.__r_.__value_.__s.__data_[16] = 1;
      std::__tree<std::string>::__insert_node_at((uint64_t **)a1, v15, v11, (uint64_t *)v10);
      v14.__r_.__value_.__r.__words[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v14);
    }
    char v12 = std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__emplace_unique_key_args<std::shared_ptr<siri::dialogengine::Parameter>,std::shared_ptr<siri::dialogengine::Parameter> const&>((uint64_t)(v10 + 56), a2, a2);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v12) {
      *(unsigned char *)(a1 + 24) = 1;
    }
  }
}

void sub_1C5DDECD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__emplace_unique_key_args<std::shared_ptr<siri::dialogengine::Parameter>,std::shared_ptr<siri::dialogengine::Parameter> const&>(uint64_t a1, uint64_t *a2, void *a3)
{
  unint64_t v7 = siri::dialogengine::ParameterCollection::ParameterHash::operator()(a1, a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    char v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      char v13 = (void *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v8)
          {
            unint64_t v7 = siri::dialogengine::ParameterCollection::ParameterEqual::operator()(v7, v13 + 2, a2);
            if (v7) {
              return 0;
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9) {
                v14 %= v9;
              }
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v3) {
              break;
            }
          }
          char v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  uint64_t v15 = operator new(0x20uLL);
  void *v15 = 0;
  v15[1] = v8;
  uint64_t v16 = a3[1];
  v15[2] = *a3;
  v15[3] = v16;
  if (v16) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  }
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    BOOL v19 = 1;
    if (v9 >= 3) {
      BOOL v19 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v9);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  uint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    void *v15 = *v24;
LABEL_40:
    *uint64_t v24 = v15;
    goto LABEL_41;
  }
  void *v15 = *(void *)(a1 + 16);
  *(void *)(a1 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v15;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v25 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v25 >= v9) {
        v25 %= v9;
      }
    }
    else
    {
      v25 &= v9 - 1;
    }
    uint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_40;
  }
LABEL_41:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1C5DDEF24(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::shared_ptr<siri::dialogengine::Parameter>,void *>>>::operator()[abi:ne180100](1, v1);
  _Unwind_Resume(a1);
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::shared_ptr<siri::dialogengine::Parameter>,void *>>>::operator()[abi:ne180100](char a1, void *__p)
{
  if (a1)
  {
    unint64_t v3 = (std::__shared_weak_count *)__p[3];
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,0>(uint64_t a1)
{
  std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::~__hash_table(a1 + 24);
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__deallocate_node(*(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__deallocate_node(void *__p)
{
  if (__p)
  {
    uint64_t v1 = __p;
    do
    {
      uint64_t v2 = (void *)*v1;
      unint64_t v3 = (std::__shared_weak_count *)v1[3];
      if (v3) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v3);
      }
      operator delete(v1);
      uint64_t v1 = v2;
    }
    while (v2);
  }
}

void siri::dialogengine::ParameterCollection::RemoveParameter(uint64_t a1, void *a2)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    char v6 = (uint64_t *)(a1 + 8);
    unint64_t v7 = *(void **)(a1 + 8);
    do
    {
      BOOL v8 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v7 + 4, a2);
      unint64_t v9 = v7 + 1;
      if (!v8)
      {
        unint64_t v9 = v7;
        char v6 = v7;
      }
      unint64_t v7 = (void *)*v9;
    }
    while (*v9);
    if (v6 != v3 && !std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, v6 + 4))
    {
      uint8x8_t v10 = (uint64_t *)v6[1];
      if (v10)
      {
        do
        {
          unint64_t v11 = v10;
          uint8x8_t v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
      else
      {
        char v12 = v6;
        do
        {
          unint64_t v11 = (uint64_t *)v12[2];
          BOOL v13 = *v11 == (void)v12;
          char v12 = v11;
        }
        while (!v13);
      }
      if (*(uint64_t **)a1 == v6) {
        *(void *)a1 = v11;
      }
      --*(void *)(a1 + 16);
      std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v2, v6);
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,0>((uint64_t)(v6 + 4));
      operator delete(v6);
      *(unsigned char *)(a1 + 24) = 1;
    }
  }
}

uint64_t *siri::dialogengine::ParameterCollection::GetNames@<X0>(uint64_t *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)a2 = a2 + 8;
  uint64_t v2 = this + 1;
  unint64_t v3 = (void *)*this;
  if ((uint64_t *)*this != this + 1)
  {
    do
    {
      this = std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)a2, v3 + 4, (uint64_t)(v3 + 4));
      long long v5 = (uint64_t *)v3[1];
      if (v5)
      {
        do
        {
          char v6 = v5;
          long long v5 = (uint64_t *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          char v6 = (uint64_t *)v3[2];
          BOOL v7 = *v6 == (void)v3;
          unint64_t v3 = v6;
        }
        while (!v7);
      }
      unint64_t v3 = v6;
    }
    while (v6 != v2);
  }
  return this;
}

void sub_1C5DDF24C(_Unwind_Exception *a1)
{
  std::__tree<std::string>::destroy(*v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ParameterCollection::GetParameters(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = (void *)(a1 + 8);
  long long v5 = *(void **)(a1 + 8);
  if (!v5) {
    goto LABEL_8;
  }
  BOOL v7 = (void *)(a1 + 8);
  do
  {
    BOOL v8 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v5 + 4, a2);
    unint64_t v9 = v5 + 1;
    if (!v8)
    {
      unint64_t v9 = v5;
      BOOL v7 = v5;
    }
    long long v5 = (void *)*v9;
  }
  while (*v9);
  if (v7 == v4 || std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(a2, v7 + 4))
  {
LABEL_8:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
    *(_DWORD *)(a3 + 32) = 1065353216;
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
    *(_DWORD *)(a3 + 32) = *((_DWORD *)v7 + 22);
    for (int i = (void *)v7[9]; i; int i = (void *)*i)
      std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__emplace_unique_key_args<std::shared_ptr<siri::dialogengine::Parameter>,std::shared_ptr<siri::dialogengine::Parameter> const&>(a3, i + 2, i + 2);
  }
}

void sub_1C5DDF330(_Unwind_Exception *a1)
{
  std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ParameterCollection::GetUniqueParameters(uint64_t **this@<X0>, siri::dialogengine::Context *a2@<X1>, uint64_t **a3@<X8>)
{
  siri::dialogengine::ParameterCollection::Consolidate(this, a2);
  a3[1] = 0;
  long long v5 = a3 + 1;
  a3[2] = 0;
  *a3 = (uint64_t *)(a3 + 1);
  BOOL v8 = *this;
  char v6 = (uint64_t *)(this + 1);
  BOOL v7 = v8;
  if (v8 != v6)
  {
    do
    {
      if (v7[10])
      {
        uint64_t v9 = v7[9];
        uint8x8_t v10 = a3 + 1;
        unint64_t v11 = a3 + 1;
        if (*v5)
        {
          char v12 = *v5;
          while (1)
          {
            while (1)
            {
              uint8x8_t v10 = (uint64_t **)v12;
              BOOL v13 = v12 + 4;
              if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v7 + 4, v12 + 4)) {
                break;
              }
              char v12 = *v10;
              unint64_t v11 = v10;
              if (!*v10) {
                goto LABEL_10;
              }
            }
            if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v13, v7 + 4)) {
              break;
            }
            unint64_t v11 = v10 + 1;
            char v12 = v10[1];
            if (!v12) {
              goto LABEL_10;
            }
          }
          unint64_t v14 = v10;
        }
        else
        {
LABEL_10:
          unint64_t v14 = operator new(0x48uLL);
          v25[0] = v14;
          v25[1] = a3 + 1;
          char v26 = 0;
          uint64_t v15 = (std::string *)(v14 + 4);
          if (*((char *)v7 + 55) < 0)
          {
            std::string::__init_copy_ctor_external(v15, (const std::string::value_type *)v7[4], v7[5]);
          }
          else
          {
            long long v16 = *((_OWORD *)v7 + 2);
            v14[6] = v7[6];
            *(_OWORD *)&v15->__r_.__value_.__l.__data_ = v16;
          }
          v14[7] = 0;
          v14[8] = 0;
          char v26 = 1;
          void *v14 = 0;
          v14[1] = 0;
          v14[2] = v10;
          *unint64_t v11 = v14;
          float v17 = (uint64_t *)**a3;
          float v18 = v14;
          if (v17)
          {
            *a3 = v17;
            float v18 = *v11;
          }
          std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a3[1], v18);
          a3[2] = (uint64_t *)((char *)a3[2] + 1);
          v25[0] = 0;
          std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)v25);
        }
        uint64_t v20 = *(void *)(v9 + 16);
        uint64_t v19 = *(void *)(v9 + 24);
        if (v19) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
        }
        unint64_t v21 = (std::__shared_weak_count *)v14[8];
        v14[7] = v20;
        v14[8] = v19;
        if (v21) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v21);
        }
      }
      size_t v22 = (uint64_t *)v7[1];
      if (v22)
      {
        do
        {
          uint64_t v23 = v22;
          size_t v22 = (uint64_t *)*v22;
        }
        while (v22);
      }
      else
      {
        do
        {
          uint64_t v23 = (uint64_t *)v7[2];
          BOOL v24 = *v23 == (void)v7;
          BOOL v7 = v23;
        }
        while (!v24);
      }
      BOOL v7 = v23;
    }
    while (v23 != v6);
  }
}

void sub_1C5DDF50C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*v2);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ParameterCollection::Consolidate(uint64_t **this, siri::dialogengine::Context *a2)
{
  if (*((unsigned char *)this + 24))
  {
    unint64_t v3 = *this;
    uint64_t v20 = (uint64_t *)(this + 1);
    if (*this != (uint64_t *)(this + 1))
    {
      do
      {
        *(_OWORD *)std::string __p = 0u;
        *(_OWORD *)size_t v22 = 0u;
        int v23 = 1065353216;
        long long v5 = (void *)v3[9];
        char v6 = v5;
        if (v5)
        {
          while (1)
          {
            BOOL v7 = v6 + 2;
            if (v5)
            {
              while (1)
              {
                uint64_t v8 = v5[2];
                if (*(char *)(v8 + 55) < 0) {
                  std::string::__init_copy_ctor_external(&v25, *(const std::string::value_type **)(v8 + 32), *(void *)(v8 + 40));
                }
                else {
                  std::string v25 = *(std::string *)(v8 + 32);
                }
                uint64_t v9 = *v7;
                if (*(char *)(*v7 + 55) < 0) {
                  std::string::__init_copy_ctor_external(&v24, *(const std::string::value_type **)(v9 + 32), *(void *)(v9 + 40));
                }
                else {
                  std::string v24 = *(std::string *)(v9 + 32);
                }
                char IsTypeAnExtensionOfBaseType = siri::dialogengine::IsTypeAnExtensionOfBaseType((uint64_t)&v25, (unsigned __int8 *)&v24, (uint64_t)a2);
                if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v24.__r_.__value_.__l.__data_);
                }
                if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v25.__r_.__value_.__l.__data_);
                }
                if (IsTypeAnExtensionOfBaseType) {
                  break;
                }
                long long v5 = (void *)*v5;
                if (!v5) {
                  goto LABEL_17;
                }
              }
              uint64_t v12 = *v7;
              if (*(char *)(*v7 + 55) < 0) {
                std::string::__init_copy_ctor_external(&v25, *(const std::string::value_type **)(v12 + 32), *(void *)(v12 + 40));
              }
              else {
                std::string v25 = *(std::string *)(v12 + 32);
              }
              if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                unint64_t v14 = &v25;
              }
              else {
                unint64_t v14 = (std::string *)v25.__r_.__value_.__r.__words[0];
              }
              siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Parameter type '%s' is the base of another type; Excluding it",
                (const char *)a2,
                v14);
              if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v25.__r_.__value_.__l.__data_);
              }
            }
            else
            {
LABEL_17:
              uint64_t v11 = *v7;
              if (*(char *)(*v7 + 55) < 0) {
                std::string::__init_copy_ctor_external(&v25, *(const std::string::value_type **)(v11 + 32), *(void *)(v11 + 40));
              }
              else {
                std::string v25 = *(std::string *)(v11 + 32);
              }
              if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                BOOL v13 = &v25;
              }
              else {
                BOOL v13 = (std::string *)v25.__r_.__value_.__r.__words[0];
              }
              siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Parameter type '%s' is not the base of any other type; Including it",
                (const char *)a2,
                v13);
              if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v25.__r_.__value_.__l.__data_);
              }
              std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__emplace_unique_key_args<std::shared_ptr<siri::dialogengine::Parameter>,std::shared_ptr<siri::dialogengine::Parameter> const&>((uint64_t)__p, v6 + 2, v6 + 2);
            }
            char v6 = (void *)*v6;
            if (!v6) {
              break;
            }
            long long v5 = (void *)v3[9];
          }
        }
        v25.__r_.__value_.__r.__words[0] = (std::string::size_type)(v3 + 4);
        uint64_t v15 = std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(this, v3 + 4, (long long **)&v25);
        if (v15 + 56 != (char *)__p)
        {
          *((_DWORD *)v15 + 22) = v23;
          std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::shared_ptr<siri::dialogengine::Parameter>,void *> *>>((void *)v15 + 7, (void *)v22[0]);
        }
        std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__deallocate_node((void *)v22[0]);
        long long v16 = __p[0];
        __p[0] = 0;
        if (v16) {
          operator delete(v16);
        }
        float v17 = (uint64_t *)v3[1];
        if (v17)
        {
          do
          {
            float v18 = v17;
            float v17 = (uint64_t *)*v17;
          }
          while (v17);
        }
        else
        {
          do
          {
            float v18 = (uint64_t *)v3[2];
            BOOL v19 = *v18 == (void)v3;
            unint64_t v3 = v18;
          }
          while (!v19);
        }
        unint64_t v3 = v18;
      }
      while (v18 != v20);
    }
    *((unsigned char *)this + 24) = 0;
  }
}

void sub_1C5DDF7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
}

char *std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(uint64_t **a1, void *a2, long long **a3)
{
  long long v5 = (void **)std::__tree<std::string>::__find_equal<std::string>((uint64_t)a1, &v14, a2);
  char v6 = (char *)*v5;
  if (!*v5)
  {
    BOOL v7 = (uint64_t **)v5;
    char v6 = (char *)operator new(0x60uLL);
    v12[0] = v6;
    v12[1] = a1 + 1;
    char v13 = 0;
    uint64_t v8 = (std::string *)(v6 + 32);
    uint64_t v9 = *a3;
    if (*((char *)*a3 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(v8, *(const std::string::value_type **)v9, *((void *)v9 + 1));
    }
    else
    {
      long long v10 = *v9;
      *((void *)v6 + 6) = *((void *)v9 + 2);
      *(_OWORD *)&v8->__r_.__value_.__l.__data_ = v10;
    }
    *(_OWORD *)(v6 + 72) = 0u;
    *(_OWORD *)(v6 + 56) = 0u;
    *((_DWORD *)v6 + 22) = 1065353216;
    char v13 = 1;
    std::__tree<std::string>::__insert_node_at(a1, v14, v7, (uint64_t *)v6);
    v12[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v12);
  }
  return v6;
}

void sub_1C5DDF8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::shared_ptr<siri::dialogengine::Parameter>,void *> *>>(void *a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a1[1];
  if (v4)
  {
    for (uint64_t i = 0; i != v4; ++i)
      *(void *)(*a1 + 8 * i) = 0;
    char v6 = (void *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v6) {
      BOOL v7 = a2 == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (v7)
    {
      uint64_t v8 = v6;
    }
    else
    {
      do
      {
        uint64_t v10 = v2[2];
        uint64_t v9 = v2[3];
        if (v9) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t v11 = (std::__shared_weak_count *)v6[3];
        v6[2] = v10;
        _OWORD v6[3] = v9;
        if (v11) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v11);
        }
        uint64_t v8 = (void *)*v6;
        std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__node_insert_multi((uint64_t)a1, v6);
        uint64_t v2 = (void *)*v2;
        if (!v8) {
          break;
        }
        char v6 = v8;
      }
      while (v2);
    }
    std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__deallocate_node(v8);
  }
  for (; v2; uint64_t v2 = (void *)*v2)
  {
    uint64_t v12 = operator new(0x20uLL);
    char v13 = v12;
    *uint64_t v12 = 0;
    v12[1] = 0;
    uint64_t v14 = v2[3];
    void v12[2] = v2[2];
    v12[3] = v14;
    if (v14) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
    }
    v12[1] = siri::dialogengine::ParameterCollection::ParameterHash::operator()((uint64_t)v12, v12 + 2);
    std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__node_insert_multi((uint64_t)a1, v13);
  }
}

void sub_1C5DDFA1C(void *a1)
{
  __cxa_begin_catch(a1);
  std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__deallocate_node(v1);
  __cxa_rethrow();
}

void sub_1C5DDFA30(_Unwind_Exception *a1)
{
}

void std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__node_insert_multi(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2 + 2;
  unint64_t prime = siri::dialogengine::ParameterCollection::ParameterHash::operator()(a1, a2 + 2);
  unint64_t v6 = prime;
  v2[1] = prime;
  unint64_t v7 = *(void *)(a1 + 8);
  float v8 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v9 = *(float *)(a1 + 32);
  if (!v7 || (float)(v9 * (float)v7) < v8)
  {
    BOOL v10 = 1;
    if (v7 >= 3) {
      BOOL v10 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v11 = v10 | (2 * v7);
    unint64_t v12 = vcvtps_u32_f32(v8 / v9);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    if (v13 == 1)
    {
      size_t v13 = 2;
    }
    else if ((v13 & (v13 - 1)) != 0)
    {
      unint64_t prime = std::__next_prime(v13);
      size_t v13 = prime;
      unint64_t v7 = *(void *)(a1 + 8);
    }
    unsigned int v42 = v4;
    unsigned int v43 = v2;
    if (v13 > v7)
    {
LABEL_13:
      if (v13 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v14 = operator new(8 * v13);
      unint64_t prime = *(void *)a1;
      *(void *)a1 = v14;
      if (prime) {
        operator delete((void *)prime);
      }
      uint64_t v15 = 0;
      *(void *)(a1 + 8) = v13;
      do
        *(void *)(*(void *)a1 + 8 * v15++) = 0;
      while (v13 != v15);
      long long v16 = *(void **)(a1 + 16);
      if (v16)
      {
        size_t v17 = v16[1];
        uint8x8_t v18 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
        v18.i16[0] = vaddlv_u8(v18);
        unint64_t v19 = v18.u32[0];
        if (v18.u32[0] > 1uLL)
        {
          if (v17 >= v13) {
            v17 %= v13;
          }
        }
        else
        {
          v17 &= v13 - 1;
        }
        *(void *)(*(void *)a1 + 8 * v17) = a1 + 16;
        size_t v22 = (void *)*v16;
        if (*v16)
        {
          size_t v23 = v13 - 1;
          unint64_t v41 = v18.u32[0];
          do
          {
            size_t v24 = v22[1];
            if (v19 > 1)
            {
              if (v24 >= v13) {
                v24 %= v13;
              }
            }
            else
            {
              v24 &= v23;
            }
            if (v24 == v17)
            {
              long long v16 = v22;
            }
            else if (*(void *)(*(void *)a1 + 8 * v24))
            {
              std::string v25 = (void *)*v22;
              if (*v22)
              {
                unint64_t v26 = v6;
                size_t v27 = v23;
                uint64_t v28 = v22;
                while (1)
                {
                  unint64_t prime = siri::dialogengine::ParameterCollection::ParameterEqual::operator()(prime, v22 + 2, v25 + 2);
                  uint64_t v29 = (void *)*v28;
                  if (!prime) {
                    break;
                  }
                  std::string v25 = (void *)*v29;
                  uint64_t v28 = (void *)*v28;
                  if (!*v29) {
                    goto LABEL_46;
                  }
                }
                std::string v25 = (void *)*v28;
                uint64_t v29 = v28;
LABEL_46:
                size_t v23 = v27;
                unint64_t v6 = v26;
                unint64_t v19 = v41;
              }
              else
              {
                uint64_t v29 = v22;
              }
              *long long v16 = v25;
              *uint64_t v29 = **(void **)(*(void *)a1 + 8 * v24);
              **(void **)(*(void *)a1 + 8 * v24) = v22;
            }
            else
            {
              *(void *)(*(void *)a1 + 8 * v24) = v16;
              long long v16 = v22;
              size_t v17 = v24;
            }
            size_t v22 = (void *)*v16;
          }
          while (*v16);
        }
      }
      goto LABEL_58;
    }
    if (v13 < v7)
    {
      unint64_t prime = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (uint8x8_t v20 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v20.i16[0] = vaddlv_u8(v20), v20.u32[0] > 1uLL))
      {
        unint64_t prime = std::__next_prime(prime);
      }
      else
      {
        uint64_t v21 = 1 << -(char)__clz(prime - 1);
        if (prime >= 2) {
          unint64_t prime = v21;
        }
      }
      if (v13 <= prime) {
        size_t v13 = prime;
      }
      if (v13 < v7)
      {
        if (v13) {
          goto LABEL_13;
        }
        unint64_t prime = *(void *)a1;
        *(void *)a1 = 0;
        if (prime) {
          operator delete((void *)prime);
        }
        *(void *)(a1 + 8) = 0;
      }
    }
LABEL_58:
    unint64_t v7 = *(void *)(a1 + 8);
    uint64_t v4 = v42;
    uint64_t v2 = v43;
  }
  uint8x8_t v30 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
  v30.i16[0] = vaddlv_u8(v30);
  unint64_t v31 = v30.u32[0];
  if (v30.u32[0] > 1uLL)
  {
    unint64_t v32 = v6;
    if (v7 <= v6) {
      unint64_t v32 = v6 % v7;
    }
  }
  else
  {
    unint64_t v32 = (v7 - 1) & v6;
  }
  unsigned int v33 = *(void **)(*(void *)a1 + 8 * v32);
  if (v33)
  {
    char v34 = (void *)*v33;
    if (*v33)
    {
      int v35 = 0;
      do
      {
        unint64_t v36 = v34[1];
        if (v31 > 1)
        {
          unint64_t v37 = v34[1];
          if (v36 >= v7) {
            unint64_t v37 = v36 % v7;
          }
        }
        else
        {
          unint64_t v37 = v36 & (v7 - 1);
        }
        if (v37 != v32) {
          break;
        }
        unint64_t prime = v36 == v6
              ? siri::dialogengine::ParameterCollection::ParameterEqual::operator()(prime, v34 + 2, v4)
              : 0;
        if (v35 & (prime ^ 1)) {
          break;
        }
        v35 |= prime;
        unsigned int v33 = (void *)*v33;
        char v34 = (void *)*v33;
      }
      while (*v33);
      unint64_t v7 = *(void *)(a1 + 8);
      uint8x8_t v38 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
      v38.i16[0] = vaddlv_u8(v38);
      unint64_t v31 = v38.u32[0];
    }
  }
  unint64_t v39 = v2[1];
  if (v31 > 1)
  {
    if (v39 >= v7) {
      v39 %= v7;
    }
  }
  else
  {
    v39 &= v7 - 1;
  }
  if (!v33)
  {
    *uint64_t v2 = *(void *)(a1 + 16);
    *(void *)(a1 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v2;
    *(void *)(*(void *)a1 + 8 * v39) = a1 + 16;
    if (!*v2) {
      goto LABEL_95;
    }
    unint64_t v40 = *(void *)(*v2 + 8);
    if (v31 > 1)
    {
      if (v40 >= v7) {
        v40 %= v7;
      }
    }
    else
    {
      v40 &= v7 - 1;
    }
LABEL_94:
    *(void *)(*(void *)a1 + 8 * v4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v2;
    goto LABEL_95;
  }
  *uint64_t v2 = *v33;
  *unsigned int v33 = v2;
  if (*v2)
  {
    unint64_t v40 = *(void *)(*v2 + 8);
    if (v31 > 1)
    {
      if (v40 >= v7) {
        v40 %= v7;
      }
    }
    else
    {
      v40 &= v7 - 1;
    }
    if (v40 != v39) {
      goto LABEL_94;
    }
  }
LABEL_95:
  ++*(void *)(a1 + 24);
}

void siri::dialogengine::ParameterCollection::GetConflictingParameters(uint64_t **this@<X0>, siri::dialogengine::Context *a2@<X1>, uint64_t **a3@<X8>)
{
  siri::dialogengine::ParameterCollection::Consolidate(this, a2);
  a3[1] = 0;
  a3[2] = 0;
  unint64_t v31 = a3;
  *a3 = (uint64_t *)(a3 + 1);
  unint64_t v7 = *this;
  unint64_t v5 = (unint64_t)(this + 1);
  unint64_t v6 = v7;
  if (v7 == (uint64_t *)v5) {
    return;
  }
  unint64_t v32 = (char *)v5;
  do
  {
    if ((unint64_t)v6[10] < 2) {
      goto LABEL_53;
    }
    long long v34 = 0u;
    long long v35 = 0u;
    float v36 = 1.0;
    float v8 = (void *)v6[9];
    if (!v8) {
      goto LABEL_52;
    }
    do
    {
      uint64_t v9 = v8[2];
      if (*(char *)(v9 + 55) < 0) {
        std::string::__init_copy_ctor_external(&v33, *(const std::string::value_type **)(v9 + 32), *(void *)(v9 + 40));
      }
      else {
        std::string v33 = *(std::string *)(v9 + 32);
      }
      unint64_t v10 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)&v35 + 8, (uint64_t)&v33);
      unint64_t v11 = v10;
      unint64_t v12 = *((void *)&v34 + 1);
      if (*((void *)&v34 + 1))
      {
        uint8x8_t v13 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)&v34 + 8));
        v13.i16[0] = vaddlv_u8(v13);
        unint64_t v14 = v13.u32[0];
        if (v13.u32[0] > 1uLL)
        {
          unint64_t v5 = v10;
          if (v10 >= *((void *)&v34 + 1)) {
            unint64_t v5 = v10 % *((void *)&v34 + 1);
          }
        }
        else
        {
          unint64_t v5 = (*((void *)&v34 + 1) - 1) & v10;
        }
        uint64_t v15 = *(unsigned __int8 ***)(v34 + 8 * v5);
        if (v15)
        {
          for (uint64_t i = *v15; i; uint64_t i = *(unsigned __int8 **)i)
          {
            unint64_t v17 = *((void *)i + 1);
            if (v17 == v11)
            {
              if (std::equal_to<std::string>::operator()[abi:ne180100]((uint64_t)&v36, i + 16, (unsigned __int8 *)&v33)) {
                goto LABEL_46;
              }
            }
            else
            {
              if (v14 > 1)
              {
                if (v17 >= v12) {
                  v17 %= v12;
                }
              }
              else
              {
                v17 &= v12 - 1;
              }
              if (v17 != v5) {
                break;
              }
            }
          }
        }
      }
      uint8x8_t v18 = (char *)operator new(0x28uLL);
      v37[1] = &v35;
      *(void *)uint8x8_t v18 = 0;
      *((void *)v18 + 1) = v11;
      *(std::string *)(v18 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v33;
      memset(&v33, 0, sizeof(v33));
      char v38 = 1;
      float v19 = (float)(unint64_t)(*((void *)&v35 + 1) + 1);
      if (!v12 || (float)(v36 * (float)v12) < v19)
      {
        BOOL v20 = (v12 & (v12 - 1)) != 0;
        if (v12 < 3) {
          BOOL v20 = 1;
        }
        unint64_t v21 = v20 | (2 * v12);
        unint64_t v22 = vcvtps_u32_f32(v19 / v36);
        if (v21 <= v22) {
          size_t v23 = v22;
        }
        else {
          size_t v23 = v21;
        }
        std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>((uint64_t)&v34, v23);
        unint64_t v12 = *((void *)&v34 + 1);
        if ((*((void *)&v34 + 1) & (*((void *)&v34 + 1) - 1)) != 0)
        {
          if (v11 >= *((void *)&v34 + 1)) {
            unint64_t v5 = v11 % *((void *)&v34 + 1);
          }
          else {
            unint64_t v5 = v11;
          }
        }
        else
        {
          unint64_t v5 = (*((void *)&v34 + 1) - 1) & v11;
        }
      }
      uint64_t v24 = v34;
      std::string v25 = *(void **)(v34 + 8 * v5);
      if (v25)
      {
        *(void *)uint8x8_t v18 = *v25;
LABEL_44:
        void *v25 = v18;
        goto LABEL_45;
      }
      *(void *)uint8x8_t v18 = v35;
      *(void *)&long long v35 = v18;
      *(void *)(v24 + 8 * v5) = &v35;
      if (*(void *)v18)
      {
        unint64_t v26 = *(void *)(*(void *)v18 + 8);
        if ((v12 & (v12 - 1)) != 0)
        {
          if (v26 >= v12) {
            v26 %= v12;
          }
        }
        else
        {
          v26 &= v12 - 1;
        }
        std::string v25 = (void *)(v34 + 8 * v26);
        goto LABEL_44;
      }
LABEL_45:
      ++*((void *)&v35 + 1);
LABEL_46:
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v33.__r_.__value_.__l.__data_);
      }
      float v8 = (void *)*v8;
    }
    while (v8);
    if (*((void *)&v35 + 1) > 1uLL)
    {
      v37[0] = (long long *)(v6 + 4);
      size_t v27 = std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string const&>,std::tuple<>>(v31, v6 + 4, v37);
      if (v6 != (uint64_t *)v27)
      {
        *((_DWORD *)v27 + 22) = *((_DWORD *)v6 + 22);
        std::__hash_table<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>::__assign_multi<std::__hash_const_iterator<std::__hash_node<std::shared_ptr<siri::dialogengine::Parameter>,void *> *>>((void *)v27 + 7, (void *)v6[9]);
      }
    }
LABEL_52:
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table((uint64_t)&v34);
    unint64_t v5 = (unint64_t)v32;
LABEL_53:
    uint64_t v28 = (uint64_t *)v6[1];
    if (v28)
    {
      do
      {
        uint64_t v29 = v28;
        uint64_t v28 = (uint64_t *)*v28;
      }
      while (v28);
    }
    else
    {
      do
      {
        uint64_t v29 = (uint64_t *)v6[2];
        BOOL v30 = *v29 == (void)v6;
        unint64_t v6 = v29;
      }
      while (!v30);
    }
    unint64_t v6 = v29;
  }
  while (v29 != (uint64_t *)v5);
}

void sub_1C5DE0254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22)
{
}

void std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,std::less<void>,true>,std::allocator<std::__value_type<std::string,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::unordered_set<std::shared_ptr<siri::dialogengine::Parameter>,siri::dialogengine::ParameterCollection::ParameterHash,siri::dialogengine::ParameterCollection::ParameterEqual,std::allocator<std::shared_ptr<siri::dialogengine::Parameter>>>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void InitDefaultsscc_info_Visualization_Chart_Visualization_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", a4);
  SnippetUI::Visualization_Chart::Visualization_Chart((SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Visualization_Chart_default_instance_, v4);
  qword_1EB68FE20 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FE28 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FE30 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FE38 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::Visualization_Chart *SnippetUI::Visualization_Chart::Visualization_Chart(SnippetUI::Visualization_Chart *this)
{
  *(void *)this = &unk_1F211CD20;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  if (atomic_load_explicit(scc_info_Visualization_Chart_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Chart_Visualization_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return this;
}

void sub_1C5DE03FC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Visualization_Chart::GetMetadata(SnippetUI::Visualization_Chart *this)
{
  return file_level_metadata_Visualization_2eproto;
}

void InitDefaultsscc_info_Visualization_Map_Visualization_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", a4);
  SnippetUI::Visualization_Map::Visualization_Map((SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Visualization_Map_default_instance_, v4);
  qword_1EB68FB28 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FB30 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FB38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FB40 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::Visualization_Map *SnippetUI::Visualization_Map::Visualization_Map(SnippetUI::Visualization_Map *this)
{
  *(void *)this = &unk_1F211CEA0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  if (atomic_load_explicit(scc_info_Visualization_Map_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Map_Visualization_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return this;
}

void sub_1C5DE053C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Visualization_Map::GetMetadata(SnippetUI::Visualization_Map *this)
{
  return qword_1EA3D8808;
}

uint64_t SnippetUI::Visualization_Map::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void SnippetUI::Visualization_Map::MergeFrom(SnippetUI::Visualization_Map *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 1404);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Visualization_Map::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DE0658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Map::MergeFrom(SnippetUI::Visualization_Map *this, const SnippetUI::Visualization_Map *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 1419);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Map *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_)
  {
    unint64_t v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      unint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        unint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 4) = v11;
        unint64_t v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        unint64_t v12 = v10;
      }
      else {
        unint64_t v12 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v11, v12);
    }
    uint8x8_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unint64_t v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unint64_t v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint8x8_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    long long v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unint64_t v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unint64_t v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        long long v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint8x8_t v18 = v16;
      }
      else {
        uint8x8_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    float v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v20;
        float v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unint64_t v21 = v19;
      }
      else {
        unint64_t v21 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v20, v21);
    }
  }
}

void sub_1C5DE0864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Map::CopyFrom(SnippetUI::Visualization_Map *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Map::Clear(this);
    SnippetUI::Visualization_Map::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Map::Clear(SnippetUI::Visualization_Map *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (SnippetUI::Visualization_Map *)((char *)this + 8);
  *((void *)v8 + 6) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v8);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Visualization_Map::InternalSerializeWithCachedSizesToArray(SnippetUI::Visualization_Map *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_) {
    goto LABEL_49;
  }
  uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unint64_t v12 = v5 + 2;
        do
        {
          uint8x8_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        unint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *unint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    unint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      BOOL v30 = v5 + 2;
      do
      {
        unint64_t v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *BOOL v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        char v38 = v5 + 2;
        do
        {
          unint64_t v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        float v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *char v38 = v40;
      }
      else
      {
        v5[2] = v37;
        float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  unsigned int v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    unsigned int v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    unsigned int v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  unsigned int v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Map.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  unsigned int v44 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v44 + 23) < 0)
  {
    uint64_t v45 = (const char *)*((void *)v44 + 1);
    if (!v45) {
      goto LABEL_61;
    }
    unsigned int v44 = *(google::protobuf::internal **)v44;
    goto LABEL_60;
  }
  uint64_t v45 = (const char *)*((unsigned __int8 *)v44 + 23);
  if (*((unsigned char *)v44 + 23))
  {
LABEL_60:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v44, v45, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Map.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 3), v5);
  }
LABEL_61:
  uint64_t v46 = *((void *)this + 1);
  if ((v46 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v46 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Visualization_Map::_InternalParse(SnippetUI::Visualization_Map *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unint64_t v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unint64_t v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        unint64_t v11 = (SnippetUI::VisualProperty *)*((void *)this + 4);
        if (!v11)
        {
          unint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 4) = v11;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v11, TagFallback);
        goto LABEL_38;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_18;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v13;
LABEL_18:
        TagFallback = v21;
LABEL_19:
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_38;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_38;
      case 5u:
        if (v10 != 42) {
          goto LABEL_33;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Map.component_name";
        goto LABEL_32;
      case 6u:
        if (v10 != 50) {
          goto LABEL_33;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Map.link_identifier";
LABEL_32:
        unint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_38;
      default:
LABEL_33:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        unint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_38:
        unint64_t v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::Visualization_Map::GetCachedSize(SnippetUI::Visualization_Map *this)
{
  return *((unsigned int *)this + 16);
}

char *SnippetUI::Visualization_Map::ByteSizeLong(SnippetUI::Visualization_Map *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_)
  {
    uint64_t v9 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::VisualProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      unint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v15)
    {
      long long v16 = SnippetUI::ActionProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Visualization_Map *)((char *)this + 8), v5, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::Visualization_Map::IsInitialized(SnippetUI::Visualization_Map *this)
{
  return 1;
}

SnippetUI::Visualization_Map *SnippetUI::Visualization_Map::New(SnippetUI::Visualization_Map *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Map>(a2);
}

SnippetUI::Visualization_Map *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Map>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Visualization_Map *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Map>);
  }
  SnippetUI::Visualization_Map::Visualization_Map(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DE12E4(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4025EBE0BELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Map>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Visualization_Map *SnippetUI::Visualization_Map::New(SnippetUI::Visualization_Map *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Map>(0);
}

void SnippetUI::Visualization_Map::~Visualization_Map(SnippetUI::Visualization_Map *this)
{
  SnippetUI::Visualization_Map::~Visualization_Map(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)this = &unk_1F211CEA0;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_Visualization_Image_Visualization_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", a4);
  SnippetUI::Visualization_Image::Visualization_Image((SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Visualization_Image_default_instance_, v4);
  qword_1EB68FE68 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FE70 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FE78 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FE80 = &SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::Visualization_Image *SnippetUI::Visualization_Image::Visualization_Image(SnippetUI::Visualization_Image *this)
{
  *(void *)this = &unk_1F211CDE0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  if (atomic_load_explicit(scc_info_Visualization_Image_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Image_Visualization_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  return this;
}

void sub_1C5DE15F8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Visualization_Image::GetMetadata(SnippetUI::Visualization_Image *this)
{
  return qword_1EA3D87F8;
}

uint64_t SnippetUI::Visualization_Image::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void SnippetUI::Visualization_Image::MergeFrom(SnippetUI::Visualization_Image *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 971);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Visualization_Image::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DE1714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Image::MergeFrom(SnippetUI::Visualization_Image *this, const SnippetUI::Visualization_Image *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 986);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Image *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      unint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        unint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        unint64_t v12 = v10;
      }
      else {
        unint64_t v12 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v11, v12);
    }
    uint8x8_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint8x8_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    long long v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        long long v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unint64_t v21 = v19;
      }
      else {
        unint64_t v21 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v20, v21);
    }
  }
}

void sub_1C5DE1920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Image::CopyFrom(SnippetUI::Visualization_Image *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Image::Clear(this);
    SnippetUI::Visualization_Image::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Image::Clear(SnippetUI::Visualization_Image *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (SnippetUI::Visualization_Image *)((char *)this + 8);
  *((void *)v8 + 6) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v8);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Visualization_Image::InternalSerializeWithCachedSizesToArray(SnippetUI::Visualization_Image *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_) {
    goto LABEL_49;
  }
  uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unint64_t v12 = v5 + 2;
        do
        {
          uint8x8_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        unint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *unint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    unint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      BOOL v30 = v5 + 2;
      do
      {
        unint64_t v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *BOOL v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        char v38 = v5 + 2;
        do
        {
          unint64_t v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        float v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *char v38 = v40;
      }
      else
      {
        v5[2] = v37;
        float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  unsigned int v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    unsigned int v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    unsigned int v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  unsigned int v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Image.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  unsigned int v44 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v44 + 23) < 0)
  {
    uint64_t v45 = (const char *)*((void *)v44 + 1);
    if (!v45) {
      goto LABEL_61;
    }
    unsigned int v44 = *(google::protobuf::internal **)v44;
    goto LABEL_60;
  }
  uint64_t v45 = (const char *)*((unsigned __int8 *)v44 + 23);
  if (*((unsigned char *)v44 + 23))
  {
LABEL_60:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v44, v45, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Image.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 3), v5);
  }
LABEL_61:
  uint64_t v46 = *((void *)this + 1);
  if ((v46 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v46 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Visualization_Image::_InternalParse(SnippetUI::Visualization_Image *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unint64_t v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unint64_t v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        unint64_t v11 = (SnippetUI::VisualProperty *)*((void *)this + 4);
        if (!v11)
        {
          unint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 4) = v11;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v11, TagFallback);
        goto LABEL_38;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_18;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v13;
LABEL_18:
        TagFallback = v21;
LABEL_19:
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_38;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_38;
      case 5u:
        if (v10 != 42) {
          goto LABEL_33;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Image.component_name";
        goto LABEL_32;
      case 6u:
        if (v10 != 50) {
          goto LABEL_33;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Image.link_identifier";
LABEL_32:
        unint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_38;
      default:
LABEL_33:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        unint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_38:
        unint64_t v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::Visualization_Image::GetCachedSize(SnippetUI::Visualization_Image *this)
{
  return *((unsigned int *)this + 16);
}

char *SnippetUI::Visualization_Image::ByteSizeLong(SnippetUI::Visualization_Image *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_)
  {
    uint64_t v9 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::VisualProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      unint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v15)
    {
      long long v16 = SnippetUI::ActionProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Visualization_Image *)((char *)this + 8), v5, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::Visualization_Image::IsInitialized(SnippetUI::Visualization_Image *this)
{
  return 1;
}

SnippetUI::Visualization_Image *SnippetUI::Visualization_Image::New(SnippetUI::Visualization_Image *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Image>(a2);
}

SnippetUI::Visualization_Image *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Image>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Visualization_Image *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Image>);
  }
  SnippetUI::Visualization_Image::Visualization_Image(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DE23A0(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4025EBE0BELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Image>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Visualization_Image *SnippetUI::Visualization_Image::New(SnippetUI::Visualization_Image *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Image>(0);
}

void SnippetUI::Visualization_Image::~Visualization_Image(SnippetUI::Visualization_Image *this)
{
  SnippetUI::Visualization_Image::~Visualization_Image(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)this = &unk_1F211CDE0;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t SnippetUI::Visualization_Chart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void SnippetUI::Visualization_Chart::MergeFrom(SnippetUI::Visualization_Chart *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Visualization_Chart::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DE2690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Chart::MergeFrom(SnippetUI::Visualization_Chart *this, const SnippetUI::Visualization_Chart *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Visualization.pb.cc", 553);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Chart *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 3);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
    }
    std::string::operator=(*((std::string **)this + 3), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 4);
    if (v10)
    {
      unint64_t v11 = (int **)*((void *)this + 4);
      if (!v11)
      {
        unint64_t v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 4) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 4);
      }
      if (v10) {
        unint64_t v12 = v10;
      }
      else {
        unint64_t v12 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v11, v12);
    }
    uint8x8_t v13 = (int **)*((void *)a2 + 5);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 5);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v14;
        uint8x8_t v13 = (int **)*((void *)a2 + 5);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
    long long v16 = (int **)*((void *)a2 + 6);
    if (v16)
    {
      unsigned int v17 = (int **)*((void *)this + 6);
      if (!v17)
      {
        unsigned int v17 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v17;
        long long v16 = (int **)*((void *)a2 + 6);
      }
      if (v16) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v17, v18);
    }
    BOOL v19 = (int **)*((void *)a2 + 7);
    if (v19)
    {
      BOOL v20 = (int **)*((void *)this + 7);
      if (!v20)
      {
        BOOL v20 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v20;
        BOOL v19 = (int **)*((void *)a2 + 7);
      }
      if (v19) {
        unint64_t v21 = v19;
      }
      else {
        unint64_t v21 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v20, v21);
    }
  }
}

void sub_1C5DE289C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Visualization_Chart::CopyFrom(SnippetUI::Visualization_Chart *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Chart::Clear(this);
    SnippetUI::Visualization_Chart::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Chart::Clear(SnippetUI::Visualization_Chart *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  char v9 = *((unsigned char *)this + 8);
  uint64_t v8 = (SnippetUI::Visualization_Chart *)((char *)this + 8);
  *((void *)v8 + 6) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v8);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Visualization_Chart::InternalSerializeWithCachedSizesToArray(SnippetUI::Visualization_Chart *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_) {
    goto LABEL_49;
  }
  uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unint64_t v12 = v5 + 2;
        do
        {
          uint8x8_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        unint64_t v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *unint64_t v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    unint64_t v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    long long v16 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      unint64_t v21 = v5 + 2;
      do
      {
        char v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      BOOL v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  BOOL v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    std::string v25 = (SnippetUI::TextProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      BOOL v30 = v5 + 2;
      do
      {
        unint64_t v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      uint64_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *BOOL v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  uint64_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v34)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      long long v34 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 34;
    unsigned int v35 = *((_DWORD *)v34 + 12);
    if (v35 > 0x7F)
    {
      v5[1] = v35 | 0x80;
      unsigned int v37 = v35 >> 7;
      if (v35 >> 14)
      {
        char v38 = v5 + 2;
        do
        {
          unint64_t v39 = v38;
          *v38++ = v37 | 0x80;
          unsigned int v40 = v37 >> 7;
          unsigned int v41 = v37 >> 14;
          v37 >>= 7;
        }
        while (v41);
        float v36 = (google::protobuf::UnknownFieldSet *)(v39 + 2);
        *char v38 = v40;
      }
      else
      {
        v5[2] = v37;
        float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v35;
      float v36 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v34, v36, a3, a4);
  }
LABEL_49:
  unsigned int v42 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v42 + 23) < 0)
  {
    unsigned int v43 = (const char *)*((void *)v42 + 1);
    if (!v43) {
      goto LABEL_55;
    }
    unsigned int v42 = *(google::protobuf::internal **)v42;
    goto LABEL_54;
  }
  unsigned int v43 = (const char *)*((unsigned __int8 *)v42 + 23);
  if (*((unsigned char *)v42 + 23))
  {
LABEL_54:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v42, v43, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Chart.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 2), v5);
  }
LABEL_55:
  unsigned int v44 = (google::protobuf::internal *)*((void *)this + 3);
  if (*((char *)v44 + 23) < 0)
  {
    uint64_t v45 = (const char *)*((void *)v44 + 1);
    if (!v45) {
      goto LABEL_61;
    }
    unsigned int v44 = *(google::protobuf::internal **)v44;
    goto LABEL_60;
  }
  uint64_t v45 = (const char *)*((unsigned __int8 *)v44 + 23);
  if (*((unsigned char *)v44 + 23))
  {
LABEL_60:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v44, v45, 1, (google::protobuf::internal *)"SnippetUI.Visualization_Chart.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 3), v5);
  }
LABEL_61:
  uint64_t v46 = *((void *)this + 1);
  if ((v46 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v46 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Visualization_Chart::_InternalParse(SnippetUI::Visualization_Chart *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v21 = a2;
  uint64_t v5 = (std::string **)((char *)this + 24);
  uint64_t v6 = (std::string **)((char *)this + 16);
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v21, *((_DWORD *)a3 + 23))) {
      return v21;
    }
    TagFallback = (google::protobuf::internal *)((char *)v21 + 1);
    unsigned int v10 = (char *)*(unsigned __int8 *)v21;
    if ((*(char *)v21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_6:
      unint64_t v21 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, v10);
    unint64_t v21 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        unint64_t v11 = (SnippetUI::VisualProperty *)*((void *)this + 4);
        if (!v11)
        {
          unint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 4) = v11;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v11, TagFallback);
        goto LABEL_38;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v13;
        goto LABEL_18;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
        if (v13) {
          goto LABEL_19;
        }
        uint8x8_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 6) = v13;
LABEL_18:
        TagFallback = v21;
LABEL_19:
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_38;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallback = v21;
        }
        unint64_t v12 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_38;
      case 5u:
        if (v10 != 42) {
          goto LABEL_33;
        }
        unsigned int v15 = *v6;
        if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Chart.component_name";
        goto LABEL_32;
      case 6u:
        if (v10 != 50) {
          goto LABEL_33;
        }
        unsigned int v15 = *v5;
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        long long v16 = (std::string::value_type *)TagFallback;
        unsigned int v17 = a3;
        uint64_t v18 = "SnippetUI.Visualization_Chart.link_identifier";
LABEL_32:
        unint64_t v12 = google::protobuf::internal::InlineGreedyStringParserUTF8(v15, v16, (uint64_t)v17, (google::protobuf::internal *)v18);
        goto LABEL_38;
      default:
LABEL_33:
        if (v10) {
          BOOL v19 = (v10 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (v19)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        unint64_t v12 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v10, v7, TagFallback, a3, v8);
LABEL_38:
        unint64_t v21 = (google::protobuf::internal *)v12;
        if (v12) {
          continue;
        }
        TagFallback = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::Visualization_Chart::GetCachedSize(SnippetUI::Visualization_Chart *this)
{
  return *((unsigned int *)this + 16);
}

char *SnippetUI::Visualization_Chart::ByteSizeLong(SnippetUI::Visualization_Chart *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    uint64_t v8 = v7;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (this != (SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_)
  {
    uint64_t v9 = (SnippetUI::VisualProperty *)*((void *)this + 4);
    if (v9)
    {
      unsigned int v10 = SnippetUI::VisualProperty::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v10[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unint64_t v11 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v11)
    {
      unint64_t v12 = SnippetUI::TextProperty::ByteSizeLong(v11);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
    uint8x8_t v13 = (SnippetUI::TextProperty *)*((void *)this + 6);
    if (v13)
    {
      unsigned int v14 = SnippetUI::TextProperty::ByteSizeLong(v13);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v15)
    {
      long long v16 = SnippetUI::ActionProperty::ByteSizeLong(v15);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v16[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Visualization_Chart *)((char *)this + 8), v5, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::Visualization_Chart::IsInitialized(SnippetUI::Visualization_Chart *this)
{
  return 1;
}

SnippetUI::Visualization_Chart *SnippetUI::Visualization_Chart::New(SnippetUI::Visualization_Chart *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Chart>(a2);
}

SnippetUI::Visualization_Chart *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Chart>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Visualization_Chart *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Chart>);
  }
  SnippetUI::Visualization_Chart::Visualization_Chart(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DE331C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4025EBE0BELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Visualization_Chart>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Visualization_Chart *SnippetUI::Visualization_Chart::New(SnippetUI::Visualization_Chart *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Visualization_Chart>(0);
}

void SnippetUI::Visualization_Chart::~Visualization_Chart(SnippetUI::Visualization_Chart *this)
{
  SnippetUI::Visualization_Chart::~Visualization_Chart(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(void *)this = &unk_1F211CD20;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 3);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_)
  {
    uint64_t v6 = *((void *)this + 4);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 5);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 7);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::Visualization_Chart::InitAsDefaultInstance(SnippetUI::Visualization_Chart *this)
{
  qword_1EB68FE20 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FE28 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FE30 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FE38 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::Visualization_Chart::_Internal::visual(SnippetUI::Visualization_Chart::_Internal *this, const SnippetUI::Visualization_Chart *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::Visualization_Chart::_Internal::text_1(SnippetUI::Visualization_Chart::_Internal *this, const SnippetUI::Visualization_Chart *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::Visualization_Chart::_Internal::text_2(SnippetUI::Visualization_Chart::_Internal *this, const SnippetUI::Visualization_Chart *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::Visualization_Chart::_Internal::action(SnippetUI::Visualization_Chart::_Internal *this, const SnippetUI::Visualization_Chart *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::Visualization_Chart::clear_visual(SnippetUI::Visualization_Chart *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Chart::clear_text_1(SnippetUI::Visualization_Chart *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Chart::clear_text_2(SnippetUI::Visualization_Chart *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Chart::clear_action(SnippetUI::Visualization_Chart *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::Visualization_Chart *SnippetUI::Visualization_Chart::Visualization_Chart(SnippetUI::Visualization_Chart *this, const SnippetUI::Visualization_Chart *a2)
{
  *(void *)this = &unk_1F211CD20;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Chart *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::Visualization_Chart *)&SnippetUI::_Visualization_Chart_default_instance_)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    *((void *)this + 6) = 0;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
  }
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DE3894(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Visualization_Chart::default_instance(SnippetUI::Visualization_Chart *this)
{
  if (atomic_load_explicit(scc_info_Visualization_Chart_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Chart_Visualization_2eproto);
  }
  return &SnippetUI::_Visualization_Chart_default_instance_;
}

void SnippetUI::Visualization_Chart::CopyFrom(SnippetUI::Visualization_Chart *this, const SnippetUI::Visualization_Chart *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Chart::Clear(this);
    SnippetUI::Visualization_Chart::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Chart::InternalSwap(SnippetUI::Visualization_Chart *this, SnippetUI::Visualization_Chart *a2)
{
  uint64_t v4 = (SnippetUI::Visualization_Chart *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v23;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint8x8_t v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
}

void SnippetUI::Visualization_Image::InitAsDefaultInstance(SnippetUI::Visualization_Image *this)
{
  qword_1EB68FE68 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FE70 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FE78 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FE80 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::Visualization_Image::_Internal::visual(SnippetUI::Visualization_Image::_Internal *this, const SnippetUI::Visualization_Image *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::Visualization_Image::_Internal::text_1(SnippetUI::Visualization_Image::_Internal *this, const SnippetUI::Visualization_Image *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::Visualization_Image::_Internal::text_2(SnippetUI::Visualization_Image::_Internal *this, const SnippetUI::Visualization_Image *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::Visualization_Image::_Internal::action(SnippetUI::Visualization_Image::_Internal *this, const SnippetUI::Visualization_Image *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::Visualization_Image::clear_visual(SnippetUI::Visualization_Image *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Image::clear_text_1(SnippetUI::Visualization_Image *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Image::clear_text_2(SnippetUI::Visualization_Image *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Image::clear_action(SnippetUI::Visualization_Image *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::Visualization_Image *SnippetUI::Visualization_Image::Visualization_Image(SnippetUI::Visualization_Image *this, const SnippetUI::Visualization_Image *a2)
{
  *(void *)this = &unk_1F211CDE0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Image *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::Visualization_Image *)&SnippetUI::_Visualization_Image_default_instance_)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    *((void *)this + 6) = 0;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
  }
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DE3E88(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Visualization_Image::default_instance(SnippetUI::Visualization_Image *this)
{
  if (atomic_load_explicit(scc_info_Visualization_Image_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Image_Visualization_2eproto);
  }
  return &SnippetUI::_Visualization_Image_default_instance_;
}

void SnippetUI::Visualization_Image::CopyFrom(SnippetUI::Visualization_Image *this, const SnippetUI::Visualization_Image *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Image::Clear(this);
    SnippetUI::Visualization_Image::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Image::InternalSwap(SnippetUI::Visualization_Image *this, SnippetUI::Visualization_Image *a2)
{
  uint64_t v4 = (SnippetUI::Visualization_Image *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v23;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint8x8_t v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
}

void SnippetUI::Visualization_Map::InitAsDefaultInstance(SnippetUI::Visualization_Map *this)
{
  qword_1EB68FB28 = (uint64_t)&SnippetUI::_VisualProperty_default_instance_;
  unk_1EB68FB30 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68FB38 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68FB40 = &SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::Visualization_Map::_Internal::map_property(SnippetUI::Visualization_Map::_Internal *this, const SnippetUI::Visualization_Map *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::Visualization_Map::_Internal::text_1(SnippetUI::Visualization_Map::_Internal *this, const SnippetUI::Visualization_Map *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::Visualization_Map::_Internal::text_2(SnippetUI::Visualization_Map::_Internal *this, const SnippetUI::Visualization_Map *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::Visualization_Map::_Internal::action(SnippetUI::Visualization_Map::_Internal *this, const SnippetUI::Visualization_Map *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::Visualization_Map::clear_map_property(SnippetUI::Visualization_Map *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Map::clear_text_1(SnippetUI::Visualization_Map *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Map::clear_text_2(SnippetUI::Visualization_Map *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::Visualization_Map::clear_action(SnippetUI::Visualization_Map *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::Visualization_Map *SnippetUI::Visualization_Map::Visualization_Map(SnippetUI::Visualization_Map *this, const SnippetUI::Visualization_Map *a2)
{
  *(void *)this = &unk_1F211CEA0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Visualization_Map *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v8 = *((void *)a2 + 3);
  if (*(char *)(v8 + 23) < 0) {
    uint64_t v9 = *(void *)(v8 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  }
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v9) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, v8);
  }
  if (a2 == (const SnippetUI::Visualization_Map *)&SnippetUI::_Visualization_Map_default_instance_)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
    *((void *)this + 6) = 0;
  }
  else
  {
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
  }
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DE447C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Visualization_Map::default_instance(SnippetUI::Visualization_Map *this)
{
  if (atomic_load_explicit(scc_info_Visualization_Map_Visualization_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Visualization_Map_Visualization_2eproto);
  }
  return &SnippetUI::_Visualization_Map_default_instance_;
}

void SnippetUI::Visualization_Map::CopyFrom(SnippetUI::Visualization_Map *this, const SnippetUI::Visualization_Map *a2)
{
  if (a2 != this)
  {
    SnippetUI::Visualization_Map::Clear(this);
    SnippetUI::Visualization_Map::MergeFrom(this, a2);
  }
}

void SnippetUI::Visualization_Map::InternalSwap(SnippetUI::Visualization_Map *this, SnippetUI::Visualization_Map *a2)
{
  uint64_t v4 = (SnippetUI::Visualization_Map *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v23;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  std::string v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  unsigned int v14 = (uint64_t **)((char *)a2 + 24);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint8x8_t v13 = (uint64_t *)*((void *)this + 3);
  }
  unsigned int v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint8x8_t v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)unsigned int v15 = v17;
  v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v19;
  uint64_t v20 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v20;
  uint64_t v21 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v21;
  uint64_t v22 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v22;
}

void YAML::EmitterState::EmitterState(YAML::EmitterState *this)
{
  *((void *)this + 1) = 0;
  *(unsigned char *)this = 1;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  YAML::Setting<YAML::EMITTER_MANIP>::Setting((_DWORD *)this + 8);
}

void sub_1C5DE4878(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void YAML::Setting<YAML::EMITTER_MANIP>::Setting(_DWORD *a1)
{
  *a1 = 0;
  operator new();
}

void YAML::Setting<unsigned long>::Setting(void *a1)
{
  *a1 = 0;
  operator new();
}

uint64_t YAML::SettingChange<unsigned long>::pop(uint64_t result)
{
  **(void **)(result + 8) = *(void *)(result + 16);
  return result;
}

void YAML::SettingChange<unsigned long>::~SettingChange()
{
}

uint64_t YAML::SettingChange<YAML::EMITTER_MANIP>::pop(uint64_t result)
{
  **(_DWORD **)(result + 8) = *(_DWORD *)(result + 16);
  return result;
}

void YAML::SettingChange<YAML::EMITTER_MANIP>::~SettingChange()
{
}

void YAML::EmitterState::~EmitterState(YAML::EmitterState *this)
{
  uint64_t v2 = (uint64_t *)*((void *)this + 20);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)*((void *)this + 21);
    uint64_t v4 = (void *)*((void *)this + 20);
    if (v3 != v2)
    {
      do
        std::unique_ptr<YAML::EmitterState::Group>::reset[abi:ne180100](--v3);
      while (v3 != v2);
      uint64_t v4 = (void *)*((void *)this + 20);
    }
    *((void *)this + 21) = v2;
    operator delete(v4);
  }
  YAML::SettingChanges::~SettingChanges((uint64_t **)this + 17);
  YAML::SettingChanges::~SettingChanges((uint64_t **)this + 14);
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

void YAML::SettingChanges::~SettingChanges(uint64_t **this)
{
  if (*this)
  {
    std::vector<std::unique_ptr<YAML::SettingChangeBase>>::__clear[abi:ne180100](this);
    operator delete(*this);
  }
}

void *YAML::SettingChanges::clear(uint64_t **this)
{
  uint64_t v3 = *this;
  for (uint64_t i = this[1]; v3 != i; uint64_t i = this[1])
  {
    uint64_t v4 = *v3++;
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  return std::vector<std::unique_ptr<YAML::SettingChangeBase>>::__clear[abi:ne180100](this);
}

void *std::vector<std::unique_ptr<YAML::SettingChangeBase>>::__clear[abi:ne180100](void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)*result;
  uint64_t v3 = (void *)result[1];
  while (v3 != v2)
  {
    uint64_t v4 = (void *)*--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

uint64_t *std::unique_ptr<YAML::EmitterState::Group>::reset[abi:ne180100](uint64_t *result)
{
  uint64_t v1 = *result;
  char *result = 0;
  if (v1)
  {
    YAML::SettingChanges::~SettingChanges((uint64_t **)(v1 + 32));
    JUMPOUT(0x1C8796D70);
  }
  return result;
}

uint64_t YAML::EmitterState::SetLocalValue(uint64_t result, uint64_t a2)
{
  if ((a2 - 3) <= 1) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(result, result + 32, a2, 0);
  }
  if (a2 <= 7 && ((1 << a2) & 0xE1) != 0)
  {
    uint64_t v3 = result + 36;
    goto LABEL_6;
  }
  if ((a2 - 8) <= 2)
  {
    uint64_t v3 = result + 40;
    goto LABEL_6;
  }
  if ((a2 - 11) <= 2)
  {
    uint64_t v3 = result + 48;
LABEL_6:
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(result, v3, a2, 0);
  }
  if ((a2 & 0xFFFFFFFE) == 0xE)
  {
    uint64_t v4 = result + 44;
    goto LABEL_13;
  }
  if ((a2 - 16) <= 2)
  {
    uint64_t v4 = result + 52;
LABEL_13:
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(result, v4, a2, 0);
  }
  if ((a2 - 23) <= 1) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(result, result + 80, a2, 0);
  }
  if (a2 == 29 || !a2)
  {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(result, result + 88, a2, 0);
  }
  return result;
}

void YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4 != 1)
  {
    if (!a4) {
      operator new();
    }
    __assert_rtn("_Set", "emitterstate.h", 206, "false");
  }
  operator new();
}

void sub_1C5DE4F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 8))(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DE4F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!a10) {
    JUMPOUT(0x1C5DE4F3CLL);
  }
  JUMPOUT(0x1C5DE4F18);
}

void YAML::SettingChanges::push(char **a1, uint64_t *a2)
{
  uint64_t v5 = a1[1];
  unint64_t v4 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v8 = (v5 - *a1) >> 3;
    if ((unint64_t)(v8 + 1) >> 61) {
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v9 = v4 - (void)*a1;
    uint64_t v10 = v9 >> 2;
    if (v9 >> 2 <= (unint64_t)(v8 + 1)) {
      uint64_t v10 = v8 + 1;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v11 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      if (v11 >> 61) {
        std::__throw_bad_array_new_length[abi:ne180100]();
      }
      uint64_t v12 = (char *)operator new(8 * v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint8x8_t v13 = &v12[8 * v8];
    unsigned int v14 = &v12[8 * v11];
    uint64_t v15 = *a2;
    *a2 = 0;
    *(void *)uint8x8_t v13 = v15;
    uint64_t v7 = v13 + 8;
    uint64_t v16 = *a1;
    long long v17 = a1[1];
    if (v17 == *a1)
    {
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
    }
    else
    {
      do
      {
        uint64_t v18 = *((void *)v17 - 1);
        v17 -= 8;
        *(void *)long long v17 = 0;
        *((void *)v13 - 1) = v18;
        v13 -= 8;
      }
      while (v17 != v16);
      long long v17 = *a1;
      uint64_t v19 = a1[1];
      *a1 = v13;
      a1[1] = v7;
      a1[2] = v14;
      while (v19 != v17)
      {
        uint64_t v21 = *((void *)v19 - 1);
        v19 -= 8;
        uint64_t v20 = v21;
        *(void *)uint64_t v19 = 0;
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
    }
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    uint64_t v6 = *a2;
    *a2 = 0;
    *(void *)uint64_t v5 = v6;
    uint64_t v7 = v5 + 8;
  }
  a1[1] = v7;
}

BOOL YAML::EmitterState::SetOutputCharset(uint64_t a1, uint64_t a2, int a3)
{
  if ((a2 - 3) <= 1) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 32, a2, a3);
  }
  return (a2 - 3) < 2;
}

uint64_t YAML::EmitterState::SetStringFormat(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result = 0;
  if (a2 <= 7 && ((1 << a2) & 0xE1) != 0) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 36, a2, a3);
  }
  return result;
}

BOOL YAML::EmitterState::SetBoolFormat(uint64_t a1, uint64_t a2, int a3)
{
  if ((a2 - 8) <= 2) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 40, a2, a3);
  }
  return (a2 - 8) < 3;
}

BOOL YAML::EmitterState::SetBoolCaseFormat(uint64_t a1, uint64_t a2, int a3)
{
  if ((a2 - 11) <= 2) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 48, a2, a3);
  }
  return (a2 - 11) < 3;
}

uint64_t YAML::EmitterState::SetBoolLengthFormat(uint64_t a1, uint64_t a2, int a3)
{
  if ((a2 & 0xFFFFFFFE) == 0xE) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 44, a2, a3);
  }
  return 0;
}

BOOL YAML::EmitterState::SetIntFormat(uint64_t a1, uint64_t a2, int a3)
{
  if ((a2 - 16) <= 2) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 52, a2, a3);
  }
  return (a2 - 16) < 3;
}

BOOL YAML::EmitterState::SetFlowType(uint64_t a1, int a2, uint64_t a3, int a4)
{
  if ((a3 - 23) <= 1)
  {
    if (a2 == 1) {
      uint64_t v4 = a1 + 80;
    }
    else {
      uint64_t v4 = a1 + 84;
    }
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, v4, a3, a4);
  }
  return (a3 - 23) < 2;
}

uint64_t YAML::EmitterState::SetMapKeyFormat(uint64_t a1, uint64_t a2, int a3)
{
  if (a2 == 29 || !a2) {
    YAML::EmitterState::_Set<YAML::EMITTER_MANIP>(a1, a1 + 88, a2, a3);
  }
  return 0;
}

uint64_t YAML::EmitterState::SetAnchor(uint64_t this)
{
  *(unsigned char *)(this + 192) = 1;
  return this;
}

uint64_t YAML::EmitterState::SetTag(uint64_t this)
{
  *(unsigned char *)(this + 193) = 1;
  return this;
}

uint64_t YAML::EmitterState::SetNonContent(uint64_t this)
{
  *(unsigned char *)(this + 194) = 1;
  return this;
}

uint64_t YAML::EmitterState::SetLongKey(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 168);
  if (*(void *)(this + 160) == v1) {
    __assert_rtn("SetLongKey", "emitterstate.cpp", 59, "!m_groups.empty()");
  }
  uint64_t v2 = *(void *)(v1 - 8);
  if (*(_DWORD *)v2 != 2) {
    __assert_rtn("SetLongKey", "emitterstate.cpp", 64, "m_groups.back()->type == GroupType::Map");
  }
  *(unsigned char *)(v2 + 24) = 1;
  return this;
}

uint64_t YAML::EmitterState::ForceFlow(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 168);
  if (*(void *)(this + 160) == v1) {
    __assert_rtn("ForceFlow", "emitterstate.cpp", 69, "!m_groups.empty()");
  }
  *(_DWORD *)(*(void *)(v1 - 8) + 4) = 1;
  return this;
}

uint64_t YAML::EmitterState::StartedNode(uint64_t this)
{
  uint64_t v1 = *(void *)(this + 168);
  if (*(void *)(this + 160) == v1)
  {
    ++*(void *)(this + 200);
  }
  else
  {
    uint64_t v2 = *(void *)(v1 - 8);
    uint64_t v3 = *(void *)(v2 + 16) + 1;
    *(void *)(v2 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v3;
    if ((v3 & 1) == 0) {
      *(unsigned char *)(v2 + 24) = 0;
    }
  }
  *(_WORD *)(this + 192) = 0;
  *(unsigned char *)(this + 194) = 0;
  return this;
}

uint64_t YAML::EmitterState::NextGroupType(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 160);
  uint64_t v2 = *(void *)(a1 + 168);
  if (a2 == 1)
  {
    if (v3 != v2 && *(_DWORD *)(*(void *)(v2 - 8) + 4) == 1) {
      return 3;
    }
    BOOL v5 = *(_DWORD *)(a1 + 80) == 24;
    unsigned int v6 = 3;
  }
  else
  {
    if (v3 != v2 && *(_DWORD *)(*(void *)(v2 - 8) + 4) == 1) {
      return 5;
    }
    BOOL v5 = *(_DWORD *)(a1 + 84) == 24;
    unsigned int v6 = 5;
  }
  if (v5) {
    return v6 + 1;
  }
  else {
    return v6;
  }
}

uint64_t YAML::EmitterState::GetFlowType(uint64_t a1, int a2)
{
  uint64_t v2 = *(void *)(a1 + 168);
  if (*(void *)(a1 + 160) != v2 && *(_DWORD *)(*(void *)(v2 - 8) + 4) == 1) {
    return 23;
  }
  uint64_t v4 = 84;
  if (a2 == 1) {
    uint64_t v4 = 80;
  }
  return *(unsigned int *)(a1 + v4);
}

uint64_t YAML::EmitterState::StartedDoc(uint64_t this)
{
  *(_WORD *)(this + 192) = 0;
  *(unsigned char *)(this + 194) = 0;
  return this;
}

uint64_t YAML::EmitterState::EndedDoc(uint64_t this)
{
  *(_WORD *)(this + 192) = 0;
  *(unsigned char *)(this + 194) = 0;
  return this;
}

void *YAML::EmitterState::StartedScalar(uint64_t **this)
{
  YAML::EmitterState::StartedNode((uint64_t)this);
  return YAML::SettingChanges::clear(this + 14);
}

void *YAML::EmitterState::ClearModifiedSettings(uint64_t **this)
{
  return YAML::SettingChanges::clear(this + 14);
}

void YAML::EmitterState::StartedGroup(void *a1)
{
  YAML::EmitterState::StartedNode((uint64_t)a1);
  uint64_t v2 = a1[21];
  if (a1[20] == v2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 8);
  }
  a1[23] += v3;
  operator new();
}

void sub_1C5DE5730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<YAML::EmitterState::Group>::reset[abi:ne180100]((uint64_t *)va);
  _Unwind_Resume(a1);
}

void YAML::EmitterState::EndedGroup(uint64_t a1, int a2)
{
  uint64_t v4 = *(void *)(a1 + 168);
  if (*(void *)(a1 + 160) == v4)
  {
    if (a2 == 1) {
      std::string::basic_string[abi:ne180100]<0>(&__str, "unexpected end sequence token");
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(&__str, "unexpected end map token");
    }
    *(unsigned char *)a1 = 0;
    std::string::operator=((std::string *)(a1 + 8), &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v4 - 8);
    *(void *)(v4 - 8) = 0;
    unsigned int v6 = (uint64_t *)(*(void *)(a1 + 168) - 8);
    std::unique_ptr<YAML::EmitterState::Group>::reset[abi:ne180100](v6);
    *(void *)(a1 + 168) = v6;
    if (*(_DWORD *)v5 == a2)
    {
      YAML::SettingChanges::~SettingChanges((uint64_t **)(v5 + 32));
      MEMORY[0x1C8796D70](v5, 0x1020C409BBB1E6ELL);
      uint64_t v7 = *(void *)(a1 + 168);
      if (*(void *)(a1 + 160) == v7)
      {
        unint64_t v8 = 0;
        unint64_t v9 = *(void *)(a1 + 184);
      }
      else
      {
        unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 8);
        unint64_t v9 = *(void *)(a1 + 184);
        if (v9 < v8) {
          __assert_rtn("EndedGroup", "emitterstate.cpp", 175, "m_curIndent >= lastIndent");
        }
      }
      *(void *)(a1 + 184) = v9 - v8;
      for (uint64_t i = *(uint64_t **)(a1 + 136); i != *(uint64_t **)(a1 + 144); ++i)
      {
        uint64_t v11 = *i;
        (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
      }
      YAML::SettingChanges::clear((uint64_t **)(a1 + 112));
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&__str, "unmatched group tag");
      *(unsigned char *)a1 = 0;
      std::string::operator=((std::string *)(a1 + 8), &__str);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      YAML::SettingChanges::~SettingChanges((uint64_t **)(v5 + 32));
      MEMORY[0x1C8796D70](v5, 0x1020C409BBB1E6ELL);
    }
  }
}

void sub_1C5DE5938(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t YAML::EmitterState::CurGroupNodeType(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  if (*((void *)this + 20) == v1) {
    return 0;
  }
  uint64_t v2 = *(int **)(v1 - 8);
  int v3 = *v2;
  BOOL v4 = v2[1] == 1;
  if (v2[1] == 1) {
    unsigned int v5 = 3;
  }
  else {
    unsigned int v5 = 4;
  }
  if (v4) {
    unsigned int v6 = 5;
  }
  else {
    unsigned int v6 = 6;
  }
  if (v3 == 1) {
    return v5;
  }
  else {
    return v6;
  }
}

uint64_t YAML::EmitterState::CurGroupType(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  if (*((void *)this + 20) == v1) {
    return 0;
  }
  else {
    return **(unsigned int **)(v1 - 8);
  }
}

uint64_t YAML::EmitterState::CurGroupFlowType(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  if (*((void *)this + 20) == v1) {
    return 0;
  }
  else {
    return *(unsigned int *)(*(void *)(v1 - 8) + 4);
  }
}

uint64_t YAML::EmitterState::CurGroupIndent(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  if (*((void *)this + 20) == v1) {
    return 0;
  }
  else {
    return *(void *)(*(void *)(v1 - 8) + 8);
  }
}

uint64_t YAML::EmitterState::CurGroupChildCount(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  if (*((void *)this + 20) == v1) {
    uint64_t v2 = (char *)this + 200;
  }
  else {
    uint64_t v2 = (char *)(*(void *)(v1 - 8) + 16);
  }
  return *(void *)v2;
}

BOOL YAML::EmitterState::CurGroupLongKey(YAML::EmitterState *this)
{
  uint64_t v1 = *((void *)this + 21);
  return *((void *)this + 20) != v1 && *(unsigned char *)(*(void *)(v1 - 8) + 24) != 0;
}

uint64_t YAML::EmitterState::LastIndent(YAML::EmitterState *this)
{
  if (*((void *)this + 21) - *((void *)this + 20) >= 0x10uLL) {
    return *((void *)this + 23) - *(void *)(*(void *)(*((void *)this + 21) - 16) + 8);
  }
  else {
    return 0;
  }
}

BOOL YAML::EmitterState::SetIndent(uint64_t a1, unint64_t a2, int a3)
{
  if (a2 >= 2) {
    YAML::EmitterState::_Set<unsigned long>(a1, a1 + 56, a2, a3);
  }
  return a2 > 1;
}

void YAML::EmitterState::_Set<unsigned long>(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4 != 1)
  {
    if (!a4) {
      operator new();
    }
    __assert_rtn("_Set", "emitterstate.h", 206, "false");
  }
  operator new();
}

void sub_1C5DE5C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a9) {
    (*(void (**)(uint64_t))(*(void *)a9 + 8))(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DE5CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!a10) {
    JUMPOUT(0x1C5DE5CBCLL);
  }
  JUMPOUT(0x1C5DE5C98);
}

uint64_t YAML::EmitterState::SetPreCommentIndent(uint64_t a1, uint64_t a2, int a3)
{
  if (a2) {
    YAML::EmitterState::_Set<unsigned long>(a1, a1 + 64, a2, a3);
  }
  return 0;
}

uint64_t YAML::EmitterState::SetPostCommentIndent(uint64_t a1, uint64_t a2, int a3)
{
  if (a2) {
    YAML::EmitterState::_Set<unsigned long>(a1, a1 + 72, a2, a3);
  }
  return 0;
}

BOOL YAML::EmitterState::SetFloatPrecision(uint64_t a1, unint64_t a2, int a3)
{
  if (a2 <= 9) {
    YAML::EmitterState::_Set<unsigned long>(a1, a1 + 96, a2, a3);
  }
  return a2 < 0xA;
}

BOOL YAML::EmitterState::SetDoublePrecision(uint64_t a1, unint64_t a2, int a3)
{
  if (a2 <= 0x11) {
    YAML::EmitterState::_Set<unsigned long>(a1, a1 + 104, a2, a3);
  }
  return a2 < 0x12;
}

void sub_1C5DE5E24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE5EEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE5FE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE60EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)DEMultipartWriter;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1C5DE6244(_Unwind_Exception *a1)
{
  BOOL v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1C5DE6488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE66E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE695C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)DEMultipartReader;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1C5DE6B70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE6CF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::StartsWithVowel(siri::dialogengine::Context *a1, const char *a2)
{
  if (a1) {
    siri::dialogengine::Context::GetLocale(a1, a2, (uint64_t)v7);
  }
  else {
    std::string::basic_string[abi:ne180100]<0>(v7, "");
  }
  unint64_t v3 = v8;
  if ((v8 & 0x80u) != 0) {
    unint64_t v3 = (unint64_t)v7[1];
  }
  if (!v3) {
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"StartsWithVowel has empty locale", v2);
  }
  morphun::util::ULocale::ULocale();
  morphun::util::StringUtils::to_u16string();
  uint64_t isStartsWithVowel = morphun::dictionary::PhraseProperties::isStartsWithVowel();
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v6);
  if ((char)v8 < 0) {
    operator delete(v7[0]);
  }
  return isStartsWithVowel;
}

void sub_1C5DE6E28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DE6E6C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  JUMPOUT(0x1C5DE6E54);
}

uint64_t siri::dialogengine::EndsWithVowel(siri::dialogengine::Context *a1, const char *a2)
{
  if (a1) {
    siri::dialogengine::Context::GetLocale(a1, a2, (uint64_t)v7);
  }
  else {
    std::string::basic_string[abi:ne180100]<0>(v7, "");
  }
  unint64_t v3 = v8;
  if ((v8 & 0x80u) != 0) {
    unint64_t v3 = (unint64_t)v7[1];
  }
  if (!v3) {
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"EndsWithVowel has empty locale", v2);
  }
  morphun::util::ULocale::ULocale();
  morphun::util::StringUtils::to_u16string();
  uint64_t isEndsWithVowel = morphun::dictionary::PhraseProperties::isEndsWithVowel();
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v6);
  if ((char)v8 < 0) {
    operator delete(v7[0]);
  }
  return isEndsWithVowel;
}

void sub_1C5DE6FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DE6FFC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  JUMPOUT(0x1C5DE6FE4);
}

BOOL siri::dialogengine::StartsWithCapital(siri::dialogengine *a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (!v2) {
    return 0;
  }
  siri::dialogengine::SpeakableString::SpeakableString((uint64_t)&v22, a2);
  std::string::basic_string[abi:ne180100]<0>(__p, "capitalizefirst");
  siri::dialogengine::TransformText((siri::dialogengine::SpeakableString *)&v22, a1, (uint64_t)__p, &v35);
  if (v21 < 0) {
    operator delete(__p[0]);
  }
  if (v34 < 0) {
    operator delete(v33);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
  if (v30 < 0) {
    operator delete(v29);
  }
  if (v28 < 0) {
    operator delete(v27);
  }
  if (v26 < 0) {
    operator delete(v25);
  }
  if (v24 < 0) {
    operator delete(v23);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v22, v35.__r_.__value_.__l.__data_, v35.__r_.__value_.__l.__size_);
  }
  else {
    std::string v22 = v35;
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v22.__r_.__value_.__l.__size_;
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  int v8 = (char)v7;
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if (size == v7)
  {
    if (v8 >= 0) {
      unint64_t v9 = (unsigned __int8 *)a2;
    }
    else {
      unint64_t v9 = *(unsigned __int8 **)a2;
    }
    if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      uint64_t v18 = (void *)v22.__r_.__value_.__r.__words[0];
      BOOL v5 = memcmp(v22.__r_.__value_.__l.__data_, v9, v22.__r_.__value_.__l.__size_) == 0;
      goto LABEL_46;
    }
    if (!*((unsigned char *)&v22.__r_.__value_.__s + 23))
    {
      BOOL v5 = 1;
      goto LABEL_48;
    }
    uint64_t v10 = HIBYTE(v22.__r_.__value_.__r.__words[2]) - 1;
    uint64_t v11 = &v22;
    do
    {
      int v13 = v11->__r_.__value_.__s.__data_[0];
      uint64_t v11 = (std::string *)((char *)v11 + 1);
      int v12 = v13;
      int v15 = *v9++;
      int v14 = v15;
      BOOL v17 = v10-- != 0;
      BOOL v5 = v12 == v14;
    }
    while (v12 == v14 && v17);
  }
  else
  {
    BOOL v5 = 0;
  }
  if ((*((unsigned char *)&v22.__r_.__value_.__s + 23) & 0x80) != 0)
  {
    uint64_t v18 = (void *)v22.__r_.__value_.__r.__words[0];
LABEL_46:
    operator delete(v18);
  }
LABEL_48:
  if (v47 < 0) {
    operator delete(v46);
  }
  if (v45 < 0) {
    operator delete(v44);
  }
  if (v43 < 0) {
    operator delete(v42);
  }
  if (v41 < 0) {
    operator delete(v40);
  }
  if (v39 < 0) {
    operator delete(v38);
  }
  if (v37 < 0) {
    operator delete(v36);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  return v5;
}

void sub_1C5DE7274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37)
{
}

void sub_1C5DE7618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id a34)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2819(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

void __Block_byref_object_dispose__2820(uint64_t a1)
{
}

void sub_1C5DE7788(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5DE7AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id a40)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1C5DE7C40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void non-virtual thunk to'siri::dialogengine::ConditionSubCondition::~ConditionSubCondition(siri::dialogengine::ConditionSubCondition *this)
{
  uint64_t v2 = (void **)((char *)this - 88);
  *((void *)this - 11) = &unk_1F211D038;
  *(void *)this = &unk_1F211D078;
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)this);
  siri::dialogengine::ConditionEntry::~ConditionEntry(v2);
  JUMPOUT(0x1C8796D70);
}

{
  void **v2;
  uint64_t vars8;

  uint64_t v2 = (void **)((char *)this - 88);
  *((void *)this - 11) = &unk_1F211D038;
  *(void *)this = &unk_1F211D078;
  if (*((char *)this + 87) < 0) {
    operator delete(*((void **)this + 8));
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)this);
  siri::dialogengine::ConditionEntry::~ConditionEntry(v2);
}

uint64_t siri::dialogengine::ConditionSubCondition::Evaluate(siri::dialogengine::ConditionSubCondition *this, siri::dialogengine::Context *a2, siri::dialogengine::ExecutionState *a3)
{
  if (!a2)
  {
    if (*((char *)this + 175) < 0)
    {
      if (!*((void *)this + 20)) {
        return 0;
      }
    }
    else if (!*((unsigned char *)this + 175))
    {
      return 0;
    }
  }
  if (a3 && siri::dialogengine::ExecutionState::IsInfiniteLoop((uint64_t *)a3, (long long *)((char *)this + 152)))
  {
    std::operator+<char>();
    unsigned int v6 = std::string::append(&v18, "'");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
    if (SHIBYTE(v20) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  uint64_t v10 = (std::__shared_weak_count *)*((void *)a2 + 63);
  unint64_t v9 = (std::__shared_weak_count *)*((void *)a2 + 64);
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v11 = std::__tree<std::string>::find<std::string>((uint64_t)&v10[11].__shared_owners_, (const void **)this + 19);
  if (&v10[11].__shared_weak_owners_ == (uint64_t *)v11)
  {
    uint64_t v10 = 0;
LABEL_24:
    std::operator+<char>();
    int v15 = std::string::append(&v18, "'");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    std::string::size_type v20 = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
    if (SHIBYTE(v20) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
LABEL_28:
    uint64_t v8 = 0;
    if (!v10) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  uint64_t v13 = *(void *)(v11 + 56);
  uint64_t v10 = *(std::__shared_weak_count **)(v11 + 64);
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v13) {
    goto LABEL_24;
  }
  int v14 = *(siri::dialogengine::Context ***)(v13 + 144);
  if (v14 == *(siri::dialogengine::Context ***)(v13 + 152)) {
    goto LABEL_28;
  }
  uint64_t v8 = siri::dialogengine::EvaluateConditionEntry(a2, *v14, a3, v12);
  if (v10) {
LABEL_29:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
LABEL_30:
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }
  return v8;
}

void sub_1C5DE7F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (v22)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
    if (!v21) {
LABEL_4:
    }
      _Unwind_Resume(exception_object);
  }
  else if (!v21)
  {
    goto LABEL_4;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  goto LABEL_4;
}

uint64_t siri::dialogengine::ConditionSubCondition::operator!=(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(void *)a1 + 24))(a1) ^ 1;
}

uint64_t siri::dialogengine::ConditionSubCondition::operator==(uint64_t a1, const void *a2)
{
  uint64_t result = siri::dialogengine::ConditionEntry::operator==(a1, (uint64_t)a2);
  if (result)
  {
    if (result)
    {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 175);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = *(unsigned __int8 *)(a1 + 175);
      }
      else {
        uint64_t v6 = *(void *)(a1 + 160);
      }
      uint64_t v7 = *(unsigned __int8 *)(result + 175);
      int v8 = (char)v7;
      if ((v7 & 0x80u) != 0) {
        uint64_t v7 = *(void *)(result + 160);
      }
      if (v6 == v7)
      {
        unint64_t v9 = (const void **)(a1 + 152);
        int v12 = *(unsigned __int8 **)(result + 152);
        uint64_t v10 = (unsigned __int8 *)(result + 152);
        uint64_t v11 = v12;
        if (v8 >= 0) {
          uint64_t v13 = v10;
        }
        else {
          uint64_t v13 = v11;
        }
        if ((v5 & 0x80) != 0)
        {
          return memcmp(*v9, v13, *(void *)(a1 + 160)) == 0;
        }
        else if (*(unsigned char *)(a1 + 175))
        {
          uint64_t v14 = v5 - 1;
          do
          {
            int v16 = *(unsigned __int8 *)v9;
            unint64_t v9 = (const void **)((char *)v9 + 1);
            int v15 = v16;
            int v18 = *v13++;
            int v17 = v18;
            BOOL v20 = v14-- != 0;
            uint64_t result = v15 == v17;
          }
          while (v15 == v17 && v20);
        }
        else
        {
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t siri::dialogengine::ConditionSubCondition::Validate(siri::dialogengine::ConditionSubCondition *this, std::__shared_weak_count **a2)
{
  if (!a2
    || !siri::dialogengine::ConditionEntry::Validate((const void ***)this, (siri::dialogengine::Context *)a2))
  {
    return 0;
  }
  if ((*((char *)this + 175) & 0x80000000) == 0)
  {
    if (*((unsigned char *)this + 175)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (!*((void *)this + 20))
  {
LABEL_13:
    std::string::basic_string[abi:ne180100]<0>(__p, "Sub condition has no name");
    siri::dialogengine::Context::AddValidationError((uint64_t)a2, (long long *)__p, (uint64_t)this + 88);
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[0]);
    }
    return 0;
  }
LABEL_5:
  uint64_t v5 = a2[63];
  BOOL v4 = a2[64];
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (!v5)
  {
LABEL_18:
    uint64_t v9 = 1;
LABEL_19:
    if (!v4) {
      return v9;
    }
    goto LABEL_26;
  }
  uint64_t v6 = std::__tree<std::string>::find<std::string>((uint64_t)&v5[11].__shared_owners_, (const void **)this + 19);
  if (&v5[11].__shared_weak_owners_ == (uint64_t *)v6) {
    goto LABEL_21;
  }
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v7 = *(std::__shared_weak_count **)(v6 + 64);
  if (!v7)
  {
    if (!v8) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  uint64_t v9 = 1;
  atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  if (v8) {
    goto LABEL_19;
  }
LABEL_21:
  std::operator+<char>();
  uint64_t v11 = std::string::append(&v13, "'");
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  std::string::size_type v15 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Context::AddValidationError((uint64_t)a2, (long long *)__p, (uint64_t)this + 88);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  uint64_t v9 = 0;
  if (v4) {
LABEL_26:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  return v9;
}

void sub_1C5DE82C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::ConditionSubCondition::~ConditionSubCondition(siri::dialogengine::ConditionSubCondition *this)
{
  *(void *)this = &unk_1F211D038;
  uint64_t v2 = (void **)((char *)this + 88);
  *((void *)this + 11) = &unk_1F211D078;
  if (*((char *)this + 175) < 0) {
    operator delete(*((void **)this + 19));
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v2);
  siri::dialogengine::ConditionEntry::~ConditionEntry((void **)this);
  JUMPOUT(0x1C8796D70);
}

{
  void **v2;
  uint64_t vars8;

  *(void *)this = &unk_1F211D038;
  uint64_t v2 = (void **)((char *)this + 88);
  *((void *)this + 11) = &unk_1F211D078;
  if (*((char *)this + 175) < 0) {
    operator delete(*((void **)this + 19));
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v2);
  siri::dialogengine::ConditionEntry::~ConditionEntry((void **)this);
}

double siri::dialogengine::ConditionSubCondition::ConditionSubCondition(siri::dialogengine::ConditionSubCondition *this)
{
  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 1) = (char *)this + 16;
  double result = 0.0;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 8) = 4;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *(void *)this = &unk_1F211D038;
  *((void *)this + 11) = &unk_1F211D078;
  *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 21) = 0;
  return result;
}

{
  double result;

  *((void *)this + 3) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 1) = (char *)this + 16;
  double result = 0.0;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 8) = 4;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *(void *)this = &unk_1F211D038;
  *((void *)this + 11) = &unk_1F211D078;
  *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 21) = 0;
  return result;
}

uint64_t siri::dialogengine::ConditionSubCondition::ConditionSubCondition(uint64_t a1, const std::string *a2)
{
  *(void *)(a1 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = a1 + 16;
  *(_OWORD *)(a1 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 32) = 4;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)a1 = &unk_1F211D038;
  *(void *)(a1 + 88) = &unk_1F211D078;
  *(void *)(a1 + 16std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(void *)(a1 + 168) = 0;
  siri::dialogengine::ConditionSubCondition::SetName(a1, a2);
  return a1;
}

void sub_1C5DE85E4(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 175) < 0) {
    operator delete(*v3);
  }
  siri::dialogengine::LineNumberBase::~LineNumberBase(v2);
  siri::dialogengine::ConditionEntry::~ConditionEntry((void **)v1);
  _Unwind_Resume(a1);
}

double siri::dialogengine::ConditionSubCondition::SetName(uint64_t a1, const std::string *a2)
{
  siri::dialogengine::StringTrim(" \t\n\r", a2, &v5);
  unint64_t v3 = (void **)(a1 + 152);
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*v3);
  }
  double result = *(double *)&v5.__r_.__value_.__l.__data_;
  *(_OWORD *)unint64_t v3 = *(_OWORD *)&v5.__r_.__value_.__l.__data_;
  *(void *)(a1 + 168) = *((void *)&v5.__r_.__value_.__l + 2);
  return result;
}

void siri::dialogengine::ConditionSubCondition::GetName(siri::dialogengine::ConditionSubCondition *this@<X0>, std::string *a2@<X8>)
{
  if (*((char *)this + 175) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *((const std::string::value_type **)this + 19), *((void *)this + 20));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)((char *)this + 152);
    a2->__r_.__value_.__r.__words[2] = *((void *)this + 21);
  }
}

uint64_t YAML::Scanner::SimpleKey::SimpleKey(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)double result = v3;
  *(void *)(result + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

{
  uint64_t v3;

  uint64_t v3 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)double result = v3;
  *(void *)(result + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return result;
}

void *YAML::Scanner::SimpleKey::Validate(void *this)
{
  uint64_t v1 = this[3];
  if (v1) {
    *(_DWORD *)(v1 + 8) = 0;
  }
  uint64_t v2 = (_DWORD *)this[4];
  if (v2) {
    *uint64_t v2 = 0;
  }
  uint64_t v3 = (_DWORD *)this[5];
  if (v3) {
    *uint64_t v3 = 0;
  }
  return this;
}

void *YAML::Scanner::SimpleKey::Invalidate(void *this)
{
  uint64_t v1 = this[3];
  if (v1) {
    *(_DWORD *)(v1 + 8) = 1;
  }
  uint64_t v2 = (_DWORD *)this[4];
  if (v2) {
    *uint64_t v2 = 1;
  }
  uint64_t v3 = (_DWORD *)this[5];
  if (v3) {
    *uint64_t v3 = 1;
  }
  return this;
}

BOOL YAML::Scanner::CanInsertPotentialSimpleKey(YAML::Scanner *this)
{
  if (!*((unsigned char *)this + 146)) {
    return 0;
  }
  uint64_t v1 = *((void *)this + 24);
  return !v1
      || *(void *)(*(void *)(*((void *)this + 20) + 8 * ((v1 + *((void *)this + 23) - 1) / 0x55uLL))
                   + 48 * ((v1 + *((void *)this + 23) - 1) % 0x55uLL)
                   + 16) != *((void *)this + 39);
}

BOOL YAML::Scanner::ExistsActiveSimpleKey(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  return v1
      && *(void *)(*(void *)(*((void *)this + 20) + 8 * ((v1 + *((void *)this + 23) - 1) / 0x55uLL))
                   + 48 * ((v1 + *((void *)this + 23) - 1) % 0x55uLL)
                   + 16) == *((void *)this + 39);
}

void YAML::Scanner::InsertPotentialSimpleKey(YAML::Scanner *this)
{
  if (YAML::Scanner::CanInsertPotentialSimpleKey(this))
  {
    uint64_t v2 = *((void *)this + 1);
    int v3 = *((_DWORD *)this + 4);
    uint64_t v4 = *((void *)this + 39);
    if (v4)
    {
      std::string v5 = 0;
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v7 = YAML::Scanner::PushIndentTo((uint64_t)this);
      uint64_t v6 = v7;
      if (v7)
      {
        *(_DWORD *)(v7 + 8) = 2;
        std::string v5 = *(_DWORD **)(v7 + 16);
        *std::string v5 = 2;
      }
      else
      {
        std::string v5 = 0;
      }
    }
    uint64_t v8 = *((void *)this + 1);
    int v9 = *((_DWORD *)this + 4);
    *(void *)&long long v136 = 0xE00000000;
    *((void *)&v136 + 1) = v8;
    int v137 = v9;
    *(_OWORD *)std::string __p = 0u;
    memset(v139, 0, sizeof(v139));
    int v140 = 0;
    std::deque<YAML::Token>::push_back((void *)this + 12, &v136);
    unsigned int v131 = v5;
    v141 = (void **)v139 + 1;
    std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v141);
    if (SBYTE7(v139[0]) < 0) {
      operator delete(__p[0]);
    }
    unint64_t v10 = *((void *)this + 17) + *((void *)this + 16) - 1;
    uint64_t v11 = (_DWORD *)(*(void *)(*((void *)this + 13) + 8 * (v10 / 0x33)) + 80 * (v10 % 0x33));
    *uint64_t v11 = 2;
    long long v12 = (char *)*((void *)this + 21);
    std::string v13 = (char *)*((void *)this + 20);
    uint64_t v14 = v12 - v13;
    if (v12 == v13) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = 85 * ((v12 - v13) >> 3) - 1;
    }
    unint64_t v16 = *((void *)this + 23);
    unint64_t v17 = *((void *)this + 24) + v16;
    if (v15 == v17)
    {
      if (v16 < 0x55)
      {
        uint64_t v125 = v2;
        uint64_t v127 = v4;
        int v124 = v3;
        uint64_t v33 = v14 >> 3;
        char v34 = (char *)*((void *)this + 22);
        std::string v35 = (char *)*((void *)this + 19);
        uint64_t v36 = v34 - v35;
        if (v14 >> 3 >= (unint64_t)((v34 - v35) >> 3))
        {
          if (v34 == v35) {
            unint64_t v39 = 1;
          }
          else {
            unint64_t v39 = v36 >> 2;
          }
          unsigned int v40 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v39);
          uint64_t v42 = v41;
          char v43 = &v40[8 * v33];
          *(void *)&long long v44 = v40;
          *((void *)&v44 + 1) = v43;
          long long v132 = v44;
          char v45 = operator new(0xFF0uLL);
          *(void *)&long long v46 = v43;
          *((void *)&v46 + 1) = &v40[8 * v42];
          if (v33 == v42)
          {
            uint64_t v47 = 8 * v33;
            *(void *)&long long v48 = v132;
            if (v14 < 1)
            {
              unsigned int v87 = v45;
              uint64_t v88 = v47 >> 2;
              if (v12 == v13) {
                unint64_t v89 = 1;
              }
              else {
                unint64_t v89 = v88;
              }
              uint64_t v90 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v89);
              char v43 = &v90[8 * (v89 >> 2)];
              *(void *)&long long v48 = v90;
              *((void *)&v48 + 1) = v43;
              *(void *)&long long v46 = v43;
              *((void *)&v46 + 1) = &v90[8 * v91];
              if (v40)
              {
                long long v133 = v48;
                long long v128 = v46;
                operator delete(v40);
                long long v46 = v128;
                long long v48 = v133;
              }
              char v45 = v87;
            }
            else
            {
              uint64_t v49 = v47 >> 3;
              if (v49 >= -1) {
                unint64_t v50 = v49 + 1;
              }
              else {
                unint64_t v50 = v49 + 2;
              }
              v43 -= 8 * (v50 >> 1);
              *(void *)&long long v46 = v43;
              *((void *)&v48 + 1) = v43;
            }
          }
          else
          {
            long long v48 = v132;
          }
          *(void *)char v43 = v45;
          *(void *)&long long v46 = v46 + 8;
          uint64_t v92 = *((void *)this + 21);
          uint64_t v2 = v125;
          int v3 = v124;
          while (v92 != *((void *)this + 20))
          {
            long long v93 = (void *)*((void *)&v48 + 1);
            if (*((void *)&v48 + 1) == (void)v48)
            {
              unsigned int v95 = (unsigned char *)v46;
              if ((unint64_t)v46 >= *((void *)&v46 + 1))
              {
                if (*((void *)&v46 + 1) == *((void *)&v48 + 1)) {
                  unint64_t v100 = 1;
                }
                else {
                  unint64_t v100 = (uint64_t)(*((void *)&v46 + 1) - *((void *)&v48 + 1)) >> 2;
                }
                int v101 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v100);
                unsigned int v94 = &v101[(2 * v100 + 6) & 0xFFFFFFFFFFFFFFF8];
                std::string::size_type v103 = v94;
                uint64_t v104 = v95 - (unsigned char *)v93;
                if (v95 != (unsigned char *)v93)
                {
                  std::string::size_type v103 = &v94[v104 & 0xFFFFFFFFFFFFFFF8];
                  uint64_t v105 = 8 * (v104 >> 3);
                  v106 = v94;
                  unsigned int v107 = v93;
                  do
                  {
                    uint64_t v108 = *v107++;
                    *(void *)v106 = v108;
                    v106 += 8;
                    v105 -= 8;
                  }
                  while (v105);
                }
                *(void *)&long long v48 = v101;
                *((void *)&v48 + 1) = v94;
                *(void *)&long long v46 = v103;
                *((void *)&v46 + 1) = &v101[8 * v102];
                if (v93)
                {
                  long long v135 = v48;
                  long long v129 = v46;
                  operator delete(v93);
                  long long v46 = v129;
                  long long v48 = v135;
                }
              }
              else
              {
                uint64_t v96 = (uint64_t)(*((void *)&v46 + 1) - v46) >> 3;
                if (v96 >= -1) {
                  uint64_t v97 = v96 + 1;
                }
                else {
                  uint64_t v97 = v96 + 2;
                }
                uint64_t v98 = v97 >> 1;
                uint64_t v99 = v46 + 8 * (v97 >> 1);
                unsigned int v94 = (char *)(v99 - (v46 - *((void *)&v48 + 1)));
                if ((void)v46 == *((void *)&v48 + 1))
                {
                  unsigned int v95 = (unsigned char *)*((void *)&v48 + 1);
                }
                else
                {
                  uint64_t v134 = v48;
                  uint64_t v130 = *((void *)&v46 + 1);
                  memmove((void *)(v99 - (v46 - *((void *)&v48 + 1))), *((const void **)&v48 + 1), v46 - *((void *)&v48 + 1));
                  *((void *)&v46 + 1) = v130;
                  *(void *)&long long v48 = v134;
                }
                *((void *)&v48 + 1) = v94;
                *(void *)&long long v46 = &v95[8 * v98];
              }
            }
            else
            {
              unsigned int v94 = (char *)*((void *)&v48 + 1);
            }
            uint64_t v109 = *(void *)(v92 - 8);
            v92 -= 8;
            *((void *)v94 - 1) = v109;
            *((void *)&v48 + 1) -= 8;
          }
          uint64_t v110 = (void *)*((void *)this + 19);
          *(_OWORD *)((char *)this + 152) = v48;
          *(_OWORD *)((char *)this + 168) = v46;
          uint64_t v4 = v127;
          if (v110) {
            operator delete(v110);
          }
        }
        else
        {
          char v37 = operator new(0xFF0uLL);
          char v38 = v37;
          if (v34 == v12)
          {
            if (v35 == v13)
            {
              if (v12 == v13) {
                unint64_t v64 = 1;
              }
              else {
                unint64_t v64 = v36 >> 2;
              }
              uint64_t v65 = 2 * v64;
              unsigned int v66 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v64);
              std::string v13 = &v66[(v65 + 6) & 0xFFFFFFFFFFFFFFF8];
              unsigned int v68 = (uint64_t *)*((void *)this + 20);
              unsigned int v69 = v13;
              uint64_t v70 = *((void *)this + 21) - (void)v68;
              if (v70)
              {
                unsigned int v69 = &v13[v70 & 0xFFFFFFFFFFFFFFF8];
                uint64_t v71 = 8 * (v70 >> 3);
                unsigned int v72 = v13;
                do
                {
                  uint64_t v73 = *v68++;
                  *(void *)unsigned int v72 = v73;
                  v72 += 8;
                  v71 -= 8;
                }
                while (v71);
              }
              unsigned int v74 = (void *)*((void *)this + 19);
              *((void *)this + 19) = v66;
              *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v13;
              *((void *)this + 21) = v69;
              *((void *)this + 22) = &v66[8 * v67];
              if (v74)
              {
                operator delete(v74);
                std::string v13 = (char *)*((void *)this + 20);
              }
            }
            *((void *)v13 - 1) = v38;
            uint64_t v75 = (char *)*((void *)this + 20);
            unsigned int v76 = (char *)*((void *)this + 21);
            *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v75 - 8;
            uint64_t v77 = *((void *)v75 - 1);
            *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v75;
            uint64_t v2 = v125;
            int v3 = v124;
            if (v76 == *((char **)this + 22))
            {
              unint64_t v78 = *((void *)this + 19);
              uint64_t v79 = (uint64_t)&v75[-v78];
              if ((unint64_t)v75 <= v78)
              {
                uint64_t v112 = (uint64_t)&v76[-v78];
                BOOL v51 = v112 == 0;
                uint64_t v113 = v112 >> 2;
                if (v51) {
                  unint64_t v114 = 1;
                }
                else {
                  unint64_t v114 = v113;
                }
                int v115 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v114);
                uint64_t v117 = &v115[8 * (v114 >> 2)];
                unsigned int v118 = (uint64_t *)*((void *)this + 20);
                unsigned int v76 = v117;
                uint64_t v119 = *((void *)this + 21) - (void)v118;
                if (v119)
                {
                  unsigned int v76 = &v117[v119 & 0xFFFFFFFFFFFFFFF8];
                  uint64_t v120 = 8 * (v119 >> 3);
                  unsigned int v121 = &v115[8 * (v114 >> 2)];
                  do
                  {
                    uint64_t v122 = *v118++;
                    *(void *)unsigned int v121 = v122;
                    v121 += 8;
                    v120 -= 8;
                  }
                  while (v120);
                }
                unsigned int v123 = (void *)*((void *)this + 19);
                *((void *)this + 19) = v115;
                *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v117;
                *((void *)this + 21) = v76;
                *((void *)this + 22) = &v115[8 * v116];
                if (v123)
                {
                  operator delete(v123);
                  unsigned int v76 = (char *)*((void *)this + 21);
                }
              }
              else
              {
                uint64_t v80 = v79 >> 3;
                BOOL v24 = v79 >> 3 < -1;
                uint64_t v81 = (v79 >> 3) + 2;
                if (v24) {
                  uint64_t v82 = v81;
                }
                else {
                  uint64_t v82 = v80 + 1;
                }
                uint64_t v83 = -(v82 >> 1);
                uint64_t v84 = v82 >> 1;
                unsigned int v85 = &v75[-8 * v84];
                int64_t v86 = v76 - v75;
                if (v76 != v75)
                {
                  memmove(&v75[-8 * v84], v75, v76 - v75);
                  uint64_t v75 = (char *)*((void *)this + 20);
                }
                unsigned int v76 = &v85[v86];
                *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &v75[8 * v83];
                *((void *)this + 21) = &v85[v86];
              }
            }
            *(void *)unsigned int v76 = v77;
            *((void *)this + 21) += 8;
            uint64_t v4 = v127;
          }
          else
          {
            *(void *)long long v12 = v37;
            *((void *)this + 21) += 8;
            uint64_t v2 = v125;
            uint64_t v4 = v127;
            int v3 = v124;
          }
        }
      }
      else
      {
        *((void *)this + 23) = v16 - 85;
        uint64_t v20 = *(void *)v13;
        int v18 = v13 + 8;
        uint64_t v19 = v20;
        *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v18;
        if (*((char **)this + 22) == v12)
        {
          unint64_t v21 = *((void *)this + 19);
          uint64_t v22 = (uint64_t)&v18[-v21];
          if ((unint64_t)v18 <= v21)
          {
            uint64_t v52 = (uint64_t)&v12[-v21];
            BOOL v51 = v52 == 0;
            uint64_t v53 = v52 >> 2;
            if (v51) {
              unint64_t v54 = 1;
            }
            else {
              unint64_t v54 = v53;
            }
            unsigned int v55 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v54);
            unsigned int v57 = &v55[8 * (v54 >> 2)];
            unsigned int v58 = (uint64_t *)*((void *)this + 20);
            long long v12 = v57;
            uint64_t v59 = *((void *)this + 21) - (void)v58;
            if (v59)
            {
              long long v12 = &v57[v59 & 0xFFFFFFFFFFFFFFF8];
              uint64_t v60 = 8 * (v59 >> 3);
              unsigned int v61 = &v55[8 * (v54 >> 2)];
              do
              {
                uint64_t v62 = *v58++;
                *(void *)unsigned int v61 = v62;
                v61 += 8;
                v60 -= 8;
              }
              while (v60);
            }
            uint64_t v63 = (void *)*((void *)this + 19);
            *((void *)this + 19) = v55;
            *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v57;
            *((void *)this + 21) = v12;
            *((void *)this + 22) = &v55[8 * v56];
            if (v63)
            {
              operator delete(v63);
              long long v12 = (char *)*((void *)this + 21);
            }
          }
          else
          {
            uint64_t v126 = v4;
            uint64_t v23 = v22 >> 3;
            BOOL v24 = v22 >> 3 < -1;
            uint64_t v25 = (v22 >> 3) + 2;
            if (v24) {
              uint64_t v26 = v25;
            }
            else {
              uint64_t v26 = v23 + 1;
            }
            uint64_t v27 = -(v26 >> 1);
            uint64_t v28 = v26 >> 1;
            uint64_t v29 = &v18[-8 * v28];
            size_t v30 = v12 - v18;
            if (v12 == v18)
            {
              char v32 = v12;
            }
            else
            {
              unint64_t v31 = &v18[-8 * v28];
              memmove(v31, v18, v30);
              uint64_t v29 = v31;
              char v32 = (char *)*((void *)this + 20);
            }
            long long v12 = &v29[v30];
            *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &v32[8 * v27];
            *((void *)this + 21) = &v29[v30];
            uint64_t v4 = v126;
          }
        }
        *(void *)long long v12 = v19;
        *((void *)this + 21) += 8;
      }
      std::string v13 = (char *)*((void *)this + 20);
      unint64_t v17 = *((void *)this + 24) + *((void *)this + 23);
    }
    unint64_t v111 = *(void *)&v13[8 * (v17 / 0x55)] + 48 * (v17 % 0x55);
    *(void *)unint64_t v111 = v2;
    *(_DWORD *)(v111 + 8) = v3;
    *(void *)(v111 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v4;
    *(void *)(v111 + 24) = v6;
    *(void *)(v111 + 32) = v131;
    *(void *)(v111 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11;
    ++*((void *)this + 24);
  }
}

void sub_1C5DE8EE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, char a18)
{
  operator delete(v18);
  if ((void)a17) {
    operator delete((void *)a17);
  }
  _Unwind_Resume(a1);
}

__n128 std::deque<YAML::Token>::push_back(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 51 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    std::deque<YAML::Token>::__add_back_capacity(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x33)) + 80 * (v7 % 0x33);
  long long v9 = *a2;
  *(_DWORD *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((_DWORD *)a2 + 4);
  *(_OWORD *)unint64_t v8 = v9;
  long long v10 = *(long long *)((char *)a2 + 24);
  *(void *)(v8 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)a2 + 5);
  *(_OWORD *)(v8 + 24) = v10;
  *((void *)a2 + 4) = 0;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 3) = 0;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  __n128 result = (__n128)a2[3];
  *(__n128 *)(v8 + 48) = result;
  *(void *)(v8 + 64) = *((void *)a2 + 8);
  *((void *)a2 + 7) = 0;
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 6) = 0;
  *(_DWORD *)(v8 + 72) = *((_DWORD *)a2 + 18);
  ++a1[5];
  return result;
}

void YAML::Token::~Token(void **this)
{
  uint64_t v2 = this + 6;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

void std::deque<YAML::Token>::__add_back_capacity(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x33;
  unint64_t v4 = v2 - 51;
  if (v3)
  {
    a1[4] = v4;
    uint64_t v5 = (void *)a1[1];
    uint64_t v6 = (char *)a1[2];
    uint64_t v9 = *v5;
    unint64_t v7 = (char *)(v5 + 1);
    uint64_t v8 = v9;
    a1[1] = v7;
    if (v6 != (char *)a1[3]) {
      goto LABEL_41;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v40 = 1;
      }
      else {
        unint64_t v40 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v41 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v40);
      uint64_t v42 = &v41[8 * (v40 >> 2)];
      long long v44 = &v41[8 * v43];
      char v45 = (uint64_t *)a1[1];
      uint64_t v6 = v42;
      uint64_t v46 = a1[2] - (void)v45;
      if (v46)
      {
        uint64_t v6 = &v42[v46 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v47 = 8 * (v46 >> 3);
        long long v48 = &v41[8 * (v40 >> 2)];
        do
        {
          uint64_t v49 = *v45++;
          *(void *)long long v48 = v49;
          v48 += 8;
          v47 -= 8;
        }
        while (v47);
      }
      goto LABEL_29;
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    BOOL v12 = v10 >> 3 < -1;
    uint64_t v13 = (v10 >> 3) + 2;
    if (v12) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = v11 + 1;
    }
    uint64_t v15 = -(v14 >> 1);
    uint64_t v16 = v14 >> 1;
    unint64_t v17 = &v7[-8 * v16];
    int64_t v18 = v6 - v7;
    if (v6 != v7)
    {
      memmove(&v7[-8 * v16], v7, v6 - v7);
      unint64_t v7 = (char *)a1[1];
    }
    uint64_t v6 = &v17[v18];
    a1[1] = &v7[8 * v15];
    a1[2] = &v17[v18];
    goto LABEL_41;
  }
  uint64_t v20 = (char *)a1[2];
  uint64_t v19 = (char *)a1[3];
  unint64_t v21 = (char *)*a1;
  uint64_t v22 = (char *)a1[1];
  unint64_t v23 = (v20 - v22) >> 3;
  uint64_t v24 = (uint64_t)&v19[-*a1];
  if (v23 < v24 >> 3)
  {
    uint64_t v25 = operator new(0xFF0uLL);
    uint64_t v26 = v25;
    if (v19 != v20)
    {
      *(void *)uint64_t v20 = v25;
LABEL_42:
      a1[2] += 8;
      return;
    }
    if (v22 == v21)
    {
      if (v20 == v22) {
        unint64_t v51 = 1;
      }
      else {
        unint64_t v51 = (v19 - v22) >> 2;
      }
      uint64_t v52 = 2 * v51;
      uint64_t v53 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v51);
      uint64_t v22 = &v53[(v52 + 6) & 0xFFFFFFFFFFFFFFF8];
      unsigned int v55 = (uint64_t *)a1[1];
      uint64_t v56 = v22;
      uint64_t v57 = a1[2] - (void)v55;
      if (v57)
      {
        uint64_t v56 = &v22[v57 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v58 = 8 * (v57 >> 3);
        uint64_t v59 = &v53[(v52 + 6) & 0xFFFFFFFFFFFFFFF8];
        do
        {
          uint64_t v60 = *v55++;
          *(void *)uint64_t v59 = v60;
          v59 += 8;
          v58 -= 8;
        }
        while (v58);
      }
      unsigned int v61 = (char *)*a1;
      *a1 = v53;
      a1[1] = v22;
      a1[2] = v56;
      a1[3] = &v53[8 * v54];
      if (v61)
      {
        operator delete(v61);
        uint64_t v22 = (char *)a1[1];
      }
    }
    *((void *)v22 - 1) = v26;
    unint64_t v7 = (char *)a1[1];
    uint64_t v6 = (char *)a1[2];
    a1[1] = v7 - 8;
    uint64_t v8 = *((void *)v7 - 1);
    a1[1] = v7;
    if (v6 != (char *)a1[3])
    {
LABEL_41:
      *(void *)uint64_t v6 = v8;
      goto LABEL_42;
    }
    uint64_t v10 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v85 = 1;
      }
      else {
        unint64_t v85 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v41 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v85);
      uint64_t v42 = &v41[8 * (v85 >> 2)];
      long long v44 = &v41[8 * v86];
      unsigned int v87 = (uint64_t *)a1[1];
      uint64_t v6 = v42;
      uint64_t v88 = a1[2] - (void)v87;
      if (v88)
      {
        uint64_t v6 = &v42[v88 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v89 = 8 * (v88 >> 3);
        uint64_t v90 = &v41[8 * (v85 >> 2)];
        do
        {
          uint64_t v91 = *v87++;
          *(void *)uint64_t v90 = v91;
          v90 += 8;
          v89 -= 8;
        }
        while (v89);
      }
LABEL_29:
      unint64_t v50 = (char *)*a1;
      *a1 = v41;
      a1[1] = v42;
      a1[2] = v6;
      a1[3] = v44;
      if (v50)
      {
        operator delete(v50);
        uint64_t v6 = (char *)a1[2];
      }
      goto LABEL_41;
    }
    goto LABEL_5;
  }
  uint64_t v27 = v24 >> 2;
  if (v19 == v21) {
    unint64_t v28 = 1;
  }
  else {
    unint64_t v28 = v27;
  }
  uint64_t v29 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v28);
  uint64_t v31 = v30;
  char v32 = &v29[8 * v23];
  *(void *)&long long v33 = v29;
  *((void *)&v33 + 1) = v32;
  long long v95 = v33;
  char v34 = operator new(0xFF0uLL);
  *(void *)&long long v35 = v32;
  *((void *)&v35 + 1) = &v29[8 * v31];
  if (v23 == v31)
  {
    uint64_t v36 = 8 * v23;
    *(void *)&long long v37 = v95;
    if (v20 - v22 >= 1)
    {
      uint64_t v38 = v36 >> 3;
      if (v38 >= -1) {
        unint64_t v39 = v38 + 1;
      }
      else {
        unint64_t v39 = v38 + 2;
      }
      v32 -= 8 * (v39 >> 1);
      *(void *)&long long v35 = v32;
      *((void *)&v37 + 1) = v32;
      goto LABEL_50;
    }
    uint64_t v62 = v36 >> 2;
    if (v20 == v22) {
      unint64_t v63 = 1;
    }
    else {
      unint64_t v63 = v62;
    }
    unint64_t v64 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v63);
    char v32 = &v64[8 * (v63 >> 2)];
    *(void *)&long long v37 = v64;
    *((void *)&v37 + 1) = v32;
    *(void *)&long long v35 = v32;
    *((void *)&v35 + 1) = &v64[8 * v65];
    if (!v29) {
      goto LABEL_50;
    }
    long long v92 = v35;
    long long v95 = v37;
    operator delete(v29);
    long long v35 = v92;
  }
  long long v37 = v95;
LABEL_50:
  *(void *)char v32 = v34;
  *(void *)&long long v35 = v35 + 8;
  for (uint64_t i = a1[2]; i != a1[1]; i -= 8)
  {
    uint64_t v67 = (void *)*((void *)&v37 + 1);
    if (*((void *)&v37 + 1) == (void)v37)
    {
      unsigned int v69 = (unsigned char *)v35;
      if ((unint64_t)v35 >= *((void *)&v35 + 1))
      {
        if (*((void *)&v35 + 1) == *((void *)&v37 + 1)) {
          unint64_t v74 = 1;
        }
        else {
          unint64_t v74 = (uint64_t)(*((void *)&v35 + 1) - *((void *)&v37 + 1)) >> 2;
        }
        uint64_t v75 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v74);
        unsigned int v68 = &v75[(2 * v74 + 6) & 0xFFFFFFFFFFFFFFF8];
        uint64_t v77 = v68;
        uint64_t v78 = v69 - (unsigned char *)v67;
        if (v69 != (unsigned char *)v67)
        {
          uint64_t v77 = &v68[v78 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v79 = 8 * (v78 >> 3);
          uint64_t v80 = v68;
          uint64_t v81 = v67;
          do
          {
            uint64_t v82 = *v81++;
            *(void *)uint64_t v80 = v82;
            v80 += 8;
            v79 -= 8;
          }
          while (v79);
        }
        *(void *)&long long v37 = v75;
        *((void *)&v37 + 1) = v68;
        *(void *)&long long v35 = v77;
        *((void *)&v35 + 1) = &v75[8 * v76];
        if (v67)
        {
          long long v93 = v35;
          long long v97 = v37;
          operator delete(v67);
          long long v35 = v93;
          long long v37 = v97;
        }
      }
      else
      {
        uint64_t v70 = (uint64_t)(*((void *)&v35 + 1) - v35) >> 3;
        if (v70 >= -1) {
          uint64_t v71 = v70 + 1;
        }
        else {
          uint64_t v71 = v70 + 2;
        }
        uint64_t v72 = v71 >> 1;
        uint64_t v73 = v35 + 8 * (v71 >> 1);
        unsigned int v68 = (char *)(v73 - (v35 - *((void *)&v37 + 1)));
        if ((void)v35 == *((void *)&v37 + 1))
        {
          unsigned int v69 = (unsigned char *)*((void *)&v37 + 1);
        }
        else
        {
          uint64_t v94 = *((void *)&v35 + 1);
          uint64_t v96 = v37;
          memmove((void *)(v73 - (v35 - *((void *)&v37 + 1))), *((const void **)&v37 + 1), v35 - *((void *)&v37 + 1));
          *((void *)&v35 + 1) = v94;
          *(void *)&long long v37 = v96;
        }
        *((void *)&v37 + 1) = v68;
        *(void *)&long long v35 = &v69[8 * v72];
      }
    }
    else
    {
      unsigned int v68 = (char *)*((void *)&v37 + 1);
    }
    uint64_t v83 = *(void *)(i - 8);
    *((void *)v68 - 1) = v83;
    *((void *)&v37 + 1) -= 8;
  }
  uint64_t v84 = (char *)*a1;
  *(_OWORD *)a1 = v37;
  *((_OWORD *)a1 + 1) = v35;
  if (v84)
  {
    operator delete(v84);
  }
}

void sub_1C5DE9528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, long long a11)
{
  operator delete(v11);
  if ((void)a11) {
    operator delete((void *)a11);
  }
  _Unwind_Resume(a1);
}

void YAML::Scanner::InvalidateSimpleKey(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1)
  {
    uint64_t v2 = v1 - 1;
    unint64_t v3 = *((void *)this + 23) + v1 - 1;
    uint64_t v4 = *(void *)(*((void *)this + 20) + 8 * (v3 / 0x55));
    unint64_t v5 = v3 % 0x55;
    if (*(void *)(v4 + 48 * (v3 % 0x55) + 16) == *((void *)this + 39))
    {
      uint64_t v6 = *(void *)(v4 + 48 * v5 + 24);
      if (v6) {
        *(_DWORD *)(v6 + 8) = 1;
      }
      unint64_t v7 = *(_DWORD **)(v4 + 48 * v5 + 32);
      if (v7) {
        *unint64_t v7 = 1;
      }
      uint64_t v8 = *(_DWORD **)(v4 + 48 * v5 + 40);
      if (v8) {
        *uint64_t v8 = 1;
      }
      *((void *)this + 24) = v2;
      std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19);
    }
  }
}

void std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100](void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  if (v1 == v2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = 85 * ((v1 - v2) >> 3) - 1;
  }
  if ((unint64_t)(v3 - (a1[5] + a1[4])) >= 0xAA)
  {
    operator delete(*(void **)(v1 - 8));
    a1[2] -= 8;
  }
}

uint64_t YAML::Scanner::VerifySimpleKey(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = v1 - 1;
  unint64_t v4 = *(void *)(*((void *)this + 20) + 8 * ((*((void *)this + 23) + v3) / 0x55uLL))
     + 48 * ((*((void *)this + 23) + v3) % 0x55uLL);
  if (*(void *)(v4 + 16) != *((void *)this + 39)) {
    return 0;
  }
  uint64_t v6 = *(void *)(v4 + 24);
  unint64_t v5 = *(_DWORD **)(v4 + 32);
  unint64_t v7 = *(int **)(v4 + 40);
  int v8 = *(_DWORD *)v4;
  int v9 = *(_DWORD *)(v4 + 4);
  *((void *)this + 24) = v3;
  std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100]((void *)this + 19);
  if (*((_DWORD *)this + 3) == v9 && *((_DWORD *)this + 2) - v8 <= 1024)
  {
    if (v6) {
      *(_DWORD *)(v6 + 8) = 0;
    }
    if (v5) {
      *unint64_t v5 = 0;
    }
    uint64_t result = 1;
    if (v7)
    {
      int v11 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    if (v6) {
      *(_DWORD *)(v6 + 8) = 1;
    }
    if (v5) {
      *unint64_t v5 = 1;
    }
    uint64_t result = 0;
    if (v7)
    {
      int v11 = 1;
LABEL_18:
      *unint64_t v7 = v11;
    }
  }
  return result;
}

void YAML::Scanner::PopAllSimpleKeys(YAML::Scanner *this)
{
  uint64_t v1 = *((void *)this + 24);
  if (v1)
  {
    uint64_t v3 = (void *)((char *)this + 152);
    do
    {
      *((void *)this + 24) = v1 - 1;
      std::deque<YAML::Scanner::SimpleKey>::__maybe_remove_back_spare[abi:ne180100](v3);
      uint64_t v1 = *((void *)this + 24);
    }
    while (v1);
  }
}

uint64_t siri::dialogengine::VariableBoolean::ToString(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 48))();
}

void siri::dialogengine::VariableBoolean::ToString(siri::dialogengine::VariableBoolean *this@<X0>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)this + 66)) {
    uint64_t v3 = "true";
  }
  else {
    uint64_t v3 = "false";
  }
  std::string::basic_string[abi:ne180100]<0>(__p, v3);
  siri::dialogengine::SpeakableString::SpeakableString(a2, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C5DE9838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::VariableBoolean::IsEmpty(siri::dialogengine::VariableBoolean *this)
{
  return 0;
}

uint64_t siri::dialogengine::VariableBoolean::Accept(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a1);
}

void siri::dialogengine::VariableBoolean::~VariableBoolean(void **this)
{
  siri::dialogengine::Variable::~Variable(this);
  JUMPOUT(0x1C8796D70);
}

siri::dialogengine::VariableBoolean *siri::dialogengine::VariableBoolean::VariableBoolean(siri::dialogengine::VariableBoolean *this)
{
  std::string::basic_string[abi:ne180100]<0>(&v4, "");
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::dialogengine::TYPE_BOOLEAN);
  siri::dialogengine::Variable::Variable((uint64_t)this, &v4, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_1F211D098;
  *((unsigned char *)this + 66) = 0;
  return this;
}

void sub_1C5DE9964(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::VariableBoolean::VariableBoolean(uint64_t a1, const std::string *a2, char a3)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, siri::dialogengine::TYPE_BOOLEAN);
  siri::dialogengine::Variable::Variable(a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *(void *)a1 = &unk_1F211D098;
  *(unsigned char *)(a1 + 66) = a3;
  return a1;
}

void sub_1C5DE9A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::VariableBoolean::SetValue(uint64_t this, char a2)
{
  *(unsigned char *)(this + 66) = a2;
  return this;
}

uint64_t siri::dialogengine::VariableBoolean::GetValue(siri::dialogengine::VariableBoolean *this)
{
  return *((unsigned __int8 *)this + 66);
}

void *siri::dialogengine::DialogStateBase::DialogStateBase(void *this)
{
  *this = &unk_1F211D0E8;
  return this;
}

void siri::dialogengine::DialogStateBase::Get(siri::dialogengine::DialogStateBase *this)
{
}

void sub_1C5DE9B84(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::DialogStateClient *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateClient>,std::allocator<siri::dialogengine::DialogStateClient>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::DialogStateClient *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateClient>,std::allocator<siri::dialogengine::DialogStateClient>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::DialogStateClient *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateClient>,std::allocator<siri::dialogengine::DialogStateClient>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::DialogStateServer *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateServer>,std::allocator<siri::dialogengine::DialogStateServer>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<siri::dialogengine::DialogStateServer *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateServer>,std::allocator<siri::dialogengine::DialogStateServer>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<siri::dialogengine::DialogStateServer *,std::shared_ptr<siri::dialogengine::DialogStateBase>::__shared_ptr_default_delete<siri::dialogengine::DialogStateBase,siri::dialogengine::DialogStateServer>,std::allocator<siri::dialogengine::DialogStateServer>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

uint64_t siri::dialogengine::DialogStateBase::SetServerBehavior(uint64_t this)
{
  siri::dialogengine::sForceServerBehavior = this;
  return this;
}

void siri::dialogengine::DialogStateBase::UpdateStats(double a1, uint64_t a2, const void ***a3, unsigned __int8 *a4, const void ***a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double CurrentTime = a1;
  if (a1 == 0.0)
  {
    if (!a3)
    {
      gettimeofday(&v38, 0);
      double CurrentTime = (double)v38.tv_usec / 1000000.0 + (double)v38.tv_sec;
      if (a8) {
        goto LABEL_5;
      }
      goto LABEL_7;
    }
    double CurrentTime = siri::dialogengine::Context::GetCurrentTime((siri::dialogengine::Context *)a3);
  }
  if (a8)
  {
LABEL_5:
    ++*(void *)a8;
    *(double *)(a8 + 8) = CurrentTime;
    return;
  }
LABEL_7:
  ++*(void *)a6;
  *(double *)(a6 + 8) = CurrentTime;
  std::__tree<std::string>::destroy(a6 + 16, *(char **)(a6 + 24));
  *(void *)(a6 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = a6 + 24;
  *(void *)(a6 + 32) = 0;
  *(void *)(a6 + 24) = 0;
  unint64_t v17 = *a5;
  uint64_t v15 = a5 + 1;
  uint64_t v16 = v17;
  if (v17 != (const void **)v15)
  {
    do
    {
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)(a6 + 40), v16 + 4, (uint64_t)(v16 + 4));
      std::__tree<std::string>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t **)(a6 + 16), v16 + 4, (uint64_t)(v16 + 4));
      int64_t v18 = (const void **)v16[1];
      if (v18)
      {
        do
        {
          uint64_t v19 = (const void ***)v18;
          int64_t v18 = (const void **)*v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          uint64_t v19 = (const void ***)v16[2];
          BOOL v32 = *v19 == v16;
          uint64_t v16 = (const void **)v19;
        }
        while (!v32);
      }
      uint64_t v16 = (const void **)v19;
    }
    while (v19 != v15);
  }
  if (a3)
  {
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)&v43, a3 + 80);
    uint64_t v20 = v43;
    if (v43 != (long long *)v44)
    {
      while (1)
      {
        std::pair<std::string const,std::string>::pair[abi:ne180100](&v41, v20 + 2);
        siri::dialogengine::DialogStateUseCase::GetGroundingUsage(a6, (const void **)&v41.__r_.__value_.__l.__data_, (uint64_t)&v38);
        char v21 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
        if (!v38.tv_sec) {
          goto LABEL_44;
        }
        if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&__p, v40.__r_.__value_.__l.__data_, v40.__r_.__value_.__l.__size_);
        }
        else {
          std::string __p = v40;
        }
        if ((__s1.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__s1.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __s1.__r_.__value_.__l.__size_;
        }
        std::string::size_type v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        int v24 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v23 = __p.__r_.__value_.__l.__size_;
        }
        if (size != v23)
        {
          BOOL v31 = 1;
          if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_42;
          }
          goto LABEL_49;
        }
        uint64_t v25 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? &__p
            : (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((*((unsigned char *)&__s1.__r_.__value_.__s + 23) & 0x80) != 0) {
          break;
        }
        if (*((unsigned char *)&__s1.__r_.__value_.__s + 23))
        {
          uint64_t v26 = HIBYTE(__s1.__r_.__value_.__r.__words[2]) - 1;
          p_s1 = &__s1;
          do
          {
            int v29 = p_s1->__r_.__value_.__s.__data_[0];
            p_s1 = (std::string *)((char *)p_s1 + 1);
            int v28 = v29;
            int v30 = v25->__r_.__value_.__s.__data_[0];
            uint64_t v25 = (std::string *)((char *)v25 + 1);
            BOOL v31 = v28 != v30;
            BOOL v32 = v28 != v30 || v26-- == 0;
          }
          while (!v32);
LABEL_41:
          if ((v24 & 0x80000000) == 0) {
            goto LABEL_42;
          }
          goto LABEL_49;
        }
        BOOL v31 = 0;
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_42:
          if (v31) {
            goto LABEL_43;
          }
          goto LABEL_50;
        }
LABEL_49:
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v31)
        {
LABEL_43:
          char v21 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
LABEL_44:
          v38.tv_sec = 0;
          uint64_t v39 = *(void *)&v38.tv_usec;
          if (v21 < 0)
          {
            *v40.__r_.__value_.__l.__data_ = 0;
            v40.__r_.__value_.__l.__size_ = 0;
          }
          else
          {
            v40.__r_.__value_.__s.__data_[0] = 0;
            *((unsigned char *)&v40.__r_.__value_.__s + 23) = 0;
          }
          std::string::operator=(&v40, &__s1);
          v38.tv_sec = 1;
          siri::dialogengine::GroundingInfo::AddTimestamp((siri::dialogengine::GroundingInfo *)&v38, CurrentTime);
          goto LABEL_51;
        }
LABEL_50:
        ++v38.tv_sec;
        siri::dialogengine::GroundingInfo::AddTimestamp((siri::dialogengine::GroundingInfo *)&v38, CurrentTime);
        siri::dialogengine::GroundingInfo::RemoveTimestampsOlderThan((uint64_t)&v38, CurrentTime + -2851200.0);
LABEL_51:
        siri::dialogengine::DialogStateUseCase::SetGroundingUsage(a6, (long long *)&v41, (uint64_t)&v38);
        if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v40.__r_.__value_.__l.__data_);
        }
        if (*(void *)&v38.tv_usec)
        {
          uint64_t v39 = *(void *)&v38.tv_usec;
          operator delete(*(void **)&v38.tv_usec);
        }
        if (SHIBYTE(__s1.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s1.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v41.__r_.__value_.__l.__data_);
        }
        long long v33 = (long long *)*((void *)v20 + 1);
        if (v33)
        {
          do
          {
            char v34 = v33;
            long long v33 = *(long long **)v33;
          }
          while (v33);
        }
        else
        {
          do
          {
            char v34 = (long long *)*((void *)v20 + 2);
            BOOL v32 = *(void *)v34 == (void)v20;
            uint64_t v20 = v34;
          }
          while (!v32);
        }
        uint64_t v20 = v34;
        if (v34 == (long long *)v44) {
          goto LABEL_65;
        }
      }
      BOOL v31 = memcmp(__s1.__r_.__value_.__l.__data_, v25, __s1.__r_.__value_.__l.__size_) != 0;
      goto LABEL_41;
    }
LABEL_65:
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v44[0]);
  }
  siri::dialogengine::GetFamilyIdFromCatId(a4, (uint64_t)&v38);
  uint64_t v35 = HIBYTE(v39);
  int v36 = SHIBYTE(v39);
  if (v39 < 0) {
    uint64_t v35 = *(void *)&v38.tv_usec;
  }
  if (v35)
  {
    ++*(void *)a7;
    *(double *)(a7 + 8) = CurrentTime;
  }
  if (v36 < 0) {
    operator delete((void *)v38.tv_sec);
  }
}

void sub_1C5DEA104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
}

void siri::dialogengine::SubstituteWords(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __str = *(std::string *)a1;
  }
  if (*(char *)(a1 + 47) < 0) {
    std::string::__init_copy_ctor_external(&v46, *(const std::string::value_type **)(a1 + 24), *(void *)(a1 + 32));
  }
  else {
    std::string v46 = *(std::string *)(a1 + 24);
  }
  siri::dialogengine::TransformTextLower((uint64_t)&__str, &__p);
  uint64_t v41 = a5;
  siri::dialogengine::TransformTextLower((uint64_t)&v46, &v44);
  if (a4 == 1)
  {
    uint64_t v24 = *a2;
    uint64_t v25 = a2[1];
    if (*a2 != v25)
    {
      do
      {
        for (uint64_t i = 0; ; uint64_t i = (char *)(v40 + EntireWord))
        {
          std::string::size_type EntireWord = siri::dialogengine::FindEntireWord(a3, (uint64_t *)&v44, v24, i);
          if (EntireWord == -1) {
            break;
          }
          std::operator+<char>();
          int v28 = std::string::append(&v48, "'>");
          long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
          v49.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v29;
          v28->__r_.__value_.__l.__size_ = 0;
          v28->__r_.__value_.__r.__words[2] = 0;
          v28->__r_.__value_.__r.__words[0] = 0;
          int v30 = *(char *)(v24 + 23);
          if (v30 >= 0) {
            BOOL v31 = (const std::string::value_type *)v24;
          }
          else {
            BOOL v31 = *(const std::string::value_type **)v24;
          }
          if (v30 >= 0) {
            std::string::size_type v32 = *(unsigned __int8 *)(v24 + 23);
          }
          else {
            std::string::size_type v32 = *(void *)(v24 + 8);
          }
          long long v33 = std::string::append(&v49, v31, v32);
          long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
          v50.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v34;
          v33->__r_.__value_.__l.__size_ = 0;
          v33->__r_.__value_.__r.__words[2] = 0;
          v33->__r_.__value_.__r.__words[0] = 0;
          uint64_t v35 = std::string::append(&v50, "</phoneme>");
          long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
          int64_t v43 = v35->__r_.__value_.__r.__words[2];
          long long v42 = v36;
          v35->__r_.__value_.__l.__size_ = 0;
          v35->__r_.__value_.__r.__words[2] = 0;
          v35->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v50.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v49.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v48.__r_.__value_.__l.__data_);
          }
          if (*(char *)(v24 + 23) < 0) {
            std::string::size_type v37 = *(void *)(v24 + 8);
          }
          else {
            std::string::size_type v37 = *(unsigned __int8 *)(v24 + 23);
          }
          if (v43 >= 0) {
            timeval v38 = (const std::string::value_type *)&v42;
          }
          else {
            timeval v38 = (const std::string::value_type *)v42;
          }
          if (v43 >= 0) {
            std::string::size_type v39 = HIBYTE(v43);
          }
          else {
            std::string::size_type v39 = *((void *)&v42 + 1);
          }
          std::string::replace(&v46, EntireWord, v37, v38, v39);
          siri::dialogengine::TransformTextLower((uint64_t)&v46, &v50);
          if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v44.__r_.__value_.__l.__data_);
          }
          std::string v44 = v50;
          if (SHIBYTE(v43) < 0)
          {
            uint64_t v40 = *((void *)&v42 + 1);
            operator delete((void *)v42);
          }
          else
          {
            uint64_t v40 = HIBYTE(v43);
          }
        }
        v24 += 48;
      }
      while (v24 != v25);
    }
  }
  else if (!a4)
  {
    uint64_t v10 = *a2;
    uint64_t v11 = a2[1];
    if (*a2 != v11)
    {
      do
      {
        char v12 = 0;
        uint64_t v13 = 0;
        while (1)
        {
          std::string::size_type v14 = siri::dialogengine::FindEntireWord(a3, (uint64_t *)&__p, v10, v13);
          if (v14 == -1) {
            break;
          }
          if (*(char *)(v10 + 23) < 0) {
            std::string::size_type v15 = *(void *)(v10 + 8);
          }
          else {
            std::string::size_type v15 = *(unsigned __int8 *)(v10 + 23);
          }
          std::string::basic_string(&v49, &__str, v14, v15, (std::allocator<char> *)&v48);
          siri::dialogengine::TransformTextMatch(v10 + 24, &v50);
          if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v49.__r_.__value_.__l.__data_);
          }
          if (*(char *)(v10 + 23) < 0) {
            std::string::size_type v16 = *(void *)(v10 + 8);
          }
          else {
            std::string::size_type v16 = *(unsigned __int8 *)(v10 + 23);
          }
          if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v17 = &v50;
          }
          else {
            unint64_t v17 = (std::string *)v50.__r_.__value_.__r.__words[0];
          }
          if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = v50.__r_.__value_.__l.__size_;
          }
          std::string::replace(&__str, v14, v16, (const std::string::value_type *)v17, size);
          siri::dialogengine::TransformTextLower((uint64_t)&__str, &v49);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          std::string __p = v49;
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
          {
            std::string::size_type v19 = v50.__r_.__value_.__l.__size_;
            operator delete(v50.__r_.__value_.__l.__data_);
          }
          else
          {
            std::string::size_type v19 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
          }
          uint64_t v13 = (char *)(v19 + v14);
          char v12 = 1;
        }
        if (v12)
        {
          for (std::string::size_type j = 0; ; std::string::size_type j = (char *)(v23 + v21))
          {
            std::string::size_type v21 = siri::dialogengine::FindEntireWord(a3, (uint64_t *)&v44, v10, j);
            if (v21 == -1) {
              break;
            }
            if (*(char *)(v10 + 23) < 0) {
              std::string::size_type v22 = *(void *)(v10 + 8);
            }
            else {
              std::string::size_type v22 = *(unsigned __int8 *)(v10 + 23);
            }
            std::string::replace(&v46, v21, v22, "\x1B\\audio=AssistantEtiquette\\"");
            siri::dialogengine::TransformTextLower((uint64_t)&v46, &v50);
            if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v44.__r_.__value_.__l.__data_);
            }
            std::string v44 = v50;
            std::string::basic_string[abi:ne180100]<0>(&v50, "\x1B\\audio=AssistantEtiquette\\"");
            if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0)
            {
              std::string::size_type v23 = v50.__r_.__value_.__l.__size_;
              operator delete(v50.__r_.__value_.__l.__data_);
            }
            else
            {
              std::string::size_type v23 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
            }
          }
        }
        v10 += 48;
      }
      while (v10 != v11);
    }
  }
  siri::dialogengine::SpeakableString::SpeakableString(v41, &__str, &v46);
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1C5DEA5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t siri::dialogengine::FindEntireWord(uint64_t *a1, uint64_t *a2, uint64_t a3, char *a4)
{
  unint64_t v7 = a2;
  while (1)
  {
    if (*((char *)v7 + 23) < 0)
    {
      unint64_t v9 = v7[1];
      if ((unint64_t)a4 >= v9) {
        return -1;
      }
      uint64_t v10 = *v7;
    }
    else
    {
      unint64_t v9 = *((unsigned __int8 *)v7 + 23);
      uint64_t v10 = (uint64_t)v7;
      if ((unint64_t)a4 >= v9) {
        return -1;
      }
    }
    int v11 = *(char *)(a3 + 23);
    char v12 = v11 >= 0 ? (char *)a3 : *(char **)a3;
    int64_t v13 = v11 >= 0 ? *(unsigned __int8 *)(a3 + 23) : *(void *)(a3 + 8);
    if (v13) {
      break;
    }
LABEL_23:
    siri::dialogengine::TokenizeText(a1, &v60);
    siri::dialogengine::TokenizeText(a1, (char **)&v58);
    uint64_t v25 = v60;
    if (v61 == v60)
    {
      BOOL v32 = 0;
    }
    else
    {
      uint64_t v51 = v4;
      uint64_t v52 = a1;
      uint64_t v53 = a3;
      uint64_t v26 = 0;
      unint64_t v27 = 0;
      unint64_t v28 = (v61 - v60) / 40;
      long long v29 = (char *)v58;
      unsigned int v55 = v59;
      if ((unint64_t)((v59 - (char *)v58) / 40) <= 1) {
        uint64_t v30 = 1;
      }
      else {
        uint64_t v30 = (v59 - (char *)v58) / 40;
      }
      if (v28 <= 1) {
        uint64_t v31 = 1;
      }
      else {
        uint64_t v31 = (v61 - v60) / 40;
      }
      uint64_t v56 = v31;
      BOOL v32 = 1;
      while (1)
      {
        BOOL v57 = v32;
        unint64_t v33 = v28 <= v27 ? v27 : v28;
        if (*(char **)&v25[40 * v27] == a4) {
          break;
        }
LABEL_55:
        BOOL v32 = ++v27 < v28;
        --v26;
        if (v27 == v56)
        {
          a3 = v53;
          unint64_t v7 = a2;
          uint64_t v4 = v51;
          a1 = v52;
          goto LABEL_59;
        }
      }
      if (v55 != v29)
      {
        uint64_t v34 = 0;
        uint64_t v35 = v33 + v26;
        while (v34 != v35)
        {
          long long v36 = &v29[40 * v34];
          std::string::size_type v37 = &v25[40 * v34 + 40 * v27];
          uint64_t v38 = v36[39];
          size_t v39 = *((void *)v36 + 3);
          if ((v38 & 0x80u) == 0) {
            uint64_t v40 = v36[39];
          }
          else {
            uint64_t v40 = *((void *)v36 + 3);
          }
          uint64_t v41 = v37[39];
          int v42 = (char)v41;
          if ((v41 & 0x80u) != 0) {
            uint64_t v41 = *((void *)v37 + 3);
          }
          if (v40 != v41) {
            goto LABEL_55;
          }
          int64_t v43 = (const void **)(v36 + 16);
          std::string v46 = (unsigned __int8 *)*((void *)v37 + 2);
          std::string v44 = (unsigned __int8 *)(v37 + 16);
          char v45 = v46;
          if (v42 >= 0) {
            uint64_t v47 = v44;
          }
          else {
            uint64_t v47 = v45;
          }
          if ((v38 & 0x80) != 0)
          {
            std::string v48 = a4;
            uint64_t v49 = v30;
            int v50 = memcmp(*v43, v47, v39);
            uint64_t v30 = v49;
            a4 = v48;
            if (v50) {
              goto LABEL_55;
            }
          }
          else if (v38)
          {
            while (*(unsigned __int8 *)v43 == *v47)
            {
              int64_t v43 = (const void **)((char *)v43 + 1);
              ++v47;
              if (!--v38) {
                goto LABEL_53;
              }
            }
            goto LABEL_55;
          }
LABEL_53:
          if (++v34 == v30) {
            break;
          }
        }
      }
      uint64_t v4 = (uint64_t)a4;
      a3 = v53;
      unint64_t v7 = a2;
      a1 = v52;
      BOOL v32 = v57;
    }
LABEL_59:
    ++a4;
    uint64_t v62 = &v58;
    std::vector<siri::dialogengine::Token>::__destroy_vector::operator()[abi:ne180100]((void ***)&v62);
    uint64_t v58 = &v60;
    std::vector<siri::dialogengine::Token>::__destroy_vector::operator()[abi:ne180100]((void ***)&v58);
    uint64_t result = v4;
    if (v32) {
      return result;
    }
  }
  uint64_t v14 = v4;
  std::string::size_type v15 = &a4[v10];
  std::string::size_type v16 = (char *)(v10 + v9);
  int64_t v17 = v9 - (void)a4;
  if (v17 >= v13)
  {
    int64_t v18 = a1;
    int v19 = *v12;
    do
    {
      uint64_t v20 = v17 - v13;
      if (v20 == -1) {
        break;
      }
      std::string::size_type v21 = (char *)memchr(v15, v19, v20 + 1);
      if (!v21) {
        break;
      }
      std::string::size_type v22 = v21;
      if (!memcmp(v21, v12, v13))
      {
        uint64_t result = -1;
        if (v22 == v16) {
          return result;
        }
        a4 = &v22[-v10];
        BOOL v24 = &v22[-v10 + 1] == 0;
        uint64_t v4 = v14;
        a1 = v18;
        unint64_t v7 = a2;
        if (v24) {
          return result;
        }
        goto LABEL_23;
      }
      std::string::size_type v15 = v22 + 1;
      int64_t v17 = v16 - (v22 + 1);
    }
    while (v17 >= v13);
  }
  return -1;
}

void sub_1C5DEA9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, char a19)
{
  a16 = (void **)&a19;
  std::vector<siri::dialogengine::Token>::__destroy_vector::operator()[abi:ne180100](&a16);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::ToString(siri::dialogengine::Variable *a1, const char *a2, const std::string::value_type **a3)
{
  siri::dialogengine::ObjectRegistry::GetObject((uint64_t)a2, a3, &v20);
  uint64_t v6 = v20;
  if (!v20) {
    goto LABEL_34;
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "toString");
  siri::dialogengine::ObjectSchema::GetProperty(v6, a2, (const void **)__p, 0, (siri::dialogengine::ObjectProperty *)v17);
  int v7 = v19;
  if (v19) {
    siri::dialogengine::ObjectProperty::~ObjectProperty(v17);
  }
  if (v16 < 0)
  {
    operator delete(__p[0]);
    if (!v7)
    {
LABEL_34:
      (*(void (**)(siri::dialogengine::Variable *))(*(void *)a1 + 48))(a1);
      goto LABEL_35;
    }
  }
  else if (!v7)
  {
    goto LABEL_34;
  }
  siri::dialogengine::Variable::GetFullName(a1, (uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    size_t v8 = v18;
  }
  else {
    size_t v8 = (size_t)v17[1];
  }
  if (v8)
  {
    unint64_t v9 = __p;
    std::string::basic_string[abi:ne180100]((uint64_t)__p, v8 + 9);
    if (v16 < 0) {
      unint64_t v9 = (void **)__p[0];
    }
    if ((v18 & 0x80u) == 0) {
      uint64_t v10 = v17;
    }
    else {
      uint64_t v10 = (void **)v17[0];
    }
    memmove(v9, v10, v8);
    strcpy((char *)v9 + v8, ".toString");
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(__p, "toString");
  }
  std::string::basic_string[abi:ne180100]<0>(v11, "toString");
  siri::dialogengine::ConceptCallbacks::InvokeCallback((uint64_t)a2, (uint64_t)a3, (uint64_t)v11, (uint64_t)a1, (uint64_t)__p, &v13);
  if (v12 < 0) {
    operator delete(v11[0]);
  }
  if (!v13)
  {
    if (v14) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v14);
    }
    if (v16 < 0) {
      operator delete(__p[0]);
    }
    if ((char)v18 < 0) {
      operator delete(v17[0]);
    }
    goto LABEL_34;
  }
  (*(void (**)(uint64_t))(*(void *)v13 + 48))(v13);
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  if (v16 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
LABEL_35:
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
}

void sub_1C5DEAC58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  uint64_t v31 = *(std::__shared_weak_count **)(v29 - 72);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VariableObject::ToString(uint64_t a1@<X8>)
{
  std::string::basic_string[abi:ne180100]<0>(__p, "[Object]");
  siri::dialogengine::SpeakableString::SpeakableString(a1, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C5DEAD3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::dialogengine::VariableObject::IsEmpty(siri::dialogengine::VariableObject *this)
{
  return *((void *)this + 11) == 0;
}

uint64_t siri::dialogengine::VariableObject::Accept(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1);
}

void siri::dialogengine::VariableObject::~VariableObject(siri::dialogengine::VariableObject *this)
{
  siri::dialogengine::VariableObject::~VariableObject(this);
  JUMPOUT(0x1C8796D70);
}

{
  siri::dialogengine::VariableObject *v2;
  uint64_t v3;
  siri::dialogengine::VariableObject *v4;
  siri::dialogengine::VariableObject *v5;
  BOOL v6;
  uint64_t vars8;

  *(void *)this = &unk_1F211D230;
  uint64_t v2 = (siri::dialogengine::VariableObject *)*((void *)this + 9);
  if (v2 != (siri::dialogengine::VariableObject *)((char *)this + 80))
  {
    do
    {
      uint64_t v3 = *((void *)v2 + 7);
      if (*(siri::dialogengine::VariableObject **)(v3 + 56) == this) {
        *(void *)(v3 + 56) = 0;
      }
      char v4 = (siri::dialogengine::VariableObject *)*((void *)v2 + 1);
      if (v4)
      {
        do
        {
          char v5 = v4;
          char v4 = *(siri::dialogengine::VariableObject **)v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          char v5 = (siri::dialogengine::VariableObject *)*((void *)v2 + 2);
          uint64_t v6 = *(void *)v5 == (void)v2;
          uint64_t v2 = v5;
        }
        while (!v6);
      }
      uint64_t v2 = v5;
    }
    while (v5 != (siri::dialogengine::VariableObject *)((char *)this + 80));
  }
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*((void **)this + 10));
  siri::dialogengine::Variable::~Variable((void **)this);
}

siri::dialogengine::VariableObject *siri::dialogengine::VariableObject::VariableObject(siri::dialogengine::VariableObject *this)
{
  std::string::basic_string[abi:ne180100]<0>(&v4, "");
  std::string::basic_string[abi:ne180100]<0>(&__p, (char *)siri::dialogengine::TYPE_OBJECT);
  siri::dialogengine::Variable::Variable((uint64_t)this, &v4, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  *(void *)this = &unk_1F211D230;
  *((void *)this + 11) = 0;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 9) = (char *)this + 80;
  return this;
}

void sub_1C5DEAF30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *siri::dialogengine::VariableObject::VariableObject(void *a1, const std::string *a2)
{
  std::string::basic_string[abi:ne180100]<0>(&__p, (char *)siri::dialogengine::TYPE_OBJECT);
  siri::dialogengine::Variable::Variable((uint64_t)a1, a2, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *a1 = &unk_1F211D230;
  a1[11] = 0;
  a1[10] = 0;
  a1[9] = a1 + 10;
  return a1;
}

void sub_1C5DEAFF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VariableObject::AddProperty(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (*a2)
  {
    char v5 = (uint64_t **)(a1 + 72);
    if (*(char *)(v2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)(v2 + 8), *(void *)(v2 + 16));
    }
    else
    {
      long long v6 = *(_OWORD *)(v2 + 8);
      __p.__r_.__value_.__r.__words[2] = *(void *)(v2 + 24);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v6;
    }
    uint64_t p_p = &__p;
    int v7 = std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(v5, (const void **)&__p.__r_.__value_.__l.__data_, (_OWORD **)&p_p);
    uint64_t v9 = *a2;
    uint64_t v8 = a2[1];
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v10 = (std::__shared_weak_count *)*((void *)v7 + 8);
    *((void *)v7 + 7) = v9;
    *((void *)v7 + 8) = v8;
    if (v10) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v10);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    *(void *)(*a2 + 56) = a1;
  }
}

void sub_1C5DEB0D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VariableObject::AddArrayProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t *a3@<X8>)
{
  std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableArray,std::allocator<siri::dialogengine::VariableArray>,std::string const&,void>(a3, a2);
  uint64_t v5 = *a3;
  long long v6 = (std::__shared_weak_count *)a3[1];
  v7[0] = v5;
  v7[1] = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  siri::dialogengine::VariableObject::AddProperty(a1, v7);
  if (v6)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
}

void sub_1C5DEB170(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VariableObject::AddBooleanProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = (std::__shared_weak_count *)operator new(0x60uLL);
  v8->__shared_owners_ = 0;
  v8->__shared_weak_owners_ = 0;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2126A20;
  uint64_t v9 = siri::dialogengine::VariableBoolean::VariableBoolean((uint64_t)&v8[1], a2, a3);
  *a4 = v9;
  a4[1] = (uint64_t)v8;
  v10[0] = v9;
  v10[1] = v8;
  atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  siri::dialogengine::VariableObject::AddProperty(a1, v10);
  std::__shared_weak_count::__release_shared[abi:ne180100](v8);
}

void sub_1C5DEB240(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::AddNumberProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = (std::__shared_weak_count *)operator new(0x68uLL);
  v8->__shared_owners_ = 0;
  v8->__shared_weak_owners_ = 0;
  v8->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2126A88;
  uint64_t v9 = siri::dialogengine::VariableNumber::VariableNumber((uint64_t)&v8[1], a2, a4);
  *a3 = v9;
  a3[1] = (uint64_t)v8;
  v10[0] = v9;
  v10[1] = v8;
  atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  siri::dialogengine::VariableObject::AddProperty(a1, v10);
  std::__shared_weak_count::__release_shared[abi:ne180100](v8);
}

void sub_1C5DEB320(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::AddObjectProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t *a3@<X8>)
{
  std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableObject,std::allocator<siri::dialogengine::VariableObject>,std::string const&,void>(a3, a2);
  uint64_t v5 = *a3;
  long long v6 = (std::__shared_weak_count *)a3[1];
  v7[0] = v5;
  v7[1] = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  siri::dialogengine::VariableObject::AddProperty(a1, v7);
  if (v6)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
}

void sub_1C5DEB3D0(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::VariableObject::AddStringProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, const siri::dialogengine::SpeakableString *a3@<X2>, std::string **a4@<X8>)
{
  uint64_t v8 = (std::string *)operator new(0x108uLL);
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F2126AF0;
  uint64_t v9 = siri::dialogengine::VariableString::VariableString(v8 + 1, a2, a3);
  *a4 = v9;
  a4[1] = v8;
  v10[0] = v9;
  v10[1] = v8;
  atomic_fetch_add_explicit((atomic_ullong *volatile)&v8->__r_.__value_.__l.__size_, 1uLL, memory_order_relaxed);
  siri::dialogengine::VariableObject::AddProperty(a1, v10);
  std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v8);
}

void sub_1C5DEB4A0(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::AddStringProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableString,std::allocator<siri::dialogengine::VariableString>,std::string const&,std::string const&,void>(a4, a2, a3);
  uint64_t v6 = *a4;
  int v7 = (std::__shared_weak_count *)a4[1];
  v8[0] = v6;
  v8[1] = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  siri::dialogengine::VariableObject::AddProperty(a1, v8);
  if (v7)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}

void sub_1C5DEB550(_Unwind_Exception *exception_object)
{
  if (v1)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::allocate_shared[abi:ne180100]<siri::dialogengine::VariableString,std::allocator<siri::dialogengine::VariableString>,std::string const&,std::string const&,void>(uint64_t *a1, const std::string *a2, uint64_t a3)
{
  uint64_t v6 = operator new(0x108uLL);
  v6[1] = 0;
  v6[2] = 0;
  *uint64_t v6 = &unk_1F2126AF0;
  uint64_t result = siri::dialogengine::VariableString::VariableString((uint64_t)(v6 + 3), a2, a3);
  *a1 = result;
  a1[1] = (uint64_t)v6;
  return result;
}

void sub_1C5DEB5DC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::AddStringProperty(uint64_t a1@<X0>, const std::string *a2@<X1>, const std::string *a3@<X2>, const std::string *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = (std::__shared_weak_count *)operator new(0x108uLL);
  v10->__shared_owners_ = 0;
  v10->__shared_weak_owners_ = 0;
  v10->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2126AF0;
  uint64_t v11 = siri::dialogengine::VariableString::VariableString((uint64_t)&v10[1], a2, a3, a4);
  *a5 = v11;
  a5[1] = (uint64_t)v10;
  v12[0] = v11;
  v12[1] = v10;
  atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  siri::dialogengine::VariableObject::AddProperty(a1, v12);
  std::__shared_weak_count::__release_shared[abi:ne180100](v10);
}

void sub_1C5DEB6AC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void siri::dialogengine::VariableObject::RemoveProperty(uint64_t a1, const void **a2)
{
  uint64_t v3 = (uint64_t **)(a1 + 72);
  std::string v4 = (uint64_t *)std::__tree<std::string>::find<std::string>(a1 + 72, a2);
  if ((uint64_t *)(a1 + 80) != v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (uint64_t)(v4 + 4);
    uint64_t v7 = v4[7];
    if (*(void *)(v7 + 56) == a1) {
      *(void *)(v7 + 56) = 0;
    }
    std::__tree<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::__map_value_compare<std::pair<google::protobuf::Descriptor const*,int>,std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>,std::less<std::pair<google::protobuf::Descriptor const*,int>>,true>,std::allocator<std::__value_type<std::pair<google::protobuf::Descriptor const*,int>,google::protobuf::FieldDescriptor const*>>>::__remove_node_pointer(v3, v4);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>,0>(v6);
    operator delete(v5);
  }
}

uint64_t siri::dialogengine::VariableObject::GetValue@<X0>(uint64_t a1@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  uint64_t result = std::__tree<std::string>::find<std::string>(a1 + 72, a2);
  if (a1 + 80 == result)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 64);
    *a3 = *(void *)(result + 56);
    a3[1] = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void siri::dialogengine::VariableObject::GetValues(siri::dialogengine::VariableObject *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v2 = (long long *)*((void *)this + 9);
  uint64_t v3 = (char *)this + 80;
  if (v2 != (long long *)((char *)this + 80))
  {
    uint64_t v5 = a2 + 2;
    do
    {
      std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::pair[abi:ne180100](&__p, v2 + 2);
      uint64_t v6 = (void *)a2[1];
      unint64_t v7 = a2[2];
      if ((unint64_t)v6 >= v7)
      {
        uint64_t v10 = ((uint64_t)v6 - *a2) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v12 = v7 - *a2;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        v23[4] = v5;
        uint64_t v14 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v13);
        std::string::size_type v15 = &v14[16 * v10];
        v23[0] = v14;
        v23[1] = v15;
        v23[3] = &v14[16 * v16];
        uint64_t v17 = *((void *)&v22 + 1);
        *(_OWORD *)std::string::size_type v15 = v22;
        if (v17) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
        }
        std::string v23[2] = v15 + 16;
        std::vector<std::shared_ptr<siri::dialogengine::JSONValue>>::__swap_out_circular_buffer(a2, v23);
        uint64_t v9 = (void *)a2[1];
        std::__split_buffer<std::shared_ptr<siri::dialogengine::ChunkText>>::~__split_buffer((uint64_t)v23);
      }
      else
      {
        *uint64_t v6 = v22;
        uint64_t v8 = *((void *)&v22 + 1);
        v6[1] = *((void *)&v22 + 1);
        if (v8) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
        }
        uint64_t v9 = v6 + 2;
        a2[1] = v6 + 2;
      }
      a2[1] = v9;
      if (*((void *)&v22 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v22 + 1));
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      unsigned __int8 v18 = (long long *)*((void *)v2 + 1);
      if (v18)
      {
        do
        {
          unsigned __int8 v19 = v18;
          unsigned __int8 v18 = *(long long **)v18;
        }
        while (v18);
      }
      else
      {
        do
        {
          unsigned __int8 v19 = (long long *)*((void *)v2 + 2);
          BOOL v20 = *(void *)v19 == (void)v2;
          uint64_t v2 = v19;
        }
        while (!v20);
      }
      uint64_t v2 = v19;
    }
    while (v19 != (long long *)v3);
  }
}

void sub_1C5DEB950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t siri::dialogengine::VariableObject::GetProperties@<X0>(const void ***this@<X0>, uint64_t a2@<X8>)
{
  return std::map<std::string,std::shared_ptr<siri::dialogengine::Variable>>::map[abi:ne180100](a2, this + 9);
}

uint64_t std::map<std::string,std::shared_ptr<siri::dialogengine::Variable>>::map[abi:ne180100](uint64_t a1, const void ***a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v3 = (uint64_t **)(a1 + 8);
  *(void *)(a1 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)a1 = a1 + 8;
  std::string v4 = a2 + 1;
  uint64_t v5 = *a2;
  if (*a2 != (const void **)(a2 + 1))
  {
    while (1)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (*(uint64_t ***)a1 == v3) {
        break;
      }
      unint64_t v7 = v3;
      if (v6)
      {
        do
        {
          uint64_t v8 = v6;
          uint64_t v6 = *(void *)(v6 + 8);
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v8 = (uint64_t)v7[2];
          BOOL v9 = *(void *)v8 == (void)v7;
          unint64_t v7 = (uint64_t **)v8;
        }
        while (v9);
      }
      if (std::less<std::string>::operator()[abi:ne180100](a1 + 16, (const void **)(v8 + 32), v5 + 4))
      {
        if (!*v3) {
          goto LABEL_9;
        }
LABEL_11:
        uint64_t v17 = (void *)v8;
        uint64_t v10 = (uint64_t **)(v8 + 8);
        goto LABEL_13;
      }
      uint64_t v10 = (uint64_t **)std::__tree<std::string>::__find_equal<std::string>(a1, &v17, v5 + 4);
LABEL_13:
      if (!*v10) {
        goto LABEL_14;
      }
LABEL_15:
      uint64_t v12 = (const void **)v5[1];
      if (v12)
      {
        do
        {
          unint64_t v13 = (const void ***)v12;
          uint64_t v12 = (const void **)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          unint64_t v13 = (const void ***)v5[2];
          BOOL v9 = *v13 == v5;
          uint64_t v5 = (const void **)v13;
        }
        while (!v9);
      }
      uint64_t v5 = (const void **)v13;
      if (v13 == v4) {
        return a1;
      }
    }
    uint64_t v8 = (uint64_t)v3;
    if (!v6)
    {
LABEL_9:
      uint64_t v17 = v3;
      uint64_t v10 = v3;
LABEL_14:
      unint64_t v11 = (char *)operator new(0x48uLL);
      v15[0] = v11;
      v15[1] = v3;
      char v16 = 0;
      std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::pair[abi:ne180100]((std::string *)(v11 + 32), (long long *)v5 + 2);
      char v16 = 1;
      std::__tree<std::string>::__insert_node_at((uint64_t **)a1, (uint64_t)v17, v10, (uint64_t *)v11);
      v15[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)v15);
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  return a1;
}

void sub_1C5DEBB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a9);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy(*v9);
  _Unwind_Resume(a1);
}

uint64_t *siri::dialogengine::vcat::GetRequiredFields(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v690 = *MEMORY[0x1E4F143B8];
  {
    std::string::basic_string[abi:ne180100]<0>(v360, "SnippetUI.ActionElement");
    std::string::basic_string[abi:ne180100]<0>(v581, "command");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v359, (const void **)v581, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v583, (long long *)v360, v359);
    std::string::basic_string[abi:ne180100]<0>(v357, "SnippetUI.ActionProperty");
    std::string::basic_string[abi:ne180100]<0>(v579, "actions");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v356, (const void **)v579, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v584, (long long *)v357, v356);
    std::string::basic_string[abi:ne180100]<0>(v354, "SnippetUI.BackgroundElement");
    std::string::basic_string[abi:ne180100]<0>(v577, "is_hidden_on_idioms");
    std::string::basic_string[abi:ne180100]<0>(v578, "visual");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v353, v577, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v585, (long long *)v354, v353);
    std::string::basic_string[abi:ne180100]<0>(v351, "SnippetUI.BinaryButton");
    std::string::basic_string[abi:ne180100]<0>(v575, "primary_button");
    std::string::basic_string[abi:ne180100]<0>(v576, "secondary_button");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v350, v575, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v586, (long long *)v351, v350);
    std::string::basic_string[abi:ne180100]<0>(v348, "SnippetUI.Button");
    std::string::basic_string[abi:ne180100]<0>(v573, "action");
    std::string::basic_string[abi:ne180100]<0>(v574, "label");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v347, v573, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v587, (long long *)v348, v347);
    std::string::basic_string[abi:ne180100]<0>(v345, "SnippetUI.Color.HexValue");
    std::string::basic_string[abi:ne180100]<0>(v571, "rgba");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v344, (const void **)v571, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v588, (long long *)v345, v344);
    std::string::basic_string[abi:ne180100]<0>(v342, "SnippetUI.Color");
    std::string::basic_string[abi:ne180100]<0>(v569, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v341, (const void **)v569, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v589, (long long *)v342, v341);
    std::string::basic_string[abi:ne180100]<0>(v339, "SnippetUI.ColorElement");
    std::string::basic_string[abi:ne180100]<0>(v567, "color");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v338, (const void **)v567, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v590, (long long *)v339, v338);
    std::string::basic_string[abi:ne180100]<0>(v336, "SnippetUI.Command.AppPunchout");
    std::string::basic_string[abi:ne180100]<0>(v565, "punch_out_uri");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v335, (const void **)v565, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v591, (long long *)v336, v335);
    std::string::basic_string[abi:ne180100]<0>(v333, "SnippetUI.Command.ChangeBackground");
    std::string::basic_string[abi:ne180100]<0>(v563, "background");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v332, (const void **)v563, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v592, (long long *)v333, v332);
    std::string::basic_string[abi:ne180100]<0>(v330, "SnippetUI.Command.ResponseGroup");
    std::string::basic_string[abi:ne180100]<0>(v561, "group_id");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v329, (const void **)v561, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v593, (long long *)v330, v329);
    std::string::basic_string[abi:ne180100]<0>(v327, "SnippetUI.Command");
    std::string::basic_string[abi:ne180100]<0>(v559, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v326, (const void **)v559, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v594, (long long *)v327, v326);
    std::string::basic_string[abi:ne180100]<0>(v324, "SnippetUI.Control_PlayerButton");
    std::string::basic_string[abi:ne180100]<0>(v557, "label_1");
    std::string::basic_string[abi:ne180100]<0>(v558, "player");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v323, v557, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v595, (long long *)v324, v323);
    std::string::basic_string[abi:ne180100]<0>(v321, "SnippetUI.Control_Slider");
    std::string::basic_string[abi:ne180100]<0>(v555, "slider");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v320, (const void **)v555, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v596, (long long *)v321, v320);
    std::string::basic_string[abi:ne180100]<0>(v318, "SnippetUI.Control_Switch");
    std::string::basic_string[abi:ne180100]<0>(v553, "switch");
    std::string::basic_string[abi:ne180100]<0>(v554, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v317, v553, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v597, (long long *)v318, v317);
    std::string::basic_string[abi:ne180100]<0>(v315, "SnippetUI.CoreChart");
    std::string::basic_string[abi:ne180100]<0>(v551, "data");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v314, (const void **)v551, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v598, (long long *)v315, v314);
    std::string::basic_string[abi:ne180100]<0>(v312, "SnippetUI.CoreChartElement");
    std::string::basic_string[abi:ne180100]<0>(v549, "chart");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v311, (const void **)v549, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v599, (long long *)v312, v311);
    std::string::basic_string[abi:ne180100]<0>(v309, "SnippetUI.CustomCanvas");
    std::string::basic_string[abi:ne180100]<0>(v546, "bundle_name");
    std::string::basic_string[abi:ne180100]<0>(v547, "view_data");
    std::string::basic_string[abi:ne180100]<0>(v548, "view_id");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v308, v546, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v600, (long long *)v309, v308);
    std::string::basic_string[abi:ne180100]<0>(v306, "SnippetUI.CustomElement");
    std::string::basic_string[abi:ne180100]<0>(v544, "canvas");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v305, (const void **)v544, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v601, (long long *)v306, v305);
    std::string::basic_string[abi:ne180100]<0>(v303, "SnippetUI.FactItem_Button");
    std::string::basic_string[abi:ne180100]<0>(v542, "button_1");
    std::string::basic_string[abi:ne180100]<0>(v543, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v302, v542, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v602, (long long *)v303, v302);
    std::string::basic_string[abi:ne180100]<0>(v300, "SnippetUI.FactItem_HeroNumber");
    std::string::basic_string[abi:ne180100]<0>(v540, "number");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v299, (const void **)v540, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v603, (long long *)v300, v299);
    std::string::basic_string[abi:ne180100]<0>(v297, "SnippetUI.FactItem_ShortNumber");
    std::string::basic_string[abi:ne180100]<0>(v538, "number");
    std::string::basic_string[abi:ne180100]<0>(v539, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v296, v538, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v604, (long long *)v297, v296);
    std::string::basic_string[abi:ne180100]<0>(v294, "SnippetUI.FactItem_Standard");
    std::string::basic_string[abi:ne180100]<0>(v536, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v293, (const void **)v536, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v605, (long long *)v294, v293);
    std::string::basic_string[abi:ne180100]<0>(v291, "SnippetUI.HeroHeader");
    std::string::basic_string[abi:ne180100]<0>(v534, "banner");
    std::string::basic_string[abi:ne180100]<0>(v535, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v290, v534, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v606, (long long *)v291, v290);
    std::string::basic_string[abi:ne180100]<0>(v288, "SnippetUI.HorizontalList_Standard.Item");
    std::string::basic_string[abi:ne180100]<0>(v531, "style");
    std::string::basic_string[abi:ne180100]<0>(v532, "text_1");
    std::string::basic_string[abi:ne180100]<0>(v533, "thumbnail");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v287, v531, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v607, (long long *)v288, v287);
    std::string::basic_string[abi:ne180100]<0>(v285, "SnippetUI.HorizontalList_Standard");
    std::string::basic_string[abi:ne180100]<0>(v529, "items");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v284, (const void **)v529, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v608, (long long *)v285, v284);
    std::string::basic_string[abi:ne180100]<0>(v282, "SnippetUI.ImageElement.AppIcon");
    std::string::basic_string[abi:ne180100]<0>(v527, "application_bundle_identifier");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v281, (const void **)v527, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v609, (long long *)v282, v281);
    std::string::basic_string[abi:ne180100]<0>(v279, "SnippetUI.ImageElement.AspectRatio");
    std::string::basic_string[abi:ne180100]<0>(v525, "height");
    std::string::basic_string[abi:ne180100]<0>(v526, "width");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v278, v525, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v610, (long long *)v279, v278);
    std::string::basic_string[abi:ne180100]<0>(v276, "SnippetUI.ImageElement.Bundle");
    std::string::basic_string[abi:ne180100]<0>(v523, "name");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v275, (const void **)v523, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v611, (long long *)v276, v275);
    std::string::basic_string[abi:ne180100]<0>(v273, "SnippetUI.ImageElement.Contact.Avatar");
    std::string::basic_string[abi:ne180100]<0>(v521, "contact_ids");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v272, (const void **)v521, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v612, (long long *)v273, v272);
    std::string::basic_string[abi:ne180100]<0>(v270, "SnippetUI.ImageElement.Contact.Monogram");
    std::string::basic_string[abi:ne180100]<0>(v519, "letters");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v269, (const void **)v519, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v613, (long long *)v270, v269);
    std::string::basic_string[abi:ne180100]<0>(v267, "SnippetUI.ImageElement.Contact");
    std::string::basic_string[abi:ne180100]<0>(v517, "content");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v266, (const void **)v517, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v614, (long long *)v267, v266);
    std::string::basic_string[abi:ne180100]<0>(v264, "SnippetUI.ImageElement.Data");
    std::string::basic_string[abi:ne180100]<0>(v515, "png_data");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v263, (const void **)v515, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v615, (long long *)v264, v263);
    std::string::basic_string[abi:ne180100]<0>(v261, "SnippetUI.ImageElement.Source");
    std::string::basic_string[abi:ne180100]<0>(v513, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v260, (const void **)v513, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v616, (long long *)v261, v260);
    std::string::basic_string[abi:ne180100]<0>(v258, "SnippetUI.ImageElement.Symbol");
    std::string::basic_string[abi:ne180100]<0>(v511, "name");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v257, (const void **)v511, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v617, (long long *)v258, v257);
    std::string::basic_string[abi:ne180100]<0>(v255, "SnippetUI.ImageElement.Url");
    std::string::basic_string[abi:ne180100]<0>(v509, "source");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v254, (const void **)v509, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v618, (long long *)v255, v254);
    std::string::basic_string[abi:ne180100]<0>(v252, "SnippetUI.ImageElement");
    std::string::basic_string[abi:ne180100]<0>(v507, "sources");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v251, (const void **)v507, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v619, (long long *)v252, v251);
    std::string::basic_string[abi:ne180100]<0>(v249, "SnippetUI.IntentsUI_Standard.Slot");
    std::string::basic_string[abi:ne180100]<0>(v505, "fallback");
    std::string::basic_string[abi:ne180100]<0>(v506, "parameter_key_paths");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v248, v505, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v620, (long long *)v249, v248);
    std::string::basic_string[abi:ne180100]<0>(v246, "SnippetUI.IntentsUI_Standard");
    std::string::basic_string[abi:ne180100]<0>(v503, "interaction");
    std::string::basic_string[abi:ne180100]<0>(v504, "slots");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v245, v503, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v621, (long long *)v246, v245);
    std::string::basic_string[abi:ne180100]<0>(v243, "SnippetUI.LongItem_Text");
    std::string::basic_string[abi:ne180100]<0>(v501, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v242, (const void **)v501, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v622, (long long *)v243, v242);
    std::string::basic_string[abi:ne180100]<0>(v240, "SnippetUI.MultilineTextProperty.Line");
    std::string::basic_string[abi:ne180100]<0>(v499, "text_elements");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v239, (const void **)v499, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v623, (long long *)v240, v239);
    std::string::basic_string[abi:ne180100]<0>(v237, "SnippetUI.MultilineTextProperty");
    std::string::basic_string[abi:ne180100]<0>(v497, "lines");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v236, (const void **)v497, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v624, (long long *)v237, v236);
    std::string::basic_string[abi:ne180100]<0>(v234, "SnippetUI.OptionalBool");
    std::string::basic_string[abi:ne180100]<0>(v495, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v233, (const void **)v495, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v625, (long long *)v234, v233);
    std::string::basic_string[abi:ne180100]<0>(v231, "SnippetUI.OptionalDouble");
    std::string::basic_string[abi:ne180100]<0>(v493, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v230, (const void **)v493, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v626, (long long *)v231, v230);
    std::string::basic_string[abi:ne180100]<0>(v228, "SnippetUI.OptionalInt");
    std::string::basic_string[abi:ne180100]<0>(v491, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v227, (const void **)v491, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v627, (long long *)v228, v227);
    std::string::basic_string[abi:ne180100]<0>(v225, "SnippetUI.OrnamentElement");
    std::string::basic_string[abi:ne180100]<0>(v489, "is_hidden_on_idioms");
    std::string::basic_string[abi:ne180100]<0>(v490, "visual");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v224, v489, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v628, (long long *)v225, v224);
    std::string::basic_string[abi:ne180100]<0>(v222, "SnippetUI.Player");
    std::string::basic_string[abi:ne180100]<0>(v487, "control");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v221, (const void **)v487, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v629, (long long *)v222, v221);
    std::string::basic_string[abi:ne180100]<0>(v219, "SnippetUI.PlayerButton");
    std::string::basic_string[abi:ne180100]<0>(v485, "pause_button");
    std::string::basic_string[abi:ne180100]<0>(v486, "play_button");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v218, v485, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v630, (long long *)v219, v218);
    std::string::basic_string[abi:ne180100]<0>(v216, "SnippetUI.PrimaryHeader_Marquee");
    std::string::basic_string[abi:ne180100]<0>(v483, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v215, (const void **)v483, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v631, (long long *)v216, v215);
    std::string::basic_string[abi:ne180100]<0>(v213, "SnippetUI.PrimaryHeader_Rich");
    std::string::basic_string[abi:ne180100]<0>(v481, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v212, (const void **)v481, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v632, (long long *)v213, v212);
    std::string::basic_string[abi:ne180100]<0>(v210, "SnippetUI.PrimaryHeader_Standard");
    std::string::basic_string[abi:ne180100]<0>(v479, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v209, (const void **)v479, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v633, (long long *)v210, v209);
    std::string::basic_string[abi:ne180100]<0>(v207, "SnippetUI.Reference_Button");
    std::string::basic_string[abi:ne180100]<0>(v477, "label");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v206, (const void **)v477, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v634, (long long *)v207, v206);
    std::string::basic_string[abi:ne180100]<0>(v204, "SnippetUI.Reference_Footnote");
    std::string::basic_string[abi:ne180100]<0>(v475, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v203, (const void **)v475, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v635, (long long *)v204, v203);
    std::string::basic_string[abi:ne180100]<0>(v201, "SnippetUI.Reference_Logo");
    std::string::basic_string[abi:ne180100]<0>(v473, "thumbnail");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v200, (const void **)v473, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v636, (long long *)v201, v200);
    std::string::basic_string[abi:ne180100]<0>(v198, "SnippetUI.Reference_Rich");
    std::string::basic_string[abi:ne180100]<0>(v471, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v197, (const void **)v471, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v637, (long long *)v198, v197);
    std::string::basic_string[abi:ne180100]<0>(v195, "SnippetUI.Reference_Standard");
    std::string::basic_string[abi:ne180100]<0>(v469, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v194, (const void **)v469, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v638, (long long *)v195, v194);
    std::string::basic_string[abi:ne180100]<0>(v192, "SnippetUI.Response.Group");
    std::string::basic_string[abi:ne180100]<0>(v467, "components");
    std::string::basic_string[abi:ne180100]<0>(v468, "id");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v191, v467, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v639, (long long *)v192, v191);
    std::string::basic_string[abi:ne180100]<0>(v189, "SnippetUI.Response.Section");
    std::string::basic_string[abi:ne180100]<0>(v464, "component_list");
    std::string::basic_string[abi:ne180100]<0>(v465, "is_hidden_on_idioms");
    std::string::basic_string[abi:ne180100]<0>(v466, "level_of_detail");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v188, v464, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v640, (long long *)v189, v188);
    std::string::basic_string[abi:ne180100]<0>(v186, "SnippetUI.Response");
    std::string::basic_string[abi:ne180100]<0>(v462, "hide_redacted_elements");
    std::string::basic_string[abi:ne180100]<0>(v463, "sections");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v185, v462, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v641, (long long *)v186, v185);
    std::string::basic_string[abi:ne180100]<0>(v183, "SnippetUI.Sash_Standard");
    std::string::basic_string[abi:ne180100]<0>(v460, "title");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v182, (const void **)v460, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v642, (long long *)v183, v182);
    std::string::basic_string[abi:ne180100]<0>(v180, "SnippetUI.SecondaryHeader_Emphasized");
    std::string::basic_string[abi:ne180100]<0>(v458, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v179, (const void **)v458, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v643, (long long *)v180, v179);
    std::string::basic_string[abi:ne180100]<0>(v177, "SnippetUI.SecondaryHeader_Standard");
    std::string::basic_string[abi:ne180100]<0>(v456, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v176, (const void **)v456, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v644, (long long *)v177, v176);
    std::string::basic_string[abi:ne180100]<0>(v174, "SnippetUI.SectionHeader_Rich");
    std::string::basic_string[abi:ne180100]<0>(v454, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v173, (const void **)v454, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v645, (long long *)v174, v173);
    std::string::basic_string[abi:ne180100]<0>(v171, "SnippetUI.SectionHeader_Standard");
    std::string::basic_string[abi:ne180100]<0>(v452, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v170, (const void **)v452, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v646, (long long *)v171, v170);
    std::string::basic_string[abi:ne180100]<0>(v168, "SnippetUI.SimpleItem_Player");
    std::string::basic_string[abi:ne180100]<0>(v450, "player");
    std::string::basic_string[abi:ne180100]<0>(v451, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v167, v450, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v647, (long long *)v168, v167);
    std::string::basic_string[abi:ne180100]<0>(v165, "SnippetUI.SimpleItem_ReverseRich");
    std::string::basic_string[abi:ne180100]<0>(v448, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v164, (const void **)v448, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v648, (long long *)v165, v164);
    std::string::basic_string[abi:ne180100]<0>(v162, "SnippetUI.SimpleItem_Rich");
    std::string::basic_string[abi:ne180100]<0>(v446, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v161, (const void **)v446, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v649, (long long *)v162, v161);
    std::string::basic_string[abi:ne180100]<0>(v159, "SnippetUI.SimpleItem_RichSearchResult");
    std::string::basic_string[abi:ne180100]<0>(v444, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v158, (const void **)v444, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v650, (long long *)v159, v158);
    std::string::basic_string[abi:ne180100]<0>(v156, "SnippetUI.SimpleItem_Standard");
    std::string::basic_string[abi:ne180100]<0>(v442, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v155, (const void **)v442, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v651, (long long *)v156, v155);
    std::string::basic_string[abi:ne180100]<0>(v153, "SnippetUI.SimpleItem_Visual");
    std::string::basic_string[abi:ne180100]<0>(v440, "thumbnails");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v152, (const void **)v440, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v652, (long long *)v153, v152);
    std::string::basic_string[abi:ne180100]<0>(v150, "SnippetUI.Slider");
    std::string::basic_string[abi:ne180100]<0>(v437, "identifier");
    std::string::basic_string[abi:ne180100]<0>(v438, "maximum");
    std::string::basic_string[abi:ne180100]<0>(v439, "minimum");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v149, v437, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v653, (long long *)v150, v149);
    std::string::basic_string[abi:ne180100]<0>(v147, "SnippetUI.StandardPlayerButton");
    std::string::basic_string[abi:ne180100]<0>(v435, "pause_action");
    std::string::basic_string[abi:ne180100]<0>(v436, "play_action");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v146, v435, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v654, (long long *)v147, v146);
    std::string::basic_string[abi:ne180100]<0>(v144, "SnippetUI.StatusIndicator_Cancelled");
    std::string::basic_string[abi:ne180100]<0>(v433, "text");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v143, (const void **)v433, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v655, (long long *)v144, v143);
    std::string::basic_string[abi:ne180100]<0>(v141, "SnippetUI.StatusIndicator_Error");
    std::string::basic_string[abi:ne180100]<0>(v431, "text");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v140, (const void **)v431, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v656, (long long *)v141, v140);
    std::string::basic_string[abi:ne180100]<0>(v138, "SnippetUI.StatusIndicator_InProgress");
    std::string::basic_string[abi:ne180100]<0>(v429, "text");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v137, (const void **)v429, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v657, (long long *)v138, v137);
    std::string::basic_string[abi:ne180100]<0>(v135, "SnippetUI.StatusIndicator_Success");
    std::string::basic_string[abi:ne180100]<0>(v427, "text");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v134, (const void **)v427, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v658, (long long *)v135, v134);
    std::string::basic_string[abi:ne180100]<0>(v132, "SnippetUI.SummaryItem_Button");
    std::string::basic_string[abi:ne180100]<0>(v425, "button_1");
    std::string::basic_string[abi:ne180100]<0>(v426, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v131, v425, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v659, (long long *)v132, v131);
    std::string::basic_string[abi:ne180100]<0>(v129, "SnippetUI.SummaryItem_DetailedText");
    std::string::basic_string[abi:ne180100]<0>(v423, "text_1");
    std::string::basic_string[abi:ne180100]<0>(v424, "text_3");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v128, v423, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v660, (long long *)v129, v128);
    std::string::basic_string[abi:ne180100]<0>(v126, "SnippetUI.SummaryItem_LargeText");
    std::string::basic_string[abi:ne180100]<0>(v421, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v125, (const void **)v421, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v661, (long long *)v126, v125);
    std::string::basic_string[abi:ne180100]<0>(v123, "SnippetUI.SummaryItem_Pair");
    std::string::basic_string[abi:ne180100]<0>(v419, "text_4");
    std::string::basic_string[abi:ne180100]<0>(v420, "text_6");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v122, v419, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v662, (long long *)v123, v122);
    std::string::basic_string[abi:ne180100]<0>(v120, "SnippetUI.SummaryItem_PairNumber");
    std::string::basic_string[abi:ne180100]<0>(v417, "number_1");
    std::string::basic_string[abi:ne180100]<0>(v418, "number_2");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v119, v417, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v663, (long long *)v120, v119);
    std::string::basic_string[abi:ne180100]<0>(v117, "SnippetUI.SummaryItem_PairNumberV2");
    std::string::basic_string[abi:ne180100]<0>(v415, "number_1");
    std::string::basic_string[abi:ne180100]<0>(v416, "number_2");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v116, v415, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v664, (long long *)v117, v116);
    std::string::basic_string[abi:ne180100]<0>(v114, "SnippetUI.SummaryItem_PairV2");
    std::string::basic_string[abi:ne180100]<0>(v412, "text_1");
    std::string::basic_string[abi:ne180100]<0>(v413, "thumbnail_1");
    std::string::basic_string[abi:ne180100]<0>(v414, "thumbnail_2");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v113, v412, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v665, (long long *)v114, v113);
    std::string::basic_string[abi:ne180100]<0>(v111, "SnippetUI.SummaryItem_Player");
    std::string::basic_string[abi:ne180100]<0>(v410, "player");
    std::string::basic_string[abi:ne180100]<0>(v411, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v110, v410, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v666, (long long *)v111, v110);
    std::string::basic_string[abi:ne180100]<0>(v108, "SnippetUI.SummaryItem_ShortNumber");
    std::string::basic_string[abi:ne180100]<0>(v408, "number");
    std::string::basic_string[abi:ne180100]<0>(v409, "text_2");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v107, v408, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v667, (long long *)v108, v107);
    std::string::basic_string[abi:ne180100]<0>(v105, "SnippetUI.SummaryItem_Standard");
    std::string::basic_string[abi:ne180100]<0>(v406, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v104, (const void **)v406, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v668, (long long *)v105, v104);
    std::string::basic_string[abi:ne180100]<0>(v102, "SnippetUI.SummaryItem_Switch");
    std::string::basic_string[abi:ne180100]<0>(v404, "switch");
    std::string::basic_string[abi:ne180100]<0>(v405, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v101, v404, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v669, (long long *)v102, v101);
    std::string::basic_string[abi:ne180100]<0>(v99, "SnippetUI.SummaryItem_SwitchV2");
    std::string::basic_string[abi:ne180100]<0>(v402, "switch");
    std::string::basic_string[abi:ne180100]<0>(v403, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v98, v402, 2);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v670, (long long *)v99, v98);
    std::string::basic_string[abi:ne180100]<0>(v96, "SnippetUI.SummaryItem_Text");
    std::string::basic_string[abi:ne180100]<0>(v400, "text_2");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v95, (const void **)v400, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v671, (long long *)v96, v95);
    std::string::basic_string[abi:ne180100]<0>(v93, "SnippetUI.Switch");
    std::string::basic_string[abi:ne180100]<0>(v398, "identifier");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v92, (const void **)v398, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v672, (long long *)v93, v92);
    std::string::basic_string[abi:ne180100]<0>(v90, "SnippetUI.SystemText_ClarificationTitle");
    std::string::basic_string[abi:ne180100]<0>(v396, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v89, (const void **)v396, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v673, (long long *)v90, v89);
    std::string::basic_string[abi:ne180100]<0>(v87, "SnippetUI.Table.Header");
    std::string::basic_string[abi:ne180100]<0>(v394, "cells");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v86, (const void **)v394, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v674, (long long *)v87, v86);
    std::string::basic_string[abi:ne180100]<0>(v84, "SnippetUI.Table.Row");
    std::string::basic_string[abi:ne180100]<0>(v392, "cells");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v83, (const void **)v392, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v675, (long long *)v84, v83);
    std::string::basic_string[abi:ne180100]<0>(v81, "SnippetUI.Table");
    std::string::basic_string[abi:ne180100]<0>(v389, "columns");
    std::string::basic_string[abi:ne180100]<0>(v390, "rows");
    std::string::basic_string[abi:ne180100]<0>(v391, "separator_lines");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v80, v389, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v676, (long long *)v81, v80);
    std::string::basic_string[abi:ne180100]<0>(v78, "SnippetUI.TertiaryHeader_Standard");
    std::string::basic_string[abi:ne180100]<0>(v387, "text_1");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v77, (const void **)v387, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v677, (long long *)v78, v77);
    std::string::basic_string[abi:ne180100]<0>(v75, "SnippetUI.TextElement.Font.SystemFont");
    std::string::basic_string[abi:ne180100]<0>(v384, "design");
    std::string::basic_string[abi:ne180100]<0>(v385, "size");
    std::string::basic_string[abi:ne180100]<0>(v386, "weight");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v74, v384, 3);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v678, (long long *)v75, v74);
    std::string::basic_string[abi:ne180100]<0>(v72, "SnippetUI.TextElement.Font");
    std::string::basic_string[abi:ne180100]<0>(v382, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v71, (const void **)v382, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v679, (long long *)v72, v71);
    std::string::basic_string[abi:ne180100]<0>(v69, "SnippetUI.TextElement.FontWeight");
    std::string::basic_string[abi:ne180100]<0>(v380, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v68, (const void **)v380, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v680, (long long *)v69, v68);
    std::string::basic_string[abi:ne180100]<0>(v66, "SnippetUI.TextElement");
    std::string::basic_string[abi:ne180100]<0>(v378, "value");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v65, (const void **)v378, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v681, (long long *)v66, v65);
    std::string::basic_string[abi:ne180100]<0>(v63, "SnippetUI.TextInput");
    std::string::basic_string[abi:ne180100]<0>(v376, "identifier");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v62, (const void **)v376, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v682, (long long *)v63, v62);
    std::string::basic_string[abi:ne180100]<0>(v60, "SnippetUI.TextProperty");
    std::string::basic_string[abi:ne180100]<0>(v374, "text_elements");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v59, (const void **)v374, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v683, (long long *)v60, v59);
    std::string::basic_string[abi:ne180100]<0>(v57, "SnippetUI.VisualElement");
    std::string::basic_string[abi:ne180100]<0>(v372, "element");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v56, (const void **)v372, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v684, (long long *)v57, v56);
    std::string::basic_string[abi:ne180100]<0>(v54, "SnippetUI.VisualProperty");
    std::string::basic_string[abi:ne180100]<0>(v370, "visuals");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v53, (const void **)v370, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v685, (long long *)v54, v53);
    std::string::basic_string[abi:ne180100]<0>(v51, "SnippetUI.Visualization_Chart");
    std::string::basic_string[abi:ne180100]<0>(v368, "visual");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v50, (const void **)v368, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v686, (long long *)v51, v50);
    std::string::basic_string[abi:ne180100]<0>(v48, "SnippetUI.Visualization_Image");
    std::string::basic_string[abi:ne180100]<0>(v366, "visual");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v47, (const void **)v366, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v687, (long long *)v48, v47);
    std::string::basic_string[abi:ne180100]<0>(v45, "SnippetUI.Visualization_Map");
    std::string::basic_string[abi:ne180100]<0>(v364, "map_property");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v44, (const void **)v364, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v688, (long long *)v45, v44);
    std::string::basic_string[abi:ne180100]<0>(v42, "SnippetUI.WatchListButton");
    std::string::basic_string[abi:ne180100]<0>(__p, "canonical_id");
    std::set<std::string>::set[abi:ne180100]((uint64_t)v41, (const void **)__p, 1);
    std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(v689, (long long *)v42, v41);
    std::map<std::string const,std::set<std::string> const,std::less<std::string const>,std::allocator<std::pair<std::string const,std::set<std::string> const>>>::map[abi:ne180100]((long long *)v583, 107);
    for (unint64_t i = 0; i != -5136; i -= 48)
      std::pair<std::string const,std::set<std::string> const>::~pair((uint64_t)&v689[i / 0x18]);
    std::__tree<std::string>::destroy((uint64_t)v41, (char *)v41[1]);
    if (v363 < 0) {
      operator delete(__p[0]);
    }
    if (v43 < 0) {
      operator delete(v42[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v44, (char *)v44[1]);
    if (v365 < 0) {
      operator delete(v364[0]);
    }
    if (v46 < 0) {
      operator delete(v45[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v47, (char *)v47[1]);
    if (v367 < 0) {
      operator delete(v366[0]);
    }
    if (v49 < 0) {
      operator delete(v48[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v50, (char *)v50[1]);
    if (v369 < 0) {
      operator delete(v368[0]);
    }
    if (v52 < 0) {
      operator delete(v51[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v53, (char *)v53[1]);
    if (v371 < 0) {
      operator delete(v370[0]);
    }
    if (v55 < 0) {
      operator delete(v54[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v56, (char *)v56[1]);
    if (v373 < 0) {
      operator delete(v372[0]);
    }
    if (v58 < 0) {
      operator delete(v57[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v59, (char *)v59[1]);
    if (v375 < 0) {
      operator delete(v374[0]);
    }
    if (v61 < 0) {
      operator delete(v60[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v62, (char *)v62[1]);
    if (v377 < 0) {
      operator delete(v376[0]);
    }
    if (v64 < 0) {
      operator delete(v63[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v65, (char *)v65[1]);
    if (v379 < 0) {
      operator delete(v378[0]);
    }
    if (v67 < 0) {
      operator delete(v66[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v68, (char *)v68[1]);
    if (v381 < 0) {
      operator delete(v380[0]);
    }
    if (v70 < 0) {
      operator delete(v69[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v71, (char *)v71[1]);
    if (v383 < 0) {
      operator delete(v382[0]);
    }
    if (v73 < 0) {
      operator delete(v72[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v74, (char *)v74[1]);
    for (uint64_t j = 0; j != -9; j -= 3)
    {
      if (SHIBYTE(v386[j + 2]) < 0) {
        operator delete(v386[j]);
      }
    }
    if (v76 < 0) {
      operator delete(v75[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v77, (char *)v77[1]);
    if (v388 < 0) {
      operator delete(v387[0]);
    }
    if (v79 < 0) {
      operator delete(v78[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v80, (char *)v80[1]);
    for (uint64_t k = 0; k != -9; k -= 3)
    {
      if (SHIBYTE(v391[k + 2]) < 0) {
        operator delete(v391[k]);
      }
    }
    if (v82 < 0) {
      operator delete(v81[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v83, (char *)v83[1]);
    if (v393 < 0) {
      operator delete(v392[0]);
    }
    if (v85 < 0) {
      operator delete(v84[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v86, (char *)v86[1]);
    if (v395 < 0) {
      operator delete(v394[0]);
    }
    if (v88 < 0) {
      operator delete(v87[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v89, (char *)v89[1]);
    if (v397 < 0) {
      operator delete(v396[0]);
    }
    if (v91 < 0) {
      operator delete(v90[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v92, (char *)v92[1]);
    if (v399 < 0) {
      operator delete(v398[0]);
    }
    if (v94 < 0) {
      operator delete(v93[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v95, (char *)v95[1]);
    if (v401 < 0) {
      operator delete(v400[0]);
    }
    if (v97 < 0) {
      operator delete(v96[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v98, (char *)v98[1]);
    for (uint64_t m = 0; m != -6; m -= 3)
    {
      if (SHIBYTE(v403[m + 2]) < 0) {
        operator delete((void *)v402[m + 3]);
      }
    }
    if (v100 < 0) {
      operator delete(v99[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v101, (char *)v101[1]);
    for (uint64_t n = 0; n != -6; n -= 3)
    {
      if (SHIBYTE(v405[n + 2]) < 0) {
        operator delete((void *)v404[n + 3]);
      }
    }
    if (v103 < 0) {
      operator delete(v102[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v104, (char *)v104[1]);
    if (v407 < 0) {
      operator delete(v406[0]);
    }
    if (v106 < 0) {
      operator delete(v105[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v107, (char *)v107[1]);
    for (iunint64_t i = 0; ii != -6; ii -= 3)
    {
      if (SHIBYTE(v409[ii + 2]) < 0) {
        operator delete((void *)v408[ii + 3]);
      }
    }
    if (v109 < 0) {
      operator delete(v108[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v110, (char *)v110[1]);
    for (juint64_t j = 0; jj != -6; jj -= 3)
    {
      if (SHIBYTE(v411[jj + 2]) < 0) {
        operator delete((void *)v410[jj + 3]);
      }
    }
    if (v112 < 0) {
      operator delete(v111[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v113, (char *)v113[1]);
    for (kuint64_t k = 0; kk != -9; kk -= 3)
    {
      if (SHIBYTE(v414[kk + 2]) < 0) {
        operator delete((void *)v414[kk]);
      }
    }
    if (v115 < 0) {
      operator delete(v114[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v116, (char *)v116[1]);
    for (muint64_t m = 0; mm != -6; mm -= 3)
    {
      if (SHIBYTE(v416[mm + 2]) < 0) {
        operator delete((void *)v415[mm + 3]);
      }
    }
    if (v118 < 0) {
      operator delete(v117[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v119, (char *)v119[1]);
    for (nuint64_t n = 0; nn != -6; nn -= 3)
    {
      if (SHIBYTE(v418[nn + 2]) < 0) {
        operator delete((void *)v417[nn + 3]);
      }
    }
    if (v121 < 0) {
      operator delete(v120[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v122, (char *)v122[1]);
    for (uint64_t i1 = 0; i1 != -6; i1 -= 3)
    {
      if (SHIBYTE(v420[i1 + 2]) < 0) {
        operator delete((void *)v419[i1 + 3]);
      }
    }
    if (v124 < 0) {
      operator delete(v123[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v125, (char *)v125[1]);
    if (v422 < 0) {
      operator delete(v421[0]);
    }
    if (v127 < 0) {
      operator delete(v126[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v128, (char *)v128[1]);
    for (uint64_t i2 = 0; i2 != -6; i2 -= 3)
    {
      if (SHIBYTE(v424[i2 + 2]) < 0) {
        operator delete((void *)v423[i2 + 3]);
      }
    }
    if (v130 < 0) {
      operator delete(v129[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v131, (char *)v131[1]);
    for (uint64_t i3 = 0; i3 != -6; i3 -= 3)
    {
      if (SHIBYTE(v426[i3 + 2]) < 0) {
        operator delete((void *)v425[i3 + 3]);
      }
    }
    if (v133 < 0) {
      operator delete(v132[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v134, (char *)v134[1]);
    if (v428 < 0) {
      operator delete(v427[0]);
    }
    if (v136 < 0) {
      operator delete(v135[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v137, (char *)v137[1]);
    if (v430 < 0) {
      operator delete(v429[0]);
    }
    if (v139 < 0) {
      operator delete(v138[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v140, (char *)v140[1]);
    if (v432 < 0) {
      operator delete(v431[0]);
    }
    if (v142 < 0) {
      operator delete(v141[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v143, (char *)v143[1]);
    if (v434 < 0) {
      operator delete(v433[0]);
    }
    if (v145 < 0) {
      operator delete(v144[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v146, (char *)v146[1]);
    for (uint64_t i4 = 0; i4 != -6; i4 -= 3)
    {
      if (SHIBYTE(v436[i4 + 2]) < 0) {
        operator delete((void *)v435[i4 + 3]);
      }
    }
    if (v148 < 0) {
      operator delete(v147[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v149, (char *)v149[1]);
    for (uint64_t i5 = 0; i5 != -9; i5 -= 3)
    {
      if (SHIBYTE(v439[i5 + 2]) < 0) {
        operator delete(v439[i5]);
      }
    }
    if (v151 < 0) {
      operator delete(v150[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v152, (char *)v152[1]);
    if (v441 < 0) {
      operator delete(v440[0]);
    }
    if (v154 < 0) {
      operator delete(v153[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v155, (char *)v155[1]);
    if (v443 < 0) {
      operator delete(v442[0]);
    }
    if (v157 < 0) {
      operator delete(v156[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v158, (char *)v158[1]);
    if (v445 < 0) {
      operator delete(v444[0]);
    }
    if (v160 < 0) {
      operator delete(v159[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v161, (char *)v161[1]);
    if (v447 < 0) {
      operator delete(v446[0]);
    }
    if (v163 < 0) {
      operator delete(v162[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v164, (char *)v164[1]);
    if (v449 < 0) {
      operator delete(v448[0]);
    }
    if (v166 < 0) {
      operator delete(v165[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v167, (char *)v167[1]);
    for (uint64_t i6 = 0; i6 != -6; i6 -= 3)
    {
      if (SHIBYTE(v451[i6 + 2]) < 0) {
        operator delete((void *)v450[i6 + 3]);
      }
    }
    if (v169 < 0) {
      operator delete(v168[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v170, (char *)v170[1]);
    if (v453 < 0) {
      operator delete(v452[0]);
    }
    if (v172 < 0) {
      operator delete(v171[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v173, (char *)v173[1]);
    if (v455 < 0) {
      operator delete(v454[0]);
    }
    if (v175 < 0) {
      operator delete(v174[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v176, (char *)v176[1]);
    if (v457 < 0) {
      operator delete(v456[0]);
    }
    if (v178 < 0) {
      operator delete(v177[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v179, (char *)v179[1]);
    if (v459 < 0) {
      operator delete(v458[0]);
    }
    if (v181 < 0) {
      operator delete(v180[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v182, (char *)v182[1]);
    if (v461 < 0) {
      operator delete(v460[0]);
    }
    if (v184 < 0) {
      operator delete(v183[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v185, (char *)v185[1]);
    for (uint64_t i7 = 0; i7 != -6; i7 -= 3)
    {
      if (SHIBYTE(v463[i7 + 2]) < 0) {
        operator delete((void *)v462[i7 + 3]);
      }
    }
    if (v187 < 0) {
      operator delete(v186[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v188, (char *)v188[1]);
    for (uint64_t i8 = 0; i8 != -9; i8 -= 3)
    {
      if (SHIBYTE(v466[i8 + 2]) < 0) {
        operator delete((void *)v466[i8]);
      }
    }
    if (v190 < 0) {
      operator delete(v189[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v191, (char *)v191[1]);
    for (uint64_t i9 = 0; i9 != -6; i9 -= 3)
    {
      if (SHIBYTE(v468[i9 + 2]) < 0) {
        operator delete((void *)v467[i9 + 3]);
      }
    }
    if (v193 < 0) {
      operator delete(v192[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v194, (char *)v194[1]);
    if (v470 < 0) {
      operator delete(v469[0]);
    }
    if (v196 < 0) {
      operator delete(v195[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v197, (char *)v197[1]);
    if (v472 < 0) {
      operator delete(v471[0]);
    }
    if (v199 < 0) {
      operator delete(v198[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v200, (char *)v200[1]);
    if (v474 < 0) {
      operator delete(v473[0]);
    }
    if (v202 < 0) {
      operator delete(v201[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v203, (char *)v203[1]);
    if (v476 < 0) {
      operator delete(v475[0]);
    }
    if (v205 < 0) {
      operator delete(v204[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v206, (char *)v206[1]);
    if (v478 < 0) {
      operator delete(v477[0]);
    }
    if (v208 < 0) {
      operator delete(v207[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v209, (char *)v209[1]);
    if (v480 < 0) {
      operator delete(v479[0]);
    }
    if (v211 < 0) {
      operator delete(v210[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v212, (char *)v212[1]);
    if (v482 < 0) {
      operator delete(v481[0]);
    }
    if (v214 < 0) {
      operator delete(v213[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v215, (char *)v215[1]);
    if (v484 < 0) {
      operator delete(v483[0]);
    }
    if (v217 < 0) {
      operator delete(v216[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v218, (char *)v218[1]);
    for (uint64_t i10 = 0; i10 != -6; i10 -= 3)
    {
      if (SHIBYTE(v486[i10 + 2]) < 0) {
        operator delete((void *)v485[i10 + 3]);
      }
    }
    if (v220 < 0) {
      operator delete(v219[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v221, (char *)v221[1]);
    if (v488 < 0) {
      operator delete(v487[0]);
    }
    if (v223 < 0) {
      operator delete(v222[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v224, (char *)v224[1]);
    for (uint64_t i11 = 0; i11 != -6; i11 -= 3)
    {
      if (SHIBYTE(v490[i11 + 2]) < 0) {
        operator delete((void *)v489[i11 + 3]);
      }
    }
    if (v226 < 0) {
      operator delete(v225[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v227, (char *)v227[1]);
    if (v492 < 0) {
      operator delete(v491[0]);
    }
    if (v229 < 0) {
      operator delete(v228[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v230, (char *)v230[1]);
    if (v494 < 0) {
      operator delete(v493[0]);
    }
    if (v232 < 0) {
      operator delete(v231[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v233, (char *)v233[1]);
    if (v496 < 0) {
      operator delete(v495[0]);
    }
    if (v235 < 0) {
      operator delete(v234[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v236, (char *)v236[1]);
    if (v498 < 0) {
      operator delete(v497[0]);
    }
    if (v238 < 0) {
      operator delete(v237[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v239, (char *)v239[1]);
    if (v500 < 0) {
      operator delete(v499[0]);
    }
    if (v241 < 0) {
      operator delete(v240[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v242, (char *)v242[1]);
    if (v502 < 0) {
      operator delete(v501[0]);
    }
    if (v244 < 0) {
      operator delete(v243[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v245, (char *)v245[1]);
    for (uint64_t i12 = 0; i12 != -6; i12 -= 3)
    {
      if (SHIBYTE(v504[i12 + 2]) < 0) {
        operator delete((void *)v503[i12 + 3]);
      }
    }
    if (v247 < 0) {
      operator delete(v246[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v248, (char *)v248[1]);
    for (uint64_t i13 = 0; i13 != -6; i13 -= 3)
    {
      if (SHIBYTE(v506[i13 + 2]) < 0) {
        operator delete((void *)v505[i13 + 3]);
      }
    }
    if (v250 < 0) {
      operator delete(v249[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v251, (char *)v251[1]);
    if (v508 < 0) {
      operator delete(v507[0]);
    }
    if (v253 < 0) {
      operator delete(v252[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v254, (char *)v254[1]);
    if (v510 < 0) {
      operator delete(v509[0]);
    }
    if (v256 < 0) {
      operator delete(v255[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v257, (char *)v257[1]);
    if (v512 < 0) {
      operator delete(v511[0]);
    }
    if (v259 < 0) {
      operator delete(v258[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v260, (char *)v260[1]);
    if (v514 < 0) {
      operator delete(v513[0]);
    }
    if (v262 < 0) {
      operator delete(v261[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v263, (char *)v263[1]);
    if (v516 < 0) {
      operator delete(v515[0]);
    }
    if (v265 < 0) {
      operator delete(v264[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v266, (char *)v266[1]);
    if (v518 < 0) {
      operator delete(v517[0]);
    }
    if (v268 < 0) {
      operator delete(v267[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v269, (char *)v269[1]);
    if (v520 < 0) {
      operator delete(v519[0]);
    }
    if (v271 < 0) {
      operator delete(v270[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v272, (char *)v272[1]);
    if (v522 < 0) {
      operator delete(v521[0]);
    }
    if (v274 < 0) {
      operator delete(v273[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v275, (char *)v275[1]);
    if (v524 < 0) {
      operator delete(v523[0]);
    }
    if (v277 < 0) {
      operator delete(v276[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v278, (char *)v278[1]);
    for (uint64_t i14 = 0; i14 != -6; i14 -= 3)
    {
      if (SHIBYTE(v526[i14 + 2]) < 0) {
        operator delete((void *)v525[i14 + 3]);
      }
    }
    if (v280 < 0) {
      operator delete(v279[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v281, (char *)v281[1]);
    if (v528 < 0) {
      operator delete(v527[0]);
    }
    if (v283 < 0) {
      operator delete(v282[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v284, (char *)v284[1]);
    if (v530 < 0) {
      operator delete(v529[0]);
    }
    if (v286 < 0) {
      operator delete(v285[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v287, (char *)v287[1]);
    for (uint64_t i15 = 0; i15 != -9; i15 -= 3)
    {
      if (SHIBYTE(v533[i15 + 2]) < 0) {
        operator delete((void *)v533[i15]);
      }
    }
    if (v289 < 0) {
      operator delete(v288[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v290, (char *)v290[1]);
    for (uint64_t i16 = 0; i16 != -6; i16 -= 3)
    {
      if (SHIBYTE(v535[i16 + 2]) < 0) {
        operator delete((void *)v534[i16 + 3]);
      }
    }
    if (v292 < 0) {
      operator delete(v291[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v293, (char *)v293[1]);
    if (v537 < 0) {
      operator delete(v536[0]);
    }
    if (v295 < 0) {
      operator delete(v294[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v296, (char *)v296[1]);
    for (uint64_t i17 = 0; i17 != -6; i17 -= 3)
    {
      if (SHIBYTE(v539[i17 + 2]) < 0) {
        operator delete((void *)v538[i17 + 3]);
      }
    }
    if (v298 < 0) {
      operator delete(v297[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v299, (char *)v299[1]);
    if (v541 < 0) {
      operator delete(v540[0]);
    }
    if (v301 < 0) {
      operator delete(v300[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v302, (char *)v302[1]);
    for (uint64_t i18 = 0; i18 != -6; i18 -= 3)
    {
      if (SHIBYTE(v543[i18 + 2]) < 0) {
        operator delete((void *)v542[i18 + 3]);
      }
    }
    if (v304 < 0) {
      operator delete(v303[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v305, (char *)v305[1]);
    if (v545 < 0) {
      operator delete(v544[0]);
    }
    if (v307 < 0) {
      operator delete(v306[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v308, (char *)v308[1]);
    for (uint64_t i19 = 0; i19 != -9; i19 -= 3)
    {
      if (SHIBYTE(v548[i19 + 2]) < 0) {
        operator delete(v548[i19]);
      }
    }
    if (v310 < 0) {
      operator delete(v309[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v311, (char *)v311[1]);
    if (v550 < 0) {
      operator delete(v549[0]);
    }
    if (v313 < 0) {
      operator delete(v312[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v314, (char *)v314[1]);
    if (v552 < 0) {
      operator delete(v551[0]);
    }
    if (v316 < 0) {
      operator delete(v315[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v317, (char *)v317[1]);
    for (uint64_t i20 = 0; i20 != -6; i20 -= 3)
    {
      if (SHIBYTE(v554[i20 + 2]) < 0) {
        operator delete((void *)v553[i20 + 3]);
      }
    }
    if (v319 < 0) {
      operator delete(v318[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v320, (char *)v320[1]);
    if (v556 < 0) {
      operator delete(v555[0]);
    }
    if (v322 < 0) {
      operator delete(v321[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v323, (char *)v323[1]);
    for (uint64_t i21 = 0; i21 != -6; i21 -= 3)
    {
      if (SHIBYTE(v558[i21 + 2]) < 0) {
        operator delete((void *)v557[i21 + 3]);
      }
    }
    if (v325 < 0) {
      operator delete(v324[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v326, (char *)v326[1]);
    if (v560 < 0) {
      operator delete(v559[0]);
    }
    if (v328 < 0) {
      operator delete(v327[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v329, (char *)v329[1]);
    if (v562 < 0) {
      operator delete(v561[0]);
    }
    if (v331 < 0) {
      operator delete(v330[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v332, (char *)v332[1]);
    if (v564 < 0) {
      operator delete(v563[0]);
    }
    if (v334 < 0) {
      operator delete(v333[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v335, (char *)v335[1]);
    if (v566 < 0) {
      operator delete(v565[0]);
    }
    if (v337 < 0) {
      operator delete(v336[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v338, (char *)v338[1]);
    if (v568 < 0) {
      operator delete(v567[0]);
    }
    if (v340 < 0) {
      operator delete(v339[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v341, (char *)v341[1]);
    if (v570 < 0) {
      operator delete(v569[0]);
    }
    if (v343 < 0) {
      operator delete(v342[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v344, (char *)v344[1]);
    if (v572 < 0) {
      operator delete(v571[0]);
    }
    if (v346 < 0) {
      operator delete(v345[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v347, (char *)v347[1]);
    for (uint64_t i22 = 0; i22 != -6; i22 -= 3)
    {
      if (SHIBYTE(v574[i22 + 2]) < 0) {
        operator delete((void *)v573[i22 + 3]);
      }
    }
    if (v349 < 0) {
      operator delete(v348[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v350, (char *)v350[1]);
    for (uint64_t i23 = 0; i23 != -6; i23 -= 3)
    {
      if (SHIBYTE(v576[i23 + 2]) < 0) {
        operator delete((void *)v575[i23 + 3]);
      }
    }
    if (v352 < 0) {
      operator delete(v351[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v353, (char *)v353[1]);
    for (uint64_t i24 = 0; i24 != -6; i24 -= 3)
    {
      if (SHIBYTE(v578[i24 + 2]) < 0) {
        operator delete((void *)v577[i24 + 3]);
      }
    }
    if (v355 < 0) {
      operator delete(v354[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v356, (char *)v356[1]);
    if (v580 < 0) {
      operator delete(v579[0]);
    }
    if (v358 < 0) {
      operator delete(v357[0]);
    }
    std::__tree<std::string>::destroy((uint64_t)v359, (char *)v359[1]);
    if (v582 < 0) {
      operator delete(v581[0]);
    }
    if (v361 < 0) {
      operator delete(v360[0]);
    }
    __cxa_atexit((void (*)(void *))std::map<std::string const,std::set<std::string> const,std::less<std::string const>,std::allocator<std::pair<std::string const,std::set<std::string> const>>>::~map[abi:ne180100], &siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields, &dword_1C5C1E000);
  }
  {
    qword_1EA3D8850 = 0;
    qword_1EA3D8848 = 0;
    siri::dialogengine::vcat::GetRequiredFields(std::string const&)::empty = (uint64_t)&qword_1EA3D8848;
    __cxa_atexit((void (*)(void *))std::set<std::string>::~set[abi:ne180100], &siri::dialogengine::vcat::GetRequiredFields(std::string const&)::empty, &dword_1C5C1E000);
  }
  uint64_t v2 = qword_1EA3D8828;
  if (!qword_1EA3D8828) {
    goto LABEL_10;
  }
  uint64_t v3 = &qword_1EA3D8828;
  do
  {
    BOOL v4 = std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>((void *)(v2 + 32), v1);
    uint64_t v5 = (uint64_t *)(v2 + 8);
    if (!v4)
    {
      uint64_t v5 = (uint64_t *)v2;
      uint64_t v3 = (uint64_t *)v2;
    }
    uint64_t v2 = *v5;
  }
  while (*v5);
  if (v3 == &qword_1EA3D8828 || std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v1, v3 + 4)) {
LABEL_10:
  }
    uint64_t v3 = &qword_1EA3D8828;
  if (v3 == &qword_1EA3D8828) {
    return &siri::dialogengine::vcat::GetRequiredFields(std::string const&)::empty;
  }
  else {
    return v3 + 7;
  }
}

void sub_1C5DEFC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, char *a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,char a27,char *a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,char *a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,char a45,char *a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,char a54,char *a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,char a63)
{
  uint64_t v90 = -5136;
  uint64_t v91 = v86;
  do
  {
    uint64_t v91 = std::pair<std::string const,std::set<std::string> const>::~pair(v91) - 48;
    v90 += 48;
  }
  while (v90);
  std::__tree<std::string>::destroy((uint64_t)&a9, a10);
  if (v87[1199] < 0) {
    operator delete((void *)STACK[0x1410]);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  std::__tree<std::string>::destroy((uint64_t)&a18, a19);
  if (v87[1223] < 0) {
    operator delete((void *)STACK[0x1428]);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  std::__tree<std::string>::destroy((uint64_t)&a27, a28);
  if (v87[1247] < 0) {
    operator delete((void *)STACK[0x1440]);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  std::__tree<std::string>::destroy((uint64_t)&a36, a37);
  if (v87[1271] < 0) {
    operator delete((void *)STACK[0x1458]);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  std::__tree<std::string>::destroy((uint64_t)&a45, a46);
  if (v87[1295] < 0) {
    operator delete((void *)STACK[0x1470]);
  }
  if (a53 < 0) {
    operator delete(a48);
  }
  std::__tree<std::string>::destroy((uint64_t)&a54, a55);
  if (v87[1319] < 0) {
    operator delete((void *)STACK[0x1488]);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  std::__tree<std::string>::destroy((uint64_t)&a63, a64);
  if (v87[1343] < 0) {
    operator delete((void *)STACK[0x14A0]);
  }
  if (a71 < 0) {
    operator delete(a66);
  }
  std::__tree<std::string>::destroy((uint64_t)&a72, a73);
  if (v87[1367] < 0) {
    operator delete((void *)STACK[0x14B8]);
  }
  if (a75 < 0) {
    operator delete(a74);
  }
  std::__tree<std::string>::destroy((uint64_t)&a76, a77);
  if (v87[1391] < 0) {
    operator delete((void *)STACK[0x14D0]);
  }
  if (a79 < 0) {
    operator delete(a78);
  }
  std::__tree<std::string>::destroy((uint64_t)&a80, a81);
  if (v87[1415] < 0) {
    operator delete((void *)STACK[0x14E8]);
  }
  if (a83 < 0) {
    operator delete(a82);
  }
  std::__tree<std::string>::destroy((uint64_t)&a84, a85);
  if (v87[1439] < 0) {
    operator delete((void *)STACK[0x1500]);
  }
  if (SLOBYTE(STACK[0x20F]) < 0) {
    operator delete(a86);
  }
  std::__tree<std::string>::destroy((uint64_t)&STACK[0x210], (char *)STACK[0x218]);
  uint64_t v92 = 0;
  while (1)
  {
    if (*((char *)&STACK[0x1518] + v92 + 71) < 0) {
      operator delete(*(void **)((char *)&STACK[0x1518] + v92 + 48));
    }
    v92 -= 24;
    if (v92 == -72)
    {
      if (SLOBYTE(STACK[0x23F]) < 0) {
        operator delete((void *)STACK[0x228]);
      }
      std::__tree<std::string>::destroy((uint64_t)&STACK[0x240], (char *)STACK[0x248]);
      if (v87[1535] < 0) {
        operator delete((void *)STACK[0x1560]);
      }
      if (SLOBYTE(STACK[0x26F]) < 0) {
        operator delete((void *)STACK[0x258]);
      }
      std::__tree<std::string>::destroy((uint64_t)&STACK[0x270], (char *)STACK[0x278]);
      uint64_t v93 = 0;
      while (1)
      {
        if (*((char *)&STACK[0x1578] + v93 + 71) < 0) {
          operator delete(*(void **)((char *)&STACK[0x1578] + v93 + 48));
        }
        v93 -= 24;
        if (v93 == -72)
        {
          if (SLOBYTE(STACK[0x29F]) < 0) {
            operator delete((void *)STACK[0x288]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x2A0], (char *)STACK[0x2A8]);
          if (v87[1631] < 0) {
            operator delete((void *)STACK[0x15C0]);
          }
          if (SLOBYTE(STACK[0x2CF]) < 0) {
            operator delete((void *)STACK[0x2B8]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x2D0], (char *)STACK[0x2D8]);
          if (v87[1655] < 0) {
            operator delete((void *)STACK[0x15D8]);
          }
          if (SLOBYTE(STACK[0x2FF]) < 0) {
            operator delete((void *)STACK[0x2E8]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x300], (char *)STACK[0x308]);
          if (v87[1679] < 0) {
            operator delete((void *)STACK[0x15F0]);
          }
          if (SLOBYTE(STACK[0x32F]) < 0) {
            operator delete((void *)STACK[0x318]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x330], (char *)STACK[0x338]);
          if (v87[1703] < 0) {
            operator delete((void *)STACK[0x1608]);
          }
          if (SLOBYTE(STACK[0x35F]) < 0) {
            operator delete((void *)STACK[0x348]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x360], (char *)STACK[0x368]);
          if (v87[1727] < 0) {
            operator delete((void *)STACK[0x1620]);
          }
          if (SLOBYTE(STACK[0x38F]) < 0) {
            operator delete((void *)STACK[0x378]);
          }
          std::__tree<std::string>::destroy((uint64_t)&STACK[0x390], (char *)STACK[0x398]);
          uint64_t v94 = 0;
          while (1)
          {
            if (*((char *)&STACK[0x1638] + v94 + 47) < 0) {
              operator delete(*(void **)((char *)&STACK[0x1638] + v94 + 24));
            }
            v94 -= 24;
            if (v94 == -48)
            {
              if (SLOBYTE(STACK[0x3BF]) < 0) {
                operator delete((void *)STACK[0x3A8]);
              }
              std::__tree<std::string>::destroy((uint64_t)&STACK[0x3C0], (char *)STACK[0x3C8]);
              uint64_t v95 = 0;
              while (1)
              {
                if (*((char *)&STACK[0x1668] + v95 + 47) < 0) {
                  operator delete(*(void **)((char *)&STACK[0x1668] + v95 + 24));
                }
                v95 -= 24;
                if (v95 == -48)
                {
                  if (SLOBYTE(STACK[0x3EF]) < 0) {
                    operator delete((void *)STACK[0x3D8]);
                  }
                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x3F0], (char *)STACK[0x3F8]);
                  if (v87[1847] < 0) {
                    operator delete((void *)STACK[0x1698]);
                  }
                  if (SLOBYTE(STACK[0x41F]) < 0) {
                    operator delete((void *)STACK[0x408]);
                  }
                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x420], (char *)STACK[0x428]);
                  uint64_t v96 = 0;
                  while (1)
                  {
                    if (*((char *)&STACK[0x16B0] + v96 + 47) < 0) {
                      operator delete(*(void **)((char *)&STACK[0x16B0] + v96 + 24));
                    }
                    v96 -= 24;
                    if (v96 == -48)
                    {
                      if (SLOBYTE(STACK[0x44F]) < 0) {
                        operator delete((void *)STACK[0x438]);
                      }
                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x450], (char *)STACK[0x458]);
                      uint64_t v97 = 0;
                      while (1)
                      {
                        if (*((char *)&STACK[0x16E0] + v97 + 47) < 0) {
                          operator delete(*(void **)((char *)&STACK[0x16E0] + v97 + 24));
                        }
                        v97 -= 24;
                        if (v97 == -48)
                        {
                          if (SLOBYTE(STACK[0x47F]) < 0) {
                            operator delete((void *)STACK[0x468]);
                          }
                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x480], (char *)STACK[0x488]);
                          uint64_t v98 = 0;
                          while (1)
                          {
                            if (*((char *)&STACK[0x1710] + v98 + 71) < 0) {
                              operator delete(*(void **)((char *)&STACK[0x1710] + v98 + 48));
                            }
                            v98 -= 24;
                            if (v98 == -72)
                            {
                              if (SLOBYTE(STACK[0x4AF]) < 0) {
                                operator delete((void *)STACK[0x498]);
                              }
                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x4B0], (char *)STACK[0x4B8]);
                              uint64_t v99 = 0;
                              while (1)
                              {
                                if (*((char *)&STACK[0x1758] + v99 + 47) < 0) {
                                  operator delete(*(void **)((char *)&STACK[0x1758] + v99 + 24));
                                }
                                v99 -= 24;
                                if (v99 == -48)
                                {
                                  if (SLOBYTE(STACK[0x4DF]) < 0) {
                                    operator delete((void *)STACK[0x4C8]);
                                  }
                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x4E0], (char *)STACK[0x4E8]);
                                  uint64_t v100 = 0;
                                  while (1)
                                  {
                                    if (*((char *)&STACK[0x1788] + v100 + 47) < 0) {
                                      operator delete(*(void **)((char *)&STACK[0x1788] + v100 + 24));
                                    }
                                    v100 -= 24;
                                    if (v100 == -48)
                                    {
                                      if (SLOBYTE(STACK[0x50F]) < 0) {
                                        operator delete((void *)STACK[0x4F8]);
                                      }
                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x510], (char *)STACK[0x518]);
                                      uint64_t v101 = 0;
                                      while (1)
                                      {
                                        if (*((char *)&STACK[0x17B8] + v101 + 47) < 0) {
                                          operator delete(*(void **)((char *)&STACK[0x17B8] + v101 + 24));
                                        }
                                        v101 -= 24;
                                        if (v101 == -48)
                                        {
                                          if (SLOBYTE(STACK[0x53F]) < 0) {
                                            operator delete((void *)STACK[0x528]);
                                          }
                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x540], (char *)STACK[0x548]);
                                          if (v87[2183] < 0) {
                                            operator delete((void *)STACK[0x17E8]);
                                          }
                                          if (SLOBYTE(STACK[0x56F]) < 0) {
                                            operator delete((void *)STACK[0x558]);
                                          }
                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x570], (char *)STACK[0x578]);
                                          uint64_t v102 = 0;
                                          while (1)
                                          {
                                            if (*((char *)&STACK[0x1800] + v102 + 47) < 0) {
                                              operator delete(*(void **)((char *)&STACK[0x1800] + v102 + 24));
                                            }
                                            v102 -= 24;
                                            if (v102 == -48)
                                            {
                                              if (SLOBYTE(STACK[0x59F]) < 0) {
                                                operator delete((void *)STACK[0x588]);
                                              }
                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x5A0], (char *)STACK[0x5A8]);
                                              uint64_t v103 = 0;
                                              while (1)
                                              {
                                                if (*((char *)&STACK[0x1830] + v103 + 47) < 0) {
                                                  operator delete(*(void **)((char *)&STACK[0x1830] + v103 + 24));
                                                }
                                                v103 -= 24;
                                                if (v103 == -48)
                                                {
                                                  if (SLOBYTE(STACK[0x5CF]) < 0) {
                                                    operator delete((void *)STACK[0x5B8]);
                                                  }
                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x5D0], (char *)STACK[0x5D8]);
                                                  if (v87[2303] < 0) {
                                                    operator delete((void *)STACK[0x1860]);
                                                  }
                                                  if (SLOBYTE(STACK[0x5FF]) < 0) {
                                                    operator delete((void *)STACK[0x5E8]);
                                                  }
                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x600], (char *)STACK[0x608]);
                                                  if (v87[2327] < 0) {
                                                    operator delete((void *)STACK[0x1878]);
                                                  }
                                                  if (SLOBYTE(STACK[0x62F]) < 0) {
                                                    operator delete((void *)STACK[0x618]);
                                                  }
                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x630], (char *)STACK[0x638]);
                                                  if (v87[2351] < 0) {
                                                    operator delete((void *)STACK[0x1890]);
                                                  }
                                                  if (SLOBYTE(STACK[0x65F]) < 0) {
                                                    operator delete((void *)STACK[0x648]);
                                                  }
                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x660], (char *)STACK[0x668]);
                                                  if (v87[2375] < 0) {
                                                    operator delete((void *)STACK[0x18A8]);
                                                  }
                                                  if (SLOBYTE(STACK[0x68F]) < 0) {
                                                    operator delete((void *)STACK[0x678]);
                                                  }
                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x690], (char *)STACK[0x698]);
                                                  uint64_t v104 = 0;
                                                  while (1)
                                                  {
                                                    if (*((char *)&STACK[0x18C0] + v104 + 47) < 0) {
                                                      operator delete(*(void **)((char *)&STACK[0x18C0] + v104 + 24));
                                                    }
                                                    v104 -= 24;
                                                    if (v104 == -48)
                                                    {
                                                      if (SLOBYTE(STACK[0x6BF]) < 0) {
                                                        operator delete((void *)STACK[0x6A8]);
                                                      }
                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x6C0], (char *)STACK[0x6C8]);
                                                      uint64_t v105 = 0;
                                                      while (1)
                                                      {
                                                        if (*((char *)&STACK[0x18F0] + v105 + 71) < 0) {
                                                          operator delete(*(void **)((char *)&STACK[0x18F0] + v105 + 48));
                                                        }
                                                        v105 -= 24;
                                                        if (v105 == -72)
                                                        {
                                                          if (SLOBYTE(STACK[0x6EF]) < 0) {
                                                            operator delete((void *)STACK[0x6D8]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x6F0], (char *)STACK[0x6F8]);
                                                          if (v87[2519] < 0) {
                                                            operator delete((void *)STACK[0x1938]);
                                                          }
                                                          if (SLOBYTE(STACK[0x71F]) < 0) {
                                                            operator delete((void *)STACK[0x708]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x720], (char *)STACK[0x728]);
                                                          if (v87[2543] < 0) {
                                                            operator delete((void *)STACK[0x1950]);
                                                          }
                                                          if (SLOBYTE(STACK[0x74F]) < 0) {
                                                            operator delete((void *)STACK[0x738]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x750], (char *)STACK[0x758]);
                                                          if (v87[2567] < 0) {
                                                            operator delete((void *)STACK[0x1968]);
                                                          }
                                                          if (SLOBYTE(STACK[0x77F]) < 0) {
                                                            operator delete((void *)STACK[0x768]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x780], (char *)STACK[0x788]);
                                                          if (v87[2591] < 0) {
                                                            operator delete((void *)STACK[0x1980]);
                                                          }
                                                          if (SLOBYTE(STACK[0x7AF]) < 0) {
                                                            operator delete((void *)STACK[0x798]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x7B0], (char *)STACK[0x7B8]);
                                                          if (v87[2615] < 0) {
                                                            operator delete((void *)STACK[0x1998]);
                                                          }
                                                          if (SLOBYTE(STACK[0x7DF]) < 0) {
                                                            operator delete((void *)STACK[0x7C8]);
                                                          }
                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x7E0], (char *)STACK[0x7E8]);
                                                          uint64_t v106 = 0;
                                                          while (1)
                                                          {
                                                            if (*((char *)&STACK[0x19B0] + v106 + 47) < 0) {
                                                              operator delete(*(void **)((char *)&STACK[0x19B0]
                                                            }
                                                                                       + v106
                                                                                       + 24));
                                                            v106 -= 24;
                                                            if (v106 == -48)
                                                            {
                                                              if (SLOBYTE(STACK[0x80F]) < 0) {
                                                                operator delete((void *)STACK[0x7F8]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x810], (char *)STACK[0x818]);
                                                              if (v87[2687] < 0) {
                                                                operator delete((void *)STACK[0x19E0]);
                                                              }
                                                              if (SLOBYTE(STACK[0x83F]) < 0) {
                                                                operator delete((void *)STACK[0x828]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x840], (char *)STACK[0x848]);
                                                              if (v87[2711] < 0) {
                                                                operator delete((void *)STACK[0x19F8]);
                                                              }
                                                              if (SLOBYTE(STACK[0x86F]) < 0) {
                                                                operator delete((void *)STACK[0x858]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x870], (char *)STACK[0x878]);
                                                              if (v87[2735] < 0) {
                                                                operator delete((void *)STACK[0x1A10]);
                                                              }
                                                              if (SLOBYTE(STACK[0x89F]) < 0) {
                                                                operator delete((void *)STACK[0x888]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x8A0], (char *)STACK[0x8A8]);
                                                              if (v87[2759] < 0) {
                                                                operator delete((void *)STACK[0x1A28]);
                                                              }
                                                              if (SLOBYTE(STACK[0x8CF]) < 0) {
                                                                operator delete((void *)STACK[0x8B8]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x8D0], (char *)STACK[0x8D8]);
                                                              if (v87[2783] < 0) {
                                                                operator delete((void *)STACK[0x1A40]);
                                                              }
                                                              if (SLOBYTE(STACK[0x8FF]) < 0) {
                                                                operator delete((void *)STACK[0x8E8]);
                                                              }
                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x900], (char *)STACK[0x908]);
                                                              uint64_t v107 = 0;
                                                              while (1)
                                                              {
                                                                if (*((char *)&STACK[0x1A58] + v107 + 47) < 0) {
                                                                  operator delete(*(void **)((char *)&STACK[0x1A58]
                                                                }
                                                                                           + v107
                                                                                           + 24));
                                                                v107 -= 24;
                                                                if (v107 == -48)
                                                                {
                                                                  if (SLOBYTE(STACK[0x92F]) < 0) {
                                                                    operator delete((void *)STACK[0x918]);
                                                                  }
                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x930], (char *)STACK[0x938]);
                                                                  uint64_t v108 = 0;
                                                                  while (1)
                                                                  {
                                                                    if (*((char *)&STACK[0x1A88] + v108 + 71) < 0) {
                                                                      operator delete(*(void **)((char *)&STACK[0x1A88]
                                                                    }
                                                                                               + v108
                                                                                               + 48));
                                                                    v108 -= 24;
                                                                    if (v108 == -72)
                                                                    {
                                                                      if (SLOBYTE(STACK[0x95F]) < 0) {
                                                                        operator delete((void *)STACK[0x948]);
                                                                      }
                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x960], (char *)STACK[0x968]);
                                                                      uint64_t v109 = 0;
                                                                      while (1)
                                                                      {
                                                                        if (*((char *)&STACK[0x1AD0] + v109 + 47) < 0) {
                                                                          operator delete(*(void **)((char *)&STACK[0x1AD0] + v109 + 24));
                                                                        }
                                                                        v109 -= 24;
                                                                        if (v109 == -48)
                                                                        {
                                                                          if (SLOBYTE(STACK[0x98F]) < 0) {
                                                                            operator delete((void *)STACK[0x978]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x990], (char *)STACK[0x998]);
                                                                          if (v87[2975] < 0) {
                                                                            operator delete((void *)STACK[0x1B00]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0x9BF]) < 0) {
                                                                            operator delete((void *)STACK[0x9A8]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x9C0], (char *)STACK[0x9C8]);
                                                                          if (v87[2999] < 0) {
                                                                            operator delete((void *)STACK[0x1B18]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0x9EF]) < 0) {
                                                                            operator delete((void *)STACK[0x9D8]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x9F0], (char *)STACK[0x9F8]);
                                                                          if (v87[3023] < 0) {
                                                                            operator delete((void *)STACK[0x1B30]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xA1F]) < 0) {
                                                                            operator delete((void *)STACK[0xA08]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xA20], (char *)STACK[0xA28]);
                                                                          if (v87[3047] < 0) {
                                                                            operator delete((void *)STACK[0x1B48]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xA4F]) < 0) {
                                                                            operator delete((void *)STACK[0xA38]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xA50], (char *)STACK[0xA58]);
                                                                          if (v87[3071] < 0) {
                                                                            operator delete((void *)STACK[0x1B60]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xA7F]) < 0) {
                                                                            operator delete((void *)STACK[0xA68]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xA80], (char *)STACK[0xA88]);
                                                                          if (v87[3095] < 0) {
                                                                            operator delete((void *)STACK[0x1B78]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xAAF]) < 0) {
                                                                            operator delete((void *)STACK[0xA98]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xAB0], (char *)STACK[0xAB8]);
                                                                          if (v87[3119] < 0) {
                                                                            operator delete((void *)STACK[0x1B90]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xADF]) < 0) {
                                                                            operator delete((void *)STACK[0xAC8]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xAE0], (char *)STACK[0xAE8]);
                                                                          if (v87[3143] < 0) {
                                                                            operator delete((void *)STACK[0x1BA8]);
                                                                          }
                                                                          if (SLOBYTE(STACK[0xB0F]) < 0) {
                                                                            operator delete((void *)STACK[0xAF8]);
                                                                          }
                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xB10], (char *)STACK[0xB18]);
                                                                          uint64_t v110 = 0;
                                                                          while (1)
                                                                          {
                                                                            if (*((char *)&STACK[0x1BC0] + v110 + 47) < 0) {
                                                                              operator delete(*(void **)((char *)&STACK[0x1BC0] + v110 + 24));
                                                                            }
                                                                            v110 -= 24;
                                                                            if (v110 == -48)
                                                                            {
                                                                              if (SLOBYTE(STACK[0xB3F]) < 0) {
                                                                                operator delete((void *)STACK[0xB28]);
                                                                              }
                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0xB40], (char *)STACK[0xB48]);
                                                                              if (v87[3215] < 0) {
                                                                                operator delete((void *)STACK[0x1BF0]);
                                                                              }
                                                                              if (SLOBYTE(STACK[0xB6F]) < 0) {
                                                                                operator delete((void *)STACK[0xB58]);
                                                                              }
                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0xB70], (char *)STACK[0xB78]);
                                                                              uint64_t v111 = 0;
                                                                              while (1)
                                                                              {
                                                                                if (*((char *)&STACK[0x1C08] + v111 + 47) < 0) {
                                                                                  operator delete(*(void **)((char *)&STACK[0x1C08] + v111 + 24));
                                                                                }
                                                                                v111 -= 24;
                                                                                if (v111 == -48)
                                                                                {
                                                                                  if (SLOBYTE(STACK[0xB9F]) < 0) {
                                                                                    operator delete((void *)STACK[0xB88]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xBA0], (char *)STACK[0xBA8]);
                                                                                  if (v87[3287] < 0) {
                                                                                    operator delete((void *)STACK[0x1C38]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xBCF]) < 0) {
                                                                                    operator delete((void *)STACK[0xBB8]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xBD0], (char *)STACK[0xBD8]);
                                                                                  if (v87[3311] < 0) {
                                                                                    operator delete((void *)STACK[0x1C50]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xBFF]) < 0) {
                                                                                    operator delete((void *)STACK[0xBE8]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xC00], (char *)STACK[0xC08]);
                                                                                  if (v87[3335] < 0) {
                                                                                    operator delete((void *)STACK[0x1C68]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xC2F]) < 0) {
                                                                                    operator delete((void *)STACK[0xC18]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xC30], (char *)STACK[0xC38]);
                                                                                  if (v87[3359] < 0) {
                                                                                    operator delete((void *)STACK[0x1C80]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xC5F]) < 0) {
                                                                                    operator delete((void *)STACK[0xC48]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xC60], (char *)STACK[0xC68]);
                                                                                  if (v87[3383] < 0) {
                                                                                    operator delete((void *)STACK[0x1C98]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xC8F]) < 0) {
                                                                                    operator delete((void *)STACK[0xC78]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xC90], (char *)STACK[0xC98]);
                                                                                  if (v87[3407] < 0) {
                                                                                    operator delete((void *)STACK[0x1CB0]);
                                                                                  }
                                                                                  if (SLOBYTE(STACK[0xCBF]) < 0) {
                                                                                    operator delete((void *)STACK[0xCA8]);
                                                                                  }
                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xCC0], (char *)STACK[0xCC8]);
                                                                                  uint64_t v112 = 0;
                                                                                  while (1)
                                                                                  {
                                                                                    if (*((char *)&STACK[0x1CC8]
                                                                                         + v112
                                                                                         + 47) < 0)
                                                                                      operator delete(*(void **)((char *)&STACK[0x1CC8] + v112 + 24));
                                                                                    v112 -= 24;
                                                                                    if (v112 == -48)
                                                                                    {
                                                                                      if (SLOBYTE(STACK[0xCEF]) < 0) {
                                                                                        operator delete((void *)STACK[0xCD8]);
                                                                                      }
                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0xCF0], (char *)STACK[0xCF8]);
                                                                                      uint64_t v113 = 0;
                                                                                      while (1)
                                                                                      {
                                                                                        if (*((char *)&STACK[0x1CF8]
                                                                                             + v113
                                                                                             + 47) < 0)
                                                                                          operator delete(*(void **)((char *)&STACK[0x1CF8] + v113 + 24));
                                                                                        v113 -= 24;
                                                                                        if (v113 == -48)
                                                                                        {
                                                                                          if (SLOBYTE(STACK[0xD1F]) < 0) {
                                                                                            operator delete((void *)STACK[0xD08]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xD20], (char *)STACK[0xD28]);
                                                                                          if (v87[3527] < 0) {
                                                                                            operator delete((void *)STACK[0x1D28]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xD4F]) < 0) {
                                                                                            operator delete((void *)STACK[0xD38]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xD50], (char *)STACK[0xD58]);
                                                                                          if (v87[3551] < 0) {
                                                                                            operator delete((void *)STACK[0x1D40]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xD7F]) < 0) {
                                                                                            operator delete((void *)STACK[0xD68]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xD80], (char *)STACK[0xD88]);
                                                                                          if (v87[3575] < 0) {
                                                                                            operator delete((void *)STACK[0x1D58]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xDAF]) < 0) {
                                                                                            operator delete((void *)STACK[0xD98]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xDB0], (char *)STACK[0xDB8]);
                                                                                          if (v87[3599] < 0) {
                                                                                            operator delete((void *)STACK[0x1D70]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xDDF]) < 0) {
                                                                                            operator delete((void *)STACK[0xDC8]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xDE0], (char *)STACK[0xDE8]);
                                                                                          if (v87[3623] < 0) {
                                                                                            operator delete((void *)STACK[0x1D88]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xE0F]) < 0) {
                                                                                            operator delete((void *)STACK[0xDF8]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xE10], (char *)STACK[0xE18]);
                                                                                          if (v87[3647] < 0) {
                                                                                            operator delete((void *)STACK[0x1DA0]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xE3F]) < 0) {
                                                                                            operator delete((void *)STACK[0xE28]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xE40], (char *)STACK[0xE48]);
                                                                                          if (v87[3671] < 0) {
                                                                                            operator delete((void *)STACK[0x1DB8]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xE6F]) < 0) {
                                                                                            operator delete((void *)STACK[0xE58]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xE70], (char *)STACK[0xE78]);
                                                                                          if (v87[3695] < 0) {
                                                                                            operator delete((void *)STACK[0x1DD0]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xE9F]) < 0) {
                                                                                            operator delete((void *)STACK[0xE88]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xEA0], (char *)STACK[0xEA8]);
                                                                                          if (v87[3719] < 0) {
                                                                                            operator delete((void *)STACK[0x1DE8]);
                                                                                          }
                                                                                          if (SLOBYTE(STACK[0xECF]) < 0) {
                                                                                            operator delete((void *)STACK[0xEB8]);
                                                                                          }
                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0xED0], (char *)STACK[0xED8]);
                                                                                          uint64_t v114 = 0;
                                                                                          while (1)
                                                                                          {
                                                                                            if (*((char *)&STACK[0x1E00]
                                                                                                 + v114
                                                                                                 + 47) < 0)
                                                                                              operator delete(*(void **)((char *)&STACK[0x1E00] + v114 + 24));
                                                                                            v114 -= 24;
                                                                                            if (v114 == -48)
                                                                                            {
                                                                                              if (SLOBYTE(STACK[0xEFF]) < 0) {
                                                                                                operator delete((void *)STACK[0xEE8]);
                                                                                              }
                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0xF00], (char *)STACK[0xF08]);
                                                                                              if (v87[3791] < 0) {
                                                                                                operator delete((void *)STACK[0x1E30]);
                                                                                              }
                                                                                              if (SLOBYTE(STACK[0xF2F]) < 0) {
                                                                                                operator delete((void *)STACK[0xF18]);
                                                                                              }
                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0xF30], (char *)STACK[0xF38]);
                                                                                              if (v87[3815] < 0) {
                                                                                                operator delete((void *)STACK[0x1E48]);
                                                                                              }
                                                                                              if (SLOBYTE(STACK[0xF5F]) < 0) {
                                                                                                operator delete((void *)STACK[0xF48]);
                                                                                              }
                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0xF60], (char *)STACK[0xF68]);
                                                                                              uint64_t v115 = 0;
                                                                                              while (1)
                                                                                              {
                                                                                                if (*((char *)&STACK[0x1E60] + v115 + 71) < 0) {
                                                                                                  operator delete(*(void **)((char *)&STACK[0x1E60] + v115 + 48));
                                                                                                }
                                                                                                v115 -= 24;
                                                                                                if (v115 == -72)
                                                                                                {
                                                                                                  if (v87[23] < 0) {
                                                                                                    operator delete((void *)STACK[0xF78]);
                                                                                                  }
                                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0xF90], (char *)STACK[0xF98]);
                                                                                                  uint64_t v116 = 0;
                                                                                                  while (1)
                                                                                                  {
                                                                                                    if (*((char *)&STACK[0x1EA8] + v116 + 47) < 0) {
                                                                                                      operator delete(*(void **)((char *)&STACK[0x1EA8] + v116 + 24));
                                                                                                    }
                                                                                                    v116 -= 24;
                                                                                                    if (v116 == -48)
                                                                                                    {
                                                                                                      if (v87[71] < 0) {
                                                                                                        operator delete((void *)STACK[0xFA8]);
                                                                                                      }
                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0xFC0], (char *)STACK[0xFC8]);
                                                                                                      if (v87[3959] < 0) {
                                                                                                        operator delete((void *)STACK[0x1ED8]);
                                                                                                      }
                                                                                                      if (v87[119] < 0) {
                                                                                                        operator delete((void *)STACK[0xFD8]);
                                                                                                      }
                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0xFF0], (char *)STACK[0xFF8]);
                                                                                                      uint64_t v117 = 0;
                                                                                                      while (1)
                                                                                                      {
                                                                                                        if (*((char *)&STACK[0x1EF0] + v117 + 47) < 0) {
                                                                                                          operator delete(*(void **)((char *)&STACK[0x1EF0] + v117 + 24));
                                                                                                        }
                                                                                                        v117 -= 24;
                                                                                                        if (v117 == -48)
                                                                                                        {
                                                                                                          if (v87[167] < 0) {
                                                                                                            operator delete((void *)STACK[0x1008]);
                                                                                                          }
                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1020], (char *)STACK[0x1028]);
                                                                                                          if (v87[4031] < 0) {
                                                                                                            operator delete((void *)STACK[0x1F20]);
                                                                                                          }
                                                                                                          if (v87[215] < 0) {
                                                                                                            operator delete((void *)STACK[0x1038]);
                                                                                                          }
                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1050], (char *)STACK[0x1058]);
                                                                                                          uint64_t v118 = 0;
                                                                                                          while (1)
                                                                                                          {
                                                                                                            if (*((char *)&STACK[0x1F38] + v118 + 47) < 0) {
                                                                                                              operator delete(*(void **)((char *)&STACK[0x1F38] + v118 + 24));
                                                                                                            }
                                                                                                            v118 -= 24;
                                                                                                            if (v118 == -48)
                                                                                                            {
                                                                                                              if (v87[263] < 0) {
                                                                                                                operator delete((void *)STACK[0x1068]);
                                                                                                              }
                                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x1080], (char *)STACK[0x1088]);
                                                                                                              if (v88[23] < 0) {
                                                                                                                operator delete((void *)STACK[0x1F68]);
                                                                                                              }
                                                                                                              if (v87[311] < 0) {
                                                                                                                operator delete((void *)STACK[0x1098]);
                                                                                                              }
                                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x10B0], (char *)STACK[0x10B8]);
                                                                                                              uint64_t v119 = 0;
                                                                                                              while (1)
                                                                                                              {
                                                                                                                if (*((char *)&STACK[0x1F80] + v119 + 71) < 0) {
                                                                                                                  operator delete(*(void **)((char *)&STACK[0x1F80] + v119 + 48));
                                                                                                                }
                                                                                                                v119 -= 24;
                                                                                                                if (v119 == -72)
                                                                                                                {
                                                                                                                  if (v87[359] < 0) {
                                                                                                                    operator delete((void *)STACK[0x10C8]);
                                                                                                                  }
                                                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x10E0], (char *)STACK[0x10E8]);
                                                                                                                  if (v88[119] < 0) {
                                                                                                                    operator delete((void *)STACK[0x1FC8]);
                                                                                                                  }
                                                                                                                  if (v87[407] < 0) {
                                                                                                                    operator delete((void *)STACK[0x10F8]);
                                                                                                                  }
                                                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x1110], (char *)STACK[0x1118]);
                                                                                                                  if (v88[143] < 0) {
                                                                                                                    operator delete((void *)STACK[0x1FE0]);
                                                                                                                  }
                                                                                                                  if (v87[455] < 0) {
                                                                                                                    operator delete((void *)STACK[0x1128]);
                                                                                                                  }
                                                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x1140], (char *)STACK[0x1148]);
                                                                                                                  uint64_t v120 = 0;
                                                                                                                  while (1)
                                                                                                                  {
                                                                                                                    if (*((char *)&STACK[0x1FF8] + v120 + 47) < 0) {
                                                                                                                      operator delete(*(void **)((char *)&STACK[0x1FF8] + v120 + 24));
                                                                                                                    }
                                                                                                                    v120 -= 24;
                                                                                                                    if (v120 == -48)
                                                                                                                    {
                                                                                                                      if (v87[503] < 0) {
                                                                                                                        operator delete((void *)STACK[0x1158]);
                                                                                                                      }
                                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x1170], (char *)STACK[0x1178]);
                                                                                                                      if (v88[215] < 0) {
                                                                                                                        operator delete((void *)STACK[0x2028]);
                                                                                                                      }
                                                                                                                      if (v87[551] < 0) {
                                                                                                                        operator delete((void *)STACK[0x1188]);
                                                                                                                      }
                                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x11A0], (char *)STACK[0x11A8]);
                                                                                                                      uint64_t v121 = 0;
                                                                                                                      while (1)
                                                                                                                      {
                                                                                                                        if (*((char *)&STACK[0x2040] + v121 + 47) < 0) {
                                                                                                                          operator delete(*(void **)((char *)&STACK[0x2040] + v121 + 24));
                                                                                                                        }
                                                                                                                        v121 -= 24;
                                                                                                                        if (v121 == -48)
                                                                                                                        {
                                                                                                                          if (v87[599] < 0) {
                                                                                                                            operator delete((void *)STACK[0x11B8]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x11D0], (char *)STACK[0x11D8]);
                                                                                                                          if (v88[287] < 0) {
                                                                                                                            operator delete((void *)STACK[0x2070]);
                                                                                                                          }
                                                                                                                          if (v87[647] < 0) {
                                                                                                                            operator delete((void *)STACK[0x11E8]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1200], (char *)STACK[0x1208]);
                                                                                                                          if (v88[311] < 0) {
                                                                                                                            operator delete((void *)STACK[0x2088]);
                                                                                                                          }
                                                                                                                          if (v87[695] < 0) {
                                                                                                                            operator delete((void *)STACK[0x1218]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1230], (char *)STACK[0x1238]);
                                                                                                                          if (v88[335] < 0) {
                                                                                                                            operator delete((void *)STACK[0x20A0]);
                                                                                                                          }
                                                                                                                          if (v87[743] < 0) {
                                                                                                                            operator delete((void *)STACK[0x1248]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1260], (char *)STACK[0x1268]);
                                                                                                                          if (v88[359] < 0) {
                                                                                                                            operator delete((void *)STACK[0x20B8]);
                                                                                                                          }
                                                                                                                          if (v87[791] < 0) {
                                                                                                                            operator delete((void *)STACK[0x1278]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1290], (char *)STACK[0x1298]);
                                                                                                                          if (v88[383] < 0) {
                                                                                                                            operator delete((void *)STACK[0x20D0]);
                                                                                                                          }
                                                                                                                          if (v87[839] < 0) {
                                                                                                                            operator delete((void *)STACK[0x12A8]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x12C0], (char *)STACK[0x12C8]);
                                                                                                                          if (v88[407] < 0) {
                                                                                                                            operator delete((void *)STACK[0x20E8]);
                                                                                                                          }
                                                                                                                          if (v87[887] < 0) {
                                                                                                                            operator delete((void *)STACK[0x12D8]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x12F0], (char *)STACK[0x12F8]);
                                                                                                                          if (v88[431] < 0) {
                                                                                                                            operator delete((void *)STACK[0x2100]);
                                                                                                                          }
                                                                                                                          if (v87[935] < 0) {
                                                                                                                            operator delete((void *)STACK[0x1308]);
                                                                                                                          }
                                                                                                                          std::__tree<std::string>::destroy((uint64_t)&STACK[0x1320], (char *)STACK[0x1328]);
                                                                                                                          uint64_t v122 = 0;
                                                                                                                          while (1)
                                                                                                                          {
                                                                                                                            if (*((char *)&STACK[0x2118] + v122 + 47) < 0) {
                                                                                                                              operator delete(*(void **)((char *)&STACK[0x2118] + v122 + 24));
                                                                                                                            }
                                                                                                                            v122 -= 24;
                                                                                                                            if (v122 == -48)
                                                                                                                            {
                                                                                                                              if (v87[983] < 0) {
                                                                                                                                operator delete((void *)STACK[0x1338]);
                                                                                                                              }
                                                                                                                              std::__tree<std::string>::destroy((uint64_t)&STACK[0x1350], (char *)STACK[0x1358]);
                                                                                                                              uint64_t v123 = 0;
                                                                                                                              while (1)
                                                                                                                              {
                                                                                                                                if (*((char *)&STACK[0x2148] + v123 + 47) < 0) {
                                                                                                                                  operator delete(*(void **)((char *)&STACK[0x2148] + v123 + 24));
                                                                                                                                }
                                                                                                                                v123 -= 24;
                                                                                                                                if (v123 == -48)
                                                                                                                                {
                                                                                                                                  if (v87[1031] < 0) {
                                                                                                                                    operator delete((void *)STACK[0x1368]);
                                                                                                                                  }
                                                                                                                                  std::__tree<std::string>::destroy((uint64_t)&STACK[0x1380], (char *)STACK[0x1388]);
                                                                                                                                  uint64_t v124 = 0;
                                                                                                                                  while (1)
                                                                                                                                  {
                                                                                                                                    if (*((char *)&STACK[0x2178] + v124 + 47) < 0) {
                                                                                                                                      operator delete(*(void **)((char *)&STACK[0x2178] + v124 + 24));
                                                                                                                                    }
                                                                                                                                    v124 -= 24;
                                                                                                                                    if (v124 == -48)
                                                                                                                                    {
                                                                                                                                      if (v87[1079] < 0) {
                                                                                                                                        operator delete((void *)STACK[0x1398]);
                                                                                                                                      }
                                                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x13B0], (char *)STACK[0x13B8]);
                                                                                                                                      if (v88[599] < 0) {
                                                                                                                                        operator delete((void *)STACK[0x21A8]);
                                                                                                                                      }
                                                                                                                                      if (v87[1127] < 0) {
                                                                                                                                        operator delete((void *)STACK[0x13C8]);
                                                                                                                                      }
                                                                                                                                      std::__tree<std::string>::destroy((uint64_t)&STACK[0x13E0], (char *)STACK[0x13E8]);
                                                                                                                                      if (v88[623] < 0) {
                                                                                                                                        operator delete((void *)STACK[0x21C0]);
                                                                                                                                      }
                                                                                                                                      if (v87[1175] < 0) {
                                                                                                                                        operator delete((void *)STACK[0x13F8]);
                                                                                                                                      }
                                                                                                                                      _Unwind_Resume(a1);
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1C5DF136C()
{
}

void sub_1C5DF1378()
{
}

void sub_1C5DF1384()
{
}

void sub_1C5DF1394()
{
}

void sub_1C5DF13A0()
{
}

void sub_1C5DF13AC()
{
}

void sub_1C5DF13BC()
{
}

void sub_1C5DF13C8()
{
}

void sub_1C5DF13D4()
{
}

void sub_1C5DF13E4()
{
}

void sub_1C5DF13F0()
{
}

void sub_1C5DF13FC()
{
}

void sub_1C5DF140C()
{
}

void sub_1C5DF1418()
{
}

void sub_1C5DF1424()
{
}

void sub_1C5DF1434()
{
}

void sub_1C5DF1440()
{
}

void sub_1C5DF144C()
{
}

void sub_1C5DF145C()
{
}

void sub_1C5DF1468()
{
}

void sub_1C5DF1474()
{
}

void sub_1C5DF1484()
{
}

void sub_1C5DF1490()
{
}

void sub_1C5DF149C()
{
}

void sub_1C5DF14AC()
{
}

void sub_1C5DF14B8()
{
}

void sub_1C5DF2648()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x1578]) {
      JUMPOUT(0x1C5DF2670);
    }
  }
}

void sub_1C5DF2678()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x1710]) {
      JUMPOUT(0x1C5DF26A0);
    }
  }
}

void sub_1C5DF26A8()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x18F0]) {
      JUMPOUT(0x1C5DF26D0);
    }
  }
}

void sub_1C5DF26D8()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x1A88]) {
      JUMPOUT(0x1C5DF2700);
    }
  }
}

void sub_1C5DF2708()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x1E60]) {
      JUMPOUT(0x1C5DF2730);
    }
  }
}

void sub_1C5DF2738()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x1F80]) {
      JUMPOUT(0x1C5DF2760);
    }
  }
}

std::string *std::pair<std::string const,std::set<std::string> const>::pair[abi:ne180100]<true,0>(std::string *this, long long *a2, const void ***a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v5;
  }
  std::set<std::string>::set[abi:ne180100]((uint64_t *)&this[1], a3);
  return this;
}

void sub_1C5DF27C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::map<std::string const,std::set<std::string> const,std::less<std::string const>,std::allocator<std::pair<std::string const,std::set<std::string> const>>>::map[abi:ne180100](long long *a1, uint64_t a2)
{
  qword_1EA3D8830 = 0;
  qword_1EA3D8828 = 0;
  siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields = (uint64_t)&qword_1EA3D8828;
  if (a2)
  {
    uint64_t v2 = a1;
    uint64_t v3 = 0;
    BOOL v4 = &a1[3 * a2];
    for (unint64_t i = &qword_1EA3D8828;
          i != &qword_1EA3D8828;
          unint64_t i = (uint64_t *)siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields)
    {
      uint64_t v6 = (uint64_t *)v3;
      if (v3)
      {
        do
        {
          unint64_t v7 = v6;
          uint64_t v6 = (uint64_t *)v6[1];
        }
        while (v6);
      }
      else
      {
        uint64_t v8 = &qword_1EA3D8828;
        do
        {
          unint64_t v7 = (uint64_t *)v8[2];
          BOOL v9 = *v7 == (void)v8;
          uint64_t v8 = v7;
        }
        while (v9);
      }
      if (std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v7 + 4, v2)) {
        goto LABEL_11;
      }
      if (!v3) {
        goto LABEL_22;
      }
      unint64_t v11 = (uint64_t *)v3;
      while (1)
      {
        while (1)
        {
          unint64_t v7 = v11;
          uint64_t v12 = v11 + 4;
          if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v2, v11 + 4)) {
            break;
          }
          unint64_t v11 = (uint64_t *)*v7;
          uint64_t v10 = v7;
          if (!*v7) {
            goto LABEL_23;
          }
        }
        if (!std::__less<void,void>::operator()[abi:ne180100]<std::string,std::string>(v12, v2)) {
          break;
        }
        uint64_t v10 = v7 + 1;
        unint64_t v11 = (uint64_t *)v7[1];
        if (!v11) {
          goto LABEL_23;
        }
      }
LABEL_29:
      v2 += 3;
      if (v2 == v4) {
        return;
      }
    }
    unint64_t v7 = &qword_1EA3D8828;
LABEL_11:
    if (v3)
    {
      uint64_t v10 = v7 + 1;
      if (v7[1]) {
        goto LABEL_29;
      }
    }
    else
    {
LABEL_22:
      unint64_t v7 = &qword_1EA3D8828;
      uint64_t v10 = &qword_1EA3D8828;
    }
LABEL_23:
    unint64_t v13 = (char *)operator new(0x50uLL);
    uint64_t v14 = (uint64_t *)v13;
    v17[0] = v13;
    v17[1] = &qword_1EA3D8828;
    char v18 = 0;
    if (*((char *)v2 + 23) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)(v13 + 32), *(const std::string::value_type **)v2, *((void *)v2 + 1));
    }
    else
    {
      long long v15 = *v2;
      *((void *)v13 + 6) = *((void *)v2 + 2);
      *((_OWORD *)v13 + 2) = v15;
    }
    std::set<std::string>::set[abi:ne180100](v14 + 7, (const void ***)v2 + 3);
    char v18 = 1;
    char v16 = (uint64_t *)v17[0];
    *(void *)v17[0] = 0;
    v16[1] = 0;
    v16[2] = (uint64_t)v7;
    *uint64_t v10 = (uint64_t)v16;
    if (*(void *)siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields)
    {
      siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields = *(void *)siri::dialogengine::vcat::GetRequiredFields(std::string const&)::fullNameToRequiredFields;
      char v16 = (uint64_t *)*v10;
    }
    std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)qword_1EA3D8828, v16);
    ++qword_1EA3D8830;
    v17[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)v17);
    uint64_t v3 = qword_1EA3D8828;
    goto LABEL_29;
  }
}

void sub_1C5DF29D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::set<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)va);
  std::__tree<std::__value_type<std::string,std::set<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::set<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::set<std::string>>>>::destroy((void *)qword_1EA3D8828);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::set<std::string> const>::~pair(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::map<std::string const,std::set<std::string> const,std::less<std::string const>,std::allocator<std::pair<std::string const,std::set<std::string> const>>>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

void std::__optional_storage_base<siri::dialogengine::ObjectProperty,false>::__assign_from[abi:ne180100]<std::__optional_copy_assign_base<siri::dialogengine::ObjectProperty,false> const&>(siri::dialogengine::ObjectProperty *this, siri::dialogengine::ObjectProperty *a2)
{
  if (*((unsigned __int8 *)this + 240) == *((unsigned __int8 *)a2 + 240))
  {
    if (*((unsigned char *)this + 240))
    {
      std::string::operator=((std::string *)((char *)this + 8), (const std::string *)((char *)a2 + 8));
      std::string::operator=((std::string *)((char *)this + 32), (const std::string *)((char *)a2 + 32));
      std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)a2 + 56));
      std::string::operator=((std::string *)((char *)this + 80), (const std::string *)((char *)a2 + 80));
      std::string::operator=((std::string *)((char *)this + 104), (const std::string *)((char *)a2 + 104));
      std::string::operator=((std::string *)((char *)this + 128), (const std::string *)((char *)a2 + 128));
      char v4 = *((unsigned char *)a2 + 154);
      *((_WORD *)this + 76) = *((_WORD *)a2 + 76);
      *((unsigned char *)this + 154) = v4;
      std::string::operator=((std::string *)((char *)this + 160), (const std::string *)((char *)a2 + 160));
      std::string::operator=((std::string *)((char *)this + 184), (const std::string *)((char *)a2 + 184));
      std::string::operator=((std::string *)((char *)this + 208), (const std::string *)((char *)a2 + 208));
      *((_WORD *)this + 1google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((_WORD *)a2 + 116);
    }
  }
  else if (*((unsigned char *)this + 240))
  {
    siri::dialogengine::ObjectProperty::~ObjectProperty((void **)this);
    *((unsigned char *)this + 24std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  }
  else
  {
    siri::dialogengine::ObjectProperty::ObjectProperty(this, a2);
    *((unsigned char *)this + 24std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 1;
  }
}

siri::dialogengine::ObjectProperty *std::__optional_copy_base<siri::dialogengine::ObjectProperty,false>::__optional_copy_base[abi:ne180100](siri::dialogengine::ObjectProperty *this, const siri::dialogengine::ObjectProperty *a2)
{
  *(unsigned char *)this = 0;
  *((unsigned char *)this + 24std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if (*((unsigned char *)a2 + 240))
  {
    siri::dialogengine::ObjectProperty::ObjectProperty(this, a2);
    *((unsigned char *)this + 24std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 1;
  }
  return this;
}

void sub_1C5DF2C4C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 240)) {
    siri::dialogengine::ObjectProperty::~ObjectProperty((void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void __assign_helper_atomic_property__3104(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  char v4 = (std::__shared_weak_count *)a1[1];
  *a1 = v3;
  a1[1] = v2;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void *__copy_helper_atomic_property__3106(void *result, void *a2)
{
  uint64_t v2 = a2[1];
  char *result = *a2;
  result[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1C5DF2E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DF3034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DF3204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DF33D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5DF354C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  if (a40) {
    siri::dialogengine::ObjectProperty::~ObjectProperty(&a10);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DF362C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  if (a40) {
    siri::dialogengine::ObjectProperty::~ObjectProperty(&a10);
  }

  _Unwind_Resume(a1);
}

void sub_1C5DF36FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  if (a40) {
    siri::dialogengine::ObjectProperty::~ObjectProperty(&a10);
  }

  _Unwind_Resume(a1);
}

void YAML::EncodeBase64(YAML *this@<X0>, unint64_t a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, 4 * a2 / 3 + 3, 0);
  if ((a3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = a3;
  }
  else {
    uint64_t v6 = (std::string *)a3->__r_.__value_.__r.__words[0];
  }
  unint64_t v7 = a2 / 3;
  unint64_t v8 = a2 % 3;
  if (a2 >= 3)
  {
    do
    {
      v6->__r_.__value_.__s.__data_[0] = aAbcdefghijklmn[(unint64_t)*(unsigned __int8 *)this >> 2];
      v6->__r_.__value_.__s.__data_[1] = aAbcdefghijklmn[((unint64_t)*((unsigned __int8 *)this + 1) >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (*(unsigned char *)this & 3))];
      v6->__r_.__value_.__s.__data_[2] = aAbcdefghijklmn[((unint64_t)*((unsigned __int8 *)this + 2) >> 6) & 0xFFFFFFFFFFFFFFC3 | (4 * (*((unsigned char *)this + 1) & 0xF))];
      BOOL v9 = (std::string *)((char *)v6->__r_.__value_.__r.__words + 4);
      v6->__r_.__value_.__s.__data_[3] = aAbcdefghijklmn[*((unsigned char *)this + 2) & 0x3F];
      this = (YAML *)((char *)this + 3);
      uint64_t v6 = (std::string *)((char *)v6 + 4);
      --v7;
    }
    while (v7);
    uint64_t v6 = v9;
  }
  if (v8 == 1)
  {
    v6->__r_.__value_.__s.__data_[0] = aAbcdefghijklmn[(unint64_t)*(unsigned __int8 *)this >> 2];
    v6->__r_.__value_.__s.__data_[1] = aAbcdefghijklmn[16 * (*(unsigned char *)this & 3)];
    char v10 = 61;
  }
  else
  {
    if (v8 != 2) {
      goto LABEL_12;
    }
    v6->__r_.__value_.__s.__data_[0] = aAbcdefghijklmn[(unint64_t)*(unsigned __int8 *)this >> 2];
    v6->__r_.__value_.__s.__data_[1] = aAbcdefghijklmn[((unint64_t)*((unsigned __int8 *)this + 1) >> 4) & 0xFFFFFFFFFFFFFFCFLL | (16 * (*(unsigned char *)this & 3))];
    char v10 = aAbcdefghijklmn[4 * (*((unsigned char *)this + 1) & 0xF)];
  }
  v6->__r_.__value_.__s.__data_[2] = v10;
  v6->__r_.__value_.__s.__data_[3] = 61;
  uint64_t v6 = (std::string *)((char *)v6 + 4);
LABEL_12:
  if ((a3->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v11 = (std::string::size_type)a3;
  }
  else {
    std::string::size_type v11 = a3->__r_.__value_.__r.__words[0];
  }
  std::string::resize(a3, (std::string::size_type)v6 - v11, 0);
}

void sub_1C5DF38DC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void YAML::DecodeBase64(uint64_t *a1@<X0>, void *a2@<X8>)
{
  int v3 = *((char *)a1 + 23);
  uint64_t v4 = *((unsigned __int8 *)a1 + 23);
  unsigned int v5 = *((unsigned __int8 *)a1 + 23);
  BOOL v6 = v3 < 0;
  if (v3 < 0)
  {
    uint64_t v7 = a1[1];
    if (v7) {
      goto LABEL_5;
    }
LABEL_45:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    return;
  }
  if (!*((unsigned char *)a1 + 23)) {
    goto LABEL_45;
  }
  uint64_t v7 = *((unsigned __int8 *)a1 + 23);
LABEL_5:
  unint64_t v33 = 3 * v7;
  unint64_t v8 = (unint64_t)(3 * v7) >> 2;
  BOOL v9 = (char *)operator new(v8 + 1);
  unint64_t v34 = v8 + 1;
  bzero(v9, v8 + 1);
  uint64_t v10 = a1[1];
  if ((v5 & 0x80u) == 0) {
    uint64_t v10 = v4;
  }
  std::string::size_type v11 = v9;
  if (!v10)
  {
LABEL_35:
    unint64_t v26 = v11 - v9;
    size_t v27 = v11 - v9 - v34;
    if (v11 - v9 <= v34)
    {
      uint64_t v31 = &v9[v34];
      if (v8 >= v26) {
        BOOL v32 = v11;
      }
      else {
        BOOL v32 = &v9[v34];
      }
      uint64_t v30 = v9;
    }
    else
    {
      if ((v26 & 0x8000000000000000) != 0) {
        std::vector<BOOL>::__throw_length_error[abi:ne180100]();
      }
      uint64_t v28 = 2 * v34;
      if (2 * v34 <= v26) {
        uint64_t v28 = v11 - v9;
      }
      if (v33 >= 0xFFFFFFFFFFFFFFF8) {
        size_t v29 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v29 = v28;
      }
      uint64_t v30 = operator new(v29);
      uint64_t v31 = &v30[v29];
      BOOL v32 = &v30[v26];
      bzero(&v30[v34], v27);
      do
      {
        v30[v8] = v9[v8];
        --v8;
      }
      while (v8 != -1);
      operator delete(v9);
    }
    *a2 = v30;
    a2[1] = v32;
    a2[2] = v31;
    return;
  }
  char v12 = 0;
  unint64_t v13 = 0;
  unsigned int v14 = 0;
  uint64_t v15 = MEMORY[0x1E4F14390];
  std::string::size_type v11 = v9;
  while (1)
  {
    char v16 = (uint64_t *)*a1;
    if (!v6) {
      char v16 = a1;
    }
    unsigned int v17 = *((char *)v16 + v13);
    if ((v17 & 0x80000000) != 0) {
      break;
    }
    if ((*(_DWORD *)(v15 + 4 * v17 + 60) & 0x4000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    ++v13;
    BOOL v6 = (v5 & 0x80u) != 0;
    unint64_t v25 = a1[1];
    if ((v5 & 0x80u) == 0) {
      unint64_t v25 = v5;
    }
    if (v13 >= v25) {
      goto LABEL_35;
    }
  }
  int v18 = __maskrune(v17, 0x4000uLL);
  unsigned int v5 = *((unsigned __int8 *)a1 + 23);
  if (v18) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v5 & 0x80u) == 0) {
    unsigned __int8 v19 = a1;
  }
  else {
    unsigned __int8 v19 = (uint64_t *)*a1;
  }
  int v20 = YAML::decoding[*((char *)v19 + v13)];
  if (v20 != 255)
  {
    int v21 = v20 | (v14 << 6);
    if ((~v12 & 3) == 0)
    {
      *std::string::size_type v11 = v14 >> 10;
      long long v22 = v11 + 1;
      unsigned int v5 = *((unsigned __int8 *)a1 + 23);
      std::string::size_type v23 = (uint64_t *)*a1;
      if (v13)
      {
        uint64_t v24 = (v5 & 0x80u) == 0 ? (uint64_t)a1 : *a1;
        if (*(unsigned char *)(v24 + v13 - 1) != 61)
        {
          long long v22 = v11 + 2;
          v11[1] = (unsigned __int16)v14 >> 2;
          unsigned int v5 = *((unsigned __int8 *)a1 + 23);
          std::string::size_type v23 = (uint64_t *)*a1;
        }
      }
      if ((v5 & 0x80u) == 0) {
        std::string::size_type v23 = a1;
      }
      if (*((unsigned char *)v23 + v13) != 61)
      {
        *v22++ = v21;
        unsigned int v5 = *((unsigned __int8 *)a1 + 23);
      }
      std::string::size_type v11 = v22;
    }
    ++v12;
    unsigned int v14 = v21;
    goto LABEL_32;
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  operator delete(v9);
}

void sub_1C5DF3BBC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void InitDefaultsscc_info_Control_PlayerButton_Control_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", a4);
  SnippetUI::Control_PlayerButton::Control_PlayerButton((SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Control_PlayerButton_default_instance_, v4);
  qword_1EA3DB0B8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB0C0 = &SnippetUI::_TextProperty_default_instance_;
}

SnippetUI::Control_PlayerButton *SnippetUI::Control_PlayerButton::Control_PlayerButton(SnippetUI::Control_PlayerButton *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F211D400;
  *((_DWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  if (atomic_load_explicit(scc_info_Control_PlayerButton_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_PlayerButton_Control_2eproto);
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  return this;
}

void sub_1C5DF3CCC(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Control_PlayerButton::GetMetadata(SnippetUI::Control_PlayerButton *this)
{
  return qword_1EA3D8888;
}

void InitDefaultsscc_info_Control_Switch_Control_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", a4);
  SnippetUI::Control_Switch::Control_Switch((SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Control_Switch_default_instance_, v4);
  qword_1EB68F6E0 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EB68F6E8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F6F0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F6F8 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68F700 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::Control_Switch *SnippetUI::Control_Switch::Control_Switch(SnippetUI::Control_Switch *this)
{
  *(void *)this = &unk_1F211D280;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  if (atomic_load_explicit(scc_info_Control_Switch_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_Switch_Control_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DF3E28(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Control_Switch::GetMetadata(SnippetUI::Control_Switch *this)
{
  return file_level_metadata_Control_2eproto;
}

uint64_t SnippetUI::Control_Switch::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void SnippetUI::Control_Switch::MergeFrom(SnippetUI::Control_Switch *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 552);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Control_Switch::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DF3F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_Switch::MergeFrom(SnippetUI::Control_Switch *this, const SnippetUI::Control_Switch *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 567);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Control_Switch *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  if (a2 != (const SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_)
  {
    unint64_t v8 = (const SnippetUI::Switch *)*((void *)a2 + 3);
    if (v8)
    {
      BOOL v9 = (SnippetUI::Switch *)*((void *)this + 3);
      if (!v9)
      {
        BOOL v9 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
        *((void *)this + 3) = v9;
        unint64_t v8 = (const SnippetUI::Switch *)*((void *)a2 + 3);
      }
      if (v8) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = (const SnippetUI::Switch *)&SnippetUI::_Switch_default_instance_;
      }
      SnippetUI::Switch::MergeFrom(v9, v10);
    }
    std::string::size_type v11 = (int **)*((void *)a2 + 4);
    if (v11)
    {
      char v12 = (int **)*((void *)this + 4);
      if (!v12)
      {
        char v12 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v12;
        std::string::size_type v11 = (int **)*((void *)a2 + 4);
      }
      if (v11) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v12, v13);
    }
    unsigned int v14 = (int **)*((void *)a2 + 5);
    if (v14)
    {
      uint64_t v15 = (int **)*((void *)this + 5);
      if (!v15)
      {
        uint64_t v15 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v15;
        unsigned int v14 = (int **)*((void *)a2 + 5);
      }
      if (v14) {
        char v16 = v14;
      }
      else {
        char v16 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v15, v16);
    }
    unsigned int v17 = (int **)*((void *)a2 + 6);
    if (v17)
    {
      int v18 = (int **)*((void *)this + 6);
      if (!v18)
      {
        int v18 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
        *((void *)this + 6) = v18;
        unsigned int v17 = (int **)*((void *)a2 + 6);
      }
      if (v17) {
        unsigned __int8 v19 = v17;
      }
      else {
        unsigned __int8 v19 = (int **)&SnippetUI::_VisualProperty_default_instance_;
      }
      SnippetUI::VisualProperty::MergeFrom(v18, v19);
    }
    int v20 = (int **)*((void *)a2 + 7);
    if (v20)
    {
      int v21 = (int **)*((void *)this + 7);
      if (!v21)
      {
        int v21 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 7) = v21;
        int v20 = (int **)*((void *)a2 + 7);
      }
      if (v20) {
        long long v22 = v20;
      }
      else {
        long long v22 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v21, v22);
    }
  }
}

void sub_1C5DF4130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_Switch::CopyFrom(SnippetUI::Control_Switch *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_Switch::Clear(this);
    SnippetUI::Control_Switch::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_Switch::Clear(SnippetUI::Control_Switch *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  *((void *)this + 5) = 0;
  uint64_t v6 = *((void *)this + 6);
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  *((void *)this + 6) = 0;
  uint64_t v7 = *((void *)this + 7);
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  char v9 = *((unsigned char *)this + 8);
  unint64_t v8 = (SnippetUI::Control_Switch *)((char *)this + 8);
  *((void *)v8 + 6) = 0;
  if (v9)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v8);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Control_Switch::InternalSerializeWithCachedSizesToArray(SnippetUI::Control_Switch *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_) {
    goto LABEL_61;
  }
  uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 3);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      uint64_t v7 = (SnippetUI::Switch *)*((void *)this + 3);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 13);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          unint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        std::string::size_type v11 = v13 + 2;
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    std::string::size_type v11 = &v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::Switch::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  char v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      int v21 = v5 + 2;
      do
      {
        long long v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      int v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  int v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unint64_t v25 = (SnippetUI::TextProperty *)*((void *)this + 5);
  if (!v25) {
    goto LABEL_38;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v25 = (SnippetUI::TextProperty *)*((void *)this + 5);
  }
  *uint64_t v5 = 26;
  unsigned int v26 = *((_DWORD *)v25 + 15);
  if (v26 > 0x7F)
  {
    v5[1] = v26 | 0x80;
    unsigned int v28 = v26 >> 7;
    if (v26 >> 14)
    {
      uint64_t v30 = v5 + 2;
      do
      {
        uint64_t v31 = v30;
        *v30++ = v28 | 0x80;
        unsigned int v32 = v28 >> 7;
        unsigned int v33 = v28 >> 14;
        v28 >>= 7;
      }
      while (v33);
      size_t v29 = (google::protobuf::UnknownFieldSet *)(v31 + 2);
      *uint64_t v30 = v32;
      goto LABEL_37;
    }
    v5[2] = v28;
    uint64_t v27 = 3;
  }
  else
  {
    v5[1] = v26;
    uint64_t v27 = 2;
  }
  size_t v29 = (google::protobuf::UnknownFieldSet *)&v5[v27];
LABEL_37:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v25, v29, a3, a4);
LABEL_38:
  unint64_t v34 = (SnippetUI::VisualProperty *)*((void *)this + 6);
  if (!v34) {
    goto LABEL_50;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    unint64_t v34 = (SnippetUI::VisualProperty *)*((void *)this + 6);
  }
  *uint64_t v5 = 34;
  unsigned int v35 = *((_DWORD *)v34 + 15);
  if (v35 > 0x7F)
  {
    v5[1] = v35 | 0x80;
    unsigned int v37 = v35 >> 7;
    if (v35 >> 14)
    {
      size_t v39 = v5 + 2;
      do
      {
        uint64_t v40 = v39;
        *v39++ = v37 | 0x80;
        unsigned int v41 = v37 >> 7;
        unsigned int v42 = v37 >> 14;
        v37 >>= 7;
      }
      while (v42);
      uint64_t v38 = (google::protobuf::UnknownFieldSet *)(v40 + 2);
      *size_t v39 = v41;
      goto LABEL_49;
    }
    v5[2] = v37;
    uint64_t v36 = 3;
  }
  else
  {
    v5[1] = v35;
    uint64_t v36 = 2;
  }
  uint64_t v38 = (google::protobuf::UnknownFieldSet *)&v5[v36];
LABEL_49:
  uint64_t v5 = (char *)SnippetUI::VisualProperty::InternalSerializeWithCachedSizesToArray(v34, v38, a3, a4);
LABEL_50:
  char v43 = (SnippetUI::ActionProperty *)*((void *)this + 7);
  if (v43)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      char v43 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 42;
    unsigned int v44 = *((_DWORD *)v43 + 12);
    if (v44 > 0x7F)
    {
      v5[1] = v44 | 0x80;
      unsigned int v46 = v44 >> 7;
      if (v44 >> 14)
      {
        uint64_t v47 = v5 + 2;
        do
        {
          std::string v48 = v47;
          *v47++ = v46 | 0x80;
          unsigned int v49 = v46 >> 7;
          unsigned int v50 = v46 >> 14;
          v46 >>= 7;
        }
        while (v50);
        char v45 = (google::protobuf::UnknownFieldSet *)(v48 + 2);
        unsigned char *v47 = v49;
      }
      else
      {
        v5[2] = v46;
        char v45 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v44;
      char v45 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v43, v45, a3, a4);
  }
LABEL_61:
  uint64_t v51 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v51 + 23) < 0)
  {
    char v52 = (const char *)*((void *)v51 + 1);
    if (!v52) {
      goto LABEL_67;
    }
    uint64_t v51 = *(google::protobuf::internal **)v51;
    goto LABEL_66;
  }
  char v52 = (const char *)*((unsigned __int8 *)v51 + 23);
  if (*((unsigned char *)v51 + 23))
  {
LABEL_66:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v51, v52, 1, (google::protobuf::internal *)"SnippetUI.Control_Switch.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 2), v5);
  }
LABEL_67:
  uint64_t v53 = *((void *)this + 1);
  if ((v53 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v53 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Control_Switch::_InternalParse(SnippetUI::Control_Switch *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v17 = a2;
  uint64_t v5 = (std::string **)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v17, *((_DWORD *)a3 + 23))) {
      return v17;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v17 + 1);
    uint64_t v9 = (char *)*(unsigned __int8 *)v17;
    if ((*(char *)v17 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v9 = (char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
      unsigned int v17 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, v9);
    unsigned int v17 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        unsigned int v10 = (SnippetUI::Switch *)*((void *)this + 3);
        if (!v10)
        {
          unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Switch>(0);
          *((void *)this + 3) = v10;
          TagFallbacuint64_t k = v17;
        }
        std::string::size_type v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Switch>(a3, v10, TagFallback);
        goto LABEL_37;
      case 2u:
        if (v9 != 18) {
          goto LABEL_32;
        }
        char v12 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (v12) {
          goto LABEL_19;
        }
        char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v12;
        goto LABEL_18;
      case 3u:
        if (v9 != 26) {
          goto LABEL_32;
        }
        char v12 = (SnippetUI::TextProperty *)*((void *)this + 5);
        if (v12) {
          goto LABEL_19;
        }
        char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 5) = v12;
LABEL_18:
        TagFallbacuint64_t k = v17;
LABEL_19:
        std::string::size_type v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v12, TagFallback);
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        unint64_t v13 = (SnippetUI::VisualProperty *)*((void *)this + 6);
        if (!v13)
        {
          unint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::VisualProperty>(0);
          *((void *)this + 6) = v13;
          TagFallbacuint64_t k = v17;
        }
        std::string::size_type v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::VisualProperty>(a3, v13, TagFallback);
        goto LABEL_37;
      case 5u:
        if (v9 != 42) {
          goto LABEL_32;
        }
        unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
        if (!v14)
        {
          unsigned int v14 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 7) = v14;
          TagFallbacuint64_t k = v17;
        }
        std::string::size_type v11 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v14, TagFallback);
        goto LABEL_37;
      case 6u:
        if (v9 != 50) {
          goto LABEL_32;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        std::string::size_type v11 = google::protobuf::internal::InlineGreedyStringParserUTF8(*v5, (std::string::value_type *)TagFallback, (uint64_t)a3, (google::protobuf::internal *)"SnippetUI.Control_Switch.component_name");
        goto LABEL_37;
      default:
LABEL_32:
        if (v9) {
          BOOL v15 = (v9 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v9 - 1;
          return TagFallback;
        }
        std::string::size_type v11 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, v6, TagFallback, a3, v7);
LABEL_37:
        unsigned int v17 = (google::protobuf::internal *)v11;
        if (v11) {
          continue;
        }
        TagFallbacuint64_t k = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::Control_Switch::GetCachedSize(SnippetUI::Control_Switch *this)
{
  return *((unsigned int *)this + 16);
}

char *SnippetUI::Control_Switch::ByteSizeLong(SnippetUI::Control_Switch *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_)
  {
    uint64_t v6 = (SnippetUI::Switch *)*((void *)this + 3);
    if (v6)
    {
      uint64_t v7 = SnippetUI::Switch::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v8 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = SnippetUI::TextProperty::ByteSizeLong(v8);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v9[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v10 = (SnippetUI::TextProperty *)*((void *)this + 5);
    if (v10)
    {
      std::string::size_type v11 = SnippetUI::TextProperty::ByteSizeLong(v10);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v12 = (SnippetUI::VisualProperty *)*((void *)this + 6);
    if (v12)
    {
      unint64_t v13 = SnippetUI::VisualProperty::ByteSizeLong(v12);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v13[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v14 = (SnippetUI::ActionProperty *)*((void *)this + 7);
    if (v14)
    {
      BOOL v15 = SnippetUI::ActionProperty::ByteSizeLong(v14);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v15[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Control_Switch *)((char *)this + 8), v5, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::Control_Switch::IsInitialized(SnippetUI::Control_Switch *this)
{
  return 1;
}

SnippetUI::Control_Switch *SnippetUI::Control_Switch::New(SnippetUI::Control_Switch *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Switch>(a2);
}

SnippetUI::Control_Switch *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Switch>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Control_Switch *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x48uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Control_Switch>);
  }
  SnippetUI::Control_Switch::Control_Switch(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DF4BC8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4025EBE0BELL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Control_Switch>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Control_Switch *SnippetUI::Control_Switch::New(SnippetUI::Control_Switch *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Switch>(0);
}

void SnippetUI::Control_Switch::~Control_Switch(SnippetUI::Control_Switch *this)
{
  SnippetUI::Control_Switch::~Control_Switch(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(void *)this = &unk_1F211D280;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    unsigned int v8 = *((void *)this + 7);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_Control_Slider_Control_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", a4);
  SnippetUI::Control_Slider::Control_Slider((SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_Control_Slider_default_instance_, v4);
  qword_1EB68F6A8 = (uint64_t)&SnippetUI::_Slider_default_instance_;
  unk_1EB68F6B0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F6B8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

SnippetUI::Control_Slider *SnippetUI::Control_Slider::Control_Slider(SnippetUI::Control_Slider *this)
{
  *(void *)this = &unk_1F211D340;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = 0;
  if (atomic_load_explicit(scc_info_Control_Slider_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_Slider_Control_2eproto);
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  return this;
}

void sub_1C5DF4EC4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t SnippetUI::Control_Slider::GetMetadata(SnippetUI::Control_Slider *this)
{
  return qword_1EA3D8878;
}

uint64_t SnippetUI::Control_Slider::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void SnippetUI::Control_Slider::MergeFrom(SnippetUI::Control_Slider *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 907);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Control_Slider::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DF4FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_Slider::MergeFrom(SnippetUI::Control_Slider *this, const SnippetUI::Control_Slider *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 922);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Control_Slider *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  uint64_t v6 = *((void *)a2 + 2);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 2);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v6);
    }
    std::string::operator=(*((std::string **)this + 2), (const std::string *)v6);
  }
LABEL_13:
  if (a2 != (const SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_)
  {
    unsigned int v8 = (const SnippetUI::Slider *)*((void *)a2 + 3);
    if (v8)
    {
      uint64_t v9 = (SnippetUI::Slider *)*((void *)this + 3);
      if (!v9)
      {
        uint64_t v9 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Slider>(0);
        *((void *)this + 3) = v9;
        unsigned int v8 = (const SnippetUI::Slider *)*((void *)a2 + 3);
      }
      if (v8) {
        unsigned int v10 = v8;
      }
      else {
        unsigned int v10 = (const SnippetUI::Slider *)&SnippetUI::_Slider_default_instance_;
      }
      SnippetUI::Slider::MergeFrom(v9, v10);
    }
    std::string::size_type v11 = (int **)*((void *)a2 + 4);
    if (v11)
    {
      char v12 = (int **)*((void *)this + 4);
      if (!v12)
      {
        char v12 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 4) = v12;
        std::string::size_type v11 = (int **)*((void *)a2 + 4);
      }
      if (v11) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v12, v13);
    }
    unsigned int v14 = (int **)*((void *)a2 + 5);
    if (v14)
    {
      BOOL v15 = (int **)*((void *)this + 5);
      if (!v15)
      {
        BOOL v15 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
        *((void *)this + 5) = v15;
        unsigned int v14 = (int **)*((void *)a2 + 5);
      }
      if (v14) {
        char v16 = v14;
      }
      else {
        char v16 = (int **)&SnippetUI::_ActionProperty_default_instance_;
      }
      SnippetUI::ActionProperty::MergeFrom(v15, v16);
    }
  }
}

void sub_1C5DF516C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_Slider::CopyFrom(SnippetUI::Control_Slider *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_Slider::Clear(this);
    SnippetUI::Control_Slider::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_Slider::Clear(SnippetUI::Control_Slider *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 3);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *((void *)this + 3) = 0;
  uint64_t v4 = *((void *)this + 4);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 4) = 0;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (SnippetUI::Control_Slider *)((char *)this + 8);
  *((void *)v6 + 4) = 0;
  if (v7)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v6);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Control_Slider::InternalSerializeWithCachedSizesToArray(SnippetUI::Control_Slider *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_) {
    goto LABEL_37;
  }
  char v7 = (SnippetUI::Slider *)*((void *)this + 3);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v7 = (SnippetUI::Slider *)*((void *)this + 3);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 20);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          unint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        std::string::size_type v11 = v13 + 2;
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    std::string::size_type v11 = (unsigned __int8 *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::Slider::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  char v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  if (!v16) {
    goto LABEL_26;
  }
  if ((unint64_t)v5 >= *(void *)a3)
  {
    uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
    char v16 = (SnippetUI::TextProperty *)*((void *)this + 4);
  }
  *uint64_t v5 = 18;
  unsigned int v17 = *((_DWORD *)v16 + 15);
  if (v17 > 0x7F)
  {
    v5[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      int v21 = v5 + 2;
      do
      {
        long long v22 = v21;
        *v21++ = v19 | 0x80;
        unsigned int v23 = v19 >> 7;
        unsigned int v24 = v19 >> 14;
        v19 >>= 7;
      }
      while (v24);
      int v20 = (google::protobuf::UnknownFieldSet *)(v22 + 2);
      unsigned char *v21 = v23;
      goto LABEL_25;
    }
    v5[2] = v19;
    uint64_t v18 = 3;
  }
  else
  {
    v5[1] = v17;
    uint64_t v18 = 2;
  }
  int v20 = (google::protobuf::UnknownFieldSet *)&v5[v18];
LABEL_25:
  uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v20, a3, a4);
LABEL_26:
  unint64_t v25 = (SnippetUI::ActionProperty *)*((void *)this + 5);
  if (v25)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unint64_t v25 = (SnippetUI::ActionProperty *)*((void *)this + 5);
    }
    *uint64_t v5 = 26;
    unsigned int v26 = *((_DWORD *)v25 + 12);
    if (v26 > 0x7F)
    {
      v5[1] = v26 | 0x80;
      unsigned int v28 = v26 >> 7;
      if (v26 >> 14)
      {
        size_t v29 = v5 + 2;
        do
        {
          uint64_t v30 = v29;
          *v29++ = v28 | 0x80;
          unsigned int v31 = v28 >> 7;
          unsigned int v32 = v28 >> 14;
          v28 >>= 7;
        }
        while (v32);
        uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v30 + 2);
        *size_t v29 = v31;
      }
      else
      {
        v5[2] = v28;
        uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v26;
      uint64_t v27 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::ActionProperty::InternalSerializeWithCachedSizesToArray(v25, v27, a3, a4);
  }
LABEL_37:
  unsigned int v33 = (google::protobuf::internal *)*((void *)this + 2);
  if (*((char *)v33 + 23) < 0)
  {
    unint64_t v34 = (const char *)*((void *)v33 + 1);
    if (!v34) {
      goto LABEL_43;
    }
    unsigned int v33 = *(google::protobuf::internal **)v33;
    goto LABEL_42;
  }
  unint64_t v34 = (const char *)*((unsigned __int8 *)v33 + 23);
  if (*((unsigned char *)v33 + 23))
  {
LABEL_42:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v33, v34, 1, (google::protobuf::internal *)"SnippetUI.Control_Slider.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 2), v5);
  }
LABEL_43:
  uint64_t v35 = *((void *)this + 1);
  if ((v35 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v35 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Control_Slider::_InternalParse(SnippetUI::Control_Slider *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v26 = a2;
  uint64_t v5 = (std::string **)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v26, *((_DWORD *)a3 + 23))) {
      return v26;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v26 + 1);
    uint64_t v9 = (char *)*(unsigned __int8 *)v26;
    if ((*(char *)v26 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v9 = (char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_6:
      unsigned int v26 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, v9);
    unsigned int v26 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_25;
        }
        unsigned int v10 = (SnippetUI::Slider *)*((void *)this + 3);
        if (!v10)
        {
          unsigned int v10 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Slider>(0);
          *((void *)this + 3) = v10;
          TagFallbacuint64_t k = v26;
        }
        unsigned int v11 = *(unsigned __int8 *)TagFallback;
        if (*(char *)TagFallback < 0)
        {
          SizeFallbacuint64_t k = google::protobuf::internal::ReadSizeFallback(TagFallback, (const char *)*(unsigned __int8 *)TagFallback);
          if (!SizeFallback) {
            goto LABEL_41;
          }
          char v12 = SizeFallback;
          unsigned int v11 = v18;
        }
        else
        {
          char v12 = (char *)TagFallback + 1;
        }
        int v19 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v12, v11);
        int v20 = *((_DWORD *)a3 + 22);
        BOOL v21 = __OFSUB__(v20--, 1);
        *((_DWORD *)a3 + 22) = v20;
        if (v20 < 0 != v21) {
          goto LABEL_41;
        }
        int v22 = v19;
        unsigned int v23 = SnippetUI::Slider::_InternalParse(v10, (google::protobuf::internal *)v12, a3);
        if (!v23) {
          goto LABEL_41;
        }
        ++*((_DWORD *)a3 + 22);
        if (*((_DWORD *)a3 + 20)) {
          goto LABEL_41;
        }
        int v24 = *((_DWORD *)a3 + 7) + v22;
        *((_DWORD *)a3 + 7) = v24;
        *(void *)a3 = *((void *)a3 + 1) + (v24 & (v24 >> 31));
        unsigned int v26 = v23;
        continue;
      case 2u:
        if (v9 != 18) {
          goto LABEL_25;
        }
        unint64_t v13 = (SnippetUI::TextProperty *)*((void *)this + 4);
        if (!v13)
        {
          unint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
          *((void *)this + 4) = v13;
          TagFallbacuint64_t k = v26;
        }
        unsigned int v14 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v13, TagFallback);
        goto LABEL_30;
      case 3u:
        if (v9 != 26) {
          goto LABEL_25;
        }
        unsigned int v15 = (SnippetUI::ActionProperty *)*((void *)this + 5);
        if (!v15)
        {
          unsigned int v15 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::ActionProperty>(0);
          *((void *)this + 5) = v15;
          TagFallbacuint64_t k = v26;
        }
        unsigned int v14 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::ActionProperty>(a3, v15, TagFallback);
        goto LABEL_30;
      case 4u:
        if (v9 != 34) {
          goto LABEL_25;
        }
        if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        unsigned int v14 = google::protobuf::internal::InlineGreedyStringParserUTF8(*v5, (std::string::value_type *)TagFallback, (uint64_t)a3, (google::protobuf::internal *)"SnippetUI.Control_Slider.component_name");
        goto LABEL_30;
      default:
LABEL_25:
        if (v9) {
          BOOL v16 = (v9 & 7) == 4;
        }
        else {
          BOOL v16 = 1;
        }
        if (v16)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v9 - 1;
          return TagFallback;
        }
        unsigned int v14 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v9, v6, TagFallback, a3, v7);
LABEL_30:
        unsigned int v26 = (google::protobuf::internal *)v14;
        if (v14) {
          continue;
        }
LABEL_41:
        TagFallbacuint64_t k = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t SnippetUI::Control_Slider::GetCachedSize(SnippetUI::Control_Slider *this)
{
  return *((unsigned int *)this + 12);
}

char *SnippetUI::Control_Slider::ByteSizeLong(SnippetUI::Control_Slider *this)
{
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_)
  {
    uint64_t v6 = (SnippetUI::Slider *)*((void *)this + 3);
    if (v6)
    {
      char v7 = SnippetUI::Slider::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v8 = (SnippetUI::TextProperty *)*((void *)this + 4);
    if (v8)
    {
      uint64_t v9 = SnippetUI::TextProperty::ByteSizeLong(v8);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v9[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)];
    }
    unsigned int v10 = (SnippetUI::ActionProperty *)*((void *)this + 5);
    if (v10)
    {
      unsigned int v11 = SnippetUI::ActionProperty::ByteSizeLong(v10);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v5
                                                         + 1
                                                         + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Control_Slider *)((char *)this + 8), v5, (_DWORD *)this + 12);
  }
  else
  {
    *((_DWORD *)this + 12) = v5;
    return (char *)v5;
  }
}

uint64_t SnippetUI::Control_Slider::IsInitialized(SnippetUI::Control_Slider *this)
{
  return 1;
}

SnippetUI::Control_Slider *SnippetUI::Control_Slider::New(SnippetUI::Control_Slider *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Slider>(a2);
}

SnippetUI::Control_Slider *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Slider>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Control_Slider *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Control_Slider>);
  }
  SnippetUI::Control_Slider::Control_Slider(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DF5A38(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40668C0A6DLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Control_Slider>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Control_Slider *SnippetUI::Control_Slider::New(SnippetUI::Control_Slider *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_Slider>(0);
}

void SnippetUI::Control_Slider::~Control_Slider(SnippetUI::Control_Slider *this)
{
  SnippetUI::Control_Slider::~Control_Slider(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(void *)this = &unk_1F211D340;
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_)
  {
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t SnippetUI::Control_PlayerButton::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

void SnippetUI::Control_PlayerButton::MergeFrom(SnippetUI::Control_PlayerButton *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 1272);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::Control_PlayerButton::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5DF5CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_PlayerButton::MergeFrom(SnippetUI::Control_PlayerButton *this, const SnippetUI::Control_PlayerButton *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/Control.pb.cc", 1287);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Control_PlayerButton *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((int **)this + 2, (uint64_t)a2 + 16);
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_13;
  }
  char v7 = (uint64_t *)*((void *)this + 5);
  if (v7 != (uint64_t *)v6)
  {
    if (v7 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v6);
    }
    std::string::operator=(*((std::string **)this + 5), (const std::string *)v6);
  }
LABEL_13:
  uint64_t v8 = *((void *)a2 + 6);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_21;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_21;
  }
  uint64_t v9 = (uint64_t *)*((void *)this + 6);
  if (v9 != (uint64_t *)v8)
  {
    if (v9 == &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, v8);
    }
    std::string::operator=(*((std::string **)this + 6), (const std::string *)v8);
  }
LABEL_21:
  if (a2 != (const SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_)
  {
    unsigned int v10 = (int **)*((void *)a2 + 7);
    if (v10)
    {
      unsigned int v11 = (int **)*((void *)this + 7);
      if (!v11)
      {
        unsigned int v11 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 7) = v11;
        unsigned int v10 = (int **)*((void *)a2 + 7);
      }
      if (v10) {
        char v12 = v10;
      }
      else {
        char v12 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v11, v12);
    }
    unint64_t v13 = (int **)*((void *)a2 + 8);
    if (v13)
    {
      unsigned int v14 = (int **)*((void *)this + 8);
      if (!v14)
      {
        unsigned int v14 = (int **)google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
        *((void *)this + 8) = v14;
        unint64_t v13 = (int **)*((void *)a2 + 8);
      }
      if (v13) {
        unsigned int v15 = v13;
      }
      else {
        unsigned int v15 = (int **)&SnippetUI::_TextProperty_default_instance_;
      }
      SnippetUI::TextProperty::MergeFrom(v14, v15);
    }
  }
}

void sub_1C5DF5E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::Control_PlayerButton::CopyFrom(SnippetUI::Control_PlayerButton *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_PlayerButton::Clear(this);
    SnippetUI::Control_PlayerButton::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_PlayerButton::Clear(SnippetUI::Control_PlayerButton *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16);
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  uint64_t v3 = *((void *)this + 6);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  uint64_t v4 = *((void *)this + 7);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  *((void *)this + 7) = 0;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (SnippetUI::Control_PlayerButton *)((char *)this + 8);
  *((void *)v6 + 7) = 0;
  if (v7)
  {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v6);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::Control_PlayerButton::InternalSerializeWithCachedSizesToArray(SnippetUI::Control_PlayerButton *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (char *)a2;
  if (this == (SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_) {
    goto LABEL_25;
  }
  char v7 = (SnippetUI::TextProperty *)*((void *)this + 7);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (char *)a2);
      char v7 = (SnippetUI::TextProperty *)*((void *)this + 7);
    }
    *uint64_t v5 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 15);
    if (v8 > 0x7F)
    {
      v5[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        char v12 = v5 + 2;
        do
        {
          unint64_t v13 = v12;
          *v12++ = v10 | 0x80;
          unsigned int v14 = v10 >> 7;
          unsigned int v15 = v10 >> 14;
          v10 >>= 7;
        }
        while (v15);
        unsigned int v11 = (google::protobuf::UnknownFieldSet *)(v13 + 2);
        *char v12 = v14;
        goto LABEL_13;
      }
      v5[2] = v10;
      uint64_t v9 = 3;
    }
    else
    {
      v5[1] = v8;
      uint64_t v9 = 2;
    }
    unsigned int v11 = (google::protobuf::UnknownFieldSet *)&v5[v9];
LABEL_13:
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v7, v11, a3, a4);
  }
  char v16 = (SnippetUI::TextProperty *)*((void *)this + 8);
  if (v16)
  {
    if ((unint64_t)v5 >= *(void *)a3)
    {
      uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      char v16 = (SnippetUI::TextProperty *)*((void *)this + 8);
    }
    *uint64_t v5 = 18;
    unsigned int v17 = *((_DWORD *)v16 + 15);
    if (v17 > 0x7F)
    {
      v5[1] = v17 | 0x80;
      unsigned int v19 = v17 >> 7;
      if (v17 >> 14)
      {
        int v20 = v5 + 2;
        do
        {
          BOOL v21 = v20;
          *v20++ = v19 | 0x80;
          unsigned int v22 = v19 >> 7;
          unsigned int v23 = v19 >> 14;
          v19 >>= 7;
        }
        while (v23);
        unsigned int v18 = (google::protobuf::UnknownFieldSet *)(v21 + 2);
        unsigned char *v20 = v22;
      }
      else
      {
        v5[2] = v19;
        unsigned int v18 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
      }
    }
    else
    {
      v5[1] = v17;
      unsigned int v18 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
    }
    uint64_t v5 = (char *)SnippetUI::TextProperty::InternalSerializeWithCachedSizesToArray(v16, v18, a3, a4);
  }
LABEL_25:
  int v24 = *((_DWORD *)this + 6);
  if (v24)
  {
    for (int i = 0; i != v24; ++i)
    {
      if ((unint64_t)v5 >= *(void *)a3) {
        uint64_t v5 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      }
      unsigned int v26 = (SnippetUI::Player *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16, i);
      *uint64_t v5 = 26;
      unsigned int v28 = *((_DWORD *)v26 + 14);
      if (v28 > 0x7F)
      {
        v5[1] = v28 | 0x80;
        unsigned int v30 = v28 >> 7;
        if (v28 >> 14)
        {
          unsigned int v31 = v5 + 2;
          do
          {
            unsigned int v32 = v31;
            *v31++ = v30 | 0x80;
            unsigned int v33 = v30 >> 7;
            unsigned int v34 = v30 >> 14;
            v30 >>= 7;
          }
          while (v34);
          size_t v29 = (google::protobuf::UnknownFieldSet *)(v32 + 2);
          *unsigned int v31 = v33;
        }
        else
        {
          v5[2] = v30;
          size_t v29 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v28;
        size_t v29 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (char *)SnippetUI::Player::InternalSerializeWithCachedSizesToArray(v26, v29, a3, v27);
    }
  }
  uint64_t v35 = (google::protobuf::internal *)*((void *)this + 5);
  if (*((char *)v35 + 23) < 0)
  {
    uint64_t v36 = (const char *)*((void *)v35 + 1);
    if (!v36) {
      goto LABEL_43;
    }
    uint64_t v35 = *(google::protobuf::internal **)v35;
    goto LABEL_42;
  }
  uint64_t v36 = (const char *)*((unsigned __int8 *)v35 + 23);
  if (*((unsigned char *)v35 + 23))
  {
LABEL_42:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v35, v36, 1, (google::protobuf::internal *)"SnippetUI.Control_PlayerButton.component_name");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 5), v5);
  }
LABEL_43:
  unsigned int v37 = (google::protobuf::internal *)*((void *)this + 6);
  if (*((char *)v37 + 23) < 0)
  {
    uint64_t v38 = (const char *)*((void *)v37 + 1);
    if (!v38) {
      goto LABEL_49;
    }
    unsigned int v37 = *(google::protobuf::internal **)v37;
    goto LABEL_48;
  }
  uint64_t v38 = (const char *)*((unsigned __int8 *)v37 + 23);
  if (*((unsigned char *)v37 + 23))
  {
LABEL_48:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v37, v38, 1, (google::protobuf::internal *)"SnippetUI.Control_PlayerButton.link_identifier");
    uint64_t v5 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 6), v5);
  }
LABEL_49:
  uint64_t v39 = *((void *)this + 1);
  if ((v39 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v39 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

google::protobuf::internal *SnippetUI::Control_PlayerButton::_InternalParse(SnippetUI::Control_PlayerButton *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unsigned int v28 = a2;
  uint64_t v5 = (std::string **)((char *)this + 48);
  uint64_t v6 = (std::string **)((char *)this + 40);
  char v7 = (unsigned int *)((char *)this + 16);
  unsigned int v8 = (unint64_t *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v28, *((_DWORD *)a3 + 23)) & 1) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v28 + 1);
      unsigned int v11 = (char *)*(unsigned __int8 *)v28;
      if (*(char *)v28 < 0)
      {
        unsigned int v11 = (char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v28, v11);
          unsigned int v28 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_38;
              }
              char v12 = (SnippetUI::TextProperty *)*((void *)this + 7);
              if (v12) {
                goto LABEL_15;
              }
              char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
              *((void *)this + 7) = v12;
              goto LABEL_14;
            case 2u:
              if (v11 != 18) {
                goto LABEL_38;
              }
              char v12 = (SnippetUI::TextProperty *)*((void *)this + 8);
              if (!v12)
              {
                char v12 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::TextProperty>(0);
                *((void *)this + 8) = v12;
LABEL_14:
                TagFallbacuint64_t k = v28;
              }
LABEL_15:
              unint64_t v13 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::TextProperty>(a3, v12, TagFallback);
              goto LABEL_43;
            case 3u:
              if (v11 != 26) {
                goto LABEL_38;
              }
              unsigned int v14 = (char *)TagFallback - 1;
              break;
            case 4u:
              if (v11 != 34) {
                goto LABEL_38;
              }
              unsigned int v22 = *v6;
              if (*v6 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              unsigned int v23 = (std::string::value_type *)TagFallback;
              int v24 = a3;
              unint64_t v25 = "SnippetUI.Control_PlayerButton.component_name";
              goto LABEL_37;
            case 5u:
              if (v11 != 42) {
                goto LABEL_38;
              }
              unsigned int v22 = *v5;
              if (*v5 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              unsigned int v23 = (std::string::value_type *)TagFallback;
              int v24 = a3;
              unint64_t v25 = "SnippetUI.Control_PlayerButton.link_identifier";
LABEL_37:
              unint64_t v13 = google::protobuf::internal::InlineGreedyStringParserUTF8(v22, v23, (uint64_t)v24, (google::protobuf::internal *)v25);
              goto LABEL_43;
            default:
LABEL_38:
              if (v11) {
                BOOL v26 = (v11 & 7) == 4;
              }
              else {
                BOOL v26 = 1;
              }
              if (v26)
              {
                *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11 - 1;
                return TagFallback;
              }
              unint64_t v13 = google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v11, v8, TagFallback, a3, v9);
LABEL_43:
              unsigned int v28 = (google::protobuf::internal *)v13;
              if (!v13) {
                return 0;
              }
              continue;
          }
          while (1)
          {
            unsigned int v15 = (google::protobuf::internal *)(v14 + 1);
            unsigned int v28 = (google::protobuf::internal *)(v14 + 1);
            char v16 = (int *)*((void *)this + 4);
            if (!v16) {
              break;
            }
            uint64_t v17 = *((int *)this + 6);
            int v18 = *v16;
            if ((int)v17 >= *v16)
            {
              if (v18 == *((_DWORD *)this + 7))
              {
LABEL_23:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v18 + 1);
                char v16 = (int *)*((void *)this + 4);
                int v18 = *v16;
              }
              *char v16 = v18 + 1;
              unsigned int v19 = google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Player>(*((google::protobuf::internal::ArenaImpl **)this
                                                                                   + 2));
              uint64_t v20 = *((void *)this + 4);
              uint64_t v21 = *((int *)this + 6);
              *((_DWORD *)this + 6) = v21 + 1;
              *(void *)(v20 + 8 * v21 + 8) = v19;
              unsigned int v15 = v28;
              goto LABEL_25;
            }
            *((_DWORD *)this + 6) = v17 + 1;
            unsigned int v19 = *(SnippetUI::Player **)&v16[2 * v17 + 2];
LABEL_25:
            unsigned int v14 = google::protobuf::internal::ParseContext::ParseMessage<SnippetUI::Player>(a3, v19, v15);
            unsigned int v28 = (google::protobuf::internal *)v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 26) {
              goto LABEL_2;
            }
          }
          int v18 = *((_DWORD *)this + 7);
          goto LABEL_23;
        }
        TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v28 + 2);
      }
      unsigned int v28 = TagFallback;
      goto LABEL_7;
    }
    return v28;
  }
}

uint64_t SnippetUI::Control_PlayerButton::GetCachedSize(SnippetUI::Control_PlayerButton *this)
{
  return *((unsigned int *)this + 18);
}

char *SnippetUI::Control_PlayerButton::ByteSizeLong(SnippetUI::Control_PlayerButton *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (SnippetUI::Player **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      uint64_t v6 = *v4++;
      char v7 = SnippetUI::Player::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((void *)this + 5);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_14:
  uint64_t v11 = *((void *)this + 6);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_19:
  if (this != (SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_)
  {
    unsigned int v14 = (SnippetUI::TextProperty *)*((void *)this + 7);
    if (v14)
    {
      unsigned int v15 = SnippetUI::TextProperty::ByteSizeLong(v14);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v15[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6)];
    }
    char v16 = (SnippetUI::TextProperty *)*((void *)this + 8);
    if (v16)
    {
      uint64_t v17 = SnippetUI::TextProperty::ByteSizeLong(v16);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v17[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::Control_PlayerButton *)((char *)this + 8), v2, (_DWORD *)this + 18);
  }
  else
  {
    *((_DWORD *)this + 18) = v2;
    return (char *)v2;
  }
}

uint64_t SnippetUI::Control_PlayerButton::IsInitialized(SnippetUI::Control_PlayerButton *this)
{
  return 1;
}

SnippetUI::Control_PlayerButton *SnippetUI::Control_PlayerButton::New(SnippetUI::Control_PlayerButton *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_PlayerButton>(a2);
}

SnippetUI::Control_PlayerButton *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_PlayerButton>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (SnippetUI::Control_PlayerButton *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x50uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::Control_PlayerButton>);
  }
  SnippetUI::Control_PlayerButton::Control_PlayerButton(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DF6894(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40A49539A5);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::Control_PlayerButton>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

SnippetUI::Control_PlayerButton *SnippetUI::Control_PlayerButton::New(SnippetUI::Control_PlayerButton *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::Control_PlayerButton>(0);
}

void SnippetUI::Control_PlayerButton::~Control_PlayerButton(SnippetUI::Control_PlayerButton *this)
{
  SnippetUI::Control_PlayerButton::~Control_PlayerButton(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(void *)this = &unk_1F211D400;
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (this != (SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_)
  {
    uint64_t v6 = *((void *)this + 7);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    char v7 = *((void *)this + 8);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((SnippetUI::Control_PlayerButton *)((char *)this + 16));
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void SnippetUI::Control_Switch::InitAsDefaultInstance(SnippetUI::Control_Switch *this)
{
  qword_1EB68F6E0 = (uint64_t)&SnippetUI::_Switch_default_instance_;
  unk_1EB68F6E8 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F6F0 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EB68F6F8 = &SnippetUI::_VisualProperty_default_instance_;
  qword_1EB68F700 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::Control_Switch::_Internal::switch_(SnippetUI::Control_Switch::_Internal *this, const SnippetUI::Control_Switch *a2)
{
  return *((void *)this + 3);
}

uint64_t SnippetUI::Control_Switch::_Internal::text_1(SnippetUI::Control_Switch::_Internal *this, const SnippetUI::Control_Switch *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::Control_Switch::_Internal::text_2(SnippetUI::Control_Switch::_Internal *this, const SnippetUI::Control_Switch *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::Control_Switch::_Internal::thumbnail(SnippetUI::Control_Switch::_Internal *this, const SnippetUI::Control_Switch *a2)
{
  return *((void *)this + 6);
}

uint64_t SnippetUI::Control_Switch::_Internal::action(SnippetUI::Control_Switch::_Internal *this, const SnippetUI::Control_Switch *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::Control_Switch::clear_switch_(SnippetUI::Control_Switch *this)
{
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t SnippetUI::Control_Switch::clear_text_1(SnippetUI::Control_Switch *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::Control_Switch::clear_text_2(SnippetUI::Control_Switch *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

uint64_t SnippetUI::Control_Switch::clear_thumbnail(SnippetUI::Control_Switch *this)
{
  uint64_t result = *((void *)this + 6);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 6) = 0;
  return result;
}

uint64_t SnippetUI::Control_Switch::clear_action(SnippetUI::Control_Switch *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

SnippetUI::Control_Switch *SnippetUI::Control_Switch::Control_Switch(SnippetUI::Control_Switch *this, const SnippetUI::Control_Switch *a2)
{
  *(void *)this = &unk_1F211D280;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Control_Switch *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  if (a2 == (const SnippetUI::Control_Switch *)&SnippetUI::_Control_Switch_default_instance_)
  {
    *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
  }
  else
  {
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
    *((void *)this + 5) = 0;
    if (*((void *)a2 + 6)) {
      operator new();
    }
    *((void *)this + 6) = 0;
    if (*((void *)a2 + 7)) {
      operator new();
    }
  }
  *((void *)this + 7) = 0;
  return this;
}

void sub_1C5DF6E2C(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Control_Switch::default_instance(SnippetUI::Control_Switch *this)
{
  if (atomic_load_explicit(scc_info_Control_Switch_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_Switch_Control_2eproto);
  }
  return &SnippetUI::_Control_Switch_default_instance_;
}

void SnippetUI::Control_Switch::CopyFrom(SnippetUI::Control_Switch *this, const SnippetUI::Control_Switch *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_Switch::Clear(this);
    SnippetUI::Control_Switch::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_Switch::InternalSwap(SnippetUI::Control_Switch *this, SnippetUI::Control_Switch *a2)
{
  uint64_t v4 = (SnippetUI::Control_Switch *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v18;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  char v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)char v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v13;
  uint64_t v14 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v14;
  uint64_t v15 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v15;
  uint64_t v16 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v16;
  uint64_t v17 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v17;
}

void SnippetUI::Control_Slider::InitAsDefaultInstance(SnippetUI::Control_Slider *this)
{
  qword_1EB68F6A8 = (uint64_t)&SnippetUI::_Slider_default_instance_;
  unk_1EB68F6B0 = &SnippetUI::_TextProperty_default_instance_;
  qword_1EB68F6B8 = (uint64_t)&SnippetUI::_ActionProperty_default_instance_;
}

uint64_t SnippetUI::Control_Slider::_Internal::slider(SnippetUI::Control_Slider::_Internal *this, const SnippetUI::Control_Slider *a2)
{
  return *((void *)this + 3);
}

uint64_t SnippetUI::Control_Slider::_Internal::text_1(SnippetUI::Control_Slider::_Internal *this, const SnippetUI::Control_Slider *a2)
{
  return *((void *)this + 4);
}

uint64_t SnippetUI::Control_Slider::_Internal::action(SnippetUI::Control_Slider::_Internal *this, const SnippetUI::Control_Slider *a2)
{
  return *((void *)this + 5);
}

uint64_t SnippetUI::Control_Slider::clear_slider(SnippetUI::Control_Slider *this)
{
  uint64_t result = *((void *)this + 3);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 3) = 0;
  return result;
}

uint64_t SnippetUI::Control_Slider::clear_text_1(SnippetUI::Control_Slider *this)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 4) = 0;
  return result;
}

uint64_t SnippetUI::Control_Slider::clear_action(SnippetUI::Control_Slider *this)
{
  uint64_t result = *((void *)this + 5);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 5) = 0;
  return result;
}

SnippetUI::Control_Slider *SnippetUI::Control_Slider::Control_Slider(SnippetUI::Control_Slider *this, const SnippetUI::Control_Slider *a2)
{
  *(void *)this = &unk_1F211D340;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 12) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::Control_Slider *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v5 = *((void *)a2 + 2);
  if (*(char *)(v5 + 23) < 0) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  }
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 16, v5);
  }
  if (a2 == (const SnippetUI::Control_Slider *)&SnippetUI::_Control_Slider_default_instance_)
  {
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
  }
  else
  {
    if (*((void *)a2 + 3)) {
      operator new();
    }
    *((void *)this + 3) = 0;
    if (*((void *)a2 + 4)) {
      operator new();
    }
    *((void *)this + 4) = 0;
    if (*((void *)a2 + 5)) {
      operator new();
    }
  }
  *((void *)this + 5) = 0;
  return this;
}

void sub_1C5DF7304(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v2, 0x10A1C40B18DE219);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Control_Slider::default_instance(SnippetUI::Control_Slider *this)
{
  if (atomic_load_explicit(scc_info_Control_Slider_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_Slider_Control_2eproto);
  }
  return &SnippetUI::_Control_Slider_default_instance_;
}

void SnippetUI::Control_Slider::CopyFrom(SnippetUI::Control_Slider *this, const SnippetUI::Control_Slider *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_Slider::Clear(this);
    SnippetUI::Control_Slider::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_Slider::InternalSwap(SnippetUI::Control_Slider *this, SnippetUI::Control_Slider *a2)
{
  uint64_t v4 = (SnippetUI::Control_Slider *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v16;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  char v7 = (uint64_t *)*((void *)this + 2);
  uint64_t v8 = (uint64_t **)((char *)a2 + 16);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v7 = (uint64_t *)*((void *)this + 2);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 2, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)char v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v13;
  uint64_t v14 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v14;
  uint64_t v15 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v15;
}

void SnippetUI::Control_PlayerButton::InitAsDefaultInstance(SnippetUI::Control_PlayerButton *this)
{
  qword_1EA3DB0B8 = (uint64_t)&SnippetUI::_TextProperty_default_instance_;
  unk_1EA3DB0C0 = &SnippetUI::_TextProperty_default_instance_;
}

uint64_t SnippetUI::Control_PlayerButton::_Internal::label_1(SnippetUI::Control_PlayerButton::_Internal *this, const SnippetUI::Control_PlayerButton *a2)
{
  return *((void *)this + 7);
}

uint64_t SnippetUI::Control_PlayerButton::_Internal::label_2(SnippetUI::Control_PlayerButton::_Internal *this, const SnippetUI::Control_PlayerButton *a2)
{
  return *((void *)this + 8);
}

uint64_t SnippetUI::Control_PlayerButton::clear_label_1(SnippetUI::Control_PlayerButton *this)
{
  uint64_t result = *((void *)this + 7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 7) = 0;
  return result;
}

uint64_t SnippetUI::Control_PlayerButton::clear_label_2(SnippetUI::Control_PlayerButton *this)
{
  uint64_t result = *((void *)this + 8);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  *((void *)this + 8) = 0;
  return result;
}

void SnippetUI::Control_PlayerButton::clear_player(SnippetUI::Control_PlayerButton *this)
{
}

SnippetUI::Control_PlayerButton *SnippetUI::Control_PlayerButton::Control_PlayerButton(SnippetUI::Control_PlayerButton *this, const SnippetUI::Control_PlayerButton *a2)
{
  *(void *)this = &unk_1F211D400;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (SnippetUI::Control_PlayerButton *)((char *)this + 8);
  *(_OWORD *)((char *)this + 24) = 0u;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((int **)this + 2, (uint64_t)a2 + 16);
  *((_DWORD *)this + 18) = 0;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom(v4, (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v6 = *((void *)a2 + 5);
  if (*(char *)(v6 + 23) < 0) {
    uint64_t v7 = *(void *)(v6 + 8);
  }
  else {
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
  }
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v7 != 0) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v6);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  uint64_t v9 = *((void *)a2 + 6);
  if (*(char *)(v9 + 23) < 0) {
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else {
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  }
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string && v10) {
    google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, v9);
  }
  if (a2 == (const SnippetUI::Control_PlayerButton *)&SnippetUI::_Control_PlayerButton_default_instance_)
  {
    *((void *)this + 7) = 0;
  }
  else
  {
    if (*((void *)a2 + 7)) {
      operator new();
    }
    *((void *)this + 7) = 0;
    if (*((void *)a2 + 8)) {
      operator new();
    }
  }
  *((void *)this + 8) = 0;
  return this;
}

void sub_1C5DF7768(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v3, 0x10A1C40BEC01B52);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

void *SnippetUI::Control_PlayerButton::default_instance(SnippetUI::Control_PlayerButton *this)
{
  if (atomic_load_explicit(scc_info_Control_PlayerButton_Control_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Control_PlayerButton_Control_2eproto);
  }
  return &SnippetUI::_Control_PlayerButton_default_instance_;
}

void SnippetUI::Control_PlayerButton::CopyFrom(SnippetUI::Control_PlayerButton *this, const SnippetUI::Control_PlayerButton *a2)
{
  if (a2 != this)
  {
    SnippetUI::Control_PlayerButton::Clear(this);
    SnippetUI::Control_PlayerButton::MergeFrom(this, a2);
  }
}

void SnippetUI::Control_PlayerButton::InternalSwap(SnippetUI::Control_PlayerButton *this, SnippetUI::Control_PlayerButton *a2)
{
  uint64_t v4 = (SnippetUI::Control_PlayerButton *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      uint64_t v6 = v21;
      goto LABEL_6;
    }
LABEL_5:
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
    google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
    goto LABEL_7;
  }
  if (v5) {
    goto LABEL_5;
  }
LABEL_7:
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((SnippetUI::Control_PlayerButton *)((char *)this + 16), (SnippetUI::Control_PlayerButton *)((char *)a2 + 16));
  uint64_t v7 = (uint64_t *)*((void *)this + 5);
  uint64_t v8 = (uint64_t **)((char *)a2 + 40);
  if (v7 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v8 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_13;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v7 = (uint64_t *)*((void *)this + 5);
  }
  uint64_t v9 = *v8;
  if (*v8 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v9 = *v8;
  }
  uint64_t v10 = v7[2];
  long long v11 = *(_OWORD *)v7;
  uint64_t v12 = v9[2];
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v9;
  void v7[2] = v12;
  *(_OWORD *)uint64_t v9 = v11;
  v9[2] = v10;
LABEL_13:
  uint64_t v13 = (uint64_t *)*((void *)this + 6);
  uint64_t v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_19;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  void v15[2] = v16;
LABEL_19:
  uint64_t v19 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v19;
  uint64_t v20 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v20;
}

void *siri::dialogengine::PatternSchemaAliasGroup::GetReplacementName@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *((void *)this + 4);
  if (v2) {
    return (void *)(*(uint64_t (**)(void))(*(void *)v2 + 104))();
  }
  else {
    return std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
}

void *siri::dialogengine::PatternSchemaAliasGroup::GetDeprecated@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *((void *)this + 4);
  if (v2) {
    return (void *)(*(uint64_t (**)(void))(*(void *)v2 + 96))();
  }
  else {
    return std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
}

char *siri::dialogengine::PatternSchemaAliasGroup::GetVisualComponentsCombination@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, char **a2@<X8>)
{
  uint64_t v3 = *((void *)this + 4);
  if (v3)
  {
    uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 88);
    return (char *)v4();
  }
  else
  {
    uint64_t v6 = (char *)operator new(0x38uLL);
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = 0;
    *(void *)uint64_t v6 = &unk_1F211F670;
    *(_OWORD *)(v6 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
    a2[1] = v6;
    *(_OWORD *)(v6 + 24) = 0u;
    uint64_t result = v6 + 24;
    *a2 = result;
  }
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetVisualComponent@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 80))();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetVisualComponents@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 72))();
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetDialogComponent@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 64))();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetDialogComponents@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 56))();
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetNestedPatterns@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 48))();
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::GetUsage@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t result = *((void *)this + 4);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

void *siri::dialogengine::PatternSchemaAliasGroup::GetDescription@<X0>(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *((void *)this + 4);
  if (v2) {
    return (void *)(*(uint64_t (**)(void))(*(void *)v2 + 32))();
  }
  else {
    return std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
}

void siri::dialogengine::PatternSchemaAliasGroup::AliasOf(siri::dialogengine::PatternSchemaAliasGroup *this@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = *((void *)this + 4);
  if (v2)
  {
    if (*(char *)(v2 + 31) < 0)
    {
      std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)(v2 + 8), *(void *)(v2 + 16));
    }
    else
    {
      long long v3 = *(_OWORD *)(v2 + 8);
      a2->__r_.__value_.__r.__words[2] = *(void *)(v2 + 24);
      *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v3;
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
}

uint64_t siri::dialogengine::PatternSchemaAliasGroup::IsAlias(siri::dialogengine::PatternSchemaAliasGroup *this)
{
  return 1;
}

void siri::dialogengine::PatternSchemaAliasGroup::~PatternSchemaAliasGroup(siri::dialogengine::PatternSchemaAliasGroup *this)
{
  *(void *)this = &unk_1F211D508;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  *(void *)this = &unk_1F211D5B0;
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
  JUMPOUT(0x1C8796D70);
}

{
  std::__shared_weak_count *v2;

  *(void *)this = &unk_1F211D508;
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 5);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  *(void *)this = &unk_1F211D5B0;
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

void *siri::dialogengine::PatternSchemaAliasGroup::PatternSchemaAliasGroup(void *a1, long long *a2, void *a3)
{
  uint64_t result = siri::dialogengine::PatternSchemaGroup::PatternSchemaGroup(a1, a2);
  void *result = &unk_1F211D508;
  uint64_t v5 = a3[1];
  result[4] = *a3;
  result[5] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

{
  void *result;
  uint64_t v5;

  uint64_t result = siri::dialogengine::PatternSchemaGroup::PatternSchemaGroup(a1, a2);
  void *result = &unk_1F211D508;
  uint64_t v5 = a3[1];
  result[4] = *a3;
  result[5] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void InitDefaultsscc_info_visual_parameter_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::visual_parameter::visual_parameter((siri::dialogengine::CatBinary::visual_parameter *)&siri::dialogengine::CatBinary::_visual_parameter_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_visual_parameter_default_instance_, v4);
}

siri::dialogengine::CatBinary::visual_parameter *siri::dialogengine::CatBinary::visual_parameter::visual_parameter(siri::dialogengine::CatBinary::visual_parameter *this)
{
  *(void *)this = &unk_1F211D900;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_visual_parameter_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_visual_parameter_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1C5DF7F70(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::visual_parameter::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::visual_parameter *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    long long v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)(v9 + 23);
    long long v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::visual_parameter::_InternalParse(siri::dialogengine::CatBinary::visual_parameter *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v15 = a2;
  uint64_t v5 = (char *)this + 32;
  int v6 = (char *)this + 24;
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23))) {
      return v15;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      uint64_t v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    uint64_t v15 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v13 = (std::string *)*((void *)this + 4);
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_22;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v13 = (std::string *)*((void *)this + 3);
      if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
LABEL_22:
      uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_23;
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_23:
    uint64_t v15 = v12;
    if (!v12) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v9 - 1;
  return TagFallback;
}

uint64_t siri::dialogengine::CatBinary::visual_parameter::GetCachedSize(siri::dialogengine::CatBinary::visual_parameter *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::visual_parameter::ByteSizeLong(siri::dialogengine::CatBinary::visual_parameter *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(void *)(v11 + 8);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void siri::dialogengine::CatBinary::visual_parameter::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::visual_parameter *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::visual_parameter::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::visual_parameter::MergeFrom(siri::dialogengine::CatBinary::visual_parameter *this, const siri::dialogengine::CatBinary::visual_parameter *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 2561);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      unint64_t v11 = (std::string *)*((void *)this + 4);
      uint64_t v10 = (char *)this + 32;
      uint64_t v9 = v11;
      *((_DWORD *)v10 - 4) |= 2u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 4);
      if (v11 != v12)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v12);
        }
        std::string::operator=(v9, v12);
      }
    }
  }
}

void sub_1C5DF848C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::visual_parameter::IsInitialized(siri::dialogengine::CatBinary::visual_parameter *this)
{
  return 1;
}

void siri::dialogengine::CatBinary::visual_parameter::Clear(siri::dialogengine::CatBinary::visual_parameter *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (siri::dialogengine::CatBinary::visual_parameter *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

siri::dialogengine::CatBinary::visual_parameter *siri::dialogengine::CatBinary::visual_parameter::New(siri::dialogengine::CatBinary::visual_parameter *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::visual_parameter>(a2);
}

siri::dialogengine::CatBinary::visual_parameter *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::visual_parameter>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::visual_parameter *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::visual_parameter>);
  }
  siri::dialogengine::CatBinary::visual_parameter::visual_parameter(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DF85B8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::visual_parameter>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::visual_parameter *siri::dialogengine::CatBinary::visual_parameter::New(siri::dialogengine::CatBinary::visual_parameter *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::visual_parameter>(0);
}

void *siri::dialogengine::CatBinary::visual_parameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.visual_parameter");
}

void siri::dialogengine::CatBinary::visual_parameter::~visual_parameter(siri::dialogengine::CatBinary::visual_parameter *this)
{
  siri::dialogengine::CatBinary::visual_parameter::~visual_parameter(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F211D900;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_node_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::node::node((siri::dialogengine::CatBinary::node *)&siri::dialogengine::CatBinary::_node_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_node_default_instance_, v4);
}

siri::dialogengine::CatBinary::node *siri::dialogengine::CatBinary::node::node(siri::dialogengine::CatBinary::node *this)
{
  *(void *)this = &unk_1F211D990;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  if (atomic_load_explicit(scc_info_node_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_node_CatBinary_2eproto);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  return this;
}

void sub_1C5DF8830(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::node *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v31 = *((int *)this + 42);
    *uint64_t v4 = 8;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v35 = v31 >> 7;
      if (v31 >> 14)
      {
        uint64_t v36 = v4 + 2;
        do
        {
          unsigned int v37 = v36;
          *v36++ = v35 | 0x80;
          unint64_t v38 = v35 >> 7;
          unint64_t v39 = v35 >> 14;
          v35 >>= 7;
        }
        while (v39);
        uint64_t v4 = v37 + 2;
        unsigned char *v36 = v38;
        if (v6) {
          goto LABEL_77;
        }
      }
      else
      {
        void v4[2] = v35;
        v4 += 3;
        if (v6) {
          goto LABEL_77;
        }
      }
    }
    else
    {
      v4[1] = v31;
      v4 += 2;
      if (v6) {
        goto LABEL_77;
      }
    }
LABEL_3:
    if ((v6 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_78;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_77:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 9), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 10), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 11), v4);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 12), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 13), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_82:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 7, *((const void ***)this + 14), v4);
  if ((v6 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 8, *((const void ***)this + 15), v4);
LABEL_10:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (siri::dialogengine::CatBinary::node *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 74;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          char v13 = v4 + 2;
          do
          {
            uint64_t v14 = v13;
            *v13++ = v12 | 0x80;
            unsigned int v15 = v12 >> 7;
            unsigned int v16 = v12 >> 14;
            v12 >>= 7;
          }
          while (v16);
          unint64_t v11 = v14 + 2;
          *char v13 = v15;
        }
        else
        {
          void v4[2] = v12;
          unint64_t v11 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v10;
        unint64_t v11 = (unsigned __int8 *)(v4 + 2);
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 10, *((const void ***)this + 16), v4);
    if ((v6 & 0x100) == 0)
    {
LABEL_24:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_59;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 11, *((const void ***)this + 17), v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_25:
    if ((v6 & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_59:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v32 = *((unsigned char *)this + 172);
  *uint64_t v4 = 96;
  v4[1] = v32;
  v4 += 2;
  if ((v6 & 0x200) != 0) {
LABEL_26:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 13, *((const void ***)this + 18), v4);
LABEL_27:
  int v17 = *((_DWORD *)this + 14);
  if (v17)
  {
    int v18 = 0;
    while ((unint64_t)v4 < *(void *)a3)
    {
      if (v18 < 0) {
        goto LABEL_31;
      }
LABEL_32:
      if (*((_DWORD *)this + 14) <= v18)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v45, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        uint64_t v20 = google::protobuf::internal::LogMessage::operator<<(v45, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v44, (const char **)&v20->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v45[0].__r_.__value_.__l.__data_);
      }
      uint64_t v21 = *(siri::dialogengine::CatBinary::visual_parameter **)(*((void *)this + 8) + 8 * v18 + 8);
      *uint64_t v4 = 114;
      unsigned int v22 = *((_DWORD *)v21 + 5);
      if (v22 > 0x7F)
      {
        v4[1] = v22 | 0x80;
        unsigned int v24 = v22 >> 7;
        if (v22 >> 14)
        {
          unint64_t v25 = v4 + 2;
          do
          {
            BOOL v26 = v25;
            *v25++ = v24 | 0x80;
            unsigned int v27 = v24 >> 7;
            unsigned int v28 = v24 >> 14;
            v24 >>= 7;
          }
          while (v28);
          unsigned int v23 = v26 + 2;
          unsigned char *v25 = v27;
        }
        else
        {
          void v4[2] = v24;
          unsigned int v23 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v22;
        unsigned int v23 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::visual_parameter::InternalSerializeWithCachedSizesToArray(v21, v23, a3);
      if (++v18 == v17) {
        goto LABEL_45;
      }
    }
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v18 & 0x80000000) == 0) {
      goto LABEL_32;
    }
LABEL_31:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v45, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v19 = google::protobuf::internal::LogMessage::operator<<(v45, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v44, (const char **)&v19->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v45[0].__r_.__value_.__l.__data_);
    goto LABEL_32;
  }
LABEL_45:
  if ((v6 & 0x4000) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v33 = *((unsigned char *)this + 173);
    *uint64_t v4 = 120;
    v4[1] = v33;
    v4 += 2;
    if ((v6 & 0x8000) == 0)
    {
LABEL_47:
      if ((v6 & 0x400) == 0) {
        goto LABEL_48;
      }
      goto LABEL_69;
    }
  }
  else if ((v6 & 0x8000) == 0)
  {
    goto LABEL_47;
  }
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  int v34 = *((_DWORD *)this + 44);
  *(_WORD *)uint64_t v4 = 389;
  *(_DWORD *)(v4 + 2) = v34;
  v4 += 6;
  if ((v6 & 0x400) == 0)
  {
LABEL_48:
    if ((v6 & 0x800) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_69:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 17, *((const void ***)this + 19), v4);
  if ((v6 & 0x800) != 0) {
LABEL_49:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 18, *((const void ***)this + 20), v4);
LABEL_50:
  uint64_t v29 = *((void *)this + 1);
  if ((v29 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v40 = v29 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v40 + 23) < 0)
  {
    unsigned int v42 = *(void **)v40;
    uint64_t v41 = *(void *)(v40 + 8);
  }
  else
  {
    LODWORD(v41) = *(unsigned __int8 *)(v40 + 23);
    unsigned int v42 = (void *)v40;
  }
  if (*(void *)a3 - (void)v4 >= (int)v41)
  {
    uint64_t v43 = (int)v41;
    memcpy(v4, v42, (int)v41);
    v4 += v43;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v42, v41, (unsigned __int8 *)v4);
}

void sub_1C5DF8E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5DF8EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *siri::dialogengine::CatBinary::node::_InternalParse(siri::dialogengine::CatBinary::node *this, char *a2, google::protobuf::internal::ParseContext *a3)
{
  int v5 = 0;
  uint64_t v72 = a2;
  char v70 = (char *)this + 152;
  uint64_t v71 = (char *)this + 160;
  int v6 = (unsigned int *)((char *)this + 48);
  unsigned int v68 = (char *)this + 136;
  unsigned int v69 = (char *)this + 144;
  char v7 = (unsigned int *)((char *)this + 24);
  unsigned int v66 = (char *)this + 120;
  char v67 = (char *)this + 128;
  char v64 = (char *)this + 104;
  uint64_t v65 = (char *)this + 112;
  uint64_t v62 = (char *)this + 88;
  unint64_t v63 = (char *)this + 96;
  uint64_t v60 = (char *)this + 72;
  char v61 = (char *)this + 80;
  uint64_t v8 = (unint64_t *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v72, *((_DWORD *)a3 + 23)))
    {
      TagFallbacuint64_t k = v72;
      break;
    }
    TagFallbacuint64_t k = v72 + 1;
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *v72;
    if ((*v72 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (const char *)(v10 + (*TagFallback << 7) - 128);
    if ((*TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = v72 + 2;
LABEL_6:
      uint64_t v72 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (char *)google::protobuf::internal::ReadTagFallback((google::protobuf::internal *)v72, v10);
    uint64_t v72 = TagFallback;
    if (!TagFallback) {
      break;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_101;
        }
        unint64_t v11 = TagFallback + 1;
        unint64_t v12 = *TagFallback;
        if ((*TagFallback & 0x80000000) == 0) {
          goto LABEL_12;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          uint64_t v72 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, (v14 - 128));
          if (!v72) {
            goto LABEL_117;
          }
          unint64_t v12 = v52;
        }
        else
        {
          unint64_t v11 = TagFallback + 2;
LABEL_12:
          uint64_t v72 = v11;
        }
        if (v12 > 6)
        {
          if (*v8)
          {
            BOOL v57 = (std::string *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
          }
          else
          {
            google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v8);
            BOOL v57 = v58;
          }
          google::protobuf::internal::WriteVarint(1, v12, v57);
        }
        else
        {
          *((_DWORD *)this + 4) |= 0x1000u;
          *((_DWORD *)this + 42) = v12;
        }
        continue;
      case 2u:
        if (v10 != 18) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 1u;
        unsigned int v15 = (std::string *)*((void *)this + 9);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v60;
        goto LABEL_97;
      case 3u:
        if (v10 != 26) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 2u;
        unsigned int v15 = (std::string *)*((void *)this + 10);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v61;
        goto LABEL_97;
      case 4u:
        if (v10 != 34) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 4u;
        unsigned int v15 = (std::string *)*((void *)this + 11);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v62;
        goto LABEL_97;
      case 5u:
        if (v10 != 42) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 8u;
        unsigned int v15 = (std::string *)*((void *)this + 12);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v63;
        goto LABEL_97;
      case 6u:
        if (v10 != 50) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x10u;
        unsigned int v15 = (std::string *)*((void *)this + 13);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v64;
        goto LABEL_97;
      case 7u:
        if (v10 != 58) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x20u;
        unsigned int v15 = (std::string *)*((void *)this + 14);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v65;
        goto LABEL_97;
      case 8u:
        if (v10 != 66) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x40u;
        unsigned int v15 = (std::string *)*((void *)this + 15);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v66;
        goto LABEL_97;
      case 9u:
        if (v10 != 74) {
          goto LABEL_101;
        }
        int v17 = TagFallback - 1;
        while (1)
        {
          int v18 = v17 + 1;
          uint64_t v72 = v17 + 1;
          uint64_t v19 = (int *)*((void *)this + 5);
          if (!v19) {
            break;
          }
          uint64_t v20 = *((int *)this + 8);
          int v21 = *v19;
          if ((int)v20 >= *v19)
          {
            if (v21 == *((_DWORD *)this + 9))
            {
LABEL_45:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v21 + 1);
              uint64_t v19 = (int *)*((void *)this + 5);
              int v21 = *v19;
            }
            int *v19 = v21 + 1;
            unsigned int v23 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(*((google::protobuf::internal::ArenaImpl **)this + 3));
            LODWORD(v22) = v23;
            uint64_t v24 = *((void *)this + 5);
            uint64_t v25 = *((int *)this + 8);
            *((_DWORD *)this + 8) = v25 + 1;
            *(void *)(v24 + 8 * v25 + 8) = v23;
            int v18 = v72;
            goto LABEL_47;
          }
          *((_DWORD *)this + 8) = v20 + 1;
          uint64_t v22 = *(void *)&v19[2 * v20 + 2];
LABEL_47:
          int v17 = (char *)google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(a3, v22, (google::protobuf::internal *)v18);
          uint64_t v72 = v17;
          if (!v17) {
            goto LABEL_117;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 74) {
            goto LABEL_2;
          }
        }
        int v21 = *((_DWORD *)this + 9);
        goto LABEL_45;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x80u;
        unsigned int v15 = (std::string *)*((void *)this + 16);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v67;
        goto LABEL_97;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x100u;
        unsigned int v15 = (std::string *)*((void *)this + 17);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v68;
        goto LABEL_97;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_101;
        }
        v5 |= 0x2000u;
        BOOL v26 = TagFallback + 1;
        unint64_t v27 = *TagFallback;
        if ((*TagFallback & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v28 = *v26;
        unint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v53 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v27);
          uint64_t v72 = v53;
          *((unsigned char *)this + 172) = v54 != 0;
          if (!v53) {
            goto LABEL_117;
          }
        }
        else
        {
          BOOL v26 = TagFallback + 2;
LABEL_61:
          uint64_t v72 = v26;
          *((unsigned char *)this + 172) = v27 != 0;
        }
        continue;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x200u;
        unsigned int v15 = (std::string *)*((void *)this + 18);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v69;
        goto LABEL_97;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_101;
        }
        uint64_t v29 = TagFallback - 1;
LABEL_67:
        unsigned int v30 = v29 + 1;
        uint64_t v72 = v30;
        unint64_t v31 = (int *)*((void *)this + 8);
        if (!v31)
        {
          int v33 = *((_DWORD *)this + 15);
LABEL_72:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v33 + 1);
          unint64_t v31 = (int *)*((void *)this + 8);
          int v33 = *v31;
          goto LABEL_73;
        }
        uint64_t v32 = *((int *)this + 14);
        int v33 = *v31;
        if ((int)v32 < *v31)
        {
          *((_DWORD *)this + 14) = v32 + 1;
          int v34 = *(siri::dialogengine::CatBinary::visual_parameter **)&v31[2 * v32 + 2];
          goto LABEL_74;
        }
        if (v33 == *((_DWORD *)this + 15)) {
          goto LABEL_72;
        }
LABEL_73:
        *unint64_t v31 = v33 + 1;
        int v34 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::visual_parameter>(*((google::protobuf::internal::ArenaImpl **)this + 6));
        uint64_t v35 = *((void *)this + 8);
        uint64_t v36 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v36 + 1;
        *(void *)(v35 + 8 * v36 + 8) = v34;
        unsigned int v30 = v72;
LABEL_74:
        unsigned int v37 = *v30;
        if (*v30 < 0)
        {
          SizeFallbacuint64_t k = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v30, (const char *)*v30);
          if (!SizeFallback) {
            goto LABEL_117;
          }
          unint64_t v38 = SizeFallback;
          unsigned int v37 = v40;
        }
        else
        {
          unint64_t v38 = v30 + 1;
        }
        int v41 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v38, v37);
        int v42 = *((_DWORD *)a3 + 22);
        BOOL v43 = __OFSUB__(v42--, 1);
        *((_DWORD *)a3 + 22) = v42;
        if (v42 < 0 == v43)
        {
          int v44 = v41;
          uint64_t v29 = (char *)siri::dialogengine::CatBinary::visual_parameter::_InternalParse(v34, (google::protobuf::internal *)v38, a3);
          if (v29)
          {
            ++*((_DWORD *)a3 + 22);
            if (!*((_DWORD *)a3 + 20))
            {
              int v45 = *((_DWORD *)a3 + 7) + v44;
              *((_DWORD *)a3 + 7) = v45;
              unint64_t v46 = *((void *)a3 + 1) + (v45 & (v45 >> 31));
              *(void *)a3 = v46;
              uint64_t v72 = v29;
              if (v46 <= (unint64_t)v29 || *v29 != 114) {
                continue;
              }
              goto LABEL_67;
            }
          }
        }
LABEL_117:
        TagFallbacuint64_t k = 0;
        break;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_101;
        }
        v5 |= 0x4000u;
        uint64_t v47 = TagFallback + 1;
        unint64_t v48 = *TagFallback;
        if ((*TagFallback & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v49 = *v47;
        unint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          char v55 = (char *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, v48);
          uint64_t v72 = v55;
          *((unsigned char *)this + 173) = v56 != 0;
          if (!v55) {
            goto LABEL_117;
          }
        }
        else
        {
          uint64_t v47 = TagFallback + 2;
LABEL_88:
          uint64_t v72 = v47;
          *((unsigned char *)this + 173) = v48 != 0;
        }
        continue;
      case 0x10u:
        if (v10 != 133) {
          goto LABEL_101;
        }
        v5 |= 0x8000u;
        *((_DWORD *)this + 44) = *(_DWORD *)TagFallback;
        uint64_t v72 = TagFallback + 4;
        continue;
      case 0x11u:
        if (v10 != 138) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x400u;
        unsigned int v15 = (std::string *)*((void *)this + 19);
        if (v15 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_98;
        }
        uint64_t v16 = (uint64_t)v70;
        goto LABEL_97;
      case 0x12u:
        if (v10 != 146) {
          goto LABEL_101;
        }
        *((_DWORD *)this + 4) |= 0x800u;
        unsigned int v15 = (std::string *)*((void *)this + 20);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
        {
          uint64_t v16 = (uint64_t)v71;
LABEL_97:
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v16, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_98:
        unsigned int v50 = google::protobuf::internal::InlineGreedyStringParser(v15, TagFallback, (uint64_t)a3);
        goto LABEL_99;
      default:
LABEL_101:
        if (v10) {
          BOOL v51 = (v10 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (v51)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          goto LABEL_118;
        }
        unsigned int v50 = (char *)google::protobuf::internal::UnknownFieldParse(v10, v8, (google::protobuf::internal *)TagFallback, a3);
LABEL_99:
        uint64_t v72 = v50;
        if (!v50) {
          goto LABEL_117;
        }
        continue;
    }
    break;
  }
LABEL_118:
  *((_DWORD *)this + 4) |= v5;
  return TagFallback;
}

siri::dialogengine::CatBinary::node *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::node *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xB8uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::node>);
  }
  siri::dialogengine::CatBinary::node::node(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DF9748(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40173E4A0ELL);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(google::protobuf::internal::EpsCopyInputStream *this, siri::dialogengine::CatBinary::node *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  char v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = siri::dialogengine::CatBinary::node::_InternalParse(a2, v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::node>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t siri::dialogengine::CatBinary::node::GetCachedSize(siri::dialogengine::CatBinary::node *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::node::ByteSizeLong(siri::dialogengine::CatBinary::node *this)
{
  if ((*((unsigned char *)this + 17) & 0x10) != 0)
  {
    int v3 = *((_DWORD *)this + 42);
    uint64_t v4 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
    if (v3 >= 0) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 10;
    }
    uint64_t v2 = v5 + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *((int *)this + 8);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    uint64_t v9 = (siri::dialogengine::CatBinary::node **)(v8 + 8);
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      int v11 = *v9++;
      uint64_t v12 = siri::dialogengine::CatBinary::node::ByteSizeLong(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *((int *)this + 14);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = *((void *)this + 8);
  if (v15) {
    uint64_t v16 = (siri::dialogengine::CatBinary::visual_parameter **)(v15 + 8);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      int v18 = *v16++;
      uint64_t v19 = siri::dialogengine::CatBinary::visual_parameter::ByteSizeLong(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  int v20 = *((_DWORD *)this + 4);
  if (!(_BYTE)v20) {
    goto LABEL_31;
  }
  if (v20)
  {
    uint64_t v30 = *((void *)this + 9);
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    v14 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v20 & 2) == 0)
    {
LABEL_22:
      if ((v20 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_56;
    }
  }
  else if ((v20 & 2) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v33 = *((void *)this + 10);
  uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
  uint64_t v35 = *(void *)(v33 + 8);
  if ((v34 & 0x80u) == 0) {
    uint64_t v35 = v34;
  }
  v14 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 4) == 0)
  {
LABEL_23:
    if ((v20 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v36 = *((void *)this + 11);
  uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
  uint64_t v38 = *(void *)(v36 + 8);
  if ((v37 & 0x80u) == 0) {
    uint64_t v38 = v37;
  }
  v14 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 8) == 0)
  {
LABEL_24:
    if ((v20 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v39 = *((void *)this + 12);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v14 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 0x10) == 0)
  {
LABEL_25:
    if ((v20 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_65:
    uint64_t v45 = *((void *)this + 14);
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    v14 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v20 & 0x40) == 0)
    {
LABEL_27:
      if ((v20 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_62:
  uint64_t v42 = *((void *)this + 13);
  uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
  uint64_t v44 = *(void *)(v42 + 8);
  if ((v43 & 0x80u) == 0) {
    uint64_t v44 = v43;
  }
  v14 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 0x20) != 0) {
    goto LABEL_65;
  }
LABEL_26:
  if ((v20 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_68:
  uint64_t v48 = *((void *)this + 15);
  uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
  uint64_t v50 = *(void *)(v48 + 8);
  if ((v49 & 0x80u) == 0) {
    uint64_t v50 = v49;
  }
  v14 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 0x80) != 0)
  {
LABEL_28:
    uint64_t v21 = *((void *)this + 16);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    v14 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_31:
  if ((v20 & 0xF00) == 0) {
    goto LABEL_39;
  }
  if ((v20 & 0x100) != 0)
  {
    uint64_t v51 = *((void *)this + 17);
    uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
    uint64_t v53 = *(void *)(v51 + 8);
    if ((v52 & 0x80u) == 0) {
      uint64_t v53 = v52;
    }
    v14 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v20 & 0x200) == 0)
    {
LABEL_34:
      if ((v20 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_78;
    }
  }
  else if ((v20 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v54 = *((void *)this + 18);
  uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
  uint64_t v56 = *(void *)(v54 + 8);
  if ((v55 & 0x80u) == 0) {
    uint64_t v56 = v55;
  }
  v14 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v20 & 0x400) == 0)
  {
LABEL_35:
    if ((v20 & 0x800) == 0) {
      goto LABEL_39;
    }
    goto LABEL_36;
  }
LABEL_78:
  uint64_t v57 = *((void *)this + 19);
  uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
  uint64_t v59 = *(void *)(v57 + 8);
  if ((v58 & 0x80u) == 0) {
    uint64_t v59 = v58;
  }
  v14 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v20 & 0x800) != 0)
  {
LABEL_36:
    uint64_t v24 = *((void *)this + 20);
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v14 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_39:
  uint64_t v27 = v14 + 2;
  if ((v20 & 0x2000) == 0) {
    uint64_t v27 = v14;
  }
  if ((v20 & 0x4000) != 0) {
    v27 += 2;
  }
  if ((v20 & 0x8000) != 0) {
    v27 += 6;
  }
  if ((v20 & 0xE000) != 0) {
    uint64_t result = v27;
  }
  else {
    uint64_t result = v14;
  }
  uint64_t v29 = *((void *)this + 1);
  if (v29)
  {
    unint64_t v60 = v29 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v60 + 23) < 0) {
      uint64_t v61 = *(void *)(v60 + 8);
    }
    else {
      uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
    }
    result += v61;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

void siri::dialogengine::CatBinary::node::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::node *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::node::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::node::MergeFrom(siri::dialogengine::CatBinary::node *this, const siri::dialogengine::CatBinary::node *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v32, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 3284);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v32, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v31, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v32[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::visual_parameter>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 9);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 10);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 10);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      int v11 = (std::string *)*((void *)this + 11);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 11);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 12);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 12);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 13);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 13);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 14);
      *((_DWORD *)this + 4) |= 0x20u;
      int v18 = (const std::string *)*((void *)a2 + 14);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      uint64_t v19 = (std::string *)*((void *)this + 15);
      *((_DWORD *)this + 4) |= 0x40u;
      int v20 = (const std::string *)*((void *)a2 + 15);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0)
    {
      uint64_t v21 = (std::string *)*((void *)this + 16);
      *((_DWORD *)this + 4) |= 0x80u;
      uint64_t v22 = (const std::string *)*((void *)a2 + 16);
      if (v21 != v22)
      {
        if (v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v22);
        }
        std::string::operator=(v21, v22);
      }
    }
  }
  if ((v6 & 0xFF00) != 0)
  {
    if ((v6 & 0x100) != 0)
    {
      uint64_t v23 = (std::string *)*((void *)this + 17);
      *((_DWORD *)this + 4) |= 0x100u;
      uint64_t v24 = (const std::string *)*((void *)a2 + 17);
      if (v23 != v24)
      {
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v24);
        }
        std::string::operator=(v23, v24);
      }
    }
    if ((v6 & 0x200) != 0)
    {
      uint64_t v25 = (std::string *)*((void *)this + 18);
      *((_DWORD *)this + 4) |= 0x200u;
      uint64_t v26 = (const std::string *)*((void *)a2 + 18);
      if (v25 != v26)
      {
        if (v25 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v26);
        }
        std::string::operator=(v25, v26);
      }
    }
    if ((v6 & 0x400) != 0)
    {
      uint64_t v27 = (std::string *)*((void *)this + 19);
      *((_DWORD *)this + 4) |= 0x400u;
      int v28 = (const std::string *)*((void *)a2 + 19);
      if (v27 != v28)
      {
        if (v27 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v28);
        }
        std::string::operator=(v27, v28);
      }
    }
    if ((v6 & 0x800) != 0)
    {
      uint64_t v29 = (std::string *)*((void *)this + 20);
      *((_DWORD *)this + 4) |= 0x800u;
      uint64_t v30 = (const std::string *)*((void *)a2 + 20);
      if (v29 != v30)
      {
        if (v29 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v30);
        }
        std::string::operator=(v29, v30);
      }
    }
    if ((v6 & 0x1000) != 0)
    {
      *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
      if ((v6 & 0x2000) == 0)
      {
LABEL_69:
        if ((v6 & 0x4000) == 0) {
          goto LABEL_70;
        }
        goto LABEL_76;
      }
    }
    else if ((v6 & 0x2000) == 0)
    {
      goto LABEL_69;
    }
    *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
    if ((v6 & 0x4000) == 0)
    {
LABEL_70:
      if ((v6 & 0x8000) == 0)
      {
LABEL_72:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_71:
      *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
      goto LABEL_72;
    }
LABEL_76:
    *((unsigned char *)this + 173) = *((unsigned char *)a2 + 173);
    if ((v6 & 0x8000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
}

void sub_1C5DFA1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::node **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::node **)v7;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::node>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      int v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::node **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::node **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::node>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5DFA360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::visual_parameter>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::visual_parameter **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::visual_parameter **)v7;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::visual_parameter>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      int v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::visual_parameter **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::visual_parameter **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::visual_parameter>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::visual_parameter>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5DFA4D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::visual_parameter>::Merge(siri::dialogengine::CatBinary::visual_parameter *a1, siri::dialogengine::CatBinary::visual_parameter *this)
{
}

uint64_t google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::node>::Merge(siri::dialogengine::CatBinary::node *a1, siri::dialogengine::CatBinary::node *this)
{
  return siri::dialogengine::CatBinary::node::MergeFrom(this, a1);
}

BOOL siri::dialogengine::CatBinary::node::IsInitialized(siri::dialogengine::CatBinary::node *this)
{
  return (*((unsigned char *)this + 17) & 0x10) != 0
      && google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>((uint64_t)this + 24);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>(a1, v2);
    if ((*(unsigned char *)(v5 + 17) & 0x10) == 0) {
      break;
    }
  }
  while ((google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>(v5 + 24) & 1) != 0);
  return v3 < 1;
}

void siri::dialogengine::CatBinary::node::Clear(siri::dialogengine::CatBinary::node *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 24);
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    int v3 = (siri::dialogengine::CatBinary::visual_parameter **)(*((void *)this + 8) + 8);
    do
    {
      BOOL v4 = *v3++;
      siri::dialogengine::CatBinary::visual_parameter::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 14) = 0;
  }
  int v6 = *((_DWORD *)this + 4);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_10;
      }
LABEL_21:
      uint64_t v8 = *((void *)this + 10);
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_25;
        }
      }
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
LABEL_29:
      uint64_t v10 = *((void *)this + 12);
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_33;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_33;
        }
      }
LABEL_13:
      if ((v6 & 0x20) == 0) {
        goto LABEL_14;
      }
LABEL_37:
      uint64_t v12 = *((void *)this + 14);
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)uint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_41;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v12 = 0;
        *(unsigned char *)(v12 + 23) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_41;
        }
      }
LABEL_15:
      if ((v6 & 0x80) == 0) {
        goto LABEL_48;
      }
LABEL_45:
      uint64_t v14 = *((void *)this + 16);
      if (*(char *)(v14 + 23) < 0)
      {
        **(unsigned char **)uint64_t v14 = 0;
        *(void *)(v14 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v14 = 0;
        *(unsigned char *)(v14 + 23) = 0;
      }
      goto LABEL_48;
    }
    uint64_t v7 = *((void *)this + 9);
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_10:
    if ((v6 & 4) == 0) {
      goto LABEL_11;
    }
LABEL_25:
    uint64_t v9 = *((void *)this + 11);
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)uint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_29;
      }
    }
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
LABEL_33:
    uint64_t v11 = *((void *)this + 13);
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)uint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_37;
      }
    }
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
LABEL_41:
    uint64_t v13 = *((void *)this + 15);
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)uint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_48;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_48;
      }
    }
    goto LABEL_45;
  }
LABEL_48:
  if ((v6 & 0xF00) == 0) {
    goto LABEL_69;
  }
  if ((v6 & 0x100) == 0)
  {
    if ((v6 & 0x200) == 0) {
      goto LABEL_51;
    }
LABEL_58:
    uint64_t v16 = *((void *)this + 18);
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)uint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v6 & 0x400) != 0) {
        goto LABEL_62;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v6 & 0x400) != 0) {
        goto LABEL_62;
      }
    }
LABEL_52:
    if ((v6 & 0x800) == 0) {
      goto LABEL_69;
    }
    goto LABEL_66;
  }
  uint64_t v15 = *((void *)this + 17);
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)uint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v6 & 0x200) != 0) {
      goto LABEL_58;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v6 & 0x200) != 0) {
      goto LABEL_58;
    }
  }
LABEL_51:
  if ((v6 & 0x400) == 0) {
    goto LABEL_52;
  }
LABEL_62:
  uint64_t v17 = *((void *)this + 19);
  if (*(char *)(v17 + 23) < 0)
  {
    **(unsigned char **)uint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
    if ((v6 & 0x800) == 0) {
      goto LABEL_69;
    }
  }
  else
  {
    *(unsigned char *)uint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v6 & 0x800) == 0) {
      goto LABEL_69;
    }
  }
LABEL_66:
  uint64_t v18 = *((void *)this + 20);
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)uint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
  }
LABEL_69:
  if ((v6 & 0xF000) != 0)
  {
    *((_DWORD *)this + 44) = 0;
    *((void *)this + 21) = 0;
  }
  char v20 = *((unsigned char *)this + 8);
  int v19 = (siri::dialogengine::CatBinary::node *)((char *)this + 8);
  *((_DWORD *)v19 + 2) = 0;
  if (v20)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v19);
  }
}

void sub_1C5DFA8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    int v3 = (siri::dialogengine::CatBinary::node **)(*(void *)(a1 + 16) + 8);
    do
    {
      BOOL v4 = *v3++;
      siri::dialogengine::CatBinary::node::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1C5DFA960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::CatBinary::node *siri::dialogengine::CatBinary::node::New(siri::dialogengine::CatBinary::node *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(a2);
}

siri::dialogengine::CatBinary::node *siri::dialogengine::CatBinary::node::New(siri::dialogengine::CatBinary::node *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(0);
}

void *siri::dialogengine::CatBinary::node::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.node");
}

void siri::dialogengine::CatBinary::node::~node(siri::dialogengine::CatBinary::node *this)
{
  siri::dialogengine::CatBinary::node::~node(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(void *)this = &unk_1F211D990;
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  BOOL v4 = *((void *)this + 10);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  char v6 = *((void *)this + 11);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 12);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1C8796D70](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 13);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x1C8796D70](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 14);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x1C8796D70](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 15);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x1C8796D70](v12, 0x1012C40EC159624);
  }
  uint64_t v13 = *((void *)this + 16);
  if ((uint64_t *)v13 != &google::protobuf::internal::fixed_address_empty_string && v13)
  {
    if (*(char *)(v13 + 23) < 0) {
      operator delete(*(void **)v13);
    }
    MEMORY[0x1C8796D70](v13, 0x1012C40EC159624);
  }
  uint64_t v14 = *((void *)this + 17);
  if ((uint64_t *)v14 != &google::protobuf::internal::fixed_address_empty_string && v14)
  {
    if (*(char *)(v14 + 23) < 0) {
      operator delete(*(void **)v14);
    }
    MEMORY[0x1C8796D70](v14, 0x1012C40EC159624);
  }
  uint64_t v15 = *((void *)this + 18);
  if ((uint64_t *)v15 != &google::protobuf::internal::fixed_address_empty_string && v15)
  {
    if (*(char *)(v15 + 23) < 0) {
      operator delete(*(void **)v15);
    }
    MEMORY[0x1C8796D70](v15, 0x1012C40EC159624);
  }
  uint64_t v16 = *((void *)this + 19);
  if ((uint64_t *)v16 != &google::protobuf::internal::fixed_address_empty_string && v16)
  {
    if (*(char *)(v16 + 23) < 0) {
      operator delete(*(void **)v16);
    }
    MEMORY[0x1C8796D70](v16, 0x1012C40EC159624);
  }
  uint64_t v17 = *((void *)this + 20);
  if ((uint64_t *)v17 != &google::protobuf::internal::fixed_address_empty_string && v17)
  {
    if (*(char *)(v17 + 23) < 0) {
      operator delete(*(void **)v17);
    }
    MEMORY[0x1C8796D70](v17, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::node *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::node *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_condition_entry_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::condition_entry::condition_entry((siri::dialogengine::CatBinary::condition_entry *)&siri::dialogengine::CatBinary::_condition_entry_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_condition_entry_default_instance_, v4);
}

siri::dialogengine::CatBinary::condition_entry *siri::dialogengine::CatBinary::condition_entry::condition_entry(siri::dialogengine::CatBinary::condition_entry *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F211D870;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_condition_entry_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_condition_entry_CatBinary_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  return this;
}

void sub_1C5DFADD8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::condition_entry::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::condition_entry *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  BOOL v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      BOOL v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v19 = *((int *)this + 20);
    *BOOL v4 = 8;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      if (v19 >> 14)
      {
        char v21 = v4 + 2;
        do
        {
          uint64_t v22 = v21;
          *v21++ = v20 | 0x80;
          unint64_t v23 = v20 >> 7;
          unint64_t v24 = v20 >> 14;
          v20 >>= 7;
        }
        while (v24);
        BOOL v4 = v22 + 2;
        unsigned char *v21 = v23;
        if (v6) {
          goto LABEL_33;
        }
      }
      else
      {
        void v4[2] = v20;
        v4 += 3;
        if (v6) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      v4[1] = v19;
      v4 += 2;
      if (v6) {
        goto LABEL_33;
      }
    }
LABEL_3:
    if ((v6 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_34;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_33:
  BOOL v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 6), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_34:
  BOOL v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 7), v4);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    BOOL v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 8), v4);
LABEL_6:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        BOOL v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (siri::dialogengine::CatBinary::condition_entry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((uint64_t)this + 24, i);
      *BOOL v4 = 42;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v13 = v4 + 2;
          do
          {
            uint64_t v14 = v13;
            *v13++ = v12 | 0x80;
            unsigned int v15 = v12 >> 7;
            unsigned int v16 = v12 >> 14;
            v12 >>= 7;
          }
          while (v16);
          uint64_t v11 = v14 + 2;
          *uint64_t v13 = v15;
        }
        else
        {
          void v4[2] = v12;
          uint64_t v11 = (unsigned __int8 *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v10;
        uint64_t v11 = (unsigned __int8 *)(v4 + 2);
      }
      BOOL v4 = (char *)siri::dialogengine::CatBinary::condition_entry::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  if ((v6 & 8) != 0) {
    BOOL v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 9), v4);
  }
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v25 = v17 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    char v27 = *(void **)v25;
    uint64_t v26 = *(void *)(v25 + 8);
  }
  else
  {
    LODWORD(v26) = *(unsigned __int8 *)(v25 + 23);
    char v27 = (void *)v25;
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v28 = (int)v26;
    memcpy(v4, v27, (int)v26);
    v4 += v28;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v27, v26, (unsigned __int8 *)v4);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    BOOL v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5DFB14C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *siri::dialogengine::CatBinary::condition_entry::_InternalParse(siri::dialogengine::CatBinary::condition_entry *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = (char *)this + 72;
  int v6 = (unsigned int *)((char *)this + 24);
  char v7 = (char *)this + 64;
  uint64_t v8 = (char *)this + 56;
  uint64_t v9 = (char *)this + 48;
  unsigned int v10 = (unint64_t *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v32, *((_DWORD *)a3 + 23)) & 1) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v32 + 1);
      LODWORD(v12) = *(unsigned __int8 *)v32;
      if (*(char *)v32 < 0)
      {
        unsigned int v12 = (const char *)(v12 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v32, v12);
          uint64_t v32 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
LABEL_7:
          switch(v12 >> 3)
          {
            case 1u:
              if (v12 != 8) {
                goto LABEL_43;
              }
              uint64_t v13 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v14 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_12;
              }
              int v15 = *(char *)v13;
              unint64_t v14 = v14 + (v15 << 7) - 128;
              if (v15 < 0)
              {
                uint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v14);
                if (!v32) {
                  return 0;
                }
              }
              else
              {
                uint64_t v13 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_12:
                uint64_t v32 = v13;
              }
              if (v14 > 4)
              {
                if (*v10)
                {
                  uint64_t v28 = (std::string *)(*v10 & 0xFFFFFFFFFFFFFFFELL);
                }
                else
                {
                  unint64_t v31 = v14;
                  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v10);
                  unint64_t v14 = v31;
                  uint64_t v28 = v29;
                }
                google::protobuf::internal::WriteVarint(1, v14, v28);
              }
              else
              {
                *((_DWORD *)this + 4) |= 0x10u;
                *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v14;
              }
              continue;
            case 2u:
              if (v12 != 18) {
                goto LABEL_43;
              }
              *((_DWORD *)this + 4) |= 1u;
              unsigned int v16 = (std::string *)*((void *)this + 6);
              if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_40;
            case 3u:
              if (v12 != 26) {
                goto LABEL_43;
              }
              *((_DWORD *)this + 4) |= 2u;
              unsigned int v16 = (std::string *)*((void *)this + 7);
              if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_40;
            case 4u:
              if (v12 != 34) {
                goto LABEL_43;
              }
              *((_DWORD *)this + 4) |= 4u;
              unsigned int v16 = (std::string *)*((void *)this + 8);
              if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
              goto LABEL_40;
            case 5u:
              if (v12 != 42) {
                goto LABEL_43;
              }
              unint64_t v17 = (unint64_t)TagFallback - 1;
              break;
            case 6u:
              if (v12 != 50) {
                goto LABEL_43;
              }
              *((_DWORD *)this + 4) |= 8u;
              unsigned int v16 = (std::string *)*((void *)this + 9);
              if (v16 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_40:
              uint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)TagFallback, (uint64_t)a3);
              goto LABEL_41;
            default:
LABEL_43:
              if (v12) {
                BOOL v27 = (v12 & 7) == 4;
              }
              else {
                BOOL v27 = 1;
              }
              if (v27)
              {
                *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v12 - 1;
                return TagFallback;
              }
              uint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v12, v10, TagFallback, a3);
LABEL_41:
              uint64_t v32 = v26;
              if (!v26) {
                return 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v18 = (google::protobuf::internal *)(v17 + 1);
            uint64_t v32 = (google::protobuf::internal *)(v17 + 1);
            unint64_t v19 = (int *)*((void *)this + 5);
            if (!v19) {
              break;
            }
            uint64_t v20 = *((int *)this + 8);
            int v21 = *v19;
            if ((int)v20 >= *v19)
            {
              if (v21 == *((_DWORD *)this + 9))
              {
LABEL_31:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v21 + 1);
                unint64_t v19 = (int *)*((void *)this + 5);
                int v21 = *v19;
              }
              int *v19 = v21 + 1;
              unint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(*((google::protobuf::internal::ArenaImpl **)this + 3));
              LODWORD(v22) = v23;
              uint64_t v24 = *((void *)this + 5);
              uint64_t v25 = *((int *)this + 8);
              *((_DWORD *)this + 8) = v25 + 1;
              *(void *)(v24 + 8 * v25 + 8) = v23;
              uint64_t v18 = v32;
              goto LABEL_33;
            }
            *((_DWORD *)this + 8) = v20 + 1;
            uint64_t v22 = *(void *)&v19[2 * v20 + 2];
LABEL_33:
            unint64_t v17 = google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::condition_entry>(a3, v22, v18);
            uint64_t v32 = (google::protobuf::internal *)v17;
            if (!v17) {
              return 0;
            }
            if (*(void *)a3 <= v17 || *(unsigned char *)v17 != 42) {
              goto LABEL_2;
            }
          }
          int v21 = *((_DWORD *)this + 9);
          goto LABEL_31;
        }
        TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v32 + 2);
      }
      uint64_t v32 = TagFallback;
      goto LABEL_7;
    }
    return v32;
  }
}

siri::dialogengine::CatBinary::condition_entry *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::condition_entry *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::condition_entry>);
  }
  siri::dialogengine::CatBinary::condition_entry::condition_entry(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DFB5A8(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4076CC3382);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::condition_entry>(google::protobuf::internal::EpsCopyInputStream *this, siri::dialogengine::CatBinary::condition_entry *a2, google::protobuf::internal *a3)
{
  int v6 = *(char *)a3;
  char v7 = (const char *)*(unsigned __int8 *)a3;
  if (v6 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(a3, v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = result;
    LODWORD(v7) = v10;
  }
  else
  {
    uint64_t v8 = (char *)a3 + 1;
  }
  int v11 = google::protobuf::internal::EpsCopyInputStream::PushLimit(this, v8, v7);
  int v12 = *((_DWORD *)this + 22);
  BOOL v13 = __OFSUB__(v12--, 1);
  *((_DWORD *)this + 22) = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  int v14 = v11;
  uint64_t result = (char *)siri::dialogengine::CatBinary::condition_entry::_InternalParse(a2, (google::protobuf::internal *)v8, this);
  if (!result) {
    return result;
  }
  ++*((_DWORD *)this + 22);
  if (*((_DWORD *)this + 20)) {
    return 0;
  }
  int v15 = *((_DWORD *)this + 7) + v14;
  *((_DWORD *)this + 7) = v15;
  *(void *)this = *((void *)this + 1) + (v15 & (v15 >> 31));
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::condition_entry>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

uint64_t siri::dialogengine::CatBinary::condition_entry::GetCachedSize(siri::dialogengine::CatBinary::condition_entry *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::condition_entry::ByteSizeLong(siri::dialogengine::CatBinary::condition_entry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *((_DWORD *)this + 20);
    if (v4 < 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *((int *)this + 8);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *((void *)this + 5);
  if (v7) {
    uint64_t v8 = (siri::dialogengine::CatBinary::condition_entry **)(v7 + 8);
  }
  else {
    uint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      int v10 = *v8++;
      uint64_t v11 = siri::dialogengine::CatBinary::condition_entry::ByteSizeLong(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
    int v2 = *((_DWORD *)this + 4);
  }
  if ((v2 & 0xF) == 0) {
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_26:
    uint64_t v20 = *((void *)this + 7);
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v6 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 4) == 0)
    {
LABEL_17:
      if ((v2 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
  uint64_t v17 = *((void *)this + 6);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v6 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_26;
  }
LABEL_16:
  if ((v2 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  uint64_t v23 = *((void *)this + 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v6 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_18:
    uint64_t v12 = *((void *)this + 9);
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v6 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  uint64_t v15 = *((void *)this + 1);
  if (v15)
  {
    unint64_t v26 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0) {
      uint64_t v27 = *(void *)(v26 + 8);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    }
    v6 += v27;
  }
  *((_DWORD *)this + 5) = v6;
  return v6;
}

void siri::dialogengine::CatBinary::condition_entry::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::condition_entry *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::condition_entry::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::condition_entry::MergeFrom(siri::dialogengine::CatBinary::condition_entry *this, const siri::dialogengine::CatBinary::condition_entry *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 2305);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x1F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 2u;
      int v10 = (const std::string *)*((void *)a2 + 7);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 8);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 9);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0) {
      *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((_DWORD *)a2 + 20);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_1C5DFBB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::condition_entry **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::condition_entry **)v7;
      do
      {
        unsigned int v16 = *v13++;
        char v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition_entry>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      uint64_t v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::condition_entry **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::condition_entry **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition_entry>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    unint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5DFBCA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition_entry>::Merge(siri::dialogengine::CatBinary::condition_entry *a1, siri::dialogengine::CatBinary::condition_entry *this)
{
  return siri::dialogengine::CatBinary::condition_entry::MergeFrom(this, a1);
}

BOOL siri::dialogengine::CatBinary::condition_entry::IsInitialized(siri::dialogengine::CatBinary::condition_entry *this)
{
  return (*((unsigned char *)this + 16) & 0x10) != 0
      && google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>>((uint64_t)this + 24);
}

BOOL google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>>(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 8);
  do
  {
    int v3 = v2;
    BOOL v4 = __OFSUB__(v2--, 1);
    if (v2 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>(a1, v2);
    if ((*(unsigned char *)(v5 + 16) & 0x10) == 0) {
      break;
    }
  }
  while ((google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>>(v5 + 24) & 1) != 0);
  return v3 < 1;
}

void siri::dialogengine::CatBinary::condition_entry::Clear(siri::dialogengine::CatBinary::condition_entry *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((char *)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) != 0)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      uint64_t v4 = *((void *)this + 7);
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      uint64_t v6 = *((void *)this + 9);
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
      }
      goto LABEL_22;
    }
    uint64_t v3 = *((void *)this + 6);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    uint64_t v5 = *((void *)this + 8);
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  char v8 = *((unsigned char *)this + 8);
  uint64_t v7 = (siri::dialogengine::CatBinary::condition_entry *)((char *)this + 8);
  *((_DWORD *)v7 + 18) = 0;
  *((_DWORD *)v7 + 2) = 0;
  if (v8)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v7);
  }
}

void google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((v1 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  else if (v1)
  {
    uint64_t v3 = (siri::dialogengine::CatBinary::condition_entry **)(*(void *)(a1 + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      siri::dialogengine::CatBinary::condition_entry::Clear(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(a1 + 8) = 0;
  }
}

void sub_1C5DFBF00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::CatBinary::condition_entry *siri::dialogengine::CatBinary::condition_entry::New(siri::dialogengine::CatBinary::condition_entry *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(a2);
}

siri::dialogengine::CatBinary::condition_entry *siri::dialogengine::CatBinary::condition_entry::New(siri::dialogengine::CatBinary::condition_entry *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(0);
}

void *siri::dialogengine::CatBinary::condition_entry::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.condition_entry");
}

void siri::dialogengine::CatBinary::condition_entry::~condition_entry(siri::dialogengine::CatBinary::condition_entry *this)
{
  siri::dialogengine::CatBinary::condition_entry::~condition_entry(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  *(void *)this = &unk_1F211D870;
  int v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  char v6 = *((void *)this + 8);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  char v8 = *((void *)this + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1C8796D70](v8, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::condition_entry *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_condition_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::condition::condition((siri::dialogengine::CatBinary::condition *)&siri::dialogengine::CatBinary::_condition_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_condition_default_instance_, v4);
}

siri::dialogengine::CatBinary::condition *siri::dialogengine::CatBinary::condition::condition(siri::dialogengine::CatBinary::condition *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)this = &unk_1F211D7E0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  if (atomic_load_explicit(scc_info_condition_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_condition_CatBinary_2eproto);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1C5DFC1A8(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v1 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v2);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::condition::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::condition *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 6), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 7), v4);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = (siri::dialogengine::CatBinary::condition_entry *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((uint64_t)this + 24, i);
      *uint64_t v4 = 26;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v13 = v4 + 2;
          do
          {
            uint64_t v14 = v13;
            *v13++ = v12 | 0x80;
            unsigned int v15 = v12 >> 7;
            unsigned int v16 = v12 >> 14;
            v12 >>= 7;
          }
          while (v16);
          int v11 = v14 + 2;
          *uint64_t v13 = v15;
        }
        else
        {
          void v4[2] = v12;
          int v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        int v11 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::condition_entry::InternalSerializeWithCachedSizesToArray(v9, v11, a3);
    }
  }
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    uint64_t v21 = *(void **)v19;
    uint64_t v20 = *(void *)(v19 + 8);
  }
  else
  {
    LODWORD(v2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = (void *)v19;
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v22 = (int)v20;
    memcpy(v4, v21, (int)v20);
    v4 += v22;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v21, v20, (unsigned __int8 *)v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::condition::_InternalParse(siri::dialogengine::CatBinary::condition *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  int v25 = a2;
  uint64_t v5 = (unsigned int *)((char *)this + 24);
  int v6 = (char *)this + 56;
  int v7 = (char *)this + 48;
  char v8 = (unint64_t *)((char *)this + 8);
  while ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v25, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v25 + 1);
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)v25;
    if ((*(char *)v25 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = (const char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v25 + 2);
LABEL_6:
      int v25 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v25, v10);
    int v25 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    unsigned int v11 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 != 26) {
        goto LABEL_13;
      }
      unsigned int v15 = (char *)TagFallback - 1;
LABEL_20:
      unsigned int v16 = (google::protobuf::internal *)(v15 + 1);
      int v25 = (google::protobuf::internal *)(v15 + 1);
      uint64_t v17 = (int *)*((void *)this + 5);
      if (v17)
      {
        uint64_t v18 = *((int *)this + 8);
        int v19 = *v17;
        if ((int)v18 < *v17)
        {
          *((_DWORD *)this + 8) = v18 + 1;
          uint64_t v20 = *(siri::dialogengine::CatBinary::condition_entry **)&v17[2 * v18 + 2];
          goto LABEL_27;
        }
        if (v19 == *((_DWORD *)this + 9))
        {
LABEL_25:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
          uint64_t v17 = (int *)*((void *)this + 5);
          int v19 = *v17;
        }
        *uint64_t v17 = v19 + 1;
        uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition_entry>(*((google::protobuf::internal::ArenaImpl **)this + 3));
        uint64_t v21 = *((void *)this + 5);
        uint64_t v22 = *((int *)this + 8);
        *((_DWORD *)this + 8) = v22 + 1;
        *(void *)(v21 + 8 * v22 + 8) = v20;
        unsigned int v16 = v25;
LABEL_27:
        unsigned int v15 = google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::condition_entry>(a3, v20, v16);
        int v25 = (google::protobuf::internal *)v15;
        if (!v15) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
          continue;
        }
        goto LABEL_20;
      }
      int v19 = *((_DWORD *)this + 9);
      goto LABEL_25;
    }
    if (v11 == 2)
    {
      if (v10 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v23 = (std::string *)*((void *)this + 7);
        if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_36;
      }
    }
    else if (v11 == 1 && v10 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v23 = (std::string *)*((void *)this + 6);
      if (v23 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
LABEL_36:
      uint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v23, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_37;
    }
LABEL_13:
    if (v10) {
      BOOL v13 = (v10 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13)
    {
      *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
      return TagFallback;
    }
    uint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v10, v8, TagFallback, a3);
LABEL_37:
    int v25 = v14;
    if (!v14) {
      return 0;
    }
  }
  return v25;
}

uint64_t siri::dialogengine::CatBinary::condition::GetCachedSize(siri::dialogengine::CatBinary::condition *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::condition::ByteSizeLong(siri::dialogengine::CatBinary::condition *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (siri::dialogengine::CatBinary::condition_entry **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = siri::dialogengine::CatBinary::condition_entry::ByteSizeLong(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = *((void *)this + 6);
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = *((void *)this + 7);
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *((void *)this + 1);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0) {
      uint64_t v18 = *(void *)(v17 + 8);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    }
    v2 += v18;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void siri::dialogengine::CatBinary::condition::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::condition *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::condition::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::condition::MergeFrom(siri::dialogengine::CatBinary::condition *this, const siri::dialogengine::CatBinary::condition *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 1944);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 1u;
      int v8 = (const std::string *)*((void *)a2 + 6);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 7);
      uint64_t v10 = (char *)this + 56;
      uint64_t v9 = v11;
      *((_DWORD *)v10 - 10) |= 2u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 7);
      if (v11 != v12)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v12);
        }
        std::string::operator=(v9, v12);
      }
    }
  }
}

void sub_1C5DFC8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL siri::dialogengine::CatBinary::condition::IsInitialized(siri::dialogengine::CatBinary::condition *this)
{
  return google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>>((uint64_t)this + 24);
}

void siri::dialogengine::CatBinary::condition::Clear(siri::dialogengine::CatBinary::condition *this)
{
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((uint64_t)this + 24);
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 6);
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v2 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v4 = *((void *)this + 7);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_11:
  char v6 = *((unsigned char *)this + 8);
  uint64_t v5 = (siri::dialogengine::CatBinary::condition *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v5);
  }
}

siri::dialogengine::CatBinary::condition *siri::dialogengine::CatBinary::condition::New(siri::dialogengine::CatBinary::condition *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition>(a2);
}

siri::dialogengine::CatBinary::condition *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::condition *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x40uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::condition>);
  }
  siri::dialogengine::CatBinary::condition::condition(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DFCA60(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C4071667EE6);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::condition>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::condition *siri::dialogengine::CatBinary::condition::New(siri::dialogengine::CatBinary::condition *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition>(0);
}

void *siri::dialogengine::CatBinary::condition::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.condition");
}

void siri::dialogengine::CatBinary::condition::~condition(siri::dialogengine::CatBinary::condition *this)
{
  siri::dialogengine::CatBinary::condition::~condition(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F211D7E0;
  int v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::condition *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_parameter_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::parameter::parameter((siri::dialogengine::CatBinary::parameter *)&siri::dialogengine::CatBinary::_parameter_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_parameter_default_instance_, v4);
}

siri::dialogengine::CatBinary::parameter *siri::dialogengine::CatBinary::parameter::parameter(siri::dialogengine::CatBinary::parameter *this)
{
  *(void *)this = &unk_1F211D750;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_parameter_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_parameter_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  *((_WORD *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 256;
  *((unsigned char *)this + 82) = 1;
  return this;
}

void sub_1C5DFCCCC(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::parameter::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::parameter *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 5), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 6), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 5, *((const void ***)this + 7), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 6, *((const void ***)this + 8), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_18:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v7 = *((unsigned char *)this + 81);
  *uint64_t v4 = 56;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_21:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v8 = *((unsigned char *)this + 80);
  *uint64_t v4 = 64;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 9, *((const void ***)this + 9), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_28;
  }
LABEL_25:
  if ((unint64_t)v4 >= *(void *)a3) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v9 = *((unsigned char *)this + 82);
  *uint64_t v4 = 80;
  v4[1] = v9;
  v4 += 2;
LABEL_28:
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v14 = *(void **)v12;
    uint64_t v13 = *(void *)(v12 + 8);
  }
  else
  {
    LODWORD(v13) = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = (void *)v12;
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v15 = (int)v13;
    memcpy(v4, v14, (int)v13);
    v4 += v15;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v14, v13, (unsigned __int8 *)v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::parameter::_InternalParse(siri::dialogengine::CatBinary::parameter *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  int v5 = 0;
  uint64_t v34 = (char *)this + 72;
  uint64_t v35 = a2;
  int v6 = (char *)this + 64;
  char v7 = (char *)this + 56;
  char v8 = (char *)this + 48;
  char v9 = (char *)this + 40;
  uint64_t v10 = (char *)this + 32;
  uint64_t v11 = (char *)this + 24;
  unint64_t v12 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v35, *((_DWORD *)a3 + 23)))
    {
      TagFallbacuint64_t k = v35;
      break;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v35 + 1);
    LODWORD(v14) = *(unsigned __int8 *)v35;
    if ((*(char *)v35 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v14 = (const char *)(v14 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_6:
      uint64_t v35 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, v14);
    uint64_t v35 = TagFallback;
    if (!TagFallback) {
      break;
    }
LABEL_7:
    switch(v14 >> 3)
    {
      case 1u:
        if (v14 != 10) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v15 = (std::string *)*((void *)this + 3);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v11, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 2u:
        if (v14 != 18) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v15 = (std::string *)*((void *)this + 4);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 3u:
        if (v14 != 26) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 4u;
        uint64_t v15 = (std::string *)*((void *)this + 5);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v9, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 4u:
        if (v14 != 34) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 8u;
        uint64_t v15 = (std::string *)*((void *)this + 6);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v8, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 5u:
        if (v14 != 42) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 0x10u;
        uint64_t v15 = (std::string *)*((void *)this + 7);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 6u:
        if (v14 != 50) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 0x20u;
        uint64_t v15 = (std::string *)*((void *)this + 8);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_41;
      case 7u:
        if (v14 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x100u;
        unsigned int v16 = (google::protobuf::internal *)((char *)TagFallback + 1);
        unint64_t v17 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v18 = *(char *)v16;
        unint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          char v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v17);
          uint64_t v35 = v27;
          *((unsigned char *)this + 81) = v28 != 0;
          if (!v27) {
            goto LABEL_59;
          }
        }
        else
        {
          unsigned int v16 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_32:
          uint64_t v35 = v16;
          *((unsigned char *)this + 81) = v17 != 0;
        }
        continue;
      case 8u:
        if (v14 != 64) {
          goto LABEL_49;
        }
        v5 |= 0x80u;
        int v19 = (google::protobuf::internal *)((char *)TagFallback + 1);
        unint64_t v20 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v21 = *(char *)v19;
        unint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v20);
          uint64_t v35 = v29;
          *((unsigned char *)this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v30 != 0;
          if (!v29) {
            goto LABEL_59;
          }
        }
        else
        {
          int v19 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_37:
          uint64_t v35 = v19;
          *((unsigned char *)this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v20 != 0;
        }
        continue;
      case 9u:
        if (v14 != 74) {
          goto LABEL_49;
        }
        *((_DWORD *)this + 4) |= 0x40u;
        uint64_t v15 = (std::string *)*((void *)this + 9);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v34, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_41:
        uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_42;
      case 0xAu:
        if (v14 != 80) {
          goto LABEL_49;
        }
        v5 |= 0x200u;
        uint64_t v23 = (google::protobuf::internal *)((char *)TagFallback + 1);
        unint64_t v24 = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v25 = *(char *)v23;
        unint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          unint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v24);
          uint64_t v35 = v31;
          *((unsigned char *)this + 82) = v32 != 0;
          if (!v31) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v23 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_48:
          uint64_t v35 = v23;
          *((unsigned char *)this + 82) = v24 != 0;
        }
        continue;
      default:
LABEL_49:
        if (v14) {
          BOOL v26 = (v14 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (v26)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v14 - 1;
          goto LABEL_61;
        }
        uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v14, v12, TagFallback, a3);
LABEL_42:
        uint64_t v35 = v22;
        if (v22) {
          continue;
        }
LABEL_59:
        TagFallbacuint64_t k = 0;
        break;
    }
    break;
  }
LABEL_61:
  *((_DWORD *)this + 4) |= v5;
  return TagFallback;
}

uint64_t siri::dialogengine::CatBinary::parameter::GetCachedSize(siri::dialogengine::CatBinary::parameter *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::parameter::ByteSizeLong(siri::dialogengine::CatBinary::parameter *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    uint64_t v16 = *((void *)this + 5);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v19 = *((void *)this + 6);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_40:
    uint64_t v25 = *((void *)this + 8);
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_37:
  uint64_t v22 = *((void *)this + 7);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_16:
  if ((v1 & 0x40) != 0)
  {
LABEL_17:
    uint64_t v9 = *((void *)this + 9);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  if ((v1 & 0x80) != 0) {
    v2 += 2;
  }
LABEL_22:
  uint64_t v12 = v2 + 2;
  if ((v1 & 0x100) == 0) {
    uint64_t v12 = v2;
  }
  if ((v1 & 0x200) != 0) {
    v12 += 2;
  }
  if ((v1 & 0x300) != 0) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = v2;
  }
  uint64_t v14 = *((void *)this + 1);
  if (v14)
  {
    unint64_t v28 = v14 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v28 + 23) < 0) {
      uint64_t v29 = *(void *)(v28 + 8);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    }
    v13 += v29;
  }
  *((_DWORD *)this + 5) = v13;
  return v13;
}

void siri::dialogengine::CatBinary::parameter::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::parameter *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::parameter::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::parameter::MergeFrom(siri::dialogengine::CatBinary::parameter *this, const siri::dialogengine::CatBinary::parameter *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 1634);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v22, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v11 = (std::string *)*((void *)this + 5);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 5);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 6);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 6);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 7);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 7);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      uint64_t v17 = (std::string *)*((void *)this + 8);
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v18 = (const std::string *)*((void *)a2 + 8);
      if (v17 != v18)
      {
        if (v17 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v18);
        }
        std::string::operator=(v17, v18);
      }
    }
    if ((v6 & 0x40) != 0)
    {
      uint64_t v19 = (std::string *)*((void *)this + 9);
      *((_DWORD *)this + 4) |= 0x40u;
      uint64_t v20 = (const std::string *)*((void *)a2 + 9);
      if (v19 != v20)
      {
        if (v19 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v20);
        }
        std::string::operator=(v19, v20);
      }
    }
    if ((v6 & 0x80) != 0) {
      *((unsigned char *)this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((unsigned char *)a2 + 80);
    }
    *((_DWORD *)this + 4) |= v6;
  }
  if ((v6 & 0x300) != 0)
  {
    if ((v6 & 0x100) != 0) {
      *((unsigned char *)this + 81) = *((unsigned char *)a2 + 81);
    }
    if ((v6 & 0x200) != 0) {
      *((unsigned char *)this + 82) = *((unsigned char *)a2 + 82);
    }
    *((_DWORD *)this + 4) |= v6;
  }
}

void sub_1C5DFD9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::parameter::IsInitialized(siri::dialogengine::CatBinary::parameter *this)
{
  return 1;
}

void siri::dialogengine::CatBinary::parameter::Clear(siri::dialogengine::CatBinary::parameter *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x7F) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      uint64_t v3 = *((void *)this + 4);
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_18;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_18;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_22:
      uint64_t v5 = *((void *)this + 6);
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)uint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_26;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_26;
        }
      }
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_30:
      uint64_t v7 = *((void *)this + 8);
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)uint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v1 & 0x40) == 0) {
          goto LABEL_37;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v1 & 0x40) == 0) {
          goto LABEL_37;
        }
      }
      goto LABEL_34;
    }
    uint64_t v2 = *((void *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    uint64_t v4 = *((void *)this + 5);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_26:
    uint64_t v6 = *((void *)this + 7);
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_30;
      }
    }
LABEL_8:
    if ((v1 & 0x40) == 0) {
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v8 = *((void *)this + 9);
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)uint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_37:
  *((unsigned char *)this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  if ((v1 & 0x300) != 0) {
    *(_WORD *)((char *)this + 81) = 257;
  }
  char v10 = *((unsigned char *)this + 8);
  uint64_t v9 = (siri::dialogengine::CatBinary::parameter *)((char *)this + 8);
  *((_DWORD *)v9 + 2) = 0;
  if (v10) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v9);
  }
}

siri::dialogengine::CatBinary::parameter *siri::dialogengine::CatBinary::parameter::New(siri::dialogengine::CatBinary::parameter *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::parameter>(a2);
}

siri::dialogengine::CatBinary::parameter *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::parameter>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::parameter *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x58uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::parameter>);
  }
  siri::dialogengine::CatBinary::parameter::parameter(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DFDC08(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40299BF94CLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::parameter>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::parameter *siri::dialogengine::CatBinary::parameter::New(siri::dialogengine::CatBinary::parameter *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::parameter>(0);
}

void *siri::dialogengine::CatBinary::parameter::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.parameter");
}

void siri::dialogengine::CatBinary::parameter::~parameter(siri::dialogengine::CatBinary::parameter *this)
{
  siri::dialogengine::CatBinary::parameter::~parameter(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(void *)this = &unk_1F211D750;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 5);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 6);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1C8796D70](v8, 0x1012C40EC159624);
  }
  char v10 = *((void *)this + 7);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x1C8796D70](v10, 0x1012C40EC159624);
  }
  uint64_t v11 = *((void *)this + 8);
  if ((uint64_t *)v11 != &google::protobuf::internal::fixed_address_empty_string && v11)
  {
    if (*(char *)(v11 + 23) < 0) {
      operator delete(*(void **)v11);
    }
    MEMORY[0x1C8796D70](v11, 0x1012C40EC159624);
  }
  uint64_t v12 = *((void *)this + 9);
  if ((uint64_t *)v12 != &google::protobuf::internal::fixed_address_empty_string && v12)
  {
    if (*(char *)(v12 + 23) < 0) {
      operator delete(*(void **)v12);
    }
    MEMORY[0x1C8796D70](v12, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_metadata_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::metadata::metadata((siri::dialogengine::CatBinary::metadata *)&siri::dialogengine::CatBinary::_metadata_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_metadata_default_instance_, v4);
}

siri::dialogengine::CatBinary::metadata *siri::dialogengine::CatBinary::metadata::metadata(siri::dialogengine::CatBinary::metadata *this)
{
  *(void *)this = &unk_1F211D6C0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_metadata_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_metadata_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1C5DFDF68(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::metadata::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::metadata *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    uint64_t v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::metadata::_InternalParse(siri::dialogengine::CatBinary::metadata *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v15 = a2;
  uint64_t v5 = (char *)this + 32;
  int v6 = (char *)this + 24;
  uint64_t v7 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v15, *((_DWORD *)a3 + 23))) {
      return v15;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v15 + 1);
    LODWORD(v9) = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      uint64_t v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacuint64_t k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v9);
    uint64_t v15 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v13 = (std::string *)*((void *)this + 4);
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_22;
      }
    }
    else if (v9 >> 3 == 1 && v9 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v13 = (std::string *)*((void *)this + 3);
      if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
LABEL_22:
      uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_23;
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v9, v7, TagFallback, a3);
LABEL_23:
    uint64_t v15 = v12;
    if (!v12) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v9 - 1;
  return TagFallback;
}

uint64_t siri::dialogengine::CatBinary::metadata::GetCachedSize(siri::dialogengine::CatBinary::metadata *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::metadata::ByteSizeLong(siri::dialogengine::CatBinary::metadata *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *((void *)this + 1);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0) {
      uint64_t v12 = *(void *)(v11 + 8);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    }
    v2 += v12;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void siri::dialogengine::CatBinary::metadata::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::metadata *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::metadata::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::metadata::MergeFrom(siri::dialogengine::CatBinary::metadata *this, const siri::dialogengine::CatBinary::metadata *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 1160);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      unint64_t v11 = (std::string *)*((void *)this + 4);
      uint64_t v10 = (char *)this + 32;
      uint64_t v9 = v11;
      *((_DWORD *)v10 - 4) |= 2u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 4);
      if (v11 != v12)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v10, (uint64_t)v12);
        }
        std::string::operator=(v9, v12);
      }
    }
  }
}

void sub_1C5DFE484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::metadata::IsInitialized(siri::dialogengine::CatBinary::metadata *this)
{
  return 1;
}

void siri::dialogengine::CatBinary::metadata::Clear(siri::dialogengine::CatBinary::metadata *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v2 = *((void *)this + 3);
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    uint64_t v3 = *((void *)this + 4);
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *((unsigned char *)this + 8);
  uint64_t v4 = (siri::dialogengine::CatBinary::metadata *)((char *)this + 8);
  *((_DWORD *)v4 + 2) = 0;
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v4);
  }
}

siri::dialogengine::CatBinary::metadata *siri::dialogengine::CatBinary::metadata::New(siri::dialogengine::CatBinary::metadata *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::metadata>(a2);
}

siri::dialogengine::CatBinary::metadata *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::metadata>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::metadata *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x28uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::metadata>);
  }
  siri::dialogengine::CatBinary::metadata::metadata(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5DFE5B0(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40DFBAE579);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::metadata>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::metadata *siri::dialogengine::CatBinary::metadata::New(siri::dialogengine::CatBinary::metadata *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::metadata>(0);
}

void *siri::dialogengine::CatBinary::metadata::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.metadata");
}

void siri::dialogengine::CatBinary::metadata::~metadata(siri::dialogengine::CatBinary::metadata *this)
{
  siri::dialogengine::CatBinary::metadata::~metadata(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F211D6C0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_cat_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::cat::cat((siri::dialogengine::CatBinary::cat *)&siri::dialogengine::CatBinary::_cat_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_cat_default_instance_, v4);
  qword_1EA3DA930 = (uint64_t)&siri::dialogengine::CatBinary::_node_default_instance_;
}

siri::dialogengine::CatBinary::cat *siri::dialogengine::CatBinary::cat::cat(siri::dialogengine::CatBinary::cat *this)
{
  *(void *)this = &unk_1F211D630;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 12std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  if (atomic_load_explicit(scc_info_cat_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_cat_CatBinary_2eproto);
  }
  *((void *)this + 21) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 25) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 26) = 0;
  return this;
}

void sub_1C5DFE83C(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 144));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 120));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 96));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((google::protobuf::internal::RepeatedPtrFieldBase *)(v2 + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::cat::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::cat *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 21), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_73;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 22), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_73:
  uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 23), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 24), v4);
LABEL_6:
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    int v8 = 0;
    while ((unint64_t)v4 < *(void *)a3)
    {
      if (v8 < 0) {
        goto LABEL_10;
      }
LABEL_11:
      if (*((_DWORD *)this + 8) <= v8)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v86, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v85, (const char **)&v10->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v86[0].__r_.__value_.__l.__data_);
      }
      unint64_t v11 = *(siri::dialogengine::CatBinary::metadata **)(*((void *)this + 5) + 8 * v8 + 8);
      *uint64_t v4 = 42;
      unsigned int v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          uint64_t v15 = v4 + 2;
          do
          {
            uint64_t v16 = v15;
            *v15++ = v14 | 0x80;
            unsigned int v17 = v14 >> 7;
            unsigned int v18 = v14 >> 14;
            v14 >>= 7;
          }
          while (v18);
          char v13 = v16 + 2;
          unsigned char *v15 = v17;
        }
        else
        {
          void v4[2] = v14;
          char v13 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v12;
        char v13 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::metadata::InternalSerializeWithCachedSizesToArray(v11, v13, a3);
      if (++v8 == v7) {
        goto LABEL_24;
      }
    }
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v86, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v85, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v86[0].__r_.__value_.__l.__data_);
    goto LABEL_11;
  }
LABEL_24:
  int v19 = *((_DWORD *)this + 14);
  if (v19)
  {
    int v20 = 0;
    while ((unint64_t)v4 < *(void *)a3)
    {
      if (v20 < 0) {
        goto LABEL_28;
      }
LABEL_29:
      if (*((_DWORD *)this + 14) <= v20)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v86, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
        uint64_t v22 = google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (index) < (current_size_): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v85, (const char **)&v22->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v86[0].__r_.__value_.__l.__data_);
      }
      uint64_t v23 = *(siri::dialogengine::CatBinary::parameter **)(*((void *)this + 8) + 8 * v20 + 8);
      *uint64_t v4 = 50;
      unsigned int v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unsigned int v26 = v24 >> 7;
        if (v24 >> 14)
        {
          uint64_t v27 = v4 + 2;
          do
          {
            unint64_t v28 = v27;
            *v27++ = v26 | 0x80;
            unsigned int v29 = v26 >> 7;
            unsigned int v30 = v26 >> 14;
            v26 >>= 7;
          }
          while (v30);
          uint64_t v25 = v28 + 2;
          unsigned char *v27 = v29;
        }
        else
        {
          void v4[2] = v26;
          uint64_t v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        uint64_t v25 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::parameter::InternalSerializeWithCachedSizesToArray(v23, v25, a3);
      if (++v20 == v19) {
        goto LABEL_42;
      }
    }
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    if ((v20 & 0x80000000) == 0) {
      goto LABEL_29;
    }
LABEL_28:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v86, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    char v21 = google::protobuf::internal::LogMessage::operator<<(v86, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v85, (const char **)&v21->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v86[0].__r_.__value_.__l.__data_);
    goto LABEL_29;
  }
LABEL_42:
  int v31 = *((_DWORD *)this + 20);
  if (v31)
  {
    for (int i = 0; i != v31; ++i)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v33 = (siri::dialogengine::CatBinary::condition *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>((uint64_t)this + 72, i);
      *uint64_t v4 = 58;
      unsigned int v34 = *((_DWORD *)v33 + 5);
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unsigned int v36 = v34 >> 7;
        if (v34 >> 14)
        {
          uint64_t v37 = v4 + 2;
          do
          {
            uint64_t v38 = v37;
            *v37++ = v36 | 0x80;
            unsigned int v39 = v36 >> 7;
            unsigned int v40 = v36 >> 14;
            v36 >>= 7;
          }
          while (v40);
          uint64_t v35 = v38 + 2;
          *uint64_t v37 = v39;
        }
        else
        {
          void v4[2] = v36;
          uint64_t v35 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v34;
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::condition::InternalSerializeWithCachedSizesToArray(v33, v35, a3);
    }
  }
  int v41 = *((_DWORD *)this + 26);
  if (v41)
  {
    for (int j = 0; j != v41; ++j)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v43 = (siri::dialogengine::CatBinary::node *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 96, j);
      *uint64_t v4 = 66;
      unsigned int v44 = *((_DWORD *)v43 + 5);
      if (v44 > 0x7F)
      {
        v4[1] = v44 | 0x80;
        unsigned int v46 = v44 >> 7;
        if (v44 >> 14)
        {
          uint64_t v47 = v4 + 2;
          do
          {
            uint64_t v48 = v47;
            *v47++ = v46 | 0x80;
            unsigned int v49 = v46 >> 7;
            unsigned int v50 = v46 >> 14;
            v46 >>= 7;
          }
          while (v50);
          uint64_t v45 = v48 + 2;
          unsigned char *v47 = v49;
        }
        else
        {
          void v4[2] = v46;
          uint64_t v45 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v44;
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(v43, v45, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v51 = (siri::dialogengine::CatBinary::node *)*((void *)this + 26);
    *uint64_t v4 = 74;
    unsigned int v52 = *((_DWORD *)v51 + 5);
    if (v52 > 0x7F)
    {
      v4[1] = v52 | 0x80;
      unsigned int v54 = v52 >> 7;
      if (v52 >> 14)
      {
        uint64_t v55 = v4 + 2;
        do
        {
          uint64_t v56 = v55;
          *v55++ = v54 | 0x80;
          unsigned int v57 = v54 >> 7;
          unsigned int v58 = v54 >> 14;
          v54 >>= 7;
        }
        while (v58);
        uint64_t v53 = v56 + 2;
        unsigned char *v55 = v57;
      }
      else
      {
        void v4[2] = v54;
        uint64_t v53 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v52;
      uint64_t v53 = v4 + 2;
    }
    uint64_t v4 = (char *)siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(v51, v53, a3);
  }
  int v59 = *((_DWORD *)this + 32);
  if (v59)
  {
    for (int k = 0; k != v59; ++k)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v61 = (siri::dialogengine::CatBinary::node *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 120, k);
      *uint64_t v4 = 82;
      unsigned int v62 = *((_DWORD *)v61 + 5);
      if (v62 > 0x7F)
      {
        v4[1] = v62 | 0x80;
        unsigned int v64 = v62 >> 7;
        if (v62 >> 14)
        {
          uint64_t v65 = v4 + 2;
          do
          {
            unsigned int v66 = v65;
            *v65++ = v64 | 0x80;
            unsigned int v67 = v64 >> 7;
            unsigned int v68 = v64 >> 14;
            v64 >>= 7;
          }
          while (v68);
          unint64_t v63 = v66 + 2;
          unsigned char *v65 = v67;
        }
        else
        {
          void v4[2] = v64;
          unint64_t v63 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v62;
        unint64_t v63 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(v61, v63, a3);
    }
  }
  int v69 = *((_DWORD *)this + 38);
  if (v69)
  {
    for (int m = 0; m != v69; ++m)
    {
      if ((unint64_t)v4 >= *(void *)a3) {
        uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v71 = (siri::dialogengine::CatBinary::node *)google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 144, m);
      *uint64_t v4 = 90;
      unsigned int v72 = *((_DWORD *)v71 + 5);
      if (v72 > 0x7F)
      {
        v4[1] = v72 | 0x80;
        unsigned int v74 = v72 >> 7;
        if (v72 >> 14)
        {
          uint64_t v75 = v4 + 2;
          do
          {
            char v76 = v75;
            *v75++ = v74 | 0x80;
            unsigned int v77 = v74 >> 7;
            unsigned int v78 = v74 >> 14;
            v74 >>= 7;
          }
          while (v78);
          char v73 = v76 + 2;
          unsigned char *v75 = v77;
        }
        else
        {
          void v4[2] = v74;
          char v73 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v72;
        char v73 = v4 + 2;
      }
      uint64_t v4 = (char *)siri::dialogengine::CatBinary::node::InternalSerializeWithCachedSizesToArray(v71, v73, a3);
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 12, *((const void ***)this + 25), v4);
  }
  uint64_t v79 = *((void *)this + 1);
  if ((v79 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v81 = v79 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v81 + 23) < 0)
  {
    uint64_t v83 = *(void **)v81;
    uint64_t v82 = *(void *)(v81 + 8);
  }
  else
  {
    LODWORD(v82) = *(unsigned __int8 *)(v81 + 23);
    uint64_t v83 = (void *)v81;
  }
  if (*(void *)a3 - (void)v4 >= (int)v82)
  {
    uint64_t v84 = (int)v82;
    memcpy(v4, v83, (int)v82);
    v4 += v84;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v83, v82, (unsigned __int8 *)v4);
}

void sub_1C5DFF048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    char v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5DFF138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *siri::dialogengine::CatBinary::cat::_InternalParse(siri::dialogengine::CatBinary::cat *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  char v5 = (unsigned int *)((char *)this + 144);
  int v6 = (unsigned int *)((char *)this + 120);
  char v7 = (unsigned int *)((char *)this + 96);
  uint64_t v100 = (unsigned int *)((char *)this + 72);
  uint64_t v101 = a2;
  int v8 = (unsigned int *)((char *)this + 48);
  uint64_t v9 = (unsigned int *)((char *)this + 24);
  uint64_t v97 = (char *)this + 192;
  uint64_t v98 = (char *)this + 200;
  uint64_t v95 = (char *)this + 176;
  uint64_t v96 = (char *)this + 184;
  uint64_t v94 = (char *)this + 168;
  uint64_t v99 = (unint64_t *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    if ((google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v101, *((_DWORD *)a3 + 23)) & 1) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v101 + 1);
      LODWORD(v11) = *(unsigned __int8 *)v101;
      if (*(char *)v101 < 0)
      {
        unint64_t v11 = (const char *)(v11 + (*(unsigned __int8 *)TagFallback << 7) - 128);
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v101, v11);
          uint64_t v101 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 1u;
              unsigned int v12 = (std::string *)*((void *)this + 21);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_126;
              }
              uint64_t v13 = (uint64_t)v94;
              goto LABEL_125;
            case 2u:
              if (v11 != 18) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 2u;
              unsigned int v12 = (std::string *)*((void *)this + 22);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_126;
              }
              uint64_t v13 = (uint64_t)v95;
              goto LABEL_125;
            case 3u:
              if (v11 != 26) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 4u;
              unsigned int v12 = (std::string *)*((void *)this + 23);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_126;
              }
              uint64_t v13 = (uint64_t)v96;
              goto LABEL_125;
            case 4u:
              if (v11 != 34) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 8u;
              unsigned int v12 = (std::string *)*((void *)this + 24);
              if (v12 != (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
                goto LABEL_126;
              }
              uint64_t v13 = (uint64_t)v97;
              goto LABEL_125;
            case 5u:
              if (v11 != 42) {
                goto LABEL_129;
              }
              unsigned int v14 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_24:
              uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 1);
              uint64_t v101 = v15;
              uint64_t v16 = (int *)*((void *)this + 5);
              if (!v16)
              {
                int v18 = *((_DWORD *)this + 9);
LABEL_29:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v18 + 1);
                uint64_t v16 = (int *)*((void *)this + 5);
                int v18 = *v16;
                goto LABEL_30;
              }
              uint64_t v17 = *((int *)this + 8);
              int v18 = *v16;
              if ((int)v17 < *v16)
              {
                *((_DWORD *)this + 8) = v17 + 1;
                int v19 = *(siri::dialogengine::CatBinary::metadata **)&v16[2 * v17 + 2];
                goto LABEL_31;
              }
              if (v18 == *((_DWORD *)this + 9)) {
                goto LABEL_29;
              }
LABEL_30:
              *uint64_t v16 = v18 + 1;
              int v19 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::metadata>(*((google::protobuf::internal::ArenaImpl **)this + 3));
              uint64_t v20 = *((void *)this + 5);
              uint64_t v21 = *((int *)this + 8);
              *((_DWORD *)this + 8) = v21 + 1;
              *(void *)(v20 + 8 * v21 + 8) = v19;
              uint64_t v15 = v101;
LABEL_31:
              unsigned int v22 = *(unsigned __int8 *)v15;
              if (*(char *)v15 < 0)
              {
                SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v15, (const char *)*(unsigned __int8 *)v15);
                if (!SizeFallback) {
                  return 0;
                }
                uint64_t v23 = SizeFallback;
                unsigned int v22 = v25;
              }
              else
              {
                uint64_t v23 = (char *)v15 + 1;
              }
              int v26 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v23, v22);
              int v27 = *((_DWORD *)a3 + 22);
              BOOL v28 = __OFSUB__(v27--, 1);
              *((_DWORD *)a3 + 22) = v27;
              if (v27 < 0 == v28)
              {
                int v29 = v26;
                unsigned int v14 = siri::dialogengine::CatBinary::metadata::_InternalParse(v19, (google::protobuf::internal *)v23, a3);
                if (v14)
                {
                  ++*((_DWORD *)a3 + 22);
                  if (!*((_DWORD *)a3 + 20))
                  {
                    int v30 = *((_DWORD *)a3 + 7) + v29;
                    *((_DWORD *)a3 + 7) = v30;
                    unint64_t v31 = *((void *)a3 + 1) + (v30 & (v30 >> 31));
                    *(void *)a3 = v31;
                    uint64_t v101 = v14;
                    if (v31 <= (unint64_t)v14 || *(unsigned char *)v14 != 42) {
                      continue;
                    }
                    goto LABEL_24;
                  }
                }
              }
              return 0;
            case 6u:
              if (v11 != 50) {
                goto LABEL_129;
              }
              uint64_t v32 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_43:
              uint64_t v33 = (google::protobuf::internal *)((char *)v32 + 1);
              uint64_t v101 = v33;
              unsigned int v34 = (int *)*((void *)this + 8);
              if (!v34)
              {
                int v36 = *((_DWORD *)this + 15);
LABEL_48:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v36 + 1);
                unsigned int v34 = (int *)*((void *)this + 8);
                int v36 = *v34;
                goto LABEL_49;
              }
              uint64_t v35 = *((int *)this + 14);
              int v36 = *v34;
              if ((int)v35 < *v34)
              {
                *((_DWORD *)this + 14) = v35 + 1;
                uint64_t v37 = *(siri::dialogengine::CatBinary::parameter **)&v34[2 * v35 + 2];
                goto LABEL_50;
              }
              if (v36 == *((_DWORD *)this + 15)) {
                goto LABEL_48;
              }
LABEL_49:
              int *v34 = v36 + 1;
              uint64_t v37 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::parameter>(*((google::protobuf::internal::ArenaImpl **)this + 6));
              uint64_t v38 = *((void *)this + 8);
              uint64_t v39 = *((int *)this + 14);
              *((_DWORD *)this + 14) = v39 + 1;
              *(void *)(v38 + 8 * v39 + 8) = v37;
              uint64_t v33 = v101;
LABEL_50:
              unsigned int v40 = *(unsigned __int8 *)v33;
              if (*(char *)v33 < 0)
              {
                uint64_t v42 = google::protobuf::internal::ReadSizeFallback(v33, (const char *)*(unsigned __int8 *)v33);
                if (!v42) {
                  return 0;
                }
                int v41 = v42;
                unsigned int v40 = v43;
              }
              else
              {
                int v41 = (char *)v33 + 1;
              }
              int v44 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v41, v40);
              int v45 = *((_DWORD *)a3 + 22);
              BOOL v28 = __OFSUB__(v45--, 1);
              *((_DWORD *)a3 + 22) = v45;
              if (v45 < 0 == v28)
              {
                int v46 = v44;
                uint64_t v32 = siri::dialogengine::CatBinary::parameter::_InternalParse(v37, (google::protobuf::internal *)v41, a3);
                if (v32)
                {
                  ++*((_DWORD *)a3 + 22);
                  if (!*((_DWORD *)a3 + 20))
                  {
                    int v47 = *((_DWORD *)a3 + 7) + v46;
                    *((_DWORD *)a3 + 7) = v47;
                    unint64_t v48 = *((void *)a3 + 1) + (v47 & (v47 >> 31));
                    *(void *)a3 = v48;
                    uint64_t v101 = v32;
                    if (v48 <= (unint64_t)v32 || *(unsigned char *)v32 != 50) {
                      continue;
                    }
                    goto LABEL_43;
                  }
                }
              }
              return 0;
            case 7u:
              if (v11 != 58) {
                goto LABEL_129;
              }
              unsigned int v49 = (google::protobuf::internal *)((char *)TagFallback - 1);
LABEL_62:
              unsigned int v50 = (google::protobuf::internal *)((char *)v49 + 1);
              uint64_t v101 = v50;
              uint64_t v51 = (int *)*((void *)this + 11);
              if (!v51)
              {
                int v53 = *((_DWORD *)this + 21);
LABEL_67:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v100, v53 + 1);
                uint64_t v51 = (int *)*((void *)this + 11);
                int v53 = *v51;
                goto LABEL_68;
              }
              uint64_t v52 = *((int *)this + 20);
              int v53 = *v51;
              if ((int)v52 < *v51)
              {
                *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v52 + 1;
                unsigned int v54 = *(siri::dialogengine::CatBinary::condition **)&v51[2 * v52 + 2];
                goto LABEL_69;
              }
              if (v53 == *((_DWORD *)this + 21)) {
                goto LABEL_67;
              }
LABEL_68:
              int *v51 = v53 + 1;
              unsigned int v54 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition>(*((google::protobuf::internal::ArenaImpl **)this + 9));
              uint64_t v55 = *((void *)this + 11);
              uint64_t v56 = *((int *)this + 20);
              *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v56 + 1;
              *(void *)(v55 + 8 * v56 + 8) = v54;
              unsigned int v50 = v101;
LABEL_69:
              unsigned int v57 = *(unsigned __int8 *)v50;
              if (*(char *)v50 < 0)
              {
                int v59 = google::protobuf::internal::ReadSizeFallback(v50, (const char *)*(unsigned __int8 *)v50);
                if (!v59) {
                  return 0;
                }
                unsigned int v58 = v59;
                unsigned int v57 = v60;
              }
              else
              {
                unsigned int v58 = (char *)v50 + 1;
              }
              int v61 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v58, v57);
              int v62 = *((_DWORD *)a3 + 22);
              BOOL v28 = __OFSUB__(v62--, 1);
              *((_DWORD *)a3 + 22) = v62;
              if (v62 < 0 == v28)
              {
                int v63 = v61;
                unsigned int v49 = siri::dialogengine::CatBinary::condition::_InternalParse(v54, (google::protobuf::internal *)v58, a3);
                if (v49)
                {
                  ++*((_DWORD *)a3 + 22);
                  if (!*((_DWORD *)a3 + 20))
                  {
                    int v64 = *((_DWORD *)a3 + 7) + v63;
                    *((_DWORD *)a3 + 7) = v64;
                    unint64_t v65 = *((void *)a3 + 1) + (v64 & (v64 >> 31));
                    *(void *)a3 = v65;
                    uint64_t v101 = v49;
                    if (v65 <= (unint64_t)v49 || *(unsigned char *)v49 != 58) {
                      continue;
                    }
                    goto LABEL_62;
                  }
                }
              }
              return 0;
            case 8u:
              if (v11 != 66) {
                goto LABEL_129;
              }
              unsigned int v66 = (char *)TagFallback - 1;
              while (1)
              {
                unsigned int v67 = (google::protobuf::internal *)(v66 + 1);
                uint64_t v101 = (google::protobuf::internal *)(v66 + 1);
                unsigned int v68 = (int *)*((void *)this + 14);
                if (!v68) {
                  break;
                }
                uint64_t v69 = *((int *)this + 26);
                int v70 = *v68;
                if ((int)v69 >= *v68)
                {
                  if (v70 == *((_DWORD *)this + 27))
                  {
LABEL_86:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v70 + 1);
                    unsigned int v68 = (int *)*((void *)this + 14);
                    int v70 = *v68;
                  }
                  int *v68 = v70 + 1;
                  uint64_t v71 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(*((google::protobuf::internal::ArenaImpl **)this + 12));
                  uint64_t v72 = *((void *)this + 14);
                  uint64_t v73 = *((int *)this + 26);
                  *((_DWORD *)this + 26) = v73 + 1;
                  *(void *)(v72 + 8 * v73 + 8) = v71;
                  unsigned int v67 = v101;
                  goto LABEL_88;
                }
                *((_DWORD *)this + 26) = v69 + 1;
                uint64_t v71 = *(siri::dialogengine::CatBinary::node **)&v68[2 * v69 + 2];
LABEL_88:
                unsigned int v66 = google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(a3, v71, v67);
                uint64_t v101 = (google::protobuf::internal *)v66;
                if (!v66) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v66 || *v66 != 66) {
                  goto LABEL_2;
                }
              }
              int v70 = *((_DWORD *)this + 27);
              goto LABEL_86;
            case 9u:
              if (v11 != 74) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 0x20u;
              unsigned int v74 = (siri::dialogengine::CatBinary::node *)*((void *)this + 26);
              if (!v74)
              {
                unsigned int v74 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(0);
                *((void *)this + 26) = v74;
                TagFallbacint k = v101;
              }
              uint64_t v75 = (google::protobuf::internal *)google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(a3, v74, TagFallback);
              goto LABEL_127;
            case 0xAu:
              if (v11 != 82) {
                goto LABEL_129;
              }
              char v76 = (char *)TagFallback - 1;
              while (1)
              {
                unsigned int v77 = (google::protobuf::internal *)(v76 + 1);
                uint64_t v101 = (google::protobuf::internal *)(v76 + 1);
                unsigned int v78 = (int *)*((void *)this + 17);
                if (!v78) {
                  break;
                }
                uint64_t v79 = *((int *)this + 32);
                int v80 = *v78;
                if ((int)v79 >= *v78)
                {
                  if (v80 == *((_DWORD *)this + 33))
                  {
LABEL_103:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v80 + 1);
                    unsigned int v78 = (int *)*((void *)this + 17);
                    int v80 = *v78;
                  }
                  *unsigned int v78 = v80 + 1;
                  unint64_t v81 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(*((google::protobuf::internal::ArenaImpl **)this + 15));
                  uint64_t v82 = *((void *)this + 17);
                  uint64_t v83 = *((int *)this + 32);
                  *((_DWORD *)this + 32) = v83 + 1;
                  *(void *)(v82 + 8 * v83 + 8) = v81;
                  unsigned int v77 = v101;
                  goto LABEL_105;
                }
                *((_DWORD *)this + 32) = v79 + 1;
                unint64_t v81 = *(siri::dialogengine::CatBinary::node **)&v78[2 * v79 + 2];
LABEL_105:
                char v76 = google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(a3, v81, v77);
                uint64_t v101 = (google::protobuf::internal *)v76;
                if (!v76) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v76 || *v76 != 82) {
                  goto LABEL_2;
                }
              }
              int v80 = *((_DWORD *)this + 33);
              goto LABEL_103;
            case 0xBu:
              if (v11 != 90) {
                goto LABEL_129;
              }
              uint64_t v84 = (char *)TagFallback - 1;
              break;
            case 0xCu:
              if (v11 != 98) {
                goto LABEL_129;
              }
              *((_DWORD *)this + 4) |= 0x10u;
              unsigned int v12 = (std::string *)*((void *)this + 25);
              if (v12 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
              {
                uint64_t v13 = (uint64_t)v98;
LABEL_125:
                google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena(v13, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
              }
LABEL_126:
              uint64_t v75 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)TagFallback, (uint64_t)a3);
              goto LABEL_127;
            default:
LABEL_129:
              if (v11) {
                BOOL v92 = (v11 & 7) == 4;
              }
              else {
                BOOL v92 = 1;
              }
              if (v92)
              {
                *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v11 - 1;
                return TagFallback;
              }
              uint64_t v75 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v11, v99, TagFallback, a3);
LABEL_127:
              uint64_t v101 = v75;
              if (!v75) {
                return 0;
              }
              continue;
          }
          while (1)
          {
            char v85 = (google::protobuf::internal *)(v84 + 1);
            uint64_t v101 = (google::protobuf::internal *)(v84 + 1);
            uint64_t v86 = (int *)*((void *)this + 20);
            if (!v86) {
              break;
            }
            uint64_t v87 = *((int *)this + 38);
            int v88 = *v86;
            if ((int)v87 >= *v86)
            {
              if (v88 == *((_DWORD *)this + 39))
              {
LABEL_116:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v88 + 1);
                uint64_t v86 = (int *)*((void *)this + 20);
                int v88 = *v86;
              }
              int *v86 = v88 + 1;
              uint64_t v89 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(*((google::protobuf::internal::ArenaImpl **)this + 18));
              uint64_t v90 = *((void *)this + 20);
              uint64_t v91 = *((int *)this + 38);
              *((_DWORD *)this + 38) = v91 + 1;
              *(void *)(v90 + 8 * v91 + 8) = v89;
              char v85 = v101;
              goto LABEL_118;
            }
            *((_DWORD *)this + 38) = v87 + 1;
            uint64_t v89 = *(siri::dialogengine::CatBinary::node **)&v86[2 * v87 + 2];
LABEL_118:
            uint64_t v84 = google::protobuf::internal::ParseContext::ParseMessage<siri::dialogengine::CatBinary::node>(a3, v89, v85);
            uint64_t v101 = (google::protobuf::internal *)v84;
            if (!v84) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v84 || *v84 != 90) {
              goto LABEL_2;
            }
          }
          int v88 = *((_DWORD *)this + 39);
          goto LABEL_116;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v101 + 2);
      }
      uint64_t v101 = TagFallback;
      goto LABEL_7;
    }
    return v101;
  }
}

uint64_t siri::dialogengine::CatBinary::cat::GetCachedSize(siri::dialogengine::CatBinary::cat *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::cat::ByteSizeLong(siri::dialogengine::CatBinary::cat *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v3 = *((void *)this + 21);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *((int *)this + 8);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *((void *)this + 5);
  if (v8) {
    uint64_t v9 = (siri::dialogengine::CatBinary::metadata **)(v8 + 8);
  }
  else {
    uint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      unint64_t v11 = *v9++;
      uint64_t v12 = siri::dialogengine::CatBinary::metadata::ByteSizeLong(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *((int *)this + 14);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = *((void *)this + 8);
  if (v15) {
    uint64_t v16 = (siri::dialogengine::CatBinary::parameter **)(v15 + 8);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      int v18 = *v16++;
      uint64_t v19 = siri::dialogengine::CatBinary::parameter::ByteSizeLong(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = *((int *)this + 20);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = *((void *)this + 11);
  if (v22) {
    uint64_t v23 = (siri::dialogengine::CatBinary::condition **)(v22 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      unsigned int v25 = *v23++;
      uint64_t v26 = siri::dialogengine::CatBinary::condition::ByteSizeLong(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *((int *)this + 26);
  uint64_t v28 = v21 + v27;
  uint64_t v29 = *((void *)this + 14);
  if (v29) {
    int v30 = (siri::dialogengine::CatBinary::node **)(v29 + 8);
  }
  else {
    int v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = siri::dialogengine::CatBinary::node::ByteSizeLong(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *((int *)this + 32);
  uint64_t v35 = v28 + v34;
  uint64_t v36 = *((void *)this + 17);
  if (v36) {
    uint64_t v37 = (siri::dialogengine::CatBinary::node **)(v36 + 8);
  }
  else {
    uint64_t v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      uint64_t v39 = *v37++;
      uint64_t v40 = siri::dialogengine::CatBinary::node::ByteSizeLong(v39);
      v35 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = *((int *)this + 38);
  uint64_t v42 = v35 + v41;
  uint64_t v43 = *((void *)this + 20);
  if (v43) {
    int v44 = (siri::dialogengine::CatBinary::node **)(v43 + 8);
  }
  else {
    int v44 = 0;
  }
  if (v41)
  {
    uint64_t v45 = 8 * v41;
    do
    {
      int v46 = *v44++;
      uint64_t v47 = siri::dialogengine::CatBinary::node::ByteSizeLong(v46);
      v42 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6);
      v45 -= 8;
    }
    while (v45);
  }
  int v48 = *((_DWORD *)this + 4);
  if ((v48 & 0x3E) == 0) {
    goto LABEL_49;
  }
  if ((v48 & 2) != 0)
  {
    uint64_t v52 = *((void *)this + 22);
    uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
    uint64_t v54 = *(void *)(v52 + 8);
    if ((v53 & 0x80u) == 0) {
      uint64_t v54 = v53;
    }
    v42 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v48 & 4) == 0)
    {
LABEL_45:
      if ((v48 & 8) == 0) {
        goto LABEL_46;
      }
LABEL_57:
      uint64_t v58 = *((void *)this + 24);
      uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
      uint64_t v60 = *(void *)(v58 + 8);
      if ((v59 & 0x80u) == 0) {
        uint64_t v60 = v59;
      }
      v42 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v48 & 0x10) == 0)
      {
LABEL_47:
        if ((v48 & 0x20) == 0) {
          goto LABEL_49;
        }
        goto LABEL_48;
      }
      goto LABEL_60;
    }
  }
  else if ((v48 & 4) == 0)
  {
    goto LABEL_45;
  }
  uint64_t v55 = *((void *)this + 23);
  uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
  uint64_t v57 = *(void *)(v55 + 8);
  if ((v56 & 0x80u) == 0) {
    uint64_t v57 = v56;
  }
  v42 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 8) != 0) {
    goto LABEL_57;
  }
LABEL_46:
  if ((v48 & 0x10) == 0) {
    goto LABEL_47;
  }
LABEL_60:
  uint64_t v61 = *((void *)this + 25);
  uint64_t v62 = *(unsigned __int8 *)(v61 + 23);
  uint64_t v63 = *(void *)(v61 + 8);
  if ((v62 & 0x80u) == 0) {
    uint64_t v63 = v62;
  }
  v42 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v48 & 0x20) != 0)
  {
LABEL_48:
    uint64_t v49 = siri::dialogengine::CatBinary::node::ByteSizeLong(*((siri::dialogengine::CatBinary::node **)this + 26));
    v42 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_49:
  uint64_t v50 = *((void *)this + 1);
  if (v50)
  {
    unint64_t v64 = v50 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v64 + 23) < 0) {
      uint64_t v65 = *(void *)(v64 + 8);
    }
    else {
      uint64_t v65 = *(unsigned __int8 *)(v64 + 23);
    }
    v42 += v65;
  }
  *((_DWORD *)this + 5) = v42;
  return v42;
}

void siri::dialogengine::CatBinary::cat::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::cat *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::cat::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::cat::MergeFrom(siri::dialogengine::CatBinary::cat *this, const siri::dialogengine::CatBinary::cat *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 883);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::metadata>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::parameter>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 18, (uint64_t)a2 + 144);
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 21);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 21);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 168, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 22);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 22);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 176, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      unint64_t v11 = (std::string *)*((void *)this + 23);
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v12 = (const std::string *)*((void *)a2 + 23);
      if (v11 != v12)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 184, (uint64_t)v12);
        }
        std::string::operator=(v11, v12);
      }
    }
    if ((v6 & 8) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 24);
      *((_DWORD *)this + 4) |= 8u;
      uint64_t v14 = (const std::string *)*((void *)a2 + 24);
      if (v13 != v14)
      {
        if (v13 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 192, (uint64_t)v14);
        }
        std::string::operator=(v13, v14);
      }
    }
    if ((v6 & 0x10) != 0)
    {
      uint64_t v15 = (std::string *)*((void *)this + 25);
      *((_DWORD *)this + 4) |= 0x10u;
      uint64_t v16 = (const std::string *)*((void *)a2 + 25);
      if (v15 != v16)
      {
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 200, (uint64_t)v16);
        }
        std::string::operator=(v15, v16);
      }
    }
    if ((v6 & 0x20) != 0)
    {
      *((_DWORD *)this + 4) |= 0x20u;
      uint64_t v17 = (siri::dialogengine::CatBinary::node *)*((void *)this + 26);
      if (!v17)
      {
        uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::node>(0);
        *((void *)this + 26) = v17;
      }
      if (*((void *)a2 + 26)) {
        int v18 = (const siri::dialogengine::CatBinary::node *)*((void *)a2 + 26);
      }
      else {
        int v18 = (const siri::dialogengine::CatBinary::node *)&siri::dialogengine::CatBinary::_node_default_instance_;
      }
      siri::dialogengine::CatBinary::node::MergeFrom(v17, v18);
    }
  }
}

void sub_1C5E0016C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::metadata>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::metadata **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::metadata **)v7;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::metadata>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      int v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::metadata **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::metadata **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::metadata>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::metadata>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5E002DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::parameter>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::parameter **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::parameter **)v7;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::parameter>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      int v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::parameter **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::parameter **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::parameter>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::parameter>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5E0044C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>(int **this, uint64_t a2)
{
  if ((int **)a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v28, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1632);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v28, "CHECK failed: (&other) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v28[0].__r_.__value_.__l.__data_);
  }
  int v5 = *(_DWORD *)(a2 + 8);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, *(_DWORD *)(a2 + 8));
    uint64_t v8 = v7;
    uint64_t v9 = *this[2];
    uint64_t v10 = *((int *)this + 2);
    int v11 = v9 - v10;
    if ((int)v9 - (int)v10 >= v5) {
      uint64_t v12 = v5;
    }
    else {
      uint64_t v12 = v11;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v13 = (siri::dialogengine::CatBinary::condition **)(v6 + 8);
      uint64_t v14 = (siri::dialogengine::CatBinary::condition **)v7;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t v15 = v16;
        uint64_t v17 = *v14++;
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition>::Merge(v15, v17);
        --v12;
      }
      while (v12);
    }
    if (v11 < v5)
    {
      int v18 = (google::protobuf::internal::ArenaImpl *)*this;
      int v19 = v10 + v5 - v9;
      uint64_t v20 = 8 * v9 - 8 * v10;
      uint64_t v21 = (siri::dialogengine::CatBinary::condition **)((char *)v8 + v20);
      uint64_t v22 = (siri::dialogengine::CatBinary::condition **)(v20 + v6 + 8);
      do
      {
        uint64_t v23 = *v22++;
        uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::condition>(v18);
        google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition>::Merge(v23, v24);
        *v21++ = v24;
        --v19;
      }
      while (v19);
    }
    int v25 = *((_DWORD *)this + 2) + v5;
    *((_DWORD *)this + 2) = v25;
    uint64_t v26 = this[2];
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
}

void sub_1C5E005BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::condition>::Merge(siri::dialogengine::CatBinary::condition *a1, siri::dialogengine::CatBinary::condition *this)
{
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::parameter>::Merge(siri::dialogengine::CatBinary::parameter *a1, siri::dialogengine::CatBinary::parameter *this)
{
}

void google::protobuf::internal::GenericTypeHandler<siri::dialogengine::CatBinary::metadata>::Merge(siri::dialogengine::CatBinary::metadata *a1, siri::dialogengine::CatBinary::metadata *this)
{
}

BOOL siri::dialogengine::CatBinary::cat::IsInitialized(siri::dialogengine::CatBinary::cat *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = (char *)this + 72;
  int v3 = *((_DWORD *)this + 20);
  while (1)
  {
    BOOL v4 = __OFSUB__(v3--, 1);
    if (v3 < 0 != v4) {
      break;
    }
    uint64_t v5 = google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>((uint64_t)v2, v3);
    if (!google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>>(v5 + 24)) {
      return 0;
    }
  }
  BOOL result = google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>((uint64_t)this + 96);
  if (!result) {
    return result;
  }
  BOOL result = google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>((uint64_t)this + 120);
  if (!result) {
    return result;
  }
  BOOL result = google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>((uint64_t)this + 144);
  if (!result) {
    return result;
  }
  if ((*((_DWORD *)this + 4) & 0x20) == 0) {
    return 1;
  }
  uint64_t v7 = *((void *)this + 26);
  if (!v7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.h", 3139);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: !value || root_ != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v7 = *((void *)this + 26);
  }
  if ((*(unsigned char *)(v7 + 17) & 0x10) == 0) {
    return 0;
  }
  BOOL result = google::protobuf::internal::AllAreInitialized<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>>(v7 + 24);
  if (result) {
    return 1;
  }
  return result;
}

void sub_1C5E006FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::CatBinary::cat::Clear(siri::dialogengine::CatBinary::cat *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((v2 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  else if (v2)
  {
    int v3 = (siri::dialogengine::CatBinary::metadata **)(*((void *)this + 5) + 8);
    do
    {
      BOOL v4 = *v3++;
      siri::dialogengine::CatBinary::metadata::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 14);
  if ((v6 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    char v9 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  else if (v6)
  {
    uint64_t v7 = (siri::dialogengine::CatBinary::parameter **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v8 = *v7++;
      siri::dialogengine::CatBinary::parameter::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v10 = *((unsigned int *)this + 20);
  if ((v10 & 0x80000000) != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1613);
    uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: (n) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
  }
  else if (v10)
  {
    int v11 = (siri::dialogengine::CatBinary::condition **)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v12 = *v11++;
      siri::dialogengine::CatBinary::condition::Clear(v12);
      --v10;
    }
    while (v10);
    *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  }
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 96);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 120);
  google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((uint64_t)this + 144);
  int v14 = *((_DWORD *)this + 4);
  if ((v14 & 0x3F) != 0)
  {
    if ((v14 & 1) == 0)
    {
      if ((v14 & 2) == 0) {
        goto LABEL_22;
      }
LABEL_31:
      uint64_t v16 = *((void *)this + 22);
      if (*(char *)(v16 + 23) < 0)
      {
        **(unsigned char **)uint64_t v16 = 0;
        *(void *)(v16 + 8) = 0;
        if ((v14 & 4) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v16 = 0;
        *(unsigned char *)(v16 + 23) = 0;
        if ((v14 & 4) != 0) {
          goto LABEL_35;
        }
      }
LABEL_23:
      if ((v14 & 8) == 0) {
        goto LABEL_24;
      }
LABEL_39:
      uint64_t v18 = *((void *)this + 24);
      if (*(char *)(v18 + 23) < 0)
      {
        **(unsigned char **)uint64_t v18 = 0;
        *(void *)(v18 + 8) = 0;
        if ((v14 & 0x10) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        *(unsigned char *)uint64_t v18 = 0;
        *(unsigned char *)(v18 + 23) = 0;
        if ((v14 & 0x10) != 0) {
          goto LABEL_43;
        }
      }
LABEL_25:
      if ((v14 & 0x20) == 0) {
        goto LABEL_50;
      }
LABEL_47:
      uint64_t v20 = (siri::dialogengine::CatBinary::node *)*((void *)this + 26);
      if (!v20)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 521);
        uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v25, "CHECK failed: root_ != nullptr: ");
        google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v21->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
        uint64_t v20 = (siri::dialogengine::CatBinary::node *)*((void *)this + 26);
      }
      siri::dialogengine::CatBinary::node::Clear(v20);
      goto LABEL_50;
    }
    uint64_t v15 = *((void *)this + 21);
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)uint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v14 & 2) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v14 & 2) != 0) {
        goto LABEL_31;
      }
    }
LABEL_22:
    if ((v14 & 4) == 0) {
      goto LABEL_23;
    }
LABEL_35:
    uint64_t v17 = *((void *)this + 23);
    if (*(char *)(v17 + 23) < 0)
    {
      **(unsigned char **)uint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
      if ((v14 & 8) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v17 = 0;
      *(unsigned char *)(v17 + 23) = 0;
      if ((v14 & 8) != 0) {
        goto LABEL_39;
      }
    }
LABEL_24:
    if ((v14 & 0x10) == 0) {
      goto LABEL_25;
    }
LABEL_43:
    uint64_t v19 = *((void *)this + 25);
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)uint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v14 & 0x20) == 0) {
        goto LABEL_50;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
      if ((v14 & 0x20) == 0) {
        goto LABEL_50;
      }
    }
    goto LABEL_47;
  }
LABEL_50:
  char v23 = *((unsigned char *)this + 8);
  uint64_t v22 = (siri::dialogengine::CatBinary::cat *)((char *)this + 8);
  *((_DWORD *)v22 + 2) = 0;
  if (v23) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v22);
  }
}

void sub_1C5E009F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

siri::dialogengine::CatBinary::cat *siri::dialogengine::CatBinary::cat::New(siri::dialogengine::CatBinary::cat *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::cat>(a2);
}

siri::dialogengine::CatBinary::cat *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::cat>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::cat *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0xD8uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::cat>);
  }
  siri::dialogengine::CatBinary::cat::cat(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5E00AC0(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40C855E4CBLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::cat>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::cat *siri::dialogengine::CatBinary::cat::New(siri::dialogengine::CatBinary::cat *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::cat>(0);
}

void *siri::dialogengine::CatBinary::cat::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.cat");
}

void siri::dialogengine::CatBinary::cat::~cat(siri::dialogengine::CatBinary::cat *this)
{
  siri::dialogengine::CatBinary::cat::~cat(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  *(void *)this = &unk_1F211D630;
  uint64_t v2 = *((void *)this + 21);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  BOOL v4 = *((void *)this + 22);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  uint64_t v6 = *((void *)this + 23);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  uint64_t v8 = *((void *)this + 24);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string && v8 != 0)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    MEMORY[0x1C8796D70](v8, 0x1012C40EC159624);
  }
  uint64_t v10 = *((void *)this + 25);
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string && v10)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    MEMORY[0x1C8796D70](v10, 0x1012C40EC159624);
  }
  if (this != (siri::dialogengine::CatBinary::cat *)&siri::dialogengine::CatBinary::_cat_default_instance_)
  {
    int v11 = *((void *)this + 26);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 144));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 120));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 96));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 72));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 48));
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField((siri::dialogengine::CatBinary::cat *)((char *)this + 24));
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_vcat_item_repetition_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::vcat_item_repetition::vcat_item_repetition((siri::dialogengine::CatBinary::vcat_item_repetition *)&siri::dialogengine::CatBinary::_vcat_item_repetition_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_vcat_item_repetition_default_instance_, v4);
}

siri::dialogengine::CatBinary::vcat_item_repetition *siri::dialogengine::CatBinary::vcat_item_repetition::vcat_item_repetition(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  *(void *)this = &unk_1F211DAB0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_vcat_item_repetition_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_repetition_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1C5E00E20(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::vcat_item_repetition::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::vcat_item_repetition *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  BOOL v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    BOOL v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  BOOL v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    BOOL v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 5), (char *)v4);
LABEL_5:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    int v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)(v9 + 23);
    int v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::vcat_item_repetition::_InternalParse(siri::dialogengine::CatBinary::vcat_item_repetition *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v17 = a2;
  uint64_t v5 = (char *)this + 40;
  int v6 = (char *)this + 32;
  uint64_t v7 = (char *)this + 24;
  uint64_t v8 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v17, *((_DWORD *)a3 + 23))) {
      return v17;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v17 + 1);
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)v17;
    if ((*(char *)v17 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v10 = (const char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
      uint64_t v17 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, v10);
    uint64_t v17 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    unsigned int v11 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        *((_DWORD *)this + 4) |= 4u;
        uint64_t v15 = (std::string *)*((void *)this + 5);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_26;
      }
    }
    else if (v11 == 2)
    {
      if (v10 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v15 = (std::string *)*((void *)this + 4);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_26;
      }
    }
    else if (v11 == 1 && v10 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v15 = (std::string *)*((void *)this + 3);
      if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
LABEL_26:
      int v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_27;
    }
    if (!v10 || (v10 & 7) == 4) {
      break;
    }
    int v14 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v10, v8, TagFallback, a3);
LABEL_27:
    uint64_t v17 = v14;
    if (!v14) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
  return TagFallback;
}

uint64_t siri::dialogengine::CatBinary::vcat_item_repetition::GetCachedSize(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_repetition::ByteSizeLong(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    uint64_t v3 = *((void *)this + 3);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 5);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *((void *)this + 1);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0) {
      uint64_t v15 = *(void *)(v14 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    }
    v2 += v15;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void siri::dialogengine::CatBinary::vcat_item_repetition::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::vcat_item_repetition *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::vcat_item_repetition::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::vcat_item_repetition::MergeFrom(siri::dialogengine::CatBinary::vcat_item_repetition *this, const siri::dialogengine::CatBinary::vcat_item_repetition *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 3909);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 5);
      uint64_t v12 = (char *)this + 40;
      uint64_t v11 = v13;
      *((_DWORD *)v12 - 6) |= 4u;
      unint64_t v14 = (const std::string *)*((void *)a2 + 5);
      if (v13 != v14)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v12, (uint64_t)v14);
        }
        std::string::operator=(v11, v14);
      }
    }
  }
}

void sub_1C5E01434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_repetition::IsInitialized(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  return 1;
}

void siri::dialogengine::CatBinary::vcat_item_repetition::Clear(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    uint64_t v2 = *((void *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v4 = *((void *)this + 5);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t v3 = *((void *)this + 4);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *((unsigned char *)this + 8);
  uint64_t v5 = (siri::dialogengine::CatBinary::vcat_item_repetition *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if (v6) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v5);
  }
}

siri::dialogengine::CatBinary::vcat_item_repetition *siri::dialogengine::CatBinary::vcat_item_repetition::New(siri::dialogengine::CatBinary::vcat_item_repetition *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(a2);
}

siri::dialogengine::CatBinary::vcat_item_repetition *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::vcat_item_repetition *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item_repetition>);
  }
  siri::dialogengine::CatBinary::vcat_item_repetition::vcat_item_repetition(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5E01598(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40CA074DDCLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item_repetition>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::vcat_item_repetition *siri::dialogengine::CatBinary::vcat_item_repetition::New(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(0);
}

void *siri::dialogengine::CatBinary::vcat_item_repetition::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.vcat_item.repetition");
}

void siri::dialogengine::CatBinary::vcat_item_repetition::~vcat_item_repetition(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  siri::dialogengine::CatBinary::vcat_item_repetition::~vcat_item_repetition(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  *(void *)this = &unk_1F211DAB0;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  char v6 = *((void *)this + 5);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_vcat_item_expression_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::vcat_item_expression::vcat_item_expression((siri::dialogengine::CatBinary::vcat_item_expression *)&siri::dialogengine::CatBinary::_vcat_item_expression_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_vcat_item_expression_default_instance_, v4);
}

siri::dialogengine::CatBinary::vcat_item_expression *siri::dialogengine::CatBinary::vcat_item_expression::vcat_item_expression(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  *(void *)this = &unk_1F211DA20;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_vcat_item_expression_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_expression_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  return this;
}

void sub_1C5E0181C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::vcat_item_expression::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::vcat_item_expression *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 2, *((const void ***)this + 4), (char *)v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 3, *((const void ***)this + 5), (char *)v4);
LABEL_5:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    uint64_t v11 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 8);
  }
  else
  {
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = (void *)v9;
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v12 = (int)v10;
    memcpy(v4, v11, (int)v10);
    v4 += v12;
    return v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v11, v10, v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::vcat_item_expression::_InternalParse(siri::dialogengine::CatBinary::vcat_item_expression *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v17 = a2;
  uint64_t v5 = (char *)this + 40;
  int v6 = (char *)this + 32;
  uint64_t v7 = (char *)this + 24;
  uint64_t v8 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v17, *((_DWORD *)a3 + 23))) {
      return v17;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v17 + 1);
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)v17;
    if ((*(char *)v17 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v10 = (const char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
      uint64_t v17 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, v10);
    uint64_t v17 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    unsigned int v11 = v10 >> 3;
    if (v10 >> 3 == 3)
    {
      if (v10 == 26)
      {
        *((_DWORD *)this + 4) |= 4u;
        char v15 = (std::string *)*((void *)this + 5);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_26;
      }
    }
    else if (v11 == 2)
    {
      if (v10 == 18)
      {
        *((_DWORD *)this + 4) |= 2u;
        char v15 = (std::string *)*((void *)this + 4);
        if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_26;
      }
    }
    else if (v11 == 1 && v10 == 10)
    {
      *((_DWORD *)this + 4) |= 1u;
      char v15 = (std::string *)*((void *)this + 3);
      if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
      }
LABEL_26:
      unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)TagFallback, (uint64_t)a3);
      goto LABEL_27;
    }
    if (!v10 || (v10 & 7) == 4) {
      break;
    }
    unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v10, v8, TagFallback, a3);
LABEL_27:
    uint64_t v17 = v14;
    if (!v14) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
  return TagFallback;
}

uint64_t siri::dialogengine::CatBinary::vcat_item_expression::GetCachedSize(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_expression::ByteSizeLong(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    uint64_t v3 = *((void *)this + 3);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)this + 4);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 5);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *((void *)this + 1);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0) {
      uint64_t v15 = *(void *)(v14 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    }
    v2 += v15;
  }
  *((_DWORD *)this + 5) = v2;
  return v2;
}

void siri::dialogengine::CatBinary::vcat_item_expression::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::vcat_item_expression *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::vcat_item_expression::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::vcat_item_expression::MergeFrom(siri::dialogengine::CatBinary::vcat_item_expression *this, const siri::dialogengine::CatBinary::vcat_item_expression *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 3636);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
    if ((v6 & 4) != 0)
    {
      uint64_t v13 = (std::string *)*((void *)this + 5);
      uint64_t v12 = (char *)this + 40;
      uint64_t v11 = v13;
      *((_DWORD *)v12 - 6) |= 4u;
      unint64_t v14 = (const std::string *)*((void *)a2 + 5);
      if (v13 != v14)
      {
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v12, (uint64_t)v14);
        }
        std::string::operator=(v11, v14);
      }
    }
  }
}

void sub_1C5E01E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_expression::IsInitialized(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  return 1;
}

void siri::dialogengine::CatBinary::vcat_item_expression::Clear(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    uint64_t v2 = *((void *)this + 3);
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v4 = *((void *)this + 5);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  uint64_t v3 = *((void *)this + 4);
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *((unsigned char *)this + 8);
  uint64_t v5 = (siri::dialogengine::CatBinary::vcat_item_expression *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if (v6) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v5);
  }
}

siri::dialogengine::CatBinary::vcat_item_expression *siri::dialogengine::CatBinary::vcat_item_expression::New(siri::dialogengine::CatBinary::vcat_item_expression *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(a2);
}

siri::dialogengine::CatBinary::vcat_item_expression *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::vcat_item_expression *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x30uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item_expression>);
  }
  siri::dialogengine::CatBinary::vcat_item_expression::vcat_item_expression(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5E01F94(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C40CA074DDCLL);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item_expression>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::vcat_item_expression *siri::dialogengine::CatBinary::vcat_item_expression::New(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(0);
}

void *siri::dialogengine::CatBinary::vcat_item_expression::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.vcat_item.expression");
}

void siri::dialogengine::CatBinary::vcat_item_expression::~vcat_item_expression(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  siri::dialogengine::CatBinary::vcat_item_expression::~vcat_item_expression(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  *(void *)this = &unk_1F211DA20;
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  char v6 = *((void *)this + 5);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string && v6 != 0)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    MEMORY[0x1C8796D70](v6, 0x1012C40EC159624);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_vcat_item_CatBinary_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", a4);
  siri::dialogengine::CatBinary::vcat_item::vcat_item((siri::dialogengine::CatBinary::vcat_item *)&siri::dialogengine::CatBinary::_vcat_item_default_instance_);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&siri::dialogengine::CatBinary::_vcat_item_default_instance_, v4);
}

siri::dialogengine::CatBinary::vcat_item *siri::dialogengine::CatBinary::vcat_item::vcat_item(siri::dialogengine::CatBinary::vcat_item *this)
{
  *(void *)this = &unk_1F211DB40;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_vcat_item_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_CatBinary_2eproto);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  *((_DWORD *)this + 12) = 0;
  return this;
}

void sub_1C5E02218(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *siri::dialogengine::CatBinary::vcat_item::InternalSerializeWithCachedSizesToArray(siri::dialogengine::CatBinary::vcat_item *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 1, *((const void ***)this + 3), a2);
  }
  int v7 = *((_DWORD *)this + 12);
  if (v7 == 3)
  {
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v11 = (siri::dialogengine::CatBinary::vcat_item_repetition *)*((void *)this + 5);
    *uint64_t v4 = 26;
    unsigned int v12 = *((_DWORD *)v11 + 5);
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v15 = v12 >> 7;
      if (v12 >> 14)
      {
        uint64_t v21 = v4 + 2;
        do
        {
          uint64_t v22 = v21;
          *v21++ = v15 | 0x80;
          unsigned int v23 = v15 >> 7;
          unsigned int v24 = v15 >> 14;
          v15 >>= 7;
        }
        while (v24);
        uint64_t v13 = v22 + 2;
        unsigned char *v21 = v23;
      }
      else
      {
        void v4[2] = v15;
        uint64_t v13 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v12;
      uint64_t v13 = v4 + 2;
    }
    uint64_t v20 = siri::dialogengine::CatBinary::vcat_item_repetition::InternalSerializeWithCachedSizesToArray(v11, v13, a3);
  }
  else
  {
    if (v7 != 2) {
      goto LABEL_26;
    }
    if ((unint64_t)v4 >= *(void *)a3) {
      uint64_t v4 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v8 = (siri::dialogengine::CatBinary::vcat_item_expression *)*((void *)this + 5);
    *uint64_t v4 = 18;
    unsigned int v9 = *((_DWORD *)v8 + 5);
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unsigned int v14 = v9 >> 7;
      if (v9 >> 14)
      {
        uint64_t v16 = v4 + 2;
        do
        {
          uint64_t v17 = v16;
          *v16++ = v14 | 0x80;
          unsigned int v18 = v14 >> 7;
          unsigned int v19 = v14 >> 14;
          v14 >>= 7;
        }
        while (v19);
        uint64_t v10 = v17 + 2;
        *uint64_t v16 = v18;
      }
      else
      {
        void v4[2] = v14;
        uint64_t v10 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v9;
      uint64_t v10 = v4 + 2;
    }
    uint64_t v20 = siri::dialogengine::CatBinary::vcat_item_expression::InternalSerializeWithCachedSizesToArray(v8, v10, a3);
  }
  uint64_t v4 = (char *)v20;
LABEL_26:
  if ((v6 & 2) != 0) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, 4, *((const void ***)this + 4), v4);
  }
  int v25 = *((_DWORD *)this + 12);
  if ((v25 - 5) <= 1) {
    uint64_t v4 = (char *)google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliased(a3, v25, *((const void ***)this + 5), v4);
  }
  uint64_t v26 = *((void *)this + 1);
  if ((v26 & 1) == 0) {
    return (unsigned __int8 *)v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v28 + 23) < 0)
  {
    int v30 = *(void **)v28;
    uint64_t v29 = *(void *)(v28 + 8);
  }
  else
  {
    LODWORD(v29) = *(unsigned __int8 *)(v28 + 23);
    int v30 = (void *)v28;
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v31 = (int)v29;
    memcpy(v4, v30, (int)v29);
    v4 += v31;
    return (unsigned __int8 *)v4;
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, (char *)v30, v29, (unsigned __int8 *)v4);
}

google::protobuf::internal *siri::dialogengine::CatBinary::vcat_item::_InternalParse(siri::dialogengine::CatBinary::vcat_item *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v34 = a2;
  uint64_t v5 = (siri::dialogengine::CatBinary::vcat_item_expression **)((char *)this + 40);
  int v6 = (char *)this + 32;
  int v7 = (char *)this + 24;
  uint64_t v8 = (unint64_t *)((char *)this + 8);
  while (2)
  {
    if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v34, *((_DWORD *)a3 + 23))) {
      return v34;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v34 + 1);
    LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)v34;
    if ((*(char *)v34 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    uint64_t v10 = (const char *)(v10 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v34 + 2);
LABEL_6:
      uint64_t v34 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v34, v10);
    uint64_t v34 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 4) |= 1u;
        uint64_t v11 = (std::string *)*((void *)this + 3);
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v7, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_43;
      case 2u:
        if (v10 != 18) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) == 2)
        {
          unsigned int v12 = *v5;
        }
        else
        {
          siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
          *((_DWORD *)this + 12) = 2;
          unsigned int v12 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(0);
          *((void *)this + 5) = v12;
          TagFallbacint k = v34;
        }
        unsigned int v17 = *(unsigned __int8 *)TagFallback;
        if (*(char *)TagFallback < 0)
        {
          SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(TagFallback, (const char *)*(unsigned __int8 *)TagFallback);
          if (!SizeFallback) {
            goto LABEL_58;
          }
          unsigned int v18 = SizeFallback;
          unsigned int v17 = v22;
        }
        else
        {
          unsigned int v18 = (char *)TagFallback + 1;
        }
        int v23 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v18, v17);
        int v24 = *((_DWORD *)a3 + 22);
        BOOL v25 = __OFSUB__(v24--, 1);
        *((_DWORD *)a3 + 22) = v24;
        if (v24 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v23;
        char v27 = siri::dialogengine::CatBinary::vcat_item_expression::_InternalParse(v12, (google::protobuf::internal *)v18, a3);
        if (!v27) {
          goto LABEL_58;
        }
        goto LABEL_55;
      case 3u:
        if (v10 != 26) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) == 3)
        {
          uint64_t v13 = *v5;
        }
        else
        {
          siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
          *((_DWORD *)this + 12) = 3;
          uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(0);
          *((void *)this + 5) = v13;
          TagFallbacint k = v34;
        }
        unsigned int v19 = *(unsigned __int8 *)TagFallback;
        if (*(char *)TagFallback < 0)
        {
          unint64_t v28 = google::protobuf::internal::ReadSizeFallback(TagFallback, (const char *)*(unsigned __int8 *)TagFallback);
          if (!v28) {
            goto LABEL_58;
          }
          uint64_t v20 = v28;
          unsigned int v19 = v29;
        }
        else
        {
          uint64_t v20 = (char *)TagFallback + 1;
        }
        int v30 = google::protobuf::internal::EpsCopyInputStream::PushLimit(a3, v20, v19);
        int v31 = *((_DWORD *)a3 + 22);
        BOOL v25 = __OFSUB__(v31--, 1);
        *((_DWORD *)a3 + 22) = v31;
        if (v31 < 0 != v25) {
          goto LABEL_58;
        }
        int v26 = v30;
        char v27 = siri::dialogengine::CatBinary::vcat_item_repetition::_InternalParse(v13, (google::protobuf::internal *)v20, a3);
        if (!v27) {
          goto LABEL_58;
        }
LABEL_55:
        ++*((_DWORD *)a3 + 22);
        if (*((_DWORD *)a3 + 20)) {
          goto LABEL_58;
        }
        int v32 = *((_DWORD *)a3 + 7) + v26;
        *((_DWORD *)a3 + 7) = v32;
        *(void *)a3 = *((void *)a3 + 1) + (v32 & (v32 >> 31));
        uint64_t v34 = v27;
        continue;
      case 4u:
        if (v10 != 34) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 4) |= 2u;
        uint64_t v11 = (std::string *)*((void *)this + 4);
        if (v11 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v6, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
        goto LABEL_43;
      case 5u:
        if (v10 != 42) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) == 5) {
          goto LABEL_25;
        }
        siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
        int v14 = 5;
        goto LABEL_41;
      case 6u:
        if (v10 != 50) {
          goto LABEL_27;
        }
        if (*((_DWORD *)this + 12) != 6)
        {
          siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
          int v14 = 6;
LABEL_41:
          *((_DWORD *)this + 12) = v14;
          *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_42:
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)v5, (uint64_t)&google::protobuf::internal::fixed_address_empty_string);
        }
LABEL_25:
        uint64_t v11 = (std::string *)*v5;
        if (*v5 == (siri::dialogengine::CatBinary::vcat_item_expression *)&google::protobuf::internal::fixed_address_empty_string) {
          goto LABEL_42;
        }
LABEL_43:
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v11, (std::string::value_type *)TagFallback, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_27:
        if (v10) {
          BOOL v15 = (v10 & 7) == 4;
        }
        else {
          BOOL v15 = 1;
        }
        if (v15)
        {
          *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v10 - 1;
          return TagFallback;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v10, v8, TagFallback, a3);
LABEL_44:
        uint64_t v34 = v16;
        if (v16) {
          continue;
        }
LABEL_58:
        TagFallbacint k = 0;
        break;
    }
    return TagFallback;
  }
}

uint64_t siri::dialogengine::CatBinary::vcat_item::clear_item(uint64_t this)
{
  uint64_t v1 = this;
  switch(*(_DWORD *)(this + 48))
  {
    case 2:
    case 3:
      this = *(void *)(this + 40);
      if (this) {
        this = (*(uint64_t (**)(uint64_t))(*(void *)this + 8))(this);
      }
      break;
    case 5:
    case 6:
      uint64_t v2 = *(void *)(this + 40);
      if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
      {
        if (*(char *)(v2 + 23) < 0) {
          operator delete(*(void **)v2);
        }
        this = MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
      }
      break;
    default:
      break;
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t siri::dialogengine::CatBinary::vcat_item::GetCachedSize(siri::dialogengine::CatBinary::vcat_item *this)
{
  return *((unsigned int *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::vcat_item::ByteSizeLong(siri::dialogengine::CatBinary::vcat_item *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  uint64_t v4 = *((void *)this + 3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v7 = *((void *)this + 4);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  switch(*((_DWORD *)this + 12))
  {
    case 2:
      uint64_t v14 = siri::dialogengine::CatBinary::vcat_item_expression::ByteSizeLong(*((siri::dialogengine::CatBinary::vcat_item_expression **)this
                                                                              + 5));
      goto LABEL_16;
    case 3:
      uint64_t v14 = siri::dialogengine::CatBinary::vcat_item_repetition::ByteSizeLong(*((siri::dialogengine::CatBinary::vcat_item_repetition **)this
                                                                              + 5));
LABEL_16:
      uint64_t v13 = v3 + v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      goto LABEL_17;
    case 5:
    case 6:
      uint64_t v10 = *((void *)this + 5);
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      uint64_t v13 = v3 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
LABEL_17:
      uint64_t v3 = v13 + 1;
      break;
    default:
      break;
  }
  uint64_t v15 = *((void *)this + 1);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0) {
      uint64_t v18 = *(void *)(v17 + 8);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    }
    v3 += v18;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void siri::dialogengine::CatBinary::vcat_item::CheckTypeAndMergeFrom(siri::dialogengine::CatBinary::vcat_item *this, const google::protobuf::MessageLite *lpsrc)
{
  siri::dialogengine::CatBinary::vcat_item::MergeFrom(this, lpsrc);
}

void siri::dialogengine::CatBinary::vcat_item::MergeFrom(siri::dialogengine::CatBinary::vcat_item *this, const siri::dialogengine::CatBinary::vcat_item *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.cc", 4330);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v18, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      uint64_t v7 = (std::string *)*((void *)this + 3);
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = (const std::string *)*((void *)a2 + 3);
      if (v7 != v8)
      {
        if (v7 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v8);
        }
        std::string::operator=(v7, v8);
      }
    }
    if ((v6 & 2) != 0)
    {
      uint64_t v9 = (std::string *)*((void *)this + 4);
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v10 = (const std::string *)*((void *)a2 + 4);
      if (v9 != v10)
      {
        if (v9 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
          google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v10);
        }
        std::string::operator=(v9, v10);
      }
    }
  }
  switch(*((_DWORD *)a2 + 12))
  {
    case 2:
      if (*((_DWORD *)this + 12) == 2)
      {
        uint64_t v11 = (siri::dialogengine::CatBinary::vcat_item_expression *)*((void *)this + 5);
LABEL_27:
        uint64_t v16 = (const siri::dialogengine::CatBinary::vcat_item_expression *)*((void *)a2 + 5);
        goto LABEL_34;
      }
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      *((_DWORD *)this + 12) = 2;
      uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(0);
      *((void *)this + 5) = v11;
      if (*((_DWORD *)a2 + 12) == 2) {
        goto LABEL_27;
      }
      uint64_t v16 = (const siri::dialogengine::CatBinary::vcat_item_expression *)&siri::dialogengine::CatBinary::_vcat_item_expression_default_instance_;
LABEL_34:
      siri::dialogengine::CatBinary::vcat_item_expression::MergeFrom(v11, v16);
      return;
    case 3:
      if (*((_DWORD *)this + 12) == 3)
      {
        uint64_t v12 = (siri::dialogengine::CatBinary::vcat_item_repetition *)*((void *)this + 5);
LABEL_29:
        unint64_t v17 = (const siri::dialogengine::CatBinary::vcat_item_repetition *)*((void *)a2 + 5);
        goto LABEL_36;
      }
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      *((_DWORD *)this + 12) = 3;
      uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(0);
      *((void *)this + 5) = v12;
      if (*((_DWORD *)a2 + 12) == 3) {
        goto LABEL_29;
      }
      unint64_t v17 = (const siri::dialogengine::CatBinary::vcat_item_repetition *)&siri::dialogengine::CatBinary::_vcat_item_repetition_default_instance_;
LABEL_36:
      siri::dialogengine::CatBinary::vcat_item_repetition::MergeFrom(v12, v17);
      return;
    case 5:
      uint64_t v13 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) == 5) {
        goto LABEL_24;
      }
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      int v14 = 5;
      goto LABEL_31;
    case 6:
      uint64_t v13 = (const std::string *)*((void *)a2 + 5);
      if (*((_DWORD *)this + 12) != 6)
      {
        siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
        int v14 = 6;
LABEL_31:
        *((_DWORD *)this + 12) = v14;
        *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
LABEL_32:
        google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v13);
      }
LABEL_24:
      uint64_t v15 = (std::string *)*((void *)this + 5);
      if (v15 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
        goto LABEL_32;
      }
      std::string::operator=(v15, v13);
      return;
    default:
      return;
  }
}

void sub_1C5E02DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item::IsInitialized(siri::dialogengine::CatBinary::vcat_item *this)
{
  return *((_DWORD *)this + 4) & 1;
}

void siri::dialogengine::CatBinary::vcat_item::Clear(siri::dialogengine::CatBinary::vcat_item *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 3);
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v2 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v4 = *((void *)this + 4);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_11:
  siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
  char v6 = *((unsigned char *)this + 8);
  uint64_t v5 = (siri::dialogengine::CatBinary::vcat_item *)((char *)this + 8);
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoClear(v5);
  }
}

siri::dialogengine::CatBinary::vcat_item *siri::dialogengine::CatBinary::vcat_item::New(siri::dialogengine::CatBinary::vcat_item *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item>(a2);
}

siri::dialogengine::CatBinary::vcat_item *google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  AlignedAndAddCleanup = (siri::dialogengine::CatBinary::vcat_item *)google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x38uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item>);
  }
  siri::dialogengine::CatBinary::vcat_item::vcat_item(AlignedAndAddCleanup);
  return AlignedAndAddCleanup;
}

void sub_1C5E02F60(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x10A1C400941DAD4);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::arena_destruct_object<siri::dialogengine::CatBinary::vcat_item>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

siri::dialogengine::CatBinary::vcat_item *siri::dialogengine::CatBinary::vcat_item::New(siri::dialogengine::CatBinary::vcat_item *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item>(0);
}

void *siri::dialogengine::CatBinary::vcat_item::GetTypeName@<X0>(void *a1@<X8>)
{
  return std::string::basic_string[abi:ne180100]<0>(a1, "siri.dialogengine.CatBinary.vcat_item");
}

void siri::dialogengine::CatBinary::vcat_item::~vcat_item(siri::dialogengine::CatBinary::vcat_item *this)
{
  siri::dialogengine::CatBinary::vcat_item::~vcat_item(this);
  JUMPOUT(0x1C8796D70);
}

{
  uint64_t v2;
  uint64_t v4;

  *(void *)this = &unk_1F211DB40;
  int v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    MEMORY[0x1C8796D70](v2, 0x1012C40EC159624);
  }
  uint64_t v4 = *((void *)this + 4);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    MEMORY[0x1C8796D70](v4, 0x1012C40EC159624);
  }
  if (*((_DWORD *)this + 12)) {
    siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
  }
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

BOOL siri::dialogengine::CatBinary::condition_entry_ConditionElementType_IsValid(siri::dialogengine::CatBinary *this)
{
  return this < 5;
}

uint64_t *siri::dialogengine::CatBinary::condition_entry_ConditionElementType_Name(int a1)
{
  {
    siri::dialogengine::CatBinary::condition_entry_ConditionElementType_Name(siri::dialogengine::CatBinary::condition_entry_ConditionElementType)::dummy = google::protobuf::internal::InitializeEnumStrings((uint64_t)&siri::dialogengine::CatBinary::condition_entry_ConditionElementType_entries, siri::dialogengine::CatBinary::condition_entry_ConditionElementType_entries_by_number, (char *)5, (void (*)(const void *))&siri::dialogengine::CatBinary::condition_entry_ConditionElementType_strings);
  }
  int v2 = (google::protobuf::internal *)google::protobuf::internal::LookUpEnumName((uint64_t)&siri::dialogengine::CatBinary::condition_entry_ConditionElementType_entries, siri::dialogengine::CatBinary::condition_entry_ConditionElementType_entries_by_number, 5uLL, a1);
  if (v2 != -1) {
    return (uint64_t *)((char *)&siri::dialogengine::CatBinary::condition_entry_ConditionElementType_strings
  }
                     + 24 * (int)v2);
  google::protobuf::internal::InitProtobufDefaults(v2);
  return &google::protobuf::internal::fixed_address_empty_string;
}

void sub_1C5E031A0(_Unwind_Exception *a1)
{
}

uint64_t siri::dialogengine::CatBinary::condition_entry_ConditionElementType_Parse(uint64_t *a1, _DWORD *a2, const char *a3)
{
  int v6 = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a1, a3);
  uint64_t result = google::protobuf::internal::LookUpEnumValue((uint64_t)&siri::dialogengine::CatBinary::condition_entry_ConditionElementType_entries, 5uLL, v5[0], (int64_t)v5[1], &v6);
  if (result) {
    *a2 = v6;
  }
  return result;
}

BOOL siri::dialogengine::CatBinary::node_NodeType_IsValid(siri::dialogengine::CatBinary *this)
{
  return this < 7;
}

uint64_t *siri::dialogengine::CatBinary::node_NodeType_Name(int a1)
{
  {
    siri::dialogengine::CatBinary::node_NodeType_Name(siri::dialogengine::CatBinary::node_NodeType)::dummy = google::protobuf::internal::InitializeEnumStrings((uint64_t)&siri::dialogengine::CatBinary::node_NodeType_entries, siri::dialogengine::CatBinary::node_NodeType_entries_by_number, (char *)7, (void (*)(const void *))&siri::dialogengine::CatBinary::node_NodeType_strings);
  }
  int v2 = (google::protobuf::internal *)google::protobuf::internal::LookUpEnumName((uint64_t)&siri::dialogengine::CatBinary::node_NodeType_entries, siri::dialogengine::CatBinary::node_NodeType_entries_by_number, 7uLL, a1);
  if (v2 != -1) {
    return (uint64_t *)((char *)&siri::dialogengine::CatBinary::node_NodeType_strings + 24 * (int)v2);
  }
  google::protobuf::internal::InitProtobufDefaults(v2);
  return &google::protobuf::internal::fixed_address_empty_string;
}

void sub_1C5E032DC(_Unwind_Exception *a1)
{
}

uint64_t siri::dialogengine::CatBinary::node_NodeType_Parse(uint64_t *a1, _DWORD *a2, const char *a3)
{
  int v6 = 0;
  google::protobuf::StringPiece::StringPiece<std::allocator<char>>(v5, a1, a3);
  uint64_t result = google::protobuf::internal::LookUpEnumValue((uint64_t)&siri::dialogengine::CatBinary::node_NodeType_entries, 7uLL, v5[0], (int64_t)v5[1], &v6);
  if (result) {
    *a2 = v6;
  }
  return result;
}

void siri::dialogengine::CatBinary::cat::InitAsDefaultInstance(siri::dialogengine::CatBinary::cat *this)
{
  qword_1EA3DA930 = (uint64_t)&siri::dialogengine::CatBinary::_node_default_instance_;
}

uint64_t siri::dialogengine::CatBinary::cat::_Internal::root(siri::dialogengine::CatBinary::cat::_Internal *this, const siri::dialogengine::CatBinary::cat *a2)
{
  return *((void *)this + 26);
}

siri::dialogengine::CatBinary::cat *siri::dialogengine::CatBinary::cat::cat(siri::dialogengine::CatBinary::cat *this, const siri::dialogengine::CatBinary::cat *a2)
{
  *(void *)this = &unk_1F211D630;
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::metadata>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::parameter>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  *((void *)this + 9) = 0;
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *((void *)this + 11) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition>::TypeHandler>((int **)this + 9, (uint64_t)a2 + 72);
  *((void *)this + 12) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 12, (uint64_t)a2 + 96);
  *((void *)this + 15) = 0;
  *((void *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *((void *)this + 17) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 15, (uint64_t)a2 + 120);
  *((void *)this + 18) = 0;
  *((void *)this + 19) = 0;
  *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 18, (uint64_t)a2 + 144);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 21) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)*((void *)a2 + 21);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 168, (uint64_t)v7);
    }
  }
  *((void *)this + 22) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)*((void *)a2 + 22);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 176, (uint64_t)v8);
    }
  }
  *((void *)this + 23) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 23);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 184, (uint64_t)v9);
    }
  }
  *((void *)this + 24) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)*((void *)a2 + 24);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 192, (uint64_t)v10);
    }
  }
  *((void *)this + 25) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 25);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 200, (uint64_t)v11);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (!*((void *)a2 + 26))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/CatBinary.pb.h", 3139);
      uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: !value || root_ != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    }
    operator new();
  }
  *((void *)this + 26) = 0;
  return this;
}

void sub_1C5E035BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v9);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v8);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v7);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v6);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v5);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v4);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v3);
  _Unwind_Resume(a1);
}

siri::dialogengine::CatBinary::node *siri::dialogengine::CatBinary::node::node(siri::dialogengine::CatBinary::node *this, const siri::dialogengine::CatBinary::node *a2)
{
  *(void *)this = &unk_1F211D990;
  *((void *)this + 1) = 0;
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::node>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::visual_parameter>::TypeHandler>((int **)this + 6, (uint64_t)a2 + 48);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)*((void *)a2 + 9);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v7);
    }
  }
  *((void *)this + 1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)*((void *)a2 + 10);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 80, (uint64_t)v8);
    }
  }
  *((void *)this + 11) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 11);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 88, (uint64_t)v9);
    }
  }
  *((void *)this + 12) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    uint64_t v10 = (uint64_t *)*((void *)a2 + 12);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 96, (uint64_t)v10);
    }
  }
  *((void *)this + 13) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)*((void *)a2 + 13);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 104, (uint64_t)v11);
    }
  }
  *((void *)this + 14) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x20) != 0)
  {
    uint64_t v12 = (uint64_t *)*((void *)a2 + 14);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 112, (uint64_t)v12);
    }
  }
  *((void *)this + 15) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x40) != 0)
  {
    uint64_t v13 = (uint64_t *)*((void *)a2 + 15);
    if (v13 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 120, (uint64_t)v13);
    }
  }
  *((void *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x80) != 0)
  {
    char v14 = (uint64_t *)*((void *)a2 + 16);
    if (v14 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 128, (uint64_t)v14);
    }
  }
  *((void *)this + 17) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x100) != 0)
  {
    uint64_t v15 = (uint64_t *)*((void *)a2 + 17);
    if (v15 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 136, (uint64_t)v15);
    }
  }
  *((void *)this + 18) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x200) != 0)
  {
    uint64_t v16 = (uint64_t *)*((void *)a2 + 18);
    if (v16 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 144, (uint64_t)v16);
    }
  }
  *((void *)this + 19) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x400) != 0)
  {
    unint64_t v17 = (uint64_t *)*((void *)a2 + 19);
    if (v17 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 152, (uint64_t)v17);
    }
  }
  *((void *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 0x800) != 0)
  {
    char v18 = (uint64_t *)*((void *)a2 + 20);
    if (v18 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 160, (uint64_t)v18);
    }
  }
  uint64_t v19 = *((void *)a2 + 21);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((void *)this + 21) = v19;
  return this;
}

void sub_1C5E038DC(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v3);
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::cat::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::cat::default_instance(siri::dialogengine::CatBinary::cat *this)
{
  if (atomic_load_explicit(scc_info_cat_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_cat_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_cat_default_instance_;
}

void siri::dialogengine::CatBinary::cat::CopyFrom(siri::dialogengine::CatBinary::cat *this, const siri::dialogengine::CatBinary::cat *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::cat::Clear(this);
    siri::dialogengine::CatBinary::cat::MergeFrom(this, a2);
  }
}

void siri::dialogengine::CatBinary::cat::InternalSwap(siri::dialogengine::CatBinary::cat *this, siri::dialogengine::CatBinary::cat *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v44;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_40:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 24), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 48), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 48));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 72), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 72));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 96), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 96));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 120), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 120));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::cat *)((char *)this + 144), (siri::dialogengine::CatBinary::cat *)((char *)a2 + 144));
  uint64_t v13 = (uint64_t *)*((void *)this + 21);
  char v14 = (uint64_t **)((char *)a2 + 168);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v13 = (uint64_t *)*((void *)this + 21);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 22);
  uint64_t v20 = (uint64_t **)((char *)a2 + 176);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 22, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 22);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 22, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  std::string v21[2] = v22;
LABEL_20:
  BOOL v25 = (uint64_t *)*((void *)this + 23);
  int v26 = (uint64_t **)((char *)a2 + 184);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    BOOL v25 = (uint64_t *)*((void *)this + 23);
  }
  char v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)BOOL v25 = *(_OWORD *)v27;
  std::string v25[2] = v30;
  *(_OWORD *)char v27 = v29;
  _OWORD v27[2] = v28;
LABEL_26:
  int v31 = (uint64_t *)*((void *)this + 24);
  int v32 = (uint64_t **)((char *)a2 + 192);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 24, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v31 = (uint64_t *)*((void *)this + 24);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 24, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)int v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 25);
  uint64_t v38 = (uint64_t **)((char *)a2 + 200);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 25, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 25);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 25, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = *((void *)this + 26);
  *((void *)this + 26) = *((void *)a2 + 26);
  *((void *)a2 + 26) = v43;
}

siri::dialogengine::CatBinary::metadata *siri::dialogengine::CatBinary::metadata::metadata(siri::dialogengine::CatBinary::metadata *this, const siri::dialogengine::CatBinary::metadata *a2)
{
  *(void *)this = &unk_1F211D6C0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  return this;
}

void sub_1C5E03E00(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::metadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::metadata::default_instance(siri::dialogengine::CatBinary::metadata *this)
{
  if (atomic_load_explicit(scc_info_metadata_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_metadata_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_metadata_default_instance_;
}

void siri::dialogengine::CatBinary::metadata::CopyFrom(siri::dialogengine::CatBinary::metadata *this, const siri::dialogengine::CatBinary::metadata *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::metadata::Clear(this);
    siri::dialogengine::CatBinary::metadata::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::CatBinary::metadata::InternalSwap(siri::dialogengine::CatBinary::metadata *this, siri::dialogengine::CatBinary::metadata *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v25;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *unint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v17;
  *(__n128 *)uint64_t v15 = result;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v20 = (uint64_t *)*((void *)this + 4);
  uint64_t v18 = (std::string **)((char *)this + 32);
  uint64_t v19 = (std::string *)v20;
  uint64_t v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = *v18;
  }
  uint64_t v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v22 = *v21;
  }
  std::string::size_type v23 = v19->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  std::string::size_type v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

siri::dialogengine::CatBinary::parameter *siri::dialogengine::CatBinary::parameter::parameter(siri::dialogengine::CatBinary::parameter *this, const siri::dialogengine::CatBinary::parameter *a2)
{
  *(void *)this = &unk_1F211D750;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v8);
    }
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 8) != 0)
  {
    unint64_t v9 = (uint64_t *)*((void *)a2 + 6);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v9);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x10) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 7);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v10);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x20) != 0)
  {
    unint64_t v11 = (uint64_t *)*((void *)a2 + 8);
    if (v11 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v11);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 0x40) != 0)
  {
    int v12 = (uint64_t *)*((void *)a2 + 9);
    if (v12 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v12);
    }
  }
  __int16 v13 = *((_WORD *)a2 + 40);
  *((unsigned char *)this + 82) = *((unsigned char *)a2 + 82);
  *((_WORD *)this + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v13;
  return this;
}

void sub_1C5E041C8(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::parameter::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::parameter::default_instance(siri::dialogengine::CatBinary::parameter *this)
{
  if (atomic_load_explicit(scc_info_parameter_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_parameter_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_parameter_default_instance_;
}

void siri::dialogengine::CatBinary::parameter::CopyFrom(siri::dialogengine::CatBinary::parameter *this, const siri::dialogengine::CatBinary::parameter *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::parameter::Clear(this);
    siri::dialogengine::CatBinary::parameter::MergeFrom(this, a2);
  }
}

void siri::dialogengine::CatBinary::parameter::InternalSwap(siri::dialogengine::CatBinary::parameter *this, siri::dialogengine::CatBinary::parameter *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v58;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_52;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_52:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 4);
  uint64_t v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  std::string v21[2] = v22;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 5);
  int v26 = (uint64_t **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v25 = (uint64_t *)*((void *)this + 5);
  }
  char v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 5, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v27;
  std::string v25[2] = v30;
  *(_OWORD *)char v27 = v29;
  _OWORD v27[2] = v28;
LABEL_26:
  int v31 = (uint64_t *)*((void *)this + 6);
  int v32 = (uint64_t **)((char *)a2 + 48);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v31 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)int v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  uint64_t v37 = (uint64_t *)*((void *)this + 7);
  uint64_t v38 = (uint64_t **)((char *)a2 + 56);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v37 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = (uint64_t *)*((void *)this + 8);
  unint64_t v44 = (uint64_t **)((char *)a2 + 64);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v43 = (uint64_t *)*((void *)this + 8);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  std::string v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 9);
  uint64_t v50 = (uint64_t **)((char *)a2 + 72);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  char v55 = *((unsigned char *)this + 80);
  *((unsigned char *)this + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((unsigned char *)a2 + 80);
  *((unsigned char *)a2 + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v55;
  char v56 = *((unsigned char *)this + 81);
  *((unsigned char *)this + 81) = *((unsigned char *)a2 + 81);
  *((unsigned char *)a2 + 81) = v56;
  char v57 = *((unsigned char *)this + 82);
  *((unsigned char *)this + 82) = *((unsigned char *)a2 + 82);
  *((unsigned char *)a2 + 82) = v57;
}

siri::dialogengine::CatBinary::condition *siri::dialogengine::CatBinary::condition::condition(siri::dialogengine::CatBinary::condition *this, const siri::dialogengine::CatBinary::condition *a2)
{
  *(void *)this = &unk_1F211D7E0;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  return this;
}

void sub_1C5E047B0(_Unwind_Exception *a1)
{
  google::protobuf::RepeatedPtrField<siri::dialogengine::SchemaBinary::Value>::~RepeatedPtrField(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::condition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::condition::default_instance(siri::dialogengine::CatBinary::condition *this)
{
  if (atomic_load_explicit(scc_info_condition_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_condition_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_condition_default_instance_;
}

void siri::dialogengine::CatBinary::condition::CopyFrom(siri::dialogengine::CatBinary::condition *this, const siri::dialogengine::CatBinary::condition *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::condition::Clear(this);
    siri::dialogengine::CatBinary::condition::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::CatBinary::condition::InternalSwap(siri::dialogengine::CatBinary::condition *this, siri::dialogengine::CatBinary::condition *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v26;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::condition *)((char *)this + 24), (siri::dialogengine::CatBinary::condition *)((char *)a2 + 24));
  char v14 = (uint64_t *)*((void *)this + 6);
  uint64_t v15 = (uint64_t **)((char *)a2 + 48);
  if (v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v15 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v14 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v16 = *v15;
  if (*v15 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v16 = *v15;
  }
  uint64_t v17 = v14[2];
  __n128 result = *(__n128 *)v14;
  uint64_t v18 = v16[2];
  *(_OWORD *)char v14 = *(_OWORD *)v16;
  std::string v14[2] = v18;
  *(__n128 *)uint64_t v16 = result;
  std::string v16[2] = v17;
LABEL_14:
  uint64_t v21 = (uint64_t *)*((void *)this + 7);
  uint64_t v19 = (std::string **)((char *)this + 56);
  uint64_t v20 = (std::string *)v21;
  uint64_t v22 = (std::string **)((char *)a2 + 56);
  if (v21 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v22 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v20 = *v19;
  }
  long long v23 = *v22;
  if (*v22 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v22, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    long long v23 = *v22;
  }
  std::string::size_type v24 = v20->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v20->__r_.__value_.__l.__data_;
  std::string::size_type v25 = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20->__r_.__value_.__l.__data_ = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v20->__r_.__value_.__r.__words[2] = v25;
  *(__n128 *)&v23->__r_.__value_.__l.__data_ = result;
  v23->__r_.__value_.__r.__words[2] = v24;
  return result;
}

siri::dialogengine::CatBinary::condition_entry *siri::dialogengine::CatBinary::condition_entry::condition_entry(siri::dialogengine::CatBinary::condition_entry *this, const siri::dialogengine::CatBinary::condition_entry *a2)
{
  *(void *)this = &unk_1F211D870;
  *((void *)this + 1) = 0;
  unint64_t v4 = (unint64_t *)((char *)this + 8);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 11) = 0;
  *(void *)((char *)this + 28) = 0;
  *(void *)((char *)this + 36) = 0;
  *(void *)((char *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  google::protobuf::internal::RepeatedPtrFieldBase::MergeFrom<google::protobuf::RepeatedPtrField<siri::dialogengine::CatBinary::condition_entry>::TypeHandler>((int **)this + 3, (uint64_t)a2 + 24);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom(v4, v5 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  int v6 = *((_DWORD *)a2 + 4);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 6);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 48, (uint64_t)v7);
    }
  }
  *((void *)this + 7) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 7);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 56, (uint64_t)v8);
    }
  }
  *((void *)this + 8) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)*((void *)a2 + 8);
    if (v9 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 64, (uint64_t)v9);
    }
  }
  *((void *)this + 9) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v6 & 8) != 0)
  {
    long long v10 = (uint64_t *)*((void *)a2 + 9);
    if (v10 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 72, (uint64_t)v10);
    }
  }
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((_DWORD *)a2 + 20);
  return this;
}

void sub_1C5E04B5C(_Unwind_Exception *a1)
{
  google::protobuf::internal::RepeatedPtrFieldBase::~RepeatedPtrFieldBase(v2);
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::condition_entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::condition_entry::default_instance(siri::dialogengine::CatBinary::condition_entry *this)
{
  if (atomic_load_explicit(scc_info_condition_entry_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_condition_entry_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_condition_entry_default_instance_;
}

void siri::dialogengine::CatBinary::condition_entry::CopyFrom(siri::dialogengine::CatBinary::condition_entry *this, const siri::dialogengine::CatBinary::condition_entry *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::condition_entry::Clear(this);
    siri::dialogengine::CatBinary::condition_entry::MergeFrom(this, a2);
  }
}

void siri::dialogengine::CatBinary::condition_entry::InternalSwap(siri::dialogengine::CatBinary::condition_entry *this, siri::dialogengine::CatBinary::condition_entry *a2)
{
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v38;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_34:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::condition_entry *)((char *)this + 24), (siri::dialogengine::CatBinary::condition_entry *)((char *)a2 + 24));
  int v13 = (uint64_t *)*((void *)this + 6);
  char v14 = (uint64_t **)((char *)a2 + 48);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v13 = (uint64_t *)*((void *)this + 6);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 6, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 7);
  uint64_t v20 = (uint64_t **)((char *)a2 + 56);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 7);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 7, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  std::string v21[2] = v22;
LABEL_20:
  std::string::size_type v25 = (uint64_t *)*((void *)this + 8);
  unint64_t v26 = (uint64_t **)((char *)a2 + 64);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    std::string::size_type v25 = (uint64_t *)*((void *)this + 8);
  }
  char v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 8, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)std::string::size_type v25 = *(_OWORD *)v27;
  std::string v25[2] = v30;
  *(_OWORD *)char v27 = v29;
  _OWORD v27[2] = v28;
LABEL_26:
  int v31 = (uint64_t *)*((void *)this + 9);
  int v32 = (uint64_t **)((char *)a2 + 72);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v31 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)int v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  int v37 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v37;
}

siri::dialogengine::CatBinary::visual_parameter *siri::dialogengine::CatBinary::visual_parameter::visual_parameter(siri::dialogengine::CatBinary::visual_parameter *this, const siri::dialogengine::CatBinary::visual_parameter *a2)
{
  *(void *)this = &unk_1F211D900;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  return this;
}

void sub_1C5E04FA4(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::visual_parameter::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::visual_parameter::default_instance(siri::dialogengine::CatBinary::visual_parameter *this)
{
  if (atomic_load_explicit(scc_info_visual_parameter_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_visual_parameter_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_visual_parameter_default_instance_;
}

void siri::dialogengine::CatBinary::visual_parameter::CopyFrom(siri::dialogengine::CatBinary::visual_parameter *this, const siri::dialogengine::CatBinary::visual_parameter *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::visual_parameter::Clear(this);
    siri::dialogengine::CatBinary::visual_parameter::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::CatBinary::visual_parameter::InternalSwap(siri::dialogengine::CatBinary::visual_parameter *this, siri::dialogengine::CatBinary::visual_parameter *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v25;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *unint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v17;
  *(__n128 *)uint64_t v15 = result;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v20 = (uint64_t *)*((void *)this + 4);
  uint64_t v18 = (std::string **)((char *)this + 32);
  uint64_t v19 = (std::string *)v20;
  uint64_t v21 = (std::string **)((char *)a2 + 32);
  if (v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = *v18;
  }
  uint64_t v22 = *v21;
  if (*v21 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v21, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v22 = *v21;
  }
  std::string::size_type v23 = v19->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v19->__r_.__value_.__l.__data_;
  std::string::size_type v24 = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19->__r_.__value_.__l.__data_ = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v19->__r_.__value_.__r.__words[2] = v24;
  *(__n128 *)&v22->__r_.__value_.__l.__data_ = result;
  v22->__r_.__value_.__r.__words[2] = v23;
  return result;
}

uint64_t siri::dialogengine::CatBinary::node::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::node::default_instance(siri::dialogengine::CatBinary::node *this)
{
  if (atomic_load_explicit(scc_info_node_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_node_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_node_default_instance_;
}

void siri::dialogengine::CatBinary::node::CopyFrom(siri::dialogengine::CatBinary::node *this, const siri::dialogengine::CatBinary::node *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::node::Clear(this);
    siri::dialogengine::CatBinary::node::MergeFrom(this, a2);
  }
}

float siri::dialogengine::CatBinary::node::InternalSwap(siri::dialogengine::CatBinary::node *this, siri::dialogengine::CatBinary::node *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v87;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_82;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_82:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v12;
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::node *)((char *)this + 24), (siri::dialogengine::CatBinary::node *)((char *)a2 + 24));
  google::protobuf::internal::RepeatedPtrFieldBase::InternalSwap((siri::dialogengine::CatBinary::node *)((char *)this + 48), (siri::dialogengine::CatBinary::node *)((char *)a2 + 48));
  int v13 = (uint64_t *)*((void *)this + 9);
  char v14 = (uint64_t **)((char *)a2 + 72);
  if (v13 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v13 = (uint64_t *)*((void *)this + 9);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 9, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v13[2];
  long long v17 = *(_OWORD *)v13;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v13 = *(_OWORD *)v15;
  void v13[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 10);
  uint64_t v20 = (uint64_t **)((char *)a2 + 80);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 10);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 10, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  std::string v21[2] = v22;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 11);
  unint64_t v26 = (uint64_t **)((char *)a2 + 88);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_26;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v25 = (uint64_t *)*((void *)this + 11);
  }
  char v27 = *v26;
  if (*v26 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 11, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  uint64_t v28 = v25[2];
  long long v29 = *(_OWORD *)v25;
  uint64_t v30 = v27[2];
  *(_OWORD *)unint64_t v25 = *(_OWORD *)v27;
  std::string v25[2] = v30;
  *(_OWORD *)char v27 = v29;
  _OWORD v27[2] = v28;
LABEL_26:
  int v31 = (uint64_t *)*((void *)this + 12);
  int v32 = (uint64_t **)((char *)a2 + 96);
  if (v31 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v32 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_32;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v31 = (uint64_t *)*((void *)this + 12);
  }
  uint64_t v33 = *v32;
  if (*v32 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 12, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v33 = *v32;
  }
  uint64_t v34 = v31[2];
  long long v35 = *(_OWORD *)v31;
  uint64_t v36 = v33[2];
  *(_OWORD *)int v31 = *(_OWORD *)v33;
  v31[2] = v36;
  *(_OWORD *)uint64_t v33 = v35;
  std::string v33[2] = v34;
LABEL_32:
  int v37 = (uint64_t *)*((void *)this + 13);
  unint64_t v38 = (uint64_t **)((char *)a2 + 104);
  if (v37 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v38 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_38;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v37 = (uint64_t *)*((void *)this + 13);
  }
  uint64_t v39 = *v38;
  if (*v38 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 13, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v39 = *v38;
  }
  uint64_t v40 = v37[2];
  long long v41 = *(_OWORD *)v37;
  uint64_t v42 = v39[2];
  *(_OWORD *)int v37 = *(_OWORD *)v39;
  v37[2] = v42;
  *(_OWORD *)uint64_t v39 = v41;
  v39[2] = v40;
LABEL_38:
  uint64_t v43 = (uint64_t *)*((void *)this + 14);
  unint64_t v44 = (uint64_t **)((char *)a2 + 112);
  if (v43 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v44 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_44;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v43 = (uint64_t *)*((void *)this + 14);
  }
  uint64_t v45 = *v44;
  if (*v44 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 14, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v45 = *v44;
  }
  uint64_t v46 = v43[2];
  long long v47 = *(_OWORD *)v43;
  uint64_t v48 = v45[2];
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v45;
  v43[2] = v48;
  *(_OWORD *)uint64_t v45 = v47;
  std::string v45[2] = v46;
LABEL_44:
  uint64_t v49 = (uint64_t *)*((void *)this + 15);
  uint64_t v50 = (uint64_t **)((char *)a2 + 120);
  if (v49 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v50 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_50;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v49 = (uint64_t *)*((void *)this + 15);
  }
  uint64_t v51 = *v50;
  if (*v50 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 15, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v51 = *v50;
  }
  uint64_t v52 = v49[2];
  long long v53 = *(_OWORD *)v49;
  uint64_t v54 = v51[2];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v51;
  v49[2] = v54;
  *(_OWORD *)uint64_t v51 = v53;
  v51[2] = v52;
LABEL_50:
  char v55 = (uint64_t *)*((void *)this + 16);
  char v56 = (uint64_t **)((char *)a2 + 128);
  if (v55 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v56 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_56;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v55 = (uint64_t *)*((void *)this + 16);
  }
  char v57 = *v56;
  if (*v56 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 16, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v57 = *v56;
  }
  uint64_t v58 = v55[2];
  long long v59 = *(_OWORD *)v55;
  uint64_t v60 = v57[2];
  *(_OWORD *)char v55 = *(_OWORD *)v57;
  v55[2] = v60;
  *(_OWORD *)char v57 = v59;
  v57[2] = v58;
LABEL_56:
  uint64_t v61 = (uint64_t *)*((void *)this + 17);
  uint64_t v62 = (uint64_t **)((char *)a2 + 136);
  if (v61 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v62 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_62;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v61 = (uint64_t *)*((void *)this + 17);
  }
  uint64_t v63 = *v62;
  if (*v62 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 17, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v63 = *v62;
  }
  uint64_t v64 = v61[2];
  long long v65 = *(_OWORD *)v61;
  uint64_t v66 = v63[2];
  *(_OWORD *)uint64_t v61 = *(_OWORD *)v63;
  v61[2] = v66;
  *(_OWORD *)uint64_t v63 = v65;
  v63[2] = v64;
LABEL_62:
  unsigned int v67 = (uint64_t *)*((void *)this + 18);
  unsigned int v68 = (uint64_t **)((char *)a2 + 144);
  if (v67 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v68 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_68;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unsigned int v67 = (uint64_t *)*((void *)this + 18);
  }
  uint64_t v69 = *v68;
  if (*v68 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 18, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v69 = *v68;
  }
  uint64_t v70 = v67[2];
  long long v71 = *(_OWORD *)v67;
  uint64_t v72 = v69[2];
  *(_OWORD *)unsigned int v67 = *(_OWORD *)v69;
  v67[2] = v72;
  *(_OWORD *)uint64_t v69 = v71;
  v69[2] = v70;
LABEL_68:
  uint64_t v73 = (uint64_t *)*((void *)this + 19);
  unsigned int v74 = (uint64_t **)((char *)a2 + 152);
  if (v73 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v74 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_74;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v73 = (uint64_t *)*((void *)this + 19);
  }
  uint64_t v75 = *v74;
  if (*v74 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 19, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v75 = *v74;
  }
  uint64_t v76 = v73[2];
  long long v77 = *(_OWORD *)v73;
  uint64_t v78 = v75[2];
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v75;
  v73[2] = v78;
  *(_OWORD *)uint64_t v75 = v77;
  v75[2] = v76;
LABEL_74:
  uint64_t v79 = (uint64_t *)*((void *)this + 20);
  int v80 = (uint64_t **)((char *)a2 + 160);
  if (v79 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v80 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_80;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v79 = (uint64_t *)*((void *)this + 20);
  }
  unint64_t v81 = *v80;
  if (*v80 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 20, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    unint64_t v81 = *v80;
  }
  uint64_t v82 = v79[2];
  long long v83 = *(_OWORD *)v79;
  uint64_t v84 = v81[2];
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v81;
  v79[2] = v84;
  *(_OWORD *)unint64_t v81 = v83;
  v81[2] = v82;
LABEL_80:
  int v85 = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v85;
  LOBYTE(v85) = *((unsigned char *)this + 172);
  *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
  *((unsigned char *)a2 + 172) = v85;
  LOBYTE(v85) = *((unsigned char *)this + 173);
  *((unsigned char *)this + 173) = *((unsigned char *)a2 + 173);
  *((unsigned char *)a2 + 173) = v85;
  float result = *((float *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((float *)a2 + 44) = result;
  return result;
}

siri::dialogengine::CatBinary::vcat_item_expression *siri::dialogengine::CatBinary::vcat_item_expression::vcat_item_expression(siri::dialogengine::CatBinary::vcat_item_expression *this, const siri::dialogengine::CatBinary::vcat_item_expression *a2)
{
  *(void *)this = &unk_1F211DA20;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v8);
    }
  }
  return this;
}

void sub_1C5E05A60(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_expression::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::vcat_item_expression::default_instance(siri::dialogengine::CatBinary::vcat_item_expression *this)
{
  if (atomic_load_explicit(scc_info_vcat_item_expression_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_expression_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_vcat_item_expression_default_instance_;
}

void siri::dialogengine::CatBinary::vcat_item_expression::CopyFrom(siri::dialogengine::CatBinary::vcat_item_expression *this, const siri::dialogengine::CatBinary::vcat_item_expression *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::vcat_item_expression::Clear(this);
    siri::dialogengine::CatBinary::vcat_item_expression::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::CatBinary::vcat_item_expression::InternalSwap(siri::dialogengine::CatBinary::vcat_item_expression *this, siri::dialogengine::CatBinary::vcat_item_expression *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v30;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *unint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v17;
  *(__n128 *)uint64_t v15 = result;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v18 = (uint64_t *)*((void *)this + 4);
  uint64_t v19 = (uint64_t **)((char *)a2 + 32);
  if (v18 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v19 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v20 = *v19;
  if (*v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v20 = *v19;
  }
  uint64_t v21 = v18[2];
  __n128 result = *(__n128 *)v18;
  uint64_t v22 = v20[2];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
  std::string v18[2] = v22;
  *(__n128 *)uint64_t v20 = result;
  std::string v20[2] = v21;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 5);
  long long v23 = (std::string **)((char *)this + 40);
  uint64_t v24 = (std::string *)v25;
  unint64_t v26 = (std::string **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v24 = *v23;
  }
  char v27 = *v26;
  if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  std::string::size_type v28 = v24->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v24->__r_.__value_.__l.__data_;
  std::string::size_type v29 = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24->__r_.__value_.__l.__data_ = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v24->__r_.__value_.__r.__words[2] = v29;
  *(__n128 *)&v27->__r_.__value_.__l.__data_ = result;
  v27->__r_.__value_.__r.__words[2] = v28;
  return result;
}

siri::dialogengine::CatBinary::vcat_item_repetition *siri::dialogengine::CatBinary::vcat_item_repetition::vcat_item_repetition(siri::dialogengine::CatBinary::vcat_item_repetition *this, const siri::dialogengine::CatBinary::vcat_item_repetition *a2)
{
  *(void *)this = &unk_1F211DAB0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 4) != 0)
  {
    unint64_t v8 = (uint64_t *)*((void *)a2 + 5);
    if (v8 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, (uint64_t)v8);
    }
  }
  return this;
}

void sub_1C5E05E14(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item_repetition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::vcat_item_repetition::default_instance(siri::dialogengine::CatBinary::vcat_item_repetition *this)
{
  if (atomic_load_explicit(scc_info_vcat_item_repetition_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_repetition_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_vcat_item_repetition_default_instance_;
}

void siri::dialogengine::CatBinary::vcat_item_repetition::CopyFrom(siri::dialogengine::CatBinary::vcat_item_repetition *this, const siri::dialogengine::CatBinary::vcat_item_repetition *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::vcat_item_repetition::Clear(this);
    siri::dialogengine::CatBinary::vcat_item_repetition::MergeFrom(this, a2);
  }
}

__n128 siri::dialogengine::CatBinary::vcat_item_repetition::InternalSwap(siri::dialogengine::CatBinary::vcat_item_repetition *this, siri::dialogengine::CatBinary::vcat_item_repetition *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v30;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = (__n128 *)(v4 & 0xFFFFFFFFFFFFFFFELL);
LABEL_7:
      unint64_t v9 = v8[1].n128_u64[0];
      __n128 result = *v8;
      unint64_t v11 = *(void *)(v7 + 16);
      *unint64_t v8 = *(__n128 *)v7;
      v8[1].n128_u64[0] = v11;
      *(__n128 *)unint64_t v7 = result;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_28:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  __n128 result = *(__n128 *)v12;
  uint64_t v17 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v17;
  *(__n128 *)uint64_t v15 = result;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v18 = (uint64_t *)*((void *)this + 4);
  uint64_t v19 = (uint64_t **)((char *)a2 + 32);
  if (v18 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v19 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v18 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v20 = *v19;
  if (*v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v20 = *v19;
  }
  uint64_t v21 = v18[2];
  __n128 result = *(__n128 *)v18;
  uint64_t v22 = v20[2];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
  std::string v18[2] = v22;
  *(__n128 *)uint64_t v20 = result;
  std::string v20[2] = v21;
LABEL_20:
  unint64_t v25 = (uint64_t *)*((void *)this + 5);
  long long v23 = (std::string **)((char *)this + 40);
  uint64_t v24 = (std::string *)v25;
  unint64_t v26 = (std::string **)((char *)a2 + 40);
  if (v25 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string) {
      return result;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v23, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v24 = *v23;
  }
  char v27 = *v26;
  if (*v26 == (std::string *)&google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance(v26, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    char v27 = *v26;
  }
  std::string::size_type v28 = v24->__r_.__value_.__r.__words[2];
  __n128 result = *(__n128 *)&v24->__r_.__value_.__l.__data_;
  std::string::size_type v29 = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24->__r_.__value_.__l.__data_ = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v24->__r_.__value_.__r.__words[2] = v29;
  *(__n128 *)&v27->__r_.__value_.__l.__data_ = result;
  v27->__r_.__value_.__r.__words[2] = v28;
  return result;
}

uint64_t siri::dialogengine::CatBinary::vcat_item::_Internal::value_expression(siri::dialogengine::CatBinary::vcat_item::_Internal *this, const siri::dialogengine::CatBinary::vcat_item *a2)
{
  return *((void *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::vcat_item::_Internal::list_repetition(siri::dialogengine::CatBinary::vcat_item::_Internal *this, const siri::dialogengine::CatBinary::vcat_item *a2)
{
  return *((void *)this + 5);
}

uint64_t siri::dialogengine::CatBinary::vcat_item::set_allocated_value_expression(siri::dialogengine::CatBinary::vcat_item *this, siri::dialogengine::CatBinary::vcat_item_expression *a2)
{
  uint64_t result = siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
  if (a2)
  {
    *((_DWORD *)this + 12) = 2;
    *((void *)this + 5) = a2;
  }
  return result;
}

uint64_t siri::dialogengine::CatBinary::vcat_item::set_allocated_list_repetition(siri::dialogengine::CatBinary::vcat_item *this, siri::dialogengine::CatBinary::vcat_item_repetition *a2)
{
  uint64_t result = siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
  if (a2)
  {
    *((_DWORD *)this + 12) = 3;
    *((void *)this + 5) = a2;
  }
  return result;
}

siri::dialogengine::CatBinary::vcat_item *siri::dialogengine::CatBinary::vcat_item::vcat_item(siri::dialogengine::CatBinary::vcat_item *this, const siri::dialogengine::CatBinary::vcat_item *a2)
{
  *(void *)this = &unk_1F211DB40;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArenaLite::DoMergeFrom((unint64_t *)this + 1, v4 & 0xFFFFFFFFFFFFFFFELL);
  }
  *((void *)this + 3) = &google::protobuf::internal::fixed_address_empty_string;
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)*((void *)a2 + 3);
    if (v6 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 24, (uint64_t)v6);
    }
  }
  *((void *)this + 4) = &google::protobuf::internal::fixed_address_empty_string;
  if ((v5 & 2) != 0)
  {
    unint64_t v7 = (uint64_t *)*((void *)a2 + 4);
    if (v7 != &google::protobuf::internal::fixed_address_empty_string) {
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 32, (uint64_t)v7);
    }
  }
  *((_DWORD *)this + 12) = 0;
  int v8 = *((_DWORD *)a2 + 12);
  switch(v8)
  {
    case 2:
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      *((_DWORD *)this + 12) = 2;
      unint64_t v9 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_expression>(0);
      *((void *)this + 5) = v9;
      if (*((_DWORD *)a2 + 12) == 2) {
        long long v10 = (const siri::dialogengine::CatBinary::vcat_item_expression *)*((void *)a2 + 5);
      }
      else {
        long long v10 = (const siri::dialogengine::CatBinary::vcat_item_expression *)&siri::dialogengine::CatBinary::_vcat_item_expression_default_instance_;
      }
      siri::dialogengine::CatBinary::vcat_item_expression::MergeFrom(v9, v10);
      break;
    case 3:
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      *((_DWORD *)this + 12) = 3;
      unint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<siri::dialogengine::CatBinary::vcat_item_repetition>(0);
      *((void *)this + 5) = v11;
      if (*((_DWORD *)a2 + 12) == 3) {
        int v12 = (const siri::dialogengine::CatBinary::vcat_item_repetition *)*((void *)a2 + 5);
      }
      else {
        int v12 = (const siri::dialogengine::CatBinary::vcat_item_repetition *)&siri::dialogengine::CatBinary::_vcat_item_repetition_default_instance_;
      }
      siri::dialogengine::CatBinary::vcat_item_repetition::MergeFrom(v11, v12);
      break;
    case 5:
    case 6:
      uint64_t v13 = *((void *)a2 + 5);
      siri::dialogengine::CatBinary::vcat_item::clear_item((uint64_t)this);
      *((void *)this + 5) = &google::protobuf::internal::fixed_address_empty_string;
      *((_DWORD *)this + 12) = v8;
      google::protobuf::internal::ArenaStringPtr::CreateInstanceNoArena((uint64_t)this + 40, v13);
    default:
      return this;
  }
  return this;
}

void sub_1C5E0630C(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::CatBinary::vcat_item::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void *siri::dialogengine::CatBinary::vcat_item::default_instance(siri::dialogengine::CatBinary::vcat_item *this)
{
  if (atomic_load_explicit(scc_info_vcat_item_CatBinary_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_vcat_item_CatBinary_2eproto);
  }
  return &siri::dialogengine::CatBinary::_vcat_item_default_instance_;
}

void siri::dialogengine::CatBinary::vcat_item::CopyFrom(siri::dialogengine::CatBinary::vcat_item *this, const siri::dialogengine::CatBinary::vcat_item *a2)
{
  if (a2 != this)
  {
    siri::dialogengine::CatBinary::vcat_item::Clear(this);
    siri::dialogengine::CatBinary::vcat_item::MergeFrom(this, a2);
  }
}

void siri::dialogengine::CatBinary::vcat_item::InternalSwap(siri::dialogengine::CatBinary::vcat_item *this, siri::dialogengine::CatBinary::vcat_item *a2)
{
  int v5 = (unint64_t *)((char *)this + 8);
  unint64_t v4 = *((void *)this + 1);
  uint64_t v6 = *((void *)a2 + 1);
  if (v4)
  {
    if ((v6 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      unint64_t v7 = v26;
      unint64_t v4 = *v5;
      if (*v5) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_5:
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if (v4)
    {
LABEL_6:
      unint64_t v8 = v4 & 0xFFFFFFFFFFFFFFFELL;
LABEL_7:
      uint64_t v9 = *(void *)(v8 + 16);
      long long v10 = *(_OWORD *)v8;
      uint64_t v11 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v7;
      *(void *)(v8 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11;
      *(_OWORD *)unint64_t v7 = v10;
      *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v9;
      goto LABEL_8;
    }
LABEL_22:
    google::protobuf::internal::InternalMetadataWithArenaBase<std::string,google::protobuf::internal::InternalMetadataWithArenaLite>::mutable_unknown_fields_slow(v5);
    goto LABEL_7;
  }
  if (v6) {
    goto LABEL_5;
  }
LABEL_8:
  int v12 = (uint64_t *)*((void *)this + 3);
  int v13 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v13;
  char v14 = (uint64_t **)((char *)a2 + 24);
  if (v12 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v14 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_14;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    int v12 = (uint64_t *)*((void *)this + 3);
  }
  uint64_t v15 = *v14;
  if (*v14 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 3, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v15 = *v14;
  }
  uint64_t v16 = v12[2];
  long long v17 = *(_OWORD *)v12;
  uint64_t v18 = v15[2];
  *(_OWORD *)int v12 = *(_OWORD *)v15;
  void v12[2] = v18;
  *(_OWORD *)uint64_t v15 = v17;
  std::string v15[2] = v16;
LABEL_14:
  uint64_t v19 = (uint64_t *)*((void *)this + 4);
  uint64_t v20 = (uint64_t **)((char *)a2 + 32);
  if (v19 == &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*v20 == &google::protobuf::internal::fixed_address_empty_string) {
      goto LABEL_20;
    }
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)this + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v19 = (uint64_t *)*((void *)this + 4);
  }
  uint64_t v21 = *v20;
  if (*v20 == &google::protobuf::internal::fixed_address_empty_string)
  {
    google::protobuf::internal::ArenaStringPtr::CreateInstance((std::string **)a2 + 4, 0, (long long *)&google::protobuf::internal::fixed_address_empty_string);
    uint64_t v21 = *v20;
  }
  uint64_t v22 = v19[2];
  long long v23 = *(_OWORD *)v19;
  uint64_t v24 = v21[2];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v21;
  std::string v19[2] = v24;
  *(_OWORD *)uint64_t v21 = v23;
  std::string v21[2] = v22;
LABEL_20:
  uint64_t v25 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v25;
  LODWORD(v25) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v25;
}

double YAML::ostream_wrapper::ostream_wrapper(std::vector<char> *this, uint64_t a2, const std::vector<char>::value_type *a3)
{
  char v5 = 0;
  uint64_t v3 = std::vector<char>::vector(this, (std::vector<char>::size_type)&v5, a3);
  LOBYTE(v3[2].__end_) = 0;
  double result = 0.0;
  *(_OWORD *)&v3[1].__end_cap_.__value_ = 0u;
  *(_OWORD *)&v3[1].__begin_ = 0u;
  return result;
}

{
  std::vector<char> *v3;
  double result;
  char v5;

  char v5 = 0;
  uint64_t v3 = std::vector<char>::vector(this, (std::vector<char>::size_type)&v5, a3);
  LOBYTE(v3[2].__end_) = 0;
  double result = 0.0;
  *(_OWORD *)&v3[1].__end_cap_.__value_ = 0u;
  *(_OWORD *)&v3[1].__begin_ = 0u;
  return result;
}

std::vector<char> *__cdecl std::vector<char>::vector(std::vector<char> *this, std::vector<char>::size_type __n, const std::vector<char>::value_type *__x)
{
  this->__begin_ = 0;
  this->__end_ = 0;
  this->__end_cap_.__value_ = 0;
  char v5 = (char *)operator new(1uLL);
  this->__begin_ = v5;
  this->__end_ = v5;
  this->__end_cap_.__value_ = v5 + 1;
  *char v5 = *(unsigned char *)__n;
  this->__end_ = v5 + 1;
  return this;
}

uint64_t YAML::ostream_wrapper::ostream_wrapper(uint64_t result, uint64_t a2)
{
  *(void *)double result = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

{
  *(void *)double result = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 56) = 0;
  return result;
}

void YAML::ostream_wrapper::~ostream_wrapper(YAML::ostream_wrapper *this)
{
  uint64_t v2 = *(void **)this;
  if (v2)
  {
    *((void *)this + 1) = v2;
    operator delete(v2);
  }
}

{
  void *v2;

  uint64_t v2 = *(void **)this;
  if (v2)
  {
    *((void *)this + 1) = v2;
    operator delete(v2);
  }
}

void YAML::ostream_wrapper::write(std::vector<char> *this, const void **a2)
{
  if (this[1].__begin_)
  {
    std::ostream::write();
  }
  else
  {
    unint64_t v4 = this->__end_ - this->__begin_;
    size_t v5 = *((unsigned __int8 *)a2 + 23);
    char v6 = v5;
    size_t v7 = (size_t)a2[1];
    if ((v5 & 0x80u) == 0) {
      unint64_t v8 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      unint64_t v8 = (unint64_t)a2[1];
    }
    uint64_t v9 = &this[1].__end_[v8 + 1];
    if ((unint64_t)v9 > v4)
    {
      std::vector<char>::__append(this, (std::vector<char>::size_type)&v9[-v4]);
      size_t v5 = *((unsigned __int8 *)a2 + 23);
      size_t v7 = (size_t)a2[1];
      char v6 = *((unsigned char *)a2 + 23);
    }
    if (v6 >= 0) {
      size_t v10 = v5;
    }
    else {
      size_t v10 = v7;
    }
    if (v10)
    {
      if (v6 >= 0) {
        uint64_t v11 = a2;
      }
      else {
        uint64_t v11 = *a2;
      }
      memmove(&this->__begin_[(unint64_t)this[1].__end_], v11, v10);
    }
  }
  BOOL v12 = *((char *)a2 + 23) < 0;
  int v13 = (const void *)*((unsigned __int8 *)a2 + 23);
  if ((char)v13 < 0) {
    int v13 = a2[1];
  }
  if (v13)
  {
    unint64_t v14 = 0;
    std::vector<char>::pointer begin = this[2].__begin_;
    std::vector<char>::pointer v16 = this[1].__end_ + 1;
    do
    {
      if (v12) {
        long long v17 = (unsigned __int8 *)*a2;
      }
      else {
        long long v17 = (unsigned __int8 *)a2;
      }
      int v18 = v17[v14];
      this[1].__end_ = &v16[v14];
      this[2].__begin_ = ++begin;
      if (v18 == 10)
      {
        std::vector<char>::pointer begin = 0;
        ++this[1].__end_cap_.__value_;
        this[2].__begin_ = 0;
        LOBYTE(this[2].__end_) = 0;
      }
      ++v14;
      BOOL v12 = *((char *)a2 + 23) < 0;
      uint64_t v19 = (const void *)*((unsigned __int8 *)a2 + 23);
      if ((char)v19 < 0) {
        uint64_t v19 = a2[1];
      }
    }
    while (v14 < (unint64_t)v19);
  }
}

void std::vector<char>::__append(std::vector<char> *this, std::vector<char>::size_type __n)
{
  std::vector<std::string>::pointer end = this->__end_;
  value = this->__end_cap_.__value_;
  if (value - end >= __n)
  {
    if (__n)
    {
      bzero(this->__end_, __n);
      end += __n;
    }
    this->__end_ = end;
  }
  else
  {
    std::vector<char>::pointer begin = this->__begin_;
    int64_t v7 = end - this->__begin_;
    unint64_t v8 = v7 + __n;
    if ((uint64_t)(v7 + __n) < 0) {
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v9 = value - begin;
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v10 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v10 = v8;
    }
    if (v10) {
      uint64_t v11 = (char *)operator new(v10);
    }
    else {
      uint64_t v11 = 0;
    }
    BOOL v12 = &v11[v7];
    int v13 = &v11[v10];
    bzero(v12, __n);
    if (end == begin)
    {
      uint64_t v11 = v12;
    }
    else
    {
      unint64_t v14 = &end[~(unint64_t)begin];
      do
      {
        char v15 = *--end;
        (v14--)[(void)v11] = v15;
      }
      while (end != begin);
      std::vector<std::string>::pointer end = this->__begin_;
    }
    this->__begin_ = v11;
    this->__end_ = &v12[__n];
    this->__end_cap_.__value_ = v13;
    if (end)
    {
      operator delete(end);
    }
  }
}

uint64_t YAML::ostream_wrapper::update_pos(uint64_t this, int a2)
{
  if (a2 == 10)
  {
    ++*(void *)(this + 40);
    *(void *)(this + ++*(void *)(this + 48) = 0;
    *(unsigned char *)(this + 56) = 0;
  }
  return this;
}

void YAML::ostream_wrapper::write(std::vector<char> *this, const char *__src, size_t __len)
{
  size_t v3 = __len;
  if (this[1].__begin_)
  {
    std::ostream::write();
    if (!v3) {
      return;
    }
    goto LABEL_8;
  }
  unint64_t v6 = this->__end_ - this->__begin_;
  int64_t v7 = &this[1].__end_[__len + 1];
  if ((unint64_t)v7 > v6) {
    std::vector<char>::__append(this, (std::vector<char>::size_type)&v7[-v6]);
  }
  if (v3)
  {
    memmove(&this->__begin_[(unint64_t)this[1].__end_], __src, v3);
LABEL_8:
    std::vector<char>::pointer begin = this[2].__begin_;
    unint64_t v9 = this[1].__end_ + 1;
    do
    {
      int v10 = *(unsigned __int8 *)__src++;
      this[1].__end_ = v9;
      this[2].__begin_ = ++begin;
      if (v10 == 10)
      {
        std::vector<char>::pointer begin = 0;
        ++this[1].__end_cap_.__value_;
        this[2].__begin_ = 0;
        LOBYTE(this[2].__end_) = 0;
      }
      ++v9;
      --v3;
    }
    while (v3);
  }
}

void *siri::dialogengine::ExecutionState::ExecutionState(void *this)
{
  *this = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

{
  *this = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

BOOL siri::dialogengine::ExecutionState::IsInfiniteLoop(uint64_t *a1, long long *a2)
{
  unint64_t v3 = a1[1];
  if (v3 >= a1[2])
  {
    uint64_t v4 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a1, a2);
  }
  else
  {
    std::vector<std::string>::__construct_one_at_end[abi:ne180100]<std::string const&>((uint64_t)a1, a2);
    uint64_t v4 = v3 + 24;
  }
  a1[1] = v4;
  return 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) > 0x64;
}

BOOL siri::dialogengine::DialogFilterAdapter::empty(siri::dialogengine::DialogFilterAdapter *this)
{
  return (*(uint64_t (**)(siri::dialogengine::DialogFilterAdapter *))(*(void *)this + 16))(this) == 0;
}

void siri::dialogengine::DialogDensity::toString(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::FormatDensity(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100]<0>(&__p, "value");
  RequiredNumberuint64_t Parameter = siri::dialogengine::GetRequiredNumberParameter((const void **)&__p.__r_.__value_.__l.__data_, a2);
  uint64_t v4 = RequiredNumberParameter;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v4)
    {
LABEL_3:
      std::string::basic_string[abi:ne180100]<0>(&__p, "units");
      OptionalStringuint64_t Parameter = (char *)siri::dialogengine::GetOptionalStringParameter((const void **)&__p.__r_.__value_.__l.__data_, a2);
      unint64_t v6 = OptionalStringParameter;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if (v6)
        {
LABEL_5:
          if (v6[95] < 0) {
            std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)v6 + 9), *((void *)v6 + 10));
          }
          else {
            std::string __p = *(std::string *)(v6 + 3);
          }
LABEL_12:
          siri::dialogengine::ParseUnitLabel<siri::dialogengine::Density>();
        }
      }
      else if (OptionalStringParameter)
      {
        goto LABEL_5;
      }
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      goto LABEL_12;
    }
  }
  else if (RequiredNumberParameter)
  {
    goto LABEL_3;
  }
  operator new();
}

void sub_1C5E072A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::SpeakableString::~SpeakableString(&a43);
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDensity::approximate(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogDensity::compactDecimalLong(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogDensity::compactDecimalShort(uint64_t this, uint64_t a2, const siri::dialogengine::VariableObject *a3)
{
}

void siri::dialogengine::DialogDensity::units(siri::dialogengine::DialogDensity *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
}

void sub_1C5E075C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v21, 0x10B3C40D3060B95);
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::DialogDensity::value(siri::dialogengine::DialogDensity *this, siri::dialogengine::Context *a2, const siri::dialogengine::VariableObject *a3)
{
  std::string::basic_string[abi:ne180100]<0>(&v6, "value");
  RequiredNumberuint64_t Parameter = siri::dialogengine::GetRequiredNumberParameter((const void **)&v6, (uint64_t)a2);
  size_t v5 = RequiredNumberParameter;
  if (v7 < 0)
  {
    operator delete(v6);
    if (v5) {
LABEL_3:
    }
      siri::dialogengine::GetConvertedUnitInfo<siri::dialogengine::Density>();
  }
  else if (RequiredNumberParameter)
  {
    goto LABEL_3;
  }
  operator new();
}

void sub_1C5E07748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, void *a16, int a17, __int16 a18, char a19, char a20,int a21,__int16 a22,char a23,char a24)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1C8796D70](v24, 0x10B3C4030AE2ACELL);
  _Unwind_Resume(a1);
}

void siri::dialogengine::SpeakableStringFromMorphun(uint64_t a1@<X8>)
{
  morphun::util::StringUtils::to_string();
  morphun::util::StringUtils::to_string();
  siri::dialogengine::SpeakableString::SpeakableString(a1, &v3, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v3.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v3.__r_.__value_.__l.__data_);
  }
}

void sub_1C5E07858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::SpeakableStringFromMorphun(siri::dialogengine *this@<X0>, const morphun::dialog::SpeakableString *a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(siri::dialogengine *, const morphun::dialog::SpeakableString *))(*(void *)this + 32))(this, a2);
  (*(void (**)(siri::dialogengine *))(*(void *)this + 40))(this);
  siri::dialogengine::SpeakableStringFromMorphun(a3);
}

void siri::dialogengine::SpeakableStringToMorphun(siri::dialogengine *this, const siri::dialogengine::SpeakableString *a2)
{
  if (*((char *)this + 23) < 0) {
    std::string::__init_copy_ctor_external(&v4, *(const std::string::value_type **)this, *((void *)this + 1));
  }
  else {
    std::string v4 = *(std::string *)this;
  }
  morphun::util::StringUtils::to_u16string();
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (*((char *)this + 47) < 0) {
    std::string::__init_copy_ctor_external(&__p, *((const std::string::value_type **)this + 3), *((void *)this + 4));
  }
  else {
    std::string __p = *(std::string *)((unsigned char *)this + 1);
  }
  morphun::util::StringUtils::to_u16string();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  morphun::dialog::SpeakableString::SpeakableString();
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
  if (v6 < 0) {
    operator delete(v5);
  }
}

void sub_1C5E07A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 17) < 0) {
    operator delete(*(void **)(v21 - 40));
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::InflectConcept(siri::dialogengine::Context *a1@<X0>, const char *a2@<X1>, long long **a3@<X2>, int a4@<W3>, std::string *a5@<X8>)
{
  siri::dialogengine::InflectConcept(a1, a2, a3, (uint64_t)&v10);
  if (!a4)
  {
    if (v15 < 0)
    {
      uint64_t v8 = __s;
      unint64_t v9 = (std::string::size_type *)&v14;
      goto LABEL_8;
    }
    p_s = &__s;
LABEL_6:
    *(_OWORD *)&a5->__r_.__value_.__l.__data_ = *(_OWORD *)p_s;
    a5->__r_.__value_.__r.__words[2] = p_s[2];
    goto LABEL_9;
  }
  p_s = &v10;
  if ((v12 & 0x80000000) == 0) {
    goto LABEL_6;
  }
  uint64_t v8 = (const std::string::value_type *)v10;
  unint64_t v9 = (std::string::size_type *)&v11;
LABEL_8:
  std::string::__init_copy_ctor_external(a5, v8, *v9);
LABEL_9:
  if (v25 < 0) {
    operator delete(__p);
  }
  if (v23 < 0) {
    operator delete(v22);
  }
  if (v21 < 0) {
    operator delete(v20);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v17 < 0) {
    operator delete(v16);
  }
  if (v15 < 0) {
    operator delete(__s);
  }
  if (v12 < 0) {
    operator delete(v10);
  }
}

void sub_1C5E07B6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  siri::dialogengine::SpeakableString::~SpeakableString((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::InflectConcept(siri::dialogengine::Context *this@<X0>, const char *a2@<X1>, long long **a3@<X2>, uint64_t a4@<X8>)
{
  if (this) {
    siri::dialogengine::Context::GetLocale(this, a2, (uint64_t)v49);
  }
  else {
    std::string::basic_string[abi:ne180100]<0>(v49, "");
  }
  unint64_t v8 = v50;
  if ((v50 & 0x80u) != 0) {
    unint64_t v8 = (unint64_t)v49[1];
  }
  if (!v8) {
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"InflectConcept has empty locale", v7);
  }
  if (!(*(uint64_t (**)(const char *))(*(void *)a2 + 40))(a2)) {
    goto LABEL_80;
  }
  int v10 = *a3;
  unint64_t v9 = a3[1];
  if (*a3 == v9) {
    goto LABEL_80;
  }
  uint64_t v11 = 0;
  do
  {
    if (*((char *)v10 + 23) < 0)
    {
      std::string::__init_copy_ctor_external(&v46, *(const std::string::value_type **)v10, *((void *)v10 + 1));
    }
    else
    {
      long long v12 = *v10;
      v46.__r_.__value_.__r.__words[2] = *((void *)v10 + 2);
      *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v12;
    }
    if (*((char *)v10 + 47) < 0)
    {
      std::string::__init_copy_ctor_external(&v47, *((const std::string::value_type **)v10 + 3), *((void *)v10 + 4));
    }
    else
    {
      long long v13 = *(long long *)((char *)v10 + 24);
      v47.__r_.__value_.__r.__words[2] = *((void *)v10 + 5);
      *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v13;
    }
    char v48 = *((unsigned char *)v10 + 48);
    int GrammarFeature = siri::dialogengine::SemanticFeatureConstraint::GetGrammarFeature(&v46, (uint64_t)v49);
    if (GrammarFeature == 2)
    {
      if (v11)
      {
        morphun::util::StringUtils::to_u16string();
        morphun::util::StringUtils::to_string();
        int v18 = std::string::insert(&v42, 0, "Can only specify a single grammar feature for inflection. Ignoring '");
        long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v19;
        v18->__r_.__value_.__l.__size_ = 0;
        v18->__r_.__value_.__r.__words[2] = 0;
        v18->__r_.__value_.__r.__words[0] = 0;
        uint64_t v20 = std::string::append(&v43, "'");
        long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
        std::string::size_type v45 = v20->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v21;
        v20->__r_.__value_.__l.__size_ = 0;
        v20->__r_.__value_.__r.__words[2] = 0;
        v20->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
        if (SHIBYTE(v45) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0)
        {
          char v17 = (void *)v41.__r_.__value_.__r.__words[0];
LABEL_63:
          operator delete(v17);
        }
      }
      else
      {
        morphun::util::StringUtils::to_u16string();
        uint64_t Feature = morphun::dialog::SemanticFeatureModel::getFeature();
        uint64_t v11 = Feature;
        if (SHIBYTE(v45) < 0)
        {
          operator delete(__p[0]);
          if (v11) {
            goto LABEL_64;
          }
        }
        else if (Feature)
        {
          goto LABEL_64;
        }
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v42, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
        }
        else {
          std::string v42 = v46;
        }
        uint64_t v33 = std::string::insert(&v42, 0, "Unable to get semantic feature from model: '");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        long long v35 = std::string::append(&v43, "'");
        long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        std::string::size_type v45 = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
        if (SHIBYTE(v45) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v42.__r_.__value_.__l.__data_);
        }
        uint64_t v11 = 0;
      }
    }
    else
    {
      if (GrammarFeature != 1) {
        goto LABEL_64;
      }
      morphun::util::StringUtils::to_u16string();
      uint64_t v15 = morphun::dialog::SemanticFeatureModel::getFeature();
      uint64_t v16 = v15;
      if (SHIBYTE(v45) < 0)
      {
        operator delete(__p[0]);
        if (v16)
        {
LABEL_21:
          morphun::util::StringUtils::to_u16string();
          (*(void (**)(const char *, uint64_t, void **))(*(void *)a2 + 64))(a2, v16, __p);
          if ((SHIBYTE(v45) & 0x80000000) == 0) {
            goto LABEL_64;
          }
          char v17 = __p[0];
          goto LABEL_63;
        }
      }
      else if (v15)
      {
        goto LABEL_21;
      }
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v40, v46.__r_.__value_.__l.__data_, v46.__r_.__value_.__l.__size_);
      }
      else {
        std::string v40 = v46;
      }
      char v23 = std::string::insert(&v40, 0, "Unable to apply feature constraint for inflection. Ignoring '");
      long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      v41.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      char v25 = std::string::append(&v41, "', '");
      long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
      v42.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v26;
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        std::string::__init_copy_ctor_external(&v39, v47.__r_.__value_.__l.__data_, v47.__r_.__value_.__l.__size_);
      }
      else {
        std::string v39 = v47;
      }
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v27 = &v39;
      }
      else {
        char v27 = (std::string *)v39.__r_.__value_.__r.__words[0];
      }
      if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v39.__r_.__value_.__l.__size_;
      }
      std::string::size_type v29 = std::string::append(&v42, (const std::string::value_type *)v27, size);
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      int v31 = std::string::append(&v43, "'");
      long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      std::string::size_type v45 = v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Log::LogWithLevel((uint64_t)__p, 3u);
      if (SHIBYTE(v45) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v39.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
      {
        char v17 = (void *)v40.__r_.__value_.__r.__words[0];
        goto LABEL_63;
      }
    }
LABEL_64:
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    int v10 = (long long *)((char *)v10 + 56);
  }
  while (v10 != v9);
  if (v11)
  {
    uint64_t v37 = (*(uint64_t (**)(const char *, uint64_t))(*(void *)a2 + 104))(a2, v11);
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v37 = (*(uint64_t (**)(const char *))(*(void *)&a2[*(void *)(*(void *)a2 - 56)] + 24))(&a2[*(void *)(*(void *)a2 - 56)]);
LABEL_81:
  uint64_t v38 = v37;
  if (v37)
  {
    (*(void (**)(uint64_t))(*(void *)v37 + 32))(v37);
    (*(void (**)(uint64_t))(*(void *)v38 + 40))(v38);
    siri::dialogengine::SpeakableStringFromMorphun(a4);
    (*(void (**)(uint64_t))(*(void *)v38 + 16))(v38);
  }
  else
  {
    *(void *)(a4 + 16std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    *(_OWORD *)(a4 + 128) = 0u;
    *(_OWORD *)(a4 + 144) = 0u;
    *(_OWORD *)(a4 + 96) = 0u;
    *(_OWORD *)(a4 + 112) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
    *(_OWORD *)(a4 + ++*(void *)(this + 32) = 0u;
    *(_OWORD *)(a4 + ++*(void *)(this + 48) = 0u;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
  }
  if ((char)v50 < 0) {
    operator delete(v49[0]);
  }
}

void sub_1C5E087B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (v48) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v48);
  }
  if (v49) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v49);
  }
  __cxa_end_catch();
  if (*(char *)(v50 - 89) < 0) {
    operator delete(*(void **)(v50 - 112));
  }
  _Unwind_Resume(a1);
}

void sub_1C5E08878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *__p,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (*(char *)(v39 - 153) < 0) {
    operator delete(*(void **)(v39 - 176));
  }
  if (a39 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  __cxa_end_catch();
  if (*(char *)(v39 - 89) < 0) {
    operator delete(*(void **)(v39 - 112));
  }
  _Unwind_Resume(a1);
}

void sub_1C5E088D0()
{
  (*(void (**)(uint64_t))(*(void *)v0 + 16))(v0);
  JUMPOUT(0x1C5E088FCLL);
}

void siri::dialogengine::InflectPronoun(siri::dialogengine *a1, siri::dialogengine::Context *a2, uint64_t a3)
{
  siri::dialogengine::RegisterMorphunData(a1, a2);
  if (a1) {
    siri::dialogengine::Context::GetLocale(a1, v5, (uint64_t)v15);
  }
  else {
    std::string::basic_string[abi:ne180100]<0>(v15, "");
  }
  uint64_t v7 = v16;
  if ((v16 & 0x80u) != 0) {
    uint64_t v7 = v15[1];
  }
  if (!v7) {
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"InflectString has empty locale", v6);
  }
  memset(&v13, 0, sizeof(v13));
  unint64_t v8 = (morphun::dialog::LocalizedCommonConceptFactoryProvider *)morphun::util::ULocale::ULocale();
  uint64_t DefaultCommonConceptFactoryProvider = morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)DefaultCommonConceptFactoryProvider + 24))(DefaultCommonConceptFactoryProvider, v14);
  (*(void (**)(uint64_t))(*(void *)v10 + 24))(v10);
  if (*(char *)(a3 + 47) >= 0) {
    uint64_t v11 = *(unsigned __int8 *)(a3 + 47);
  }
  else {
    uint64_t v11 = *(void *)(a3 + 32);
  }
  if (v11 || (*(char *)(a3 + 23) >= 0 ? (uint64_t v12 = *(unsigned __int8 *)(a3 + 23)) : (uint64_t v12 = *(void *)(a3 + 8)), v12))
  {
    if ((*(unsigned char *)(a3 + 23) & 0x80) != 0) {
      std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
    }
    else {
      std::string v13 = *(std::string *)a3;
    }
    morphun::util::StringUtils::to_u16string();
    operator new();
  }
  operator new();
}

void sub_1C5E08D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long __p, std::string::size_type a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,std::string::size_type a30,int a31,__int16 a32,char a33,unsigned __int8 a34,std::string *a35,uint64_t a36,std::string *a37,uint64_t a38,long long a39,std::string::size_type a40)
{
  if (SHIBYTE(a10) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(a37) < 0) {
    operator delete(a35);
  }
  if ((char)a34 < 0) {
    operator delete(a29);
  }
  siri::dialogengine::SpeakableString::~SpeakableString((void **)v40);
  (*(void (**)(uint64_t))(*(void *)v42 + 16))(v42);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a39);
  if (*(char *)(v43 - 73) < 0) {
    operator delete(*(void **)(v43 - 96));
  }
  if (a2 == 1)
  {
    std::string v46 = __cxa_begin_catch(a1);
    siri::dialogengine::SemanticFeatureConstraint::ToString(v41, (uint64_t)&a35);
    std::string v47 = std::string::insert((std::string *)&a35, 0, "Failed to inflect pronoun with constraints '");
    long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
    *(void *)(v43 - 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((void *)&v47->__r_.__value_.__l + 2);
    *(_OWORD *)(v43 - 96) = v48;
    v47->__r_.__value_.__l.__size_ = 0;
    v47->__r_.__value_.__r.__words[2] = 0;
    v47->__r_.__value_.__r.__words[0] = 0;
    uint64_t v49 = std::string::append((std::string *)(v43 - 96), "' No morphun assets? Error: ");
    long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
    a40 = v49->__r_.__value_.__r.__words[2];
    a39 = v50;
    v49->__r_.__value_.__l.__size_ = 0;
    v49->__r_.__value_.__r.__words[2] = 0;
    v49->__r_.__value_.__r.__words[0] = 0;
    uint64_t v51 = (char *)(*(uint64_t (**)(void *))(*(void *)v46 + 16))(v46);
    std::string::basic_string[abi:ne180100]<0>(&a29, v51);
    if ((a34 & 0x80u) == 0) {
      uint64_t v52 = (const std::string::value_type *)&a29;
    }
    else {
      uint64_t v52 = (const std::string::value_type *)a29;
    }
    if ((a34 & 0x80u) == 0) {
      std::string::size_type v53 = a34;
    }
    else {
      std::string::size_type v53 = a30;
    }
    uint64_t v54 = std::string::append((std::string *)&a39, v52, v53);
    long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
    a10 = v54->__r_.__value_.__r.__words[2];
    std::string __p = v55;
    v54->__r_.__value_.__l.__size_ = 0;
    v54->__r_.__value_.__r.__words[2] = 0;
    v54->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
    if (SHIBYTE(a10) < 0) {
      operator delete((void *)__p);
    }
    if ((char)a34 < 0) {
      operator delete(a29);
    }
    if (SHIBYTE(a40) < 0) {
      operator delete((void *)a39);
    }
    if (*(char *)(v43 - 73) < 0) {
      operator delete(*(void **)(v43 - 96));
    }
    if (SHIBYTE(a37) < 0) {
      operator delete(a35);
    }
    *(void *)(v40 + 16std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
    *(_OWORD *)(v40 + 128) = 0u;
    *(_OWORD *)(v40 + 144) = 0u;
    *(_OWORD *)(v40 + 96) = 0u;
    *(_OWORD *)(v40 + 112) = 0u;
    *(_OWORD *)(v40 + 64) = 0u;
    *(_OWORD *)(v40 + 8std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0u;
    *(_OWORD *)(v40 + ++*(void *)(this + 32) = 0u;
    *(_OWORD *)(v40 + ++*(void *)(this + 48) = 0u;
    *(_OWORD *)uint64_t v40 = 0u;
    *(_OWORD *)(v40 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
    __cxa_end_catch();
    JUMPOUT(0x1C5E08D44);
  }
  _Unwind_Resume(a1);
}

std::string *siri::dialogengine::InflectString@<X0>(siri::dialogengine *this@<X1>, siri::dialogengine *a2@<X0>, int a3@<W3>, std::string *a4@<X8>)
{
  uint64_t v7 = *((unsigned __int8 *)this + 47);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *((void *)this + 4);
  }
  if (v7) {
    goto LABEL_7;
  }
  uint64_t v8 = *((unsigned __int8 *)this + 23);
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *((void *)this + 1);
  }
  if (v8)
  {
LABEL_7:
    if (a3)
    {
      uint64_t v21 = 0;
      memset(__str, 0, sizeof(__str));
    }
    else
    {
      siri::dialogengine::SpeakableString::SpeakableString((std::string *)__str, this);
    }
    siri::dialogengine::SpeakableStringToMorphun(this, this);
    siri::dialogengine::RegisterMorphunData(a2, v9);
    if (a2) {
      siri::dialogengine::Context::GetLocale(a2, v10, (uint64_t)v18);
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(v18, "");
    }
    unint64_t v12 = v19;
    if ((v19 & 0x80u) != 0) {
      unint64_t v12 = (unint64_t)v18[1];
    }
    if (!v12) {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"InflectString has empty locale", v11);
    }
    std::string v13 = (morphun::dialog::LocalizedCommonConceptFactoryProvider *)morphun::util::ULocale::ULocale();
    uint64_t DefaultCommonConceptFactoryProvider = morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(v13);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, unsigned char *))(*(void *)DefaultCommonConceptFactoryProvider + 24))(DefaultCommonConceptFactoryProvider, v17);
    (*(void (**)(uint64_t))(*(void *)v15 + 24))(v15);
    operator new();
  }
  return siri::dialogengine::SpeakableString::SpeakableString(a4, this);
}

void sub_1C5E095CC(_Unwind_Exception *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, std::string::value_type *a10, std::string::size_type a11, std::string *a12, std::string::value_type *a13, std::string *a14, uint64_t a15, std::string *a16, long long a17, uint64_t a18, void *a19, long long a20,std::string::size_type a21,uint64_t a22,long long a23,std::string::size_type a24,uint64_t a25,void *a26,uint64_t a27,std::string::size_type a28,uint64_t a29,void *a30,uint64_t a31,std::string::size_type a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,...)
{
  va_start(va1, a48);
  va_start(__pb, a48);
  __pa = va_arg(va1, void *);
  uint64_t v74 = va_arg(va1, void);
  std::string::size_type v75 = va_arg(va1, void);
  int v54 = (int)a2;
  siri::dialogengine::SpeakableString::~SpeakableString((void **)&v48->__r_.__value_.__l.__data_);
  (*(void (**)(uint64_t))(*(void *)v51 + 16))(v51);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a30);
  if (SHIBYTE(v75) < 0) {
    operator delete(__pa);
  }
  if (v54 == 1)
  {
    char v56 = __cxa_begin_catch(a1);
    if (*((char *)v50 + 23) < 0)
    {
      std::string::__init_copy_ctor_external((std::string *)&a17, *(const std::string::value_type **)v50, *((void *)v50 + 1));
    }
    else
    {
      a17 = *v50;
      a18 = *((void *)v50 + 2);
    }
    char v57 = std::string::insert((std::string *)&a17, 0, "Failed to inflect string '");
    long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
    a21 = v57->__r_.__value_.__r.__words[2];
    a20 = v58;
    v57->__r_.__value_.__l.__size_ = 0;
    v57->__r_.__value_.__r.__words[2] = 0;
    v57->__r_.__value_.__r.__words[0] = 0;
    long long v59 = std::string::append((std::string *)&a20, "' with constraints '");
    long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
    a24 = v59->__r_.__value_.__r.__words[2];
    a23 = v60;
    v59->__r_.__value_.__l.__size_ = 0;
    v59->__r_.__value_.__r.__words[2] = 0;
    v59->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::SemanticFeatureConstraint::ToString(v49, (uint64_t)&a13);
    if (a15 >= 0) {
      uint64_t v61 = (const std::string::value_type *)&a13;
    }
    else {
      uint64_t v61 = a13;
    }
    if (a15 >= 0) {
      std::string::size_type v62 = HIBYTE(a15);
    }
    else {
      std::string::size_type v62 = (std::string::size_type)a14;
    }
    uint64_t v63 = std::string::append((std::string *)&a23, v61, v62);
    long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
    a28 = v63->__r_.__value_.__r.__words[2];
    _OWORD *v52 = v64;
    v63->__r_.__value_.__l.__size_ = 0;
    v63->__r_.__value_.__r.__words[2] = 0;
    v63->__r_.__value_.__r.__words[0] = 0;
    long long v65 = std::string::append((std::string *)&a26, "' No morphun assets? Error: ");
    long long v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
    std::string::size_type v75 = v65->__r_.__value_.__r.__words[2];
    v52[10] = v66;
    v65->__r_.__value_.__l.__size_ = 0;
    v65->__r_.__value_.__r.__words[2] = 0;
    v65->__r_.__value_.__r.__words[0] = 0;
    unsigned int v67 = (char *)(*(uint64_t (**)(void *))(*(void *)v56 + 16))(v56);
    std::string::basic_string[abi:ne180100]<0>(&a10, v67);
    if (SHIBYTE(a12) >= 0) {
      unsigned int v68 = (const std::string::value_type *)&a10;
    }
    else {
      unsigned int v68 = a10;
    }
    if (SHIBYTE(a12) >= 0) {
      std::string::size_type v69 = HIBYTE(a12);
    }
    else {
      std::string::size_type v69 = a11;
    }
    uint64_t v70 = std::string::append((std::string *)__pb, v68, v69);
    long long v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
    a32 = v70->__r_.__value_.__r.__words[2];
    v52[2] = v71;
    v70->__r_.__value_.__l.__size_ = 0;
    v70->__r_.__value_.__r.__words[2] = 0;
    v70->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&a30, 3u);
    if (SHIBYTE(a32) < 0) {
      operator delete(a30);
    }
    if (SHIBYTE(a12) < 0) {
      operator delete(a10);
    }
    if (SHIBYTE(v75) < 0) {
      operator delete(__pa);
    }
    if (SHIBYTE(a28) < 0) {
      operator delete(a26);
    }
    if (SHIBYTE(a15) < 0) {
      operator delete(a13);
    }
    if (SHIBYTE(a24) < 0) {
      operator delete((void *)a23);
    }
    if (SHIBYTE(a21) < 0) {
      operator delete((void *)a20);
    }
    if (SHIBYTE(a18) < 0) {
      operator delete((void *)a17);
    }
    siri::dialogengine::SpeakableString::SpeakableString(v48, (const siri::dialogengine::SpeakableString *)(v53 - 240));
    __cxa_end_catch();
    JUMPOUT(0x1C5E09538);
  }
  morphun::dialog::SpeakableString::~SpeakableString((morphun::dialog::SpeakableString *)va1);
  siri::dialogengine::SpeakableString::~SpeakableString((void **)(v53 - 240));
  _Unwind_Resume(a1);
}

void siri::dialogengine::InflectDialog(siri::dialogengine *a1@<X0>, siri::dialogengine::Context *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, std::string *a5@<X8>)
{
  uint64_t v10 = (std::string *)(a3 + 24);
  if (*(char *)(a3 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)(a3 + 24), *(void *)(a3 + 32));
  }
  else
  {
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = *(void *)(a3 + 40);
  }
  siri::dialogengine::ExtractSpeechCodesFromString((uint64_t)&__str, (uint64_t)v22);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (v22[0] == v22[1]) {
    goto LABEL_12;
  }
  if (*(char *)(a3 + 47) < 0) {
    std::string::__init_copy_ctor_external(&__str, *(const std::string::value_type **)(a3 + 24), *(void *)(a3 + 32));
  }
  else {
    std::string __str = *v10;
  }
  int v11 = siri::dialogengine::ContainsTTStoiCodes(&__str.__r_.__value_.__l.__data_);
  int v12 = v11;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    if (v12) {
      goto LABEL_12;
    }
  }
  else if (v11)
  {
LABEL_12:
    if (a4) {
      siri::dialogengine::InflectPronoun(a1, a2, a3);
    }
    siri::dialogengine::InflectString((siri::dialogengine *)a3, a1, 0, a5);
    goto LABEL_48;
  }
  if (*(char *)(a3 + 47) < 0) {
    std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)(a3 + 24), *(void *)(a3 + 32));
  }
  else {
    std::string v21 = *v10;
  }
  siri::dialogengine::RemoveSpeechCodesFromString((uint64_t)&v21, &__str);
  std::string::operator=(v10, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__str.__r_.__value_.__l.__data_);
    if (a4) {
LABEL_21:
    }
      siri::dialogengine::InflectPronoun(a1, a2, a3);
  }
  else if (a4)
  {
    goto LABEL_21;
  }
  siri::dialogengine::InflectString((siri::dialogengine *)a3, a1, 0, &__str);
  std::string::operator=((std::string *)a3, &__str);
  std::string::operator=(v10, &v15);
  std::string::operator=((std::string *)(a3 + 48), &v16);
  std::string::operator=((std::string *)(a3 + 72), &v17);
  std::string::operator=((std::string *)(a3 + 96), &v18);
  std::string::operator=((std::string *)(a3 + 120), &v19);
  std::string::operator=((std::string *)(a3 + 144), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (*(char *)(a3 + 47) < 0) {
    std::string::__init_copy_ctor_external(&v13, *(const std::string::value_type **)(a3 + 24), *(void *)(a3 + 32));
  }
  else {
    std::string v13 = *v10;
  }
  siri::dialogengine::RemoveEmojiChars(&v13, &__str);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  siri::dialogengine::AddSpeechCodesToString((uint64_t)&__str, (uint64_t)v22, &v13);
  std::string::operator=(v10, &v13);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  siri::dialogengine::SpeakableString::SpeakableString(a5, (const siri::dialogengine::SpeakableString *)a3);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
LABEL_48:
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
}

void sub_1C5E09DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 - 89) < 0) {
    operator delete(*(void **)(v21 - 112));
  }
  std::string __p = (void *)(v21 - 88);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ValidateInflection(siri::dialogengine::Context *a1@<X0>, const char *a2@<X1>, uint64_t a3@<X8>)
{
  std::string v53[2] = *MEMORY[0x1E4F143B8];
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  if (*((void *)a2 + 1) != *(void *)a2)
  {
    if (a1) {
      siri::dialogengine::Context::GetLocale(a1, a2, (uint64_t)&v49);
    }
    else {
      std::string::basic_string[abi:ne180100]<0>(&v49, "");
    }
    std::string::size_type v6 = v51;
    if ((v51 & 0x80u) != 0) {
      std::string::size_type v6 = v50;
    }
    if (v6)
    {
      uint64_t v7 = *(long long **)a2;
      uint64_t v8 = (long long *)*((void *)a2 + 1);
      if (*(long long **)a2 != v8)
      {
        do
        {
          if (*((char *)v7 + 23) < 0)
          {
            std::string::__init_copy_ctor_external((std::string *)&v46, *(const std::string::value_type **)v7, *((void *)v7 + 1));
          }
          else
          {
            long long v9 = *v7;
            v46.__end_ = (std::__split_buffer<std::string>::pointer)*((void *)v7 + 2);
            *(_OWORD *)&v46.__first_ = v9;
          }
          if (*((char *)v7 + 47) < 0)
          {
            std::string::__init_copy_ctor_external((std::string *)&v46.__end_cap_, *((const std::string::value_type **)v7 + 3), *((void *)v7 + 4));
          }
          else
          {
            std::__compressed_pair<std::string *> v10 = *(std::__compressed_pair<std::string *> *)((char *)v7 + 24);
            uint64_t v47 = *((void *)v7 + 5);
            v46.__end_cap_ = v10;
          }
          char v48 = *((unsigned char *)v7 + 48);
          if (!siri::dialogengine::SemanticFeatureConstraint::GetGrammarFeature((std::string *)&v46, (uint64_t)&v49))
          {
            if (SHIBYTE(v46.__end_) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, (const std::string::value_type *)v46.__first_, (std::string::size_type)v46.__begin_);
            }
            else
            {
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = *(_OWORD *)&v46.__first_;
              __p.__r_.__value_.__r.__words[2] = (std::string::size_type)v46.__end_;
            }
            int v11 = std::string::insert(&__p, 0, "Inflection function '");
            long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
            v44.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v12;
            v11->__r_.__value_.__l.__size_ = 0;
            v11->__r_.__value_.__r.__words[2] = 0;
            v11->__r_.__value_.__r.__words[0] = 0;
            std::string v13 = std::string::append(&v44, "' is invalid for locale ");
            long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
            v45.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v14;
            v13->__r_.__value_.__l.__size_ = 0;
            v13->__r_.__value_.__r.__words[2] = 0;
            v13->__r_.__value_.__r.__words[0] = 0;
            if ((v51 & 0x80u) == 0) {
              std::string v15 = (const std::string::value_type *)&v49;
            }
            else {
              std::string v15 = (const std::string::value_type *)v49;
            }
            if ((v51 & 0x80u) == 0) {
              std::string::size_type v16 = v51;
            }
            else {
              std::string::size_type v16 = v50;
            }
            std::string v17 = std::string::append(&v45, v15, v16);
            std::string::size_type v18 = v17->__r_.__value_.__r.__words[0];
            v53[0] = v17->__r_.__value_.__l.__size_;
            *(void *)((char *)v53 + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
            char v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
            v17->__r_.__value_.__l.__size_ = 0;
            v17->__r_.__value_.__r.__words[2] = 0;
            v17->__r_.__value_.__r.__words[0] = 0;
            unint64_t v20 = *(void *)(a3 + 8);
            unint64_t v21 = *(void *)(a3 + 16);
            if (v20 >= v21)
            {
              unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - *(void *)a3) >> 3);
              unint64_t v25 = v24 + 1;
              if (v24 + 1 > 0xAAAAAAAAAAAAAAALL) {
                std::vector<BOOL>::__throw_length_error[abi:ne180100]();
              }
              unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - *(void *)a3) >> 3);
              if (2 * v26 > v25) {
                unint64_t v25 = 2 * v26;
              }
              if (v26 >= 0x555555555555555) {
                unint64_t v27 = 0xAAAAAAAAAAAAAAALL;
              }
              else {
                unint64_t v27 = v25;
              }
              __v.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
              if (v27) {
                std::string::size_type v28 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3 + 16, v27);
              }
              else {
                std::string::size_type v28 = 0;
              }
              std::string::size_type v29 = v28 + v24;
              __v.__first_ = v28;
              __v.__begin_ = v29;
              __v.__end_cap_.__value_ = &v28[v27];
              std::string::size_type v30 = v53[0];
              v29->__r_.__value_.__r.__words[0] = v18;
              v29->__r_.__value_.__l.__size_ = v30;
              *(std::string::size_type *)((char *)&v29->__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v53 + 7);
              *((unsigned char *)&v29->__r_.__value_.__s + 23) = v19;
              v53[0] = 0;
              *(void *)((char *)v53 + 7) = 0;
              __v.__end_ = v29 + 1;
              std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &__v);
              unint64_t v23 = *(void *)(a3 + 8);
              std::__split_buffer<std::string>::~__split_buffer(&__v);
            }
            else
            {
              uint64_t v22 = v53[0];
              *(void *)unint64_t v20 = v18;
              *(void *)(v20 + 8) = v22;
              *(void *)(v20 + 15) = *(void *)((char *)v53 + 7);
              *(unsigned char *)(v20 + 23) = v19;
              unint64_t v23 = v20 + 24;
              *(void *)(a3 + 8) = v20 + 24;
            }
            *(void *)(a3 + 8) = v23;
            if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v45.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v44.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v47) < 0) {
            operator delete(v46.__end_cap_.__value_);
          }
          if (SHIBYTE(v46.__end_) < 0) {
            operator delete(v46.__first_);
          }
          uint64_t v7 = (long long *)((char *)v7 + 56);
        }
        while (v7 != v8);
      }
    }
    else
    {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"ValidateInflection has empty locale", v5);
      std::string::basic_string[abi:ne180100]<0>(&__v, "No locale defined for inflection features.");
      unint64_t v31 = *(void *)(a3 + 16);
      unint64_t v32 = *(void *)(a3 + 8);
      if (v32 >= v31)
      {
        unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - *(void *)a3) >> 3);
        unint64_t v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v31 - *(void *)a3) >> 3);
        if (2 * v36 > v35) {
          unint64_t v35 = 2 * v36;
        }
        if (v36 >= 0x555555555555555) {
          unint64_t v37 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v37 = v35;
        }
        v46.__end_cap_.__value_ = (std::allocator<std::string> *)(a3 + 16);
        if (v37) {
          uint64_t v38 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(a3 + 16, v37);
        }
        else {
          uint64_t v38 = 0;
        }
        uint64_t v39 = v38 + v34;
        v46.__first_ = v38;
        v46.__begin_ = v39;
        v46.__end_cap_.__value_ = &v38[v37];
        long long v40 = *(_OWORD *)&__v.__first_;
        v39->__r_.__value_.__r.__words[2] = (std::string::size_type)__v.__end_;
        *(_OWORD *)&v39->__r_.__value_.__l.__data_ = v40;
        memset(&__v, 0, 24);
        v46.__end_ = v39 + 1;
        std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a3, &v46);
        uint64_t v41 = *(void *)(a3 + 8);
        std::__split_buffer<std::string>::~__split_buffer(&v46);
        int end_high = SHIBYTE(__v.__end_);
        *(void *)(a3 + 8) = v41;
        if (end_high < 0) {
          operator delete(__v.__first_);
        }
      }
      else
      {
        long long v33 = *(_OWORD *)&__v.__first_;
        *(void *)(v32 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = __v.__end_;
        *(_OWORD *)unint64_t v32 = v33;
        *(void *)(a3 + 8) = v32 + 24;
      }
    }
    if ((char)v51 < 0) {
      operator delete(v49);
    }
  }
}

void sub_1C5E0A300(_Unwind_Exception *a1, uint64_t a2, int a3, __int16 a4, char a5, char a6, uint64_t a7, void *a8, void *a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, void *a15, void *a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,std::__split_buffer<std::string> *a22,void *a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__pa,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  std::__split_buffer<std::string>::~__split_buffer((std::__split_buffer<std::string> *)&a27);
  if (*(char *)(v42 - 137) < 0) {
    operator delete(*(void **)(v42 - 160));
  }
  if (a42 < 0) {
    operator delete(__pa);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__pa);
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::NumberOperationFromFeature(unsigned __int8 *a1)
{
  {
    operator new();
  }
  uint64_t v2 = (std::once_flag::_State_type *)siri::dialogengine::NumberOperationFromFeature(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::NumberOperationFromFeature(std::string const&)::flag, memory_order_acquire) != -1)
  {
    std::string v17 = &v15;
    std::string::size_type v16 = &v17;
    std::__call_once(v2, &v16, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::NumberOperationFromFeature(std::string const&)::$_0 &&>>);
  }
  std::string v3 = (void *)siri::dialogengine::NumberOperationFromFeature(std::string const&)::operations;
  unint64_t v4 = std::__string_hash<char>::operator()[abi:ne180100](siri::dialogengine::NumberOperationFromFeature(std::string const&)::operations + 24, (uint64_t)a1);
  int8x8_t v5 = (int8x8_t)v3[1];
  if (v5)
  {
    unint64_t v6 = v4;
    uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
    v7.i16[0] = vaddlv_u8(v7);
    unint64_t v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL)
    {
      unint64_t v9 = v4;
      if (v4 >= *(void *)&v5) {
        unint64_t v9 = v4 % *(void *)&v5;
      }
    }
    else
    {
      unint64_t v9 = (*(void *)&v5 - 1) & v4;
    }
    std::__compressed_pair<std::string *> v10 = *(unsigned __int8 ***)(*v3 + 8 * v9);
    if (v10)
    {
      int v11 = *v10;
      if (*v10)
      {
        uint64_t v12 = (uint64_t)(v3 + 4);
        do
        {
          unint64_t v13 = *((void *)v11 + 1);
          if (v6 == v13)
          {
            if (std::equal_to<std::string>::operator()[abi:ne180100](v12, v11 + 16, a1)) {
              return *((unsigned int *)v11 + 10);
            }
          }
          else
          {
            if (v8 > 1)
            {
              if (v13 >= *(void *)&v5) {
                v13 %= *(void *)&v5;
              }
            }
            else
            {
              v13 &= *(void *)&v5 - 1;
            }
            if (v13 != v9) {
              return 0xFFFFFFFFLL;
            }
          }
          int v11 = *(unsigned __int8 **)v11;
        }
        while (v11);
      }
    }
  }
  return 0xFFFFFFFFLL;
}

void sub_1C5E0A598(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::NumberOperationFromFeature(std::string const&)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5E0AC88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  while (1)
  {
    if (*((char *)v12 - 9) < 0) {
      operator delete(*(v12 - 4));
    }
    v12 -= 4;
    if (v12 == (void **)&a11)
    {
      MEMORY[0x1C8796D70](v11, 0x10A0C408EF24B1CLL);
      _Unwind_Resume(a1);
    }
  }
}

uint64_t siri::dialogengine::NumberOperationIsModifier(int a1)
{
  return ((a1 + 1) < 0x12) & (0x3FFE0u >> (a1 + 1));
}

void siri::dialogengine::FormatNumberConcept(uint64_t a1, uint64_t a2, uint64_t a3)
{
  siri::dialogengine::SemanticFeatureConstraint::FromString(a1, (unsigned __int8 *)a3, &v80);
  unint64_t v6 = v80;
  int8x8_t v5 = v81;
  if (v80 == v81)
  {
    uint64_t v44 = *(unsigned __int8 *)(a3 + 23);
    if ((v44 & 0x80u) != 0) {
      uint64_t v44 = *(void *)(a3 + 8);
    }
    if (v44)
    {
      std::operator+<char>();
      std::string v45 = std::string::append((std::string *)&v82, "'");
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Log::LogWithLevel((uint64_t)&v76, 3u);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v82.__end_) < 0) {
        operator delete(v82.__first_);
      }
    }
    morphun::util::StringUtils::to_u16string();
    morphun::dialog::SpeakableString::SpeakableString();
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v47 = (unsigned int *)v76.__r_.__value_.__r.__words[0];
LABEL_146:
      operator delete(v47);
    }
  }
  else
  {
    unint64_t v70 = 0;
    uint8x8_t v7 = 0;
    unint64_t v8 = 0;
    unint64_t v9 = 0;
    std::string __p = 0;
    std::__compressed_pair<std::string *> v10 = 0;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        std::string::__init_copy_ctor_external(&v76, *(const std::string::value_type **)v6, *((void *)v6 + 1));
      }
      else
      {
        long long v11 = *v6;
        v76.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
        *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v11;
      }
      unsigned int v13 = siri::dialogengine::NumberOperationFromFeature((unsigned __int8 *)&v76);
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if (v13 - 4 >= 0xD)
      {
        if (v13 == -1)
        {
          if (*((char *)v6 + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&v79, *(const std::string::value_type **)v6, *((void *)v6 + 1));
          }
          else
          {
            long long v20 = *v6;
            v79.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
            *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v20;
          }
          unint64_t v24 = std::string::insert(&v79, 0, "Unsupported number concept operation: '");
          long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
          v82.__end_ = (std::__split_buffer<std::string>::pointer)v24->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v82.__first_ = v25;
          v24->__r_.__value_.__l.__size_ = 0;
          v24->__r_.__value_.__r.__words[2] = 0;
          v24->__r_.__value_.__r.__words[0] = 0;
          unint64_t v26 = std::string::append((std::string *)&v82, "'");
          long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
          v76.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v27;
          v26->__r_.__value_.__l.__size_ = 0;
          v26->__r_.__value_.__r.__words[2] = 0;
          v26->__r_.__value_.__r.__words[0] = 0;
          siri::dialogengine::Log::LogWithLevel((uint64_t)&v76, 1u);
          if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v76.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v82.__end_) < 0) {
            operator delete(v82.__first_);
          }
          if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v79.__r_.__value_.__l.__data_);
          }
        }
        else if ((unint64_t)v10 >= v70)
        {
          uint64_t v21 = (v10 - __p) >> 4;
          unint64_t v22 = v21 + 1;
          if ((unint64_t)(v21 + 1) >> 60) {
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          }
          if ((uint64_t)(v70 - (void)__p) >> 3 > v22) {
            unint64_t v22 = (uint64_t)(v70 - (void)__p) >> 3;
          }
          if (v70 - (unint64_t)__p >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v23 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v23 = v22;
          }
          if (v23) {
            unint64_t v23 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v23);
          }
          else {
            uint64_t v12 = 0;
          }
          unint64_t v28 = v23 + 16 * v21;
          *(_DWORD *)unint64_t v28 = v13;
          *(void *)(v28 + 8) = v6;
          if (v10 == __p)
          {
            unint64_t v31 = (char *)(v23 + 16 * v21);
            std::string::size_type v30 = __p;
          }
          else
          {
            unint64_t v29 = v23 + 16 * v21;
            std::string::size_type v30 = __p;
            do
            {
              unint64_t v31 = (char *)(v29 - 16);
              *(_OWORD *)(v29 - google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((_OWORD *)v10 - 1);
              v10 -= 16;
              v29 -= 16;
            }
            while (v10 != __p);
          }
          unint64_t v70 = v23 + 16 * (void)v12;
          std::__compressed_pair<std::string *> v10 = (char *)(v28 + 16);
          if (v30) {
            operator delete(v30);
          }
          std::string __p = v31;
        }
        else
        {
          *(_DWORD *)std::__compressed_pair<std::string *> v10 = v13;
          *((void *)v10 + 1) = v6;
          v10 += 16;
        }
      }
      else if ((unint64_t)v8 >= v9)
      {
        uint64_t v14 = ((char *)v8 - (char *)v7) >> 4;
        unint64_t v15 = v14 + 1;
        if ((unint64_t)(v14 + 1) >> 60) {
          std::vector<BOOL>::__throw_length_error[abi:ne180100]();
        }
        if ((uint64_t)(v9 - (void)v7) >> 3 > v15) {
          unint64_t v15 = (uint64_t)(v9 - (void)v7) >> 3;
        }
        if (v9 - (unint64_t)v7 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v15;
        }
        if (v16) {
          unint64_t v16 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>>(v16);
        }
        else {
          uint64_t v12 = 0;
        }
        unint64_t v17 = v16 + 16 * v14;
        *(_DWORD *)unint64_t v17 = v13;
        *(void *)(v17 + 8) = v6;
        if (v8 == v7)
        {
          char v19 = (unsigned int *)(v16 + 16 * v14);
        }
        else
        {
          unint64_t v18 = v16 + 16 * v14;
          do
          {
            char v19 = (unsigned int *)(v18 - 16);
            *(_OWORD *)(v18 - google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((_OWORD *)v8 - 1);
            v8 -= 4;
            v18 -= 16;
          }
          while (v8 != v7);
        }
        unint64_t v9 = v16 + 16 * (void)v12;
        unint64_t v8 = (unsigned int *)(v17 + 16);
        if (v7) {
          operator delete(v7);
        }
        uint8x8_t v7 = v19;
      }
      else
      {
        *unint64_t v8 = v13;
        *((void *)v8 + 1) = v6;
        v8 += 4;
      }
      unint64_t v6 = (long long *)((char *)v6 + 56);
    }
    while (v6 != v5);
    if (v7 == v8)
    {
      uint64_t v36 = 0;
      unint64_t v34 = __p;
    }
    else
    {
      uint64_t v32 = 0;
      long long v33 = v7;
      unint64_t v34 = __p;
      do
      {
        uint64_t v35 = *((void *)v33 + 1);
        if (*(char *)(v35 + 47) < 0) {
          std::string::__init_copy_ctor_external(&v76, *(const std::string::value_type **)(v35 + 24), *(void *)(v35 + 32));
        }
        else {
          std::string v76 = *(std::string *)(v35 + 24);
        }
        switch(*v33)
        {
          case 0xFFFFFFFF:
          case 0u:
          case 1u:
          case 2u:
          case 3u:
            siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Internal logic error: NumberOperation misclassified as a modifier: %d", v12, *v33);
            goto LABEL_66;
          case 4u:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
            goto LABEL_80;
          case 5u:
            uint64_t v41 = siri::dialogengine::StringToBool(&v76);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 88))(a2, v41);
            goto LABEL_80;
          case 6u:
            uint64_t v40 = siri::dialogengine::StringToInt(&v76, 0, 0);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 48))(a2, v40);
            goto LABEL_80;
          case 7u:
            uint64_t v43 = siri::dialogengine::StringToInt(&v76, 0, 0);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 56))(a2, v43);
            goto LABEL_80;
          case 8u:
            uint64_t v39 = siri::dialogengine::StringToInt(&v76, 0, 0);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 80))(a2, v39);
            goto LABEL_80;
          case 9u:
            uint64_t v42 = siri::dialogengine::StringToInt(&v76, 0, 0);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 40))(a2, v42);
            goto LABEL_80;
          case 0xAu:
            uint64_t v37 = siri::dialogengine::StringToInt(&v76, 0, 0);
            uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 72))(a2, v37);
            goto LABEL_80;
          case 0xBu:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 128))(a2);
            goto LABEL_80;
          case 0xCu:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 104))(a2);
            goto LABEL_80;
          case 0xDu:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 136))(a2);
            goto LABEL_80;
          case 0xEu:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 120))(a2);
            goto LABEL_80;
          case 0xFu:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 112))(a2);
            goto LABEL_80;
          case 0x10u:
            uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 96))(a2);
LABEL_80:
            uint64_t v36 = v38;
            a2 = v38;
            if (v32)
            {
              (*(void (**)(uint64_t))(*(void *)v32 + 16))(v32);
              a2 = v36;
            }
            break;
          default:
LABEL_66:
            uint64_t v36 = v32;
            break;
        }
        if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v76.__r_.__value_.__l.__data_);
        }
        v33 += 4;
        uint64_t v32 = v36;
      }
      while (v33 != v8);
    }
    LODWORD(v76.__r_.__value_.__l.__data_) = 0;
    *(_OWORD *)&v76.__r_.__value_.__r.__words[1] = 0u;
    memset(v77, 0, sizeof(v77));
    std::string::value_type v78 = 0;
    if (v34 == v10) {
      goto LABEL_127;
    }
    if ((unint64_t)(v10 - v34) >= 0x11)
    {
      memset(&v79, 0, sizeof(v79));
      do
      {
        char v48 = (long long *)*((void *)v34 + 1);
        if (*((char *)v48 + 23) < 0)
        {
          std::string::__init_copy_ctor_external(&v75, *(const std::string::value_type **)v48, *((void *)v48 + 1));
        }
        else
        {
          long long v49 = *v48;
          v75.__r_.__value_.__r.__words[2] = *((void *)v48 + 2);
          *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v49;
        }
        std::string::size_type size = (_OWORD *)v79.__r_.__value_.__l.__size_;
        if (v79.__r_.__value_.__l.__size_ >= v79.__r_.__value_.__r.__words[2])
        {
          unint64_t v52 = 0xAAAAAAAAAAAAAAABLL
              * ((uint64_t)(v79.__r_.__value_.__l.__size_ - v79.__r_.__value_.__r.__words[0]) >> 3);
          unint64_t v53 = v52 + 1;
          if (v52 + 1 > 0xAAAAAAAAAAAAAAALL) {
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          }
          if (0x5555555555555556
             * ((uint64_t)(v79.__r_.__value_.__r.__words[2] - v79.__r_.__value_.__r.__words[0]) >> 3) > v53)
            unint64_t v53 = 0x5555555555555556
                * ((uint64_t)(v79.__r_.__value_.__r.__words[2] - v79.__r_.__value_.__r.__words[0]) >> 3);
          if (0xAAAAAAAAAAAAAAABLL
             * ((uint64_t)(v79.__r_.__value_.__r.__words[2] - v79.__r_.__value_.__r.__words[0]) >> 3) >= 0x555555555555555)
            unint64_t v54 = 0xAAAAAAAAAAAAAAALL;
          else {
            unint64_t v54 = v53;
          }
          v82.__end_cap_.__value_ = (std::allocator<std::string> *)&v79.__r_.__value_.__r.__words[2];
          if (v54) {
            long long v55 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&v79.__r_.__value_.__r.__words[2], v54);
          }
          else {
            long long v55 = 0;
          }
          char v56 = v55 + v52;
          v82.__first_ = v55;
          v82.__begin_ = v56;
          v82.__end_cap_.__value_ = &v55[v54];
          long long v57 = *(_OWORD *)&v75.__r_.__value_.__l.__data_;
          v56->__r_.__value_.__r.__words[2] = v75.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v56->__r_.__value_.__l.__data_ = v57;
          memset(&v75, 0, sizeof(v75));
          v82.__end_ = v56 + 1;
          std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)&v79, &v82);
          std::string::size_type v58 = v79.__r_.__value_.__l.__size_;
          std::__split_buffer<std::string>::~__split_buffer(&v82);
          v79.__r_.__value_.__l.__size_ = v58;
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v75.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v51 = *(_OWORD *)&v75.__r_.__value_.__l.__data_;
          *(void *)(v79.__r_.__value_.__l.__size_ + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((void *)&v75.__r_.__value_.__l + 2);
          *std::string::size_type size = v51;
          v79.__r_.__value_.__l.__size_ = (std::string::size_type)size + 24;
        }
        v34 += 16;
      }
      while (v34 != v10);
      std::string::basic_string[abi:ne180100]<0>(v72, ", ");
      unint64_t v34 = __p;
      siri::dialogengine::StringJoinInternal<std::vector<std::string>>((uint64_t)&v74, (uint64_t)v79.__r_.__value_.__l.__data_, v79.__r_.__value_.__l.__size_, (uint64_t)v72);
      long long v59 = std::string::insert(&v74, 0, "Multiple number concept output operations (");
      long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
      v75.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v60;
      v59->__r_.__value_.__l.__size_ = 0;
      v59->__r_.__value_.__r.__words[2] = 0;
      v59->__r_.__value_.__r.__words[0] = 0;
      uint64_t v61 = std::string::append(&v75, ").  Only the first will be used.");
      long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
      v82.__end_ = (std::__split_buffer<std::string>::pointer)v61->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__first_ = v62;
      v61->__r_.__value_.__l.__size_ = 0;
      v61->__r_.__value_.__r.__words[2] = 0;
      v61->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Log::LogWithLevel((uint64_t)&v82, 1u);
      if (SHIBYTE(v82.__end_) < 0) {
        operator delete(v82.__first_);
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v74.__r_.__value_.__l.__data_);
      }
      if (v73 < 0) {
        operator delete(v72[0]);
      }
      v82.__first_ = &v79;
      std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v82);
    }
    LODWORD(v76.__r_.__value_.__l.__data_) = *(_DWORD *)v34;
    uint64_t v63 = (const std::string *)*((void *)v34 + 1);
    std::string::operator=((std::string *)&v76.__r_.__value_.__r.__words[1], v63);
    std::string::operator=((std::string *)&v77[1], v63 + 1);
    std::string::value_type v78 = v63[2].__r_.__value_.__s.__data_[0];
    if ((SHIBYTE(v77[3]) & 0x80000000) == 0) {
LABEL_127:
    }
      std::string v79 = *(std::string *)&v77[1];
    else {
      std::string::__init_copy_ctor_external(&v79, (const std::string::value_type *)v77[1], (std::string::size_type)v77[2]);
    }
    morphun::util::StringUtils::to_u16string();
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if ((LODWORD(v76.__r_.__value_.__l.__data_) - 4) >= 0xD)
    {
      switch(LODWORD(v76.__r_.__value_.__l.__data_))
      {
        case 0:
          std::__split_buffer<std::string>::pointer end_high = (std::__split_buffer<std::string>::pointer)HIBYTE(v82.__end_);
          if (SHIBYTE(v82.__end_) < 0) {
            std::__split_buffer<std::string>::pointer end_high = v82.__begin_;
          }
          if (!end_high) {
            goto LABEL_132;
          }
          (*(void (**)(std::string *__return_ptr, uint64_t, std::__split_buffer<std::string> *))(*(void *)a2 + 224))(&v79, a2, &v82);
          morphun::dialog::SpeakableString::SpeakableString();
          goto LABEL_164;
        case 1:
          (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a2 + 216))(&v79, a2);
          morphun::dialog::SpeakableString::SpeakableString();
          goto LABEL_164;
        case 2:
          std::__split_buffer<std::string>::pointer begin = (std::__split_buffer<std::string>::pointer)HIBYTE(v82.__end_);
          if (SHIBYTE(v82.__end_) < 0) {
            std::__split_buffer<std::string>::pointer begin = v82.__begin_;
          }
          uint64_t v69 = *(void *)a2;
          if (begin)
          {
            (*(void (**)(uint64_t, std::__split_buffer<std::string> *))(v69 + 200))(a2, &v82);
            goto LABEL_134;
          }
          long long v65 = (void (**)(uint64_t))(v69 + 192);
          break;
        case 3:
          std::__split_buffer<std::string>::pointer v67 = (std::__split_buffer<std::string>::pointer)HIBYTE(v82.__end_);
          if (SHIBYTE(v82.__end_) < 0) {
            std::__split_buffer<std::string>::pointer v67 = v82.__begin_;
          }
          if (v67) {
            (*(void (**)(std::string *__return_ptr, uint64_t, std::__split_buffer<std::string> *))(*(void *)a2 + 184))(&v79, a2, &v82);
          }
          else {
            (*(void (**)(std::string *__return_ptr, uint64_t))(*(void *)a2 + 176))(&v79, a2);
          }
          morphun::dialog::SpeakableString::SpeakableString();
LABEL_164:
          if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v79.__r_.__value_.__l.__data_);
          }
          goto LABEL_134;
        default:
          goto LABEL_131;
      }
    }
    else
    {
LABEL_131:
      siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Internal logic error: NumberOperation misclassified as an outputter: %d", v64, LODWORD(v76.__r_.__value_.__l.__data_));
LABEL_132:
      long long v65 = (void (**)(uint64_t))(*(void *)a2 + 208);
    }
    (*v65)(a2);
LABEL_134:
    if (SHIBYTE(v82.__end_) < 0) {
      operator delete(v82.__first_);
    }
    if (SHIBYTE(v77[3]) < 0) {
      operator delete(v77[1]);
    }
    if (SHIBYTE(v77[0]) < 0) {
      operator delete((void *)v76.__r_.__value_.__l.__size_);
    }
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 16))(v36);
    }
    if (v34) {
      operator delete(v34);
    }
    if (v7)
    {
      uint64_t v47 = v7;
      goto LABEL_146;
    }
  }
  v76.__r_.__value_.__r.__words[0] = (std::string::size_type)&v80;
  std::vector<siri::dialogengine::SemanticFeatureConstraint>::__destroy_vector::operator()[abi:ne180100]((void ***)&v76);
}

void sub_1C5E0BA80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v50 - 105) < 0) {
    operator delete(*(void **)(v50 - 128));
  }
  google::protobuf::util::StatusOr<std::string>::~StatusOr((uint64_t)&a32);
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 16))(v49);
  }
  if (a12) {
    operator delete(a12);
  }
  if (v48) {
    operator delete(v48);
  }
  a32 = (void *)(v50 - 152);
  std::vector<siri::dialogengine::SemanticFeatureConstraint>::__destroy_vector::operator()[abi:ne180100]((void ***)&a32);
  _Unwind_Resume(a1);
}

void siri::dialogengine::ValidateNumberConceptRuleSet(uint64_t a1@<X0>, std::string **a2@<X1>, uint64_t a3@<X8>)
{
  v75[2] = *MEMORY[0x1E4F143B8];
  unint64_t v6 = std::string::basic_string[abi:ne180100]<0>((void *)a3, "");
  uint8x8_t v7 = *a2;
  if (SHIBYTE((*a2)[1].__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v74, v7[1].__r_.__value_.__l.__data_, v7[1].__r_.__value_.__l.__size_);
  }
  else {
    std::string v74 = v7[1];
  }
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!v74.__r_.__value_.__l.__size_)
    {
LABEL_108:
      operator delete(v74.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if (!*((unsigned char *)&v74.__r_.__value_.__s + 23))
  {
    return;
  }
  unint64_t v8 = *a2;
  if (SHIBYTE((*a2)->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v73, v8->__r_.__value_.__l.__data_, v8->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v73.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v9;
  }
  UErrorCode v72 = U_ZERO_ERROR;
  uint64_t v10 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unsigned int v13 = (UChar *)((char *)v66 + v12);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v14);
  unint64_t v16 = (char *)v66 + v15;
  if (*(char *)(a1 + 23) >= 0) {
    unint64_t v17 = (const std::string::value_type *)a1;
  }
  else {
    unint64_t v17 = *(const std::string::value_type **)a1;
  }
  unum_open();
  unum_open();
  unum_getTextAttribute();
  unum_getTextAttribute();
  if (v72 >= U_ILLEGAL_ARGUMENT_ERROR)
  {
    unint64_t v18 = (char *)u_errorName(v72);
    char v19 = (std::string *)std::string::basic_string[abi:ne180100]<0>(&v70, v18);
    long long v20 = std::string::insert(v19, 0, "an error occurred retrieving rule sets: ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v71.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&v71, 3u);
    if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v71.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v22 = (void *)v70.__r_.__value_.__r.__words[0];
LABEL_19:
      operator delete(v22);
      goto LABEL_105;
    }
    goto LABEL_105;
  }
  u_austrcpy((char *)&v66[-2504], v66);
  u_austrcpy(v16, v13);
  char v23 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = v73.__r_.__value_.__l.__size_;
    if (v73.__r_.__value_.__l.__size_ == 7)
    {
      if (*(_DWORD *)v73.__r_.__value_.__l.__data_ != 1868002145
        || *(_DWORD *)(v73.__r_.__value_.__r.__words[0] + 3) != 1935962735)
      {
        goto LABEL_105;
      }
      goto LABEL_44;
    }
    if (v73.__r_.__value_.__l.__size_ != 13) {
      goto LABEL_72;
    }
    unint64_t v24 = (std::string *)v73.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (HIBYTE(v73.__r_.__value_.__r.__words[2]) == 7)
    {
      if (LODWORD(v73.__r_.__value_.__l.__data_) != 1868002145
        || *(_DWORD *)((char *)v73.__r_.__value_.__r.__words + 3) != 1935962735)
      {
        goto LABEL_105;
      }
      goto LABEL_44;
    }
    if (HIBYTE(v73.__r_.__value_.__r.__words[2]) != 13)
    {
LABEL_68:
      if (v23 != 8)
      {
        if (v23 != 15) {
          goto LABEL_105;
        }
        long long v46 = &v73;
        goto LABEL_75;
      }
      std::string::size_type v50 = v73.__r_.__value_.__r.__words[0];
      goto LABEL_83;
    }
    unint64_t v24 = &v73;
  }
  std::string::size_type v26 = v24->__r_.__value_.__r.__words[0];
  uint64_t v27 = *(std::string::size_type *)((char *)v24->__r_.__value_.__r.__words + 5);
  if (v26 == 0x6E656B6F70537361 && v27 == 0x7364726F576E656BLL)
  {
LABEL_44:
    if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v31 = &v74;
    }
    else {
      unint64_t v31 = (std::string *)v74.__r_.__value_.__r.__words[0];
    }
    if (!strstr((char *)&v66[-2504], (const char *)v31))
    {
      std::operator+<char>();
      uint64_t v32 = std::string::append(&v67, "' not valid for operation '");
      long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v68.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unint64_t v34 = &v73;
      }
      else {
        unint64_t v34 = (std::string *)v73.__r_.__value_.__r.__words[0];
      }
      if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v35 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v35 = v73.__r_.__value_.__l.__size_;
      }
      uint64_t v36 = std::string::append(&v68, (const std::string::value_type *)v34, v35);
      long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v69.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      uint64_t v38 = std::string::append(&v69, "' in locale '");
      long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v70.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      uint64_t v40 = std::string::append(&v70, v17);
      long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v71.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      uint64_t v42 = std::string::append(&v71, "'");
      std::string::size_type v43 = v42->__r_.__value_.__r.__words[0];
      v75[0] = v42->__r_.__value_.__l.__size_;
      *(void *)((char *)v75 + 7) = *(std::string::size_type *)((char *)&v42->__r_.__value_.__r.__words[1] + 7);
      char v44 = HIBYTE(v42->__r_.__value_.__r.__words[2]);
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      if (*(char *)(a3 + 23) < 0) {
        operator delete(*(void **)a3);
      }
      uint64_t v45 = v75[0];
      *(void *)a3 = v43;
      *(void *)(a3 + 8) = v45;
      *(void *)(a3 + 15) = *(void *)((char *)v75 + 7);
      *(unsigned char *)(a3 + 23) = v44;
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v71.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v70.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v69.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v68.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v67.__r_.__value_.__l.__data_);
      }
      char v23 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
    }
  }
  if ((v23 & 0x80) == 0) {
    goto LABEL_68;
  }
  std::string::size_type size = v73.__r_.__value_.__l.__size_;
LABEL_72:
  if (size != 8)
  {
    if (size != 15) {
      goto LABEL_105;
    }
    long long v46 = (std::string *)v73.__r_.__value_.__r.__words[0];
LABEL_75:
    std::string::size_type v47 = v46->__r_.__value_.__r.__words[0];
    uint64_t v48 = *(std::string::size_type *)((char *)v46->__r_.__value_.__r.__words + 7);
    if (v47 != 0x616E6964724F7361 || v48 != 0x7374696769446C61) {
      goto LABEL_105;
    }
    goto LABEL_84;
  }
  std::string::size_type v50 = *(void *)v73.__r_.__value_.__l.__data_;
LABEL_83:
  if (v50 != 0x7374696769447361) {
    goto LABEL_105;
  }
LABEL_84:
  if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v51 = &v74;
  }
  else {
    long long v51 = (std::string *)v74.__r_.__value_.__r.__words[0];
  }
  if (!strstr(v16, (const char *)v51))
  {
    std::operator+<char>();
    unint64_t v52 = std::string::append(&v67, "' not valid for operation '");
    long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    v68.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v68.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0;
    v52->__r_.__value_.__r.__words[2] = 0;
    v52->__r_.__value_.__r.__words[0] = 0;
    if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v54 = &v73;
    }
    else {
      unint64_t v54 = (std::string *)v73.__r_.__value_.__r.__words[0];
    }
    if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v55 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v55 = v73.__r_.__value_.__l.__size_;
    }
    char v56 = std::string::append(&v68, (const std::string::value_type *)v54, v55);
    long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v69.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0;
    v56->__r_.__value_.__r.__words[2] = 0;
    v56->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v58 = std::string::append(&v69, "' in locale '");
    long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
    v70.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v59;
    v58->__r_.__value_.__l.__size_ = 0;
    v58->__r_.__value_.__r.__words[2] = 0;
    v58->__r_.__value_.__r.__words[0] = 0;
    long long v60 = std::string::append(&v70, v17);
    long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
    v71.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v61;
    v60->__r_.__value_.__l.__size_ = 0;
    v60->__r_.__value_.__r.__words[2] = 0;
    v60->__r_.__value_.__r.__words[0] = 0;
    long long v62 = std::string::append(&v71, "'");
    std::string::size_type v63 = v62->__r_.__value_.__r.__words[0];
    v75[0] = v62->__r_.__value_.__l.__size_;
    *(void *)((char *)v75 + 7) = *(std::string::size_type *)((char *)&v62->__r_.__value_.__r.__words[1] + 7);
    char v64 = HIBYTE(v62->__r_.__value_.__r.__words[2]);
    v62->__r_.__value_.__l.__size_ = 0;
    v62->__r_.__value_.__r.__words[2] = 0;
    v62->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a3 + 23) < 0) {
      operator delete(*(void **)a3);
    }
    uint64_t v65 = v75[0];
    *(void *)a3 = v63;
    *(void *)(a3 + 8) = v65;
    *(void *)(a3 + 15) = *(void *)((char *)v75 + 7);
    *(unsigned char *)(a3 + 23) = v64;
    if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v71.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v70.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v69.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v68.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v22 = (void *)v67.__r_.__value_.__r.__words[0];
      goto LABEL_19;
    }
  }
LABEL_105:
  unum_close();
  unum_close();
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v73.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_108;
  }
}

void sub_1C5E0C4B4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 - 185) < 0) {
    operator delete(*(void **)(v2 - 208));
  }
  if (*(char *)(v2 - 217) < 0) {
    operator delete(*(void **)(v2 - 240));
  }
  if (*(char *)(v2 - 249) < 0) {
    operator delete(*(void **)(v2 - 272));
  }
  if (*(char *)(v2 - 281) < 0) {
    operator delete(*(void **)(v2 - 304));
  }
  if (*(char *)(v2 - 305) < 0) {
    operator delete(*(void **)(v2 - 328));
  }
  if (*(char *)(v2 - 153) < 0) {
    operator delete(*(void **)(v2 - 176));
  }
  if (*(char *)(v2 - 121) < 0) {
    operator delete(*(void **)(v2 - 144));
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

BOOL siri::dialogengine::IsValidFeatureValue(siri::dialogengine *a1, uint64_t a2)
{
  BOOL v2 = 0;
  uint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a2 + 8);
  }
  if (a1 && v3)
  {
    siri::dialogengine::RegisterMorphunData(a1, (siri::dialogengine::Context *)a2);
    siri::dialogengine::Context::GetLocale(a1, v6, (uint64_t)v16);
    unint64_t v8 = v17;
    if ((v17 & 0x80u) != 0) {
      unint64_t v8 = (unint64_t)v16[1];
    }
    if (!v8) {
      siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"IsValidFeatureValue has empty locale", v7);
    }
    memset(__p, 0, 24);
    memset(&v14, 0, sizeof(v14));
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    morphun::util::ULocale::ULocale();
    morphun::dialog::SemanticFeatureModel::SemanticFeatureModel((morphun::dialog::SemanticFeatureModel *)__p, (const morphun::util::ULocale *)v15);
    siri::dialogengine::GrammarFeature::GetCanonicalGrammarName(a2, &v14);
    morphun::util::StringUtils::to_u16string();
    BOOL v2 = morphun::dialog::SemanticFeatureModel::getFeature() != 0;
    if (SHIBYTE(v13) < 0) {
      operator delete(v11);
    }
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    MEMORY[0x1C87965A0](__p);
    morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v15);
    if ((char)v17 < 0) {
      operator delete(v16[0]);
    }
  }
  return v2;
}

void sub_1C5E0C740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long __p, uint64_t a10)
{
  if (*(char *)(v10 - 33) < 0) {
    operator delete(*(void **)(v10 - 56));
  }
  if (a2 == 1)
  {
    uint64_t v13 = __cxa_begin_catch(exception_object);
    std::string v14 = (char *)(*(uint64_t (**)(void *))(*(void *)v13 + 16))(v13);
    uint64_t v15 = (std::string *)std::string::basic_string[abi:ne180100]<0>((void *)(v10 - 184), v14);
    unint64_t v16 = std::string::insert(v15, 0, "Failed to lookup localized feature value. No Morphun data installed? Error: ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    a10 = v16->__r_.__value_.__r.__words[2];
    std::string __p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
    if (SHIBYTE(a10) < 0) {
      operator delete((void *)__p);
    }
    if (*(char *)(v10 - 161) < 0) {
      operator delete(*(void **)(v10 - 184));
    }
    __cxa_end_catch();
    JUMPOUT(0x1C5E0C728);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::GetFeatureValue(siri::dialogengine *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *(unsigned __int8 *)(a2 + 47);
  if ((v7 & 0x80u) != 0) {
    uint64_t v7 = *(void *)(a2 + 32);
  }
  if (v7)
  {
    BOOL v8 = 0;
    if (!this)
    {
LABEL_19:
      std::string::basic_string[abi:ne180100]<0>(a4, "");
      return;
    }
  }
  else
  {
    uint64_t v9 = *(unsigned __int8 *)(a2 + 23);
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *(void *)(a2 + 8);
    }
    BOOL v8 = v9 == 0;
    if (!this) {
      goto LABEL_19;
    }
  }
  if (v8) {
    goto LABEL_19;
  }
  uint64_t v10 = *(unsigned __int8 *)(a3 + 23);
  if ((v10 & 0x80u) != 0) {
    uint64_t v10 = *(void *)(a3 + 8);
  }
  if (!v10) {
    goto LABEL_19;
  }
  siri::dialogengine::RegisterMorphunData(this, (siri::dialogengine::Context *)a2);
  siri::dialogengine::Context::GetLocale(this, v11, (uint64_t)v25);
  unint64_t v13 = v26;
  if ((v26 & 0x80u) != 0) {
    unint64_t v13 = (unint64_t)v25[1];
  }
  if (!v13) {
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"GetFeatureValue has empty locale", v12);
  }
  memset(v23, 0, 24);
  memset(v16, 0, 24);
  std::string __p = 0;
  unint64_t v18 = 0;
  uint64_t v19 = 0;
  morphun::util::ULocale::ULocale();
  morphun::dialog::SemanticFeatureModel::SemanticFeatureModel((morphun::dialog::SemanticFeatureModel *)v23, (const morphun::util::ULocale *)v24);
  std::string v14 = (_OWORD *)(a2 + 96);
  if (*(char *)(a2 + 119) < 0)
  {
    std::string::__init_copy_ctor_external(v16, *(const std::string::value_type **)(a2 + 96), *(void *)(a2 + 104));
  }
  else
  {
    *(_OWORD *)&v16[0].__r_.__value_.__l.__data_ = *v14;
    v16[0].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
  }
  if (SHIBYTE(v16[0].__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = v16[0].__r_.__value_.__l.__size_;
    operator delete(v16[0].__r_.__value_.__l.__data_);
    if (size) {
      goto LABEL_25;
    }
LABEL_28:
    if (*(char *)(a2 + 23) < 0) {
      std::string::__init_copy_ctor_external(v16, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
    }
    else {
      v16[0] = *(std::string *)a2;
    }
    morphun::util::StringUtils::to_u16string();
    if (SHIBYTE(v16[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16[0].__r_.__value_.__l.__data_);
    }
    morphun::dialog::SpeakableString::SpeakableString();
    operator new();
  }
  if (!*((unsigned char *)&v16[0].__r_.__value_.__s + 23)) {
    goto LABEL_28;
  }
LABEL_25:
  if (*(char *)(a2 + 143) < 0) {
    std::string::__init_copy_ctor_external(&v22, *(const std::string::value_type **)(a2 + 120), *(void *)(a2 + 128));
  }
  else {
    std::string v22 = *(std::string *)(a2 + 120);
  }
  if (*(char *)(a2 + 119) < 0)
  {
    std::string::__init_copy_ctor_external(&v21, *(const std::string::value_type **)(a2 + 96), *(void *)(a2 + 104));
  }
  else
  {
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = *v14;
    v21.__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
  }
  siri::dialogengine::GetSemanticModel(this, (char *)&v22, (uint64_t)&__p);
  if (__p)
  {
    morphun::util::StringUtils::to_u16string();
    morphun::util::StringUtils::to_u16string();
    morphun::dialog::SemanticValue::SemanticValue();
    operator new();
  }
  std::string::basic_string[abi:ne180100]<0>(a4, "");
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v20);
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  MEMORY[0x1C87965A0](v23);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v24);
  if ((char)v26 < 0) {
    operator delete(v25[0]);
  }
}

void sub_1C5E0CDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,void *a48,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,long long __p,uint64_t a56)
{
  MEMORY[0x1C87965A0](&__p);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)(v57 - 216));
  if (*(char *)(v57 - 65) < 0) {
    operator delete(*(void **)(v57 - 88));
  }
  if (a2 == 1)
  {
    long long v60 = __cxa_begin_catch(a1);
    long long v61 = (char *)(*(uint64_t (**)(void *))(*(void *)v60 + 16))(v60);
    long long v62 = (std::string *)std::string::basic_string[abi:ne180100]<0>((void *)(v57 - 216), v61);
    std::string::size_type v63 = std::string::insert(v62, 0, "Failed to lookup localized feature value: ");
    long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
    a56 = v63->__r_.__value_.__r.__words[2];
    std::string __p = v64;
    v63->__r_.__value_.__l.__size_ = 0;
    v63->__r_.__value_.__r.__words[2] = 0;
    v63->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
    if (SHIBYTE(a56) < 0) {
      operator delete((void *)__p);
    }
    if (*(char *)(v57 - 193) < 0) {
      operator delete(*(void **)(v57 - 216));
    }
    std::string::basic_string[abi:ne180100]<0>(v56, "");
    __cxa_end_catch();
    JUMPOUT(0x1C5E0CDB0);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetFeatureValue(siri::dialogengine *a1@<X0>, siri::dialogengine::Context *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a1 || *(void *)a2 == *((void *)a2 + 1)) {
    goto LABEL_55;
  }
  uint64_t v5 = *(unsigned __int8 *)(a3 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a3 + 8);
  }
  if (v5)
  {
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
    siri::dialogengine::RegisterMorphunData(a1, a2);
    uint64_t DefaultCommonConceptFactoryProvider = morphun::dialog::LocalizedCommonConceptFactoryProvider::getDefaultCommonConceptFactoryProvider(v7);
    siri::dialogengine::Context::GetLocale(a1, v9, (uint64_t)&v52);
    uint64_t v49 = 0;
    std::string::size_type v50 = 0;
    unint64_t v51 = 0;
    long long v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    long long v44 = 0uLL;
    uint64_t v45 = 0;
    morphun::util::ULocale::ULocale();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void ***))(*(void *)DefaultCommonConceptFactoryProvider + 24))(DefaultCommonConceptFactoryProvider, v43);
    morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v43);
    if (SHIBYTE(v45) < 0) {
      operator delete((void *)v44);
    }
    if (SHIBYTE(v48) < 0) {
      operator delete(v46);
    }
    if (SHIBYTE(v51) < 0) {
      operator delete(v49);
    }
    if (SHIBYTE(v54) < 0) {
      operator delete(v52);
    }
    uint64_t v11 = (const morphun::dialog::SemanticFeatureModel *)(*(uint64_t (**)(uint64_t))(*(void *)v10 + 24))(v10);
    unint64_t v52 = 0;
    long long v53 = 0;
    unint64_t v54 = 0;
    uint64_t v49 = 0;
    std::string::size_type v50 = 0;
    unint64_t v51 = 0;
    uint64_t v12 = *(void *)a2;
    uint64_t v13 = *((void *)a2 + 1);
    if (*(void *)a2 != v13)
    {
      do
      {
        morphun::util::StringUtils::to_u16string();
        morphun::dialog::SpeakableString::SpeakableString();
        if (SHIBYTE(v48) < 0) {
          operator delete(v46);
        }
        std::string v14 = operator new(0xA0uLL);
        v14[1] = 0;
        std::string v14[2] = 0;
        void *v14 = &unk_1F211DCC0;
        *(void *)&long long v15 = morphun::dialog::InflectableStringConcept::InflectableStringConcept((morphun::dialog::InflectableStringConcept *)(v14 + 3), v11, (const morphun::dialog::SpeakableString *)v43);
        *((void *)&v15 + 1) = v14;
        unint64_t v16 = v53;
        if (v53 >= v54)
        {
          unint64_t v18 = v52;
          uint64_t v19 = (v53 - v52) >> 4;
          unint64_t v20 = v19 + 1;
          if ((unint64_t)(v19 + 1) >> 60) {
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          }
          long long v42 = v15;
          uint64_t v21 = v54 - v52;
          if ((v54 - v52) >> 3 > v20) {
            unint64_t v20 = v21 >> 3;
          }
          if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v22 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v22 = v20;
          }
          if (v22 >> 60) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          char v23 = (char *)operator new(16 * v22);
          unint64_t v24 = &v23[16 * v19];
          *(_OWORD *)unint64_t v24 = v42;
          long long v17 = v24 + 16;
          if (v16 == v18)
          {
            unint64_t v52 = &v23[16 * v19];
            long long v53 = v24 + 16;
            unint64_t v54 = &v23[16 * v22];
          }
          else
          {
            do
            {
              long long v25 = *((_OWORD *)v16 - 1);
              v16 -= 16;
              *((_OWORD *)v24 - 1) = v25;
              v24 -= 16;
              *(void *)unint64_t v16 = 0;
              *((void *)v16 + 1) = 0;
            }
            while (v16 != v18);
            unint64_t v16 = v52;
            unsigned __int8 v26 = v53;
            unint64_t v52 = v24;
            long long v53 = v17;
            unint64_t v54 = &v23[16 * v22];
            while (v26 != v16)
            {
              uint64_t v27 = (std::__shared_weak_count *)*((void *)v26 - 1);
              if (v27) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v27);
              }
              v26 -= 16;
            }
          }
          if (v16) {
            operator delete(v16);
          }
        }
        else
        {
          *(_OWORD *)long long v53 = v15;
          long long v17 = v16 + 16;
        }
        long long v53 = v17;
        uint64_t v28 = *((void *)v17 - 2);
        unint64_t v29 = v50;
        if ((unint64_t)v50 >= v51)
        {
          uint64_t v31 = (v50 - v49) >> 3;
          if ((unint64_t)(v31 + 1) >> 61) {
            std::vector<BOOL>::__throw_length_error[abi:ne180100]();
          }
          unint64_t v32 = (uint64_t)(v51 - (void)v49) >> 2;
          if (v32 <= v31 + 1) {
            unint64_t v32 = v31 + 1;
          }
          if (v51 - (unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v33 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v33 = v32;
          }
          if (v33) {
            unint64_t v33 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<morphun::dialog::SemanticFeatureConceptBase *>>(v33);
          }
          else {
            uint64_t v34 = 0;
          }
          std::string::size_type v35 = (char *)(v33 + 8 * v31);
          *(void *)std::string::size_type v35 = v28;
          std::string::size_type v30 = v35 + 8;
          long long v37 = v49;
          uint64_t v36 = v50;
          if (v50 != v49)
          {
            do
            {
              uint64_t v38 = *((void *)v36 - 1);
              v36 -= 8;
              *((void *)v35 - 1) = v38;
              v35 -= 8;
            }
            while (v36 != v37);
            uint64_t v36 = v49;
          }
          uint64_t v49 = v35;
          std::string::size_type v50 = v30;
          unint64_t v51 = v33 + 8 * v34;
          if (v36) {
            operator delete(v36);
          }
        }
        else
        {
          *(void *)std::string::size_type v50 = v28;
          std::string::size_type v30 = v29 + 8;
        }
        std::string::size_type v50 = v30;
        morphun::dialog::SpeakableString::~SpeakableString((morphun::dialog::SpeakableString *)v43);
        v12 += 24;
      }
      while (v12 != v13);
    }
    morphun::dialog::SemanticConceptList::SemanticConceptList();
    morphun::util::StringUtils::to_u16string();
    uint64_t FeatureValueByName = morphun::dialog::SemanticFeatureConceptBase::getFeatureValueByName();
    uint64_t v40 = FeatureValueByName;
    if (FeatureValueByName)
    {
      (*(void (**)(uint64_t))(*(void *)FeatureValueByName + 32))(FeatureValueByName);
      morphun::util::StringUtils::to_string();
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v44, "");
    }
    if (*(char *)(a4 + 23) < 0) {
      operator delete(*(void **)a4);
    }
    *(_OWORD *)a4 = v44;
    *(void *)(a4 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v45;
    if (v40) {
      (*(void (**)(uint64_t))(*(void *)v40 + 16))(v40);
    }
    if (SHIBYTE(v48) < 0) {
      operator delete(v46);
    }
    morphun::dialog::SemanticConceptList::~SemanticConceptList((morphun::dialog::SemanticConceptList *)v43);
    if (v49)
    {
      std::string::size_type v50 = v49;
      operator delete(v49);
    }
    v43[0] = (void **)&v52;
    std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100](v43);
  }
  else
  {
LABEL_55:
    std::string::basic_string[abi:ne180100]<0>((void *)a4, "");
  }
}

void sub_1C5E0D600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long __p, uint64_t a14)
{
  if (*(char *)(v14 - 137) < 0) {
    operator delete(*(void **)(v14 - 160));
  }
  morphun::dialog::SemanticConceptList::~SemanticConceptList((morphun::dialog::SemanticConceptList *)&__p);
  long long v17 = *(void **)(v14 - 136);
  if (v17)
  {
    *(void *)(v14 - 128) = v17;
    operator delete(v17);
  }
  *(void *)&std::string __p = v14 - 112;
  std::vector<std::shared_ptr<siri::dialogengine::VisualComponentsCombination::Entry>>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (a2 == 1)
  {
    unint64_t v18 = __cxa_begin_catch(a1);
    uint64_t v19 = (char *)(*(uint64_t (**)(void *))(*(void *)v18 + 16))(v18);
    unint64_t v20 = (std::string *)std::string::basic_string[abi:ne180100]<0>((void *)(v14 - 112), v19);
    uint64_t v21 = std::string::insert(v20, 0, "Unable to use Morphun to determine gender: ");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    a14 = v21->__r_.__value_.__r.__words[2];
    std::string __p = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
    if (SHIBYTE(a14) < 0) {
      operator delete((void *)__p);
    }
    if (*(char *)(v14 - 89) < 0) {
      operator delete(*(void **)(v14 - 112));
    }
    MEMORY[0x1C8796900](a10, "");
    __cxa_end_catch();
    JUMPOUT(0x1C5E0D5C8);
  }
  if (*(char *)(a10 + 23) < 0) {
    operator delete(*(void **)a10);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<morphun::dialog::InflectableStringConcept>::__on_zero_shared(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 8))();
}

void std::__shared_ptr_emplace<morphun::dialog::InflectableStringConcept>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211DCC0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<morphun::dialog::InflectableStringConcept>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211DCC0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

BOOL siri::dialogengine::AreMorphunAssetsAvailable(const std::string *a1)
{
  siri::dialogengine::Context::Context((siri::dialogengine::Context *)v14);
  std::allocate_shared[abi:ne180100]<siri::dialogengine::File,std::allocator<siri::dialogengine::File>,std::string const&,void>(&v12, a1);
  uint64_t v2 = v12;
  uint64_t v3 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unint64_t v4 = v15;
  v14[63] = v2;
  long long v15 = v3;
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  std::string::basic_string[abi:ne180100]<0>(__p, "personRelationship");
  siri::dialogengine::GetSemanticModel(v14, (char *)__p, (uint64_t)&v9);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v5 = v9;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v11);
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)v14);
  return v5 != 0;
}

void sub_1C5E0D9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&a23);
  _Unwind_Resume(a1);
}

uint64_t std::allocate_shared[abi:ne180100]<siri::dialogengine::File,std::allocator<siri::dialogengine::File>,std::string const&,void>(uint64_t *a1, const std::string *a2)
{
  unint64_t v4 = operator new(0x320uLL);
  v4[1] = 0;
  void v4[2] = 0;
  *unint64_t v4 = &unk_1F2123380;
  uint64_t result = siri::dialogengine::File::File((uint64_t)(v4 + 3), a2);
  *a1 = result;
  a1[1] = (uint64_t)v4;
  return result;
}

void sub_1C5E0DA88(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_emplace<siri::dialogengine::File>::__on_zero_shared(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void std::__shared_ptr_emplace<siri::dialogengine::File>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2123380;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<siri::dialogengine::File>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F2123380;
  std::__shared_weak_count::~__shared_weak_count(this);
}

uint64_t siri::dialogengine::AreLanguageScriptCompatible()
{
  memset(v2, 0, 24);
  morphun::util::ULocale::ULocale();
  memset(&v2[16], 0, 48);
  morphun::util::ULocale::ULocale();
  uint64_t v0 = morphun::util::LocaleUtils::areLanguageScriptCompatible();
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v2);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v3);
  return v0;
}

void sub_1C5E0DC48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a16);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)(v40 - 144));
  _Unwind_Resume(a1);
}

void *siri::dialogengine::GetMorphunVersion@<X0>(siri::dialogengine *this@<X0>, void *a2@<X8>)
{
  LibraryVersiouint64_t n = (char *)morphun::util::VersionUtils::getLibraryVersion(this);
  return std::string::basic_string[abi:ne180100]<0>(a2, LibraryVersion);
}

void sub_1C5E0DE68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12, uint64_t a13, char a14)
{
  a12 = (void **)&a14;
  std::vector<std::shared_ptr<siri::dialogengine::PatternSchemaComponent>>::__destroy_vector::operator()[abi:ne180100](&a12);
  _Unwind_Resume(a1);
}

void sub_1C5E0DF54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::ShouldIncludeEnglishAsFallback(siri::dialogengine *this)
{
  return os_variant_has_internal_diagnostics();
}

void siri::dialogengine::GetFallbackLocales(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v113[7] = *MEMORY[0x1E4F143B8];
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    if (*(unsigned char *)(a1 + 23))
    {
      std::string v89 = *(std::string *)a1;
      goto LABEL_6;
    }
LABEL_38:
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    return;
  }
  std::string::size_type v4 = *(void *)(a1 + 8);
  if (!v4) {
    goto LABEL_38;
  }
  std::string::__init_copy_ctor_external(&v89, *(const std::string::value_type **)a1, v4);
LABEL_6:
  uint64_t v84 = 0;
  int v85 = 0;
  uint64_t v86 = 0;
  v80.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
  v80.__r_.__value_.__s.__data_[8] = 0;
  uint64_t v84 = (std::string *)operator new(0x18uLL);
  int v85 = v84;
  uint64_t v86 = v84 + 1;
  int v85 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::string>,std::string const*,std::string const*,std::string*>((uint64_t)&v86, (long long *)&v89, &v90, v84);
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v89.__r_.__value_.__l.__data_);
  }
  {
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(&v89, "en_CA", "en_US");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v91, "en_AU", "en_US");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(&v92, "en_GB", "en_US");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v95, "en_NZ", "en_AU");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v96, "en_ZA", "en_GB");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(&v97.__r_.__value_.__l.__size_, "en_IE", "en_GB");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v98, "en_IN", "en_GB");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v99, "en_SG", "en_GB");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v100, "de_AT", "de_DE");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v101, "de_CH", "de_DE");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v102, "es_US", "es_MX");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v103, "es_CL", "es_MX");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v104, "fr_BE", "fr_FR");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v105, "fr_CA", "fr_FR");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v106, "fr_CH", "fr_FR");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[3],char const(&)[6],0>(v107, "hi", "en_IN");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[3],0>(v108);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v109, "it_CH", "it_IT");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[6],0>(v110, "nl_BE", "nl_NL");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[6],0>(v111, "yue", "zh_HK");
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[6],0>(v112);
    std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[6],0>(v113, "wuu", "zh_CN");
    std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)&siri::dialogengine::GetFallbackMap(void)::sFallbackMap, (const void **)&v89.__r_.__value_.__l.__data_, 22);
    for (uint64_t i = 1008; i != -48; i -= 48)
      std::pair<std::string const,std::string>::~pair((uint64_t)&v89 + i);
    __cxa_atexit((void (*)(void *))std::map<std::string,std::string>::~map[abi:ne180100], &siri::dialogengine::GetFallbackMap(void)::sFallbackMap, &dword_1C5C1E000);
  }
  std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)v82, (const void ***)&siri::dialogengine::GetFallbackMap(void)::sFallbackMap);
  siri::dialogengine::GetCanonicalLocale((const std::string *)a1, 0, &v89);
  uint64_t v5 = std::__tree<std::string>::find<std::string>((uint64_t)v82, (const void **)&v89.__r_.__value_.__l.__data_);
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v89.__r_.__value_.__l.__data_);
  }
  while (&v83 != (void **)v5)
  {
    unint64_t v6 = v85;
    if (v85 >= v86)
    {
      char v8 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v84, (long long *)(v5 + 56));
    }
    else
    {
      if (*(char *)(v5 + 79) < 0)
      {
        std::string::__init_copy_ctor_external(v85, *(const std::string::value_type **)(v5 + 56), *(void *)(v5 + 64));
      }
      else
      {
        long long v7 = *(_OWORD *)(v5 + 56);
        v85->__r_.__value_.__r.__words[2] = *(void *)(v5 + 72);
        *(_OWORD *)&v6->__r_.__value_.__l.__data_ = v7;
      }
      char v8 = v6 + 1;
    }
    int v85 = v8;
    uint64_t v5 = std::__tree<std::string>::find<std::string>((uint64_t)v82, (const void **)(v5 + 56));
  }
  siri::dialogengine::GetLocaleCountry(&v81);
  std::string::size_type size = HIBYTE(v81.__r_.__value_.__r.__words[2]);
  if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v81.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    siri::dialogengine::GetLocaleLanguage(&v88);
    uint64_t v10 = std::string::append(&v88, "_");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v80.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::GetLocaleCountry(&__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t p_p = &__p;
    }
    else {
      uint64_t p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
    }
    uint64_t v14 = std::string::append(&v80, (const std::string::value_type *)p_p, v13);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v80.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
    unint64_t v16 = v85;
    if ((std::string *)std::__find_impl[abi:ne180100]<std::string *,std::string *,std::string,std::__identity>((uint64_t)v84, (uint64_t)v85, (unsigned __int8 **)&v89) == v16)
    {
      if (v16 >= v86)
      {
        unint64_t v18 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v84, (long long *)&v89);
      }
      else
      {
        if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(v16, v89.__r_.__value_.__l.__data_, v89.__r_.__value_.__l.__size_);
        }
        else
        {
          long long v17 = *(_OWORD *)&v89.__r_.__value_.__l.__data_;
          v16->__r_.__value_.__r.__words[2] = v89.__r_.__value_.__r.__words[2];
          *(_OWORD *)&v16->__r_.__value_.__l.__data_ = v17;
        }
        unint64_t v18 = v16 + 1;
      }
      int v85 = v18;
    }
    if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v89.__r_.__value_.__l.__data_);
    }
  }
  memset(&v89, 0, sizeof(v89));
  memset(&v88, 0, sizeof(v88));
  memset(&__p, 0, sizeof(__p));
  morphun::util::ULocale::ULocale();
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v89.__r_.__value_.__l.__data_);
  }
  morphun::util::LocaleUtils::getFallbackPair();
  if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v79, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
  }
  else {
    std::string v79 = __s;
  }
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v78, v97.__r_.__value_.__l.__data_, v97.__r_.__value_.__l.__size_);
  }
  else {
    std::string v78 = v97;
  }
  std::string::size_type v19 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
  int v20 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
  std::string::size_type v21 = v79.__r_.__value_.__l.__size_;
  if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v19 = v79.__r_.__value_.__l.__size_;
  }
  long long v22 = v85;
  if (v19
    && (std::string *)std::__find_impl[abi:ne180100]<std::string *,std::string *,std::string,std::__identity>((uint64_t)v84, (uint64_t)v85, (unsigned __int8 **)&v79) == v22)
  {
    if (v22 >= v86)
    {
      long long v22 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v84, (long long *)&v79);
    }
    else
    {
      if (v20 < 0)
      {
        std::string::__init_copy_ctor_external(v22, v79.__r_.__value_.__l.__data_, v21);
      }
      else
      {
        long long v23 = *(_OWORD *)&v79.__r_.__value_.__l.__data_;
        v22->__r_.__value_.__r.__words[2] = v79.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v22->__r_.__value_.__l.__data_ = v23;
      }
      ++v22;
    }
    int v85 = v22;
  }
  std::string::size_type v24 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  int v25 = SHIBYTE(v78.__r_.__value_.__r.__words[2]);
  std::string::size_type v26 = v78.__r_.__value_.__l.__size_;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v24 = v78.__r_.__value_.__l.__size_;
  }
  if (v24
    && (std::string *)std::__find_impl[abi:ne180100]<std::string *,std::string *,std::string,std::__identity>((uint64_t)v84, (uint64_t)v22, (unsigned __int8 **)&v78) == v22)
  {
    if (v22 >= v86)
    {
      uint64_t v28 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v84, (long long *)&v78);
    }
    else
    {
      if (v25 < 0)
      {
        std::string::__init_copy_ctor_external(v22, v78.__r_.__value_.__l.__data_, v26);
      }
      else
      {
        long long v27 = *(_OWORD *)&v78.__r_.__value_.__l.__data_;
        v22->__r_.__value_.__r.__words[2] = v78.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v22->__r_.__value_.__l.__data_ = v27;
      }
      uint64_t v28 = v22 + 1;
    }
    int v85 = v28;
  }
  siri::dialogengine::GetLocaleLanguage(&v77);
  unint64_t v29 = v85;
  uint64_t v30 = HIBYTE(v85[-1].__r_.__value_.__r.__words[2]);
  if ((v30 & 0x80u) == 0) {
    std::string::size_type v31 = HIBYTE(v85[-1].__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v31 = v85[-1].__r_.__value_.__l.__size_;
  }
  std::string::size_type v32 = HIBYTE(v77.__r_.__value_.__r.__words[2]);
  int v33 = SHIBYTE(v77.__r_.__value_.__r.__words[2]);
  std::string::size_type v34 = v77.__r_.__value_.__l.__size_;
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v32 = v77.__r_.__value_.__l.__size_;
  }
  if (v31 != v32) {
    goto LABEL_95;
  }
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v35 = &v77;
  }
  else {
    std::string::size_type v35 = (std::string *)v77.__r_.__value_.__r.__words[0];
  }
  if ((v30 & 0x80) != 0)
  {
    if (!memcmp(v85[-1].__r_.__value_.__l.__data_, v35, v85[-1].__r_.__value_.__l.__size_)) {
      goto LABEL_102;
    }
LABEL_95:
    if (v29 >= v86)
    {
      unint64_t v29 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>((uint64_t *)&v84, (long long *)&v77);
    }
    else
    {
      if (v33 < 0)
      {
        std::string::__init_copy_ctor_external(v29, v77.__r_.__value_.__l.__data_, v34);
      }
      else
      {
        long long v37 = *(_OWORD *)&v77.__r_.__value_.__l.__data_;
        v29->__r_.__value_.__r.__words[2] = v77.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v29->__r_.__value_.__l.__data_ = v37;
      }
      ++v29;
    }
    int v85 = v29;
    goto LABEL_102;
  }
  if (*((unsigned char *)&v85[-1].__r_.__value_.__s + 23))
  {
    uint64_t v36 = 0;
    while (v85[-1].__r_.__value_.__s.__data_[v36] == v35->__r_.__value_.__s.__data_[v36])
    {
      if (v30 == ++v36) {
        goto LABEL_102;
      }
    }
    goto LABEL_95;
  }
LABEL_102:
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  for (int j = v84; j != v29; ++j)
  {
    if (SHIBYTE(j->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(&v76, j->__r_.__value_.__l.__data_, j->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v39 = *(_OWORD *)&j->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = j->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v39;
    }
    siri::dialogengine::GetCanonicalLocale(&v76, 0, &v75);
    siri::dialogengine::StringToLower((uint64_t)&v75, (uint64_t)__n);
    std::string::basic_string[abi:ne180100]<0>(&v88, "_");
    std::string::basic_string[abi:ne180100]<0>(&__p, "-");
    siri::dialogengine::StringReplace((uint64_t)&v75, (char *)&v88, (uint64_t)&__p, 0, &v72);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
    siri::dialogengine::StringToLower((uint64_t)&v72, (uint64_t)&v88);
    unint64_t v40 = a2[1];
    if (v40 >= a2[2])
    {
      long long v42 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(a2, (long long *)&v75);
    }
    else
    {
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external((std::string *)a2[1], v75.__r_.__value_.__l.__data_, v75.__r_.__value_.__l.__size_);
      }
      else
      {
        long long v41 = *(_OWORD *)&v75.__r_.__value_.__l.__data_;
        *(void *)(v40 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((void *)&v75.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v40 = v41;
      }
      long long v42 = (std::string *)(v40 + 24);
      a2[1] = (uint64_t)v42;
    }
    a2[1] = (uint64_t)v42;
    std::string::size_type v43 = __n[1];
    if (v74 >= 0) {
      size_t v44 = HIBYTE(v74);
    }
    else {
      size_t v44 = __n[1];
    }
    std::string::size_type v45 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
    char v46 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
    std::string::size_type v47 = v75.__r_.__value_.__l.__size_;
    if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v48 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v48 = v75.__r_.__value_.__l.__size_;
    }
    if (v44 == v48)
    {
      if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v49 = &v75;
      }
      else {
        uint64_t v49 = (std::string *)v75.__r_.__value_.__r.__words[0];
      }
      if (v74 < 0)
      {
        long long v53 = (const std::string::value_type *)__n[0];
        if (!memcmp((const void *)__n[0], v49, __n[1])) {
          goto LABEL_142;
        }
        if ((unint64_t)v42 < a2[2]) {
          goto LABEL_139;
        }
        goto LABEL_137;
      }
      if (!HIBYTE(v74)) {
        goto LABEL_142;
      }
      std::string::size_type v50 = __n;
      uint64_t v51 = HIBYTE(v74);
      while (*(unsigned __int8 *)v50 == v49->__r_.__value_.__s.__data_[0])
      {
        std::string::size_type v50 = (size_t *)((char *)v50 + 1);
        uint64_t v49 = (std::string *)((char *)v49 + 1);
        if (!--v51) {
          goto LABEL_142;
        }
      }
    }
    if ((unint64_t)v42 < a2[2])
    {
      if (v74 < 0)
      {
        long long v53 = (const std::string::value_type *)__n[0];
LABEL_139:
        std::string::__init_copy_ctor_external(v42, v53, v43);
      }
      else
      {
        long long v52 = *(_OWORD *)__n;
        v42->__r_.__value_.__r.__words[2] = v74;
        *(_OWORD *)&v42->__r_.__value_.__l.__data_ = v52;
      }
      a2[1] = (uint64_t)++v42;
      goto LABEL_141;
    }
LABEL_137:
    long long v42 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(a2, (long long *)__n);
LABEL_141:
    a2[1] = (uint64_t)v42;
    std::string::size_type v45 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
    std::string::size_type v47 = v75.__r_.__value_.__l.__size_;
    char v46 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
LABEL_142:
    std::string::size_type v54 = v72.__r_.__value_.__l.__size_;
    if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v55 = HIBYTE(v72.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v55 = v72.__r_.__value_.__l.__size_;
    }
    if (v46 >= 0) {
      std::string::size_type v56 = v45;
    }
    else {
      std::string::size_type v56 = v47;
    }
    if (v55 == v56)
    {
      if (v46 >= 0) {
        uint64_t v57 = &v75;
      }
      else {
        uint64_t v57 = (std::string *)v75.__r_.__value_.__r.__words[0];
      }
      if ((*((unsigned char *)&v72.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        long long v61 = (const std::string::value_type *)v72.__r_.__value_.__r.__words[0];
        if (!memcmp(v72.__r_.__value_.__l.__data_, v57, v72.__r_.__value_.__l.__size_)) {
          goto LABEL_168;
        }
        if ((unint64_t)v42 < a2[2]) {
          goto LABEL_165;
        }
        goto LABEL_163;
      }
      if (!*((unsigned char *)&v72.__r_.__value_.__s + 23)) {
        goto LABEL_168;
      }
      std::string::size_type v58 = &v72;
      uint64_t v59 = HIBYTE(v72.__r_.__value_.__r.__words[2]);
      while (v58->__r_.__value_.__s.__data_[0] == v57->__r_.__value_.__s.__data_[0])
      {
        std::string::size_type v58 = (std::string *)((char *)v58 + 1);
        uint64_t v57 = (std::string *)((char *)v57 + 1);
        if (!--v59) {
          goto LABEL_168;
        }
      }
    }
    if ((unint64_t)v42 < a2[2])
    {
      if ((*((unsigned char *)&v72.__r_.__value_.__s + 23) & 0x80) != 0)
      {
        long long v61 = (const std::string::value_type *)v72.__r_.__value_.__r.__words[0];
LABEL_165:
        std::string::__init_copy_ctor_external(v42, v61, v54);
      }
      else
      {
        long long v60 = *(_OWORD *)&v72.__r_.__value_.__l.__data_;
        v42->__r_.__value_.__r.__words[2] = v72.__r_.__value_.__r.__words[2];
        *(_OWORD *)&v42->__r_.__value_.__l.__data_ = v60;
      }
      a2[1] = (uint64_t)++v42;
      goto LABEL_167;
    }
LABEL_163:
    long long v42 = (std::string *)std::vector<std::string>::__push_back_slow_path<std::string const&>(a2, (long long *)&v72);
LABEL_167:
    a2[1] = (uint64_t)v42;
    std::string::size_type v45 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
    std::string::size_type v47 = v75.__r_.__value_.__l.__size_;
    char v46 = HIBYTE(v75.__r_.__value_.__r.__words[2]);
LABEL_168:
    uint64_t v62 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    std::string::size_type v63 = v88.__r_.__value_.__l.__size_;
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v64 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v64 = v88.__r_.__value_.__l.__size_;
    }
    if (v46 >= 0) {
      std::string::size_type v65 = v45;
    }
    else {
      std::string::size_type v65 = v47;
    }
    if (v64 == v65)
    {
      if (v46 >= 0) {
        long long v66 = &v75;
      }
      else {
        long long v66 = (std::string *)v75.__r_.__value_.__r.__words[0];
      }
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string v69 = (std::string::value_type *)v88.__r_.__value_.__r.__words[0];
        if (!memcmp(v88.__r_.__value_.__l.__data_, v66, v88.__r_.__value_.__l.__size_)) {
          goto LABEL_196;
        }
        if ((unint64_t)v42 >= a2[2])
        {
LABEL_190:
          uint64_t v70 = std::vector<std::string>::__push_back_slow_path<std::string const&>(a2, (long long *)&v88);
          goto LABEL_194;
        }
        goto LABEL_192;
      }
      if (!*((unsigned char *)&v88.__r_.__value_.__s + 23)) {
        goto LABEL_197;
      }
      std::string v67 = &v88;
      while (v67->__r_.__value_.__s.__data_[0] == v66->__r_.__value_.__s.__data_[0])
      {
        std::string v67 = (std::string *)((char *)v67 + 1);
        long long v66 = (std::string *)((char *)v66 + 1);
        if (!--v62)
        {
          if ((*((unsigned char *)&v88.__r_.__value_.__s + 23) & 0x80) == 0) {
            goto LABEL_197;
          }
          goto LABEL_195;
        }
      }
    }
    if ((unint64_t)v42 >= a2[2]) {
      goto LABEL_190;
    }
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    {
      std::string v69 = (std::string::value_type *)v88.__r_.__value_.__r.__words[0];
LABEL_192:
      std::string::__init_copy_ctor_external(v42, v69, v63);
      goto LABEL_193;
    }
    long long v68 = *(_OWORD *)&v88.__r_.__value_.__l.__data_;
    v42->__r_.__value_.__r.__words[2] = v88.__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42->__r_.__value_.__l.__data_ = v68;
LABEL_193:
    uint64_t v70 = (uint64_t)&v42[1];
    a2[1] = (uint64_t)&v42[1];
LABEL_194:
    a2[1] = v70;
    if ((*((unsigned char *)&v88.__r_.__value_.__s + 23) & 0x80) != 0)
    {
LABEL_195:
      std::string v69 = (std::string::value_type *)v88.__r_.__value_.__r.__words[0];
LABEL_196:
      operator delete(v69);
    }
LABEL_197:
    if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v72.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v74) < 0) {
      operator delete((void *)__n[0]);
    }
    if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v75.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
  }
  siri::dialogengine::RemoveDuplicateStrings(a2);
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&v94);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&v89);
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&v80);
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v81.__r_.__value_.__l.__data_);
  }
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v83);
  v89.__r_.__value_.__r.__words[0] = (std::string::size_type)&v84;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&v89);
}

void sub_1C5E0ED28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,void *a62,uint64_t a63)
{
  for (uint64_t i = 1008; i != -48; i -= 48)
    std::pair<std::string const,std::string>::~pair(v65 + i);
  a65 = &a56;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a65);
  _Unwind_Resume(a1);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[3],char const(&)[6],0>(void *a1, char *a2, char *a3)
{
  uint64_t v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_1C5E0F038(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[6],char const(&)[3],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "hi_IN");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "hi");
  return a1;
}

void sub_1C5E0F094(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[4],char const(&)[6],0>(void *a1, char *a2, char *a3)
{
  uint64_t v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::string::basic_string[abi:ne180100]<0>(v5 + 3, a3);
  return a1;
}

void sub_1C5E0F0E8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::string>::pair[abi:ne180100]<char const(&)[16],char const(&)[6],0>(void *a1)
{
  uint64_t v2 = std::string::basic_string[abi:ne180100]<0>(a1, "vi_VN_u_sd_vnct");
  std::string::basic_string[abi:ne180100]<0>(v2 + 3, "vi_VN");
  return a1;
}

void sub_1C5E0F144(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double siri::dialogengine::GetCanonicalLocale@<D0>(const std::string *a1@<X0>, int a2@<W1>, std::string *a3@<X8>)
{
  p_str = &__str;
  siri::dialogengine::StringTrim("-_ \t\n\r", a1, &__str);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  else {
    int64_t size = __str.__r_.__value_.__l.__size_;
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  if (size >= 1)
  {
    long long v7 = (char *)p_str + size;
    char v8 = p_str;
    do
    {
      uint64_t v9 = memchr(v8, 64, size);
      if (!v9) {
        break;
      }
      if (*v9 == 64)
      {
        if (v9 != v7 && v9 - (unsigned char *)p_str != -1)
        {
          std::string::basic_string(&v53, &__str, 0, v9 - (unsigned char *)p_str, (std::allocator<char> *)v51);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
          std::string __str = v53;
        }
        break;
      }
      char v8 = (std::string *)(v9 + 1);
      int64_t size = v7 - (unsigned char *)v8;
    }
    while (v7 - (unsigned char *)v8 >= 1);
  }
  if (a2)
  {
    std::string::basic_string[abi:ne180100]<0>(v51, "_");
    std::string::basic_string[abi:ne180100]<0>(__p, "-");
    siri::dialogengine::StringReplace((uint64_t)&__str, (char *)v51, (uint64_t)__p, 0, &v53);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string __str = v53;
    *((unsigned char *)&v53.__r_.__value_.__s + 23) = 0;
    v53.__r_.__value_.__s.__data_[0] = 0;
    if (v50 < 0) {
      operator delete(__p[0]);
    }
    if (v52 < 0) {
      operator delete(v51[0]);
    }
    LOBYTE(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
    std::string::size_type v11 = __str.__r_.__value_.__l.__size_;
    std::string::size_type v12 = __str.__r_.__value_.__r.__words[0];
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v13 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    }
    else {
      int64_t v13 = __str.__r_.__value_.__l.__size_;
    }
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v14 = &__str;
    }
    else {
      uint64_t v14 = (std::string *)__str.__r_.__value_.__r.__words[0];
    }
    if (v13 >= 1)
    {
      long long v15 = (char *)v14 + v13;
      unint64_t v16 = v14;
      do
      {
        long long v17 = memchr(v16, 45, v13);
        if (!v17) {
          break;
        }
        if (*v17 == 45) {
          goto LABEL_54;
        }
        unint64_t v16 = (std::string *)(v17 + 1);
        int64_t v13 = v15 - (unsigned char *)v16;
      }
      while (v15 - (unsigned char *)v16 >= 1);
    }
    goto LABEL_78;
  }
  std::string::basic_string[abi:ne180100]<0>(v51, "-");
  std::string::basic_string[abi:ne180100]<0>(__p, "_");
  siri::dialogengine::StringReplace((uint64_t)&__str, (char *)v51, (uint64_t)__p, 0, &v53);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  std::string __str = v53;
  *((unsigned char *)&v53.__r_.__value_.__s + 23) = 0;
  v53.__r_.__value_.__s.__data_[0] = 0;
  if (v50 < 0) {
    operator delete(__p[0]);
  }
  if (v52 < 0) {
    operator delete(v51[0]);
  }
  LOBYTE(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
  std::string::size_type v11 = __str.__r_.__value_.__l.__size_;
  std::string::size_type v12 = __str.__r_.__value_.__r.__words[0];
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v18 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  }
  else {
    int64_t v18 = __str.__r_.__value_.__l.__size_;
  }
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v14 = &__str;
  }
  else {
    uint64_t v14 = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  if (v18 >= 1)
  {
    long long v15 = (char *)v14 + v18;
    std::string::size_type v19 = v14;
    while (1)
    {
      long long v17 = memchr(v19, 95, v18);
      if (!v17) {
        goto LABEL_78;
      }
      if (*v17 == 95) {
        break;
      }
      std::string::size_type v19 = (std::string *)(v17 + 1);
      int64_t v18 = v15 - (unsigned char *)v19;
      if (v15 - (unsigned char *)v19 < 1) {
        goto LABEL_78;
      }
    }
LABEL_54:
    if (v17 != v15)
    {
      uint64_t v20 = v17 - (unsigned char *)v14;
      if (v20 != -1)
      {
        if (v20)
        {
          for (uint64_t i = 0; i != v20; ++i)
          {
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              long long v22 = &__str;
            }
            else {
              long long v22 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            std::string::value_type v23 = __tolower(v22->__r_.__value_.__s.__data_[i]);
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v24 = &__str;
            }
            else {
              std::string::size_type v24 = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            v24->__r_.__value_.__s.__data_[i] = v23;
          }
          LOBYTE(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *((unsigned char *)&__str.__r_.__value_.__s + 23);
          std::string::size_type v11 = __str.__r_.__value_.__l.__size_;
          std::string::size_type v12 = __str.__r_.__value_.__r.__words[0];
        }
        int v25 = &__str;
        if ((v10 & 0x80u) == 0)
        {
          unint64_t v10 = v10;
        }
        else
        {
          int v25 = (std::string *)v12;
          unint64_t v10 = v11;
        }
        std::string::size_type v26 = (unsigned __int8 *)v25 + v10;
        if (a2)
        {
          if (v10)
          {
            long long v27 = v25;
            uint64_t v28 = (std::string *)((char *)v25 + v10);
            do
            {
              unint64_t v29 = v27;
              uint64_t v30 = (unsigned __int8 *)v27;
              while (1)
              {
                int v31 = *v30++;
                if (v31 == 45) {
                  break;
                }
                unint64_t v29 = (std::string *)v30;
                if (v30 == v26) {
                  goto LABEL_88;
                }
              }
              long long v27 = (std::string *)((char *)&v29->__r_.__value_.__l.__data_ + 1);
              uint64_t v28 = v29;
            }
            while (v30 != v26);
            goto LABEL_90;
          }
        }
        else if (v10)
        {
          int v33 = v25;
          uint64_t v28 = (std::string *)((char *)v25 + v10);
          while (2)
          {
            unint64_t v29 = v33;
            std::string::size_type v34 = (unsigned __int8 *)v33;
            while (1)
            {
              int v35 = *v34++;
              if (v35 == 95) {
                break;
              }
              unint64_t v29 = (std::string *)v34;
              if (v34 == v26)
              {
LABEL_88:
                unint64_t v29 = v28;
                goto LABEL_90;
              }
            }
            int v33 = (std::string *)((char *)&v29->__r_.__value_.__l.__data_ + 1);
            uint64_t v28 = v29;
            if (v34 != v26) {
              continue;
            }
            break;
          }
LABEL_90:
          uint64_t v36 = (char *)v29 - (char *)v25;
          if (v29 == (std::string *)v26) {
            uint64_t v36 = -1;
          }
          if (v10 == v36 + 3)
          {
            uint64_t v37 = v36 + 1;
            if (v36 + 1 < v10)
            {
              uint64_t v38 = MEMORY[0x1E4F14390];
              do
              {
                if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  long long v39 = &__str;
                }
                else {
                  long long v39 = (std::string *)__str.__r_.__value_.__r.__words[0];
                }
                unsigned int v40 = v39->__r_.__value_.__s.__data_[v37];
                if ((v40 & 0x80000000) != 0) {
                  int v41 = __maskrune(v40, 0x500uLL);
                }
                else {
                  int v41 = *(_DWORD *)(v38 + 4 * v40 + 60) & 0x500;
                }
                if (!v41) {
                  break;
                }
                long long v42 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &__str
                    : (std::string *)__str.__r_.__value_.__r.__words[0];
                std::string::value_type v43 = __toupper(v42->__r_.__value_.__s.__data_[v37]);
                size_t v44 = (__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
                    ? &__str
                    : (std::string *)__str.__r_.__value_.__r.__words[0];
                v44->__r_.__value_.__s.__data_[v37++] = v43;
              }
              while (v10 != v37);
            }
          }
          std::string::basic_string[abi:ne180100]<0>(&v53, "vi_VN_u_sd_vnct");
          BOOL v45 = siri::dialogengine::StringsEqual((uint64_t)&__str, (uint64_t)&v53);
          BOOL v46 = v45;
          if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v53.__r_.__value_.__l.__data_);
            if (v46) {
              goto LABEL_111;
            }
          }
          else if (v45)
          {
LABEL_111:
            std::string::size_type v47 = "vi_VN_u_sd_vnct";
            goto LABEL_117;
          }
          std::string::basic_string[abi:ne180100]<0>(&v53, "vi-VN-u-sd-vnct");
          BOOL v48 = siri::dialogengine::StringsEqual((uint64_t)&__str, (uint64_t)&v53);
          if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v53.__r_.__value_.__l.__data_);
          }
          if (!v48) {
            goto LABEL_118;
          }
          std::string::size_type v47 = "vi-VN-u-sd-vnct";
LABEL_117:
          MEMORY[0x1C8796900](&__str, v47);
LABEL_118:
          double result = *(double *)&__str.__r_.__value_.__l.__data_;
          *a3 = __str;
          return result;
        }
        unint64_t v29 = (std::string *)((char *)v25 + v10);
        goto LABEL_90;
      }
    }
  }
LABEL_78:
  siri::dialogengine::StringToLower((uint64_t)&__str, (uint64_t)a3);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return result;
}

void sub_1C5E0F674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::GetLocaleCountry(std::string *a1@<X8>)
{
  morphun::util::ULocale::ULocale();
  if (SHIBYTE(v4) < 0)
  {
    std::string::__init_copy_ctor_external(a1, (const std::string::value_type *)v3, *((std::string::size_type *)&v3 + 1));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = v3;
    a1->__r_.__value_.__r.__words[2] = v4;
  }
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v2);
}

void sub_1C5E0F7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetLocaleLanguage(std::string *a1@<X8>)
{
  morphun::util::ULocale::ULocale();
  if (SHIBYTE(v4) < 0)
  {
    std::string::__init_copy_ctor_external(a1, (const std::string::value_type *)v3, *((std::string::size_type *)&v3 + 1));
  }
  else
  {
    *(_OWORD *)&a1->__r_.__value_.__l.__data_ = v3;
    a1->__r_.__value_.__r.__words[2] = v4;
  }
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)v2);
}

void sub_1C5E0F8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(a1);
}

uint64_t siri::dialogengine::GetNonSiriFallbackLocales()
{
  {
    operator new();
  }
  uint64_t v0 = (std::once_flag::_State_type *)siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::flag, memory_order_acquire) != -1)
  {
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v11;
    uint64_t p_p = &__p;
    std::__call_once(v0, &p_p, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::$_0 &&>>);
  }
  siri::dialogengine::GetLocaleLanguage(&__p);
  uint64_t v1 = siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sFallbackMap + 8;
  uint64_t v2 = *(void *)(siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sFallbackMap + 8);
  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v3 = siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sFallbackMap + 16;
  uint64_t v4 = siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sFallbackMap + 8;
  do
  {
    BOOL v5 = std::less<std::string>::operator()[abi:ne180100](v3, (const void **)(v2 + 32), (const void **)&__p.__r_.__value_.__l.__data_);
    unint64_t v6 = (uint64_t *)(v2 + 8);
    if (!v5)
    {
      unint64_t v6 = (uint64_t *)v2;
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v6;
  }
  while (*v6);
  if (v4 == v1
    || std::less<std::string>::operator()[abi:ne180100](v3, (const void **)&__p.__r_.__value_.__l.__data_, (const void **)(v4 + 32)))
  {
LABEL_11:
    uint64_t v4 = v1;
  }
  uint64_t v7 = siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sFallbackMap;
  uint64_t v8 = siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::sEmptyResult;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v7 + 8 == v4) {
    return v8;
  }
  else {
    return v4 + 56;
  }
}

void sub_1C5E0FA78(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetNonSiriFallbackLocales(std::string const&)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5E0FD40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t *a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a19);
  std::__tree<std::__value_type<std::string,std::vector<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::string>>>>::destroy(*v34);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  if (*(char *)(v35 - 89) < 0) {
    operator delete(*(void **)(v35 - 112));
  }
  a18 = &a9;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&a18);
  uint64_t v37 = 0;
  while (1)
  {
    if (*(&a33 + v37) < 0) {
      operator delete(*(void **)((char *)&a28 + v37));
    }
    v37 -= 24;
    if (v37 == -48)
    {
      if (a17 < 0) {
        operator delete(__p);
      }
      MEMORY[0x1C8796D70](v33, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

void std::__tree<std::__value_type<std::string,std::vector<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::string>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,std::vector<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::string>>>>::destroy(*a1);
    std::__tree<std::__value_type<std::string,std::vector<std::string>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::string>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::string>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>((uint64_t)(a1 + 4));
    operator delete(a1);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::string>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::string>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::string>>,0>((uint64_t)v1 + 32);
    }
    operator delete(v1);
  }
}

uint64_t siri::dialogengine::IsNonWhitespaceLocale()
{
  siri::dialogengine::GetLocaleLanguage(&__p);
  siri::dialogengine::StringToLower((uint64_t)&__p, (uint64_t)&v6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v8 < 0)
  {
    uint64_t v2 = v6;
    if (v7 == 2)
    {
      if (*(_WORD *)v6 == 24938 || *(_WORD *)v6 == 26746 || *(_WORD *)v6 == 28523)
      {
        BOOL v1 = 1;
        goto LABEL_30;
      }
      BOOL v1 = *(unsigned __int16 *)v6 == 26740;
    }
    else
    {
      if (v7 != 3 || (*(_WORD *)v6 == 30073 ? (BOOL v3 = *((unsigned char *)v6 + 2) == 101) : (BOOL v3 = 0), !v3))
      {
        BOOL v1 = 0;
LABEL_30:
        operator delete(v2);
        return v1;
      }
      BOOL v1 = 1;
    }
    uint64_t v2 = v6;
    goto LABEL_30;
  }
  if (v8 == 2)
  {
    if ((unsigned __int16)v6 != 24938 && (unsigned __int16)v6 != 26746 && (unsigned __int16)v6 != 28523) {
      return (unsigned __int16)v6 == 26740;
    }
    return 1;
  }
  return v8 == 3 && (unsigned __int16)v6 == 30073 && BYTE2(v6) == 101;
}

void sub_1C5E100AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::IncludeEnglishIfNeeded(long long **a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(a2, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * (((char *)a1[1] - (char *)*a1) >> 3));
  if (!os_variant_has_internal_diagnostics()) {
    return;
  }
  std::string::size_type size = a2->__r_.__value_.__l.__size_;
  if (a2->__r_.__value_.__r.__words[0] == size) {
    return;
  }
  uint64_t v4 = (void *)(size - 24);
  int v5 = *(char *)(size - 1);
  if (v5 < 0)
  {
    if (*(void *)(size - 16) != 2) {
      goto LABEL_9;
    }
    uint64_t v4 = (void *)*v4;
LABEL_8:
    if (*(_WORD *)v4 == 28261) {
      return;
    }
    goto LABEL_9;
  }
  if (v5 == 2) {
    goto LABEL_8;
  }
LABEL_9:
  std::string::basic_string[abi:ne180100]<0>(__p, "en");
  unint64_t v6 = a2->__r_.__value_.__r.__words[2];
  unint64_t v7 = a2->__r_.__value_.__l.__size_;
  if (v7 >= v6)
  {
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - a2->__r_.__value_.__r.__words[0]) >> 3);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - a2->__r_.__value_.__r.__words[0]) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v10;
    }
    __v.__end_cap_.__value_ = (std::allocator<std::string> *)&a2->__r_.__value_.__r.__words[2];
    if (v12) {
      int64_t v13 = (std::string *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>((uint64_t)&a2->__r_.__value_.__r.__words[2], v12);
    }
    else {
      int64_t v13 = 0;
    }
    uint64_t v14 = v13 + v9;
    __v.__first_ = v13;
    __v.__begin_ = v14;
    __v.__end_cap_.__value_ = &v13[v12];
    long long v15 = *(_OWORD *)__p;
    v14->__r_.__value_.__r.__words[2] = v19;
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v15;
    __p[1] = 0;
    std::string::size_type v19 = 0;
    __p[0] = 0;
    __v.__end_ = v14 + 1;
    std::vector<std::string>::__swap_out_circular_buffer((std::vector<std::string> *)a2, &__v);
    std::string::size_type v16 = a2->__r_.__value_.__l.__size_;
    std::__split_buffer<std::string>::~__split_buffer(&__v);
    int v17 = SHIBYTE(v19);
    a2->__r_.__value_.__l.__size_ = v16;
    if (v17 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v8 = *(_OWORD *)__p;
    *(void *)(v7 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v19;
    *(_OWORD *)unint64_t v7 = v8;
    a2->__r_.__value_.__l.__size_ = v7 + 24;
  }
}

void sub_1C5E10280(_Unwind_Exception *__p, uint64_t a2, int a3, __int16 a4, char a5, char a6, std::__split_buffer<std::string> *a7, uint64_t a8, void *__pa, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__pa);
  }
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__pa);
  _Unwind_Resume(__p);
}

uint64_t siri::dialogengine::IsValidLocale(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  siri::dialogengine::StringToLower(a1, (uint64_t)__p);
  if (v25 < 0)
  {
    if (__p[1] != (void *)15) {
      goto LABEL_13;
    }
    BOOL v3 = (void **)__p[0];
  }
  else
  {
    if (v25 != 15) {
      goto LABEL_13;
    }
    BOOL v3 = __p;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = *(uint64_t *)((char *)v3 + 7);
  if (v4 == (void *)0x5F755F6E765F6976 && v5 == 0x74636E765F64735FLL)
  {
    BOOL v8 = 1;
    if ((v25 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_36;
  }
LABEL_13:
  siri::dialogengine::StringToLower(a1, (uint64_t)&v22);
  if (v23 < 0)
  {
    BOOL v8 = *((void *)&v22 + 1) == 15
      && *(void *)v22 == 0x2D752D6E762D6976
      && *(void *)(v22 + 7) == 0x74636E762D64732DLL;
    operator delete((void *)v22);
  }
  else
  {
    BOOL v8 = v23 == 15 && (void)v22 == 0x2D752D6E762D6976 && *(void *)((char *)&v22 + 7) == 0x74636E762D64732DLL;
  }
  if ((v25 & 0x80) == 0)
  {
LABEL_34:
    if (v8) {
      return 1;
    }
    goto LABEL_37;
  }
LABEL_36:
  operator delete(__p[0]);
  if (v8) {
    return 1;
  }
LABEL_37:
  unint64_t v11 = 0;
  int v12 = *(char *)(a1 + 23);
  if (v12 >= 0) {
    uint64_t v13 = a1;
  }
  else {
    uint64_t v13 = *(void *)a1;
  }
  if (v12 >= 0) {
    unint64_t v14 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    unint64_t v14 = *(void *)(a1 + 8);
  }
  long long v15 = (unsigned __int8 *)(v13 + v14);
  std::string::size_type v16 = (unsigned __int8 *)(v13 + v14);
  int v17 = (unsigned __int8 *)(v13 + 3);
  while (1)
  {
    if (v14 == v11)
    {
      unint64_t v11 = v14;
      int v17 = (unsigned __int8 *)(v13 + v14);
      goto LABEL_50;
    }
    if (*(unsigned __int8 *)(v13 + v11) - 97 > 0x19) {
      break;
    }
    if (++v11 == 3) {
      goto LABEL_52;
    }
  }
  int v17 = (unsigned __int8 *)(v13 + v11);
LABEL_50:
  if (v11 < 2) {
    return 0;
  }
LABEL_52:
  if (v17 != v15)
  {
    int v18 = *v17;
    if (v18 == 95 || v18 == 45)
    {
      std::string::size_type v16 = v17 + 3;
      unint64_t v19 = v14 + v13 - (void)v17;
      uint64_t v20 = 1;
      while (v19 != v20 && v17[v20] - 97 <= 0x19)
      {
        if (++v20 == 3) {
          return v15 == v16;
        }
      }
      uint64_t v21 = 1;
      while (v19 != v21 && v17[v21] - 65 <= 0x19)
      {
        if (++v21 == 3) {
          return v15 == v16;
        }
      }
    }
    std::string::size_type v16 = v17;
  }
  return v15 == v16;
}

void sub_1C5E10538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::CatLocalePathToLocale(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  siri::dialogengine::BaseName(a1, &v16);
  siri::dialogengine::StringSplit((unsigned __int8 *)&v16, ".", v15);
  if (v15[1] - v15[0] != 72) {
    goto LABEL_11;
  }
  BOOL v3 = (unsigned __int16 *)(v15[0] + 24);
  int v4 = *(char *)(v15[0] + 47);
  if (v4 < 0)
  {
    if (*(void *)(v15[0] + 32) != 3)
    {
LABEL_11:
      std::string::basic_string[abi:ne180100]<0>(a2, "");
      goto LABEL_12;
    }
    BOOL v3 = *(unsigned __int16 **)v3;
  }
  else if (v4 != 3)
  {
    goto LABEL_11;
  }
  int v5 = *v3;
  int v6 = *((unsigned __int8 *)v3 + 2);
  if (v5 != 24931 || v6 != 116) {
    goto LABEL_11;
  }
  int v8 = *(char *)(v15[0] + 23);
  if (v8 < 0)
  {
    std::string::size_type v11 = *(void *)(v15[0] + 8);
    if (v11 == 7)
    {
      int v12 = *(const std::string::value_type **)v15[0];
      if (**(_DWORD **)v15[0] == 1918988383 && *(_DWORD *)(*(void *)v15[0] + 3) == 1936548210) {
        goto LABEL_11;
      }
    }
    else
    {
      int v12 = *(const std::string::value_type **)v15[0];
    }
    std::string::__init_copy_ctor_external(&__p, v12, v11);
  }
  else
  {
    if (v8 == 7 && *(_DWORD *)v15[0] == 1918988383 && *(_DWORD *)(v15[0] + 3) == 1936548210) {
      goto LABEL_11;
    }
    long long v10 = *(_OWORD *)v15[0];
    __p.__r_.__value_.__r.__words[2] = *(void *)(v15[0] + 16);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v10;
  }
  if (siri::dialogengine::IsValidLocale((uint64_t)&__p))
  {
    *a2 = __p;
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "");
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
LABEL_12:
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v15;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1C5E106EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16)
{
  std::string __p = &a16;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  if (*(char *)(v16 - 17) < 0) {
    operator delete(*(void **)(v16 - 40));
  }
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetDefaultLocaleForLanguage(const void **a1@<X0>, std::string *a2@<X8>)
{
  {
    operator new();
  }
  int v4 = (std::once_flag::_State_type *)siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::flag, memory_order_acquire) != -1)
  {
    unint64_t v9 = &v7;
    int v8 = &v9;
    std::__call_once(v4, &v8, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::$_0 &&>>);
  }
  uint64_t v5 = std::__tree<std::string>::find<std::string>(siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::sDefaultLocalesForLanguages, a1);
  if (siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::sDefaultLocalesForLanguages + 8 == v5)
  {
    std::string::basic_string[abi:ne180100]<0>(a2, "");
  }
  else if (*(char *)(v5 + 79) < 0)
  {
    std::string::__init_copy_ctor_external(a2, *(const std::string::value_type **)(v5 + 56), *(void *)(v5 + 64));
  }
  else
  {
    long long v6 = *(_OWORD *)(v5 + 56);
    a2->__r_.__value_.__r.__words[2] = *(void *)(v5 + 72);
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v6;
  }
}

void sub_1C5E1085C(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetDefaultLocaleForLanguage(std::string const&)::$_0 &&>>()
{
  uint64_t v0 = *MEMORY[0x1E4F143B8];
  operator new();
}

void sub_1C5E10BF4(_Unwind_Exception *a1)
{
  uint64_t v4 = 1104;
  while (1)
  {
    uint64_t v5 = v2 + v4;
    if (*(char *)(v2 + v4 - 1) < 0) {
      operator delete(*(void **)(v5 - 24));
    }
    if (*(char *)(v5 - 25) < 0) {
      operator delete(*(void **)(v5 - 48));
    }
    v4 -= 48;
    if (!v4)
    {
      MEMORY[0x1C8796D70](v1, 0x1020C4062D53EE8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1C5E11474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);

  siri::dialogengine::CatUpdater::Manifest::~Manifest((siri::dialogengine::CatUpdater::Manifest *)&a25);
  _Unwind_Resume(a1);
}

void sub_1C5E11720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1C5E118D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5E11D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::CatUpdater::Manifest::~Manifest((siri::dialogengine::CatUpdater::Manifest *)&a22);

  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::RepeatedPtrFieldBase::Get<google::protobuf::RepeatedPtrField<siri::dialogengine::CatUpdater::Asset>::TypeHandler>(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1538);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*(_DWORD *)(a1 + 8) <= a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/protobuf/src/google/protobuf/repeated_field.h", 1539);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (index) < (current_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(a1 + 16) + 8 * a2 + 8);
}

void sub_1C5E11F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternRegistry::RegisterObject(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)&__p, (const siri::dialogengine::RequestInfo *)(a1 + 8));
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(&v22, __p.__r_.__value_.__l.__size_, __p.__r_.__value_.__r.__words[2], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(__p.__r_.__value_.__r.__words[2] - __p.__r_.__value_.__l.__size_) >> 5));
    siri::dialogengine::RequestInfo::~RequestInfo((void **)&__p.__r_.__value_.__l.__data_);
    if (v23 != v22) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  uint64_t v4 = std::string::basic_string[abi:ne180100]<0>(&v25, "");
  siri::dialogengine::GetTemplateDirs((uint64_t)v4, 1, (uint64_t)&__p);
  std::vector<siri::dialogengine::UpdatableDir>::__assign_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>((uint64_t)&v22, (std::string *)__p.__r_.__value_.__l.__data_, (std::string *)__p.__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(__p.__r_.__value_.__l.__size_ - __p.__r_.__value_.__r.__words[0]) >> 5));
  __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&__p;
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&__str);
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
LABEL_7:
  siri::dialogengine::FindPatternSchemaFile(&v22, a2, (uint64_t)&__str);
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    std::string::basic_string[abi:ne180100]<0>(&__p, "patternschema.bin");
    BOOL v6 = siri::dialogengine::StringEndsWith(&__str, (unsigned __int8 *)&__p);
    BOOL v7 = v6;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (v7) {
        goto LABEL_12;
      }
    }
    else if (v6)
    {
LABEL_12:
      std::string::basic_string[abi:ne180100]<0>(&__p, "");
      siri::dialogengine::ParsePatternSchemaBinary(&v25);
      long long v11 = *(_OWORD *)&v25.__r_.__value_.__l.__data_;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      siri::dialogengine::GetSchemaMutexRef(v8);
      std::mutex::lock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
      siri::dialogengine::GetSchemaMapRef(v12);
      if (std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>>>::find<std::string>((const void **)a2) != &qword_1EA3D8A20) {
        goto LABEL_46;
      }
      if (*(char *)(a2 + 23) < 0) {
        std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
      }
      else {
        std::string __p = *(std::string *)a2;
      }
      long long v21 = v11;
      if (*((void *)&v11 + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v11 + 1) + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v13 = qword_1EA3D8A20;
      if (qword_1EA3D8A20)
      {
        unint64_t v14 = &qword_1EA3D8A20;
        while (1)
        {
          while (1)
          {
            long long v15 = (uint64_t *)v13;
            uint64_t v16 = (const void **)(v13 + 32);
            if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&qword_1EA3D8A28, (const void **)&__p.__r_.__value_.__l.__data_, (const void **)(v13 + 32)))break; {
            uint64_t v13 = *v15;
            }
            unint64_t v14 = v15;
            if (!*v15) {
              goto LABEL_36;
            }
          }
          if (!std::less<std::string>::operator()[abi:ne180100]((uint64_t)&qword_1EA3D8A28, v16, (const void **)&__p.__r_.__value_.__l.__data_))break; {
          unint64_t v14 = v15 + 1;
          }
          uint64_t v13 = v15[1];
          if (!v13) {
            goto LABEL_36;
          }
        }
        if (*v14) {
          goto LABEL_42;
        }
      }
      else
      {
        unint64_t v14 = &qword_1EA3D8A20;
        long long v15 = &qword_1EA3D8A20;
      }
LABEL_36:
      int v17 = (char *)operator new(0x48uLL);
      v25.__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
      v25.__r_.__value_.__l.__size_ = (std::string::size_type)&qword_1EA3D8A20;
      v25.__r_.__value_.__s.__data_[16] = 0;
      int v18 = (std::string *)(v17 + 32);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(v18, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else
      {
        *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((void *)v17 + 6) = *((void *)&__p.__r_.__value_.__l + 2);
      }
      *(_OWORD *)(v17 + 56) = v21;
      long long v21 = 0uLL;
      v25.__r_.__value_.__s.__data_[16] = 1;
      *(void *)int v17 = 0;
      *((void *)v17 + 1) = 0;
      *((void *)v17 + 2) = v15;
      uint64_t *v14 = (uint64_t)v17;
      if (*(void *)siri::dialogengine::GetSchemaMapRef(void)::schema)
      {
        siri::dialogengine::GetSchemaMapRef(void)::schema = *(void *)siri::dialogengine::GetSchemaMapRef(void)::schema;
        int v17 = (char *)*v14;
      }
      std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)qword_1EA3D8A20, (uint64_t *)v17);
      ++qword_1EA3D8A28;
      v25.__r_.__value_.__r.__words[0] = 0;
      std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100]((uint64_t)&v25);
LABEL_42:
      if (*((void *)&v21 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v21 + 1));
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_46:
      std::mutex::unlock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
      if (*((void *)&v11 + 1)) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v11 + 1));
      }
      goto LABEL_48;
    }
    std::string::basic_string[abi:ne180100]<0>(&__p, "");
    siri::dialogengine::ParsePatternSchemaYAML(a1, &__str, (const std::string *)a2);
  }
  std::operator+<char>();
  unint64_t v9 = std::string::append(&v25, "'");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  __p.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Log::LogWithLevel((uint64_t)&__p, 3u);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
LABEL_48:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v22;
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
}

void sub_1C5E1231C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,void *>>>>::reset[abi:ne180100](v22 - 88);
  std::pair<std::string const,std::shared_ptr<siri::dialogengine::JSONValue>>::~pair((uint64_t)&a16);
  std::mutex::unlock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
  if (a15 < 0) {
    operator delete(__p);
  }
  a16 = (void *)(v22 - 112);
  std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&a16);
  _Unwind_Resume(a1);
}

void std::vector<siri::dialogengine::UpdatableDir>::__assign_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(uint64_t a1, std::string *__str, std::string *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  unint64_t v9 = *(std::string **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5) < a4)
  {
    std::vector<siri::dialogengine::UpdatableDir>::__vdeallocate((void **)a1);
    if (a4 > 0x2AAAAAAAAAAAAAALL) {
      std::vector<BOOL>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 5) >= 0x155555555555555) {
      unint64_t v11 = 0x2AAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    std::vector<siri::dialogengine::UpdatableDir>::__vallocate[abi:ne180100]((void *)a1, v11);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::UpdatableDir>,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v8, (uint64_t)__str, (uint64_t)a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 5) < a4)
  {
    uint64_t v13 = (std::string *)((char *)__str + 32 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 5));
    std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *>(__str, v13, v9);
    uint64_t v12 = std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::UpdatableDir>,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(v8, (uint64_t)v13, (uint64_t)a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  unint64_t v14 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *>(__str, a3, v9);
  for (uint64_t i = *(void *)(a1 + 8);
        (std::string *)i != v14;
        std::allocator<siri::dialogengine::UpdatableDir>::destroy[abi:ne180100](i))
  {
    i -= 96;
  }
  *(void *)(a1 + 8) = v14;
}

void sub_1C5E1258C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1C5E12594(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetSchemaMutexRef(siri::dialogengine *this)
{
  {
    __cxa_atexit(MEMORY[0x1E4FBA268], &siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex, &dword_1C5C1E000);
  }
}

void siri::dialogengine::GetSchemaMapRef(siri::dialogengine *this)
{
  {
    qword_1EA3D8A28 = 0;
    qword_1EA3D8A20 = 0;
    siri::dialogengine::GetSchemaMapRef(void)::schema = (uint64_t)&qword_1EA3D8A20;
    __cxa_atexit((void (*)(void *))std::map<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>::~map[abi:ne180100], &siri::dialogengine::GetSchemaMapRef(void)::schema, &dword_1C5C1E000);
  }
}

uint64_t *std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>>>::find<std::string>(const void **a1)
{
  uint64_t v1 = qword_1EA3D8A20;
  if (!qword_1EA3D8A20) {
    return &qword_1EA3D8A20;
  }
  BOOL v3 = &qword_1EA3D8A20;
  do
  {
    BOOL v4 = std::less<std::string>::operator()[abi:ne180100]((uint64_t)&qword_1EA3D8A28, (const void **)(v1 + 32), a1);
    uint64_t v5 = (uint64_t *)(v1 + 8);
    if (!v4)
    {
      uint64_t v5 = (uint64_t *)v1;
      BOOL v3 = (uint64_t *)v1;
    }
    uint64_t v1 = *v5;
  }
  while (*v5);
  if (v3 == &qword_1EA3D8A20
    || std::less<std::string>::operator()[abi:ne180100]((uint64_t)&qword_1EA3D8A28, a1, (const void **)v3 + 4))
  {
    return &qword_1EA3D8A20;
  }
  return v3;
}

uint64_t std::map<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

std::string *std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:ne180100]<siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *,siri::dialogengine::UpdatableDir *>(std::string *__str, std::string *a2, std::string *this)
{
  if (__str != a2)
  {
    uint64_t v5 = __str;
    do
    {
      std::string::operator=(this, v5);
      std::string::operator=(this + 1, v5 + 1);
      if (this != v5)
      {
        std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>((std::vector<std::string> *)&this[2], (std::string *)v5[2].__r_.__value_.__l.__data_, (long long *)v5[2].__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5[2].__r_.__value_.__l.__size_ - v5[2].__r_.__value_.__r.__words[0]) >> 3));
        std::vector<std::string>::__assign_with_size[abi:ne180100]<std::string*,std::string*>((std::vector<std::string> *)&this[3], (std::string *)v5[3].__r_.__value_.__l.__data_, (long long *)v5[3].__r_.__value_.__l.__size_, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5[3].__r_.__value_.__l.__size_ - v5[3].__r_.__value_.__r.__words[0]) >> 3));
      }
      this += 4;
      v5 += 4;
    }
    while (v5 != a2);
  }
  return this;
}

uint64_t std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<siri::dialogengine::UpdatableDir>,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      siri::dialogengine::UpdatableDir::UpdatableDir((std::string *)(a4 + v7), (const siri::dialogengine::UpdatableDir *)(a2 + v7));
      v7 += 96;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void std::vector<siri::dialogengine::UpdatableDir>::__vdeallocate(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    BOOL v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 96;
        std::allocator<siri::dialogengine::UpdatableDir>::destroy[abi:ne180100](v3);
      }
      while ((void *)v3 != v1);
      BOOL v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *std::vector<siri::dialogengine::UpdatableDir>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    std::vector<BOOL>::__throw_length_error[abi:ne180100]();
  }
  double result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::UpdatableDir>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[96 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<siri::dialogengine::UpdatableDir>>(unint64_t a1)
{
  if (a1 >= 0x2AAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(96 * a1);
}

std::string *siri::dialogengine::UpdatableDir::UpdatableDir(std::string *this, const siri::dialogengine::UpdatableDir *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *(_OWORD *)a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    std::string::__init_copy_ctor_external(this + 1, *((const std::string::value_type **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(_OWORD *)((char *)a2 + 24);
    this[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = v5;
  }
  this[2].__r_.__value_.__r.__words[0] = 0;
  this[2].__r_.__value_.__l.__size_ = 0;
  this[2].__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this + 2, *((long long **)a2 + 6), *((long long **)a2 + 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 3));
  this[3].__r_.__value_.__r.__words[0] = 0;
  this[3].__r_.__value_.__l.__size_ = 0;
  this[3].__r_.__value_.__r.__words[2] = 0;
  std::vector<std::string>::__init_with_size[abi:ne180100]<std::string*,std::string*>(this + 3, *((long long **)a2 + 9), *((long long **)a2 + 10), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 10) - *((void *)a2 + 9)) >> 3));
  return this;
}

void sub_1C5E12A88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::PatternRegistry::GetSchema(uint64_t a1@<X0>, const std::string::value_type **a2@<X1>, uint64_t *a3@<X8>)
{
  if (*((char *)a2 + 23) < 0) {
    std::string::__init_copy_ctor_external(&v21, *a2, (std::string::size_type)a2[1]);
  }
  else {
    std::string v21 = *(std::string *)a2;
  }
  BOOL IsArrayType = siri::dialogengine::IsArrayType(&v21);
  if (IsArrayType)
  {
    siri::dialogengine::GetArrayElementType((uint64_t)&v21, &v20);
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    std::string v21 = v20;
    if (*((char *)a2 + 23) >= 0) {
      uint64_t v8 = (uint64_t *)a2;
    }
    else {
      uint64_t v8 = (uint64_t *)*a2;
    }
    unint64_t v9 = &v21;
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      unint64_t v9 = (std::string *)v21.__r_.__value_.__r.__words[0];
    }
    siri::dialogengine::Log::Warn((siri::dialogengine::Log *)"Looking up a schema file for an array type (%s). Assuming %s instead.", v7, v8, v9);
  }
  std::string::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v21.__r_.__value_.__l.__size_;
  }
  *a3 = 0;
  a3[1] = 0;
  if (size)
  {
    siri::dialogengine::GetSchemaMapRef((siri::dialogengine *)IsArrayType);
    siri::dialogengine::GetSchemaMutexRef(v11);
    std::mutex::lock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
    uint64_t v12 = std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>>>::find<std::string>((const void **)&v21.__r_.__value_.__l.__data_);
    if (v12 == &qword_1EA3D8A20)
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = v12[7];
      uint64_t v13 = (std::__shared_weak_count *)v12[8];
      if (v13) {
        atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    *a3 = v14;
    a3[1] = (uint64_t)v13;
    std::mutex::unlock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
    if (v14)
    {
      if (!a1) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    siri::dialogengine::PatternRegistry::RegisterObject(a1, (uint64_t)&v21);
    siri::dialogengine::GetSchemaMutexRef(v15);
    std::mutex::lock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
    uint64_t v16 = std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::PatternSchema>>>>::find<std::string>((const void **)&v21.__r_.__value_.__l.__data_);
    if (v16 == &qword_1EA3D8A20)
    {
      uint64_t v14 = 0;
      uint64_t v17 = 0;
    }
    else
    {
      uint64_t v14 = v16[7];
      uint64_t v17 = v16[8];
      if (v17) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
      }
    }
    *a3 = v14;
    a3[1] = v17;
    if (v13) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v13);
    }
    std::mutex::unlock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
    if (a1)
    {
LABEL_30:
      if (v14)
      {
        uint64_t v18 = *(void *)(a1 + 3448);
        unint64_t v19 = *(std::__shared_weak_count **)(a1 + 3456);
        if (v19) {
          atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if (*(char *)(v14 + 47) < 0) {
          std::string::__init_copy_ctor_external(&v20, *(const std::string::value_type **)(v14 + 24), *(void *)(v14 + 32));
        }
        else {
          std::string v20 = *(std::string *)(v14 + 24);
        }
        siri::dialogengine::TraceWriter::CopySchemaFile(v18, (const void **)&v20.__r_.__value_.__l.__data_);
        if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v20.__r_.__value_.__l.__data_);
        }
        if (v19) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v19);
        }
      }
    }
  }
LABEL_40:
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
}

void sub_1C5E12D18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (v23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v23);
  }
  if (v24) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v24);
  }
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void siri::dialogengine::PatternRegistry::Preload(siri::dialogengine::PatternRegistry *this, const siri::dialogengine::UpdatableDir *a2)
{
  siri::dialogengine::Context::Context((siri::dialogengine::Context *)v13);
  std::string::basic_string[abi:ne180100]<0>(&__p, "schema");
  siri::dialogengine::UpdatableDir::ListDir((uint64_t)this, (uint64_t)&__p, &v12);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::vector<std::string>::pointer begin = v12.__begin_;
  std::vector<std::string>::pointer end = v12.__end_;
  while (begin != end)
  {
    if (SHIBYTE(begin->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::__init_copy_ctor_external(&__p, begin->__r_.__value_.__l.__data_, begin->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v5 = *(_OWORD *)&begin->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = begin->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v5;
    }
    std::string::basic_string[abi:ne180100]<0>(&v10, "patternschema");
    if (siri::dialogengine::HasExtension((uint64_t)&__p, (uint64_t)&v10))
    {
      HasExtensiouint64_t n = 1;
    }
    else
    {
      std::string::basic_string[abi:ne180100]<0>(&v9, "patternschema.bin");
      HasExtensiouint64_t n = siri::dialogengine::HasExtension((uint64_t)&__p, (uint64_t)&v9);
      if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v9.__r_.__value_.__l.__data_);
      }
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if (HasExtension)
      {
LABEL_15:
        siri::dialogengine::BaseName((uint64_t)&__p, &v9);
        siri::dialogengine::RemoveExtension((uint64_t)&v9, &v10);
        if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v9.__r_.__value_.__l.__data_);
        }
        siri::dialogengine::PatternRegistry::GetSchema((uint64_t)v13, (const std::string::value_type **)&v10.__r_.__value_.__l.__data_, &v7);
        if (v8) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v8);
        }
        std::operator+<char>();
        siri::dialogengine::Log::Debug((siri::dialogengine *)&v9);
        if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v9.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v10.__r_.__value_.__l.__data_);
        }
      }
    }
    else if (HasExtension)
    {
      goto LABEL_15;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    ++begin;
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v12;
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&__p);
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)v13);
}

void sub_1C5E12F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  siri::dialogengine::Context::~Context((siri::dialogengine::Context *)&a33);
  _Unwind_Resume(a1);
}

void siri::dialogengine::PatternRegistry::Clear(siri::dialogengine::PatternRegistry *this)
{
  siri::dialogengine::GetSchemaMutexRef(this);
  std::mutex::lock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
  siri::dialogengine::GetSchemaMapRef(v1);
  std::__tree<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::shared_ptr<siri::dialogengine::JSONValue>>>>::destroy((void *)qword_1EA3D8A20);
  siri::dialogengine::GetSchemaMapRef(void)::schema = (uint64_t)&qword_1EA3D8A20;
  qword_1EA3D8A28 = 0;
  qword_1EA3D8A20 = 0;
  std::mutex::unlock(&siri::dialogengine::GetSchemaMutexRef(void)::schemaMutex);
  siri::dialogengine::ClearSearchPathCaches(v2);
}

void InitDefaultsscc_info_OptionalBool_OptionalDataTypes_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", a4);
  SnippetUI::_OptionalBool_default_instance_ = (uint64_t)&unk_1F211DDD0;
  *(void *)algn_1EB690818 = 0;
  dword_1EB690824 = 0;
  byte_1EB690820 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_OptionalBool_default_instance_, v4);
}

uint64_t SnippetUI::OptionalBool::GetMetadata(SnippetUI::OptionalBool *this)
{
  return qword_1EA3D8A50;
}

void InitDefaultsscc_info_OptionalInt_OptionalDataTypes_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", a4);
  qword_1EB68F500 = 0;
  unk_1EB68F508 = 0;
  SnippetUI::_OptionalInt_default_instance_ = (uint64_t)&unk_1F211DD10;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_OptionalInt_default_instance_, v4);
}

uint64_t SnippetUI::OptionalInt::GetMetadata(SnippetUI::OptionalInt *this)
{
  return file_level_metadata_OptionalDataTypes_2eproto;
}

uint64_t SnippetUI::OptionalInt::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void SnippetUI::OptionalInt::MergeFrom(SnippetUI::OptionalInt *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 267);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::OptionalInt::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5E132B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalInt::MergeFrom(SnippetUI::OptionalInt *this, const SnippetUI::OptionalInt *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 282);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalInt *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if (v6) {
    *((_DWORD *)this + 4) = v6;
  }
}

void sub_1C5E1335C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalInt::CopyFrom(SnippetUI::OptionalInt *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalInt *)((char *)this + 8);
    *((_DWORD *)v5 + 2) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalInt::MergeFrom(this, lpsrc);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::OptionalInt::InternalSerializeWithCachedSizesToArray(SnippetUI::OptionalInt *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned int v6 = *((_DWORD *)this + 4);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = (unint64_t)(int)v6 >> 7;
      if (v6 >> 14)
      {
        uint64_t v8 = (unsigned __int8 *)(a2 + 2);
        do
        {
          std::string v9 = v8;
          *v8++ = v7 | 0x80;
          unint64_t v10 = v7 >> 7;
          unint64_t v11 = v7 >> 14;
          v7 >>= 7;
        }
        while (v11);
        a2 = (char *)(v9 + 2);
        *uint64_t v8 = v10;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v12 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

google::protobuf::internal *SnippetUI::OptionalInt::_InternalParse(SnippetUI::OptionalInt *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v16 = a2;
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v16, *((_DWORD *)a3 + 23))) {
        return v16;
      }
      TagFallbacint k = (google::protobuf::internal *)((char *)v16 + 1);
      uint64_t v8 = (char *)*(unsigned __int8 *)v16;
      if ((*(char *)v16 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v8 = (char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0)
      {
        TagFallbacint k = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
        uint64_t v16 = TagFallback;
        goto LABEL_7;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, v8);
      uint64_t v16 = TagFallback;
      if (!TagFallback) {
        return TagFallback;
      }
LABEL_7:
      if (v8 != 8) {
        break;
      }
      unint64_t v11 = (google::protobuf::internal *)((char *)TagFallback + 1);
      LODWORD(v1std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = *(unsigned __int8 *)TagFallback;
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      int v12 = *(char *)v11;
      unint64_t v10 = v10 + (v12 << 7) - 128;
      if (v12 < 0)
      {
        uint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v10);
        uint64_t v16 = v13;
        *((_DWORD *)this + 4) = v14;
        if (!v13) {
          return 0;
        }
      }
      else
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_17:
        uint64_t v16 = v11;
        *((_DWORD *)this + 4) = v10;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, v5, TagFallback, a3, v6);
    if (!v16) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v8 - 1;
  return TagFallback;
}

uint64_t SnippetUI::OptionalInt::GetCachedSize(SnippetUI::OptionalInt *this)
{
  return *((unsigned int *)this + 5);
}

char *SnippetUI::OptionalInt::ByteSizeLong(SnippetUI::OptionalInt *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::OptionalInt *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

uint64_t SnippetUI::OptionalInt::IsInitialized(SnippetUI::OptionalInt *this)
{
  return 1;
}

void SnippetUI::OptionalInt::Clear(SnippetUI::OptionalInt *this)
{
  char v2 = *((unsigned char *)this + 8);
  int v1 = (SnippetUI::OptionalInt *)((char *)this + 8);
  *((_DWORD *)v1 + 2) = 0;
  if (v2) {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v1);
  }
}

void *SnippetUI::OptionalInt::New(SnippetUI::OptionalInt *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalInt>(a2);
}

void *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalInt>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  double result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalInt>);
  }
  result[1] = 0;
  result[2] = 0;
  void *result = &unk_1F211DD10;
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalInt>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *SnippetUI::OptionalInt::New(SnippetUI::OptionalInt *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalInt>(0);
}

void SnippetUI::OptionalInt::~OptionalInt(SnippetUI::OptionalInt *this)
{
  *(void *)this = &unk_1F211DD10;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1C8796D70);
}

{
  *(void *)this = &unk_1F211DD10;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(void *)this = &unk_1F211DD10;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void InitDefaultsscc_info_OptionalDouble_OptionalDataTypes_2eproto(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DEDD0, (google::protobuf::internal *)0x2DEDD0, "/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", a4);
  qword_1EB68F718 = 0;
  unk_1EB68F720 = 0;
  SnippetUI::_OptionalDouble_default_instance_ = (uint64_t)&unk_1F211DE90;
  dword_1EB68F728 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&SnippetUI::_OptionalDouble_default_instance_, v4);
}

uint64_t SnippetUI::OptionalDouble::GetMetadata(SnippetUI::OptionalDouble *this)
{
  return qword_1EA3D8A60;
}

uint64_t SnippetUI::OptionalDouble::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void SnippetUI::OptionalDouble::MergeFrom(SnippetUI::OptionalDouble *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 635);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::OptionalDouble::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5E13958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalDouble::MergeFrom(SnippetUI::OptionalDouble *this, const SnippetUI::OptionalDouble *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 650);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalDouble *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  double v6 = *((double *)a2 + 2);
  if (v6 != 0.0) {
    *((double *)this + 2) = v6;
  }
}

void sub_1C5E13A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalDouble::CopyFrom(SnippetUI::OptionalDouble *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalDouble *)((char *)this + 8);
    *((void *)v5 + 1) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalDouble::MergeFrom(this, lpsrc);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::OptionalDouble::InternalSerializeWithCachedSizesToArray(SnippetUI::OptionalDouble *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((double *)this + 2) != 0.0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      uint64_t v6 = *((void *)this + 2);
    }
    else
    {
      uint64_t v6 = *((void *)this + 2);
    }
    *a2 = 9;
    *(void *)(a2 + 1) = v6;
    a2 += 9;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v7 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

google::protobuf::internal *SnippetUI::OptionalDouble::_InternalParse(SnippetUI::OptionalDouble *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  unint64_t v11 = a2;
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v11, *((_DWORD *)a3 + 23))) {
        return v11;
      }
      TagFallbacint k = (char *)v11 + 1;
      uint64_t v8 = (char *)*(unsigned __int8 *)v11;
      if ((*(char *)v11 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v8 = (char *)(v8 + (*TagFallback << 7) - 128);
      if ((*TagFallback & 0x80000000) == 0)
      {
        TagFallbacint k = (char *)v11 + 2;
LABEL_6:
        unint64_t v11 = (google::protobuf::internal *)TagFallback;
        goto LABEL_7;
      }
      TagFallbacint k = (char *)google::protobuf::internal::ReadTagFallback(v11, v8);
      unint64_t v11 = (google::protobuf::internal *)TagFallback;
      if (!TagFallback) {
        return (google::protobuf::internal *)TagFallback;
      }
LABEL_7:
      if (v8 != 9) {
        break;
      }
      *((void *)this + 2) = *(void *)TagFallback;
      unint64_t v11 = (google::protobuf::internal *)(TagFallback + 8);
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, v5, (google::protobuf::internal::InternalMetadataWithArena *)TagFallback, a3, v6);
    if (!v11) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v8 - 1;
  return (google::protobuf::internal *)TagFallback;
}

uint64_t SnippetUI::OptionalDouble::GetCachedSize(SnippetUI::OptionalDouble *this)
{
  return *((unsigned int *)this + 6);
}

char *SnippetUI::OptionalDouble::ByteSizeLong(SnippetUI::OptionalDouble *this)
{
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = 9;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::OptionalDouble *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v1, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + 6) = v1;
  return (char *)v1;
}

uint64_t SnippetUI::OptionalDouble::IsInitialized(SnippetUI::OptionalDouble *this)
{
  return 1;
}

void SnippetUI::OptionalDouble::Clear(SnippetUI::OptionalDouble *this)
{
  char v2 = *((unsigned char *)this + 8);
  uint64_t v1 = (SnippetUI::OptionalDouble *)((char *)this + 8);
  *((void *)v1 + 1) = 0;
  if (v2) {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v1);
  }
}

void *SnippetUI::OptionalDouble::New(SnippetUI::OptionalDouble *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalDouble>(a2);
}

void *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalDouble>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  double result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x20uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalDouble>);
  }
  result[1] = 0;
  result[2] = 0;
  void *result = &unk_1F211DE90;
  *((_DWORD *)result + 6) = 0;
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalDouble>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *SnippetUI::OptionalDouble::New(SnippetUI::OptionalDouble *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalDouble>(0);
}

void SnippetUI::OptionalDouble::~OptionalDouble(SnippetUI::OptionalDouble *this)
{
  *(void *)this = &unk_1F211DE90;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1C8796D70);
}

{
  *(void *)this = &unk_1F211DE90;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(void *)this = &unk_1F211DE90;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

uint64_t SnippetUI::OptionalBool::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = a2;
  return this;
}

void SnippetUI::OptionalBool::MergeFrom(SnippetUI::OptionalBool *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 451);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (v5) {
    SnippetUI::OptionalBool::MergeFrom(this, v5);
  }
  else {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v6);
  }
}

void sub_1C5E13EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalBool::MergeFrom(SnippetUI::OptionalBool *this, const SnippetUI::OptionalBool *a2)
{
  if (a2 == this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/DialogEngine/engine/visual/OptionalDataTypes.pb.cc", 466);
    long long v4 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: (&from) != (this): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalBool *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL));
  }
  if (*((unsigned char *)a2 + 16)) {
    *((unsigned char *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 1;
  }
}

void sub_1C5E13F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void SnippetUI::OptionalBool::CopyFrom(SnippetUI::OptionalBool *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalBool *)((char *)this + 8);
    *((unsigned char *)v5 + 8) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalBool::MergeFrom(this, lpsrc);
  }
}

const google::protobuf::UnknownFieldSet *SnippetUI::OptionalBool::InternalSerializeWithCachedSizesToArray(SnippetUI::OptionalBool *this, char *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned __int8 v6 = *((unsigned char *)this + 16);
    }
    else
    {
      unsigned __int8 v6 = 1;
    }
    *a2 = 8;
    a2[1] = v6;
    a2 += 2;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)(v7 & 0xFFFFFFFFFFFFFFFELL), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

google::protobuf::internal *SnippetUI::OptionalBool::_InternalParse(SnippetUI::OptionalBool *this, google::protobuf::internal *a2, google::protobuf::internal::ParseContext *a3)
{
  uint64_t v16 = a2;
  uint64_t v5 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      if (google::protobuf::internal::EpsCopyInputStream::DoneWithCheck(a3, (const char **)&v16, *((_DWORD *)a3 + 23))) {
        return v16;
      }
      TagFallbacint k = (google::protobuf::internal *)((char *)v16 + 1);
      uint64_t v8 = (char *)*(unsigned __int8 *)v16;
      if ((*(char *)v16 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v8 = (char *)(v8 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0)
      {
        TagFallbacint k = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
        uint64_t v16 = TagFallback;
        goto LABEL_7;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, v8);
      uint64_t v16 = TagFallback;
      if (!TagFallback) {
        return TagFallback;
      }
LABEL_7:
      if (v8 != 8) {
        break;
      }
      unint64_t v10 = (google::protobuf::internal *)((char *)TagFallback + 1);
      unint64_t v11 = *(unsigned __int8 *)TagFallback;
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        goto LABEL_17;
      }
      int v12 = *(char *)v10;
      unint64_t v11 = v11 + (v12 << 7) - 128;
      if (v12 < 0)
      {
        uint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v11);
        uint64_t v16 = v13;
        *((unsigned char *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v14 != 0;
        if (!v13) {
          return 0;
        }
      }
      else
      {
        unint64_t v10 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_17:
        uint64_t v16 = v10;
        *((unsigned char *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v11 != 0;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse((google::protobuf::internal *)v8, v5, TagFallback, a3, v6);
    if (!v16) {
      return 0;
    }
  }
  *((_DWORD *)a3 + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v8 - 1;
  return TagFallback;
}

uint64_t SnippetUI::OptionalBool::GetCachedSize(SnippetUI::OptionalBool *this)
{
  return *((unsigned int *)this + 5);
}

char *SnippetUI::OptionalBool::ByteSizeLong(SnippetUI::OptionalBool *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 16);
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)(2 * v1);
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((SnippetUI::OptionalBool *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)(2 * v1);
}

uint64_t SnippetUI::OptionalBool::IsInitialized(SnippetUI::OptionalBool *this)
{
  return 1;
}

void SnippetUI::OptionalBool::Clear(SnippetUI::OptionalBool *this)
{
  char v2 = *((unsigned char *)this + 8);
  uint64_t v1 = (SnippetUI::OptionalBool *)((char *)this + 8);
  *((unsigned char *)v1 + 8) = 0;
  if (v2) {
    google::protobuf::internal::InternalMetadataWithArena::DoClear(v1);
  }
}

void *SnippetUI::OptionalBool::New(SnippetUI::OptionalBool *this, google::protobuf::Arena *a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalBool>(a2);
}

void *google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalBool>(google::protobuf::internal::ArenaImpl *this)
{
  if (!this) {
    operator new();
  }
  if (*((void *)this + 14)) {
  double result = google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup((atomic_ullong *)this, 0x18uLL, (void (*)(void *))google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalBool>);
  }
  void *result = &unk_1F211DDD0;
  result[1] = 0;
  *((_DWORD *)result + 5) = 0;
  *((unsigned char *)result + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  return result;
}

uint64_t google::protobuf::internal::arena_destruct_object<SnippetUI::OptionalBool>(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *SnippetUI::OptionalBool::New(SnippetUI::OptionalBool *this)
{
  return google::protobuf::Arena::CreateMaybeMessage<SnippetUI::OptionalBool>(0);
}

void SnippetUI::OptionalBool::~OptionalBool(SnippetUI::OptionalBool *this)
{
  *(void *)this = &unk_1F211DDD0;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
  JUMPOUT(0x1C8796D70);
}

{
  *(void *)this = &unk_1F211DDD0;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

{
  *(void *)this = &unk_1F211DDD0;
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase((uint64_t *)this + 1);
}

void *SnippetUI::OptionalInt::OptionalInt(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1F211DD10;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1F211DD10;
  return this;
}

SnippetUI::OptionalInt *SnippetUI::OptionalInt::OptionalInt(SnippetUI::OptionalInt *this, const SnippetUI::OptionalInt *a2)
{
  *(void *)this = &unk_1F211DD10;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalInt *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  return this;
}

void sub_1C5E14428(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t *SnippetUI::OptionalInt::default_instance(SnippetUI::OptionalInt *this)
{
  if (atomic_load_explicit(scc_info_OptionalInt_OptionalDataTypes_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OptionalInt_OptionalDataTypes_2eproto);
  }
  return &SnippetUI::_OptionalInt_default_instance_;
}

void SnippetUI::OptionalInt::CopyFrom(SnippetUI::OptionalInt *this, const SnippetUI::OptionalInt *a2)
{
  if (a2 != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalInt *)((char *)this + 8);
    *((_DWORD *)v5 + 2) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalInt::MergeFrom(this, a2);
  }
}

void SnippetUI::OptionalInt::InternalSwap(SnippetUI::OptionalInt *this, SnippetUI::OptionalInt *a2)
{
  uint64_t v4 = (SnippetUI::OptionalInt *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      char v6 = v8;
      goto LABEL_6;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_7;
  }
  char v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
  google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
LABEL_7:
  int v7 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v7;
}

uint64_t SnippetUI::OptionalBool::OptionalBool(uint64_t this)
{
  *(void *)this = &unk_1F211DDD0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(unsigned char *)(this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1F211DDD0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 2std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = 0;
  *(unsigned char *)(this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  return this;
}

SnippetUI::OptionalBool *SnippetUI::OptionalBool::OptionalBool(SnippetUI::OptionalBool *this, const SnippetUI::OptionalBool *a2)
{
  *(void *)this = &unk_1F211DDD0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalBool *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((unsigned char *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((unsigned char *)a2 + 16);
  return this;
}

void sub_1C5E14654(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t *SnippetUI::OptionalBool::default_instance(SnippetUI::OptionalBool *this)
{
  if (atomic_load_explicit(scc_info_OptionalBool_OptionalDataTypes_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OptionalBool_OptionalDataTypes_2eproto);
  }
  return &SnippetUI::_OptionalBool_default_instance_;
}

void SnippetUI::OptionalBool::CopyFrom(SnippetUI::OptionalBool *this, const SnippetUI::OptionalBool *a2)
{
  if (a2 != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalBool *)((char *)this + 8);
    *((unsigned char *)v5 + 8) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalBool::MergeFrom(this, a2);
  }
}

void SnippetUI::OptionalBool::InternalSwap(SnippetUI::OptionalBool *this, SnippetUI::OptionalBool *a2)
{
  uint64_t v4 = (SnippetUI::OptionalBool *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      char v6 = v8;
      goto LABEL_6;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_7;
  }
  char v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
  google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
LABEL_7:
  char v7 = *((unsigned char *)this + 16);
  *((unsigned char *)this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = *((unsigned char *)a2 + 16);
  *((unsigned char *)a2 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v7;
}

uint64_t SnippetUI::OptionalDouble::OptionalDouble(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)this = &unk_1F211DE90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0;
  *(void *)this = &unk_1F211DE90;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

SnippetUI::OptionalDouble *SnippetUI::OptionalDouble::OptionalDouble(SnippetUI::OptionalDouble *this, const SnippetUI::OptionalDouble *a2)
{
  *(void *)this = &unk_1F211DE90;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 6) = 0;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    google::protobuf::internal::InternalMetadataWithArena::DoMergeFrom((SnippetUI::OptionalDouble *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)(v4 & 0xFFFFFFFFFFFFFFFELL));
  }
  *((void *)this + 2) = *((void *)a2 + 2);
  return this;
}

void sub_1C5E14880(_Unwind_Exception *a1)
{
  google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::~InternalMetadataWithArenaBase(v1);
  _Unwind_Resume(a1);
}

uint64_t *SnippetUI::OptionalDouble::default_instance(SnippetUI::OptionalDouble *this)
{
  if (atomic_load_explicit(scc_info_OptionalDouble_OptionalDataTypes_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OptionalDouble_OptionalDataTypes_2eproto);
  }
  return &SnippetUI::_OptionalDouble_default_instance_;
}

void SnippetUI::OptionalDouble::CopyFrom(SnippetUI::OptionalDouble *this, const SnippetUI::OptionalDouble *a2)
{
  if (a2 != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (SnippetUI::OptionalDouble *)((char *)this + 8);
    *((void *)v5 + 1) = 0;
    if (v6) {
      google::protobuf::internal::InternalMetadataWithArena::DoClear(v5);
    }
    SnippetUI::OptionalDouble::MergeFrom(this, a2);
  }
}

double SnippetUI::OptionalDouble::InternalSwap(SnippetUI::OptionalDouble *this, SnippetUI::OptionalDouble *a2)
{
  uint64_t v4 = (SnippetUI::OptionalDouble *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (*((unsigned char *)this + 8))
  {
    if ((v5 & 1) == 0)
    {
      google::protobuf::internal::InternalMetadataWithArenaBase<google::protobuf::UnknownFieldSet,google::protobuf::internal::InternalMetadataWithArena>::mutable_unknown_fields_slow((unint64_t *)a2 + 1);
      char v6 = v8;
      goto LABEL_6;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_7;
  }
  char v6 = (google::protobuf::UnknownFieldSet *)(v5 & 0xFFFFFFFFFFFFFFFELL);
LABEL_6:
  google::protobuf::internal::InternalMetadataWithArena::DoSwap(v4, v6);
LABEL_7:
  double result = *((double *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((double *)a2 + 2) = result;
  return result;
}

void sub_1C5E14A48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1C5E14AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1C5E14BA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5E14C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_1C5E14D10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5E14D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)DESpeakableString;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1C5E14ED0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0)
  {
    operator delete(a15);
    if ((v24 & 1) == 0)
    {
LABEL_8:

      _Unwind_Resume(a1);
    }
  }
  else if (!v24)
  {
    goto LABEL_8;
  }
  MEMORY[0x1C8796D70](v23, 0x1012C4059F2399FLL);
  goto LABEL_8;
}

void sub_1C5E14FF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL siri::dialogengine::SemanticModel::empty(siri::dialogengine::SemanticModel *this)
{
  return !*(void *)this && *((void *)this + 4) == 0;
}

uint64_t siri::dialogengine::GetSemanticModelCacheSize(siri::dialogengine *this)
{
  uint64_t SemanticModelCache = siri::dialogengine::GetSemanticModelCache(this);
  uint64_t v2 = (std::mutex *)(SemanticModelCache + 24);
  std::mutex::lock((std::mutex *)(SemanticModelCache + 24));
  uint64_t v3 = *(void *)(SemanticModelCache + 104);
  std::mutex::unlock(v2);
  return v3;
}

uint64_t siri::dialogengine::GetSemanticModelCache(siri::dialogengine *this)
{
  {
    operator new();
  }
  uint64_t v1 = (std::once_flag::_State_type *)siri::dialogengine::GetSemanticModelCache(void)::flag;
  if (atomic_load_explicit((atomic_ullong *volatile)siri::dialogengine::GetSemanticModelCache(void)::flag, memory_order_acquire) != -1)
  {
    uint64_t v5 = &v3;
    uint64_t v4 = &v5;
    std::__call_once(v1, &v4, (void (__cdecl *)(void *))std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetSemanticModelCache(void)::$_0 &&>>);
  }
  return siri::dialogengine::GetSemanticModelCache(void)::sCache;
}

void sub_1C5E15118(_Unwind_Exception *a1)
{
}

void std::__call_once_proxy[abi:ne180100]<std::tuple<siri::dialogengine::GetSemanticModelCache(void)::$_0 &&>>()
{
}

void sub_1C5E151BC(_Unwind_Exception *a1)
{
  MEMORY[0x1C8796D70](v1, 0x1032C40C9734361);
  _Unwind_Resume(a1);
}

void siri::dialogengine::GetSemanticModel(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1)
  {
    siri::dialogengine::Log::Error((siri::dialogengine::Log *)"Internal programming error - no context specified to create semantic model.", a2);
    *(_OWORD *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
    *(_OWORD *)(a3 + ++*(void *)(this + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(void *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = a3 + 24;
    return;
  }
  siri::dialogengine::Context::GetLocale((siri::dialogengine::Context *)a1, a2, (uint64_t)&__str);
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)__sz, (const siri::dialogengine::RequestInfo *)(a1 + 1));
    siri::dialogengine::RequestInfo::GetDialogMetadata((uint64_t)__sz, (const void **)a2, &v134);
    siri::dialogengine::RequestInfo::~RequestInfo((void **)__sz);
    if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v10 = HIBYTE(v134.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v10 = v134.__r_.__value_.__l.__size_;
    }
    if (!v10)
    {
      uint64_t SemanticModelCache = siri::dialogengine::GetSemanticModelCache(v8);
      goto LABEL_17;
    }
    uint64_t v11 = a1[433];
    if (v11)
    {
      uint64_t SemanticModelCache = *(void *)(v11 + 72);
      int v12 = *(std::__shared_weak_count **)(v11 + 80);
      if (!v12)
      {
LABEL_17:
        siri::dialogengine::RegisterMorphunData((siri::dialogengine *)a1, v9);
        uint64_t v93 = SemanticModelCache;
        siri::dialogengine::GetFallbackLocales((uint64_t)&__str, (uint64_t *)&v127);
        v121[1] = 0;
        long long v122 = 0uLL;
        uint64_t v125 = 0;
        uint64_t v124 = 0;
        uint64_t v123 = (const void **)&v124;
        char v126 = 0;
        uint64_t v120 = v121;
        v121[0] = 0;
        memset(&v119, 0, sizeof(v119));
        memset(&v118, 0, sizeof(v118));
        memset(&v117, 0, sizeof(v117));
        if (v10)
        {
          MEMORY[0x1C8796900](&v119, "custom");
          MEMORY[0x1C8796900](&v118, "<data_from_parameter>");
          siri::dialogengine::SemanticModelCache::CreateKey((const void **)a2, (uint64_t)&v119, &v107);
          siri::dialogengine::SemanticModelCache::Find(SemanticModelCache, &v107, (std::string *)__sz);
          int v15 = v133;
          if (!v133)
          {
            if (a2[23] >= 0) {
              uint64_t v17 = (uint64_t *)a2;
            }
            else {
              uint64_t v17 = *(uint64_t **)a2;
            }
            siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Loading dialog metadata for \"%s\" from request data", v14, v17);
            siri::dialogengine::DecodeBase64((std::string::size_type)&v134, &v115);
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F211DF98;
            *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = *(_OWORD *)&v115.__r_.__value_.__l.__data_;
            *(void *)&long long v95 = *((void *)&v115.__r_.__value_.__l + 2);
            memset(&v115, 0, sizeof(v115));
            siri::dialogengine::ReadOneMetadataFile();
          }
          if (*(char *)(SemanticModelCache + 23) < 0)
          {
            std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)SemanticModelCache, *(void *)(SemanticModelCache + 8));
          }
          else
          {
            long long v16 = *(_OWORD *)SemanticModelCache;
            __p.__r_.__value_.__r.__words[2] = *(void *)(SemanticModelCache + 16);
            *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v16;
          }
          int v18 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
          int v20 = SHIBYTE(v107.__r_.__value_.__r.__words[2]);
          std::string::size_type v21 = v107.__r_.__value_.__r.__words[0];
          if ((__sz[23] & 0x80000000) != 0) {
            std::string::__init_copy_ctor_external(&v116, *(const std::string::value_type **)__sz, *(std::string::size_type *)&__sz[8]);
          }
          else {
            std::string v116 = *(std::string *)__sz;
          }
          uint64_t v22 = &v107;
          if (v20 < 0) {
            uint64_t v22 = (std::string *)v21;
          }
          uint64_t p_p = &__p;
          if (v18 < 0) {
            uint64_t p_p = (std::string *)v19;
          }
          int v24 = &v116;
          if ((v116.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v24 = (std::string *)v116.__r_.__value_.__r.__words[0];
          }
          siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Returning cached semantic model from %s cache for key \"%s\" with path/tag \"%s\"", v14, p_p, v22, v24);
          if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v116.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          uint64_t v25 = v130;
          *(void *)a3 = *(void *)&__sz[24];
          *(void *)(a3 + 8) = v25;
          if (v25) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v25 + 8), 1uLL, memory_order_relaxed);
          }
          std::map<std::string,std::string>::map[abi:ne180100](a3 + 16, v131);
          *(unsigned char *)(a3 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v132;
          std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)__sz);
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v107.__r_.__value_.__l.__data_);
            if (v15) {
              goto LABEL_189;
            }
          }
          else if (v15)
          {
            goto LABEL_189;
          }
        }
        std::string::size_type v26 = v127;
        for (uint64_t i = v128; v26 != i; v26 += 3)
        {
          std::string::size_type v28 = HIBYTE(v119.__r_.__value_.__r.__words[2]);
          if ((v119.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v28 = v119.__r_.__value_.__l.__size_;
          }
          if (!v28)
          {
            siri::dialogengine::SemanticModelCache::CreateKey((const void **)a2, (uint64_t)v26, &__p);
            siri::dialogengine::SemanticModelCache::Find(v93, &__p, (std::string *)__sz);
            if (v133)
            {
              uint64_t v57 = a1[431];
              std::string::size_type v58 = (std::__shared_weak_count *)a1[432];
              if (v58) {
                atomic_fetch_add_explicit(&v58->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              if ((__sz[23] & 0x80000000) != 0) {
                std::string::__init_copy_ctor_external(&v107, *(const std::string::value_type **)__sz, *(std::string::size_type *)&__sz[8]);
              }
              else {
                std::string v107 = *(std::string *)__sz;
              }
              siri::dialogengine::TraceWriter::CopyMetadataFile(v57, &v107);
              if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v107.__r_.__value_.__l.__data_);
              }
              if (v58) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v58);
              }
              int v88 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
              std::string::size_type v89 = __p.__r_.__value_.__r.__words[0];
              if ((__sz[23] & 0x80000000) != 0) {
                std::string::__init_copy_ctor_external(&v107, *(const std::string::value_type **)__sz, *(std::string::size_type *)&__sz[8]);
              }
              else {
                std::string v107 = *(std::string *)__sz;
              }
              long long v90 = &__p;
              if (v88 < 0) {
                long long v90 = (std::string *)v89;
              }
              uint64_t v91 = &v107;
              if ((v107.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                uint64_t v91 = (std::string *)v107.__r_.__value_.__r.__words[0];
              }
              siri::dialogengine::Log::Debug((siri::dialogengine::Log *)"Returning cached semantic model for key \"%s\" with path/tag \"%s\"", v87, v90, v91);
              if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v107.__r_.__value_.__l.__data_);
              }
              uint64_t v92 = v130;
              *(void *)a3 = *(void *)&__sz[24];
              *(void *)(a3 + 8) = v92;
              if (v92) {
                atomic_fetch_add_explicit((atomic_ullong *volatile)(v92 + 8), 1uLL, memory_order_relaxed);
              }
              std::map<std::string,std::string>::map[abi:ne180100](a3 + 16, v131);
              *(unsigned char *)(a3 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v132;
              std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)__sz);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
LABEL_189:
              int v49 = 1;
              goto LABEL_190;
            }
            std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)__sz);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          siri::dialogengine::RequestInfo::RequestInfo((siri::dialogengine::RequestInfo *)__sz, (const siri::dialogengine::RequestInfo *)(a1 + 1));
          memset(&v107, 0, sizeof(v107));
          std::vector<siri::dialogengine::UpdatableDir>::__init_with_size[abi:ne180100]<siri::dialogengine::UpdatableDir*,siri::dialogengine::UpdatableDir*>(&v107, *(uint64_t *)&__sz[8], *(uint64_t *)&__sz[16], 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)&__sz[16] - *(void *)&__sz[8]) >> 5));
          siri::dialogengine::FindDialogMetadataFile((uint64_t *)&v107, (const void **)a2, v26, (uint64_t)&__p);
          v116.__r_.__value_.__r.__words[0] = (std::string::size_type)&v107;
          std::vector<siri::dialogengine::UpdatableDir>::__destroy_vector::operator()[abi:ne180100]((void ***)&v116);
          siri::dialogengine::RequestInfo::~RequestInfo((void **)__sz);
          std::string::size_type v29 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v29 = __p.__r_.__value_.__l.__size_;
          }
          if (v29 && siri::dialogengine::FileExists((uint64_t *)&__p))
          {
            uint64_t v30 = a1[431];
            int v31 = (std::__shared_weak_count *)a1[432];
            if (v31) {
              atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            siri::dialogengine::TraceWriter::CopyMetadataFile(v30, &__p);
            if (v31) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v31);
            }
            std::operator+<char>();
            std::string::size_type v32 = std::string::append(&v116, "' from file: ");
            long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
            v107.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v33;
            v32->__r_.__value_.__l.__size_ = 0;
            v32->__r_.__value_.__r.__words[2] = 0;
            v32->__r_.__value_.__r.__words[0] = 0;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v34 = &__p;
            }
            else {
              std::string::size_type v34 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v35 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v35 = __p.__r_.__value_.__l.__size_;
            }
            uint64_t v36 = std::string::append(&v107, (const std::string::value_type *)v34, v35);
            long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
            *(void *)&__sz[16] = *((void *)&v36->__r_.__value_.__l + 2);
            *(_OWORD *)__sz = v37;
            v36->__r_.__value_.__l.__size_ = 0;
            v36->__r_.__value_.__r.__words[2] = 0;
            v36->__r_.__value_.__r.__words[0] = 0;
            siri::dialogengine::Log::Debug((siri::dialogengine *)__sz);
            if ((__sz[23] & 0x80000000) != 0) {
              operator delete(*(void **)__sz);
            }
            if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v107.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v116.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v114, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
            }
            else {
              std::string v114 = __p;
            }
            *(void *)__sz = &unk_1F211EAE0;
            *(std::string *)&__sz[8] = v114;
            memset(&v114, 0, sizeof(v114));
            siri::dialogengine::ReadOneMetadataFile();
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v38 = a2[23];
        if (v38 < 0)
        {
          if (*((void *)a2 + 1) != 13) {
            goto LABEL_96;
          }
          long long v39 = *(uint64_t **)a2;
        }
        else
        {
          long long v39 = (uint64_t *)a2;
          if (v38 != 13) {
            goto LABEL_96;
          }
        }
        uint64_t v40 = *v39;
        uint64_t v41 = *(uint64_t *)((char *)v39 + 5);
        if (v40 == 0x7250726577736E61 && v41 == 0x746375646F725072)
        {
          std::string::basic_string[abi:ne180100]<0>(__sz, "reality_device");
          std::string::value_type v43 = (void **)std::__tree<std::string>::find<std::string>((uint64_t)&v123, (const void **)__sz);
          if ((__sz[23] & 0x80000000) != 0) {
            operator delete(*(void **)__sz);
          }
          if (&v124 == v43)
          {
            std::string::basic_string[abi:ne180100]<0>(&__p, "CmwKDWFuc3dlclByb2R1Y3QSDnJlYWxpdHlfZGV2aWNlGiUKEEFwcGxlIFZpc2lvbiBQcm8SEQoFY291bnQSCHNpbmd1bGFyGiQKEUFwcGxlIFZpc2lvbiBQcm9zEg8KBWNvdW50EgZwbHVyYWwQAQ==");
            siri::dialogengine::DecodeBase64((std::string::size_type)&__p, &v113);
            *(void *)__sz = &unk_1F211DF98;
            *(std::string *)&__sz[8] = v113;
            memset(&v113, 0, sizeof(v113));
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            siri::dialogengine::ReadOneMetadataFile();
          }
        }
LABEL_96:
        std::string::size_type v44 = HIBYTE(v119.__r_.__value_.__r.__words[2]);
        if ((v119.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v44 = v119.__r_.__value_.__l.__size_;
        }
        if (v44)
        {
          std::string::size_type v45 = HIBYTE(v117.__r_.__value_.__r.__words[2]);
          if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v45 = v117.__r_.__value_.__l.__size_;
          }
          if (!v45) {
            std::string::operator=(&v117, &__str);
          }
          memset(&__p, 0, sizeof(__p));
          memset(&v107, 0, sizeof(v107));
          memset(&v116, 0, sizeof(v116));
          morphun::util::ULocale::ULocale();
          if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v116.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v107.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          BOOL v46 = operator new(0x108uLL);
          v46[1] = 0;
          v46[2] = 0;
          void *v46 = &unk_1F211DFC8;
          *(void *)&long long v47 = MEMORY[0x1C8796590](v46 + 3, __sz, &v120);
          *((void *)&v47 + 1) = v46;
          BOOL v48 = (std::__shared_weak_count *)*((void *)&v122 + 1);
          long long v122 = v47;
          if (v48) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v48);
          }
          siri::dialogengine::SemanticModelCache::CreateKey((const void **)a2, (uint64_t)&v119, &v116);
          if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&v106, v118.__r_.__value_.__l.__data_, v118.__r_.__value_.__l.__size_);
          }
          else {
            std::string v106 = v118;
          }
          long long v101 = v122;
          if (*((void *)&v122 + 1)) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v122 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          std::map<std::string,std::string>::map[abi:ne180100]((uint64_t)&v102, &v123);
          char v50 = v126;
          char v105 = v126;
          *(_OWORD *)&v107.__r_.__value_.__l.__data_ = *(_OWORD *)&v106.__r_.__value_.__l.__data_;
          std::string::size_type v51 = v106.__r_.__value_.__r.__words[2];
          memset(&v106, 0, sizeof(v106));
          long long v108 = v101;
          long long v101 = 0uLL;
          char v52 = v103;
          v107.__r_.__value_.__r.__words[2] = v51;
          uint64_t v109 = v102;
          uint64_t v110 = v103;
          uint64_t v111 = v104;
          if (v104)
          {
            v103[2] = &v110;
            uint64_t v102 = (const void **)&v103;
            uint64_t v103 = 0;
            uint64_t v104 = 0;
            char v52 = 0;
          }
          else
          {
            uint64_t v109 = (const void **)&v110;
          }
          char v112 = v50;
          std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v52);
          if (*((void *)&v101 + 1)) {
            std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v101 + 1));
          }
          if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v106.__r_.__value_.__l.__data_);
          }
          if (siri::dialogengine::SemanticModelCache::Insert((uint64_t *)v93, (uint64_t)&v116, (uint64_t)&v107))
          {
            if (*(char *)(v93 + 23) < 0)
            {
              std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)v93, *(void *)(v93 + 8));
            }
            else
            {
              long long v54 = *(_OWORD *)v93;
              __p.__r_.__value_.__r.__words[2] = *(void *)(v93 + 16);
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v54;
            }
            int v59 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
            std::string::size_type v60 = __p.__r_.__value_.__r.__words[0];
            int v61 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
            std::string::size_type v62 = v116.__r_.__value_.__r.__words[0];
            if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v100, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
            }
            else {
              std::string v100 = v107;
            }
            std::string v67 = &v116;
            if (v61 < 0) {
              std::string v67 = (std::string *)v62;
            }
            long long v68 = &__p;
            if (v59 < 0) {
              long long v68 = (std::string *)v60;
            }
            std::string v69 = &v100;
            if ((v100.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string v69 = (std::string *)v100.__r_.__value_.__r.__words[0];
            }
            siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Added new semantic model entry to %s cache for key \"%s\" with path/tag \"%s\"", v53, v68, v67, v69);
            if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v100.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            int v55 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
            std::string::size_type v56 = v116.__r_.__value_.__r.__words[0];
            if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&__p, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
            }
            else {
              std::string __p = v107;
            }
            std::string::size_type v63 = &v116;
            if (v55 < 0) {
              std::string::size_type v63 = (std::string *)v56;
            }
            std::string::size_type v64 = &__p;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v64 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Not caching semantic model for key \"%s\" with path/tag \"%s\" as another has been contructed and cached while this model was being created", v53, v63, v64);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            siri::dialogengine::SemanticModelCache::Find(v93, &v116, &__p);
            if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v107.__r_.__value_.__l.__data_);
            }
            std::string v107 = __p;
            *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
            __p.__r_.__value_.__s.__data_[0] = 0;
            long long v65 = v95;
            long long v95 = 0uLL;
            long long v66 = (std::__shared_weak_count *)*((void *)&v108 + 1);
            long long v108 = v65;
            if (v66) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v66);
            }
            std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v110);
            uint64_t v109 = v96;
            uint64_t v110 = v97;
            uint64_t v111 = v98;
            if (v98)
            {
              v97[2] = &v110;
              uint64_t v96 = (const void **)&v97;
              std::string v97 = 0;
              uint64_t v98 = 0;
            }
            else
            {
              uint64_t v109 = (const void **)&v110;
            }
            char v112 = v99;
            std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)&__p);
          }
          int v71 = SHIBYTE(v116.__r_.__value_.__r.__words[2]);
          std::string::size_type v72 = v116.__r_.__value_.__r.__words[0];
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&__p, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
          }
          else {
            std::string __p = v107;
          }
          std::string v73 = &v116;
          if (v71 < 0) {
            std::string v73 = (std::string *)v72;
          }
          int64_t v74 = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int64_t v74 = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          siri::dialogengine::Log::Info((siri::dialogengine::Log *)"Returning semantic model for key \"%s\" with path/tag \"%s\"", v70, v73, v74);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          uint64_t v75 = a1[431];
          std::string v76 = (std::__shared_weak_count *)a1[432];
          if (v76) {
            atomic_fetch_add_explicit(&v76->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
            std::string::__init_copy_ctor_external(&__p, v107.__r_.__value_.__l.__data_, v107.__r_.__value_.__l.__size_);
          }
          else {
            std::string __p = v107;
          }
          siri::dialogengine::TraceWriter::CopyMetadataFile(v75, &__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (v76) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v76);
          }
          uint64_t v77 = *((void *)&v108 + 1);
          *(void *)a3 = v108;
          *(void *)(a3 + 8) = v77;
          if (v77) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v77 + 8), 1uLL, memory_order_relaxed);
          }
          std::map<std::string,std::string>::map[abi:ne180100](a3 + 16, &v109);
          *(unsigned char *)(a3 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v112;
          std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v110);
          if (*((void *)&v108 + 1)) {
            std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v108 + 1));
          }
          if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v107.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v116.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v116.__r_.__value_.__l.__data_);
          }
          morphun::util::ULocale::~ULocale((morphun::util::ULocale *)__sz);
          goto LABEL_189;
        }
        int v49 = 0;
LABEL_190:
        if (SHIBYTE(v117.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v117.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v118.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v119.__r_.__value_.__l.__data_);
        }
        std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(v121[0]);
        if (!v49)
        {
          uint64_t v79 = v122;
          uint64_t v80 = v125;
          if (!(void)v122 && !v125)
          {
            if (a2[23] >= 0) {
              std::string v81 = (uint64_t *)a2;
            }
            else {
              std::string v81 = *(uint64_t **)a2;
            }
            p_str = &__str;
            if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
            }
            siri::dialogengine::Log::Error((siri::dialogengine::Log *)"No dialog metadata for semantic concept '%s' for locale '%s'", v78, v81, p_str);
            uint64_t v79 = v122;
            uint64_t v80 = v125;
          }
          uint64_t v83 = *((void *)&v122 + 1);
          uint64_t v84 = v123;
          *(void *)a3 = v79;
          *(void *)(a3 + 8) = v83;
          long long v122 = 0uLL;
          *(void *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v84;
          int v85 = v124;
          *(void *)(a3 + 24) = v124;
          uint64_t v86 = a3 + 24;
          *(void *)(a3 + ++*(void *)(this + 32) = v80;
          if (v80)
          {
            v85[2] = v86;
            uint64_t v123 = (const void **)&v124;
            uint64_t v124 = 0;
            uint64_t v125 = 0;
          }
          else
          {
            *(void *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = v86;
          }
          *(unsigned char *)(a3 + 4std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = v126;
        }
        std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(v124);
        if (*((void *)&v122 + 1)) {
          std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v122 + 1));
        }
        *(void *)__sz = &v127;
        std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)__sz);
        if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v134.__r_.__value_.__l.__data_);
        }
        goto LABEL_213;
      }
    }
    else
    {
      uint64_t SemanticModelCache = a1[437];
      int v12 = (std::__shared_weak_count *)a1[438];
      if (!v12) {
        goto LABEL_17;
      }
    }
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v12);
    goto LABEL_17;
  }
  siri::dialogengine::Log::Error((siri::dialogengine::Log *)"No locale specified to create semantic model.", v6);
  *(_OWORD *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = 0u;
  *(_OWORD *)(a3 + ++*(void *)(this + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  *(void *)(a3 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = a3 + 24;
LABEL_213:
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1C5E16114(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t __p_8, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,void *a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100]((uint64_t)&STACK[0x250]);
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  if (a71 < 0) {
    operator delete(a70);
  }
  if (a73 < 0) {
    operator delete(a72);
  }
  std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(a74);
  if (a2 == 1)
  {
    std::string v78 = __cxa_begin_catch(a1);
    uint64_t v79 = (char *)(*(uint64_t (**)(void *))(*(void *)v78 + 16))(v78);
    std::string::basic_string[abi:ne180100]<0>(&__p, v79);
    uint64_t v80 = std::string::insert((std::string *)&__p, 0, "GetSemanticModel: Unable to create SemanticModel: ");
    long long v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
    STACK[0x260] = v80->__r_.__value_.__r.__words[2];
    *(_OWORD *)&STACK[0x250] = v81;
    v80->__r_.__value_.__l.__size_ = 0;
    v80->__r_.__value_.__r.__words[2] = 0;
    v80->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Log::LogWithLevel((uint64_t)&STACK[0x250], 3u);
    if (SLOBYTE(STACK[0x267]) < 0) {
      operator delete((void *)STACK[0x250]);
    }
    if (a20 < 0) {
      operator delete(__p);
    }
    v74[1] = 0u;
    v74[2] = 0u;
    _OWORD *v74 = 0u;
    *((void *)v74 + 2) = (char *)v74 + 24;
    __cxa_end_catch();
    JUMPOUT(0x1C5E15FB4);
  }
  siri::dialogengine::SemanticModel::~SemanticModel((siri::dialogengine::SemanticModel *)&STACK[0x200]);
  STACK[0x250] = (unint64_t)&STACK[0x238];
  std::vector<std::string>::__destroy_vector::operator()[abi:ne180100]((void ***)&STACK[0x250]);
  if (*(char *)(v75 - 121) < 0) {
    operator delete(*(void **)(v75 - 144));
  }
  if (*(char *)(v75 - 97) < 0) {
    operator delete(*(void **)(v75 - 120));
  }
  _Unwind_Resume(a1);
}

void sub_1C5E166E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (SLOBYTE(STACK[0x267]) < 0) {
    operator delete((void *)STACK[0x250]);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  __cxa_end_catch();
  JUMPOUT(0x1C5E16214);
}

void siri::dialogengine::ReadOneMetadataFile()
{
  siri::dialogengine::DialogMetadataReader::DialogMetadataReader((siri::dialogengine::DialogMetadataReader *)&v0);
}

void sub_1C5E172A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,void *__p,uint64_t a58,uint64_t a59,char a60)
{
  morphun::util::ULocale::~ULocale((morphun::util::ULocale *)&a60);
  uint64_t v62 = *(void *)(v60 - 152);
  *(void *)(v60 - 152) = 0;
  if (v62) {
    std::default_delete<siri::dialogengine::DialogMetadataReader::Impl>::operator()[abi:ne180100](v62);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__optional_destruct_base<siri::dialogengine::SemanticModelCache::Entry,false>::~__optional_destruct_base[abi:ne180100](uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72))
  {
    std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*(void **)(a1 + 48));
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
  }
  return a1;
}

void siri::dialogengine::SemanticModelCache::Entry::~Entry(siri::dialogengine::SemanticModelCache::Entry *this)
{
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 6));
  uint64_t v2 = (std::__shared_weak_count *)*((void *)this + 4);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*((char *)this + 23) < 0) {
    operator delete(*(void **)this);
  }
}

void std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::__map_value_compare<morphun::dialog::SemanticValue,std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,std::less<morphun::dialog::SemanticValue>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>>>::destroy(a1[1]);
    morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData((morphun::dialog::SemanticFeatureModel_DisplayData *)(a1 + 11));
    morphun::dialog::SemanticValue::~SemanticValue((morphun::dialog::SemanticValue *)(a1 + 4));
    operator delete(a1);
  }
}

void std::__shared_ptr_emplace<morphun::dialog::SemanticFeatureModel>::__on_zero_shared()
{
}

void std::__shared_ptr_emplace<morphun::dialog::SemanticFeatureModel>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211DFC8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x1C8796D70);
}

void std::__shared_ptr_emplace<morphun::dialog::SemanticFeatureModel>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F211DFC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(void **a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(*a1);
    std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::destroy(a1[1]);
    std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(a1 + 4);
    operator delete(a1);
  }
}

void std::vector<morphun::dialog::SemanticFeatureModel_DisplayValue>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      char v6 = v4 - 56;
      char v7 = v4 - 56;
      uint64_t v8 = v4 - 56;
      do
      {
        uint64_t v9 = *(void *)v8;
        v8 -= 56;
        (*(void (**)(char *))(v9 + 8))(v7);
        v6 -= 56;
        BOOL v10 = v7 == v2;
        char v7 = v8;
      }
      while (!v10);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticValue,morphun::dialog::SemanticFeatureModel_DisplayData>,void *>>>::operator()[abi:ne180100](char a1, char *__p)
{
  if (a1)
  {
    morphun::dialog::SemanticFeatureModel_DisplayData::~SemanticFeatureModel_DisplayData((morphun::dialog::SemanticFeatureModel_DisplayData *)(__p + 88));
    morphun::dialog::SemanticValue::~SemanticValue((morphun::dialog::SemanticValue *)(__p + 32));
  }
  if (__p)
  {
    operator delete(__p);
  }
}

BOOL std::less<morphun::dialog::SemanticValue>::operator()[abi:ne180100](void *a1, void *a2)
{
  uint64_t v2 = (unsigned __int16 *)((char *)a1 + *(void *)(*a1 - 40));
  char v3 = (unsigned __int16 *)((char *)a2 + *(void *)(*a2 - 40));
  unint64_t v4 = *((unsigned __int8 *)v3 + 23);
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    unint64_t v4 = *((void *)v3 + 1);
  }
  unint64_t v6 = *((unsigned __int8 *)v2 + 23);
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    unint64_t v6 = *((void *)v2 + 1);
  }
  if (v4 >= v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = v4;
  }
  if (v8)
  {
    uint64_t v9 = *(unsigned __int16 **)v2;
    if (v7 >= 0) {
      uint64_t v9 = (unsigned __int16 *)((char *)a1 + *(void *)(*a1 - 40));
    }
    BOOL v10 = *(unsigned __int16 **)v3;
    if (v5 >= 0) {
      BOOL v10 = (unsigned __int16 *)((char *)a2 + *(void *)(*a2 - 40));
    }
    unint64_t v11 = v8;
    do
    {
      unsigned int v12 = *v9;
      unsigned int v13 = *v10;
      if (v12 < v13) {
        return 1;
      }
      if (v13 < v12) {
        goto LABEL_19;
      }
      ++v9;
      ++v10;
    }
    while (--v11);
  }
  if (v6 < v4) {
    return 1;
  }
LABEL_19:
  if (v8)
  {
    if (v5 >= 0) {
      int v15 = v3;
    }
    else {
      int v15 = *(unsigned __int16 **)v3;
    }
    if (v7 >= 0) {
      long long v16 = v2;
    }
    else {
      long long v16 = *(unsigned __int16 **)v2;
    }
    do
    {
      unsigned int v17 = *v15;
      unsigned int v18 = *v16;
      if (v17 < v18) {
        return 0;
      }
      if (v18 < v17) {
        goto LABEL_31;
      }
      ++v15;
      ++v16;
    }
    while (--v8);
  }
  if (v4 < v6) {
    return 0;
  }
LABEL_31:
  unint64_t v19 = *((unsigned __int8 *)v3 + 47);
  int v20 = (char)v19;
  if ((v19 & 0x80u) != 0) {
    unint64_t v19 = *((void *)v3 + 4);
  }
  unint64_t v21 = *((unsigned __int8 *)v2 + 47);
  int v22 = (char)v21;
  if ((v21 & 0x80u) != 0) {
    unint64_t v21 = *((void *)v2 + 4);
  }
  if (v19 >= v21) {
    unint64_t v23 = v21;
  }
  else {
    unint64_t v23 = v19;
  }
  if (v23)
  {
    std::string::size_type v26 = (unsigned __int16 *)*((void *)v2 + 3);
    int v24 = v2 + 12;
    uint64_t v25 = v26;
    if (v22 < 0) {
      int v24 = v25;
    }
    std::string::size_type v29 = (unsigned __int16 *)*((void *)v3 + 3);
    long long v27 = v3 + 12;
    std::string::size_type v28 = v29;
    if (v20 < 0) {
      long long v27 = v28;
    }
    while (1)
    {
      unsigned int v30 = *v24;
      unsigned int v31 = *v27;
      if (v31 != v30) {
        break;
      }
      ++v24;
      ++v27;
      if (!--v23) {
        goto LABEL_45;
      }
    }
    BOOL v32 = v30 >= v31;
  }
  else
  {
LABEL_45:
    BOOL v32 = v21 >= v19;
  }
  return !v32;
}

void std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(void **this)
{
  if (*((char *)this + 95) < 0) {
    operator delete(this[9]);
  }
  morphun::dialog::SemanticFeature::~SemanticFeature((morphun::dialog::SemanticFeature *)this);
}

uint64_t std::__split_buffer<morphun::dialog::SemanticFeatureModel_DisplayValue>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void *)(i - 56);
    *(void *)(a1 + google::protobuf::internal::RepeatedPtrFieldBase::Clear<google::protobuf::RepeatedPtrField<SnippetUI::Player>::TypeHandler>((uint64_t)this + 16) = i - 56;
    (*(void (**)(void))(v4 + 8))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__emplace_hint_unique_key_args<morphun::dialog::SemanticFeature,std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>> const&>(uint64_t **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v7 = a1 + 1;
  if (a1 + 1 != (uint64_t **)a2 && !morphun::dialog::SemanticFeature::operator<())
  {
    if (!morphun::dialog::SemanticFeature::operator<())
    {
      unint64_t v21 = a2;
      int v22 = a2;
      unint64_t v11 = &v21;
      if (a2) {
        return;
      }
      goto LABEL_31;
    }
    unint64_t v11 = (uint64_t **)(a2 + 1);
    BOOL v10 = (uint64_t *)a2[1];
    if (v10)
    {
      unsigned int v12 = (uint64_t *)a2[1];
      do
      {
        unsigned int v13 = (uint64_t **)v12;
        unsigned int v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      long long v16 = (uint64_t **)a2;
      do
      {
        unsigned int v13 = (uint64_t **)v16[2];
        BOOL v15 = *v13 == (uint64_t *)v16;
        long long v16 = v13;
      }
      while (!v15);
    }
    if (v13 != v7)
    {
      if (!morphun::dialog::SemanticFeature::operator<())
      {
LABEL_29:
        unint64_t v11 = (uint64_t **)std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>((uint64_t)a1, &v22);
        goto LABEL_30;
      }
      BOOL v10 = *v11;
    }
    if (v10)
    {
      int v22 = v13;
      unint64_t v11 = v13;
    }
    else
    {
      int v22 = a2;
    }
LABEL_30:
    if (*v11) {
      return;
    }
    goto LABEL_31;
  }
  if (*a1 != a2)
  {
    unint64_t v8 = (uint64_t *)*a2;
    if (*a2)
    {
      do
      {
        uint64_t v9 = v8;
        unint64_t v8 = (uint64_t *)v8[1];
      }
      while (v8);
    }
    else
    {
      uint64_t v14 = a2;
      do
      {
        uint64_t v9 = (uint64_t *)v14[2];
        BOOL v15 = *v9 == (void)v14;
        uint64_t v14 = v9;
      }
      while (v15);
    }
    if (morphun::dialog::SemanticFeature::operator<()) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
  uint64_t v9 = a2;
LABEL_16:
  if (*a2)
  {
    int v22 = v9;
    unint64_t v11 = (uint64_t **)(v9 + 1);
    goto LABEL_30;
  }
  int v22 = a2;
  unint64_t v11 = (uint64_t **)a2;
LABEL_31:
  unsigned int v17 = (uint64_t *)operator new(0x80uLL);
  v19[0] = v17;
  v19[1] = v7;
  char v20 = 0;
  morphun::dialog::SemanticFeature::SemanticFeature();
  unsigned int v18 = (std::basic_string<char16_t> *)(v17 + 13);
  if (*(char *)(a4 + 95) < 0)
  {
    std::basic_string<char16_t>::__init_copy_ctor_external(v18, *(const std::basic_string<char16_t>::value_type **)(a4 + 72), *(void *)(a4 + 80));
  }
  else
  {
    *(_OWORD *)&v18->__r_.__value_.__l.__data_ = *(_OWORD *)(a4 + 72);
    v17[15] = *(void *)(a4 + 88);
  }
  char v20 = 1;
  std::__tree<std::string>::__insert_node_at(a1, (uint64_t)v22, v11, v17);
  v19[0] = 0;
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)v19);
}

void sub_1C5E17D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  morphun::dialog::SemanticFeature::~SemanticFeature(v10);
  std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100]((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void std::unique_ptr<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,void *>>>>::reset[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void ***)a1;
  *(void *)a1 = 0;
  if (v1)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<morphun::dialog::SemanticFeature const,std::basic_string<char16_t>>,0>(v1 + 4);
    }
    operator delete(v1);
  }
}

void *std::__tree<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::__map_value_compare<morphun::dialog::SemanticFeature,std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>,std::less<morphun::dialog::SemanticFeature>,true>,std::allocator<std::__value_type<morphun::dialog::SemanticFeature,std::basic_string<char16_t>>>>::__find_equal<morphun::dialog::SemanticFeature>(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (v3)
  {
    do
    {
      while (1)
      {
        int v5 = v3;
        if (!morphun::dialog::SemanticFeature::operator<()) {
          break;
        }
        uint64_t v3 = (void *)*v5;
        uint64_t v4 = v5;
        if (!*v5) {
          goto LABEL_9;
        }
      }
      if (!morphun::dialog::SemanticFeature::operator<()) {
        break;
      }
      uint64_t v4 = v5 + 1;
      uint64_t v3 = (void *)v5[1];
    }
    while (v3);
  }
  else
  {
    int v5 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v5;
  return v4;
}

void siri::dialogengine::ClearSemanticModelCache(siri::dialogengine *this)
{
  uint64_t SemanticModelCache = (siri::dialogengine::SemanticModelCache *)siri::dialogengine::GetSemanticModelCache(this);
  siri::dialogengine::SemanticModelCache::clear(SemanticModelCache);
}

uint64_t non-virtual thunk to'siri::dialogengine::PatternSetting::Validate(siri::dialogengine::PatternSetting *this, siri::dialogengine::Context *a2)
{
  return siri::dialogengine::PatternSetting::Validate((siri::dialogengine::PatternSetting *)((char *)this - 304), a2);
}

uint64_t siri::dialogengine::PatternSetting::Validate(siri::dialogengine::PatternSetting *this, siri::dialogengine::Context *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t v4 = siri::dialogengine::Parameter::Validate(this, a2);
  int v5 = (_OWORD *)((char *)this + 208);
  if (*((char *)this + 231) < 0)
  {
    std::string::__init_copy_ctor_external(&v80, *((const std::string::value_type **)this + 26), *((void *)this + 27));
  }
  else
  {
    *(_OWORD *)&v80.__r_.__value_.__l.__data_ = *v5;
    v80.__r_.__value_.__r.__words[2] = *((void *)this + 28);
  }
  std::string::size_type size = HIBYTE(v80.__r_.__value_.__r.__words[2]);
  if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v80.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    siri::dialogengine::ResolveType(0, (uint64_t)a2, (uint64_t)&v80, 1, (uint64_t)&v79);
    size_t v7 = strlen(siri::dialogengine::TYPE_UNKNOWN);
    size_t v8 = v7;
    unsigned int v9 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
    if ((*((unsigned char *)&v79.__r_.__value_.__s + 23) & 0x80) != 0)
    {
      if (v7 != v79.__r_.__value_.__l.__size_) {
        goto LABEL_16;
      }
      if (v7 == -1) {
        std::string::__throw_out_of_range[abi:ne180100]();
      }
      BOOL v10 = (std::string *)v79.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (v7 != HIBYTE(v79.__r_.__value_.__r.__words[2])) {
        goto LABEL_16;
      }
      BOOL v10 = &v79;
    }
    if (!memcmp(v10, siri::dialogengine::TYPE_UNKNOWN, v8))
    {
      if (*((char *)this + 31) < 0) {
        std::string::__init_copy_ctor_external(&v75, *((const std::string::value_type **)this + 1), *((void *)this + 2));
      }
      else {
        std::string v75 = *(std::string *)((char *)this + 8);
      }
      long long v39 = std::string::insert(&v75, 0, "Pattern setting '");
      long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v40;
      v39->__r_.__value_.__l.__size_ = 0;
      v39->__r_.__value_.__r.__words[2] = 0;
      v39->__r_.__value_.__r.__words[0] = 0;
      uint64_t v41 = std::string::append(&v76, "' has a default value of unknown type: ");
      long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v42;
      v41->__r_.__value_.__l.__size_ = 0;
      v41->__r_.__value_.__r.__words[2] = 0;
      v41->__r_.__value_.__r.__words[0] = 0;
      if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::value_type v43 = &v80;
      }
      else {
        std::string::value_type v43 = (std::string *)v80.__r_.__value_.__r.__words[0];
      }
      if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v44 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v44 = v80.__r_.__value_.__l.__size_;
      }
      std::string::size_type v45 = std::string::append(&v77, (const std::string::value_type *)v43, v44);
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      siri::dialogengine::Context::AddSchemaError((uint64_t *)a2, (long long *)&v78);
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v78.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_92;
      }
      int v38 = (void *)v75.__r_.__value_.__r.__words[0];
      goto LABEL_91;
    }
LABEL_16:
    if (*((char *)this + 55) < 0)
    {
      std::string::__init_copy_ctor_external(&v78, *((const std::string::value_type **)this + 4), *((void *)this + 5));
      unsigned int v9 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
    }
    else
    {
      std::string v78 = *(std::string *)((char *)this + 32);
    }
    if ((v9 & 0x80u) == 0) {
      std::string::size_type v11 = v9;
    }
    else {
      std::string::size_type v11 = v79.__r_.__value_.__l.__size_;
    }
    std::string::size_type v12 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
    int v13 = SHIBYTE(v78.__r_.__value_.__r.__words[2]);
    if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v12 = v78.__r_.__value_.__l.__size_;
    }
    if (v11 == v12)
    {
      if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v14 = &v78;
      }
      else {
        uint64_t v14 = (std::string *)v78.__r_.__value_.__r.__words[0];
      }
      if ((v9 & 0x80) != 0)
      {
        BOOL v20 = memcmp(v79.__r_.__value_.__l.__data_, v14, v79.__r_.__value_.__l.__size_) != 0;
        if ((v13 & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
      else if (v9)
      {
        uint64_t v15 = v9 - 1;
        long long v16 = &v79;
        do
        {
          int v18 = v16->__r_.__value_.__s.__data_[0];
          long long v16 = (std::string *)((char *)v16 + 1);
          int v17 = v18;
          int v19 = v14->__r_.__value_.__s.__data_[0];
          uint64_t v14 = (std::string *)((char *)v14 + 1);
          BOOL v20 = v17 != v19;
        }
        while (v17 == v19 && v15-- != 0);
        if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_37:
          if (!v20)
          {
LABEL_93:
            if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v79.__r_.__value_.__l.__data_);
            }
            goto LABEL_95;
          }
          goto LABEL_41;
        }
      }
      else
      {
        BOOL v20 = 0;
        if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_37;
        }
      }
    }
    else
    {
      BOOL v20 = 1;
      if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_37;
      }
    }
    operator delete(v78.__r_.__value_.__l.__data_);
    if (!v20) {
      goto LABEL_93;
    }
LABEL_41:
    if (*((char *)this + 31) < 0) {
      std::string::__init_copy_ctor_external(&v72, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else {
      std::string v72 = *(std::string *)((char *)this + 8);
    }
    int v22 = std::string::insert(&v72, 0, "Pattern setting '");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v73.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    int v24 = std::string::append(&v73, "' has a default value of the wrong type: '");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v74.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v26 = &v80;
    }
    else {
      std::string::size_type v26 = (std::string *)v80.__r_.__value_.__r.__words[0];
    }
    if ((v80.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v27 = HIBYTE(v80.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v27 = v80.__r_.__value_.__l.__size_;
    }
    std::string::size_type v28 = std::string::append(&v74, (const std::string::value_type *)v26, v27);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v75.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    unsigned int v30 = std::string::append(&v75, "' (");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v76.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v32 = &v79;
    }
    else {
      BOOL v32 = (std::string *)v79.__r_.__value_.__r.__words[0];
    }
    if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v33 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v33 = v79.__r_.__value_.__l.__size_;
    }
    std::string::size_type v34 = std::string::append(&v76, (const std::string::value_type *)v32, v33);
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    v77.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    uint64_t v36 = std::string::append(&v77, ")");
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Context::AddSchemaError((uint64_t *)a2, (long long *)&v78);
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v77.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v75.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v74.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v73.__r_.__value_.__l.__data_);
    }
    if ((SHIBYTE(v72.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_92;
    }
    int v38 = (void *)v72.__r_.__value_.__r.__words[0];
LABEL_91:
    operator delete(v38);
LABEL_92:
    uint64_t v4 = 0;
    goto LABEL_93;
  }
LABEL_95:
  if (*((char *)this + 359) < 0)
  {
    if (!*((void *)this + 43)) {
      goto LABEL_153;
    }
  }
  else if (!*((unsigned char *)this + 359))
  {
    goto LABEL_153;
  }
  long long v47 = (_OWORD *)((char *)this + 8);
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v79, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    LODWORD(v++*(void *)(this + 48) = *((unsigned __int8 *)this + 359);
  }
  else
  {
    LODWORD(v++*(void *)(this + 48) = *((unsigned __int8 *)this + 359);
    *(_OWORD *)&v79.__r_.__value_.__l.__data_ = *v47;
    v79.__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
  uint64_t v49 = v48;
  if ((v48 & 0x80u) == 0) {
    uint64_t v48 = v48;
  }
  else {
    uint64_t v48 = *((void *)this + 43);
  }
  std::string::size_type v50 = HIBYTE(v79.__r_.__value_.__r.__words[2]);
  int v51 = SHIBYTE(v79.__r_.__value_.__r.__words[2]);
  if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v50 = v79.__r_.__value_.__l.__size_;
  }
  if (v48 != v50)
  {
    BOOL v61 = 0;
    if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_121;
  }
  char v52 = (const void **)((char *)this + 336);
  if ((v79.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v53 = &v79;
  }
  else {
    std::string v53 = (std::string *)v79.__r_.__value_.__r.__words[0];
  }
  if ((v49 & 0x80) != 0)
  {
    BOOL v61 = memcmp(*v52, v53, *((void *)this + 43)) == 0;
    goto LABEL_124;
  }
  if (v49)
  {
    uint64_t v54 = v49 - 1;
    do
    {
      int v56 = *(unsigned __int8 *)v52;
      char v52 = (const void **)((char *)v52 + 1);
      int v55 = v56;
      int v58 = v53->__r_.__value_.__s.__data_[0];
      std::string v53 = (std::string *)((char *)v53 + 1);
      int v57 = v58;
      BOOL v60 = v54-- != 0;
      BOOL v61 = v55 == v57;
    }
    while (v55 == v57 && v60);
LABEL_124:
    if ((v51 & 0x80000000) == 0) {
      goto LABEL_125;
    }
    goto LABEL_121;
  }
  BOOL v61 = 1;
  if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_125:
    if (!v61) {
      goto LABEL_136;
    }
    goto LABEL_126;
  }
LABEL_121:
  operator delete(v79.__r_.__value_.__l.__data_);
  if (!v61) {
    goto LABEL_136;
  }
LABEL_126:
  if (*((char *)this + 31) < 0)
  {
    std::string::__init_copy_ctor_external(&v77, *((const std::string::value_type **)this + 1), *((void *)this + 2));
  }
  else
  {
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = *v47;
    v77.__r_.__value_.__r.__words[2] = *((void *)this + 3);
  }
  uint64_t v62 = std::string::insert(&v77, 0, "Pattern setting '");
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  v78.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v64 = std::string::append(&v78, "' names itself as its 'defaultValueFromSetting' value");
  long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  v79.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  siri::dialogengine::Context::AddSchemaError((uint64_t *)a2, (long long *)&v79);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__r_.__value_.__l.__data_);
  }
  uint64_t v4 = 0;
LABEL_136:
  if (*((char *)this + 231) < 0)
  {
    std::string::__init_copy_ctor_external(&v79, *((const std::string::value_type **)this + 26), *((void *)this + 27));
  }
  else
  {
    *(_OWORD *)&v79.__r_.__value_.__l.__data_ = *v5;
    v79.__r_.__value_.__r.__words[2] = *((void *)this + 28);
  }
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type v66 = v79.__r_.__value_.__l.__size_;
    operator delete(v79.__r_.__value_.__l.__data_);
    if (!v66) {
      goto LABEL_153;
    }
LABEL_143:
    if (*((char *)this + 31) < 0)
    {
      std::string::__init_copy_ctor_external(&v77, *((const std::string::value_type **)this + 1), *((void *)this + 2));
    }
    else
    {
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = *v47;
      v77.__r_.__value_.__r.__words[2] = *((void *)this + 3);
    }
    std::string v67 = std::string::insert(&v77, 0, "Pattern setting '");
    long long v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v68;
    v67->__r_.__value_.__l.__size_ = 0;
    v67->__r_.__value_.__r.__words[2] = 0;
    v67->__r_.__value_.__r.__words[0] = 0;
    std::string v69 = std::string::append(&v78, "' has both 'defaultValue' and 'defaultValueFromSetting' set");
    long long v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
    v79.__r_.__value_.__r.__words[2] = v69->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v70;
    v69->__r_.__value_.__l.__size_ = 0;
    v69->__r_.__value_.__r.__words[2] = 0;
    v69->__r_.__value_.__r.__words[0] = 0;
    siri::dialogengine::Context::AddSchemaError((uint64_t *)a2, (long long *)&v79);
    if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v79.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v78.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v77.__r_.__value_.__l.__data_);
    }
    uint64_t v4 = 0;
    goto LABEL_153;
  }
  if (*((unsigned char *)&v79.__r_.__value_.__s + 23)) {
    goto LABEL_143;
  }
LABEL_153:
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v80.__r_.__value_.__l.__data_);
  }
  return v4;
}

void sub_1C5E18658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (*(char *)(v49 - 105) < 0) {
    operator delete(*(void **)(v49 - 128));
  }
  if (*(char *)(v49 - 73) < 0) {
    operator delete(*(void **)(v49 - 96));
  }
  _Unwind_Resume(exception_object);
}

void non-virtual thunk to'siri::dialogengine::PatternSetting::~PatternSetting(siri::dialogengine::PatternSetting *this)
{
  uint64_t v2 = (void **)((char *)this - 304);
  *((void *)this - 38) = &unk_1F211F818;
  uint64_t v3 = (void **)((char *)this - 64);
  *((void *)this - 8) = &unk_1F211F848;
  *(void *)this = &unk_1F211F868;
  if (*((char *)this + 55) < 0) {
    operator delete(*((void **)this + 4));
  }
  *(void *)this = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 2));
  siri::dialogengine::LineNumberBase::~LineNumberBase(v3);
  siri::dialogengine::ObjectProperty::~ObjectProperty(v2);
  JUMPOUT(0x1C8796D70);
}

{
  void **v2;
  void **v3;
  uint64_t vars8;

  uint64_t v2 = (void **)((char *)this - 304);
  *((void *)this - 38) = &unk_1F211F818;
  uint64_t v3 = (void **)((char *)this - 64);
  *((void *)this - 8) = &unk_1F211F848;
  *(void *)this = &unk_1F211F868;
  if (*((char *)this + 55) < 0) {
    operator delete(*((void **)this + 4));
  }
  *(void *)this = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 2));
  siri::dialogengine::LineNumberBase::~LineNumberBase(v3);
  siri::dialogengine::ObjectProperty::~ObjectProperty(v2);
}

{
  void **v2;
  uint64_t vars8;

  uint64_t v2 = (void **)((char *)this - 240);
  *((void *)this - 3std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &unk_1F211F818;
  *(void *)this = &unk_1F211F848;
  *((void *)this + 8) = &unk_1F211F868;
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  *((void *)this + 8) = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 10));
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)this);
  siri::dialogengine::ObjectProperty::~ObjectProperty(v2);
  JUMPOUT(0x1C8796D70);
}

{
  void **v2;
  uint64_t vars8;

  uint64_t v2 = (void **)((char *)this - 240);
  *((void *)this - 3std::unique_ptr<YAML::Scanner>::reset[abi:ne180100]((YAML::Scanner **)this, 0) = &unk_1F211F818;
  *(void *)this = &unk_1F211F848;
  *((void *)this + 8) = &unk_1F211F868;
  if (*((char *)this + 119) < 0) {
    operator delete(*((void **)this + 12));
  }
  *((void *)this + 8) = &unk_1F21271E8;
  std::__tree<std::__value_type<std::string,std::string>,std::__map_value_compare<std::string,std::__value_type<std::string,std::string>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::string>>>::destroy(*((void **)this + 10));
  siri::dialogengine::LineNumberBase::~LineNumberBase((void **)this);
  siri::dialogengine::ObjectProperty::~ObjectProperty(v2);
}