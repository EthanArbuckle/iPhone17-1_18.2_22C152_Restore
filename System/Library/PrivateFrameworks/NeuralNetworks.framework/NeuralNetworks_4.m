void sub_2576586F4(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  long long v54;
  long long v55;
  long long v56;
  uint64_t v57;
  long long v58;
  long long v59;
  long long v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  __int16 v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t vars0;
  uint64_t vars8;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_11_54((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((void *)&v55 + 1))
  {
    OUTLINED_FUNCTION_0_75(v8, v9, v10, v11, v12, v13, v14, v15, v51, v54, v55, v56, v57, v58, v59, v60, v61);
    OUTLINED_FUNCTION_13_43();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
    if ((OUTLINED_FUNCTION_2_71() & 1) != 0 && *((void *)&v60 + 1) >= 3uLL)
    {
      type metadata accessor for SharedMetalDevice();
      v16 = swift_unknownObjectRetain();
      sub_2575596FC(v16);
      if (!v4)
      {
        if (*(void *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_42_19();
            if (!v34)
            {
              __break(1u);
              return;
            }
          }
          while (v33 != 1);
          sub_2574F9354(*((uint64_t *)&v60 + 1));
          sub_257486674((uint64_t)&v58);
          if (v5 <= 0)
          {
            swift_release();
            goto LABEL_8;
          }
        }
        else
        {
          sub_2574F9354(*((uint64_t *)&v60 + 1));
          sub_257486674((uint64_t)&v58);
        }
        *(void *)&v58 = v6;
        LOBYTE(v54) = v7;
        type metadata accessor for MPSGraphTensorStorage();
        OUTLINED_FUNCTION_10_53();
        swift_retain();
        v35 = sub_2576A7810();
        v43 = OUTLINED_FUNCTION_25_34(v35, v36, v37, v38, v39, v40, v41, v42, v51, v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, v58);
        sub_2575C6A8C((uint64_t)v43, v44, v45, v46, v47, v48, v49, v50, v53, v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, v58, *((uint64_t *)&v58 + 1), v59,
          *((uint64_t *)&v59 + 1),
          v60,
          *((uint64_t *)&v60 + 1),
          v61,
          v62);
        goto LABEL_9;
      }
      sub_2574F9354(*((uint64_t *)&v60 + 1));

      sub_257486674((uint64_t)&v58);
    }
    else
    {
      sub_257486674((uint64_t)&v58);
    }
  }
  else
  {
    OUTLINED_FUNCTION_13_43();
    sub_25747B4E4((uint64_t)&v54);
  }
LABEL_8:
  type metadata accessor for NativeTensorStorage();
  OUTLINED_FUNCTION_40_21();
  swift_retain();
  v17 = sub_2576A7810();
  v25 = OUTLINED_FUNCTION_25_34(v17, v18, v19, v20, v21, v22, v23, v24, v51, v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, v58);
  sub_25754F85C((uint64_t)v25, v26, v27, v28, v29, v30, v31, v32, v52, v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, v58, *((uint64_t *)&v58 + 1), v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    vars0,
    vars8);
LABEL_9:
  swift_release_n();
  OUTLINED_FUNCTION_12_47();
}

#error "257658934: call analysis failed (funcsize=101)"

void sub_257658AAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = OUTLINED_FUNCTION_11_54((uint64_t)a1, a2, a3, a4);
  if (!*((void *)&v26 + 1))
  {
    sub_25747B4E4((uint64_t)&v25);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_75(v7, v8, v9, v10, v11, v12, v13, v14, v24, v25, v26, v27, v28, v29[0], v29[1], v30, v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
  if ((OUTLINED_FUNCTION_2_71() & 1) == 0 || *((void *)&v30 + 1) < 3uLL)
  {
    sub_257486674((uint64_t)v29);
LABEL_8:
    type metadata accessor for NativeTensorStorage();
    OUTLINED_FUNCTION_19_39();
    sub_2576A7810();
    float v16 = OUTLINED_FUNCTION_34_25();
    sub_25754FAD8(v16);
    return;
  }
  type metadata accessor for SharedMetalDevice();
  uint64_t v15 = swift_unknownObjectRetain();
  sub_2575596FC(v15);
  if (v4)
  {
    sub_2574F9354(*((uint64_t *)&v30 + 1));

    sub_257486674((uint64_t)v29);
    goto LABEL_8;
  }
  if (*(void *)(v6 + 16))
  {
    do
    {
      OUTLINED_FUNCTION_31_27();
      if (!v18)
      {
        __break(1u);
        return;
      }
    }
    while (v17 != 1);
    sub_2574F9354(*((uint64_t *)&v30 + 1));
    sub_257486674((uint64_t)v29);
    if (v5 <= 0)
    {
      swift_release();
      goto LABEL_8;
    }
  }
  else
  {
    sub_2574F9354(*((uint64_t *)&v30 + 1));
    sub_257486674((uint64_t)v29);
  }
  OUTLINED_FUNCTION_39_26();
  OUTLINED_FUNCTION_10_53();
  sub_2576A7810();
  float v19 = OUTLINED_FUNCTION_34_25();
  sub_2575C6C84(v20, v21, v22, v23, v19);
}

void sub_257658C5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = OUTLINED_FUNCTION_11_54((uint64_t)a1, a2, a3, a4);
  if (!*((void *)&v46 + 1))
  {
    sub_25747B4E4((uint64_t)&v45);
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_0_75(v7, v8, v9, v10, v11, v12, v13, v14, v44, v45, v46, v47, v48, v49[0], v49[1], v50, v51);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
  if ((OUTLINED_FUNCTION_2_71() & 1) == 0 || *((void *)&v50 + 1) < 3uLL)
  {
    sub_257486674((uint64_t)v49);
LABEL_8:
    type metadata accessor for NativeTensorStorage();
    OUTLINED_FUNCTION_18_40();
    uint64_t v16 = sub_2576A7810();
    uint64_t v24 = OUTLINED_FUNCTION_9_61(v16, v17, v18, v19, v20, v21, v22, v23, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, v49[0]);
    sub_25754FBFC((uint64_t)v24, v25, v26, v27, v28);
    return;
  }
  type metadata accessor for SharedMetalDevice();
  uint64_t v15 = swift_unknownObjectRetain();
  sub_2575596FC(v15);
  if (v4)
  {
    sub_2574F9354(*((uint64_t *)&v50 + 1));

    sub_257486674((uint64_t)v49);
    goto LABEL_8;
  }
  if (*(void *)(v6 + 16))
  {
    do
    {
      OUTLINED_FUNCTION_41_12();
      if (!v30)
      {
        __break(1u);
        return;
      }
    }
    while (v29 != 1);
    sub_2574F9354(*((uint64_t *)&v50 + 1));
    sub_257486674((uint64_t)v49);
    if (v5 <= 0)
    {
      swift_release();
      goto LABEL_8;
    }
  }
  else
  {
    sub_2574F9354(*((uint64_t *)&v50 + 1));
    sub_257486674((uint64_t)v49);
  }
  OUTLINED_FUNCTION_37_21();
  OUTLINED_FUNCTION_10_53();
  uint64_t v31 = sub_2576A7810();
  v39 = OUTLINED_FUNCTION_9_61(v31, v32, v33, v34, v35, v36, v37, v38, v44, v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((uint64_t *)&v47 + 1), v48, v49[0]);
  sub_2575C6D74(v39, v40, v41, v42, v43);
}

void sub_257658E0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = OUTLINED_FUNCTION_11_54((uint64_t)a1, a2, a3, a4);
  if (*((void *)&v50 + 1))
  {
    OUTLINED_FUNCTION_0_75(v7, v8, v9, v10, v11, v12, v13, v14, v47, v49, v50, v51, v52, v53, v54, v55, v56);
    OUTLINED_FUNCTION_32_25();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
    if ((OUTLINED_FUNCTION_2_71() & 1) != 0 && *((void *)&v55 + 1) >= 3uLL)
    {
      type metadata accessor for SharedMetalDevice();
      uint64_t v15 = swift_unknownObjectRetain();
      sub_2575596FC(v15);
      if (!v4)
      {
        if (*(void *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_41_12();
            if (!v33)
            {
              __break(1u);
              return;
            }
          }
          while (v32 != 1);
          sub_2574F9354(*((uint64_t *)&v55 + 1));
          sub_257486674((uint64_t)&v53);
          if (v5 <= 0)
          {
            swift_release();
            goto LABEL_8;
          }
        }
        else
        {
          sub_2574F9354(*((uint64_t *)&v55 + 1));
          sub_257486674((uint64_t)&v53);
        }
        OUTLINED_FUNCTION_37_21();
        OUTLINED_FUNCTION_10_53();
        swift_unknownObjectRetain();
        uint64_t v34 = sub_2576A7810();
        uint64_t v42 = OUTLINED_FUNCTION_9_61(v34, v35, v36, v37, v38, v39, v40, v41, v47, v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, v53);
        sub_2575C6E40(v42, v43, v44, v45, v46);
        goto LABEL_9;
      }
      sub_2574F9354(*((uint64_t *)&v55 + 1));

      sub_257486674((uint64_t)&v53);
    }
    else
    {
      sub_257486674((uint64_t)&v53);
    }
  }
  else
  {
    OUTLINED_FUNCTION_32_25();
    sub_25747B4E4((uint64_t)&v49);
  }
LABEL_8:
  type metadata accessor for NativeTensorStorage();
  OUTLINED_FUNCTION_18_40();
  swift_unknownObjectRetain();
  uint64_t v16 = sub_2576A7810();
  uint64_t v24 = OUTLINED_FUNCTION_9_61(v16, v17, v18, v19, v20, v21, v22, v23, v47, v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, v53);
  sub_25754FCFC((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v48, v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, v53, *((uint64_t *)&v53 + 1), v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    vars0,
    vars8);
LABEL_9:
  OUTLINED_FUNCTION_33_24();
  OUTLINED_FUNCTION_12_47();
}

#error "257659020: call analysis failed (funcsize=129)"

#error "257659238: call analysis failed (funcsize=101)"

uint64_t sub_2576593B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *(NSObject **)(v3 + 24);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = v5;
  v8[5] = v6;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_25765A678;
  *(void *)(v9 + 24) = v8;
  v12[4] = sub_25765A694;
  v12[5] = v9;
  v12[0] = MEMORY[0x263EF8330];
  v12[1] = 1107296256;
  v12[2] = sub_2574EBD80;
  v12[3] = &block_descriptor_3;
  uint64_t v10 = _Block_copy(v12);
  sub_2576A7810();
  swift_retain();
  swift_retain();
  sub_2576A7810();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v7) {
    __break(1u);
  }
  return result;
}

uint64_t sub_257659528(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 < 3) {
    return 0;
  }
  type metadata accessor for SharedMetalDevice();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v2 = sub_2575596FC(v3);
  sub_2574F9354(v1);
  return v2;
}

uint64_t sub_257659598(uint64_t a1, long long *a2)
{
  long long v5 = *a2;
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    unint64_t v4 = sub_2576A7810();
    uint64_t v2 = (uint64_t)sub_257694A5C(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
    sub_2576A7810();
  }
  long long v6 = v5;
  sub_2576593B0(v2, (uint64_t *)&v6);
  return swift_release();
}

uint64_t sub_257659628()
{
  type metadata accessor for ExecutionContext();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_2576596E4();
  qword_26A030AB0 = v0;
  return result;
}

uint64_t sub_257659664()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_25765968C()
{
  sub_257659664();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExecutionContext()
{
  return self;
}

uint64_t sub_2576596E4()
{
  uint64_t v1 = sub_2576A8340();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_8_0();
  uint64_t v2 = sub_2576A8360();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_2576A76D0();
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_8_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B68);
  *(void *)(v0 + 16) = sub_2576A77E0();
  sub_2574CB174();
  sub_2576A76B0();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F8F138], v2);
  sub_2574F92F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002438);
  sub_2575458A0();
  sub_2576A8660();
  *(void *)(v0 + 24) = sub_2576A8390();
  return v0;
}

uint64_t sub_2576598FC(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_25746B3D0(a1, (uint64_t)v22);
  uint64_t v4 = v23;
  uint64_t v5 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v8 = v7;
  uint64_t v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v10 = sub_2574BAFF0(v6, v8, *(void *)(v2 + 16));
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_25746B3D0((uint64_t)v22, (uint64_t)v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
    if (swift_dynamicCast())
    {
      type metadata accessor for MPSGraphBackend();
      swift_allocObject();
      sub_2575319FC();
      uint64_t v11 = OUTLINED_FUNCTION_7_58();
      v12(v11);
      OUTLINED_FUNCTION_17_42();
      uint64_t v13 = swift_retain();
      uint64_t v14 = &off_270666C18;
    }
    else if (swift_dynamicCast())
    {
      type metadata accessor for MILEspressoBackend();
      swift_allocObject();
      sub_25753E27C();
      uint64_t v15 = OUTLINED_FUNCTION_7_58();
      v16(v15);
      OUTLINED_FUNCTION_17_42();
      uint64_t v13 = swift_retain();
      uint64_t v14 = &off_2706673B8;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_2574866D0(a1, (uint64_t)v20);
        v20[84] = 2;
        sub_25746BE6C();
      }
      type metadata accessor for BNNSBackend();
      swift_allocObject();
      uint64_t v17 = OUTLINED_FUNCTION_7_58();
      v18(v17);
      OUTLINED_FUNCTION_17_42();
      uint64_t v13 = swift_retain();
      uint64_t v14 = &off_270662350;
    }
    sub_25765A6B4(v13, a1, v8, v9, (uint64_t)v14);
    swift_endAccess();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v10;
}

uint64_t sub_257659B5C(uint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  uint64_t v77 = a1;
  uint64_t v76 = sub_2576A75A0();
  uint64_t v7 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  v81 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2576A75D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  v80 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4) {
    unint64_t v12 = a4;
  }
  else {
    unint64_t v12 = MEMORY[0x263F8EE88];
  }
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v98) = (a4 == 0) | a3 & 1;
  unint64_t v99 = v12;
  sub_2576A7810();
  sub_2576A7810();
  if (sub_2575F21B0(a2, (char *)&v98))
  {
    sub_2575F0098();
    uint64_t v15 = v14;
    swift_release();
  }
  else
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    goto LABEL_70;
  }
  uint64_t v17 = v15 + 32;
  v78 = &v101;
  v79 = (void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v70 = (char *)&v82 + 8;
  uint64_t v71 = v15;
  v73 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  v74 = (void (**)(char *, uint64_t))(v7 + 8);
  *(void *)&long long v13 = 136315138;
  long long v69 = v13;
  uint64_t v68 = MEMORY[0x263F8EE58] + 8;
  uint64_t v75 = v9;
  do
  {
    sub_25747C54C(v17, (uint64_t)&v98);
    if (qword_26A0008F8 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v9, (uint64_t)qword_26A001FD0);
    (*v79)(v80, v18, v9);
    sub_2576A7590();
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = sub_2576A75C0();
    os_signpost_type_t v21 = sub_2576A83C0();
    os_signpost_id_t v22 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v20, v21, v22, "Aquire Backend", "", v19, 2u);
    sub_25747B47C((uint64_t)v78, (uint64_t)&v90);
    sub_25747C54C((uint64_t)&v98, (uint64_t)&v86);
    if (*((void *)&v91 + 1))
    {
      long long v94 = v90;
      long long v95 = v91;
      long long v96 = v92;
      int v97 = v93;
      goto LABEL_50;
    }
    uint64_t v23 = v88;
    uint64_t v24 = *(void *)(v88 + 16);
    if (v24 == 1)
    {
      uint64_t v28 = (void *)sub_2574B9260(v88);
      if (v30) {
        goto LABEL_69;
      }
      if (*(_DWORD *)(v23 + 36) != v29)
      {
        __break(1u);
LABEL_69:
        __break(1u);
        swift_unknownObjectRelease();
        unint64_t v86 = 0;
        unint64_t v87 = 0xE000000000000000;
        sub_2576A8730();
        swift_bridgeObjectRelease();
        unint64_t v86 = 0xD00000000000001CLL;
        unint64_t v87 = 0x80000002576D1350;
        swift_getErrorValue();
        sub_2576A9030();
        a2 = v64;
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A8B60();
        __break(1u);
        swift_release();
        __break(1u);
LABEL_70:
        unint64_t v98 = 0;
        unint64_t v99 = 0xE000000000000000;
        sub_2576A8730();
        swift_bridgeObjectRelease();
        unint64_t v98 = 0xD00000000000002DLL;
        unint64_t v99 = 0x80000002576D1370;
        uint64_t v65 = type metadata accessor for TensorRepresentation();
        MEMORY[0x25A2B83F0](a2, v65);
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        char v100 = 9;
        sub_25746BE6C();
      }
      if (v28 != (void *)(1 << *(unsigned char *)(v23 + 32)))
      {
        int v27 = sub_2574B9194((uint64_t)v28, v29, 0, v23) & 1;
        goto LABEL_23;
      }
    }
    else if (v24)
    {
      swift_bridgeObjectRetain_n();
      sub_257694744();
      uint64_t v26 = v25;
      swift_bridgeObjectRelease();
      *(void *)&long long v94 = v26;
      sub_2575FD24C((uint64_t *)&v94);
      swift_bridgeObjectRelease();
      if (*(void *)(v94 + 16))
      {
        int v27 = *(unsigned __int8 *)(v94 + 32);
        swift_release();
        goto LABEL_23;
      }
      swift_release();
    }
    int v27 = 2;
LABEL_23:
    int v31 = v89;
    static ComputeDevice.mpsGPU.getter((uint64_t)&v94);
    if (*((void *)&v95 + 1))
    {
      long long v83 = v95;
      long long v84 = v96;
      long long v82 = v94;
      int v85 = v97;
      BOOL v32 = *((void *)&v96 + 1) != 2 || v27 == 2;
      if ((v32 || (v27 & 1) == 0) && (v85 & ~v31) == 0) {
        goto LABEL_48;
      }
      sub_257486674((uint64_t)&v82);
    }
    else
    {
      sub_25747B4E4((uint64_t)&v94);
    }
    *((void *)&v84 + 1) = 1;
    *((void *)&v83 + 1) = &unk_270669328;
    *(void *)&long long v84 = &off_2706693E8;
    int v85 = 1;
    if ((v31 & 1) == 0)
    {
      sub_257486674((uint64_t)&v82);
      static ComputeDevice.classicEspressoGPU.getter((uint64_t)&v94);
      if (*((void *)&v95 + 1))
      {
        long long v83 = v95;
        long long v84 = v96;
        long long v82 = v94;
        int v85 = v97;
        BOOL v33 = *((void *)&v96 + 1) != 2 || v27 == 2;
        if ((v33 || (v27 & 1) == 0) && (v85 & ~v31) == 0) {
          goto LABEL_48;
        }
        sub_257486674((uint64_t)&v82);
      }
      else
      {
        sub_25747B4E4((uint64_t)&v94);
      }
      *((void *)&v84 + 1) = 1;
      *((void *)&v83 + 1) = &unk_270669308;
      *(void *)&long long v84 = &off_2706693A8;
      int v85 = 0x100000;
      if ((v31 & 0x100000) == 0)
      {
        sub_257486674((uint64_t)&v82);
        if (v27 == 2)
        {
          if (qword_26A0008F0 != -1) {
            swift_once();
          }
          uint64_t v34 = sub_2576A7650();
          __swift_project_value_buffer(v34, (uint64_t)qword_26A030A28);
          uint64_t v35 = sub_2576A7630();
          os_log_type_t v36 = sub_2576A8320();
          if (!os_log_type_enabled(v35, v36)) {
            goto LABEL_63;
          }
          uint64_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v37 = 0;
          _os_log_impl(&dword_257455000, v35, v36, "Failed to find compatible compute device for network, fallbacking back to CPU.", v37, 2u);
          uint64_t v38 = v37;
        }
        else
        {
          if (qword_26A0008F0 != -1) {
            swift_once();
          }
          uint64_t v47 = sub_2576A7650();
          __swift_project_value_buffer(v47, (uint64_t)qword_26A030A28);
          uint64_t v48 = sub_2576A7630();
          os_log_type_t v49 = sub_2576A8320();
          v72 = v48;
          if (!os_log_type_enabled(v48, v49))
          {

            goto LABEL_65;
          }
          long long v50 = (uint8_t *)swift_slowAlloc();
          uint64_t v51 = swift_slowAlloc();
          uint64_t v67 = v51;
          uint64_t v52 = v50;
          *(_DWORD *)long long v50 = v69;
          *(void *)&long long v94 = v51;
          if (v27) {
            uint64_t v53 = 0x656C676E6973;
          }
          else {
            uint64_t v53 = 1718378856;
          }
          if (v27) {
            unint64_t v54 = 0xE600000000000000;
          }
          else {
            unint64_t v54 = 0xE400000000000000;
          }
          v66[1] = v52 + 4;
          long long v55 = v52;
          *(void *)&long long v82 = sub_2574F829C(v53, v54, (uint64_t *)&v94);
          sub_2576A8510();
          swift_bridgeObjectRelease();
          uint64_t v35 = v72;
          uint64_t v56 = v67;
          swift_arrayDestroy();
          MEMORY[0x25A2BAC80](v56, -1, -1);
          uint64_t v38 = v55;
        }
        MEMORY[0x25A2BAC80](v38, -1, -1);
LABEL_63:

LABEL_65:
        if (qword_26A0008B0 != -1) {
          swift_once();
        }
        uint64_t v57 = qword_26A030A10;
        uint64_t v58 = unk_26A030A18;
        char v59 = __swift_project_boxed_opaque_existential_1(qword_26A0309F8, qword_26A030A10);
        MEMORY[0x270FA5388](v59);
        uint64_t v61 = (char *)v66 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v62 + 16))(v61);
        sub_2575B5594(1, (uint64_t)v61, v57, v58, (uint64_t)&v94);
        goto LABEL_49;
      }
    }
LABEL_48:
    long long v94 = v82;
    long long v95 = v83;
    long long v96 = v84;
    int v97 = v85;
LABEL_49:
    sub_25747B4E4((uint64_t)&v90);
LABEL_50:
    sub_25747F1AC((uint64_t)&v86);
    sub_2576598FC((uint64_t)&v94);
    uint64_t v40 = v39;
    sub_257486674((uint64_t)&v94);
    os_signpost_type_t v41 = sub_2576A83B0();
    uint64_t v42 = v81;
    os_signpost_id_t v43 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v20, v41, v43, "Aquire Backend", "", v19, 2u);

    MEMORY[0x25A2BAC80](v19, -1, -1);
    (*v74)(v42, v76);
    uint64_t v9 = v75;
    uint64_t v44 = (*v73)(v80, v75);
    uint64_t v45 = (void *)MEMORY[0x25A2BA130](v44);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(unint64_t *, uint64_t, uint64_t))(v40 + 16))(&v98, ObjectType, v40);
    sub_25747F1AC((uint64_t)&v98);
    swift_unknownObjectRelease();
    v17 += 240;
    --v16;
  }
  while (v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25765A630()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25765A678()
{
  return sub_257659B5C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_25765A684()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25765A694()
{
  return sub_2574EBD58(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_25765A6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *a4;
  *a4 = 0x8000000000000000;
  sub_25765A74C(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v12, a5);
  *a4 = v12;
  return swift_bridgeObjectRelease();
}

uint64_t sub_25765A74C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11 = (void *)*a5;
  unint64_t v12 = sub_25747588C(a2, a3);
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B60);
  if ((sub_2576A8AD0() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v16 = sub_25747588C(a2, a3);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_11:
    uint64_t result = sub_2576A9020();
    __break(1u);
    return result;
  }
  unint64_t v14 = v16;
LABEL_5:
  uint64_t v18 = (void *)*a5;
  if (v15)
  {
    uint64_t v19 = (uint64_t *)(v18[7] + 16 * v14);
    uint64_t result = swift_unknownObjectRelease();
    *uint64_t v19 = a1;
    v19[1] = a6;
  }
  else
  {
    sub_25765A88C(v14, a2, a3, a1, v18, a6);
    return sub_2576A7810();
  }
  return result;
}

unint64_t sub_25765A88C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a5[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a5[7] + 16 * result);
  *uint64_t v7 = a4;
  v7[1] = a6;
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_75(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, long long a10, long long a11, long long a12, int a13, long long a14, long long a15, long long a16, int a17)
{
  a14 = a10;
  a15 = a11;
  a16 = a12;
  a17 = a13;
  return sub_25746B3D0((uint64_t)&a14, (uint64_t)&a10);
}

char *OUTLINED_FUNCTION_1_87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_2_71()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_25747B47C(a3, (uint64_t)va);
}

char *OUTLINED_FUNCTION_6_60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_7_58()
{
  uint64_t v1 = *(void *)(v0 - 64);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 88), v1);
  return v1;
}

char *OUTLINED_FUNCTION_9_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_10_53()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_11_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  return sub_25747B47C(a3, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_48()
{
  return type metadata accessor for MPSGraphTensorStorage();
}

void OUTLINED_FUNCTION_16_44()
{
  sub_2574F9354(v1);
}

uint64_t OUTLINED_FUNCTION_17_42()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_20_37()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_21_40()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_24_38()
{
  return swift_unknownObjectRetain();
}

char *OUTLINED_FUNCTION_25_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

char *OUTLINED_FUNCTION_26_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

char *OUTLINED_FUNCTION_29_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_32_25()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_33_24()
{
  return swift_unknownObjectRelease_n();
}

float OUTLINED_FUNCTION_34_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_22()
{
  return sub_2574ADB28(v1, v0);
}

uint64_t OUTLINED_FUNCTION_36_23()
{
  return sub_25747F154(v1, v0);
}

uint64_t OUTLINED_FUNCTION_37_21()
{
  return type metadata accessor for MPSGraphTensorStorage();
}

uint64_t OUTLINED_FUNCTION_39_26()
{
  return type metadata accessor for MPSGraphTensorStorage();
}

uint64_t OUTLINED_FUNCTION_43_20()
{
  return sub_2576A7810();
}

#error "25765AD4C: call analysis failed (funcsize=20)"

void sub_25765AD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v24;
  a20 = v25;
  uint64_t v65 = v26;
  uint64_t v66 = v22;
  uint64_t v67 = v27;
  uint64_t v69 = v28;
  uint64_t v70 = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v64 = v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v39 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v45 = v44;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_36_3();
  uint64_t v68 = v31;
  sub_25747C54C(v31 + 88, (uint64_t)v72);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_initStackObject();
  sub_2575F6340((uint64_t)v72);
  uint64_t v48 = v47;
  a10 = v37;
  uint64_t v71 = v35;
  sub_25747ECB0(v33, v42);
  if (__swift_getEnumTagSinglePayload(v42, 1, v43) == 1)
  {
    sub_2576A7810();
    sub_2576A7810();
    sub_25747ED40(v42);
    uint64_t v49 = v67;
  }
  else
  {
    uint64_t v50 = a21;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v23, v42, v43);
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v49 = v67;
    uint64_t v51 = sub_25765B034(v37, v35, v23, v68, v69, v70, v67, v65, v50);
    if (v66)
    {
      uint64_t v53 = OUTLINED_FUNCTION_14_53();
      v54(v53);
      goto LABEL_9;
    }
    uint64_t v55 = v51;
    uint64_t v56 = v52;
    uint64_t v57 = OUTLINED_FUNCTION_14_53();
    v58(v57);
    swift_bridgeObjectRelease();
    a10 = v55;
    swift_bridgeObjectRelease();
    uint64_t v71 = v56;
  }
  MEMORY[0x270FA5388](a22);
  uint64_t v59 = v69;
  *(&v63 - 8) = v68;
  *(&v63 - 7) = v59;
  *(&v63 - 6) = v70;
  *(&v63 - 5) = v49;
  *(&v63 - 4) = (uint64_t)&a10;
  *(&v63 - 3) = v48;
  uint64_t v62 = &v71;
  sub_2575F0018();
  sub_2575F0098();
  if (*(void *)(v60 + 16) == 1)
  {
    sub_25747C54C(v60 + 32, v64);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_25747C394();
    swift_allocError();
    *uint64_t v61 = 0xD000000000000079;
    v61[1] = 0x80000002576C4880;
    swift_willThrow();
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_1();
}

#error "25765B1E4: call analysis failed (funcsize=140)"

uint64_t sub_25765B264(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return result;
  }
  if (*(void *)(v9 + 72) == result)
  {
    char v13 = (unsigned __int8 *)(v9 + 32);
    unint64_t v14 = (uint64_t *)(v9 + 48);
    char v15 = (uint64_t *)(v9 + 40);
LABEL_11:
    int v18 = *v13;
    uint64_t v19 = *v14;
    uint64_t v20 = *v15;
    sub_2576A7810();
    if (v18 == 1)
    {
      uint64_t v21 = *a7;
    }
    else
    {
      if (v18 != 2)
      {
LABEL_20:
        return swift_bridgeObjectRelease();
      }
      uint64_t v21 = *a9;
    }
    if (*(void *)(v21 + 16))
    {
      sub_2576A7810();
      sub_2576A7810();
      unint64_t v22 = sub_25747588C(v20, v19);
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void *)(v24 + 16);
        uint64_t v26 = swift_retain_n();
        id v27 = sub_2576140FC(v26, v25, 0, 0);
        uint64_t v29 = v28;
        swift_release();
        swift_retain();
        uint64_t v30 = sub_2576136DC();
        uint64_t v32 = v31;
        swift_release();
        type metadata accessor for TensorRepresentation();
        memset(v34, 0, sizeof(v34));
        int v35 = 0;
        swift_allocObject();
        uint64_t v33 = sub_257614BF4((uint64_t)v27, v29, v30, v32, (uint64_t)v34, 0x100000000);
        sub_2575EF938(a2, v33);
        swift_release();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    goto LABEL_20;
  }
  if (v10 != 1)
  {
    char v13 = (unsigned __int8 *)(v9 + 80);
    for (uint64_t i = 1; ; ++i)
    {
      uint64_t v17 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (*((void *)v13 + 5) == result)
      {
        char v15 = (uint64_t *)(v13 + 8);
        unint64_t v14 = (uint64_t *)(v13 + 16);
        goto LABEL_11;
      }
      v13 += 48;
      if (v17 == v10) {
        return result;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_25765B4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  a10 = MEMORY[0x263F8EE80];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2576A7810();
  uint64_t v37 = swift_retain();
  uint64_t v38 = (void *)MEMORY[0x25A2BA130](v37);
  v24(v34, v32, v30, v28, v26, v36, &a10);
  if (v20) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25765B588()
{
  OUTLINED_FUNCTION_9_1();
  char v23 = v1;
  uint64_t v26 = *MEMORY[0x263EF8340];
  sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_36_3();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_defaultManager);
  id v5 = objc_msgSend(v4, sel_currentDirectoryPath);

  sub_2576A79F0();
  sub_2576A7040();
  id v6 = objc_msgSend(v3, sel_defaultManager);
  uint64_t v7 = (void *)sub_2576A7080();
  id v24 = 0;
  unsigned int v8 = objc_msgSend(v6, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v7, 1, 0, &v24);

  if (v8)
  {
    id v9 = v24;
    id v10 = objc_msgSend(v3, sel_defaultManager);
    sub_2576A70B0();
    uint64_t v11 = (void *)sub_2576A79C0();
    swift_bridgeObjectRelease();
    unsigned __int8 v12 = objc_msgSend(v10, sel_changeCurrentDirectoryPath_, v11);

    if ((v12 & 1) == 0)
    {
      id v24 = 0;
      unint64_t v25 = 0xE000000000000000;
      sub_2576A8730();
      swift_bridgeObjectRelease();
      id v24 = (id)0xD000000000000013;
      unint64_t v25 = 0x80000002576C4960;
      sub_2576A70B0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      id v18 = v24;
      unint64_t v19 = v25;
      sub_25747C394();
      swift_allocError();
      void *v20 = v18;
      v20[1] = v19;
      swift_willThrow();
      OUTLINED_FUNCTION_31_1();
      v21();
      id v17 = objc_msgSend(v3, sel_defaultManager);
      goto LABEL_7;
    }
    v23(v0);
    OUTLINED_FUNCTION_31_1();
    v13();
    id v14 = objc_msgSend(v3, (SEL)&off_26542C338 + 3);
  }
  else
  {
    id v15 = v24;
    sub_2576A7030();

    swift_willThrow();
    OUTLINED_FUNCTION_31_1();
    v16();
    id v14 = objc_msgSend(v3, sel_defaultManager);
  }
  id v17 = v14;
LABEL_7:
  uint64_t v22 = (void *)sub_2576A79C0();
  objc_msgSend(v17, sel_changeCurrentDirectoryPath_, v22);
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_7_1();
}

void MLProgramWritingOptions.parameterStorageMode.getter(unsigned char *a1@<X8>)
{
}

BOOL static MLProgramWritingOptions.ParameterStorageMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

NeuralNetworks::MLProgramWritingOptions __swiftcall MLProgramWritingOptions.init(parameterStorageMode:)(NeuralNetworks::MLProgramWritingOptions::ParameterStorageMode parameterStorageMode)
{
  OUTLINED_FUNCTION_53_9(v1);
  return result;
}

void static MLProgramWritingOptions.exportingParametersAndStates.getter(unsigned char *a1@<X8>)
{
}

void static MLProgramWritingOptions.embeddingParametersAndStates.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t MLProgramWritingOptions.ParameterStorageMode.hash(into:)()
{
  return sub_2576A90A0();
}

uint64_t MLProgramWritingOptions.ParameterStorageMode.hashValue.getter()
{
  return sub_2576A9100();
}

uint64_t Layer<>.writeMLProgram(withInput:to:options:)(uint64_t a1, uint64_t a2, char *a3)
{
  char v5 = *a3;
  OUTLINED_FUNCTION_0_76();
  uint64_t result = Layer<>.compiled(forInput:options:)();
  if (!v3)
  {
    sub_25765BADC(a2, result, v7, v5, v8, v9, v10, v11);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_25765BADC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v25 = a3;
  uint64_t v13 = sub_2576A70E0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_25765C604())
  {
    uint64_t v17 = sub_2576A7090();
    MEMORY[0x270FA5388](v17);
    *((unsigned char *)&v24 - 64) = a4;
    *(&v24 - 7) = a5;
    *(&v24 - 6) = a6;
    uint64_t v18 = v27;
    *(&v24 - 5) = v26;
    *(&v24 - 4) = v18;
    uint64_t v19 = v25;
    *(&v24 - 3) = a2;
    *(&v24 - 2) = v19;
    *(&v24 - 1) = a1;
    sub_25765B588();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_2576A8730();
    sub_2576A7B00();
    sub_2576A70A0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v21 = v28;
    unint64_t v22 = v29;
    sub_25747C394();
    swift_allocError();
    *char v23 = v21;
    v23[1] = v22;
    return swift_willThrow();
  }
}

uint64_t sub_25765BD04(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v9 = sub_2576A70E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unsigned __int8 v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a4;
  uint64_t v14 = *v5;
  uint64_t v15 = v5[1];
  long long v22 = *((_OWORD *)v5 + 1);
  if (sub_25765C604())
  {
    uint64_t v16 = sub_2576A7090();
    MEMORY[0x270FA5388](v16);
    *(&v22 - 5) = *(_OWORD *)(a5 + 16);
    *((unsigned char *)&v22 - 64) = v13;
    *((void *)&v22 - 7) = v14;
    *((void *)&v22 - 6) = v15;
    *(long long *)((char *)&v22 - 40) = v22;
    uint64_t v17 = v24;
    *((void *)&v22 - 3) = v23;
    *((void *)&v22 - 2) = v17;
    *((void *)&v22 - 1) = a1;
    sub_25765B588();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0xE000000000000000;
    sub_2576A8730();
    sub_2576A7B00();
    sub_2576A70A0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v19 = v25;
    unint64_t v20 = v26;
    sub_25747C394();
    swift_allocError();
    void *v21 = v19;
    v21[1] = v20;
    return swift_willThrow();
  }
}

void Layer<>.writeMLProgram(withInput:to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_9_62();
  a29 = v31;
  a30 = v32;
  a20 = v33;
  char v35 = *v34;
  char v36 = OUTLINED_FUNCTION_0_76();
  a11 = 2;
  a12 = 64;
  a13 = 0xE100000000000000;
  a14 = v36 & 1;
  Layer<>.compiled(forInput:options:)();
  if (!v30)
  {
    a11 = v35;
    OUTLINED_FUNCTION_11_55();
    uint64_t v37 = type metadata accessor for Function();
    OUTLINED_FUNCTION_6_61(a20, v38, v39, &a11, v37);
    OUTLINED_FUNCTION_12_48();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  OUTLINED_FUNCTION_10_54();
}

uint64_t Layer<>.writeMLProgram(withInput:to:options:)(uint64_t *a1)
{
  uint64_t v16 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_0_76();
  uint64_t result = OUTLINED_FUNCTION_4_74(v2, v3, v4, v5, v6, v7, v8, v9);
  if (!v1)
  {
    OUTLINED_FUNCTION_8_61();
    OUTLINED_FUNCTION_11_55();
    uint64_t v11 = type metadata accessor for Function();
    OUTLINED_FUNCTION_6_61(v14, v12, v13, v15, v11);
    OUTLINED_FUNCTION_12_48();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[32];
  uint64_t v16;

  uint64_t v16 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_0_76();
  uint64_t result = OUTLINED_FUNCTION_4_74(v2, v3, v4, v5, v6, v7, v8, v9);
  if (!v1)
  {
    OUTLINED_FUNCTION_8_61();
    OUTLINED_FUNCTION_11_55();
    uint64_t v11 = type metadata accessor for Function();
    OUTLINED_FUNCTION_6_61(v14, v12, v13, v15, v11);
    OUTLINED_FUNCTION_12_48();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

#error "25765C184: call analysis failed (funcsize=47)"

#error "25765C278: call analysis failed (funcsize=55)"

#error "25765C41C: call analysis failed (funcsize=47)"

unint64_t sub_25765C4A0()
{
  unint64_t result = qword_26A005B70;
  if (!qword_26A005B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005B70);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLProgramWritingOptions()
{
  return &type metadata for MLProgramWritingOptions;
}

unsigned char *_s14NeuralNetworks23MLProgramWritingOptionsV20ParameterStorageModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25765C5CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MLProgramWritingOptions.ParameterStorageMode()
{
  return &type metadata for MLProgramWritingOptions.ParameterStorageMode;
}

uint64_t sub_25765C604()
{
  uint64_t v1 = sub_2576A70E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A7060();
  uint64_t v5 = sub_2576A7A40();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (v5 == 7104877 && v7 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    goto LABEL_13;
  }
  char v9 = sub_2576A8F60();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if (v9)
  {
LABEL_13:
    char v14 = 1;
    goto LABEL_14;
  }
  sub_2576A7060();
  uint64_t v10 = sub_2576A7A40();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (v10 == 7633012 && v12 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v14 = sub_2576A8F60();
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v14 & 1;
}

uint64_t sub_25765C7EC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a8;
  uint64_t v29 = a7;
  uint64_t v33 = a6;
  uint64_t v32 = a5;
  uint64_t v30 = a4;
  uint64_t v35 = a3;
  int v9 = a2;
  uint64_t v28 = sub_2576A7A20();
  uint64_t v27 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2576A7050();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v27 - v20;
  uint64_t v22 = sub_2576A70E0();
  if (v9 == 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v22);
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F06E50], v12);
    sub_2576A70C0();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v22);
    goto LABEL_5;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v22);
  if (v9 != 2)
  {
LABEL_5:
    sub_25765AD5C(v29, v31, (uint64_t)v21, v35, v30, v32, v33, (uint64_t)sub_257519D8C, (uint64_t)sub_257519DEC, (uint64_t)sub_25765CF80, v27, v28, v29, v30, v31, v32, v33, v34[0], v34[1],
      v34[2],
      v34[3],
      v34[4]);
    if (v8) {
      return sub_25747ED40((uint64_t)v21);
    }
    goto LABEL_6;
  }
  sub_25747C54C(v35 + 88, (uint64_t)v34);
LABEL_6:
  sub_2575736DC();
  sub_2576A7A10();
  uint64_t v23 = sub_2576A7A00();
  unint64_t v25 = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  if (v25 >> 60 != 15)
  {
    sub_2576A71B0();
    sub_257573B60(v23, v25);
  }
  sub_25747F1AC((uint64_t)v34);
  return sub_25747ED40((uint64_t)v21);
}

uint64_t sub_25765CBB0(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  uint64_t v36 = a4;
  uint64_t v41 = a3;
  int v8 = a2;
  uint64_t v9 = sub_2576A7A20();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2576A7050();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v22 = sub_2576A70E0();
  if (v8 == 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v22);
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F06E50], v12);
    sub_2576A70C0();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v22);
    goto LABEL_5;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v22);
  if (v8 != 2)
  {
LABEL_5:
    uint64_t v42 = v41;
    uint64_t v43 = v36;
    uint64_t v44 = v37;
    uint64_t v45 = v38;
    uint64_t v23 = type metadata accessor for Function();
    uint64_t v24 = v46[32];
    sub_25747B5AC(v39, v40, (uint64_t)v21, v23, v25, v26, v27, v28, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
      v44);
    if (v24) {
      return sub_25747ED40((uint64_t)v21);
    }
    goto LABEL_6;
  }
  sub_25747C54C(v41 + 88, (uint64_t)v46);
LABEL_6:
  sub_2575736DC();
  sub_2576A7A10();
  uint64_t v29 = sub_2576A7A00();
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  if (v31 >> 60 != 15)
  {
    sub_2576A71B0();
    sub_257573B60(v29, v31);
  }
  sub_25747F1AC((uint64_t)v46);
  return sub_25747ED40((uint64_t)v21);
}

uint64_t sub_25765CF08(uint64_t a1)
{
  return sub_25765CBB0(a1, *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_25765CF48(uint64_t a1)
{
  return sub_25765C7EC(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_25765CF84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MILBlobStorageWriter(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25765CFE0(uint64_t a1, uint64_t a2)
{
  return sub_25765B264(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(uint64_t **)(v2 + 48), *(void *)(v2 + 56), *(uint64_t **)(v2 + 64));
}

uint64_t OUTLINED_FUNCTION_0_76()
{
  return sub_2576A8F60();
}

void OUTLINED_FUNCTION_2_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(void *)(v16 - 72) = a16;
}

uint64_t OUTLINED_FUNCTION_3_66(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_25765BD04(a2, v3, v4, va, a1);
}

uint64_t OUTLINED_FUNCTION_4_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return Layer<>.compiled(forInput:options:)((uint64_t)va, (void *)(v8 - 72));
}

uint64_t OUTLINED_FUNCTION_5_66()
{
  return Layer.compiled(forInput:options:)();
}

uint64_t OUTLINED_FUNCTION_6_61(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  return sub_25765BD04(a1, v5, v6, a4, a5);
}

uint64_t OUTLINED_FUNCTION_7_59()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_11_55()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_12_48()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_53()
{
  return v0;
}

uint64_t sub_25765D1F0()
{
  swift_retain();
  id v1 = sub_25765D36C();
  objc_msgSend(v1, sel_lock);

  uint64_t v2 = *(void *)(v0 + 40);
  if (v2 < 0)
  {
    uint64_t v4 = v2 & 0x7FFFFFFFFFFFFFFFLL;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_25765D88C();
    uint64_t v4 = v3;
  }
  id v5 = sub_25765D36C();
  objc_msgSend(v5, sel_unlock);
  swift_release();

  uint64_t ObjectType = swift_getObjectType();
  __n128 v7 = MEMORY[0x270FA5388](ObjectType);
  (*(void (**)(uint64_t (*)(), __n128))(v4 + 64))(sub_25765E184, v7);
  return swift_unknownObjectRelease();
}

uint64_t sub_25765D334(uint64_t a1)
{
  return sub_25765D33C(a1, *(void *)(v1 + 8));
}

uint64_t sub_25765D33C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return 1718379891;
  }
  else {
    return 0x6F73736572707345;
  }
}

id sub_25765D36C()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if (v1)
  {
    id v2 = *(id *)(v0 + 48);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
    uint64_t v4 = *(void **)(v0 + 48);
    *(void *)(v0 + 48) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_25765D3D8(void *a1, char *a2, uint64_t a3)
{
  char v4 = *a2;
  *(void *)(v3 + 16) = *a1;
  *(unsigned char *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = a3;
  return v3;
}

void sub_25765D3F8()
{
}

uint64_t sub_25765D438(uint64_t a1, void (*a2)(void *__return_ptr, void, void), uint64_t a3)
{
  void (*v14)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), uint64_t *, void, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(void *__return_ptr, void, void);
  uint64_t v20;
  unsigned __int8 v21[24];
  uint64_t v22;

  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6 < 0)
  {
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    uint64_t v19 = a2;
    uint64_t v20 = a3;
    uint64_t v14 = *(void (**)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), uint64_t *, void, uint64_t, uint64_t))((v6 & 0x7FFFFFFFFFFFFFFFLL) + 0x38);
    swift_unknownObjectRetain();
    v14(&v22, sub_25765E22C, &v18, MEMORY[0x263F8D6C8], ObjectType, v6 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t result = sub_2574F9058(v7, v6);
    if (v3) {
      return result;
    }
    return v22;
  }
  v21[0] = *(unsigned char *)(a1 + 24);
  swift_retain();
  if (sub_2574F7570(v21))
  {
    sub_25765D88C();
    uint64_t v9 = v8;
    uint64_t v10 = swift_getObjectType();
    __n128 v11 = MEMORY[0x270FA5388](v10);
    uint64_t v19 = a2;
    uint64_t v20 = a3;
    (*(void (**)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), __n128))(v9 + 56))(&v22, sub_25765E24C, v11);
    if (v3)
    {
      swift_unknownObjectRelease();
      return sub_2574F9058(v7, v6);
    }
    swift_unknownObjectRelease();
    sub_2574F9058(v7, v6);
    return v22;
  }
  swift_beginAccess();
  uint64_t v15 = *(void *)(v7 + 48);
  uint64_t v16 = sub_2574F6944();
  if (v15) {
    uint64_t v17 = v15 + v16;
  }
  else {
    uint64_t v17 = 0;
  }
  a2(&v22, v15, v17);
  uint64_t result = sub_2574F9058(v7, v6);
  if (!v3) {
    return v22;
  }
  return result;
}

uint64_t sub_25765D674(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7 < 0)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = (uint64_t)&v23;
    MEMORY[0x270FA5388](ObjectType);
    uint64_t v20 = a4;
    uint64_t v21 = a2;
    uint64_t v22 = a3;
    uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t *, uint64_t, uint64_t, uint64_t))((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x38);
    swift_unknownObjectRetain();
    v14(sub_25765E1C0, &v19, a4, ObjectType, v7 & 0x7FFFFFFFFFFFFFFFLL);
    return sub_2574F9058(v8, v7);
  }
  v24[0] = *(unsigned char *)(a1 + 24);
  swift_retain();
  if (sub_2574F7570(v24))
  {
    sub_25765D88C();
    uint64_t v10 = v9;
    uint64_t v11 = swift_getObjectType();
    uint64_t v23 = (uint64_t)&v23;
    __n128 v12 = MEMORY[0x270FA5388](v11);
    uint64_t v20 = a4;
    uint64_t v21 = a2;
    uint64_t v22 = a3;
    (*(void (**)(uint64_t (*)(), __n128))(v10 + 56))(sub_25765E1C0, v12);
    swift_unknownObjectRelease();
    return sub_2574F9058(v8, v7);
  }
  swift_beginAccess();
  uint64_t v16 = *(void *)(v8 + 48);
  uint64_t v17 = sub_2574F6944();
  if (v16) {
    uint64_t v18 = v16 + v17;
  }
  else {
    uint64_t v18 = 0;
  }
  a2(v16, v18);
  return sub_2574F9058(v8, v7);
}

uint64_t sub_25765D88C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1 < 0)
  {
    *(void *)&v13[0] = 0xD00000000000003CLL;
    *((void *)&v13[0] + 1) = 0x80000002576D1520;
    char v15 = 9;
    sub_25746BE6C();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = qword_26A000948;
  swift_retain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26A030AB0;
  uint64_t v12 = *(void *)(v0 + 16);
  char v11 = *(unsigned char *)(v0 + 24);
  int v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_2574F904C(v2, v1);
  swift_retain();
  sub_2576A7810();
  uint64_t v5 = sub_257658FF0(&v12, &v11, v13, v4, v2, v0);
  uint64_t v7 = v6;
  sub_25747B4E4((uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_2574F9058(v2, v1);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 40);
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = v7 | 0x8000000000000000;
  swift_unknownObjectRetain();
  sub_2574F9058(v8, v9);
  return v5;
}

void *sub_25765DA08(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  uint64_t result = a3(&v5);
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

void sub_25765DA40(uint64_t a1, uint64_t a2)
{
  id v3 = sub_25765D36C();
  objc_msgSend(v3, sel_lock);

  sub_25765DF74(a2, &v5);
  id v4 = sub_25765D36C();
  objc_msgSend(v4, sel_unlock);
  swift_release();
}

uint64_t sub_25765DAF4(uint64_t a1, uint64_t a2)
{
  id v3 = sub_25765D36C();
  objc_msgSend(v3, sel_lock);

  if ((*(void *)(a2 + 40) & 0x8000000000000000) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v4 = sub_25765D88C();
  }
  id v5 = sub_25765D36C();
  objc_msgSend(v5, sel_unlock);
  swift_release();

  return v4;
}

uint64_t sub_25765DBA4(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, void, void), uint64_t a4)
{
  id v7 = sub_25765D36C();
  objc_msgSend(v7, sel_lock);

  uint64_t v8 = sub_25765D438(a2, a3, a4);
  id v9 = sub_25765D36C();
  objc_msgSend(v9, sel_unlock);
  swift_release();

  return v8;
}

void sub_25765DC40(void (*a1)(void))
{
  id v2 = sub_25765D36C();
  objc_msgSend(v2, sel_lock);

  a1();
  id v3 = sub_25765D36C();
  objc_msgSend(v3, sel_unlock);
}

uint64_t sub_25765DCD0()
{
  swift_bridgeObjectRelease();
  sub_2574F9058(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return v0;
}

uint64_t sub_25765DD00()
{
  sub_25765DCD0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoTensorStorage()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for EspressoTensorStorage.DataOwnership(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_2574F904C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for EspressoTensorStorage.DataOwnership(uint64_t *a1)
{
  return sub_2574F9058(*a1, a1[1]);
}

uint64_t *assignWithCopy for EspressoTensorStorage.DataOwnership(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  sub_2574F904C(*a2, v4);
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_2574F9058(v5, v6);
  return a1;
}

uint64_t *assignWithTake for EspressoTensorStorage.DataOwnership(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_2574F9058(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EspressoTensorStorage.DataOwnership(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 57) >> 6) | (2
                                                              * ((*(void *)(a1 + 8) >> 57) & 0x38 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for EspressoTensorStorage.DataOwnership(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_25765DECC(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_25765DED8(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_25765DEE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for EspressoTensorStorage.DataOwnership()
{
  return &type metadata for EspressoTensorStorage.DataOwnership;
}

void sub_25765DF0C()
{
}

uint64_t sub_25765DF24()
{
  return sub_25765D1F0();
}

void sub_25765DF3C()
{
  uint64_t v1 = swift_retain();
  sub_25765DA40(v1, v0);
}

uint64_t sub_25765DF74@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_2576A8730();
  sub_2576A92D0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  uint64_t v4 = sub_2576A7810();
  MEMORY[0x25A2B83F0](v4, MEMORY[0x263F8D6C8]);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  sub_2574F904C(v6, v5);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2574F9058(v6, v5);
  uint64_t result = sub_2576A7B00();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

void sub_25765E160()
{
}

uint64_t sub_25765E184()
{
  return sub_25765E1DC();
}

uint64_t sub_25765E1A0()
{
  return sub_25765D674(*(void *)(v0 + 24), *(void (**)(void, void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 16));
}

uint64_t sub_25765E1C0()
{
  return sub_25765E1DC();
}

uint64_t sub_25765E1DC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

void *sub_25765E200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(uint64_t *__return_ptr)@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_25765DA08(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_25765E22C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25765E200(a1, a2, *(void *(**)(uint64_t *__return_ptr))(v3 + 16), a3);
}

void *sub_25765E24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_25765E22C(a1, a2, a3);
}

uint64_t Embedding.weight.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_257486C84();
}

uint64_t sub_25765E304@<X0>(void *a1@<X8>)
{
  uint64_t result = Embedding.weight.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_25765E368(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return Embedding.weight.setter(&v2);
}

uint64_t Embedding.weight.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return Parameter.wrappedValue.setter(&v2);
}

uint64_t (*Embedding.weight.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_2574B203C;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t Embedding.$weight.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 9);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_retain();
}

BOOL Embedding.isEveryParameterInitialized.getter()
{
  uint64_t v1 = v0[4];
  if (*(unsigned char *)(v1 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(*v0 + 32);
  BOOL result = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t Embedding.dimension.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Embedding.vocabularySize.getter()
{
  return *(void *)(v0 + 24);
}

int8x16_t sub_25765E4F0@<Q0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  __int8 v4 = *(unsigned char *)(a1 + 8);
  __int8 v5 = *(unsigned char *)(a1 + 9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B78);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = *(void *)(v3 + 32);
  if ((~v7 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  uint64_t v8 = v6;
  id v9 = *(int8x16_t **)(*(void *)((v7 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  uint64_t v10 = v9[1].i64[0];
  if (!v10)
  {
LABEL_9:
    swift_retain();
LABEL_10:
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  if (v10 == 1) {
    goto LABEL_10;
  }
  a2->i64[0] = v3;
  a2->i8[8] = v4;
  a2->i8[9] = v5;
  int8x16_t result = vextq_s8(v9[2], v9[2], 8uLL);
  a2[1] = result;
  a2[2].i64[0] = v8;
  return result;
}

uint64_t Embedding.init(weight:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B78);
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 0;
  uint64_t v12 = v3;
  type metadata accessor for LayerVariableReference();
  swift_allocObject();
  swift_retain();
  char v21 = 1;
  uint64_t v5 = sub_25748FB58(&v12, 0x100000000);
  uint64_t v6 = *(void **)(*(void *)(v3 + 16) + 152);
  if (!v6[2])
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = -1;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    unint64_t v16 = 0;
    char v19 = -1;
    char v20 = 4;
    sub_2576A7810();
    goto LABEL_6;
  }
  uint64_t v7 = v5;
  uint64_t v8 = v6[4];
  sub_2576A7810();
  swift_release();
  unint64_t v9 = v6[2];
  if (v9 <= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v12 = 1;
    char v15 = -1;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    unint64_t v16 = v9;
    char v19 = -1;
    char v20 = 4;
LABEL_6:
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v10 = v6[5];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v8;
  *(void *)(a2 + 32) = v4;
  return result;
}

uint64_t Embedding.init(vocabularySize:dimension:weightInitializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B78);
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 0;
  if (a2 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  else
  {
    uint64_t v9 = v8;
    type metadata accessor for LayerVariableReference();
    swift_allocObject();
    uint64_t result = sub_25748FBC8(a3);
    *(void *)a4 = result;
    *(_WORD *)(a4 + 8) = 256;
    *(void *)(a4 + 16) = a2;
    *(void *)(a4 + 24) = a1;
    *(void *)(a4 + 32) = v9;
  }
  return result;
}

uint64_t Embedding.initializeParameters(for:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2576ABB30;
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v5 = v3;
  swift_retain();
  sub_25748FC8C(&v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

void Embedding.forward(_:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  unsigned __int8 v3 = *(unsigned char *)(*(void *)(*(void *)a1 + 16) + 160);
  uint64_t v4 = static ScalarType.integerTypes.getter();
  BOOL v5 = sub_2575A0094(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_25767AC64();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A003C90);
    OUTLINED_FUNCTION_35_1();
    sub_25746BF88();
  }
  uint64_t v6 = *(void *)(v2 + 32);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    if (v6 < 0)
    {
      Tensor.batchGathering(atIndices:alongAxis:batchDimensionCount:)();
      return;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  OUTLINED_FUNCTION_16_7();
  __break(1u);
}

BOOL sub_25765EAB0()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_25765EAF8()
{
  return sub_25765EAB0();
}

BOOL sub_25765EB20@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_25765EAB0();
  *a1 = result;
  return result;
}

uint64_t sub_25765EB54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25760CFC8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_25765EB80@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_25765EAF8();
  *a1 = result;
  return result;
}

uint64_t sub_25765EBAC(uint64_t a1)
{
  unint64_t v2 = sub_25765EF14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25765EBE8(uint64_t a1)
{
  unint64_t v2 = sub_25765EF14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Embedding.init(from:)@<X0>(void *a1@<X0>, int8x16_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B80);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25765EF14();
  sub_2576A91F0();
  if (!v2)
  {
    sub_2574B3944();
    sub_2576A8D50();
    uint64_t v13 = v15[0].i64[0];
    __int16 v14 = v15[0].i16[4];
    sub_25765E4F0((uint64_t)&v13, v15);
    uint64_t v6 = OUTLINED_FUNCTION_1_14();
    v7(v6);
    __int8 v8 = v15[0].i8[8];
    __int8 v9 = v15[0].i8[9];
    uint64_t v10 = v16;
    int8x16_t v11 = v15[1];
    a2->i64[0] = v15[0].i64[0];
    a2->i8[8] = v8;
    a2->i8[9] = v9;
    a2[1] = v11;
    a2[2].i64[0] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Embedding.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005B90);
  OUTLINED_FUNCTION_0_8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  __int8 v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  char v10 = *((unsigned char *)v1 + 8);
  int v13 = *((unsigned __int8 *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25765EF14();
  sub_2576A9230();
  uint64_t v14 = v9;
  char v15 = v10;
  char v16 = v13;
  sub_2574B3990();
  sub_2576A8E40();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_25765EEE4@<X0>(void *a1@<X0>, int8x16_t *a2@<X8>)
{
  return Embedding.init(from:)(a1, a2);
}

uint64_t sub_25765EEFC(void *a1)
{
  return Embedding.encode(to:)(a1);
}

unint64_t sub_25765EF14()
{
  unint64_t result = qword_26A005B88;
  if (!qword_26A005B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005B88);
  }
  return result;
}

uint64_t destroy for Embedding()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Embedding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Embedding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Embedding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Embedding()
{
  return &type metadata for Embedding;
}

unsigned char *storeEnumTagSinglePayload for Embedding.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25765F180);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Embedding.CodingKeys()
{
  return &type metadata for Embedding.CodingKeys;
}

unint64_t sub_25765F1BC()
{
  unint64_t result = qword_26A005B98;
  if (!qword_26A005B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005B98);
  }
  return result;
}

unint64_t sub_25765F20C()
{
  unint64_t result = qword_26A005BA0;
  if (!qword_26A005BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005BA0);
  }
  return result;
}

unint64_t sub_25765F25C()
{
  unint64_t result = qword_26A005BA8[0];
  if (!qword_26A005BA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A005BA8);
  }
  return result;
}

uint64_t sub_25765F2A8()
{
  swift_getTupleTypeMetadata2();
  uint64_t result = sub_2576A84C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25765F354()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  swift_getTupleTypeMetadata2();
  uint64_t v2 = sub_2576A84C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_25765F408()
{
  sub_25765F354();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifetimeDependent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25765F478(char a1)
{
  if (a1) {
    return 0x646F72706D7563;
  }
  else {
    return 0x6D75736D7563;
  }
}

uint64_t sub_25765F4AC()
{
  return sub_25765F478(*v0);
}

uint64_t sub_25765F4B4()
{
  if (*(unsigned char *)(v0 + 40)) {
    return 0x646F72706D7563;
  }
  else {
    return 0x6D75736D7563;
  }
}

uint64_t sub_25765F4EC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576AC2A0;
  *(void *)(v1 + 32) = *(void *)(v0 + 48);
  uint64_t v3 = v1;
  sub_2576A7E20();
  swift_retain();
  return v3;
}

uint64_t sub_25765F558(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  char v16 = a4 & 1;
  if (!a3) {
    a1 = sub_2575E2CF0(a4 & 1);
  }
  *(_DWORD *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(unsigned char *)(v11 + 40) = v16;
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = a6;
  *(unsigned char *)(v11 + 64) = a7 & 1;
  *(unsigned char *)(v11 + 65) = a8 & 1;
  char v17 = *(unsigned char *)(a5 + 160);
  *(void *)(v11 + 72) = *(void *)(a5 + 152);
  *(unsigned char *)(v11 + 80) = v17;
  *(void *)(v11 + 88) = a10;
  *(void *)(v11 + 96) = a11;
  sub_257469238(a9, v11 + 104);
  sub_2576A7810();
  return v11;
}

uint64_t sub_25765F608()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25747A4E0(*(void *)(v0 + 88));
  return v0;
}

uint64_t sub_25765F648()
{
  sub_25765F608();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CumulativeOperation()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CumulativeOperation.Operator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25765F76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CumulativeOperation.Operator()
{
  return &type metadata for CumulativeOperation.Operator;
}

unint64_t sub_25765F7A8()
{
  unint64_t result = qword_26A005C30;
  if (!qword_26A005C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C30);
  }
  return result;
}

uint64_t sub_25765F7F8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_25765F830()
{
  return sub_2576A90B0();
}

uint64_t sub_25765F8B0()
{
  return sub_25765F830();
}

uint64_t sub_25765F8D4(uint64_t a1)
{
  uint64_t result = sub_25765F95C(&qword_26A0018E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25765F918(uint64_t a1)
{
  uint64_t result = sub_25765F95C(&qword_26A005C38);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25765F95C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CumulativeOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25765F9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v3)
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  if (v3 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    sub_2576A7810();
    sub_25746BF88();
  }
  uint64_t v7 = v13;
  uint64_t v8 = a1;
  do
  {
    if (a2 == v8)
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v8 == 1)
    {
      uint64_t v9 = *(void *)(*(void *)(a3 + 16) + 152);
      if (!*(void *)(v9 + 16)) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v9 + 32);
    }
    else
    {
      uint64_t v10 = 1;
    }
    unint64_t v11 = *(void *)(v13 + 16);
    if (v11 >= *(void *)(v13 + 24) >> 1) {
      sub_2574E7154();
    }
    *(void *)(v13 + 16) = v11 + 1;
    *(void *)(v13 + 8 * v11 + 32) = v10;
    if (a2 < a1) {
      goto LABEL_19;
    }
    if (v8 >= a2) {
      goto LABEL_20;
    }
    ++v8;
  }
  while (a2 != v8);
  swift_release();
  return v7;
}

uint64_t sub_25765FB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  v17[7] = a2;
  if (*(void *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v9) {
        break;
      }
      if (v7 == 1) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = 1;
LABEL_7:
    if (v8 == *(void *)(a2 + 16))
    {
      uint64_t v10 = sub_25747B47C(a3, (uint64_t)v17);
      MEMORY[0x270FA5388](v10);
      v16[0] = a1;
      char v15 = 10;
      sub_25747B47C((uint64_t)v17, (uint64_t)v14);
      Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v16, (uint64_t)&v15, (uint64_t)v14, (uint64_t)sub_257663710);
      sub_25747B4E4((uint64_t)v17);
      uint64_t v11 = v16[1];
      sub_25747B4E4(a3);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v11;
      return result;
    }
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_2576A8730();
  sub_2576A7B00();
  if (*(void *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v9) {
        break;
      }
      if (v13 == 1) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
LABEL_13:
  sub_2576A8EA0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8EA0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_25765FDC4(uint64_t a1, float a2)
{
  v18[1] = a1;
  Tensor.scalarType.getter();
  (*(void (**)(long long *__return_ptr))(v3 + 32))(&v14);
  int v4 = v14;
  uint64_t v5 = static ScalarType.floatingPointTypes.getter();
  BOOL v6 = sub_2575A0094(0xAu, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (v6
    && (uint64_t v7 = static ScalarType.integerTypes.getter(),
        BOOL v8 = sub_2575A0094(v4, (uint64_t)v7),
        swift_bridgeObjectRelease(),
        v8)
    || v4 == 12)
  {
    int v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(float *)(inited + 32) = a2;
    sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
    sub_25765FB48(MEMORY[0x263F8EE78], inited, (uint64_t)v11, v18);
    sub_25747B4E4((uint64_t)&v14);
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8D5C8];
    uint64_t v13 = &protocol witness table for Float;
    *(float *)uint64_t v11 = a2;
    Tensor.scalarType.getter();
    int v17 = 0;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v14 = 0u;
    Tensor.init(coercing:scalarType:on:)();
  }
  static Tensor..<= infix(_:_:)();
  return swift_release();
}

uint64_t sub_25765FF4C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_25765FF98(&v4, a3, a1, a2);
  return swift_bridgeObjectRelease();
}

void *sub_25765FF98(void *result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = 0;
    unint64_t v6 = 0;
    uint64_t v7 = a3;
    while (1)
    {
      if ((unint64_t)v7 >= a4 - 3) {
        goto LABEL_9;
      }
      unint64_t v8 = *(void *)(a2 + 16);
      if (v6 == v8) {
        goto LABEL_9;
      }
      if (v6 >= v8) {
        break;
      }
      *uint64_t v7 = *(_DWORD *)(a2 + 32 + 4 * v6);
      if (v6 == 0x1FFFFFFFFFFFFFFFLL) {
        goto LABEL_14;
      }
      ++v7;
      ++v6;
      v5 += 4;
      if (a4 - (uint64_t)a3 < v5)
      {
        __break(1u);
LABEL_9:
        *uint64_t result = a2;
        result[1] = v6;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(void *)(a2 + 16))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *uint64_t result = a2;
  result[1] = 0;
LABEL_12:
  sub_2576A7810();
  return a3;
}

uint64_t relu(_:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v13 = v0;
    *(void *)&long long v14 = &v13;
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  swift_retain();
  uint64_t v5 = sub_25761BED4((uint64_t)sub_2576629D4);
  uint64_t v7 = v6;
  uint64_t v13 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
  long long v14 = xmmword_2576AE5E0;
  long long v15 = xmmword_2576BF420;
  long long v16 = "init(id:operand:creationSite:backward:)";
  uint64_t v17 = 39;
  __int16 v18 = 2;
  type metadata accessor for ReLUOperation();
  swift_allocObject();
  sub_25753D9BC(0, 0, 0, v4, (uint64_t)&v13, v5, v7);
  sub_2576636A0(&qword_26A001200, (void (*)(uint64_t))type metadata accessor for ReLUOperation);
  uint64_t v8 = sub_25747B47C(v4 + 168, (uint64_t)v12);
  return OUTLINED_FUNCTION_24_24(v8, v9, v10, (uint64_t)v12);
}

uint64_t softplus(_:alpha:beta:)()
{
  OUTLINED_FUNCTION_20_38();
  uint64_t v137 = *MEMORY[0x263EF8340];
  uint64_t v4 = OUTLINED_FUNCTION_6_62();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  uint64_t v5 = OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v133 = v0;
    *((void *)&v133 + 1) = &v133;
    long long v134 = xmmword_2576B56F0;
    LOBYTE(v135) = 0;
    *((void *)&v135 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_26_34();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  char v13 = *(unsigned char *)(*(void *)(v2 + 16) + 160);
  int v136 = 0;
  long long v134 = 0u;
  long long v135 = 0u;
  long long v133 = 0u;
  LOBYTE(v68) = v13;
  uint64_t v14 = OUTLINED_FUNCTION_19_40(v5, v6, v7, v8, v9, v10, v11, v12, v57, v63, v68, MEMORY[0x263F8EE78], v79, v82, v85, v88, v91, v94, v97,
          v100,
          v103,
          v106,
          v109,
          v112,
          v115,
          v118,
          v121,
          v124,
          v127,
          v130,
          0);
  OUTLINED_FUNCTION_18_41(v14, (uint64_t)&unk_27065EA20, v15, v16, v17, v18, v19, v20, v58, v64, v69, v74);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v133);
  OUTLINED_FUNCTION_27_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v22 = OUTLINED_FUNCTION_17_43(inited, (__n128)xmmword_2576ABB10);
  LOBYTE(v70) = v3;
  uint64_t v30 = OUTLINED_FUNCTION_19_40((uint64_t)v22, v23, v24, v25, v26, v27, v28, v29, v59, v65, v70, v75, v80, v83, v86, v89, v92, v95, v98,
          v101,
          v104,
          v107,
          v110,
          v113,
          v116,
          v119,
          v122,
          v125,
          v128,
          v131,
          v133);
  OUTLINED_FUNCTION_18_41(v30, v31, v32, v33, v34, v35, v36, v37, v60, v66, v71, v76);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v133);
  uint64_t v38 = v81;
  OUTLINED_FUNCTION_27_29();
  uint64_t v39 = (__n128 *)swift_initStackObject();
  uint64_t v40 = OUTLINED_FUNCTION_162_1(v39, v61);
  LOBYTE(v72) = v3;
  uint64_t v48 = OUTLINED_FUNCTION_19_40((uint64_t)v40, v41, v42, v43, v44, v45, v46, v47, v61.n128_i64[0], v61.n128_i64[1], v72, v77, v81, v84, v87, v90, v93, v96, v99,
          v102,
          v105,
          v108,
          v111,
          v114,
          v117,
          v120,
          v123,
          v126,
          v129,
          v132,
          v133);
  OUTLINED_FUNCTION_18_41(v48, v49, v50, v51, v52, v53, v54, v55, v62, v67, v73, v78);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v133);
  *(void *)&long long v133 = v38;
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_58_12();
  exp(_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  OUTLINED_FUNCTION_58_12();
  log(_:)();
  swift_release();
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t scaledTanh(_:inputScale:outputScale:)()
{
  OUTLINED_FUNCTION_20_38();
  uint64_t v36 = *MEMORY[0x263EF8340];
  char v3 = OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    v32[0] = v0;
    v32[1] = v32;
    long long v33 = xmmword_2576B56F0;
    char v34 = 0;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_26_34();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_25_15();
  char v4 = MEMORY[0x263F8EE78];
  char v29 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_17_43(inited, (__n128)xmmword_2576ABB10);
  HIBYTE(v27) = v1;
  uint64_t v6 = sub_25747B47C((uint64_t)v32, (uint64_t)v31);
  OUTLINED_FUNCTION_30_11(v6, v7, v8, v9, v10, v11, v12, v13, v24, v26, v27, v29);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v32);
  OUTLINED_FUNCTION_25_15();
  uint64_t v14 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(v14, v25);
  HIBYTE(v28) = v1;
  uint64_t v15 = sub_25747B47C((uint64_t)v32, (uint64_t)v31);
  OUTLINED_FUNCTION_30_11(v15, v16, v17, v18, v19, v20, v21, v22, v25.n128_i64[0], v25.n128_i64[1], v28, v4);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v32);
  v32[0] = v30;
  v31[0] = v2;
  static Tensor.* infix(_:_:)();
  tanh(_:)();
  swift_release();
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sigmoid(_:)()
{
  char v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v23 = v0;
    uint64_t v24 = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  uint64_t v5 = *(void *)(v3 + 16);
  swift_retain();
  sub_25761BED4((uint64_t)sub_257662E30);
  OUTLINED_FUNCTION_54_15();
  long long v25 = xmmword_2576BF430;
  OUTLINED_FUNCTION_53_14();
  swift_allocObject();
  int v6 = OUTLINED_FUNCTION_10_55();
  sub_25753D810(v6, v7, v8, 1, v5, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  sub_2576636A0(&qword_26A001208, (void (*)(uint64_t))type metadata accessor for ActivationOperation);
  uint64_t v18 = sub_25747B47C(v5 + 168, (uint64_t)v22);
  return OUTLINED_FUNCTION_24_24(v18, v19, v20, (uint64_t)v22);
}

uint64_t logSigmoid(_:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  static Tensor.- prefix(_:)(&v3);
  softplus(_:alpha:beta:)();
  swift_release();
  uint64_t v2 = v3;
  static Tensor.- prefix(_:)(&v2);
  return swift_release();
}

uint64_t softsign(_:)()
{
  char v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v9[0] = v0;
    v9[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_12_25();
  uint64_t v7 = MEMORY[0x263F8EE78];
  sub_25747B47C((uint64_t)v9, (uint64_t)v6);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v9);
  v9[0] = v3;
  v6[0] = v3;
  abs(_:)();
  uint64_t v7 = v8;
  static Tensor.+ infix(_:_:)();
  swift_release();
  OUTLINED_FUNCTION_42_20();
  static Tensor./ infix(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t softmax(_:alongAxis:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  unsigned __int8 v7 = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v8 = static ScalarType.floatingPointTypes.getter();
  sub_2575A0094(v7, (uint64_t)v8);
  OUTLINED_FUNCTION_41_20();
  if ((v3 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)&long long v28 = a3;
    *((void *)&v28 + 1) = &v28;
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_14_29();
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(v6 + 16);
  unint64_t v10 = *(void *)(*(void *)(v9 + 152) + 16);
  if (-(uint64_t)v10 > a2 || (uint64_t)v10 <= a2)
  {
    uint64_t v29 = 0;
    long long v28 = (unint64_t)a2;
    LOBYTE(v30) = -1;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    *((void *)&v30 + 1) = v10;
    char v33 = -1;
    char v34 = 4;
    OUTLINED_FUNCTION_17_31();
LABEL_12:
    sub_25746BF88();
  }
  uint64_t v12 = (v10 & (a2 >> 63)) + a2;
  BOOL v13 = v10 < 2;
  if (v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  *(void *)(swift_allocObject() + 16) = v12;
  swift_retain();
  uint64_t v15 = sub_25761BED4((uint64_t)sub_257663698);
  uint64_t v17 = v16;
  swift_release();
  *(void *)&long long v28 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
  *((void *)&v28 + 1) = 115;
  LOBYTE(v29) = 2;
  long long v30 = xmmword_2576BF440;
  uint64_t v31 = "init(id:operand:axis:creationSite:backward:)";
  uint64_t v32 = 44;
  char v33 = 2;
  type metadata accessor for SoftmaxOperation();
  swift_allocObject();
  uint64_t v24 = sub_25753DC20(0, 0, 0, v9, v14, &v28, v15, v17, v18, v19, v20, v21, v22, v23);
  long long v25 = (uint64_t (**)(void, void))sub_2576636A0(&qword_26A0011F0, (void (*)(uint64_t))type metadata accessor for SoftmaxOperation);
  sub_25747B47C(*(void *)(v6 + 16) + 168, (uint64_t)v27);
  return sub_257613838(v24, v25, 0, (uint64_t)v27, a3);
}

uint64_t logSoftmax(_:alongAxis:)()
{
  char v4 = OUTLINED_FUNCTION_39_27();
  OUTLINED_FUNCTION_23_34((uint64_t)v4);
  OUTLINED_FUNCTION_41_20();
  if ((v2 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v9 = v0;
    unint64_t v10 = &v9;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_14_29();
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)(*(void *)(*(void *)(v3 + 16) + 152) + 16);
  if (-v5 > v1 || v5 <= v1)
  {
    unint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v9 = v1;
    char v12 = -1;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v13 = v5;
    char v16 = -1;
    char v17 = 4;
    OUTLINED_FUNCTION_17_31();
LABEL_11:
    sub_25746BF88();
  }
  uint64_t v8 = v3;
  softmax(_:alongAxis:)(&v8, (v5 & (v1 >> 63)) + v1, &v9);
  uint64_t v8 = v9;
  log(_:)();
  return swift_release();
}

uint64_t elu(_:alpha:)()
{
  OUTLINED_FUNCTION_165_1();
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = *v2;
  char v4 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v42 = v0;
    *((void *)&v42 + 1) = &v42;
    long long v43 = xmmword_2576B56F0;
    LOBYTE(v44) = 0;
    *((void *)&v44 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_25_35();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  double v5 = OUTLINED_FUNCTION_34_26();
  uint64_t v6 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_28_32(v7, v8, v9, v10, v11, v12, v13, v14, v35, v5);
  OUTLINED_FUNCTION_15_45();
  sub_25747B4E4((uint64_t)&v42);
  double v15 = OUTLINED_FUNCTION_34_26();
  uint64_t v39 = v6;
  OUTLINED_FUNCTION_28_32(v16, v17, v18, v19, v20, v21, v22, v23, v36, v15);
  OUTLINED_FUNCTION_15_45();
  sub_25747B4E4((uint64_t)&v42);
  char v24 = *(unsigned char *)(*(void *)(v3 + 16) + 160);
  int v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  LOBYTE(v38) = v24;
  uint64_t v26 = sub_25747B47C((uint64_t)&v42, (uint64_t)v41);
  OUTLINED_FUNCTION_60_12(v26, v27, v28, v29, v30, v31, v32, v33, v37, v38, v6);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v42);
  v41[0] = v40;
  exp(_:)();
  static Tensor.- infix(_:_:)();
  swift_release();
  uint64_t v39 = v3;
  static Tensor.* infix(_:_:)();
  swift_release();
  v41[0] = v42;
  uint64_t v40 = v3;
  static Tensor..> infix(_:_:)();
  uint64_t v38 = v3;
  Tensor.replacing(with:where:)(&v40, &v38, v0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t gelu(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  double v5 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_8_31((uint64_t)v5);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v67 = a2;
    *((void *)&v67 + 1) = &v67;
    long long v68 = xmmword_2576B56F0;
    LOBYTE(v69) = 0;
    *((void *)&v69 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    LOBYTE(v70) = 2;
    char v71 = 3;
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  char v6 = *(unsigned char *)(*(void *)(v4 + 16) + 160);
  int v70 = 0;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v67 = 0u;
  uint64_t v65 = MEMORY[0x263F8EE78];
  LOBYTE(v54) = v6;
  sub_25747B47C((uint64_t)&v67, (uint64_t)&v58);
  OUTLINED_FUNCTION_11_56();
  uint64_t v7 = sub_25747B4E4((uint64_t)&v67);
  uint64_t v8 = v66;
  OUTLINED_FUNCTION_2_73(v7, v9, v10, v11, v12, v13, v14, v15, v46, v50, v54, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70);
  OUTLINED_FUNCTION_11_56();
  uint64_t v16 = sub_25747B4E4((uint64_t)&v67);
  uint64_t v17 = v66;
  OUTLINED_FUNCTION_2_73(v16, v18, v19, v20, v21, v22, v23, v24, v47, v51, v55, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70);
  OUTLINED_FUNCTION_11_56();
  uint64_t v25 = sub_25747B4E4((uint64_t)&v67);
  uint64_t v26 = v66;
  OUTLINED_FUNCTION_2_73(v25, v27, v28, v29, v30, v31, v32, v33, v48, v52, v56, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70);
  OUTLINED_FUNCTION_11_56();
  uint64_t v34 = sub_25747B4E4((uint64_t)&v67);
  uint64_t v35 = v66;
  OUTLINED_FUNCTION_2_73(v34, v36, v37, v38, v39, v40, v41, v42, v49, v53, v57, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70);
  OUTLINED_FUNCTION_11_56();
  sub_25747B4E4((uint64_t)&v67);
  uint64_t v66 = v17;
  *(void *)&long long v67 = v8;
  uint64_t v58 = v4;
  uint64_t v65 = v4;
  pow(_:_:)();
  static Tensor.* infix(_:_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  uint64_t v65 = v66;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v66 = v58;
  tanh(_:)();
  swift_release();
  uint64_t v43 = v67;
  uint64_t v58 = v26;
  *(void *)&long long v67 = v35;
  uint64_t v65 = v43;
  static Tensor.+ infix(_:_:)();
  uint64_t v65 = v66;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v44 = v67;
  *(void *)&long long v67 = v4;
  uint64_t v58 = v44;
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t relu6(_:)(void *a1)
{
  v5[0] = *a1;
  relu(_:)();
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_30_31(v1, v3);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v5);
  v5[0] = v4;
  min(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t leakyReLU(_:alpha:)()
{
  OUTLINED_FUNCTION_165_1();
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t v3 = OUTLINED_FUNCTION_6_62();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    v7[0] = v0;
    v7[1] = v7;
    long long v8 = xmmword_2576B56F0;
    char v9 = 0;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    char v11 = 2;
    char v12 = 3;
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  sub_25747B47C(*(void *)(v2 + 16) + 168, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  sub_25747B47C((uint64_t)v7, (uint64_t)v6);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v7);
  v7[0] = v2;
  static Tensor.* infix(_:_:)();
  max(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t selu(_:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v8[0] = v0;
    v8[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_30_31(v4, v6);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v8);
  v8[0] = v7;
  elu(_:alpha:)();
  OUTLINED_FUNCTION_42_20();
  static Tensor.* infix(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t hardshrink(_:lambda:)(uint64_t *a1)
{
  uint64_t v4 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_8();
  uint64_t v8 = *a1;
  LOBYTE(a1) = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  char v9 = static ScalarType.floatingPointTypes.getter();
  BOOL v10 = sub_2575A0094(a1, (uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!v10)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v26 = v1;
    *((void *)&v26 + 1) = &v26;
    long long v27 = xmmword_2576B56F0;
    LOBYTE(v28) = 0;
    *((void *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    LOBYTE(v29) = 2;
    char v30 = 3;
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  int v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v26 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  sub_25747B47C((uint64_t)&v26, (uint64_t)v24);
  sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)inited, (uint64_t)v24, &v25);
  sub_25747B4E4((uint64_t)&v26);
  v24[0] = v25;
  LOBYTE(v25) = *(unsigned char *)(*(void *)(v8 + 16) + 160);
  uint64_t v23 = *(void (**)(uint64_t))(v6 + 104);
  uint64_t v12 = *MEMORY[0x263F8E1F8];
  unsigned int v22 = *MEMORY[0x263F8E1F8];
  v23(v2);
  Tensor.cast(to:roundingRule:)();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v14 = OUTLINED_FUNCTION_52_15();
  v15(v14);
  swift_release();
  uint64_t v16 = v26;
  *(void *)&long long v26 = v8;
  v24[0] = v16;
  static Tensor.- prefix(_:)(v24);
  static Tensor..< infix(_:_:)();
  swift_release();
  uint64_t v25 = v24[0];
  uint64_t v17 = OUTLINED_FUNCTION_50_17(*(void *)(v8 + 16));
  ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v17, v12, v4);
  OUTLINED_FUNCTION_48_20();
  v13(v2, v4);
  swift_release();
  uint64_t v18 = v26;
  uint64_t v25 = v16;
  *(void *)&long long v26 = v8;
  static Tensor..> infix(_:_:)();
  uint64_t v25 = v24[0];
  uint64_t v19 = OUTLINED_FUNCTION_50_17(*(void *)(v8 + 16));
  ((void (*)(uint64_t, void, uint64_t))v23)(v19, v22, v4);
  OUTLINED_FUNCTION_48_20();
  uint64_t v20 = OUTLINED_FUNCTION_52_15();
  ((void (*)(uint64_t))v13)(v20);
  swift_release();
  uint64_t v25 = v18;
  *(void *)&long long v26 = v8;
  max(_:_:)();
  uint64_t v25 = v24[0];
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t celu(_:alpha:)()
{
  OUTLINED_FUNCTION_165_1();
  uint64_t v46 = *MEMORY[0x263EF8340];
  uint64_t v3 = OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v42 = v0;
    *((void *)&v42 + 1) = &v42;
    long long v43 = xmmword_2576B56F0;
    LOBYTE(v44) = 0;
    *((void *)&v44 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_25_35();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  double v4 = OUTLINED_FUNCTION_32_26();
  char v5 = MEMORY[0x263F8EE78];
  OUTLINED_FUNCTION_28_32(v6, v7, v8, v9, v10, v11, v12, v13, v36, v4);
  OUTLINED_FUNCTION_15_45();
  sub_25747B4E4((uint64_t)&v42);
  double v14 = OUTLINED_FUNCTION_32_26();
  OUTLINED_FUNCTION_28_32(v15, v16, v17, v18, v19, v20, v21, v22, v37, v14);
  OUTLINED_FUNCTION_15_45();
  sub_25747B4E4((uint64_t)&v42);
  char v23 = *(unsigned char *)(*(void *)(v2 + 16) + 160);
  int v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  LOBYTE(v39) = v23;
  uint64_t v25 = sub_25747B47C((uint64_t)&v42, (uint64_t)v41);
  OUTLINED_FUNCTION_60_12(v25, v26, v27, v28, v29, v30, v31, v32, v38, v39, v5);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v42);
  v41[0] = v2;
  max(_:_:)();
  uint64_t v33 = v42;
  *(void *)&long long v42 = v40;
  v41[0] = v2;
  static Tensor./ infix(_:_:)();
  exp(_:)();
  swift_release();
  static Tensor.- infix(_:_:)();
  swift_release();
  static Tensor.* infix(_:_:)();
  swift_release();
  min(_:_:)();
  swift_release();
  uint64_t v34 = v42;
  *(void *)&long long v42 = v33;
  v41[0] = v34;
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t tanhshrink(_:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v5[0] = v0;
    v5[1] = v5;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  v5[0] = v2;
  tanh(_:)();
  static Tensor.- infix(_:_:)();
  return swift_release();
}

uint64_t softshrink(_:alpha:)(uint64_t *a1)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_8();
  uint64_t v7 = *a1;
  LOBYTE(a1) = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v8 = static ScalarType.floatingPointTypes.getter();
  BOOL v9 = sub_2575A0094(a1, (uint64_t)v8);
  swift_bridgeObjectRelease();
  if (!v9)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v20 = v7;
    *((void *)&v20 + 1) = &v20;
    long long v21 = xmmword_2576B56F0;
    LOBYTE(v22) = 0;
    *((void *)&v22 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    LOBYTE(v23) = 2;
    char v24 = 3;
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  int v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v20 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  sub_25747B47C((uint64_t)&v20, (uint64_t)v19);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v20);
  *(void *)&long long v20 = v7;
  static Tensor..> infix(_:_:)();
  OUTLINED_FUNCTION_47_21();
  unsigned int v17 = *MEMORY[0x263F8E1F8];
  uint64_t v16 = *(void (**)(uint64_t))(v5 + 104);
  v16(v1);
  OUTLINED_FUNCTION_49_18();
  uint64_t v11 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v12 = OUTLINED_FUNCTION_51_17();
  v11(v12);
  swift_release();
  v19[0] = v20;
  OUTLINED_FUNCTION_31_28();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_57_11();
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v13 = v20;
  *(void *)&long long v20 = v7;
  v19[0] = v18;
  static Tensor.- prefix(_:)(v19);
  OUTLINED_FUNCTION_57_11();
  static Tensor..< infix(_:_:)();
  swift_release();
  OUTLINED_FUNCTION_47_21();
  ((void (*)(uint64_t, void, uint64_t))v16)(v1, v17, v3);
  OUTLINED_FUNCTION_49_18();
  uint64_t v14 = OUTLINED_FUNCTION_51_17();
  v11(v14);
  swift_release();
  v19[0] = v20;
  OUTLINED_FUNCTION_31_28();
  static Tensor.+ infix(_:_:)();
  static Tensor.* infix(_:_:)();
  swift_release();
  v19[0] = v13;
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t prelu(_:weight:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  uint64_t v7 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_23_34((uint64_t)v7);
  OUTLINED_FUNCTION_41_20();
  if ((v3 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v17[0] = a3;
    v17[1] = (uint64_t)v17;
    OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_20_6();
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_25747B47C((uint64_t)v17, (uint64_t)v14);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v17);
  uint64_t v8 = v16;
  v14[0] = v16;
  uint64_t v16 = v5;
  max(_:_:)();
  uint64_t v9 = v17[0];
  uint64_t v10 = *(void *)(*(void *)(*(void *)(v5 + 16) + 152) + 16);
  swift_retain();
  uint64_t v11 = sub_25765F9A0(0, v10, v6);
  v14[0] = v6;
  uint64_t v16 = v11;
  Tensor.reshaped(to:)(&v16, v17);
  swift_bridgeObjectRelease();
  uint64_t v16 = v17[0];
  static Tensor.- prefix(_:)(&v16);
  swift_release();
  uint64_t v16 = v14[0];
  v17[0] = v8;
  uint64_t v15 = v5;
  static Tensor.- prefix(_:)(&v15);
  max(_:_:)();
  swift_release();
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  uint64_t v12 = v17[0];
  v17[0] = v9;
  v14[0] = v12;
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t hardtanh(_:bounds:)()
{
  char v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    v13[0] = v0;
    v13[1] = v13;
    long long v14 = xmmword_2576B56F0;
    char v15 = 0;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    char v17 = 2;
    char v18 = 3;
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_55_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_17_43(inited, (__n128)xmmword_2576ABB10);
  sub_25747B47C((uint64_t)v13, (uint64_t)v11);
  uint64_t v5 = MEMORY[0x263F8EE78];
  sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)inited, (uint64_t)v11, &v12);
  sub_25747B4E4((uint64_t)v13);
  uint64_t v6 = v12;
  OUTLINED_FUNCTION_55_14();
  uint64_t v7 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(v7, v10);
  sub_25747B47C((uint64_t)v13, (uint64_t)v11);
  sub_25749F194(v5, (uint64_t)v7, (uint64_t)v11, &v12);
  sub_25747B4E4((uint64_t)v13);
  uint64_t v8 = v12;
  v11[0] = v2;
  uint64_t v12 = v6;
  min(_:_:)();
  v11[0] = v13[0];
  uint64_t v12 = v8;
  max(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t softmin(_:axis:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_39_27();
  OUTLINED_FUNCTION_23_34((uint64_t)v4);
  OUTLINED_FUNCTION_41_20();
  if ((v2 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v8[0] = v0;
    v8[1] = (uint64_t)v8;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  v8[0] = v3;
  static Tensor.- prefix(_:)(v8);
  exp(_:)();
  swift_release();
  uint64_t v5 = v8[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
  *(void *)(v6 + 32) = v1;
  Tensor.sum(alongAxes:)(v6, v8);
  swift_bridgeObjectRelease();
  v8[0] = v5;
  static Tensor./ infix(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t hardSigmoid(_:scale:bias:)()
{
  OUTLINED_FUNCTION_20_38();
  uint64_t v157 = *MEMORY[0x263EF8340];
  uint64_t v3 = OUTLINED_FUNCTION_40_22();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  uint64_t v4 = OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v153 = v0;
    *((void *)&v153 + 1) = &v153;
    long long v154 = xmmword_2576B56F0;
    LOBYTE(v155) = 0;
    *((void *)&v155 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_26_34();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  char v12 = *(unsigned char *)(*(void *)(v2 + 16) + 160);
  int v156 = 0;
  long long v154 = 0u;
  long long v155 = 0u;
  long long v153 = 0u;
  HIBYTE(v70) = v12;
  OUTLINED_FUNCTION_19_40(v4, v5, v6, v7, v8, v9, v10, v11, v59, v65, v70, MEMORY[0x263F8EE78], v81, v85, v89, v93, v97, v101, v105,
    v109,
    v113,
    v117,
    v121,
    v125,
    v129,
    v133,
    v137,
    v141,
    v145,
    v149,
    0);
  OUTLINED_FUNCTION_46_19();
  sub_25747B4E4((uint64_t)&v153);
  OUTLINED_FUNCTION_16_45();
  HIBYTE(v71) = v13;
  OUTLINED_FUNCTION_19_40(v14, v15, v16, v17, v18, v19, v20, v21, v60, v66, v71, v76, v82, v86, v90, v94, v98, v102, v106,
    v110,
    v114,
    v118,
    v122,
    v126,
    v130,
    v134,
    v138,
    v142,
    v146,
    v150,
    v153);
  OUTLINED_FUNCTION_46_19();
  sub_25747B4E4((uint64_t)&v153);
  char v22 = *(unsigned char *)(*(void *)(v2 + 16) + 160);
  OUTLINED_FUNCTION_16_45();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  char v24 = OUTLINED_FUNCTION_17_43(inited, (__n128)xmmword_2576ABB10);
  HIBYTE(v72) = v22;
  uint64_t v32 = OUTLINED_FUNCTION_19_40((uint64_t)v24, v25, v26, v27, v28, v29, v30, v31, v61, v67, v72, v77, v83, v87, v91, v95, v99, v103, v107,
          v111,
          v115,
          v119,
          v123,
          v127,
          v131,
          v135,
          v139,
          v143,
          v147,
          v151,
          v153);
  OUTLINED_FUNCTION_45_19(v32, v33, v34, v35, v36, v37, v38, v39, v62, v68, v73, v78);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v153);
  char v40 = *(unsigned char *)(*(void *)(v2 + 16) + 160);
  OUTLINED_FUNCTION_16_45();
  uint64_t v41 = (__n128 *)swift_initStackObject();
  long long v42 = OUTLINED_FUNCTION_162_1(v41, v63);
  HIBYTE(v74) = v40;
  uint64_t v50 = OUTLINED_FUNCTION_19_40((uint64_t)v42, v43, v44, v45, v46, v47, v48, v49, v63.n128_i64[0], v63.n128_i64[1], v74, v79, v84, v88, v92, v96, v100, v104, v108,
          v112,
          v116,
          v120,
          v124,
          v128,
          v132,
          v136,
          v140,
          v144,
          v148,
          v152,
          v153);
  OUTLINED_FUNCTION_45_19(v50, v51, v52, v53, v54, v55, v56, v57, v64, v69, v75, v80);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v153);
  *(void *)&long long v153 = v2;
  static Tensor.* infix(_:_:)();
  static Tensor.+ infix(_:_:)();
  swift_release();
  min(_:_:)();
  max(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t threshold(_:threshold:replacement:)(double a1, float a2)
{
  OUTLINED_FUNCTION_165_1();
  uint64_t v7 = *v6;
  uint64_t v8 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_23_34((uint64_t)v8);
  OUTLINED_FUNCTION_41_20();
  if ((v3 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v13[0] = v2;
    v13[1] = (uint64_t)v13;
    OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  v12[1] = v7;
  OUTLINED_FUNCTION_20_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(float *)(inited + 32) = a2;
  sub_25747B47C((uint64_t)v13, (uint64_t)v11);
  sub_25749F194(MEMORY[0x263F8EE78], inited, (uint64_t)v11, v12);
  sub_25747B4E4((uint64_t)v13);
  v13[0] = v12[0];
  sub_25765FDC4(v7, v4);
  v12[0] = v11[0];
  Tensor.replacing(with:where:)(v13, v12, v2);
  swift_release();
  return swift_release();
}

uint64_t hardswish(_:)()
{
  float v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v13[0] = v0;
    v13[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_30_31(v5, v9);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v13);
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_30_31(v6, v10);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v13);
  uint64_t v7 = v12;
  uint64_t v12 = v3;
  static Tensor.+ infix(_:_:)();
  uint64_t v11 = v13[0];
  relu6(_:)(&v11);
  swift_release();
  uint64_t v11 = v12;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v12 = v7;
  static Tensor./ infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2576629D4(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(*(void *)(result + 32) + 16);
      uint64_t v3 = *(void *)(*(void *)(a2 + 32) + 16);
      long long v20 = xmmword_2576AE5E0;
      long long v21 = xmmword_2576BF450;
      uint64_t v19 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
      char v22 = "init(id:gradientOperand:operand:creationSite:)";
      uint64_t v23 = 46;
      __int16 v24 = 2;
      type metadata accessor for ReLUGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v4 = sub_25753DB0C(0, 0, 0, v2, v3, (uint64_t)&v19);
      sub_25747B47C(v2 + 168, (uint64_t)v18);
      sub_25747B47C((uint64_t)v18, (uint64_t)v17);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_2575D60A8();
      sub_2575D614C((uint64_t)v14);
      swift_release();
      uint64_t v5 = v16;
      swift_retain();
      sub_2574718B0((uint64_t)v14);
      sub_2575D60A8();
      sub_2575D614C((uint64_t)v14);
      swift_release();
      char v6 = v15;
      swift_retain();
      sub_2574718B0((uint64_t)v14);
      type metadata accessor for TensorRepresentation();
      uint64_t v7 = swift_allocObject();
      v14[0] = 1;
      sub_257585404(v4, 0, (uint64_t)v17, 0x100000000, v5, v6, v7);
      uint64_t v9 = v8;
      type metadata accessor for TensorHandle();
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v9;
      swift_retain();
      sub_2576139A8();
      swift_release();
      sub_25747B4E4((uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_2574E8C6C();
      *(void *)(v11 + 32) = v10;
      *(void *)(v11 + 40) = v12;
      *(void *)(v11 + 48) = v13;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t clampedReLU(_:alpha:beta:)()
{
  OUTLINED_FUNCTION_20_38();
  uint64_t v3 = *v2;
  OUTLINED_FUNCTION_24_39();
  uint64_t v4 = MEMORY[0x263F8EE78];
  v32[7] = MEMORY[0x263F8EE78];
  LOBYTE(v28) = v5;
  sub_25747B47C((uint64_t)v34, (uint64_t)v32);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v34);
  OUTLINED_FUNCTION_24_39();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_43_21(inited, (__n128)xmmword_2576ABB10, v7, v8, v9, v10, v11, v12, v13, 1, 2, v24, v26, v28, v29, v30, v31);
  sub_25749F194(v4, (uint64_t)inited, (uint64_t)v32, &v33);
  sub_25747B4E4((uint64_t)v34);
  v34[0] = v33;
  sub_25749DDA8(v3, v1);
  uint64_t v33 = v32[0];
  min(_:_:)();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_24_39();
  uint64_t v14 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_43_21(v14, v23, v15, v16, v17, v18, v19, v20, v21, v23.n128_i64[0], v23.n128_i64[1], v25, v27, v28, v29, v30, v31);
  sub_25749F194(v4, (uint64_t)v14, (uint64_t)v32, &v33);
  sub_25747B4E4((uint64_t)v34);
  v32[0] = v33;
  uint64_t v33 = v3;
  min(_:_:)();
  swift_release();
  v32[0] = v34[0];
  static Tensor..> infix(_:_:)();
  uint64_t v28 = v33;
  Tensor.replacing(with:where:)(v32, &v28, v0);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_257662E30(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v14 = 0;
      memset(v13, 0, sizeof(v13));
      uint64_t v11 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)v13, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v13);
      uint64_t v4 = v12;
      v10[0] = v3;
      sigmoid(_:)(v13, v10);
      uint64_t v5 = *(void *)&v13[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      v10[0] = v2;
      uint64_t v12 = v4;
      *(void *)&v13[0] = v5;
      static Tensor.- infix(_:_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v11 = v12;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v7 = *(void *)&v13[0];
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_257662FC0(uint64_t result, uint64_t a2, BOOL a3)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(void *)(result + 32);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v13 = v5;
  BOOL v6 = a3;
  if (!a3) {
    BOOL v6 = *(void *)(*(void *)(*(void *)(v5 + 16) + 152) + 16) < 2uLL;
  }
  swift_retain();
  swift_retain();
  softmax(_:alongAxis:)(&v14, &v13, v6);
  uint64_t v14 = v4;
  uint64_t v12 = v4;
  static Tensor.* infix(_:_:)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2576ABB10;
  *(void *)(v7 + 32) = a3;
  Tensor.sum(alongAxes:)(v7, &v12);
  swift_release();
  swift_bridgeObjectRelease();
  static Tensor.- infix(_:_:)();
  swift_release();
  uint64_t v12 = v13;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v8 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2576ABB10;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_2574E8C6C();
  *(void *)(v9 + 32) = v8;
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

uint64_t silu(_:beta:)()
{
  OUTLINED_FUNCTION_165_1();
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v3 = OUTLINED_FUNCTION_6_62();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v1 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    *(void *)&long long v8 = v0;
    *((void *)&v8 + 1) = &v8;
    long long v9 = xmmword_2576B56F0;
    LOBYTE(v10) = 0;
    *((void *)&v10 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_25_35();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  int v11 = 0;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v8 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_162_1(inited, (__n128)xmmword_2576ABB10);
  sub_25747B47C((uint64_t)&v8, (uint64_t)v7);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v8);
  *(void *)&long long v8 = v2;
  v7[0] = v6;
  static Tensor.* infix(_:_:)();
  sigmoid(_:)();
  swift_release();
  static Tensor.* infix(_:_:)();
  swift_release();
  return swift_release();
}

uint64_t erf(_:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v23 = v0;
    uint64_t v24 = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_14_29();
    sub_25746BF88();
  }
  uint64_t v5 = *(void *)(v3 + 16);
  swift_retain();
  sub_25761BED4((uint64_t)sub_257663478);
  OUTLINED_FUNCTION_54_15();
  long long v25 = xmmword_2576BF430;
  OUTLINED_FUNCTION_53_14();
  swift_allocObject();
  int v6 = OUTLINED_FUNCTION_10_55();
  sub_25753D810(v6, v7, v8, 0, v5, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  sub_2576636A0(&qword_26A001208, (void (*)(uint64_t))type metadata accessor for ActivationOperation);
  uint64_t v18 = sub_25747B47C(v5 + 168, (uint64_t)v22);
  return OUTLINED_FUNCTION_24_24(v18, v19, v20, (uint64_t)v22);
}

uint64_t sub_257663478(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      uint64_t v4 = MEMORY[0x263F8EE78];
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v14);
      uint64_t v5 = v13;
      int v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      uint64_t v12 = v4;
      sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      uint64_t v13 = v5;
      *(void *)&long long v14 = v2;
      static Tensor.* infix(_:_:)();
      uint64_t v13 = v11[0];
      *(void *)&long long v14 = v3;
      pow(_:_:)();
      uint64_t v10 = v12;
      static Tensor.- prefix(_:)(&v10);
      swift_release();
      uint64_t v10 = v14;
      exp(_:)();
      swift_release();
      uint64_t v10 = v12;
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v7 = v14;
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_257663688()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_257663698(uint64_t a1, uint64_t a2)
{
  return sub_257662FC0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2576636A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2576636F4(_DWORD *a1, uint64_t a2, uint64_t *a3)
{
  return sub_25765FF4C(a1, a2, *a3);
}

uint64_t sub_257663710(_DWORD *a1, uint64_t a2)
{
  return sub_2576636F4(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_2_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,long long a21,long long a22,long long a23,int a24)
{
  a24 = 0;
  a22 = 0u;
  a23 = 0u;
  a21 = 0u;
  a19 = v24;
  return sub_25747B47C((uint64_t)&a21, (uint64_t)&a12);
}

void *OUTLINED_FUNCTION_6_62()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_10_55()
{
  return 0;
}

void OUTLINED_FUNCTION_11_56()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_15_45()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

double OUTLINED_FUNCTION_16_45()
{
  *(_DWORD *)(v0 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)uint64_t v0 = 0u;
  return result;
}

__n128 *OUTLINED_FUNCTION_17_43(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u32[0] = v2;
  return result;
}

char *OUTLINED_FUNCTION_18_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_19_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return sub_25747B47C((uint64_t)&a31, (uint64_t)&a24);
}

BOOL OUTLINED_FUNCTION_23_34(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

double OUTLINED_FUNCTION_24_39()
{
  *(_DWORD *)(v1 - 112) = 0;
  double result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  *uint64_t v0 = 0u;
  return result;
}

double OUTLINED_FUNCTION_27_29()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_28_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  return sub_25747B47C((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_30_31@<X0>(char a1@<W8>, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  HIBYTE(v11) = a1;
  return sub_25747B47C((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_31_28()
{
  *(void *)(v2 - 240) = v0;
  *(void *)(v2 - 352) = v1;
  return v2 - 240;
}

double OUTLINED_FUNCTION_32_26()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

double OUTLINED_FUNCTION_34_26()
{
  return 0.0;
}

void *OUTLINED_FUNCTION_39_27()
{
  return static ScalarType.floatingPointTypes.getter();
}

void *OUTLINED_FUNCTION_40_22()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_41_20()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_21(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  a1[1] = a2;
  a1[2].n128_u32[0] = v19;
  return sub_25747B47C(v17 - 160, (uint64_t)va);
}

char *OUTLINED_FUNCTION_45_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void OUTLINED_FUNCTION_46_19()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_47_21()
{
  *(unsigned char *)(v1 - 352) = *(unsigned char *)(*(void *)(v0 + 16) + 160);
}

void OUTLINED_FUNCTION_48_20()
{
  Tensor.cast(to:roundingRule:)();
}

void OUTLINED_FUNCTION_49_18()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_50_17@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v2 - 336) = *(unsigned char *)(a1 + 160);
  return v1;
}

uint64_t OUTLINED_FUNCTION_51_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_52_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_53_14()
{
  return type metadata accessor for ActivationOperation();
}

double OUTLINED_FUNCTION_55_14()
{
  return 0.0;
}

void OUTLINED_FUNCTION_57_11()
{
  *(void *)(v0 - 352) = *(void *)(v0 - 344);
}

char *OUTLINED_FUNCTION_60_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t Flatten.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*(void *)(*a1 + 16) + 152);
  if (!*(void *)(v4 + 16)) {
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)(v4 + 32);
  uint64_t v6 = 1;
  sub_2576A7810();
  sub_25746EC14();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + 32);
    uint64_t v10 = 1;
    while (1)
    {
      uint64_t v11 = *v9++;
      uint64_t v6 = v10 * v11;
      if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63) {
        break;
      }
      uint64_t v10 = v6;
      if (!--v8) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_10:
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    char v18 = -1;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v19 = 0;
    char v22 = -1;
    char v23 = 4;
    sub_2576A7810();
    sub_25746BF88();
  }
LABEL_6:
  swift_bridgeObjectRelease();
  uint64_t v15 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2576ABB30;
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v6;
  uint64_t v14 = v12;
  Tensor.reshaped(to:)(&v14, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_257663C94(uint64_t a1)
{
  unint64_t v2 = sub_257663E78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257663CD0(uint64_t a1)
{
  unint64_t v2 = sub_257663E78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Flatten.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005C40);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_257663E78();
  sub_2576A9230();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Flatten.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_257663E48(uint64_t a1)
{
  return Flatten.init(from:)(a1);
}

uint64_t sub_257663E60(void *a1)
{
  return Flatten.encode(to:)(a1);
}

unint64_t sub_257663E78()
{
  unint64_t result = qword_26A005C48;
  if (!qword_26A005C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C48);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flatten()
{
  return &type metadata for Flatten;
}

ValueMetadata *type metadata accessor for Flatten.CodingKeys()
{
  return &type metadata for Flatten.CodingKeys;
}

unint64_t sub_257663EE8()
{
  unint64_t result = qword_26A005C50;
  if (!qword_26A005C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C50);
  }
  return result;
}

unint64_t sub_257663F38()
{
  unint64_t result = qword_26A005C58;
  if (!qword_26A005C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C58);
  }
  return result;
}

uint64_t sub_257663F84()
{
  uint64_t v1 = 29295;
  if (*(unsigned char *)(v0 + 130) != 1) {
    uint64_t v1 = 7499640;
  }
  if (*(unsigned char *)(v0 + 130)) {
    return v1;
  }
  else {
    return 6581857;
  }
}

uint64_t sub_257663FC4()
{
  uint64_t result = 0x6C61757165;
  switch(*(unsigned char *)(v0 + 130))
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_6_63();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_1_88();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_10_56();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_2_74();
      break;
    case 5:
      uint64_t result = 0x6C61757145746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257664038(uint64_t a1)
{
  return sub_257664068(a1, (void (*)(uint64_t))sub_2574DFF00);
}

uint64_t sub_257664050(uint64_t a1)
{
  return sub_257664068(a1, (void (*)(uint64_t))sub_257647390);
}

uint64_t sub_257664068(uint64_t a1, void (*a2)(uint64_t))
{
  type metadata accessor for ContextManager();
  uint64_t v4 = sub_2575D60A8();
  OUTLINED_FUNCTION_15_46((uint64_t)v4, v5);
  swift_release();
  uint64_t v7 = v9[7];
  uint64_t v6 = v9[8];
  sub_2576A7810();
  sub_2574718B0((uint64_t)v9);
  a2(a1);
  type metadata accessor for TensorOperationIdentityGenerator();
  sub_257687294();
  if (v6)
  {
    v9[0] = v7;
    v9[1] = v6;
    sub_2576A7810();
    OUTLINED_FUNCTION_7_46();
    sub_2576A7B00();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13_49();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    OUTLINED_FUNCTION_12_49();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_11_57();
}

uint64_t sub_2576641A0()
{
  type metadata accessor for ContextManager();
  uint64_t v0 = sub_2575D60A8();
  OUTLINED_FUNCTION_15_46((uint64_t)v0, v1);
  swift_release();
  uint64_t v3 = v5[7];
  uint64_t v2 = v5[8];
  sub_2576A7810();
  sub_2574718B0((uint64_t)v5);
  type metadata accessor for TensorOperationIdentityGenerator();
  sub_257687294();
  if (v2)
  {
    v5[0] = v3;
    v5[1] = v2;
    sub_2576A7810();
    OUTLINED_FUNCTION_7_46();
    sub_2576A7B00();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13_49();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    OUTLINED_FUNCTION_12_49();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_11_57();
}

uint64_t sub_257664310(char a1)
{
  type metadata accessor for ContextManager();
  uint64_t v2 = sub_2575D60A8();
  OUTLINED_FUNCTION_15_46((uint64_t)v2, v3);
  swift_release();
  uint64_t v4 = v7[8];
  sub_2576A7810();
  sub_2574718B0((uint64_t)v7);
  if (a1) {
    uint64_t v5 = 0x6E696D677261;
  }
  else {
    uint64_t v5 = 0x78616D677261;
  }
  type metadata accessor for TensorOperationIdentityGenerator();
  sub_257687294();
  if (v4)
  {
    OUTLINED_FUNCTION_13_49();
    OUTLINED_FUNCTION_7_46();
    sub_2576A7B00();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    OUTLINED_FUNCTION_12_49();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7[0] = v5;
    v7[1] = 0xE600000000000000;
    sub_2576A7810();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    sub_2576A7B00();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_11_57();
}

uint64_t sub_257664454(char a1)
{
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v8);
  swift_release();
  uint64_t v3 = v10;
  unint64_t v2 = v11;
  sub_2576A7810();
  sub_2574718B0((uint64_t)&v8);
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v4 = 29295;
    }
    else {
      uint64_t v4 = 7499640;
    }
    if (a1 == 1) {
      unint64_t v5 = 0xE200000000000000;
    }
    else {
      unint64_t v5 = 0xE300000000000000;
    }
  }
  else
  {
    unint64_t v5 = 0xE300000000000000;
    uint64_t v4 = 6581857;
  }
  type metadata accessor for TensorOperationIdentityGenerator();
  uint64_t v6 = sub_257687294();
  if (v2)
  {
    uint64_t v8 = v3;
    unint64_t v9 = v2;
    sub_2576A7810();
    sub_2576A7B00();
    sub_2576A7B00();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v4;
    unint64_t v9 = v5;
    sub_2576A7810();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2576645EC()
{
  type metadata accessor for ContextManager();
  uint64_t v0 = sub_2575D60A8();
  OUTLINED_FUNCTION_15_46((uint64_t)v0, v1);
  swift_release();
  uint64_t v2 = v4[8];
  sub_2576A7810();
  sub_2574718B0((uint64_t)v4);
  type metadata accessor for TensorOperationIdentityGenerator();
  sub_257687294();
  if (v2)
  {
    OUTLINED_FUNCTION_13_49();
    OUTLINED_FUNCTION_7_46();
    sub_2576A7B00();
    OUTLINED_FUNCTION_7_46();
    sub_2576A8EA0();
    OUTLINED_FUNCTION_12_49();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4[0] = 0x4E6C616369676F6CLL;
    v4[1] = 0xEB000000005F746FLL;
    sub_2576A8EA0();
    sub_2576A7B00();
  }
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_11_57();
}

uint64_t sub_257664718()
{
  uint64_t result = 6579297;
  switch(*(unsigned char *)(v0 + 152))
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_3_67();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_5_67();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_4_75();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_8_62();
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_14_54(0x6978616Du);
      break;
    case 6:
      uint64_t result = OUTLINED_FUNCTION_14_54(0x696E696Du);
      break;
    case 7:
      uint64_t result = 0x6F6C75646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_2576647AC()
{
}

uint64_t sub_25766480C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257664844()
{
  sub_25766480C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseBinaryElementwiseOperation()
{
  return self;
}

uint64_t sub_25766489C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_2576648C4()
{
  return sub_25761B124();
}

uint64_t sub_257664910(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *(void *)a6;
  char v11 = *(unsigned char *)(a6 + 8);
  *(void *)(v9 + 136) = a8;
  *(void *)(v9 + 144) = a9;
  uint64_t v13 = v10;
  char v14 = v11;
  sub_257479EDC(a1, a2, a3, a4, a5, &v13, a7);
  return v9;
}

uint64_t sub_257664950()
{
  return sub_257664B98();
}

uint64_t type metadata accessor for BinaryElementwiseOperation()
{
  return self;
}

uint64_t sub_25766497C()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_2576649C8(char a1)
{
  uint64_t result = 6579297;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_3_67();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_5_67();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_4_75();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_8_62();
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_14_54(0x6978616Du);
      break;
    case 6:
      uint64_t result = OUTLINED_FUNCTION_14_54(0x696E696Du);
      break;
    case 7:
      uint64_t result = 0x6F6C75646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257664A60(unsigned __int8 *a1, char *a2)
{
  return sub_25757494C(*a1, *a2);
}

uint64_t sub_257664A6C()
{
  return sub_2576A3808(*v0);
}

uint64_t sub_257664A74()
{
  return sub_25746FDAC();
}

uint64_t sub_257664A7C(uint64_t a1)
{
  return sub_2575EEDB0(a1, *v1);
}

uint64_t sub_257664A84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766497C();
  *a1 = result;
  return result;
}

uint64_t sub_257664AB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2576649C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_257664AE0(void *a1@<X8>)
{
  *a1 = &unk_27065FF18;
}

uint64_t sub_257664AF0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = *a7;
  char v15 = *((unsigned char *)a7 + 8);
  *(unsigned char *)(v10 + 152) = a4;
  if (!a3) {
    a1 = sub_257664068(a4, (void (*)(uint64_t))sub_2576649C8);
  }
  uint64_t v17 = v14;
  char v18 = v15;
  sub_257664910(a1, a2, a3, a5, a6, (uint64_t)&v17, a8, a9, a10);
  return v10;
}

uint64_t sub_257664B90()
{
  return sub_257664B98();
}

uint64_t sub_257664B98()
{
  sub_25766480C();
  sub_25747A4E0(*(void *)(v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryArithmeticOperation()
{
  return self;
}

uint64_t sub_257664C04(uint64_t a1)
{
  return sub_257665470(a1, (void (*)(void))sub_257664718);
}

uint64_t sub_257664C3C()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_257664C88(char a1)
{
  uint64_t result = 0x6C61757165;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_6_63();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_1_88();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_10_56();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_2_74();
      break;
    case 5:
      uint64_t result = 0x6C61757145746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257664D00(unsigned __int8 *a1, char *a2)
{
  return sub_257574770(*a1, *a2);
}

uint64_t sub_257664D0C()
{
  return sub_2576A3820(*v0);
}

uint64_t sub_257664D14()
{
  return sub_25746FCAC();
}

uint64_t sub_257664D1C(uint64_t a1)
{
  return sub_2575EED98(a1, *v1);
}

uint64_t sub_257664D24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257664C3C();
  *a1 = result;
  return result;
}

uint64_t sub_257664D54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_257664C88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_257664D80(void *a1@<X8>)
{
  *a1 = &unk_27065FFF0;
}

uint64_t sub_257664D90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_9_63(a1, a2, a3, a4);
  if (!v7) {
    int v5 = sub_257664068(v8, (void (*)(uint64_t))sub_257664C88);
  }
  OUTLINED_FUNCTION_0_7(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return v4;
}

uint64_t type metadata accessor for BinaryComparisonOperation()
{
  return self;
}

uint64_t sub_257664E14(uint64_t a1)
{
  return sub_257665470(a1, (void (*)(void))sub_257663FC4);
}

uint64_t sub_257664E4C()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_257664E98(char a1)
{
  if (!a1) {
    return 6581857;
  }
  if (a1 == 1) {
    return 29295;
  }
  return 7499640;
}

uint64_t sub_257664ED4(unsigned __int8 *a1, char *a2)
{
  return sub_257574C64(*a1, *a2);
}

uint64_t sub_257664EE0()
{
  return sub_2576A3838();
}

uint64_t sub_257664EE8()
{
  return sub_25746FF7C();
}

uint64_t sub_257664EF0()
{
  return sub_2575EEE40();
}

uint64_t sub_257664EF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257664E4C();
  *a1 = result;
  return result;
}

uint64_t sub_257664F28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_257664E98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_257664F54(void *a1@<X8>)
{
  *a1 = &unk_270660080;
}

uint64_t sub_257664F64(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  OUTLINED_FUNCTION_9_63(a1, a2, a3, a4);
  if (!v7) {
    int v5 = sub_257664454(v8);
  }
  OUTLINED_FUNCTION_0_7(v5, v6, v7, v8, v9, v10, v11, v12, v14, v15);
  return v4;
}

uint64_t sub_257664FB0()
{
  sub_25766480C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryLogicalOperation()
{
  return self;
}

unsigned char *sub_257665008(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576650D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for BinaryLogicalOperation.Operator()
{
}

unsigned char *sub_257665108(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576651D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

void type metadata accessor for BinaryComparisonOperation.Operator()
{
}

unsigned char *sub_257665208(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576652D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

void type metadata accessor for BinaryArithmeticOperation.Operator()
{
}

uint64_t sub_257665308()
{
  return sub_257587540(&qword_26A005C60, &qword_26A005C68);
}

unint64_t sub_257665334()
{
  unint64_t result = qword_26A005C70;
  if (!qword_26A005C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C70);
  }
  return result;
}

uint64_t sub_257665380()
{
  return sub_257587540(&qword_26A005C78, &qword_26A005C80);
}

unint64_t sub_2576653AC()
{
  unint64_t result = qword_26A005C88;
  if (!qword_26A005C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005C88);
  }
  return result;
}

uint64_t sub_2576653F8()
{
  return sub_257587540(&qword_26A005C90, &qword_26A005C98);
}

unint64_t sub_257665424()
{
  unint64_t result = qword_26A005CA0;
  if (!qword_26A005CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005CA0);
  }
  return result;
}

uint64_t sub_257665470(uint64_t a1, void (*a2)(void))
{
  a2();
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2576654C4(uint64_t a1)
{
  return sub_257665470(a1, (void (*)(void))sub_257663F84);
}

uint64_t sub_2576654FC(uint64_t a1)
{
  uint64_t result = sub_2576656B4(&qword_26A001D50, (void (*)(void))type metadata accessor for BinaryLogicalOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257665554(uint64_t a1)
{
  uint64_t result = sub_2576656B4((unint64_t *)&qword_26A001D48, (void (*)(void))type metadata accessor for BinaryComparisonOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576655AC(uint64_t a1)
{
  uint64_t result = sub_2576656B4((unint64_t *)&qword_26A003368, (void (*)(void))type metadata accessor for BinaryArithmeticOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257665604(uint64_t a1)
{
  uint64_t result = sub_2576656B4(&qword_26A005CA8, (void (*)(void))type metadata accessor for BinaryElementwiseOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25766565C(uint64_t a1)
{
  uint64_t result = sub_2576656B4(&qword_26A005CB0, (void (*)(void))type metadata accessor for BaseBinaryElementwiseOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576656B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_88()
{
  return 0x4572657461657267;
}

uint64_t OUTLINED_FUNCTION_2_74()
{
  return 0x617571457373656CLL;
}

uint64_t OUTLINED_FUNCTION_3_67()
{
  return 0x7463617274627573;
}

uint64_t OUTLINED_FUNCTION_4_75()
{
  return 0x6E6F697369766964;
}

uint64_t OUTLINED_FUNCTION_5_67()
{
  return 0x796C7069746C756DLL;
}

uint64_t OUTLINED_FUNCTION_6_63()
{
  return 0x72657461657267;
}

uint64_t OUTLINED_FUNCTION_8_62()
{
  return 0x7265776F70;
}

void OUTLINED_FUNCTION_9_63(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 130) = a4;
}

uint64_t OUTLINED_FUNCTION_10_56()
{
  return 1936942444;
}

uint64_t OUTLINED_FUNCTION_11_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_49()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_13_49()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_14_54(unsigned int a1)
{
  return a1 | 0x6D756D00000000;
}

uint64_t OUTLINED_FUNCTION_15_46(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  return sub_2575D614C((uint64_t)va);
}

uint64_t sub_257665838(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 16);
  unint64_t v28 = *(void *)(a1 + 16);
  if (v4 >= v28) {
    unint64_t v5 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v5 = *(void *)(a2 + 16);
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  if (v5)
  {
    unsigned int v6 = (uint64_t *)(a1 + 32);
    uint64_t v7 = (uint64_t *)(a2 + 32);
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v8 = v5;
    uint64_t v9 = a1;
    uint64_t v10 = a2;
    unint64_t v11 = v28;
    while (1)
    {
      uint64_t v13 = *v6++;
      uint64_t v12 = v13;
      uint64_t v15 = *v7++;
      uint64_t v14 = v15;
      uint64_t v16 = v12 / v15;
      if (v15 == -1)
      {
        if (v12 == 0x8000000000000000)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          if (!v12)
          {
            __break(1u);
            __break(1u);
          }
LABEL_34:
          sub_2576A8B60();
          __break(1u);
LABEL_35:
          sub_25746BF88();
        }
      }
      else
      {
        if (!v14) {
          goto LABEL_32;
        }
        if (v12 != v16 * v14) {
          goto LABEL_34;
        }
      }
      unint64_t v17 = *(void *)(v29 + 16);
      if (v17 >= *(void *)(v29 + 24) >> 1)
      {
        uint64_t v24 = v10;
        uint64_t v26 = v9;
        sub_2574E7154();
        unint64_t v11 = v28;
        uint64_t v10 = v24;
        uint64_t v9 = v26;
      }
      *(void *)(v29 + 16) = v17 + 1;
      *(void *)(v29 + 8 * v17 + 32) = v16;
      if (!--v8) {
        goto LABEL_16;
      }
    }
  }
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v9 = a1;
  uint64_t v10 = a2;
  unint64_t v11 = v28;
LABEL_16:
  if (v5 != *(void *)(v9 + 16))
  {
    uint64_t v19 = v9 + 32;
    uint64_t v20 = v10 + 32;
    while (v5 < v11)
    {
      if (v4 == v5) {
        goto LABEL_17;
      }
      if (v5 >= v4) {
        break;
      }
      uint64_t v12 = *(void *)(v19 + 8 * v5);
      uint64_t v21 = *(void *)(v20 + 8 * v5);
      uint64_t v22 = v12 / v21;
      if (v21 == -1)
      {
        if (v12 == 0x8000000000000000) {
          goto LABEL_31;
        }
      }
      else if (v12 % v21)
      {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v29 + 16);
      if (v23 >= *(void *)(v29 + 24) >> 1)
      {
        uint64_t v25 = v10;
        uint64_t v27 = v9;
        sub_2574E7154();
        unint64_t v11 = v28;
        uint64_t v10 = v25;
        uint64_t v9 = v27;
      }
      ++v5;
      *(void *)(v29 + 16) = v23 + 1;
      *(void *)(v29 + 8 * v23 + 32) = v22;
      if (v5 == *(void *)(v9 + 16)) {
        goto LABEL_17;
      }
    }
    goto LABEL_35;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_257665B40()
{
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v3);
  swift_release();
  uint64_t v0 = swift_release();
  v3[10] = 0;
  uint64_t v1 = (void *)MEMORY[0x25A2BA130](v0);
  sub_25756E91C();
  return sub_2574718B0((uint64_t)v3);
}

uint64_t sub_257665BEC(uint64_t a1, void *a2, char a3)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(*(void *)(v6 + 16) + 152);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v8 < -v10 || v8 >= v10)
    {
LABEL_10:
      sub_2576A7810();
      long long v19 = (unint64_t)v8;
      *(void *)&long long v20 = 0;
      BYTE8(v20) = -1;
      uint64_t v22 = 0;
      long long v21 = (unint64_t)v10;
      char v23 = -1;
      char v24 = 4;
      sub_2576A7810();
      OUTLINED_FUNCTION_6_10();
    }
    unint64_t v11 = (uint64_t *)(a1 + 40);
    uint64_t v12 = v7 - 1;
    float v13 = 1.0;
    while (1)
    {
      uint64_t v14 = (v10 & (v8 >> 63)) + v8;
      if (v14 < 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
      }
      if (v14 >= (unint64_t)v10) {
        goto LABEL_18;
      }
      float v13 = v13 * (float)*(uint64_t *)(v9 + 32 + 8 * v14);
      if (!v12) {
        break;
      }
      uint64_t v8 = *v11;
      if (*v11 >= -v10)
      {
        ++v11;
        --v12;
        if (v8 < v10) {
          continue;
        }
      }
      goto LABEL_10;
    }
  }
  else
  {
    float v13 = 1.0;
  }
  if (!*a2)
  {
    v18[0] = v6;
    Tensor.mean(alongAxes:)();
  }
  if (a3) {
    float v13 = v13 + -1.0;
  }
  v18[0] = v6;
  swift_retain();
  static Tensor.- infix(_:_:)();
  Tensor.squared()();
  swift_release();
  Tensor.sum(alongAxes:)(a1, (uint64_t *)&v19);
  swift_release();
  LODWORD(v22) = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v19 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(float *)(inited + 32) = v13;
  sub_257476E94((uint64_t)&v19, (uint64_t)v18, (uint64_t *)&unk_26A004250);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_2574B92D8((uint64_t)&v19, (uint64_t *)&unk_26A004250);
  *(void *)&long long v19 = v17;
  static Tensor./ infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_257665E9C(uint64_t a1, uint64_t a2)
{
}

float BatchNorm.momentum.getter()
{
  return *(float *)v0;
}

uint64_t BatchNorm.scale.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t BatchNorm.scale.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_86_9(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*BatchNorm.scale.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 8));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_25766601C;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t BatchNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 8), a1);
}

uint64_t BatchNorm.offset.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t sub_2576660C4()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

uint64_t BatchNorm.offset.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_84_7(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*BatchNorm.offset.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 24));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2576661D0;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t BatchNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 24), a1);
}

uint64_t BatchNorm.featureCount.getter()
{
  uint64_t v2 = *(void *)(v1 + 56);
  OUTLINED_FUNCTION_34_27();
  if ((*(unsigned char *)(v2 + 24) & 1) == 0) {
    return *(void *)v0;
  }
  OUTLINED_FUNCTION_17_0();
  uint64_t result = OUTLINED_FUNCTION_23_35();
  __break(1u);
  return result;
}

float BatchNorm.epsilon.getter()
{
  return *(float *)(v0 + 36);
}

uint64_t BatchNorm.runningMean.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t BatchNorm.runningMean.setter(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  v4[0] = *a1;
  v4[1] = v2;
  return LayerState.wrappedValue.setter(v4);
}

uint64_t (*BatchNorm.runningMean.modify(uint64_t *a1))()
{
  uint64_t v3 = *(void *)(v1 + 40);
  a1[1] = v3;
  uint64_t v4 = *(void *)(v3 + 32);
  OUTLINED_FUNCTION_82_8();
  if (v5)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      *a1 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      sub_257486C70(v4);
      return sub_2576663E8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t BatchNorm.$runningMean.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_12_27(*(void *)(v1 + 40), a1);
}

uint64_t BatchNorm.runningVariance.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

void sub_257666488(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v4);
  OUTLINED_FUNCTION_77_10();
}

uint64_t sub_257666524(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v6 = *a1;
  uint64_t v7 = *((void *)a2 + 1);
  char v8 = *((unsigned char *)a2 + 16);
  char v9 = *((unsigned char *)a2 + 17);
  uint64_t v10 = *((void *)a2 + 3);
  char v11 = *((unsigned char *)a2 + 32);
  char v12 = *((unsigned char *)a2 + 33);
  int v13 = a2[9];
  uint64_t v14 = *((void *)a2 + 7);
  char v15 = *((unsigned char *)a2 + 64);
  uint64_t v16 = *((void *)a2 + 9);
  int v19 = *a2;
  uint64_t v20 = v7;
  char v21 = v8;
  char v22 = v9;
  uint64_t v23 = v10;
  char v24 = v11;
  char v25 = v12;
  int v26 = v13;
  long long v27 = *(_OWORD *)(a2 + 10);
  uint64_t v28 = v14;
  char v29 = v15;
  uint64_t v30 = v16;
  uint64_t v18 = v6;
  swift_retain();
  return a5(&v18);
}

uint64_t BatchNorm.runningVariance.setter(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 48);
  v4[0] = *a1;
  v4[1] = v2;
  return LayerState.wrappedValue.setter(v4);
}

uint64_t (*BatchNorm.runningVariance.modify(uint64_t *a1))()
{
  uint64_t v3 = *(void *)(v1 + 48);
  a1[1] = v3;
  uint64_t v4 = *(void *)(v3 + 32);
  OUTLINED_FUNCTION_82_8();
  if (v5)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      *a1 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      sub_257486C70(v4);
      return sub_2576663E8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_2576666C8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  if (a2)
  {
    swift_retain();
    LayerState.wrappedValue.setter(&v3);
    swift_release();
  }
  else
  {
    LayerState.wrappedValue.setter(&v3);
  }
  return swift_release();
}

uint64_t BatchNorm.$runningVariance.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_12_27(*(void *)(v1 + 48), a1);
}

uint64_t BatchNorm.isEveryParameterInitialized.getter()
{
  if (*(unsigned char *)(*(void *)(v0 + 72) + 16))
  {
    char v1 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_33_25();
    OUTLINED_FUNCTION_43_22();
  }
  return v1 & 1;
}

void BatchNorm.learningPhase.getter(unsigned char *a1@<X8>)
{
}

unsigned char *BatchNorm.learningPhase.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

uint64_t (*BatchNorm.learningPhase.modify())(void)
{
  return nullsub_1;
}

void sub_2576667CC()
{
  OUTLINED_FUNCTION_52_16();
  int v1 = v0;
  int v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *v6;
  char v8 = *((unsigned char *)v6 + 8);
  char v26 = *((unsigned char *)v6 + 9);
  uint64_t v10 = *v9;
  char v24 = *((unsigned char *)v9 + 8);
  char v11 = *((unsigned char *)v9 + 9);
  uint64_t v13 = *v12;
  uint64_t v25 = *v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CB8);
  uint64_t v15 = OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_53_15(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CC0);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_18_42();
  if (v18)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_7:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_13_50();
    OUTLINED_FUNCTION_6_10();
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_7;
  }
  uint64_t v19 = v16;
  uint64_t v20 = OUTLINED_FUNCTION_80_7(*(void *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x10));
  if (!v21) {
    goto LABEL_8;
  }
  uint64_t v22 = v7;
  uint64_t v23 = *(void *)(v20 + 32);
  OUTLINED_FUNCTION_4_61();
  *(void *)(v15 + 16) = v23;
  *(unsigned char *)(v15 + 24) = 0;
  *(_DWORD *)uint64_t v5 = v3;
  *(void *)(v5 + 8) = v10;
  *(unsigned char *)(v5 + 16) = v24;
  *(unsigned char *)(v5 + 17) = v11;
  *(void *)(v5 + 24) = v22;
  *(unsigned char *)(v5 + 32) = v8;
  *(unsigned char *)(v5 + 33) = v26;
  *(_DWORD *)(v5 + 36) = v1;
  *(void *)(v5 + 40) = v13;
  *(void *)(v5 + 48) = v25;
  *(void *)(v5 + 56) = v15;
  *(unsigned char *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = v19;
  OUTLINED_FUNCTION_48_21();
}

void BatchNorm.init(momentum:offset:scale:epsilon:runningMean:runningVariance:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  uint64_t v12 = *a3;
  uint64_t v13 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CB8);
  uint64_t v14 = OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_91_7(v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CC0);
  uint64_t v15 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v15 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  uint64_t v17 = 0;
  *(_OWORD *)(inited + 16) = xmmword_2576ABB50;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 48) = v12;
  char v18 = *(void **)(*(void *)(v13 + 16) + 152);
  uint64_t v19 = v18[2];
  while (1)
  {
    uint64_t v20 = *(void **)(*(void *)(*(void *)(inited + 32 + 8 * v17) + 16) + 152);
    if (v20[2] != v19) {
      break;
    }
    if (v19 && v20 != v18)
    {
      if (v20[4] != v18[4]) {
        break;
      }
      if (v19 != 1)
      {
        if (v20[5] != v18[5]) {
          break;
        }
        uint64_t v21 = v20 + 6;
        uint64_t v22 = v19 - 2;
        uint64_t v23 = v18 + 6;
        while (v22)
        {
          uint64_t v25 = *v21++;
          uint64_t v24 = v25;
          uint64_t v26 = *v23++;
          --v22;
          if (v24 != v26) {
            goto LABEL_13;
          }
        }
      }
    }
    if (++v17 == 3) {
      goto LABEL_14;
    }
  }
LABEL_13:
  swift_setDeallocating();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2575AEC4C();
  LODWORD(v68) = 0;
  uint64_t v64 = 99;
  OUTLINED_FUNCTION_26_3();
  __break(1u);
LABEL_14:
  swift_setDeallocating();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2575AEC4C();
  type metadata accessor for LayerVariableReference();
  uint64_t v27 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_28_33(v27, v28, v29, v30, v31, v32, v33, v34, v64, v68, v72, v15, v13, v10, v83, v87, v91, v95, v99,
    v103,
    v107,
    v111,
    v115,
    v119,
    v123,
    v127,
    v131,
    *(int *)v135,
    v135[4]);
  uint64_t v35 = OUTLINED_FUNCTION_1_4();
  uint64_t v43 = OUTLINED_FUNCTION_28_33(v35, v36, v37, v38, v39, v40, v41, v42, v65, v69, v73, v76, v80, v11, v84, v88, v92, v96, v100,
          v104,
          v108,
          v112,
          v116,
          v120,
          v124,
          v128,
          v132,
          v136,
          v139);
  OUTLINED_FUNCTION_1_4();
  uint64_t v44 = OUTLINED_FUNCTION_99_6();
  uint64_t v52 = OUTLINED_FUNCTION_28_33(v44, v45, v46, v47, v48, v49, v50, v51, v66, v70, v74, v77, v81, v12, v85, v89, v93, v97, v101,
          v105,
          v109,
          v113,
          v117,
          v121,
          v125,
          v129,
          v133,
          v137,
          v140);
  uint64_t v53 = OUTLINED_FUNCTION_1_4();
  uint64_t v61 = OUTLINED_FUNCTION_28_33(v53, v54, v55, v56, v57, v58, v59, v60, v67, v71, v75, v78, v82, v82, v86, v90, v94, v98, v102,
          v106,
          v110,
          v114,
          v118,
          v122,
          v126,
          v130,
          v134,
          v138,
          v141);
  uint64_t v62 = *(void *)(*(void *)(v12 + 16) + 152);
  sub_2576A7810();
  swift_release();
  if (!*(void *)(v62 + 16))
  {
    OUTLINED_FUNCTION_37_22();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v63 = *(void *)(v62 + 32);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_61();
  *(void *)(v14 + 16) = v63;
  *(unsigned char *)(v14 + 24) = 0;
  *(float *)a5 = a6;
  *(void *)(a5 + 8) = v43;
  OUTLINED_FUNCTION_79_9();
  *(float *)(a5 + 36) = a7;
  *(void *)(a5 + 40) = v52;
  *(void *)(a5 + 48) = v61;
  *(void *)(a5 + 56) = v14;
  *(unsigned char *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = v79;
}

uint64_t BatchNorm.init(offsetInitializer:scaleInitializer:momentum:epsilon:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CB8);
  uint64_t v6 = OUTLINED_FUNCTION_5_48();
  *(void *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 24) = 1;
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CC0);
  uint64_t v7 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v7 + 16) = 0;
  *(void *)(a1 + 72) = v7;
  *(float *)a1 = a2;
  *(float *)(a1 + 36) = a3;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t v8 = OUTLINED_FUNCTION_99_6();
  *(void *)(a1 + 24) = sub_25748FBC8(v8);
  *(_WORD *)(a1 + 32) = 256;
  OUTLINED_FUNCTION_1_4();
  uint64_t v9 = OUTLINED_FUNCTION_58_1();
  *(void *)(a1 + 8) = sub_25748FBC8(v9);
  *(_WORD *)(a1 + 16) = 256;
  type metadata accessor for ParameterInitializer();
  sub_25748C880();
  OUTLINED_FUNCTION_1_4();
  *(void *)(a1 + 40) = OUTLINED_FUNCTION_55_15();
  sub_25748C9B8();
  OUTLINED_FUNCTION_1_4();
  uint64_t v10 = OUTLINED_FUNCTION_55_15();
  swift_release();
  swift_release();
  *(void *)(a1 + 48) = v10;
  uint64_t result = OUTLINED_FUNCTION_4_61();
  *(void *)(v6 + 16) = 0;
  *(unsigned char *)(v6 + 24) = 1;
  return result;
}

uint64_t BatchNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_35_23(a1);
  if (!(!v4 & v3))
  {
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_51_18(v7, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_51_18(v8, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_51_18(v9, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_51_18(v10, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v12);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = OUTLINED_FUNCTION_4_61();
  *(void *)(v5 + 16) = v6;
  *(unsigned char *)(v5 + 24) = 0;
  return result;
}

uint64_t BatchNorm.forward(_:)()
{
  OUTLINED_FUNCTION_101_6();
  memcpy(v2, v3, 0x50uLL);
  unsigned __int8 v4 = *(unsigned char *)(*(void *)(v1 + 16) + 160);
  uint64_t v5 = static ScalarType.floatingPointTypes.getter();
  BOOL v6 = sub_2575A0094(v4, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v19 = v0;
    *(void *)&long long v20 = &v19;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_17_44();
    goto LABEL_6;
  }
  if ((unint64_t)(*(void *)(*(void *)(*(void *)(v1 + 16) + 152) + 16) - 6) < 0xFFFFFFFFFFFFFFFCLL)
  {
    uint64_t v19 = *(void *)(*(void *)(*(void *)(v1 + 16) + 152) + 16);
    long long v20 = xmmword_2576AD000;
    LOBYTE(v21) = 0;
    long long v22 = xmmword_2576ABB00;
    LOBYTE(v23) = 1;
    BYTE4(v30) = 7;
    OUTLINED_FUNCTION_17_44();
LABEL_6:
    sub_25746BF88();
  }
  sub_2575187A4((uint64_t)v31);
  uint64_t v7 = swift_retain();
  uint64_t v15 = OUTLINED_FUNCTION_96_7(v7, v8, v9, v10, v11, v12, v13, v14, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, *((uint64_t *)&v22 + 1), v23, v24, v25,
          v26,
          v27,
          v28,
          v29,
          v30,
          v31[0]);
  return sub_2575D59EC(v15);
}

unsigned char *sub_257667054(char *a1)
{
  char v2 = *a1;
  return BatchNorm.learningPhase.setter(&v2);
}

uint64_t (*sub_257667080())(void)
{
  return nullsub_1;
}

void sub_2576670A0()
{
  OUTLINED_FUNCTION_20_34();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for ResolutionDependencies();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = MEMORY[0x263F8EE78];
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = v7;
  uint64_t v78 = v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = sub_25769455C(0, *(void *)(*(void *)(v8 + 152) + 16));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582A78();
    uint64_t v9 = v49;
  }
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 < 2)
  {
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v57 = v1;
  uint64_t v11 = *(void *)(v3 + 40);
  unint64_t v12 = v10 - 1;
  sub_25760A020(v9 + 48, v10 - 2, v9 + 40);
  *(void *)(v9 + 16) = v12;
  uint64_t v50 = v11;
  OUTLINED_FUNCTION_18_42();
  if (!v14)
  {
    if ((v13 & 0x8000000000000000) == 0) {
      goto LABEL_55;
    }
    uint64_t v51 = *(void *)(v3 + 48);
    OUTLINED_FUNCTION_89_8();
    if (v14) {
      goto LABEL_54;
    }
    if ((v16 & 0x8000000000000000) == 0) {
      goto LABEL_55;
    }
    uint64_t v17 = *(void *)(*(void *)(v3 + 8) + 32);
    if ((~v17 & 0xF000000000000007) == 0) {
      goto LABEL_54;
    }
    if ((v17 & 0x8000000000000000) == 0) {
      goto LABEL_55;
    }
    uint64_t v18 = *(void *)(*(void *)(v3 + 24) + 32);
    if ((~v18 & 0xF000000000000007) == 0) {
      goto LABEL_54;
    }
    if ((v18 & 0x8000000000000000) == 0) {
      goto LABEL_55;
    }
    uint64_t v19 = *(void *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v20 = *(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    int v58 = *(unsigned __int8 *)(v3 + 64);
    uint64_t v54 = *(void *)(v3 + 8);
    uint64_t v55 = *(void *)(v3 + 24);
    uint64_t v52 = *(void *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v53 = *(void *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    if (*(unsigned char *)(v3 + 64))
    {
      if (*(unsigned char *)(v3 + 64) == 1)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
LABEL_17:
        char v22 = 1;
LABEL_21:
        LOBYTE(v60) = v22;
        type metadata accessor for ContextManager();
        sub_2575D60A8();
        OUTLINED_FUNCTION_71_9();
        swift_release();
        OUTLINED_FUNCTION_64_11();
        if (v65) {
          int v23 = *(unsigned __int8 *)(v65 + 24);
        }
        else {
          int v23 = 0;
        }
        float v24 = *(float *)v3;
        float v25 = *(float *)(v3 + 36);
        sub_2574718B0((uint64_t)v64);
        if (v23)
        {
          uint64_t v26 = swift_allocObject();
          *(unsigned char *)(v26 + 16) = v58;
          *(void *)(v26 + 24) = v78;
          *(float *)(v26 + 32) = v24;
          *(void *)(v26 + 40) = v9;
          *(float *)(v26 + 48) = v25;
          swift_retain();
          sub_2576A7810();
          uint64_t v27 = sub_2576706AC;
        }
        else
        {
          uint64_t v27 = 0;
          uint64_t v26 = 0;
        }
        long long v73 = xmmword_2576BFA50;
        long long v74 = xmmword_2576BFA60;
        uint64_t v72 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NormalizationOps.swift";
        uint64_t v75 = "init(id:input:runningMean:runningVariance:scale:offset:learningPhase:momentum:normalizedAxes:epsilon:creat"
              "ionSite:backward:)";
        uint64_t v76 = 124;
        __int16 v77 = 2;
        type metadata accessor for BatchNormOperation();
        swift_allocObject();
        uint64_t v28 = sub_257612E0C(0, 0, 0, v8, v53, v52, v19, v20, v24, v25, &v60, v9, (uint64_t)&v72, (uint64_t)v27, v26);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_2576ABB50;
        uint64_t v30 = OUTLINED_FUNCTION_18_7(v54);
        if (v14) {
          goto LABEL_54;
        }
        if ((v30 & 0x8000000000000000) == 0) {
          goto LABEL_55;
        }
        *(void *)(v29 + 32) = v30 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v32 = *(void *)(v55 + 32);
        if ((~v32 & 0xF000000000000007) == 0) {
          goto LABEL_54;
        }
        long long v56 = v31;
        if ((v32 & 0x8000000000000000) == 0) {
          goto LABEL_55;
        }
        *(void *)(v29 + 40) = v32 & 0x7FFFFFFFFFFFFFFFLL;
        *(void *)(v29 + 48) = v57;
        sub_257486C70(v30);
        sub_257486C70(v32);
        swift_retain();
        sub_2576A7810();
        uint64_t v33 = 32;
        while (1)
        {
          sub_257476E94(*(void *)(*(void *)(v29 + v33) + 16) + 168, (uint64_t)&v66, (uint64_t *)&unk_26A004250);
          if (*((void *)&v67 + 1)) {
            break;
          }
          sub_2574B92D8((uint64_t)&v66, (uint64_t *)&unk_26A004250);
          v33 += 8;
          if (v33 == 56)
          {
            swift_bridgeObjectRelease();
            int v63 = 0;
            long long v61 = 0u;
            long long v62 = 0u;
            long long v60 = 0u;
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRelease();
        long long v60 = v66;
        long long v61 = v67;
        long long v62 = v68;
        int v63 = v69;
LABEL_36:
        swift_bridgeObjectRelease();
        sub_257476E94((uint64_t)&v60, (uint64_t)v64, (uint64_t *)&unk_26A004250);
        sub_257476E94((uint64_t)v64, (uint64_t)v59, (uint64_t *)&unk_26A004250);
        swift_retain();
        sub_2575D60A8();
        OUTLINED_FUNCTION_71_9();
        swift_release();
        uint64_t v34 = v71;
        swift_retain();
        sub_2574718B0((uint64_t)&v66);
        sub_2575D60A8();
        OUTLINED_FUNCTION_71_9();
        swift_release();
        uint64_t v35 = v70;
        swift_retain();
        sub_2574718B0((uint64_t)&v66);
        type metadata accessor for TensorRepresentation();
        uint64_t v36 = swift_allocObject();
        LOBYTE(v66) = 1;
        uint64_t v37 = sub_257585724(v28, 0, v59, 0x100000000, v34, v35, v36);
        type metadata accessor for TensorHandle();
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v37;
        swift_retain();
        sub_2576139A8();
        swift_release();
        uint64_t v39 = sub_2574B92D8((uint64_t)v64, (uint64_t *)&unk_26A004250);
        if (v58)
        {
          if (v58 != 1) {
            goto LABEL_51;
          }
LABEL_41:
          MEMORY[0x270FA5388](v39);
          sub_257665B40();
          uint64_t v41 = swift_allocObject();
          *(_OWORD *)(v41 + 16) = v56;
          uint64_t v42 = *(void *)(v50 + 32);
          if ((~v42 & 0xF000000000000007) == 0) {
            goto LABEL_54;
          }
          if (v42 < 0)
          {
            uint64_t v43 = v41;
            *(void *)(v41 + 32) = v42 & 0x7FFFFFFFFFFFFFFFLL;
            uint64_t v44 = *(void *)(v51 + 32);
            OUTLINED_FUNCTION_82_8();
            if (v14) {
              goto LABEL_54;
            }
            if (v44 < 0)
            {
              *(void *)(v43 + 40) = v44 & 0x7FFFFFFFFFFFFFFFLL;
              *(void *)(v43 + 48) = v38;
              swift_retain();
              sub_257486C70(v42);
              sub_257486C70(v44);
              sub_2575CA228(v43);
              swift_setDeallocating();
              sub_2575AEC4C();
              uint64_t v45 = swift_allocObject();
              *(_OWORD *)(v45 + 16) = xmmword_2576ABB30;
              uint64_t v46 = *(void *)(v50 + 32);
              if ((~v46 & 0xF000000000000007) == 0) {
                goto LABEL_54;
              }
              if (v46 < 0)
              {
                *(void *)(v45 + 32) = v46 & 0x7FFFFFFFFFFFFFFFLL;
                uint64_t v47 = *(void *)(v51 + 32);
                OUTLINED_FUNCTION_82_8();
                if (!v14)
                {
                  if (v47 < 0)
                  {
                    *(void *)(v45 + 40) = v47 & 0x7FFFFFFFFFFFFFFFLL;
                    sub_257486C70(v48);
                    sub_257486C70(v47);
                    sub_2575CA228(v45);
                    swift_release();
                    swift_setDeallocating();
                    sub_2575AEC4C();
LABEL_52:
                    swift_release();
                    sub_2574B92D8((uint64_t)&v60, (uint64_t *)&unk_26A004250);
                    *uint64_t v5 = v38;
                    OUTLINED_FUNCTION_18_36();
                    return;
                  }
                  goto LABEL_55;
                }
                goto LABEL_54;
              }
            }
          }
LABEL_55:
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_35_1();
          goto LABEL_56;
        }
        sub_2575D60A8();
        OUTLINED_FUNCTION_71_9();
        swift_release();
        OUTLINED_FUNCTION_64_11();
        if (v65)
        {
          char v40 = *(unsigned char *)(v65 + 24);
          uint64_t v39 = sub_2574718B0((uint64_t)v64);
          if (v40) {
            goto LABEL_41;
          }
        }
        else
        {
          sub_2574718B0((uint64_t)v64);
        }
LABEL_51:
        swift_release();
        goto LABEL_52;
      }
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      type metadata accessor for ContextManager();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2575D60A8();
      OUTLINED_FUNCTION_71_9();
      swift_release();
      OUTLINED_FUNCTION_64_11();
      if (v65)
      {
        char v21 = *(unsigned char *)(v65 + 24);
        sub_2574718B0((uint64_t)v64);
        if (v21) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_2574718B0((uint64_t)v64);
      }
    }
    char v22 = 2;
    goto LABEL_21;
  }
LABEL_54:
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_50_0();
LABEL_56:
  sub_2576A8B60();
  __break(1u);
}

uint64_t sub_2576678B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_257476E94(a3, (uint64_t)v21, (uint64_t *)&unk_26A004250);
  sub_257476E94((uint64_t)v21, (uint64_t)v20, (uint64_t *)&unk_26A004250);
  type metadata accessor for ContextManager();
  sub_2575187A4(a1);
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v17);
  swift_release();
  uint64_t v6 = v19;
  swift_retain();
  sub_2574718B0((uint64_t)v17);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v17);
  swift_release();
  uint64_t v7 = v18;
  swift_retain();
  sub_2574718B0((uint64_t)v17);
  type metadata accessor for TensorRepresentation();
  uint64_t v8 = swift_allocObject();
  LOBYTE(v17[0]) = 1;
  uint64_t v9 = sub_257585724(a2, 1, v20, 0x100000000, v6, v7, v8);
  type metadata accessor for TensorHandle();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_2574B92D8((uint64_t)v21, (uint64_t *)&unk_26A004250);
  v17[0] = *(void *)(a1 + 40);
  v21[0] = v10;
  LayerState.wrappedValue.setter(v21);
  sub_257476E94(a3, (uint64_t)v21, (uint64_t *)&unk_26A004250);
  sub_257476E94((uint64_t)v21, (uint64_t)v20, (uint64_t *)&unk_26A004250);
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v17);
  swift_release();
  uint64_t v11 = v19;
  swift_retain();
  sub_2574718B0((uint64_t)v17);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v17);
  swift_release();
  uint64_t v12 = v18;
  swift_retain();
  sub_2574718B0((uint64_t)v17);
  uint64_t v13 = swift_allocObject();
  LOBYTE(v17[0]) = 1;
  uint64_t v14 = sub_257585724(a2, 2, v20, 0x100000000, v11, v12, v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_2574B92D8((uint64_t)v21, (uint64_t *)&unk_26A004250);
  v17[0] = *(void *)(a1 + 48);
  v21[0] = v15;
  LayerState.wrappedValue.setter(v21);
  return sub_2575D7748(a1);
}

uint64_t sub_257667B74(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5, float a6, float a7)
{
  uint64_t v11 = result;
  if (a3)
  {
    if (a3 != 1) {
      goto LABEL_28;
    }
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    memcpy(__dst, __src, 0x88uLL);
    if (!__dst[10])
    {
      uint64_t result = sub_2574718B0((uint64_t)__dst);
      goto LABEL_28;
    }
    char v12 = *(unsigned char *)(__dst[10] + 24);
    uint64_t result = sub_2574718B0((uint64_t)__dst);
    if ((v12 & 1) == 0) {
      goto LABEL_28;
    }
  }
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)__src);
  swift_release();
  uint64_t v13 = __src[9];
  swift_retain();
  uint64_t result = sub_2574718B0((uint64_t)__src);
  if (!v13) {
    goto LABEL_28;
  }
  swift_beginAccess();
  uint64_t v14 = *(void *)(a4 + 24);
  unint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    uint64_t result = swift_release();
    goto LABEL_28;
  }
  uint64_t v16 = v14 + 32;
  sub_2576A7810();
  unint64_t v17 = 1;
  do
  {
    sub_257476E94(v16, (uint64_t)v63, (uint64_t *)&unk_26A006410);
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      sub_2574B92D8((uint64_t)v63, (uint64_t *)&unk_26A006410);
      goto LABEL_21;
    }
    uint64_t v19 = Strong;
    if (*(uint64_t *)(Strong + 32) > 0)
    {
      swift_retain();
      id v20 = sub_257614628();
      objc_msgSend(v20, sel_lock);

      swift_beginAccess();
      sub_257486824(v19 + 40, (uint64_t)__src);
      if (!BYTE1(__src[13]))
      {
        sub_2574A794C((uint64_t)__src, (uint64_t)__dst);
        uint64_t v21 = __dst[1];
        uint64_t ObjectType = swift_getObjectType();
        LOBYTE(v21) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(ObjectType, v21);
        sub_25748692C((uint64_t)__dst);
        id v23 = sub_257614628();
        objc_msgSend(v23, sel_unlock);
        swift_release();

        sub_2574B92D8((uint64_t)v63, (uint64_t *)&unk_26A006410);
        if ((v21 & 1) == 0) {
          sub_2575CA36C();
        }
        goto LABEL_20;
      }
      if (BYTE1(__src[13]) == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_25748692C((uint64_t)&__src[4]);
      }
      else
      {
        sub_257486880((uint64_t)__src);
      }
      id v24 = sub_257614628();
      objc_msgSend(v24, sel_unlock);
      swift_release();
    }
    sub_2574B92D8((uint64_t)v63, (uint64_t *)&unk_26A006410);
LABEL_20:
    swift_release();
LABEL_21:
    if (v17 >= v15) {
      goto LABEL_25;
    }
    v16 += 8;
  }
  while (v17++ < *(void *)(v14 + 16));
  __break(1u);
LABEL_25:
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_28:
  if (!*(void *)(v11 + 16))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v26 = a2[2];
  if (!v26)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v26 < 4)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v26 != 4)
  {
    uint64_t v27 = *(void *)(v11 + 32);
    uint64_t v28 = a2[4];
    uint64_t v29 = a2[7];
    uint64_t v30 = a2[8];
    uint64_t v31 = *(void *)(v27 + 16);
    uint64_t v32 = *(void *)(v28 + 16);
    uint64_t v33 = *(void *)(v29 + 16);
    uint64_t v34 = *(void *)(v30 + 16);
    __dst[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NormalizationOps.swift";
    *(_OWORD *)&__dst[1] = xmmword_2576BFA50;
    *(_OWORD *)&__dst[3] = xmmword_2576BFA70;
    __dst[5] = "init(id:gradient:input:scale:offset:momentum:normalizedAxes:epsilon:creationSite:)";
    __dst[6] = 82;
    LOWORD(__dst[7]) = 2;
    type metadata accessor for BatchNormGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2576A7810();
    uint64_t v35 = sub_257613240(0, 0, 0, v31, v32, v33, v34, a5, a6, a7, (uint64_t)__dst);
    sub_257476E94(v31 + 168, (uint64_t)v63, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v63, (uint64_t)v62, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v62, (uint64_t)v61, (uint64_t *)&unk_26A004250);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v36 = __src[10];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v37 = __src[9];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    type metadata accessor for TensorRepresentation();
    uint64_t v38 = swift_allocObject();
    LOBYTE(__src[0]) = 1;
    uint64_t v39 = sub_257585914(v35, 0, v61, 0x100000000, v36, v37, v38);
    type metadata accessor for TensorHandle();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v39;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_2574B92D8((uint64_t)v62, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v63, (uint64_t)v62, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v62, (uint64_t)v61, (uint64_t *)&unk_26A004250);
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v41 = __src[10];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v42 = __src[9];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    uint64_t v43 = swift_allocObject();
    LOBYTE(__src[0]) = 1;
    uint64_t v44 = sub_257585914(v35, 1, v61, 0x100000000, v41, v42, v43);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_2574B92D8((uint64_t)v62, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v63, (uint64_t)v62, (uint64_t *)&unk_26A004250);
    sub_257476E94((uint64_t)v62, (uint64_t)v61, (uint64_t *)&unk_26A004250);
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v46 = __src[10];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    uint64_t v47 = __src[9];
    swift_retain();
    sub_2574718B0((uint64_t)__src);
    uint64_t v48 = swift_allocObject();
    LOBYTE(__src[0]) = 1;
    uint64_t v49 = sub_257585914(v35, 2, v61, 0x100000000, v46, v47, v48);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v49;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_2574B92D8((uint64_t)v62, (uint64_t *)&unk_26A004250);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = xmmword_2576ABB50;
    swift_retain();
    swift_retain();
    uint64_t v52 = sub_2574E8C6C();
    *(void *)(v51 + 32) = v40;
    *(void *)(v51 + 40) = v52;
    *(void *)(v51 + 48) = v53;
    swift_retain();
    swift_retain();
    uint64_t v54 = sub_2574E8C6C();
    *(void *)(v51 + 56) = v45;
    *(void *)(v51 + 64) = v54;
    *(void *)(v51 + 72) = v55;
    swift_retain();
    swift_retain();
    uint64_t v56 = sub_2574E8C6C();
    *(void *)(v51 + 80) = v50;
    *(void *)(v51 + 88) = v56;
    *(void *)(v51 + 96) = v57;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2574B92D8((uint64_t)v63, (uint64_t *)&unk_26A004250);
    return v51;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2576683BC()
{
  return sub_25766C780();
}

uint64_t sub_2576683DC(char a1)
{
  uint64_t result = 0x6D75746E656D6F6DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_59_11();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_16_46();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_21_41();
      break;
    case 4:
      uint64_t result = OUTLINED_FUNCTION_38_24();
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_31_29();
      break;
    case 6:
      uint64_t result = OUTLINED_FUNCTION_92_6();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257668458(char a1)
{
  uint64_t result = 0x6D75746E656D6F6DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74657366666FLL;
      break;
    case 2:
      uint64_t result = 0x656C616373;
      break;
    case 3:
      uint64_t result = 0x6E6F6C69737065;
      break;
    case 4:
      uint64_t result = 0x4D676E696E6E7572;
      break;
    case 5:
      uint64_t result = 0x56676E696E6E7572;
      break;
    case 6:
      uint64_t result = 0x676E696E7261656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257668558()
{
  return sub_257574090();
}

uint64_t sub_257668564()
{
  return sub_2576A3844(*v0);
}

uint64_t sub_25766856C()
{
  return sub_25746F840();
}

uint64_t sub_257668574(uint64_t a1)
{
  return sub_2575EEAAC(a1, *v1);
}

uint64_t sub_25766857C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766C780();
  *a1 = result;
  return result;
}

uint64_t sub_2576685B4()
{
  char v1 = OUTLINED_FUNCTION_105_6();
  uint64_t result = sub_2576683DC(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_2576685DC()
{
  return sub_257668458(*v0);
}

uint64_t sub_2576685E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2576683BC();
  *a1 = result;
  return result;
}

uint64_t sub_25766860C(uint64_t a1)
{
  unint64_t v2 = sub_25766E9F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257668648(uint64_t a1)
{
  unint64_t v2 = sub_25766E9F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void BatchNorm.init(from:)()
{
  OUTLINED_FUNCTION_20_34();
  OUTLINED_FUNCTION_88_9();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CC8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_4_8();
  sub_25766E9F8();
  OUTLINED_FUNCTION_109_1();
  if (!v1)
  {
    sub_2576A8D30();
    sub_2574B3944();
    OUTLINED_FUNCTION_70_9();
    OUTLINED_FUNCTION_70_9();
    sub_25766EA44();
    OUTLINED_FUNCTION_95_7();
    sub_2576A8D50();
    OUTLINED_FUNCTION_95_7();
    sub_2576A8D50();
    sub_2576A8D30();
    sub_2576667CC();
    sub_257555540();
    OUTLINED_FUNCTION_95_7();
    sub_2576A8D50();
    uint64_t v5 = OUTLINED_FUNCTION_2_42();
    v6(v5);
    *(_DWORD *)uint64_t v3 = v7;
    *(void *)(v3 + 8) = v8;
    *(unsigned char *)(v3 + 16) = v9;
    *(unsigned char *)(v3 + 17) = v10;
    *(void *)(v3 + 24) = v11;
    *(unsigned char *)(v3 + 32) = v12;
    *(unsigned char *)(v3 + 33) = v13;
    *(_DWORD *)(v3 + 36) = v14;
    *(void *)(v3 + 40) = v15;
    *(void *)(v3 + 48) = v16;
    *(void *)(v3 + 56) = v17;
    *(unsigned char *)(v3 + 64) = v7;
    *(void *)(v3 + 72) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_18_36();
}

void BatchNorm.encode(to:)()
{
  OUTLINED_FUNCTION_20_34();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CE0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25766E9F8();
  sub_2576A9230();
  sub_2576A8E20();
  if (!v0)
  {
    sub_2574B3990();
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_15_47();
    sub_25766EA90();
    OUTLINED_FUNCTION_15_47();
    OUTLINED_FUNCTION_15_47();
    sub_2576A8E20();
    sub_2575554A8();
    sub_2576A8E40();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_18_36();
}

void sub_257668CF0()
{
}

void sub_257668D08()
{
}

NeuralNetworks::LayerNorm::NormalizedAxes_optional __swiftcall LayerNorm.NormalizedAxes.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_53_9(v1);
  return result;
}

uint64_t LayerNorm.NormalizedAxes.rawValue.getter()
{
  return *v0 + 1;
}

uint64_t sub_257668D4C()
{
  return sub_2576A385C();
}

uint64_t sub_257668D54()
{
  return sub_25746F6EC();
}

uint64_t sub_257668D5C()
{
  return sub_2575EEA38();
}

NeuralNetworks::LayerNorm::NormalizedAxes_optional sub_257668D64(Swift::Int *a1)
{
  return LayerNorm.NormalizedAxes.init(rawValue:)(*a1);
}

uint64_t sub_257668D6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LayerNorm.NormalizedAxes.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_257668D94()
{
  return sub_2576A7DC0();
}

uint64_t sub_257668DF4()
{
  return sub_2576A7D80();
}

uint64_t LayerNorm.scale.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t LayerNorm.scale.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return Parameter.wrappedValue.setter(&v2);
}

uint64_t (*LayerNorm.scale.modify(uint64_t a1))(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_257668FB4;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t LayerNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*v1, a1);
}

uint64_t LayerNorm.offset.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

void sub_25766905C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v4);
  OUTLINED_FUNCTION_77_10();
}

uint64_t sub_2576690E8()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

uint64_t LayerNorm.offset.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_85_7(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*LayerNorm.offset.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2576691F4;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t LayerNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 16), a1);
}

BOOL LayerNorm.isEveryParameterInitialized.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned char *)(v1 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_33_25();
  BOOL result = *(void *)(v3 + 16) != 0;
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

void LayerNorm.normalizedAxes.getter(unsigned char *a1@<X8>)
{
}

float LayerNorm.epsilon.getter()
{
  return *(float *)(v0 + 44);
}

uint64_t sub_257669268@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v7 = *a1;
  char v8 = *((unsigned char *)a1 + 8);
  char v9 = *((unsigned char *)a1 + 9);
  uint64_t v10 = *a2;
  char v11 = *((unsigned char *)a2 + 8);
  char v25 = *((unsigned char *)a2 + 9);
  char v12 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF8);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_18_42();
  if (v15) {
    goto LABEL_7;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_8:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_11;
  }
  char v26 = v12;
  OUTLINED_FUNCTION_89_8();
  if (v15)
  {
LABEL_7:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
    goto LABEL_11;
  }
  if ((v18 & 0x8000000000000000) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = v16;
  uint64_t v20 = v10;
  char v21 = v8;
  uint64_t v22 = v17 & 0x7FFFFFFFFFFFFFFFLL;
  if (OUTLINED_FUNCTION_98_8(*(void *)((v17 & 0x7FFFFFFFFFFFFFFFLL) + 0x10)))
  {
    uint64_t v23 = *(void *)(*(void *)(v22 + 16) + 152);
    OUTLINED_FUNCTION_4_61();
    *(void *)(v13 + 16) = v23;
    sub_2576A7810();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = v20;
    *(unsigned char *)(a4 + 8) = v11;
    *(unsigned char *)(a4 + 9) = v25;
    *(void *)(a4 + 16) = v7;
    *(unsigned char *)(a4 + 24) = v21;
    *(unsigned char *)(a4 + 25) = v9;
    *(void *)(a4 + 32) = v13;
    *(unsigned char *)(a4 + 40) = v26;
    *(float *)(a4 + 44) = a5;
    *(void *)(a4 + 48) = v19;
    return result;
  }
  OUTLINED_FUNCTION_17_0();
LABEL_11:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t LayerNorm.init(offset:scale:epsilon:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF8);
  uint64_t v9 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v10 = *(void *)(v6 + 16);
  if ((sub_257654B3C(*(void *)(v10 + 152), *(void *)(*(void *)(v7 + 16) + 152)) & 1) != 0
    && (uint64_t v17 = v7,
        uint64_t v18 = v9,
        uint64_t v11 = *(void *)(v10 + 152),
        uint64_t v12 = *(void *)(v11 + 16),
        char v13 = v12 - 1,
        (unint64_t)(v12 - 1) < 3))
  {
    v19[0] = v6;
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_99_6();
    char v20 = 1;
    uint64_t v14 = sub_25748FB58(v19, 0x100000000);
    v19[0] = v17;
    OUTLINED_FUNCTION_1_4();
    char v20 = 1;
    uint64_t v15 = sub_25748FB58(v19, 0x100000000);
    sub_2576A7810();
    swift_release();
    OUTLINED_FUNCTION_4_61();
    *(void *)(v8 + 16) = v11;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = v15;
    *(_WORD *)(a3 + 8) = 256;
    *(void *)(a3 + 16) = v14;
    *(_WORD *)(a3 + 24) = 256;
    *(void *)(a3 + 32) = v8;
    *(unsigned char *)(a3 + 40) = v13;
    *(float *)(a3 + 44) = a4;
    *(void *)(a3 + 48) = v18;
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    uint64_t result = OUTLINED_FUNCTION_26_3();
    __break(1u);
  }
  return result;
}

uint64_t LayerNorm.init(normalizedAxes:offsetInitializer:scaleInitializer:epsilon:)@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  char v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005CF8);
  uint64_t v9 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v9 + 16) = 0;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t v10 = OUTLINED_FUNCTION_58_1();
  uint64_t v11 = sub_25748FBC8(v10);
  OUTLINED_FUNCTION_1_4();
  uint64_t v12 = sub_25748FBC8(a2);
  uint64_t result = swift_release();
  *(void *)a3 = v12;
  *(_WORD *)(a3 + 8) = 256;
  *(void *)(a3 + 16) = v11;
  *(_WORD *)(a3 + 24) = 256;
  *(void *)(a3 + 32) = v8;
  *(unsigned char *)(a3 + 40) = v7;
  *(float *)(a3 + 44) = a4;
  *(void *)(a3 + 48) = v9;
  return result;
}

uint64_t LayerNorm.initializeParameters(for:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v7 = *(void *)(*(void *)(v2 + 16) + 152);
  sub_2576697F4(&v7, v6);
  uint64_t v4 = v6[0];
  swift_retain();
  sub_25748FC8C(v6);
  swift_release();
  v6[0] = v4;
  swift_retain();
  sub_25748FC8C(v6);
  swift_release();
  OUTLINED_FUNCTION_4_61();
  *(void *)(v3 + 16) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2576697F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  if (*v2)
  {
    if (*v2 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_2576ABB30;
      uint64_t v6 = *(void *)(v4 + 16);
      *(void *)(v5 + 32) = TensorShape.subscript.getter(v6 - 2);
      uint64_t result = TensorShape.subscript.getter(v6 - 1);
      *(void *)(v5 + 40) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_2576ABB50;
      uint64_t v8 = *(void *)(v4 + 16);
      *(void *)(v5 + 32) = TensorShape.subscript.getter(v8 - 3);
      *(void *)(v5 + 40) = TensorShape.subscript.getter(v8 - 2);
      uint64_t result = TensorShape.subscript.getter(v8 - 1);
      *(void *)(v5 + 48) = result;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_2576ABB10;
    uint64_t result = TensorShape.subscript.getter(*(void *)(v4 + 16) - 1);
    *(void *)(v5 + 32) = result;
  }
  *a2 = v5;
  return result;
}

uint64_t LayerNorm.forward(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[2];
  char v7 = *((unsigned char *)v2 + 40);
  int v8 = *((_DWORD *)v2 + 11);
  unsigned __int8 v9 = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v10 = static ScalarType.floatingPointTypes.getter();
  BOOL v11 = sub_2575A0094(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_10:
    LOBYTE(v23) = v9;
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v23 = a2;
    id v24 = (uint64_t *)&v23;
    long long v25 = xmmword_2576AD000;
    char v26 = 0;
    uint64_t v27 = v16;
    char v28 = 2;
    char v29 = 3;
    OUTLINED_FUNCTION_17_44();
    sub_25746BF88();
  }
  LOBYTE(v20[0]) = v7;
  uint64_t v23 = *(void **)(*(void *)(v4 + 16) + 152);
  sub_257669C44((uint64_t *)&v23);
  v20[0] = v4;
  Tensor.moments(alongAxes:)(&v23);
  swift_bridgeObjectRelease();
  unsigned __int8 v9 = v23;
  v18[1] = (uint64_t)v23;
  uint64_t v19 = v4;
  v18[0] = (uint64_t)v24;
  uint64_t v12 = *(void *)(v5 + 32);
  if ((~v12 & 0xF000000000000007) == 0) {
    goto LABEL_7;
  }
  if ((v12 & 0x8000000000000000) == 0)
  {
LABEL_8:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_9;
  }
  uint64_t v22 = v12 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v13 = *(void *)(v6 + 32);
  if ((~v13 & 0xF000000000000007) == 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_9:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_10;
  }
  if ((v13 & 0x8000000000000000) == 0) {
    goto LABEL_8;
  }
  uint64_t v21 = v13 & 0x7FFFFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_102_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(_DWORD *)(inited + 32) = v8;
  sub_257476E94((uint64_t)&v23, (uint64_t)v20, (uint64_t *)&unk_26A004250);
  swift_retain();
  swift_retain();
  sub_257486C70(v12);
  sub_257486C70(v13);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_2574B92D8((uint64_t)&v23, (uint64_t *)&unk_26A004250);
  uint64_t v23 = (void *)v17;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v19, v18, &v22, &v21, a2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

double sub_257669C44(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*v1)
  {
    if (*v1 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v3 = swift_allocObject();
      uint64_t v4 = (const double *)(v2 + 16);
      int64x2_t v5 = (int64x2_t)vld1q_dup_f64(v4);
      int64x2_t v6 = vaddq_s64(v5, (int64x2_t)xmmword_2576BFA90);
      *(_OWORD *)(v3 + 16) = xmmword_2576ABB30;
      *(int64x2_t *)(v3 + 32) = v6;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v8 = swift_allocObject();
      v6.i64[0] = 3;
      unint64_t v9 = *(void *)(v2 + 16);
      *(_OWORD *)(v8 + 16) = xmmword_2576ABB50;
      *(int64x2_t *)(v8 + 32) = vaddq_s64(vdupq_n_s64(v9), (int64x2_t)xmmword_2576BFA80);
      *(void *)(v8 + 48) = v9 - 1;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
    uint64_t v7 = swift_allocObject();
    v6.i64[0] = 1;
    *(_OWORD *)(v7 + 16) = xmmword_2576ABB10;
    *(void *)(v7 + 32) = *(void *)(v2 + 16) - 1;
  }
  return *(double *)v6.i64;
}

uint64_t sub_257669D1C()
{
  return sub_25766E34C();
}

uint64_t sub_257669D3C(char a1)
{
  uint64_t result = 0x74657366666FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_16_46();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_21_41();
      break;
    case 3:
      uint64_t result = 0x7A696C616D726F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257669DB0(char a1)
{
  uint64_t result = 0x74657366666FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C616373;
      break;
    case 2:
      uint64_t result = 0x6E6F6C69737065;
      break;
    case 3:
      uint64_t result = 0x7A696C616D726F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257669E48()
{
  return sub_257573E28();
}

uint64_t sub_257669E54()
{
  return sub_2576A38A0(*v0);
}

uint64_t sub_257669E5C()
{
  return sub_25746F718();
}

uint64_t sub_257669E64(uint64_t a1)
{
  return sub_2575EEA78(a1, *v1);
}

uint64_t sub_257669E6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766E34C();
  *a1 = result;
  return result;
}

uint64_t sub_257669EA4()
{
  char v1 = OUTLINED_FUNCTION_105_6();
  uint64_t result = sub_257669D3C(v1);
  *uint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_257669ECC()
{
  return sub_257669DB0(*v0);
}

uint64_t sub_257669ED4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257669D1C();
  *a1 = result;
  return result;
}

uint64_t sub_257669EFC(uint64_t a1)
{
  unint64_t v2 = sub_25766EADC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257669F38(uint64_t a1)
{
  unint64_t v2 = sub_25766EADC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LayerNorm.init(from:)()
{
  OUTLINED_FUNCTION_69_11();
  OUTLINED_FUNCTION_88_9();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D00);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_4_8();
  sub_25766EADC();
  OUTLINED_FUNCTION_109_1();
  if (!v1)
  {
    sub_2574B3944();
    OUTLINED_FUNCTION_46_20();
    uint64_t v5 = v27;
    OUTLINED_FUNCTION_46_20();
    uint64_t v6 = v27;
    LOBYTE(v27) = 2;
    sub_2576A8D30();
    float v8 = v7;
    sub_25766EB28();
    sub_2576A8D50();
    uint64_t v24 = v5;
    char v25 = v28;
    char v26 = v29;
    uint64_t v21 = v6;
    char v22 = v28;
    char v23 = v29;
    char v20 = 2;
    sub_257669268(&v24, &v21, &v20, (uint64_t)&v27, v8);
    uint64_t v9 = OUTLINED_FUNCTION_6_21();
    v10(v9);
    char v11 = v28;
    char v12 = v29;
    uint64_t v13 = v30;
    char v14 = v31;
    char v15 = v32;
    uint64_t v16 = v33;
    char v17 = v34;
    int v18 = v35;
    uint64_t v19 = v36;
    *(void *)uint64_t v3 = v27;
    *(unsigned char *)(v3 + 8) = v11;
    *(unsigned char *)(v3 + 9) = v12;
    *(void *)(v3 + 16) = v13;
    *(unsigned char *)(v3 + 24) = v14;
    *(unsigned char *)(v3 + 25) = v15;
    *(void *)(v3 + 32) = v16;
    *(unsigned char *)(v3 + 40) = v17;
    *(_DWORD *)(v3 + 44) = v18;
    *(void *)(v3 + 48) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_30_27();
}

void LayerNorm.encode(to:)()
{
  OUTLINED_FUNCTION_69_11();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D18);
  OUTLINED_FUNCTION_0_8();
  uint64_t v9 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  uint64_t v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25766EADC();
  sub_2576A9230();
  sub_2574B3990();
  sub_2576A8E40();
  if (!v0)
  {
    sub_2576A8E40();
    sub_2576A8E20();
    sub_25766EB74();
    sub_2576A8E40();
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v3);
  OUTLINED_FUNCTION_30_27();
}

void sub_25766A414()
{
}

void sub_25766A42C()
{
}

uint64_t InstanceNorm.scale.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t InstanceNorm.scale.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return Parameter.wrappedValue.setter(&v2);
}

uint64_t (*InstanceNorm.scale.modify(uint64_t a1))(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_257668FB4;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t InstanceNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*v1, a1);
}

uint64_t InstanceNorm.offset.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

void sub_25766A658()
{
  OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_62_11();
  v0();
  OUTLINED_FUNCTION_77_10();
}

uint64_t sub_25766A6D0()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

uint64_t InstanceNorm.offset.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_85_7(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*InstanceNorm.offset.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2576691F4;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25766A7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a2 & 1) == 0) {
    return OUTLINED_FUNCTION_90_6(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  }
  OUTLINED_FUNCTION_89_7();
  Parameter.wrappedValue.setter(&v10);
  return swift_release();
}

uint64_t InstanceNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 16), a1);
}

uint64_t InstanceNorm.tracksRunningStatistics.getter()
{
  return *(unsigned __int8 *)(v0 + 26);
}

uint64_t InstanceNorm.featureCount.getter()
{
  uint64_t v2 = *(void *)(v1 + 32);
  OUTLINED_FUNCTION_34_27();
  if ((*(unsigned char *)(v2 + 24) & 1) == 0) {
    return *(void *)v0;
  }
  OUTLINED_FUNCTION_17_0();
  uint64_t result = OUTLINED_FUNCTION_23_35();
  __break(1u);
  return result;
}

uint64_t InstanceNorm.isEveryParameterInitialized.getter()
{
  if (*(unsigned char *)(*(void *)(v0 + 88) + 16))
  {
    char v1 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_33_25();
    OUTLINED_FUNCTION_43_22();
  }
  return v1 & 1;
}

void InstanceNorm.learningPhase.getter(unsigned char *a1@<X8>)
{
}

unsigned char *InstanceNorm.learningPhase.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*InstanceNorm.learningPhase.modify())(void)
{
  return nullsub_1;
}

float InstanceNorm.epsilon.getter()
{
  return *(float *)(v0 + 44);
}

float InstanceNorm.momentum.getter()
{
  return *(float *)(v0 + 48);
}

void InstanceNorm.runningMean.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 64) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_68_1(v2, v3);
  sub_257486C84();
}

void *InstanceNorm.runningMean.setter(void *result)
{
  if (*result)
  {
    uint64_t v2 = *(void *)(v1 + 56);
    v3[0] = *result;
    v3[1] = v2;
    return (void *)LayerState.wrappedValue.setter(v3);
  }
  else if (*(unsigned char *)(v1 + 64))
  {
    OUTLINED_FUNCTION_67_9();
    OUTLINED_FUNCTION_17_0();
    uint64_t result = (void *)OUTLINED_FUNCTION_24_40();
    __break(1u);
  }
  return result;
}

uint64_t (*InstanceNorm.runningMean.modify(uint64_t a1))()
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)(a1 + 8) = v2;
  int v3 = *(unsigned __int8 *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v3;
  if (v3 != 1)
  {
    *(void *)a1 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(v2 + 32);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
LABEL_6:
      swift_retain();
      return sub_25766AB54;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t InstanceNorm.$runningMean.getter@<X0>(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 64) == 1) {
    uint64_t result = swift_retain();
  }
  else {
    uint64_t result = 0;
  }
  *a1 = result;
  return result;
}

void InstanceNorm.runningVariance.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 80) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_68_1(v2, v3);
  sub_257486C84();
}

void sub_25766AC48()
{
  OUTLINED_FUNCTION_27_30();
  OUTLINED_FUNCTION_62_11();
  v0();
  OUTLINED_FUNCTION_77_10();
}

uint64_t sub_25766ACC0(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  char v8 = *((unsigned char *)a2 + 9);
  uint64_t v9 = a2[2];
  char v10 = *((unsigned char *)a2 + 24);
  char v11 = *((unsigned char *)a2 + 25);
  char v12 = *((unsigned char *)a2 + 26);
  uint64_t v13 = a2[4];
  char v14 = *((unsigned char *)a2 + 40);
  uint64_t v15 = a2[7];
  char v16 = *((unsigned char *)a2 + 64);
  uint64_t v17 = a2[9];
  char v18 = *((unsigned char *)a2 + 80);
  uint64_t v19 = a2[11];
  v21[0] = *a1;
  v21[1] = v6;
  char v22 = v7;
  char v23 = v8;
  uint64_t v24 = v9;
  char v25 = v10;
  char v26 = v11;
  char v27 = v12;
  uint64_t v28 = v13;
  char v29 = v14;
  uint64_t v30 = *(uint64_t *)((char *)a2 + 44);
  uint64_t v31 = v15;
  char v32 = v16;
  uint64_t v33 = v17;
  char v34 = v18;
  uint64_t v35 = v19;
  swift_retain();
  return a5(v21);
}

void *InstanceNorm.runningVariance.setter(void *result)
{
  if (*result)
  {
    uint64_t v2 = *(void *)(v1 + 72);
    v3[0] = *result;
    v3[1] = v2;
    return (void *)LayerState.wrappedValue.setter(v3);
  }
  else if (*(unsigned char *)(v1 + 80))
  {
    OUTLINED_FUNCTION_67_9();
    OUTLINED_FUNCTION_17_0();
    uint64_t result = (void *)OUTLINED_FUNCTION_24_40();
    __break(1u);
  }
  return result;
}

uint64_t (*InstanceNorm.runningVariance.modify(uint64_t a1))()
{
  uint64_t v2 = *(void *)(v1 + 72);
  *(void *)(a1 + 8) = v2;
  int v3 = *(unsigned __int8 *)(v1 + 80);
  *(unsigned char *)(a1 + 16) = v3;
  if (v3 != 1)
  {
    *(void *)a1 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(v2 + 32);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
LABEL_6:
      swift_retain();
      return sub_25766AB54;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25766AED0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) == 0)
  {
    if (v2)
    {
      uint64_t v4 = *a1;
      LayerState.wrappedValue.setter(&v4);
      goto LABEL_10;
    }
    if (*((unsigned char *)a1 + 16) != 1) {
      goto LABEL_10;
    }
LABEL_13:
    OUTLINED_FUNCTION_67_9();
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_24_40();
    __break(1u);
    return result;
  }
  if (!v2)
  {
    if ((a1[2] & 1) == 0)
    {
      swift_release();
      goto LABEL_10;
    }
    goto LABEL_13;
  }
  uint64_t v4 = *a1;
  swift_retain();
  LayerState.wrappedValue.setter(&v4);
  swift_release();
LABEL_10:
  return swift_release();
}

uint64_t InstanceNorm.$runningVariance.getter@<X0>(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 80) == 1) {
    uint64_t result = swift_retain();
  }
  else {
    uint64_t result = 0;
  }
  *a1 = result;
  return result;
}

uint64_t sub_25766AFF4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v10 = *a1;
  char v34 = *((unsigned char *)a1 + 9);
  char v35 = *((unsigned char *)a1 + 8);
  uint64_t v11 = *a2;
  char v32 = *((unsigned char *)a2 + 9);
  char v33 = *((unsigned char *)a2 + 8);
  uint64_t v12 = *a3;
  uint64_t v13 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D28);
  uint64_t v14 = OUTLINED_FUNCTION_5_48();
  *(void *)(v14 + 16) = 0;
  *(unsigned char *)(v14 + 24) = 1;
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D30);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_18_42();
  if (v16) {
    goto LABEL_21;
  }
  if ((v15 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_89_8();
  if (v16)
  {
LABEL_21:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_27:
    uint64_t result = sub_2576A8B60();
    __break(1u);
    return result;
  }
  uint64_t v31 = v17;
  if ((v19 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
  uint64_t v20 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  if ((OUTLINED_FUNCTION_98_8(*(void *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10)) & 1) == 0) {
    goto LABEL_26;
  }
  if (v13)
  {
    if (v12)
    {
      OUTLINED_FUNCTION_18_42();
      if (!v16)
      {
        if ((v21 & 0x8000000000000000) == 0) {
          goto LABEL_22;
        }
        OUTLINED_FUNCTION_89_8();
        if (!v16)
        {
          if (v23 < 0)
          {
            uint64_t v24 = *(void *)((v22 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            if (sub_257654B3C(*(void *)(v24 + 152), *(void *)(*(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)) & 1) != 0&& (sub_257654B3C(*(void *)(*(void *)(v20 + 16) + 152), *(void *)(v24 + 152)))
            {
              swift_retain();
              swift_release();
              uint64_t v25 = v13;
              goto LABEL_17;
            }
LABEL_26:
            OUTLINED_FUNCTION_65_4();
            goto LABEL_27;
          }
LABEL_22:
          OUTLINED_FUNCTION_0_18();
          OUTLINED_FUNCTION_17_0();
          OUTLINED_FUNCTION_35_1();
          goto LABEL_27;
        }
      }
      goto LABEL_21;
    }
LABEL_24:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_27;
  }
  if (v12) {
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_58_1();
  uint64_t v12 = sub_25748FC24(0);
  swift_release();
  OUTLINED_FUNCTION_1_4();
  uint64_t v25 = OUTLINED_FUNCTION_20_7();
LABEL_17:
  swift_release();
  OUTLINED_FUNCTION_18_42();
  if (v16) {
    goto LABEL_21;
  }
  if ((v26 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
  uint64_t v27 = *(void *)(*(void *)((v26 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  sub_2576A7810();
  swift_release();
  if (!*(void *)(v27 + 16))
  {
    OUTLINED_FUNCTION_40_23();
    OUTLINED_FUNCTION_6_10();
  }
  BOOL v28 = v13 != 0;
  uint64_t v29 = *(void *)(v27 + 32);
  swift_bridgeObjectRelease();
  uint64_t result = OUTLINED_FUNCTION_4_61();
  *(void *)(v14 + 16) = v29;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)a5 = v11;
  *(unsigned char *)(a5 + 8) = v33;
  *(unsigned char *)(a5 + 9) = v32;
  *(void *)(a5 + 16) = v10;
  *(unsigned char *)(a5 + 24) = v35;
  *(unsigned char *)(a5 + 25) = v34;
  *(unsigned char *)(a5 + 26) = v28;
  *(void *)(a5 + 32) = v14;
  *(unsigned char *)(a5 + 40) = 0;
  *(float *)(a5 + 44) = a7;
  *(float *)(a5 + 48) = a6;
  *(void *)(a5 + 56) = v12;
  *(unsigned char *)(a5 + 64) = v28;
  *(void *)(a5 + 72) = v25;
  *(unsigned char *)(a5 + 80) = v28;
  *(void *)(a5 + 88) = v31;
  return result;
}

void InstanceNorm.init(offset:scale:runningMean:runningVariance:momentum:epsilon:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v10 = *a1;
  uint64_t v11 = *a2;
  uint64_t v12 = *a3;
  uint64_t v13 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D28);
  uint64_t v14 = OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_53_15(v14);
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t v37 = OUTLINED_FUNCTION_20_7();
  OUTLINED_FUNCTION_1_4();
  uint64_t v36 = OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D30);
  uint64_t v35 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v35 + 16) = 0;
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v11 + 16);
  if ((sub_257654B3C(*(void *)(v15 + 152), *(void *)(v16 + 152)) & 1) == 0) {
    goto LABEL_17;
  }
  if (!v13)
  {
    if (!v12) {
      goto LABEL_8;
    }
LABEL_15:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_18:
    OUTLINED_FUNCTION_26_3();
    __break(1u);
    return;
  }
  if (!v12) {
    goto LABEL_15;
  }
  uint64_t v17 = *(void *)(v12 + 16);
  if ((sub_257654B3C(*(void *)(v17 + 152), *(void *)(*(void *)(v13 + 16) + 152)) & 1) == 0
    || (sub_257654B3C(*(void *)(v15 + 152), *(void *)(v17 + 152)) & 1) == 0)
  {
LABEL_17:
    OUTLINED_FUNCTION_65_4();
    goto LABEL_18;
  }
LABEL_8:
  uint64_t v18 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_87_9(v18, v19, v20, v21, v22, v23, v24);
  uint64_t v39 = v11;
  OUTLINED_FUNCTION_1_4();
  uint64_t v25 = swift_retain();
  uint64_t v32 = OUTLINED_FUNCTION_87_9(v25, v26, v27, v28, v29, v30, v31);
  if (v12)
  {
    uint64_t v38 = v12;
    uint64_t v39 = v37;
    LayerState.wrappedValue.setter(&v38);
  }
  if (v13)
  {
    uint64_t v38 = v13;
    uint64_t v39 = v36;
    LayerState.wrappedValue.setter(&v38);
  }
  uint64_t v33 = *(void *)(v16 + 152);
  sub_2576A7810();
  swift_release();
  if (!*(void *)(v33 + 16))
  {
    OUTLINED_FUNCTION_40_23();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v34 = *(void *)(v33 + 32);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_61();
  *(void *)(v14 + 16) = v34;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)a5 = v32;
  OUTLINED_FUNCTION_80_8();
  *(unsigned char *)(a5 + 26) = v13 != 0;
  *(void *)(a5 + 32) = v14;
  *(unsigned char *)(a5 + 40) = 0;
  *(float *)(a5 + 44) = a7;
  *(float *)(a5 + 48) = a6;
  *(void *)(a5 + 56) = v37;
  *(unsigned char *)(a5 + 64) = 0;
  *(void *)(a5 + 72) = v36;
  *(unsigned char *)(a5 + 80) = 0;
  *(void *)(a5 + 88) = v35;
}

uint64_t InstanceNorm.init(offsetInitializer:scaleInitializer:momentum:epsilon:tracksRunningStatistics:)@<X0>(char a1@<W2>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D28);
  uint64_t v8 = OUTLINED_FUNCTION_5_48();
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_58_1();
  uint64_t v9 = sub_25748FC24(0);
  OUTLINED_FUNCTION_1_4();
  uint64_t v10 = OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D30);
  uint64_t v11 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v11 + 16) = 0;
  OUTLINED_FUNCTION_1_4();
  swift_retain();
  uint64_t v12 = swift_retain();
  sub_25748FBC8(v12);
  OUTLINED_FUNCTION_1_4();
  swift_retain();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_25748FBC8(v13);
  if (a1)
  {
    type metadata accessor for ParameterInitializer();
    swift_retain();
    sub_25748C880();
    OUTLINED_FUNCTION_1_4();
    uint64_t v17 = OUTLINED_FUNCTION_55_15();
    swift_release();
    sub_25748C9B8();
    OUTLINED_FUNCTION_1_4();
    uint64_t v15 = OUTLINED_FUNCTION_55_15();
    swift_release();
    uint64_t v10 = v15;
    uint64_t v9 = v17;
  }
  else
  {
    swift_retain();
  }
  swift_release();
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  *(void *)a2 = v14;
  OUTLINED_FUNCTION_80_8();
  *(unsigned char *)(a2 + 26) = a1 & 1;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = 0;
  *(float *)(a2 + 44) = a4;
  *(float *)(a2 + 48) = a3;
  *(void *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 64) = a1 & 1;
  *(void *)(a2 + 72) = v10;
  *(unsigned char *)(a2 + 80) = a1 & 1;
  *(void *)(a2 + 88) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t InstanceNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_35_23(a1);
  if (!(!v5 & v4))
  {
    v16[1] = 0;
    void v16[2] = 0;
    v16[0] = 1;
    char v17 = -1;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = v3;
    char v21 = -1;
    char v22 = 4;
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v6 = *(void *)(v1 + 32);
  int v7 = *(unsigned __int8 *)(v1 + 64);
  int v15 = *(unsigned __int8 *)(v1 + 80);
  int v8 = *(unsigned __int8 *)(v1 + 26);
  uint64_t v9 = *(void *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v10 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_50_18(v10, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v16);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_50_18(v11, (__n128)xmmword_2576ABB10);
  swift_retain();
  sub_25748FC8C(v16);
  swift_release();
  swift_bridgeObjectRelease();
  if (v8 == 1)
  {
    if (v7)
    {
      uint64_t v12 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_50_18(v12, (__n128)xmmword_2576ABB10);
      swift_retain();
      sub_25748FC8C(v16);
      swift_release();
      swift_bridgeObjectRelease();
    }
    if (v15)
    {
      uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_50_18(v13, (__n128)xmmword_2576ABB10);
      swift_retain();
      sub_25748FC8C(v16);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t result = OUTLINED_FUNCTION_4_61();
  *(void *)(v6 + 16) = v9;
  *(unsigned char *)(v6 + 24) = 0;
  return result;
}

uint64_t InstanceNorm.forward(_:)()
{
  OUTLINED_FUNCTION_101_6();
  memcpy(v2, v3, 0x60uLL);
  unsigned __int8 v4 = *(unsigned char *)(*(void *)(v1 + 16) + 160);
  char v5 = static ScalarType.floatingPointTypes.getter();
  BOOL v6 = sub_2575A0094(v4, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v21 = v0;
    char v22 = &v21;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_17_44();
    sub_25746BF88();
  }
  sub_25751857C((uint64_t)v35);
  uint64_t v7 = swift_retain();
  int v15 = OUTLINED_FUNCTION_96_7(v7, v8, v9, v10, v11, v12, v13, v14, v19, v20, v21, (uint64_t)v22, v23, v24, v25, v26, v27, v28, v29,
          v30,
          v31,
          v32,
          v33,
          v34,
          v35[0]);
  return sub_2575D58C0(v15, v16, v17);
}

unsigned char *sub_25766BB1C(char *a1)
{
  char v2 = *a1;
  return InstanceNorm.learningPhase.setter(&v2);
}

uint64_t sub_25766BB48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v111[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(*a1 + 16);
  uint64_t v8 = *(void *)(v7 + 152);
  unint64_t v9 = *(void *)(v8 + 16);
  if (v9 <= 1) {
    goto LABEL_60;
  }
  uint64_t v10 = *(void *)(v3 + 16);
  int v11 = *(unsigned __int8 *)(v3 + 26);
  uint64_t v86 = *(void *)(v3 + 32);
  int v12 = *(unsigned __int8 *)(v3 + 40);
  int v14 = *(_DWORD *)(v3 + 44);
  float v13 = *(float *)(v3 + 48);
  uint64_t v90 = *(void *)(v3 + 56);
  HIDWORD(v94) = *(unsigned __int8 *)(v3 + 64);
  uint64_t v92 = *(void *)(v3 + 72);
  uint64_t v93 = *(void *)v3;
  HIDWORD(v91) = *(unsigned __int8 *)(v3 + 80);
  uint64_t v15 = *(void *)(v3 + 88);
  uint64_t v16 = sub_257696D2C(1, v9);
  if (*(void *)(v8 + 16) <= 1uLL)
  {
    OUTLINED_FUNCTION_41_21();
    BYTE4(__src[13]) = 4;
    sub_2576A7810();
LABEL_64:
    OUTLINED_FUNCTION_17_31();
    goto LABEL_65;
  }
  uint64_t v17 = v16;
  if (*(void *)(v16 + 16) <= 1uLL)
  {
    OUTLINED_FUNCTION_41_21();
    goto LABEL_63;
  }
  uint64_t v18 = *(void *)(v8 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582A78();
    uint64_t v17 = v66;
  }
  if (*(void *)(v17 + 16) < 2uLL)
  {
    __break(1u);
LABEL_56:
    __break(1u);
  }
  *(void *)(v17 + 40) = v18;
  unint64_t v19 = *(void *)(*(void *)(v7 + 152) + 16);
  if (v19 < 2) {
    goto LABEL_56;
  }
  uint64_t v87 = v15;
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v20 = sub_25769455C(2, v19);
  __dst[0] = v6;
  Tensor.moments(alongAxes:)(__src);
  uint64_t v21 = __src[0];
  uint64_t v22 = __src[1];
  if (v12)
  {
    BOOL v23 = v12 == 1;
    uint64_t v24 = v10;
    if (!v23) {
      goto LABEL_30;
    }
LABEL_13:
    __dst[0] = v6;
    v109[0] = v21;
    swift_retain_n();
    swift_retain();
    sub_257665BEC(v20, v109, 1);
    swift_release();
    swift_release();
    if (v11 && HIDWORD(v94))
    {
      uint64_t v26 = *(void *)(v90 + 32);
      uint64_t v27 = v92;
      if ((~v26 & 0xF000000000000007) == 0) {
        goto LABEL_57;
      }
      if ((v26 & 0x8000000000000000) == 0) {
        goto LABEL_58;
      }
      if ((v91 & 0x100000000) != 0)
      {
        uint64_t v28 = *(void *)(v92 + 32);
        if ((~v28 & 0xF000000000000007) == 0) {
          goto LABEL_57;
        }
        if ((v28 & 0x8000000000000000) == 0) {
          goto LABEL_58;
        }
        uint64_t v85 = __src[0];
        char v29 = *(unsigned char *)(*(void *)(v21 + 16) + 160);
        OUTLINED_FUNCTION_72_10();
        uint64_t v105 = MEMORY[0x263F8EE78];
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_2576ABB10;
        *(float *)(v30 + 32) = 1.0 - v13;
        LOBYTE(v104) = v29;
        sub_257476E94((uint64_t)__src, (uint64_t)__dst, (uint64_t *)&unk_26A004250);
        uint64_t v76 = v26;
        sub_257486C70(v26);
        uint64_t v83 = v28;
        sub_257486C70(v28);
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        sub_2574B92D8((uint64_t)__src, (uint64_t *)&unk_26A004250);
        __src[0] = v26 & 0x7FFFFFFFFFFFFFFFLL;
        v109[0] = v17;
        Tensor.reshaped(to:)(v109, __dst);
        v109[0] = __dst[0];
        OUTLINED_FUNCTION_94_7();
        if (!v23)
        {
LABEL_66:
          __src[1] = 0;
          __src[2] = 0;
          __src[0] = v32;
          LOBYTE(__src[3]) = 6;
          __src[4] = v31;
          *(_OWORD *)&__src[5] = xmmword_2576B7680;
          LOBYTE(__src[7]) = 0;
          BYTE4(__src[13]) = 6;
          sub_2576A7810();
          sub_2576A7810();
LABEL_65:
          sub_25746BF88();
        }
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v33 = sub_257665838((uint64_t)__src, v17);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        Tensor.tiled(multiples:)(v33, __src);
        swift_release();
        swift_bridgeObjectRelease();
        sub_257609C60(__src[0], v13);
        v109[0] = __dst[0];
        __src[0] = v21;
        static Tensor.* infix(_:_:)();
        swift_release();
        uint64_t v104 = v105;
        static Tensor.+ infix(_:_:)();
        swift_release();
        swift_release();
        __dst[0] = __src[0];
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        Tensor.mean(squeezingAxes:)(&unk_27065D910);
        __dst[0] = __src[0];
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
        uint64_t v34 = OUTLINED_FUNCTION_1_4();
        *(_OWORD *)(v34 + 16) = xmmword_2576ABB10;
        swift_beginAccess();
        if ((*(unsigned char *)(v86 + 24) & 1) == 0)
        {
          *(void *)(v34 + 32) = *(void *)(v86 + 16);
          uint64_t v105 = v34;
          Tensor.reshaped(to:)(&v105, &v104);
          swift_release();
          swift_bridgeObjectRelease();
          __src[0] = v90;
          LayerState.wrappedValue.setter(&v104);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          __src[0] = v28 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v105 = v17;
          Tensor.reshaped(to:)(&v105, __dst);
          uint64_t v105 = __dst[0];
          OUTLINED_FUNCTION_94_7();
          if (!v23) {
            goto LABEL_66;
          }
          uint64_t v35 = v90;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          uint64_t v36 = sub_257665838((uint64_t)__src, v17);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          Tensor.tiled(multiples:)(v36, __src);
          swift_release();
          swift_bridgeObjectRelease();
          sub_257609C60(__src[0], v13);
          uint64_t v105 = __dst[0];
          __src[0] = v85;
          static Tensor.* infix(_:_:)();
          uint64_t v103 = v104;
          static Tensor.+ infix(_:_:)();
          swift_release();
          swift_release();
          __dst[0] = __src[0];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          Tensor.mean(squeezingAxes:)(&unk_27065D938);
          __dst[0] = __src[0];
          uint64_t v37 = OUTLINED_FUNCTION_1_4();
          *(_OWORD *)(v37 + 16) = xmmword_2576ABB10;
          if ((*(unsigned char *)(v86 + 24) & 1) == 0)
          {
            *(void *)(v37 + 32) = *(void *)(v86 + 16);
            uint64_t v105 = v37;
            Tensor.reshaped(to:)(&v105, &v104);
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v27 = v92;
            __src[0] = v92;
            LayerState.wrappedValue.setter(&v104);
            sub_257486C8C(v76);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_257486C8C(v83);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v38 = v22;
            uint64_t v39 = v21;
            goto LABEL_40;
          }
        }
        OUTLINED_FUNCTION_17_0();
        goto LABEL_59;
      }
      swift_release();
      swift_release();
      uint64_t v38 = v22;
      uint64_t v39 = v21;
    }
    else
    {
      swift_release();
      swift_release();
      uint64_t v38 = v22;
      uint64_t v39 = v21;
      uint64_t v27 = v92;
    }
    uint64_t v35 = v90;
    goto LABEL_40;
  }
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)__src);
  swift_release();
  memcpy(__dst, __src, sizeof(__dst));
  if (__dst[10])
  {
    char v25 = *(unsigned char *)(__dst[10] + 24);
    sub_2574718B0((uint64_t)__dst);
    uint64_t v24 = v10;
    if (v25) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_2574718B0((uint64_t)__dst);
    uint64_t v24 = v10;
  }
LABEL_30:
  swift_release();
  uint64_t v27 = v92;
  if (HIDWORD(v94))
  {
    uint64_t v35 = v90;
    OUTLINED_FUNCTION_18_42();
    if (v23) {
      goto LABEL_57;
    }
    if ((v48 & 0x8000000000000000) == 0) {
      goto LABEL_58;
    }
    OUTLINED_FUNCTION_60_13(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v77, v78,
      v79,
      v80,
      v81,
      v82,
      v84,
      v86,
      v15,
      v88,
      (uint64_t)v89,
      v90,
      v91,
      v92,
      v93,
      v94,
      v95,
      v96,
      v97,
      v98,
      v99,
      v100,
      v101,
      v102,
      v103,
      v104,
      v105,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      v107,
      __src[0]);
    uint64_t v39 = __src[0];
  }
  else
  {
    swift_retain();
    uint64_t v39 = v21;
    uint64_t v35 = v90;
  }
  if (HIDWORD(v91))
  {
    OUTLINED_FUNCTION_18_42();
    if (v23) {
      goto LABEL_57;
    }
    if ((v57 & 0x8000000000000000) == 0) {
      goto LABEL_58;
    }
    OUTLINED_FUNCTION_60_13(v49, v50, v51, v52, v53, v54, v55, v56, v67, v68, v69, v70, v71, v72, v73, v74, v75, v77, v78,
      v79,
      v80,
      v81,
      v82,
      v84,
      v86,
      v87,
      v88,
      (uint64_t)v89,
      v90,
      v91,
      v92,
      v93,
      v94,
      v95,
      v96,
      v97,
      v98,
      v99,
      v100,
      v101,
      v102,
      v103,
      v104,
      v105,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      v107,
      __src[0]);
    uint64_t v38 = __src[0];
  }
  else
  {
    swift_retain();
    uint64_t v38 = v22;
  }
LABEL_40:
  uint64_t v104 = v39;
  uint64_t v105 = v6;
  uint64_t v103 = v38;
  OUTLINED_FUNCTION_18_42();
  if (v23) {
    goto LABEL_57;
  }
  if ((v58 & 0x8000000000000000) == 0) {
    goto LABEL_58;
  }
  __src[0] = v58 & 0x7FFFFFFFFFFFFFFFLL;
  __dst[0] = v17;
  swift_retain();
  swift_retain();
  Tensor.reshaped(to:)(__dst, &v102);
  v111[0] = v102;
  uint64_t v59 = *(void *)(v24 + 32);
  if ((~v59 & 0xF000000000000007) == 0)
  {
LABEL_57:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_59:
    sub_2576A8B60();
    __break(1u);
LABEL_60:
    __src[1] = 0;
    __src[2] = 0;
    __src[0] = 1;
    LOBYTE(__src[3]) = -1;
    __src[5] = 0;
    __src[6] = 0;
    __src[4] = v9;
    LOBYTE(__src[7]) = -1;
LABEL_63:
    BYTE4(__src[13]) = 4;
    goto LABEL_64;
  }
  if ((v59 & 0x8000000000000000) == 0) {
    goto LABEL_58;
  }
  __src[0] = v59 & 0x7FFFFFFFFFFFFFFFLL;
  __dst[0] = v17;
  sub_257486C84();
  Tensor.reshaped(to:)(__dst, &v101);
  swift_bridgeObjectRelease();
  sub_257486C8C(v59);
  uint64_t v110 = v101;
  OUTLINED_FUNCTION_72_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_2576ABB10;
  *(_DWORD *)(v60 + 32) = v14;
  sub_257476E94((uint64_t)__src, (uint64_t)__dst, (uint64_t *)&unk_26A004250);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_2574B92D8((uint64_t)__src, (uint64_t *)&unk_26A004250);
  __dst[0] = v100;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v105, &v103, v111, &v110, __src);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v61 = __src[0];
  if ((v94 & 0x100000000) == 0)
  {
    swift_release();
    swift_release();
    goto LABEL_53;
  }
  uint64_t v62 = *(void *)(v35 + 32);
  if ((~v62 & 0xF000000000000007) == 0) {
    goto LABEL_57;
  }
  if ((v62 & 0x8000000000000000) == 0)
  {
LABEL_58:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_59;
  }
  if ((v91 & 0x100000000) == 0)
  {
    sub_257486C84();
    swift_release();
    swift_release();
    sub_257486C8C(v62);
    goto LABEL_53;
  }
  uint64_t v63 = *(void *)(v27 + 32);
  if ((~v63 & 0xF000000000000007) == 0) {
    goto LABEL_57;
  }
  if ((v63 & 0x8000000000000000) == 0) {
    goto LABEL_58;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_2576ABB50;
  *(void *)(v64 + 32) = v62 & 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(v64 + 40) = v63 & 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(v64 + 48) = v61;
  sub_257486C70(v62);
  sub_257486C70(v63);
  sub_257486C70(v62);
  sub_257486C70(v63);
  swift_retain();
  sub_2575CA228(v64);
  swift_release();
  swift_release();
  sub_257486C8C(v62);
  sub_257486C8C(v63);
  swift_setDeallocating();
  sub_2575AEC4C();
LABEL_53:
  swift_release();
  uint64_t result = swift_release();
  *uint64_t v89 = v61;
  return result;
}

uint64_t sub_25766C780()
{
  unint64_t v0 = OUTLINED_FUNCTION_40_3();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_25766C7B8()
{
  return sub_25766C780();
}

uint64_t sub_25766C7D8()
{
  return 7;
}

uint64_t sub_25766C7E0(char a1)
{
  uint64_t result = 0x74657366666FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_16_46();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_38_24();
      break;
    case 3:
      uint64_t result = OUTLINED_FUNCTION_31_29();
      break;
    case 4:
      uint64_t result = 0x6D75746E656D6F6DLL;
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_21_41();
      break;
    case 6:
      uint64_t result = OUTLINED_FUNCTION_92_6();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25766C86C(char a1)
{
  uint64_t result = 0x74657366666FLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C616373;
      break;
    case 2:
      uint64_t result = 0x4D676E696E6E7572;
      break;
    case 3:
      uint64_t result = 0x56676E696E6E7572;
      break;
    case 4:
      uint64_t result = 0x6D75746E656D6F6DLL;
      break;
    case 5:
      uint64_t result = 0x6E6F6C69737065;
      break;
    case 6:
      uint64_t result = 0x676E696E7261656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25766C96C()
{
  return sub_2575753E4();
}

uint64_t sub_25766C978()
{
  return sub_2576A38B8(*v0);
}

uint64_t sub_25766C980()
{
  return sub_257470438();
}

uint64_t sub_25766C988(uint64_t a1)
{
  return sub_2575EF1FC(a1, *v1);
}

uint64_t sub_25766C990@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766C780();
  *a1 = result;
  return result;
}

uint64_t sub_25766C9C8()
{
  char v1 = OUTLINED_FUNCTION_105_6();
  uint64_t result = sub_25766C7E0(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_25766C9F0()
{
  return sub_25766C86C(*v0);
}

uint64_t sub_25766C9F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766C7B8();
  *a1 = result;
  return result;
}

uint64_t sub_25766CA20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766C7D8();
  *a1 = result;
  return result;
}

uint64_t sub_25766CA48(uint64_t a1)
{
  unint64_t v2 = sub_25766EBC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25766CA84(uint64_t a1)
{
  unint64_t v2 = sub_25766EBC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void InstanceNorm.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_20_34();
  a21 = v24;
  a22 = v25;
  OUTLINED_FUNCTION_88_9();
  uint64_t v27 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D38);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_8_0();
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  sub_25766EBC0();
  sub_2576A91F0();
  if (!v23)
  {
    sub_2574B3944();
    OUTLINED_FUNCTION_44_20();
    OUTLINED_FUNCTION_44_20();
    sub_25766EA44();
    OUTLINED_FUNCTION_45_20();
    OUTLINED_FUNCTION_45_20();
    OUTLINED_FUNCTION_76_8(4);
    float v30 = v29;
    OUTLINED_FUNCTION_76_8(5);
    float v32 = v31;
    uint64_t v54 = v57;
    char v55 = v58;
    char v56 = v59;
    uint64_t v50 = v57;
    uint64_t v51 = v57;
    char v52 = v58;
    char v53 = v59;
    a12 = v57;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_25766AFF4(&v54, &v51, &a12, &v50, (uint64_t)&v57, v30, v32);
    uint64_t v46 = v57;
    char v41 = v58;
    char v40 = v59;
    uint64_t v49 = v60;
    char v39 = v61;
    char v38 = v62;
    char v37 = v63;
    uint64_t v48 = v64;
    uint64_t v33 = v65;
    uint64_t v47 = v66;
    char v43 = v67;
    uint64_t v45 = v68;
    char v42 = v69;
    uint64_t v44 = v70;
    LOBYTE(v54) = 6;
    sub_257555540();
    OUTLINED_FUNCTION_95_7();
    sub_2576A8D50();
    uint64_t v34 = OUTLINED_FUNCTION_11_58();
    v35(v34);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_103_6();
    swift_release();
    char v36 = v57;
    *(void *)uint64_t v27 = v46;
    *(unsigned char *)(v27 + 8) = v41;
    *(unsigned char *)(v27 + 9) = v40;
    *(void *)(v27 + 16) = v49;
    *(unsigned char *)(v27 + 24) = v39;
    *(unsigned char *)(v27 + 25) = v38;
    *(unsigned char *)(v27 + 26) = v37;
    *(void *)(v27 + 32) = v48;
    *(unsigned char *)(v27 + 40) = v36;
    *(void *)(v27 + 44) = v33;
    *(void *)(v27 + 56) = v47;
    *(unsigned char *)(v27 + 64) = v43;
    *(void *)(v27 + 72) = v45;
    *(unsigned char *)(v27 + 80) = v42;
    *(void *)(v27 + 88) = v44;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  OUTLINED_FUNCTION_18_36();
}

void InstanceNorm.encode(to:)()
{
  OUTLINED_FUNCTION_20_34();
  uint64_t v32 = v1;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D48);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v0;
  int v11 = *((unsigned __int8 *)v0 + 8);
  int v26 = *((unsigned __int8 *)v0 + 9);
  int v27 = v11;
  uint64_t v30 = v0[2];
  uint64_t v31 = v10;
  char v36 = *((unsigned char *)v0 + 24);
  LODWORD(v10) = *((unsigned __int8 *)v0 + 25);
  int v28 = *((unsigned __int8 *)v0 + 40);
  int v29 = v10;
  uint64_t v24 = v0[7];
  int v25 = *((unsigned __int8 *)v0 + 64);
  uint64_t v12 = v0[9];
  int v13 = *((unsigned __int8 *)v0 + 80);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25766EBC0();
  sub_2576A9230();
  LOBYTE(v33) = 4;
  uint64_t v14 = v32;
  sub_2576A8E20();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  }
  else
  {
    uint64_t v15 = v31;
    LODWORD(v32) = v13;
    uint64_t v23 = v12;
    uint64_t v16 = v6;
    uint64_t v33 = v30;
    char v34 = v36;
    char v17 = v28;
    char v35 = v29;
    sub_2574B3990();
    uint64_t v18 = v9;
    sub_2576A8E40();
    uint64_t v33 = v15;
    char v34 = v27;
    char v35 = v26;
    sub_2576A8E40();
    if (v25)
    {
      uint64_t v19 = v24;
      swift_retain();
    }
    else
    {
      uint64_t v19 = 0;
    }
    char v20 = v17;
    int v21 = v32;
    uint64_t v33 = v19;
    sub_25766EA90();
    OUTLINED_FUNCTION_73_10();
    swift_release();
    if (v21)
    {
      uint64_t v22 = v23;
      swift_retain();
    }
    else
    {
      uint64_t v22 = 0;
    }
    uint64_t v33 = v22;
    OUTLINED_FUNCTION_73_10();
    swift_release();
    LOBYTE(v33) = 5;
    sub_2576A8E20();
    LOBYTE(v33) = v20;
    sub_2575554A8();
    sub_2576A8E40();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v4);
  }
  OUTLINED_FUNCTION_18_36();
}

#error "25766D2D8: call analysis failed (funcsize=6)"

void sub_25766D2E4()
{
}

uint64_t GroupNorm.groupCount.getter()
{
  return *(void *)v0;
}

uint64_t GroupNorm.featureCount.getter()
{
  uint64_t v2 = *(void *)(v1 + 40);
  OUTLINED_FUNCTION_34_27();
  if ((*(unsigned char *)(v2 + 24) & 1) == 0) {
    return *(void *)v0;
  }
  OUTLINED_FUNCTION_17_0();
  uint64_t result = OUTLINED_FUNCTION_23_35();
  __break(1u);
  return result;
}

uint64_t GroupNorm.scale.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t GroupNorm.scale.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_86_9(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*GroupNorm.scale.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 8));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_25766601C;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25766D4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a2 & 1) == 0) {
    return OUTLINED_FUNCTION_90_6(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  }
  OUTLINED_FUNCTION_89_7();
  Parameter.wrappedValue.setter(&v10);
  return swift_release();
}

uint64_t GroupNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 8), a1);
}

uint64_t GroupNorm.offset.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

void sub_25766D5E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  a4(&v4);
  OUTLINED_FUNCTION_77_10();
}

uint64_t sub_25766D664()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

uint64_t GroupNorm.offset.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_84_7(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*GroupNorm.offset.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 24));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2576661D0;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25766D770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if ((a2 & 1) == 0) {
    return OUTLINED_FUNCTION_90_6(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  }
  OUTLINED_FUNCTION_89_7();
  Parameter.wrappedValue.setter(&v10);
  return swift_release();
}

uint64_t GroupNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  return OUTLINED_FUNCTION_14_49(*(void *)(v1 + 24), a1);
}

uint64_t GroupNorm.isEveryParameterInitialized.getter()
{
  if (*(unsigned char *)(*(void *)(v0 + 56) + 16))
  {
    char v1 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_33_25();
    OUTLINED_FUNCTION_43_22();
  }
  return v1 & 1;
}

float GroupNorm.epsilon.getter()
{
  return *(float *)(v0 + 48);
}

void sub_25766D834()
{
  OUTLINED_FUNCTION_52_16();
  int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  char v7 = *((unsigned char *)v4 + 9);
  uint64_t v27 = *v9;
  uint64_t v28 = v8;
  char v10 = *((unsigned char *)v9 + 8);
  char v11 = *((unsigned char *)v9 + 9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D50);
  uint64_t v12 = OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_53_15(v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D58);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_18_42();
  if (v15) {
    goto LABEL_10;
  }
  if ((v14 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
  uint64_t v16 = v13;
  uint64_t v17 = OUTLINED_FUNCTION_80_7(*(void *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10));
  if (!v18) {
    goto LABEL_12;
  }
  if (*(void *)(v17 + 32) >= v28)
  {
    OUTLINED_FUNCTION_18_42();
    if (!v15)
    {
      if (v20 < 0)
      {
        char v21 = v7;
        char v22 = v6;
        uint64_t v23 = v20 & 0x7FFFFFFFFFFFFFFFLL;
        if (sub_257654B3C(v19, *(void *)(*(void *)((v20 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)))
        {
          uint64_t v24 = OUTLINED_FUNCTION_80_7(*(void *)(v23 + 16));
          if (v25)
          {
            uint64_t v26 = *(void *)(v24 + 32);
            OUTLINED_FUNCTION_4_61();
            *(void *)(v12 + 16) = v26;
            *(unsigned char *)(v12 + 24) = 0;
            *(void *)uint64_t v3 = v28;
            *(void *)(v3 + 8) = v27;
            *(unsigned char *)(v3 + 16) = v10;
            *(unsigned char *)(v3 + 17) = v11;
            *(void *)(v3 + 24) = v5;
            *(unsigned char *)(v3 + 32) = v22;
            *(unsigned char *)(v3 + 33) = v21;
            *(void *)(v3 + 40) = v12;
            *(_DWORD *)(v3 + 48) = v1;
            *(void *)(v3 + 56) = v16;
            OUTLINED_FUNCTION_48_21();
            return;
          }
LABEL_12:
          OUTLINED_FUNCTION_13_50();
          OUTLINED_FUNCTION_6_10();
        }
        goto LABEL_13;
      }
LABEL_11:
      OUTLINED_FUNCTION_0_18();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_35_1();
      goto LABEL_13;
    }
LABEL_10:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
LABEL_13:
  sub_2576A8B60();
  __break(1u);
}

void GroupNorm.init(groupCount:offset:scale:epsilon:)()
{
  OUTLINED_FUNCTION_52_16();
  int v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *v6;
  uint64_t v9 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D50);
  uint64_t v10 = OUTLINED_FUNCTION_5_48();
  OUTLINED_FUNCTION_91_7(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D58);
  uint64_t v11 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v11 + 16) = 0;
  uint64_t v12 = OUTLINED_FUNCTION_80_7(*(void *)(v7 + 16));
  if (!v13)
  {
    OUTLINED_FUNCTION_13_50();
    goto LABEL_9;
  }
  if (*(void *)(v12 + 32) < v3
    || (v28 = v3, uint64_t v14 = *(void *)(v9 + 16), (sub_257654B3C(v12, *(void *)(v14 + 152)) & 1) == 0))
  {
    OUTLINED_FUNCTION_26_3();
    __break(1u);
    goto LABEL_8;
  }
  type metadata accessor for LayerVariableReference();
  uint64_t v15 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_81_5(v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_1_4();
  uint64_t v20 = swift_retain();
  uint64_t v25 = OUTLINED_FUNCTION_81_5(v20, v21, v22, v23, v24);
  uint64_t v26 = *(void *)(v14 + 152);
  sub_2576A7810();
  swift_release();
  if (!*(void *)(v26 + 16))
  {
LABEL_8:
    OUTLINED_FUNCTION_37_22();
LABEL_9:
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v27 = *(void *)(v26 + 32);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_61();
  *(void *)(v10 + 16) = v27;
  *(unsigned char *)(v10 + 24) = 0;
  *(void *)uint64_t v5 = v28;
  *(void *)(v5 + 8) = v25;
  OUTLINED_FUNCTION_79_9();
  *(void *)(v5 + 40) = v10;
  *(_DWORD *)(v5 + 48) = v1;
  *(void *)(v5 + 56) = v11;
  OUTLINED_FUNCTION_48_21();
}

uint64_t GroupNorm.init(groupCount:offsetInitializer:scaleInitializer:epsilon:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D50);
  uint64_t v8 = OUTLINED_FUNCTION_5_48();
  *(void *)(v8 + 16) = 0;
  *(unsigned char *)(v8 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D58);
  uint64_t v9 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v9 + 16) = 0;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t v10 = OUTLINED_FUNCTION_99_6();
  uint64_t v11 = sub_25748FBC8(v10);
  OUTLINED_FUNCTION_1_4();
  uint64_t v12 = sub_25748FBC8(a2);
  uint64_t result = swift_release();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = v12;
  *(_WORD *)(a3 + 16) = 256;
  *(void *)(a3 + 24) = v11;
  *(_WORD *)(a3 + 32) = 256;
  *(void *)(a3 + 40) = v8;
  *(float *)(a3 + 48) = a4;
  *(void *)(a3 + 56) = v9;
  return result;
}

uint64_t GroupNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_35_23(a1);
  if (!(!v4 & v3))
  {
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v7 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v7 + 16) = xmmword_2576ABB10;
  *(void *)(v7 + 32) = v6;
  v10[0] = v7;
  swift_retain();
  sub_25748FC8C(v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v8 + 16) = xmmword_2576ABB10;
  *(void *)(v8 + 32) = v6;
  v10[0] = v8;
  swift_retain();
  sub_25748FC8C(v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = OUTLINED_FUNCTION_4_61();
  *(void *)(v5 + 16) = v6;
  *(unsigned char *)(v5 + 24) = 0;
  return result;
}

uint64_t GroupNorm.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = *MEMORY[0x263EF8340];
  uint64_t v5 = *a1;
  uint64_t v7 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  int v8 = *(_DWORD *)(v2 + 48);
  uint64_t v9 = (uint64_t *)*(unsigned __int8 *)(*(void *)(*a1 + 16) + 160);
  uint64_t v10 = static ScalarType.floatingPointTypes.getter();
  BOOL v11 = sub_2575A0094(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_43;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 + 16) + 152);
  unint64_t v13 = *(void *)(v12 + 16);
  if (v13 <= 1) {
    goto LABEL_39;
  }
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_257582A78();
  }
  if (*(void *)(v15 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (!v7)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v16 = *(void *)(v15 + 40);
  BOOL v17 = v16 == 0x8000000000000000 && v7 == -1;
  if (v17) {
    goto LABEL_37;
  }
  *(void *)(v15 + 40) = v16 / v7;
  uint64_t v43 = v15;
  sub_257692D1C(1, 1, v7);
  swift_bridgeObjectRelease();
  uint64_t v39 = v43;
  v40[0] = v5;
  uint64_t v9 = v40;
  Tensor.reshaped(to:)(&v39, &v43);
  swift_bridgeObjectRelease();
  uint64_t v12 = v43;
  uint64_t v18 = *(void *)(*(void *)(*(void *)(v43 + 16) + 152) + 16);
  if (v18)
  {
    uint64_t v19 = sub_25769455C(1, v18);
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  sub_257582A78();
  uint64_t v19 = v30;
LABEL_13:
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    char v34 = (uint64_t *)a2;
    uint64_t v21 = v20 - 1;
    sub_25760A020(v19 + 40, v20 - 1, v19 + 32);
    *(void *)(v19 + 16) = v21;
    v40[0] = v12;
    Tensor.moments(alongAxes:)(&v43);
    swift_bridgeObjectRelease();
    uint64_t v19 = v43;
    a2 = (uint64_t)v44;
    uint64_t v9 = *(uint64_t **)(*(void *)(v5 + 16) + 152);
    unint64_t v3 = v9[2];
    sub_2576A7810();
    uint64_t v22 = sub_257608D64(1, v3 + 1);
    unint64_t v13 = *(void *)(v22 + 16);
    if (v13 > 1)
    {
      uint64_t v23 = (void *)v22;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_16;
      }
      goto LABEL_34;
    }
LABEL_39:
    uint64_t v32 = 1;
LABEL_46:
    uint64_t v44 = 0;
    *(void *)&long long v45 = 0;
    uint64_t v43 = v32;
    BYTE8(v45) = -1;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    unint64_t v46 = v13;
    char v49 = -1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_34:
  sub_257582A78();
  uint64_t v23 = v31;
LABEL_16:
  unint64_t v13 = v23[2];
  if (v13 < 2)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v23[5] = v7;
  if (v3 <= 1)
  {
    uint64_t v44 = 0;
    *(void *)&long long v45 = 0;
    uint64_t v43 = 1;
    BYTE8(v45) = -1;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    unint64_t v46 = v3;
    char v49 = -1;
LABEL_47:
    char v50 = 4;
    OUTLINED_FUNCTION_17_31();
LABEL_48:
    sub_25746BF88();
  }
  if ((unint64_t)v9[2] < 2) {
    goto LABEL_36;
  }
  uint64_t v24 = v9[5];
  if (v24 == 0x8000000000000000 && v7 == -1) {
LABEL_38:
  }
    __break(1u);
  if (v13 <= 2)
  {
    uint64_t v32 = 2;
    goto LABEL_46;
  }
  v23[6] = v24 / v7;
  swift_bridgeObjectRelease();
  v38[1] = v19;
  uint64_t v39 = v12;
  v38[0] = a2;
  OUTLINED_FUNCTION_18_42();
  if (v17) {
    goto LABEL_40;
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
LABEL_41:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_42;
  }
  uint64_t v43 = v26 & 0x7FFFFFFFFFFFFFFFLL;
  v40[0] = (uint64_t)v23;
  swift_retain();
  swift_retain();
  uint64_t v9 = &v43;
  Tensor.reshaped(to:)(v40, &v37);
  uint64_t v42 = v37;
  OUTLINED_FUNCTION_18_42();
  if (v17)
  {
LABEL_40:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_42:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
LABEL_43:
    LOBYTE(v43) = (_BYTE)v9;
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v43 = v6;
    uint64_t v44 = &v43;
    long long v45 = xmmword_2576AD000;
    LOBYTE(v46) = 0;
    uint64_t v47 = v33;
    LOBYTE(v48) = 2;
    char v50 = 3;
    OUTLINED_FUNCTION_17_44();
    goto LABEL_48;
  }
  if ((v27 & 0x8000000000000000) == 0) {
    goto LABEL_41;
  }
  uint64_t v43 = v27 & 0x7FFFFFFFFFFFFFFFLL;
  v40[0] = (uint64_t)v23;
  Tensor.reshaped(to:)(v40, &v36);
  swift_bridgeObjectRelease();
  uint64_t v41 = v36;
  OUTLINED_FUNCTION_102_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(_DWORD *)(inited + 32) = v8;
  sub_257476E94((uint64_t)&v43, (uint64_t)v40, (uint64_t *)&unk_26A004250);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_2574B92D8((uint64_t)&v43, (uint64_t *)&unk_26A004250);
  v40[0] = v35;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v39, v38, &v42, &v41, &v43);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v40[0] = *(void *)(*(void *)(v5 + 16) + 152);
  sub_2576A7810();
  Tensor.reshaped(to:)(v40, v34);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25766E34C()
{
  unint64_t v0 = OUTLINED_FUNCTION_40_3();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_25766E384()
{
  return sub_25766E34C();
}

uint64_t sub_25766E3A4(char a1)
{
  uint64_t result = 0x756F4370756F7267;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_59_11();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_16_46();
      break;
    case 3:
      uint64_t result = 0x6E6F6C69737065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25766E414(char a1)
{
  uint64_t result = 0x756F4370756F7267;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74657366666FLL;
      break;
    case 2:
      uint64_t result = 0x656C616373;
      break;
    case 3:
      uint64_t result = 0x6E6F6C69737065;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25766E4A4()
{
  return sub_257573F60();
}

uint64_t sub_25766E4B0()
{
  return sub_2576A3934(*v0);
}

uint64_t sub_25766E4B8()
{
  return sub_25746F7B4();
}

uint64_t sub_25766E4C0(uint64_t a1)
{
  return sub_2575EEA90(a1, *v1);
}

uint64_t sub_25766E4C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766E34C();
  *a1 = result;
  return result;
}

uint64_t sub_25766E500()
{
  char v1 = OUTLINED_FUNCTION_105_6();
  uint64_t result = sub_25766E3A4(v1);
  *unint64_t v0 = result;
  v0[1] = v3;
  return result;
}

uint64_t sub_25766E528()
{
  return sub_25766E414(*v0);
}

uint64_t sub_25766E530@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25766E384();
  *a1 = result;
  return result;
}

uint64_t sub_25766E558(uint64_t a1)
{
  unint64_t v2 = sub_25766EC0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25766E594(uint64_t a1)
{
  unint64_t v2 = sub_25766EC0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GroupNorm.init(from:)()
{
  OUTLINED_FUNCTION_88_9();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D60);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_4_8();
  sub_25766EC0C();
  OUTLINED_FUNCTION_109_1();
  if (!v1)
  {
    OUTLINED_FUNCTION_93_7();
    sub_2576A8D40();
    sub_2574B3944();
    OUTLINED_FUNCTION_47_22();
    OUTLINED_FUNCTION_47_22();
    LOBYTE(v8) = 3;
    OUTLINED_FUNCTION_93_7();
    sub_2576A8D30();
    sub_25766D834();
    uint64_t v6 = OUTLINED_FUNCTION_36_24();
    v7(v6);
    *(void *)uint64_t v3 = v8;
    *(void *)(v3 + 8) = v9;
    *(unsigned char *)(v3 + 16) = v10;
    *(unsigned char *)(v3 + 17) = v11;
    *(void *)(v3 + 24) = v12;
    *(unsigned char *)(v3 + 32) = v13;
    *(unsigned char *)(v3 + 33) = v14;
    *(void *)(v3 + 40) = v15;
    *(_DWORD *)(v3 + 48) = v16;
    *(void *)(v3 + 56) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

void GroupNorm.encode(to:)()
{
  OUTLINED_FUNCTION_69_11();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005D70);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25766EC0C();
  sub_2576A9230();
  sub_2576A8E30();
  if (!v0)
  {
    sub_2574B3990();
    OUTLINED_FUNCTION_56_11();
    OUTLINED_FUNCTION_56_11();
    sub_2576A8E20();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_30_27();
}

uint64_t sub_25766E9C8()
{
  return GroupNorm.init(from:)();
}

void sub_25766E9E0()
{
}

unint64_t sub_25766E9F8()
{
  unint64_t result = qword_26A005CD0;
  if (!qword_26A005CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005CD0);
  }
  return result;
}

unint64_t sub_25766EA44()
{
  unint64_t result = qword_26A005CD8;
  if (!qword_26A005CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005CD8);
  }
  return result;
}

unint64_t sub_25766EA90()
{
  unint64_t result = qword_26A005CE8;
  if (!qword_26A005CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005CE8);
  }
  return result;
}

unint64_t sub_25766EADC()
{
  unint64_t result = qword_26A005D08;
  if (!qword_26A005D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D08);
  }
  return result;
}

unint64_t sub_25766EB28()
{
  unint64_t result = qword_26A005D10;
  if (!qword_26A005D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D10);
  }
  return result;
}

unint64_t sub_25766EB74()
{
  unint64_t result = qword_26A005D20;
  if (!qword_26A005D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D20);
  }
  return result;
}

unint64_t sub_25766EBC0()
{
  unint64_t result = qword_26A005D40;
  if (!qword_26A005D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D40);
  }
  return result;
}

unint64_t sub_25766EC0C()
{
  unint64_t result = qword_26A005D68;
  if (!qword_26A005D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D68);
  }
  return result;
}

unint64_t sub_25766EC5C()
{
  unint64_t result = qword_26A005D78;
  if (!qword_26A005D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D78);
  }
  return result;
}

void sub_25766ECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_257666488(a1, a2, a3, (void (*)(uint64_t *__return_ptr))BatchNorm.scale.getter);
}

uint64_t sub_25766ECD4()
{
  return sub_2576660C4();
}

void sub_25766ED00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_257666488(a1, a2, a3, (void (*)(uint64_t *__return_ptr))BatchNorm.offset.getter);
}

uint64_t sub_25766ED2C()
{
  return sub_2576660C4();
}

void sub_25766ED58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_257666488(a1, a2, a3, (void (*)(uint64_t *__return_ptr))BatchNorm.runningMean.getter);
}

uint64_t sub_25766ED84(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4)
{
  return sub_257666524(a1, a2, a3, a4, BatchNorm.runningMean.setter);
}

void sub_25766EDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_257666488(a1, a2, a3, (void (*)(uint64_t *__return_ptr))BatchNorm.runningVariance.getter);
}

uint64_t sub_25766EDDC(uint64_t *a1, int *a2, uint64_t a3, uint64_t a4)
{
  return sub_257666524(a1, a2, a3, a4, BatchNorm.runningVariance.setter);
}

void sub_25766EE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25766905C(a1, a2, a3, (void (*)(uint64_t *__return_ptr))LayerNorm.scale.getter);
}

uint64_t sub_25766EE34()
{
  return sub_2576690E8();
}

void sub_25766EE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25766905C(a1, a2, a3, (void (*)(uint64_t *__return_ptr))LayerNorm.offset.getter);
}

uint64_t sub_25766EE8C()
{
  return sub_2576690E8();
}

void sub_25766EEB8()
{
}

uint64_t sub_25766EEE4()
{
  return sub_25766A6D0();
}

void sub_25766EF10()
{
}

uint64_t sub_25766EF3C()
{
  return sub_25766A6D0();
}

void sub_25766EF68()
{
}

uint64_t sub_25766EF94(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25766ACC0(a1, a2, a3, a4, (uint64_t (*)(void *))InstanceNorm.runningMean.setter);
}

void sub_25766EFC0()
{
}

uint64_t sub_25766EFEC(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25766ACC0(a1, a2, a3, a4, (uint64_t (*)(void *))InstanceNorm.runningVariance.setter);
}

void sub_25766F018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25766D5E0(a1, a2, a3, (void (*)(uint64_t *__return_ptr))GroupNorm.scale.getter);
}

uint64_t sub_25766F044()
{
  return sub_25766D664();
}

void sub_25766F070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25766D5E0(a1, a2, a3, (void (*)(uint64_t *__return_ptr))GroupNorm.offset.getter);
}

uint64_t sub_25766F09C()
{
  return sub_25766D664();
}

uint64_t destroy for BatchNorm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BatchNorm(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchNorm(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BatchNorm(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchNorm(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for BatchNorm()
{
}

uint64_t destroy for LayerNorm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerNorm(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for LayerNorm()
{
}

unsigned char *storeEnumTagSinglePayload for LayerNorm.NormalizedAxes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25766F7B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for LayerNorm.NormalizedAxes()
{
}

uint64_t destroy for InstanceNorm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 44) = *(void *)(a2 + 44);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 44) = *(void *)(a2 + 44);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstanceNorm(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstanceNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for InstanceNorm()
{
}

uint64_t destroy for GroupNorm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for GroupNorm(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GroupNorm(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GroupNorm(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

void type metadata accessor for GroupNorm()
{
}

ValueMetadata *type metadata accessor for GroupNorm.CodingKeys()
{
  return &type metadata for GroupNorm.CodingKeys;
}

ValueMetadata *type metadata accessor for GroupNorm.State()
{
  return &type metadata for GroupNorm.State;
}

ValueMetadata *type metadata accessor for InstanceNorm.CodingKeys()
{
  return &type metadata for InstanceNorm.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InstanceNorm.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for InstanceNorm.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_25766FE50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25766FE6C(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for InstanceNorm.State()
{
  return &type metadata for InstanceNorm.State;
}

unsigned char *_s14NeuralNetworks9GroupNormV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25766FF68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayerNorm.CodingKeys()
{
  return &type metadata for LayerNorm.CodingKeys;
}

void *initializeBufferWithCopyOfBuffer for LayerNorm.State(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2576A7810();
  return a1;
}

void *assignWithCopy for LayerNorm.State(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LayerNorm.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerNorm.State(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LayerNorm.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_2576700E4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2576700FC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayerNorm.State()
{
  return &type metadata for LayerNorm.State;
}

unsigned char *_s14NeuralNetworks12InstanceNormV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576701F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BatchNorm.CodingKeys()
{
  return &type metadata for BatchNorm.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchNorm.State()
{
  return &type metadata for BatchNorm.State;
}

unint64_t sub_257670244()
{
  unint64_t result = qword_26A005D80;
  if (!qword_26A005D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D80);
  }
  return result;
}

unint64_t sub_257670294()
{
  unint64_t result = qword_26A005D88;
  if (!qword_26A005D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D88);
  }
  return result;
}

unint64_t sub_2576702E4()
{
  unint64_t result = qword_26A005D90;
  if (!qword_26A005D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D90);
  }
  return result;
}

unint64_t sub_257670334()
{
  unint64_t result = qword_26A005D98;
  if (!qword_26A005D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005D98);
  }
  return result;
}

unint64_t sub_257670384()
{
  unint64_t result = qword_26A005DA0;
  if (!qword_26A005DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DA0);
  }
  return result;
}

unint64_t sub_2576703D4()
{
  unint64_t result = qword_26A005DA8;
  if (!qword_26A005DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DA8);
  }
  return result;
}

unint64_t sub_257670424()
{
  unint64_t result = qword_26A005DB0;
  if (!qword_26A005DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DB0);
  }
  return result;
}

unint64_t sub_257670474()
{
  unint64_t result = qword_26A005DB8;
  if (!qword_26A005DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DB8);
  }
  return result;
}

unint64_t sub_2576704C4()
{
  unint64_t result = qword_26A005DC0;
  if (!qword_26A005DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DC0);
  }
  return result;
}

unint64_t sub_257670514()
{
  unint64_t result = qword_26A005DC8;
  if (!qword_26A005DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DC8);
  }
  return result;
}

unint64_t sub_257670564()
{
  unint64_t result = qword_26A005DD0;
  if (!qword_26A005DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DD0);
  }
  return result;
}

unint64_t sub_2576705B4()
{
  unint64_t result = qword_26A005DD8;
  if (!qword_26A005DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005DD8);
  }
  return result;
}

unint64_t sub_257670600()
{
  unint64_t result = qword_26A005DE0[0];
  if (!qword_26A005DE0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A005DE0);
  }
  return result;
}

uint64_t sub_25767064C()
{
  return sub_2576678B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_25767066C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 52, 7);
}

uint64_t sub_2576706AC(uint64_t a1, void *a2)
{
  return sub_257667B74(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), *(float *)(v2 + 32), *(float *)(v2 + 48));
}

uint64_t OUTLINED_FUNCTION_11_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_50()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_15_47()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_16_46()
{
  return 0x656C616373;
}

uint64_t OUTLINED_FUNCTION_21_41()
{
  return 0x6E6F6C69737065;
}

uint64_t OUTLINED_FUNCTION_23_35()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_24_40()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_28_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned __int8 a29)
{
  a29 = v29;
  return sub_25748FB58(&a14, (unint64_t)v29 << 32);
}

uint64_t OUTLINED_FUNCTION_31_29()
{
  return 0x56676E696E6E7572;
}

uint64_t OUTLINED_FUNCTION_33_25()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_34_27()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_35_23(uint64_t a1)
{
  return *(void *)(*(void *)(*(void *)a1 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_36_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_24()
{
  return 0x4D676E696E6E7572;
}

void OUTLINED_FUNCTION_43_22()
{
  *(unsigned char *)(v0 + 16) = (*(unsigned char *)(v1 + 24) ^ 1) & 1;
}

uint64_t OUTLINED_FUNCTION_44_20()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_45_20()
{
  return sub_2576A8D00();
}

uint64_t OUTLINED_FUNCTION_46_20()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_47_22()
{
  return sub_2576A8D50();
}

__n128 *OUTLINED_FUNCTION_50_18(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = v2;
  return result;
}

__n128 *OUTLINED_FUNCTION_51_18(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_15(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_55_15()
{
  return sub_25748FBC8(v0);
}

uint64_t OUTLINED_FUNCTION_56_11()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_59_11()
{
  return 0x74657366666FLL;
}

uint64_t OUTLINED_FUNCTION_60_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(void *)(v64 - 176) = v63;
  return Tensor.reshaped(to:)((uint64_t *)(v64 - 176), &a63);
}

void *OUTLINED_FUNCTION_64_11()
{
  return memcpy((void *)(v0 + 224), (const void *)(v0 + 368), 0x88uLL);
}

uint64_t OUTLINED_FUNCTION_70_9()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_71_9()
{
  return sub_2575D614C(v0 + 368);
}

double OUTLINED_FUNCTION_72_10()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_73_10()
{
  return sub_2576A8DE0();
}

uint64_t OUTLINED_FUNCTION_76_8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 200) = a1;
  return sub_2576A8D30();
}

void OUTLINED_FUNCTION_77_10()
{
  *uint64_t v0 = *(void *)(v1 - 24);
}

void OUTLINED_FUNCTION_79_9()
{
  *(_WORD *)(v0 + 16) = 256;
  *(void *)(v0 + 24) = v1;
  *(_WORD *)(v0 + 32) = 256;
}

void OUTLINED_FUNCTION_80_8()
{
  *(_WORD *)(v0 + 8) = 256;
  *(void *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 24) = 256;
}

uint64_t OUTLINED_FUNCTION_81_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  return sub_25748FB58((uint64_t *)va, (unint64_t)v5 << 32);
}

uint64_t OUTLINED_FUNCTION_84_7(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = *a1;
  return Parameter.wrappedValue.setter(&a10);
}

uint64_t OUTLINED_FUNCTION_85_7(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = *a1;
  return Parameter.wrappedValue.setter(&a10);
}

uint64_t OUTLINED_FUNCTION_86_9(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = *a1;
  return Parameter.wrappedValue.setter(&a10);
}

uint64_t OUTLINED_FUNCTION_87_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  return sub_25748FB58((uint64_t *)va, (unint64_t)v7 << 32);
}

uint64_t OUTLINED_FUNCTION_91_7(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  return 0x676E696E7261656CLL;
}

uint64_t OUTLINED_FUNCTION_93_7()
{
  return v0 - 144;
}

char *OUTLINED_FUNCTION_96_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  return &a25;
}

uint64_t OUTLINED_FUNCTION_98_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 152);
  uint64_t v4 = *(void *)(*(void *)((v1 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  return sub_257654B3C(v3, v4);
}

uint64_t OUTLINED_FUNCTION_99_6()
{
  return swift_retain();
}

double OUTLINED_FUNCTION_102_6()
{
  *(_DWORD *)(v0 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_103_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_105_6()
{
  return *v0;
}

uint64_t sub_257670E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_2574E7194();
    uint64_t v2 = v18;
    uint64_t v4 = (unsigned __int8 *)(a1 + 56);
    do
    {
      uint64_t v5 = *((void *)v4 - 3);
      int v6 = *v4;
      switch(v6)
      {
        case 255:
          sub_2574F050C();
          uint64_t v7 = sub_2576A85F0();
          unint64_t v8 = v9;
          break;
        case 254:
          unint64_t v8 = 0x80000002576D2190;
          uint64_t v7 = 0xD00000000000001DLL;
          break;
        case 253:
          uint64_t v7 = 0xD000000000000029;
          unint64_t v8 = 0x80000002576D2160;
          break;
        default:
          uint64_t v10 = *((void *)v4 - 2);
          uint64_t v17 = *((void *)v4 - 1);
          sub_2575942A8(v10, v17, v6);
          sub_2576A8730();
          uint64_t v11 = sub_2576A8EA0();
          unint64_t v13 = v12;
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          DebugValueLocator.description.getter();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          sub_257675054(v5, v10, v17, v6);
          uint64_t v7 = v11;
          unint64_t v8 = v13;
          break;
      }
      unint64_t v14 = *(void *)(v18 + 16);
      if (v14 >= *(void *)(v18 + 24) >> 1) {
        sub_2574E7194();
      }
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = v18 + 16 * v14;
      *(void *)(v15 + 32) = v7;
      *(void *)(v15 + 40) = v8;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_257671054(uint64_t result, char a2)
{
  if (*(void *)(result + 40) == 2 && (a2 & 1) != 0)
  {
    sub_2574866D0(result, (uint64_t)v4);
    sub_2576A8730();
    OUTLINED_FUNCTION_9_64();
    uint64_t v3 = v5;
    if (v5 > 2)
    {
      swift_unknownObjectRetain();
      sub_2576A7B00();
      swift_getObjectType();
      sub_2575B5A30();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2574F9354(v3);
    }
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A7B00();
    OUTLINED_FUNCTION_9_64();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_64();
    double result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

void requireRank(_:from:expectation:function:file:line:)()
{
  OUTLINED_FUNCTION_10_57();
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  char v7 = *(unsigned char *)(v4 + 16);
  if ((sub_257671D74(v8, *(void *)v4, v6, v7) & 1) == 0)
  {
    sub_25758EBD4(v1, v2, v3);
    sub_2574A88A0(v5, v6, v7);
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_27_22();
}

#error "25767135C: call analysis failed (funcsize=15)"

void requireScalarType(_:from:_:function:file:line:)()
{
  OUTLINED_FUNCTION_10_57();
  int v2 = *v1;
  uint64_t v3 = *(void *)v0;
  uint64_t v4 = *(void *)(v0 + 8);
  char v5 = *(unsigned char *)(v0 + 16);
  uint64_t v7 = *(void *)v6;
  int v8 = *(unsigned __int8 *)(v6 + 8);
  if (!*(unsigned char *)(v6 + 8))
  {
    if (v2 == v7) {
      goto LABEL_9;
    }
LABEL_11:
    char v14 = v5;
    sub_25767AC64();
    sub_25758EC2C(v7, v8);
    sub_25758EBD4(v3, v4, v14);
    OUTLINED_FUNCTION_19_41();
    sub_25746BF88();
  }
  if (v8 != 1)
  {
    uint64_t v15 = *(void *)(v0 + 8);
    char v12 = *(unsigned char *)(v0 + 16);
    unint64_t v13 = sub_25767AC64();
    char v5 = v12;
    uint64_t v4 = v15;
    if (v13 == (ValueMetadata *)v7) {
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9) {
    goto LABEL_11;
  }
  uint64_t v10 = (unsigned __int8 *)(v7 + 32);
  while (1)
  {
    int v11 = *v10++;
    if (v11 == v2) {
      break;
    }
    if (!--v9) {
      goto LABEL_11;
    }
  }
LABEL_9:
  OUTLINED_FUNCTION_27_22();
}

void requireSameScalarTypes(_:from:_:from:expectation:function:file:line:)(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a4 + 8);
  char v7 = *(unsigned char *)(a4 + 16);
  if (*a1 != *a3)
  {
    uint64_t v8 = *(void *)a4;
    sub_25767AC64();
    sub_25767AC64();
    uint64_t v9 = OUTLINED_FUNCTION_23_36();
    sub_25758EBD4(v9, v10, v5);
    sub_25758EBD4(v8, v6, v7);
    sub_25746BF88();
  }
  if (*(unsigned __int8 *)(a5 + 8) != 255)
  {
    OUTLINED_FUNCTION_21_42();
    requireScalarType(_:from:_:function:file:line:)();
    OUTLINED_FUNCTION_21_42();
    requireScalarType(_:from:_:function:file:line:)();
  }
}

#error "257671670: call analysis failed (funcsize=15)"

void sub_257671680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(void),uint64_t *a41)
{
  OUTLINED_FUNCTION_10_57();
  unsigned __int8 v42 = *v41;
  uint64_t v44 = *(void *)v43;
  uint64_t v45 = *(void *)(v43 + 8);
  char v46 = *(unsigned char *)(v43 + 16);
  uint64_t v47 = a40();
  BOOL v48 = sub_2575A0094(v42, v47);
  swift_bridgeObjectRelease();
  if (!v48)
  {
    sub_25767AC64();
    __swift_instantiateConcreteTypeFromMangledName(a41);
    sub_25758EBD4(v44, v45, v46);
    OUTLINED_FUNCTION_19_41();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_27_22();
}

uint64_t requireBroadcastableShape(_:from:to:from:function:file:line:)(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  HIDWORD(v18) = a7;
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 8);
  char v11 = *(unsigned char *)(a2 + 16);
  uint64_t v12 = *(void *)a4;
  uint64_t v13 = *(void *)(a4 + 8);
  char v14 = *(unsigned char *)(a4 + 16);
  uint64_t v29 = *a3;
  uint64_t v30 = v8;
  static ShapeInference.broadcasting(_:to:)((uint64_t)&v30, (uint64_t)&v29, (uint64_t)a3, a4, a5, a6, a7, a8, v16, v17, a6, v18, a8, v19, v21, v22, v23, v24, v25,
    v26,
    v27,
    v28);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v20)
  {
    sub_2576A7810();
    sub_25758EBD4(v9, v10, v11);
    sub_2576A7810();
    sub_25758EBD4(v12, v13, v14);
    sub_25746BF88();
  }
  return result;
}

uint64_t requireSameRank(_:from:_:from:function:file:line:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result != a3)
  {
    uint64_t v5 = *(void *)a4;
    uint64_t v4 = *(void *)(a4 + 8);
    char v6 = *(unsigned char *)(a4 + 16);
    OUTLINED_FUNCTION_7_60();
    sub_25758EBD4(v7, v8, v9);
    sub_25758EBD4(v5, v4, v6);
    OUTLINED_FUNCTION_2_75();
  }
  return result;
}

unsigned __int8 *requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(uint64_t a1, long long *a2, uint64_t *a3, long long *a4)
{
  char v4 = *((unsigned char *)a2 + 16);
  uint64_t v5 = *a3;
  char v6 = *((unsigned char *)a4 + 16);
  unsigned __int8 v13 = *(unsigned char *)(*(void *)(*(void *)a1 + 16) + 160);
  long long v11 = *a2;
  char v12 = v4;
  unsigned __int8 v10 = *(unsigned char *)(*(void *)(v5 + 16) + 160);
  long long v8 = *a4;
  char v9 = v6;
  return requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(&v13, (uint64_t)&v11, &v10, (uint64_t)&v8);
}

uint64_t requireSameShape(_:from:_:from:function:file:line:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a4;
  uint64_t v8 = *(void *)(a4 + 8);
  char v9 = *(unsigned char *)(a4 + 16);
  uint64_t result = sub_257654B3C(*a1, *a3);
  if ((result & 1) == 0)
  {
    sub_2576A7810();
    sub_2576A7810();
    sub_25758EBD4(v4, v5, v6);
    sub_25758EBD4(v7, v8, v9);
    OUTLINED_FUNCTION_23_36();
    sub_25746BF88();
  }
  return result;
}

uint64_t requireInBounds<A>(_:from:_:from:function:file:line:)()
{
  __n128 v0 = OUTLINED_FUNCTION_18_43();
  LOBYTE(v13) = v1;
  return sub_2576731B0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v13, v0.n128_i64[0], v0.n128_i64[1], v11, MEMORY[0x263F8D1A0], MEMORY[0x263F8D198]);
}

{
  __n128 v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  __n128 v0 = OUTLINED_FUNCTION_18_43();
  LOBYTE(v13) = v1;
  return sub_2576731B0(v2, v3, v4, v5, v6, v7, v8, v9, v10, v13, v0.n128_i64[0], v0.n128_i64[1], v11, MEMORY[0x263F8D870], MEMORY[0x263F8D860]);
}

uint64_t static ScalarTypeExpectation.oneOf(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 8) = 1;
  return sub_2576A7810();
}

uint64_t ScalarTypeExpectation.description.getter()
{
  uint64_t v1 = *v0;
  if (!*((unsigned char *)v0 + 8))
  {
    uint64_t v7 = 0;
    OUTLINED_FUNCTION_1_89();
    sub_2576A8A30();
LABEL_11:
    sub_2576A7B00();
    return v7;
  }
  if (*((unsigned char *)v0 + 8) != 1)
  {
    OUTLINED_FUNCTION_13_3();
    sub_2576A8730();
    swift_bridgeObjectRelease();
    uint64_t v7 = 6299745;
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2574E7194();
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      OUTLINED_FUNCTION_1_89();
      sub_2576A8A30();
      OUTLINED_FUNCTION_1_89();
      unint64_t v4 = *(void *)(v8 + 16);
      if (v4 >= *(void *)(v8 + 24) >> 1) {
        sub_2574E7194();
      }
      *(void *)(v8 + 16) = v4 + 1;
      uint64_t v5 = v8 + 16 * v4;
      *(void *)(v5 + 32) = 0;
      *(void *)(v5 + 40) = 0xE000000000000000;
      --v2;
    }
    while (v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
  sub_2575942BC();
  sub_2576A7900();
  swift_bridgeObjectRelease();
  uint64_t v7 = 0x20666F20656E6FLL;
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_257671D74(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 1:
      BOOL v7 = a1 < a2 || a3 < a1;
      return !v7;
    case 2:
      BOOL v7 = a1 < a2;
      return !v7;
    case 3:
      BOOL v7 = a2 < a1;
      return !v7;
    case 4:
      uint64_t v8 = *(void *)(a2 + 16);
      if (!v8) {
        return 0;
      }
      sub_2574A88A0(a2, a3, 4);
      sub_2576A7810();
      uint64_t v9 = (char *)(a2 + 48);
      break;
    default:
      return a1 == a2;
  }
  do
  {
    uint64_t v10 = *((void *)v9 - 2);
    uint64_t v11 = *((void *)v9 - 1);
    uint64_t v12 = *v9;
    sub_2574A88A0(v10, v11, *v9);
    if (sub_257671D74(a1, v10, v11, v12))
    {
      OUTLINED_FUNCTION_12_50();
      sub_2574A88B4(v10, v11, v12);
      return 1;
    }
    v9 += 24;
    sub_2574A88B4(v10, v11, v12);
    --v8;
  }
  while (v8);
  OUTLINED_FUNCTION_12_50();
  return 0;
}

uint64_t sub_257671EAC(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      uint64_t v24 = 1612738153;
      sub_25748E38C();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 2:
      uint64_t v24 = 0;
      OUTLINED_FUNCTION_5_68();
      goto LABEL_6;
    case 3:
      uint64_t v24 = 0;
      OUTLINED_FUNCTION_6_64();
      goto LABEL_6;
    case 4:
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7)
      {
        __break(1u);
        JUMPOUT(0x257672094);
      }
      sub_2574A88A0(a1, a2, 4);
      uint64_t v8 = OUTLINED_FUNCTION_16_47();
      sub_2574A88A0(v8, v9, v10);
      uint64_t v11 = OUTLINED_FUNCTION_16_47();
      uint64_t v5 = sub_257671EAC(v11);
      uint64_t v12 = OUTLINED_FUNCTION_16_47();
      sub_2574A88B4(v12, v13, v14);
      uint64_t v15 = v7 - 1;
      if (v15)
      {
        uint64_t v16 = a1 + 72;
        do
        {
          sub_2576A7B00();
          v16 += 24;
          uint64_t v17 = OUTLINED_FUNCTION_13_51();
          sub_2574A88A0(v17, v18, v19);
          uint64_t v20 = OUTLINED_FUNCTION_13_51();
          sub_257671EAC(v20);
          uint64_t v21 = OUTLINED_FUNCTION_13_51();
          sub_2574A88B4(v21, v22, v23);
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          --v15;
        }
        while (v15);
      }
      sub_2574A88B4(a1, a2, 4);
      return v5;
    default:
      uint64_t v24 = 0;
LABEL_6:
      sub_2576A7B00();
      sub_2576A8A30();
LABEL_7:
      OUTLINED_FUNCTION_1_89();
      return v24;
  }
}

uint64_t ComparableExpectation.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_11_59();
  sub_2576A8C70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v54 = v4;
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  char v53 = (char *)&v49 - v5;
  OUTLINED_FUNCTION_11_59();
  sub_2576A8A40();
  OUTLINED_FUNCTION_0_10();
  uint64_t v51 = v7;
  uint64_t v52 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v49 - v8;
  OUTLINED_FUNCTION_11_59();
  uint64_t v10 = sub_2576A7980();
  OUTLINED_FUNCTION_0_10();
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v12);
  char v14 = (char *)&v49 - v13;
  OUTLINED_FUNCTION_0_10();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  char v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0_10();
  uint64_t v21 = v20;
  MEMORY[0x270FA5388](v22);
  __n128 v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (uint64_t *)((char *)&v49 - v25);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))((char *)&v49 - v25, v56, a1, v24);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = v50;
      OUTLINED_FUNCTION_22_41();
      v31();
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      sub_2576A7B00();
      swift_getWitnessTable();
      sub_2576A8F10();
      OUTLINED_FUNCTION_1_89();
      uint64_t v29 = v57;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v10);
      break;
    case 2u:
      uint64_t v33 = v51;
      uint64_t v32 = v52;
      OUTLINED_FUNCTION_23_36();
      OUTLINED_FUNCTION_22_41();
      v34();
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      OUTLINED_FUNCTION_5_68();
      sub_2576A7B00();
      sub_2576A8F00();
      OUTLINED_FUNCTION_1_89();
      uint64_t v29 = v57;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v32);
      break;
    case 3u:
      uint64_t v36 = v53;
      uint64_t v35 = v54;
      uint64_t v37 = v55;
      OUTLINED_FUNCTION_22_41();
      v38();
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      OUTLINED_FUNCTION_6_64();
      sub_2576A7B00();
      sub_2576A8F00();
      OUTLINED_FUNCTION_1_89();
      uint64_t v29 = v57;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
      break;
    case 4u:
      uint64_t v39 = *v26;
      sub_2576A7F90();
      uint64_t v29 = ComparableExpectation.description.getter(a1);
      unint64_t v41 = v40;
      unsigned __int8 v42 = *(void (**)(uint64_t))(v21 + 8);
      uint64_t v43 = OUTLINED_FUNCTION_20_39();
      v42(v43);
      uint64_t v44 = MEMORY[0x25A2B84C0](v39, a1);
      if (v44 < 1)
      {
        __break(1u);
        JUMPOUT(0x25767256CLL);
      }
      if (v44 != 1)
      {
        uint64_t v45 = v44;
        for (uint64_t i = 1; i != v45; ++i)
        {
          uint64_t v57 = v29;
          unint64_t v58 = v41;
          sub_2576A7B00();
          sub_2576A7F90();
          ComparableExpectation.description.getter(a1);
          uint64_t v47 = OUTLINED_FUNCTION_20_39();
          v42(v47);
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          uint64_t v29 = v57;
          unint64_t v41 = v58;
        }
      }
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v27 = v16;
      OUTLINED_FUNCTION_22_41();
      v28();
      uint64_t v57 = 0;
      unint64_t v58 = 0xE000000000000000;
      OUTLINED_FUNCTION_1_89();
      sub_2576A8F00();
      OUTLINED_FUNCTION_1_89();
      uint64_t v29 = v57;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v2);
      break;
  }
  return v29;
}

uint64_t DebugValueLocator.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000012;
      goto LABEL_5;
    case 2:
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000011;
LABEL_5:
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      return v18;
    case 3:
      uint64_t v3 = *(void *)(v2 + 32);
      uint64_t v4 = *(void *)(v2 + 40);
      LODWORD(v2) = *(unsigned __int8 *)(v2 + 48);
      if (v2 != 6 || (v4 | v3) != 0)
      {
        sub_25758EBD4(v3, v4, v2);
        uint64_t v6 = sub_2576A8730();
        uint64_t v7 = DebugValueLocator.description.getter(v6);
        swift_bridgeObjectRelease();
        unint64_t v19 = v7;
        sub_2576A7B00();
        sub_2576A7B00();
        sub_2576A7B00();
        uint64_t v8 = v3;
        uint64_t v9 = v4;
        goto LABEL_19;
      }
      OUTLINED_FUNCTION_3_68();
LABEL_27:
      sub_2576A7B00();
      goto LABEL_28;
    case 4:
      uint64_t v10 = *(void *)(v2 + 24);
      uint64_t v11 = *(void *)(v2 + 32);
      LODWORD(v2) = *(unsigned __int8 *)(v2 + 40);
      if (v2 == 3)
      {
        uint64_t v16 = *(void *)(v10 + 32);
        int v17 = *(unsigned __int8 *)(v10 + 48);
        if (v17 == 3)
        {
          if (*(unsigned char *)(v16 + 48) == 6 && *(_OWORD *)(v16 + 32) == 0)
          {
            OUTLINED_FUNCTION_13_3();
            sub_2576A8730();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_3_68();
            sub_2576A7B00();
            sub_2576A7B00();
            goto LABEL_38;
          }
        }
        else if (v17 == 6 && *(_OWORD *)(v10 + 32) == 0)
        {
          unint64_t v18 = 0x2E666C657360;
LABEL_38:
          sub_2576A7B00();
          sub_2576A7B00();
          goto LABEL_39;
        }
LABEL_16:
        sub_25758EBD4(v10, v11, v2);
        sub_2576A8730();
        swift_bridgeObjectRelease();
        unint64_t v19 = 0x7069726373627573;
        sub_2576A8EA0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        uint64_t v13 = sub_2576A7B00();
LABEL_18:
        DebugValueLocator.description.getter(v13);
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        uint64_t v8 = v10;
        uint64_t v9 = v11;
LABEL_19:
        sub_25758EF60(v8, v9, v2);
        return v19;
      }
      if (v2 != 6 || (v11 | v10) != 0) {
        goto LABEL_16;
      }
      unint64_t v18 = 0x5B666C657360;
LABEL_39:
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
LABEL_28:
      sub_2576A7B00();
      return v18;
    case 5:
      uint64_t v10 = *(void *)(v2 + 16);
      uint64_t v11 = *(void *)(v2 + 24);
      LOBYTE(v2) = *(unsigned char *)(v2 + 32);
      sub_25758EBD4(v10, v11, v2);
      sub_2576A8730();
      uint64_t v13 = swift_bridgeObjectRelease();
      unint64_t v19 = 0xD000000000000023;
      goto LABEL_18;
    case 6:
      if (v2 ^ 1 | v1) {
        uint64_t v15 = 0x706F207468676972;
      }
      else {
        uint64_t v15 = 0x65706F207466656CLL;
      }
      if (v2 | v1) {
        return v15;
      }
      else {
        return 0x60666C657360;
      }
    default:
      unint64_t v18 = 0x746E656D75677261;
      goto LABEL_27;
  }
}

uint64_t sub_257672A68()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  switch(v2)
  {
    case 255:
      sub_2574F050C();
      return sub_2576A85F0();
    case 254:
      return 95;
    case 253:
      return 3026478;
    default:
      uint64_t v5 = *(void *)(v0 + 8);
      uint64_t v4 = *(void *)(v0 + 16);
      uint64_t v6 = OUTLINED_FUNCTION_23_36();
      sub_2575942A8(v6, v7, v2);
      uint64_t v8 = sub_2576A8EA0();
      sub_2576A7B00();
      DebugValueLocator.description.getter();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_257675054(v1, v5, v4, v2);
      return v8;
  }
}

uint64_t sub_257672B90(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(*a1 + 16);
  char v7 = *(unsigned char *)(v1 + 16);
  sub_2574A88A0(v3, v4, v7);
  LOBYTE(v6) = sub_257671D74(v6, v3, v4, v7);
  sub_2574A88B4(v3, v4, v7);
  if ((v6 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    return 1;
  }
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + 32;
  uint64_t v13 = v5 + 32;
  while (1)
  {
    uint64_t v14 = v13 + 32 * v9;
    uint64_t result = *(void *)v14;
    int v16 = *(unsigned __int8 *)(v14 + 24);
    ++v9;
    if (v16 != 253)
    {
      if (v10 == v11) {
        goto LABEL_27;
      }
      if (v10 >= v11) {
        goto LABEL_28;
      }
      if ((v16 + 3) >= 2u && result != *(void *)(v12 + 8 * v10)) {
        return 0;
      }
      ++v10;
      goto LABEL_20;
    }
    if (__OFSUB__(v11, v10)) {
      goto LABEL_26;
    }
    if (v8 - v9 < v11 - v10) {
      break;
    }
LABEL_20:
    if (v8 == v9) {
      return 1;
    }
  }
  while (v11 != v10)
  {
    if (v10 >= v11) {
      goto LABEL_24;
    }
    if (__OFSUB__(v11, ++v10)) {
      goto LABEL_25;
    }
    if (v8 - v9 >= v11 - v10)
    {
      sub_257675078(result, *(void *)(v14 + 8), *(void *)(v14 + 16), 253);
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_257672CDC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_2576A8730();
  sub_2576A7B00();
  uint64_t v2 = OUTLINED_FUNCTION_17_45();
  sub_2574A88A0(v2, v3, v4);
  uint64_t v5 = OUTLINED_FUNCTION_17_45();
  sub_257671EAC(v5, v6, v7);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  uint64_t v8 = OUTLINED_FUNCTION_17_45();
  sub_2574A88B4(v8, v9, v10);
  sub_2576A7B00();
  uint64_t v11 = *(void *)(v1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v12 = (unsigned __int8 *)(v1 + 56);
    while (1)
    {
      int v13 = *v12;
      if ((v13 + 3) >= 2u)
      {
        if (v13 != 255)
        {
          swift_bridgeObjectRelease_n();
          sub_2576A7B00();
          uint64_t v14 = sub_2576A7810();
          sub_257670E20(v14);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
          sub_2575942BC();
          sub_2576A7900();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          return 0;
        }
        sub_257675054(*((void *)v12 - 3), *((void *)v12 - 2), *((void *)v12 - 1), 255);
      }
      v12 += 32;
      if (!--v11)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  MEMORY[0x25A2B83F0](v1, &unk_270670DB8);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  return 0;
}

unsigned __int8 *requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(unsigned __int8 *result, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  int v4 = *result;
  int v5 = *a3;
  uint64_t v6 = *(void *)a4;
  char v7 = *(unsigned char *)(a4 + 16);
  if (byte_27065CE18 != v4
    && byte_27065CE19 != v4
    && byte_27065CE1A != v4
    && byte_27065CE1B != v4)
  {
    uint64_t v12 = *(void *)a2;
    uint64_t v13 = *(void *)(a2 + 8);
    char v14 = *(unsigned char *)(a2 + 16);
    sub_25767AC64();
    OUTLINED_FUNCTION_8_63();
    sub_25758EBD4(v12, v13, v14);
    goto LABEL_20;
  }
  if (byte_27065CE18 != v5
    && byte_27065CE19 != v5
    && byte_27065CE1A != v5
    && byte_27065CE1B != v5)
  {
    uint64_t v15 = *(void *)(a4 + 8);
    sub_25767AC64();
    OUTLINED_FUNCTION_8_63();
    sub_25758EBD4(v6, v15, v7);
LABEL_20:
    sub_25746BF88();
  }
  return result;
}

uint64_t requireAxis(_:from:forRank:from:function:file:line:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = -a3;
  if (__OFSUB__(0, a3))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v4 > a3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >= a3 || v4 > result)
  {
LABEL_11:
    uint64_t v6 = *(void *)a4;
    uint64_t v7 = *(void *)(a4 + 8);
    char v8 = *(unsigned char *)(a4 + 16);
    OUTLINED_FUNCTION_7_60();
    sub_2575942A8(v9, v10, v11);
    sub_2575942A8(v6, v7, v8);
    OUTLINED_FUNCTION_2_75();
  }
  return result;
}

uint64_t sub_2576731B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(void, uint64_t, uint64_t), uint64_t (*a15)(uint64_t, uint64_t))
{
  uint64_t v18 = *(void *)a2;
  uint64_t v17 = *(void *)(a2 + 8);
  char v19 = *(unsigned char *)(a2 + 16);
  uint64_t v20 = *(void *)a4;
  uint64_t v21 = *(void *)(a4 + 8);
  char v26 = *(unsigned char *)(a4 + 16);
  uint64_t v22 = a14(0, a12, a13);
  uint64_t result = a15(a1, v22);
  if ((result & 1) == 0)
  {
    v27[3] = a12;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 16))(boxed_opaque_existential_0, a1, a12);
    v27[4] = v18;
    v27[5] = v17;
    char v28 = v19;
    v29[3] = v22;
    uint64_t v25 = __swift_allocate_boxed_opaque_existential_0(v29);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v25, a3, v22);
    v29[4] = v20;
    v29[5] = v21;
    char v30 = v26;
    char v31 = 12;
    sub_2575942A8(v18, v17, v19);
    sub_2575942A8(v20, v21, v26);
    sub_25746BF88();
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_25758EC2C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ScalarTypeExpectation(uint64_t a1)
{
  return sub_25758EFB8(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_25758EC2C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_25758EFB8(v5, v6);
  return a1;
}

uint64_t assignWithTake for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_25758EFB8(v4, v5);
  return a1;
}

void type metadata accessor for ScalarTypeExpectation()
{
}

uint64_t sub_25767343C()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = sub_2576A7980();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

void *sub_25767352C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = v8;
  unint64_t v10 = v7 + v8;
  if ((v10 & ~(unint64_t)v8) + v7 > v7) {
    v7 += v10 & ~(unint64_t)v8;
  }
  if (v7 <= 8) {
    uint64_t v11 = 8;
  }
  else {
    uint64_t v11 = v7;
  }
  int v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    void *v4 = *(void *)a2;
    uint64_t v4 = (void *)(v15 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v11];
    unsigned int v17 = v16 - 5;
    if (v16 >= 5)
    {
      if (v11 <= 3) {
        uint64_t v18 = v11;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          goto LABEL_24;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          goto LABEL_24;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_24;
        case 4:
          int v19 = *(_DWORD *)a2;
LABEL_24:
          int v20 = (v19 | (v17 << (8 * v11))) + 5;
          unsigned int v16 = v19 + 5;
          if (v11 < 4) {
            unsigned int v16 = v20;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v21 = ~v9;
    switch(v16)
    {
      case 1u:
        uint64_t v23 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16);
        v23(a1, a2, v5);
        v23((void *)(((unint64_t)v4 + v10) & v21), (unsigned __int8 *)((unint64_t)&a2[v10] & v21), v5);
        char v22 = 1;
        goto LABEL_32;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v22 = 2;
        goto LABEL_32;
      case 3u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v22 = 3;
LABEL_32:
        *((unsigned char *)v4 + v11) = v22;
        break;
      case 4u:
        *a1 = *(void *)a2;
        *((unsigned char *)a1 + v11) = 4;
        sub_2576A7810();
        break;
      default:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        *((unsigned char *)v4 + v11) = 0;
        break;
    }
  }
  return v4;
}

uint64_t sub_2576737A8(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5) {
    v5 += (v5 + v6) & ~v6;
  }
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  unsigned int v8 = a1[v5];
  unsigned int v9 = v8 - 5;
  if (v8 >= 5)
  {
    if (v5 <= 3) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a1;
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v11 = *(_DWORD *)a1;
LABEL_14:
        int v12 = (v11 | (v9 << (8 * v5))) + 5;
        unsigned int v8 = v11 + 5;
        if (v5 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v13 = ~v6;
  switch(v8)
  {
    case 1u:
      unsigned int v17 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v17(a1, v3);
      a1 = (unsigned __int8 *)((unint64_t)&v2[v7] & v13);
      uint64_t v15 = v3;
      char v14 = (uint64_t (*)(unsigned __int8 *, uint64_t))v17;
      goto LABEL_19;
    case 4u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      char v14 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      uint64_t v15 = *(void *)(a2 + 16);
LABEL_19:
      uint64_t result = v14(a1, v15);
      break;
  }
  return result;
}

void *sub_25767398C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 > v7) {
    v7 += (v7 + v8) & ~v8;
  }
  if (v7 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v7;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 5;
  if (v11 >= 5)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_15;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_15:
        int v15 = (v14 | (v12 << (8 * v10))) + 5;
        unsigned int v11 = v14 + 5;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v8;
  switch(v11)
  {
    case 1u:
      unsigned int v17 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16);
      v17(a1, a2, v5);
      v17((void *)(((unint64_t)a1 + v9) & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v18 = 1;
      goto LABEL_22;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 2;
      goto LABEL_22;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 3;
LABEL_22:
      *((unsigned char *)a1 + v10) = v18;
      break;
    case 4u:
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v10) = 4;
      sub_2576A7810();
      break;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v10) = 0;
      break;
  }
  return a1;
}

unsigned __int8 *sub_257673BC8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 > v7) {
      v7 += (v7 + v8) & ~v8;
    }
    if (v7 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v7;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 5;
    if (v11 >= 5)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 5;
          unsigned int v11 = v14 + 5;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    switch(v11)
    {
      case 1u:
        unsigned int v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v17(a1, v5);
        v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        break;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 5;
    if (v18 >= 5)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_31;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_31:
          int v22 = (v21 | (v19 << (8 * v10))) + 5;
          unsigned int v18 = v21 + 5;
          if (v10 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    switch(v18)
    {
      case 1u:
        __n128 v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16);
        v24(a1, a2, v5);
        v24((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
        char v23 = 1;
        goto LABEL_39;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v23 = 2;
        goto LABEL_39;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        char v23 = 3;
LABEL_39:
        a1[v10] = v23;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        a1[v10] = 4;
        sub_2576A7810();
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        a1[v10] = 0;
        break;
    }
  }
  return a1;
}

void *sub_257673F38(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 > v7) {
    v7 += (v7 + v8) & ~v8;
  }
  if (v7 <= 8) {
    uint64_t v10 = 8;
  }
  else {
    uint64_t v10 = v7;
  }
  unsigned int v11 = a2[v10];
  unsigned int v12 = v11 - 5;
  if (v11 >= 5)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_15;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_15:
        int v15 = (v14 | (v12 << (8 * v10))) + 5;
        unsigned int v11 = v14 + 5;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v16 = ~v8;
  switch(v11)
  {
    case 1u:
      unsigned int v18 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32);
      v18(a1, a2, v5);
      v18((void *)(((unint64_t)a1 + v9) & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
      char v17 = 1;
      break;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v17 = 2;
      break;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v17 = 3;
      break;
    case 4u:
      *a1 = *(void *)a2;
      char v17 = 4;
      break;
    default:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v17 = 0;
      break;
  }
  *((unsigned char *)a1 + v10) = v17;
  return a1;
}

unsigned __int8 *sub_25767416C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    unint64_t v7 = *(void *)(v6 + 64);
    uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 > v7) {
      v7 += (v7 + v8) & ~v8;
    }
    if (v7 <= 8) {
      uint64_t v10 = 8;
    }
    else {
      uint64_t v10 = v7;
    }
    unsigned int v11 = a1[v10];
    unsigned int v12 = v11 - 5;
    if (v11 >= 5)
    {
      if (v10 <= 3) {
        uint64_t v13 = v10;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a1;
          goto LABEL_16;
        case 2:
          int v14 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v14 = *(_DWORD *)a1;
LABEL_16:
          int v15 = (v14 | (v12 << (8 * v10))) + 5;
          unsigned int v11 = v14 + 5;
          if (v10 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v16 = ~v8;
    switch(v11)
    {
      case 1u:
        char v17 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
        v17(a1, v5);
        v17((unsigned __int8 *)((unint64_t)&a1[v9] & v16), v5);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        break;
      default:
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
        break;
    }
    unsigned int v18 = a2[v10];
    unsigned int v19 = v18 - 5;
    if (v18 >= 5)
    {
      if (v10 <= 3) {
        uint64_t v20 = v10;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          goto LABEL_31;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v21 = *(_DWORD *)a2;
LABEL_31:
          int v22 = (v21 | (v19 << (8 * v10))) + 5;
          unsigned int v18 = v21 + 5;
          if (v10 < 4) {
            unsigned int v18 = v22;
          }
          break;
        default:
          break;
      }
    }
    switch(v18)
    {
      case 1u:
        __n128 v24 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32);
        v24(a1, a2, v5);
        v24((unsigned __int8 *)((unint64_t)&a1[v9] & v16), (unsigned __int8 *)((unint64_t)&a2[v9] & v16), v5);
        char v23 = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v23 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v23 = 3;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v23 = 4;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        char v23 = 0;
        break;
    }
    a1[v10] = v23;
  }
  return a1;
}

uint64_t sub_2576744D4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 > v4) {
    unint64_t v4 = v5;
  }
  uint64_t v6 = 8;
  if (v4 > 8) {
    uint64_t v6 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_24;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 251) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 < 2)
    {
LABEL_24:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 5) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_24;
  }
LABEL_16:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 252;
}

void sub_25767464C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 > v6) {
    unint64_t v6 = v7;
  }
  if (v6 <= 8) {
    unint64_t v6 = 8;
  }
  size_t v8 = v6 + 1;
  char v9 = 8 * (v6 + 1);
  if (a3 < 0xFC)
  {
    int v10 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << v9) - 251) >> v9) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFB)
  {
    unsigned int v11 = a2 - 252;
    if (v8 < 4)
    {
      int v12 = (v11 >> v9) + 1;
      if (v6 != -1)
      {
        int v14 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v8] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v12;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x257674854);
      case 4:
        *(_DWORD *)&a1[v8] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_25767487C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 > v3) {
    unint64_t v3 = v4;
  }
  uint64_t v5 = 8;
  if (v3 > 8) {
    uint64_t v5 = v3;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 5;
  if (v6 >= 5)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 5;
        LODWORD(v6) = v9 + 5;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_257674978(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  unint64_t v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 4)
  {
    if (v6 > v5) {
      unint64_t v5 = v6;
    }
    if (v5 <= 8) {
      size_t v7 = 8;
    }
    else {
      size_t v7 = v5;
    }
    unsigned int v8 = a2 - 5;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 5;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 5;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5) {
      unint64_t v5 = v6;
    }
    if (v5 <= 8) {
      unint64_t v5 = 8;
    }
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for ComparableExpectation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for DebugValueLocator(uint64_t a1)
{
  return sub_25758EF60(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14NeuralNetworks17DebugValueLocatorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_25758EBD4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugValueLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_25758EBD4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_25758EF60(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugValueLocator(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_25758EF60(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugValueLocator(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFA && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugValueLocator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 250;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_257674C44(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_257674C5C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(void *)uint64_t result = a2 - 6;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

void type metadata accessor for DebugValueLocator()
{
}

uint64_t sub_257674C80(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 24);
  if (v1 <= 6) {
    return sub_25758EF60(*(void *)(result + 8), *(void *)(result + 16), v1);
  }
  return result;
}

uint64_t sub_257674C9C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a2 + 24);
  if ((v3 + 1) > 7u)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    if (v3 == 255)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    }
    else
    {
      uint64_t v4 = *(void *)(a2 + 8);
      uint64_t v5 = *(void *)(a2 + 16);
      sub_25758EBD4(v4, v5, v3);
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = v5;
      *(unsigned char *)(a1 + 24) = v3;
    }
  }
  return a1;
}

uint64_t sub_257674D38(uint64_t a1, long long *a2)
{
  uint64_t v4 = a1 + 8;
  int v5 = *(unsigned __int8 *)(a1 + 24);
  char v6 = (long long *)((char *)a2 + 8);
  unsigned int v7 = (*((unsigned char *)a2 + 24) + 1);
  if ((v5 + 1) > 7u)
  {
    if (v7 <= 7)
    {
      *(void *)a1 = *(void *)a2;
      int v8 = *((unsigned __int8 *)a2 + 24);
      goto LABEL_8;
    }
LABEL_12:
    long long v16 = *a2;
    *(_OWORD *)(a1 + 9) = *(long long *)((char *)a2 + 9);
    *(_OWORD *)a1 = v16;
    return a1;
  }
  if (v7 > 7)
  {
    if (v5 != 255) {
      sub_25758EF60(*(void *)(a1 + 8), *(void *)(a1 + 16), v5);
    }
    goto LABEL_12;
  }
  *(void *)a1 = *(void *)a2;
  int v8 = *((unsigned __int8 *)a2 + 24);
  if (v5 != 255)
  {
    if (v8 == 255)
    {
      sub_257674E74(a1 + 8);
      char v18 = *((unsigned char *)v6 + 16);
      *(_OWORD *)uint64_t v4 = *v6;
      *(unsigned char *)(v4 + 16) = v18;
    }
    else
    {
      uint64_t v10 = *((void *)a2 + 1);
      uint64_t v9 = *((void *)a2 + 2);
      sub_25758EBD4(v10, v9, v8);
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = *(void *)(a1 + 16);
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v9;
      char v13 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v8;
      sub_25758EF60(v11, v12, v13);
    }
    return a1;
  }
LABEL_8:
  if (v8 == 255)
  {
    long long v17 = *v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(_OWORD *)uint64_t v4 = v17;
  }
  else
  {
    uint64_t v15 = *((void *)a2 + 1);
    uint64_t v14 = *((void *)a2 + 2);
    sub_25758EBD4(v15, v14, v8);
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v14;
    *(unsigned char *)(a1 + 24) = v8;
  }
  return a1;
}

uint64_t sub_257674E74(uint64_t a1)
{
  return a1;
}

uint64_t sub_257674EA4(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 24);
  if ((v4 + 1) > 7u)
  {
LABEL_8:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if ((v5 + 1) > 7u)
  {
    if (v4 != 255) {
      sub_25758EF60(*(void *)(a1 + 8), *(void *)(a1 + 16), v4);
    }
    goto LABEL_8;
  }
  char v6 = (_OWORD *)(a1 + 8);
  unsigned int v7 = (_OWORD *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  if (v4 == 255)
  {
LABEL_11:
    *char v6 = *v7;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    return a1;
  }
  if (v5 == 255)
  {
    sub_257674E74(a1 + 8);
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *v7;
  *(unsigned char *)(a1 + 24) = v5;
  sub_25758EF60(v8, v9, v4);
  return a1;
}

uint64_t sub_257674F70(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 6) {
    unsigned int v4 = 0;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 >= 3) {
    return v4 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_257674FB8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -3 - a2;
    }
  }
  return result;
}

uint64_t sub_257675008(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  if (v1 <= 6) {
    return 0;
  }
  else {
    return v1 ^ 0xFF;
  }
}

uint64_t sub_25767501C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xF8)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 249;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 24) = ~(_BYTE)a2;
  }
  return result;
}

void type metadata accessor for DimensionExpectation()
{
}

uint64_t sub_257675054(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 + 3) >= 2u) {
    return sub_257594294(a2, a3, a4);
  }
  return result;
}

uint64_t sub_257675078(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 + 3) >= 2u) {
    return sub_2575942A8(a2, a3, a4);
  }
  return result;
}

uint64_t sub_25767509C(uint64_t a1)
{
  sub_2574A88B4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2576750E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_2574A88A0(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_2576A7810();
  return a1;
}

uint64_t sub_257675144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_2574A88A0(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_2574A88B4(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2576751C0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_2574A88B4(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_257675218(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_257675258(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ShapeExpectation()
{
}

uint64_t OUTLINED_FUNCTION_1_89()
{
  return sub_2576A7B00();
}

void OUTLINED_FUNCTION_2_75()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_68()
{
  return 0x747361656C207461;
}

uint64_t OUTLINED_FUNCTION_6_64()
{
  return 0x2074736F6D207461;
}

uint64_t OUTLINED_FUNCTION_9_64()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_11_59()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_50()
{
  sub_2574A88B4(v1, v0, 4);
  return sub_2574A88B4(v1, v0, 4);
}

uint64_t OUTLINED_FUNCTION_13_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_45()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_18_43()
{
  return v0[2];
}

uint64_t OUTLINED_FUNCTION_19_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_36()
{
  return v0;
}

BOOL static ScalarType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *static ScalarType.floatingPointTypes.getter()
{
  return &unk_27065D040;
}

uint64_t ScalarType.stride.getter()
{
  unsigned int v1 = *v0 - 1;
  if (v1 > 0xA) {
    return OUTLINED_FUNCTION_15_2();
  }
  else {
    return OUTLINED_FUNCTION_16_48((char)v1);
  }
}

uint64_t ScalarType.alignment.getter()
{
  unsigned int v1 = *v0 - 1;
  if (v1 > 0xA) {
    return OUTLINED_FUNCTION_15_2();
  }
  else {
    return OUTLINED_FUNCTION_16_48((char)v1);
  }
}

BOOL ScalarType.isFloatingPoint.getter()
{
  if (!qword_27065D050) {
    return 0;
  }
  int v1 = *v0;
  uint64_t v2 = qword_27065D050 - 1;
  uint64_t v3 = asc_27065D060;
  do
  {
    int v4 = *v3++;
    BOOL result = v4 == v1;
  }
  while (v4 != v1 && v2-- != 0);
  return result;
}

uint64_t sub_25767553C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 32))(&var1);
  unsigned int v2 = var1 - 1;
  if (v2 > 0xA) {
    return 1;
  }
  else {
    return qword_2576C11B0[(char)v2];
  }
}

Swift::Bool __swiftcall ScalarType.isCastable(to:)(NeuralNetworks::ScalarType to)
{
  int v2 = *(unsigned __int8 *)to;
  int v3 = *v1;
  BOOL v4 = sub_2575A0094(v3, (uint64_t)&unk_27065D040);
  swift_bridgeObjectRelease();
  if (v4)
  {
    BOOL v5 = sub_2575A0094(v2, (uint64_t)&unk_27065D650);
    swift_bridgeObjectRelease();
    if (v5) {
      return 0;
    }
  }
  if (v2 == 12) {
    return v3 == 12;
  }
  return 1;
}

BOOL ScalarType.isInteger.getter()
{
  BOOL v1 = sub_2575A0094(*v0, (uint64_t)&unk_27065D650);
  swift_bridgeObjectRelease();
  return v1;
}

void *static ScalarType.integerTypes.getter()
{
  return &unk_27065D650;
}

BOOL sub_257675674(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 32))(&v4);
  BOOL v2 = sub_2575A0094(v4, (uint64_t)&unk_27065D040);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t ScalarType.size.getter()
{
  unsigned int v1 = *v0 - 1;
  if (v1 > 0xA) {
    return OUTLINED_FUNCTION_15_2();
  }
  else {
    return OUTLINED_FUNCTION_16_48((char)v1);
  }
}

void static ScalarType.int.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void *static ScalarType.unsignedTypes.getter()
{
  return &unk_270660338;
}

BOOL ScalarType.isUnsigned.getter()
{
  if (!qword_270660348) {
    return 0;
  }
  int v1 = *v0;
  uint64_t v2 = qword_270660348 - 1;
  int v3 = &byte_270660358;
  do
  {
    int v4 = *v3++;
    BOOL result = v4 == v1;
  }
  while (v4 != v1 && v2-- != 0);
  return result;
}

uint64_t ScalarType.hash(into:)()
{
  return sub_2576A90A0();
}

uint64_t sub_25767577C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 947154537 && a2 == 0xE400000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x3631746E69 && a2 == 0xE500000000000000;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x3233746E69 && a2 == 0xE500000000000000;
      if (v7 || (sub_2576A8F60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x3436746E69 && a2 == 0xE500000000000000;
        if (v8 || (sub_2576A8F60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x38746E6975 && a2 == 0xE500000000000000;
          if (v9 || (sub_2576A8F60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x3631746E6975 && a2 == 0xE600000000000000;
            if (v10 || (sub_2576A8F60() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x3233746E6975 && a2 == 0xE600000000000000;
              if (v11 || (sub_2576A8F60() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                BOOL v12 = a1 == 0x3436746E6975 && a2 == 0xE600000000000000;
                if (v12 || (sub_2576A8F60() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else
                {
                  BOOL v13 = a1 == 0x363174616F6C66 && a2 == 0xE700000000000000;
                  if (v13 || (sub_2576A8F60() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 8;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x363174616F6C6662 && a2 == 0xE800000000000000;
                    if (v14 || (sub_2576A8F60() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 9;
                    }
                    else
                    {
                      BOOL v15 = a1 == 0x323374616F6C66 && a2 == 0xE700000000000000;
                      if (v15 || (sub_2576A8F60() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 10;
                      }
                      else
                      {
                        BOOL v16 = a1 == 0x343674616F6C66 && a2 == 0xE700000000000000;
                        if (v16 || (sub_2576A8F60() & 1) != 0)
                        {
                          swift_bridgeObjectRelease();
                          return 11;
                        }
                        else if (a1 == 1819242338 && a2 == 0xE400000000000000)
                        {
                          swift_bridgeObjectRelease();
                          return 12;
                        }
                        else
                        {
                          char v18 = sub_2576A8F60();
                          swift_bridgeObjectRelease();
                          if (v18) {
                            return 12;
                          }
                          else {
                            return 13;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_257675C30()
{
  return 13;
}

uint64_t sub_257675C38(char a1)
{
  uint64_t result = 947154537;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x3631746E69;
      break;
    case 2:
      uint64_t result = 0x3233746E69;
      break;
    case 3:
      uint64_t result = 0x3436746E69;
      break;
    case 4:
      uint64_t result = 0x38746E6975;
      break;
    case 5:
      uint64_t result = 0x3631746E6975;
      break;
    case 6:
      uint64_t result = 0x3233746E6975;
      break;
    case 7:
      uint64_t result = 0x3436746E6975;
      break;
    case 8:
      uint64_t result = 0x363174616F6C66;
      break;
    case 9:
      uint64_t result = 0x363174616F6C6662;
      break;
    case 10:
      uint64_t result = 0x323374616F6C66;
      break;
    case 11:
      uint64_t result = 0x343674616F6C66;
      break;
    case 12:
      uint64_t result = 1819242338;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257675D98(uint64_t a1)
{
  unint64_t v2 = sub_25767781C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257675DD4(uint64_t a1)
{
  unint64_t v2 = sub_25767781C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257675E10(uint64_t a1)
{
  unint64_t v2 = sub_257677738();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257675E4C(uint64_t a1)
{
  unint64_t v2 = sub_257677738();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257675E88()
{
  return sub_257675C38(*v0);
}

uint64_t sub_257675E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25767577C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257675EB8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257675C30();
  *a1 = result;
  return result;
}

uint64_t sub_257675EE0(uint64_t a1)
{
  unint64_t v2 = sub_2576776EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257675F1C(uint64_t a1)
{
  unint64_t v2 = sub_2576776EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257675F58(uint64_t a1)
{
  unint64_t v2 = sub_257677868();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257675F94(uint64_t a1)
{
  unint64_t v2 = sub_257677868();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257675FD0(uint64_t a1)
{
  unint64_t v2 = sub_2576777D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25767600C(uint64_t a1)
{
  unint64_t v2 = sub_2576777D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676048(uint64_t a1)
{
  unint64_t v2 = sub_257677784();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257676084(uint64_t a1)
{
  unint64_t v2 = sub_257677784();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2576760C0(uint64_t a1)
{
  unint64_t v2 = sub_257677A7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2576760FC(uint64_t a1)
{
  unint64_t v2 = sub_257677A7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676138(uint64_t a1)
{
  unint64_t v2 = sub_257677A30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257676174(uint64_t a1)
{
  unint64_t v2 = sub_257677A30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2576761B0(uint64_t a1)
{
  unint64_t v2 = sub_2576779E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2576761EC(uint64_t a1)
{
  unint64_t v2 = sub_2576779E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676228(uint64_t a1)
{
  unint64_t v2 = sub_257677AC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257676264(uint64_t a1)
{
  unint64_t v2 = sub_257677AC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2576762A0(uint64_t a1)
{
  unint64_t v2 = sub_25767794C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2576762DC(uint64_t a1)
{
  unint64_t v2 = sub_25767794C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676318(uint64_t a1)
{
  unint64_t v2 = sub_257677900();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257676354(uint64_t a1)
{
  unint64_t v2 = sub_257677900();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676390(uint64_t a1)
{
  unint64_t v2 = sub_2576778B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2576763CC(uint64_t a1)
{
  unint64_t v2 = sub_2576778B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_257676408(uint64_t a1)
{
  unint64_t v2 = sub_257677998();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257676444(uint64_t a1)
{
  unint64_t v2 = sub_257677998();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ScalarType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E68);
  OUTLINED_FUNCTION_0_8();
  uint64_t v87 = v5;
  uint64_t v88 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_9_65(v6, v58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E70);
  OUTLINED_FUNCTION_0_8();
  uint64_t v84 = v8;
  uint64_t v85 = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_34_20(v9, v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E78);
  OUTLINED_FUNCTION_0_8();
  uint64_t v81 = v11;
  uint64_t v82 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_33_19(v12, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E80);
  OUTLINED_FUNCTION_0_8();
  uint64_t v78 = v14;
  uint64_t v79 = v13;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_3();
  uint64_t v77 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E88);
  OUTLINED_FUNCTION_0_8();
  uint64_t v75 = v17;
  uint64_t v76 = v16;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_3();
  uint64_t v74 = v18;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E90);
  OUTLINED_FUNCTION_0_8();
  uint64_t v72 = v19;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v21);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005E98);
  OUTLINED_FUNCTION_0_8();
  uint64_t v70 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v24);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EA0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v68 = v25;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v27);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EA8);
  OUTLINED_FUNCTION_0_8();
  uint64_t v66 = v28;
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v30);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EB0);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v32);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EB8);
  OUTLINED_FUNCTION_0_8();
  uint64_t v63 = v33;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v35);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EC0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v61 = v37;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_8_0();
  uint64_t v41 = v40 - v39;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005EC8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_32_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005ED0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v90 = v44;
  uint64_t v91 = v45;
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_8_0();
  BOOL v48 = (void *)(v47 - v46);
  uint64_t v49 = *v2;
  uint64_t v50 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2576776EC();
  uint64_t v89 = v48;
  sub_2576A9230();
  switch(v49)
  {
    case 1:
      v92[4] = 1;
      sub_257677A7C();
      uint64_t v50 = v89;
      BOOL v48 = v90;
      sub_2576A8DB0();
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v41, v36);
      return (*(uint64_t (**)(void *, void *))(v91 + 8))(v50, v48);
    case 2:
      v92[5] = 2;
      sub_257677A30();
      sub_2576A8DB0();
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
      return (*(uint64_t (**)(void *, void *))(v91 + 8))(v89, v90);
    case 3:
      v92[6] = 3;
      sub_2576779E4();
      OUTLINED_FUNCTION_4_76();
      uint64_t v51 = OUTLINED_FUNCTION_27_13();
      uint64_t v55 = v92;
      goto LABEL_9;
    case 4:
      v92[7] = 4;
      sub_257677998();
      OUTLINED_FUNCTION_4_76();
      uint64_t v51 = OUTLINED_FUNCTION_27_13();
      uint64_t v55 = v93;
      goto LABEL_9;
    case 5:
      v93[0] = 5;
      sub_25767794C();
      OUTLINED_FUNCTION_4_76();
      uint64_t v51 = OUTLINED_FUNCTION_17_46();
      goto LABEL_9;
    case 6:
      v93[1] = 6;
      sub_257677900();
      OUTLINED_FUNCTION_4_76();
      uint64_t v51 = OUTLINED_FUNCTION_13_52();
LABEL_9:
      uint64_t v53 = *((void *)v55 - 32);
      break;
    case 7:
      v93[2] = 7;
      sub_2576778B4();
      OUTLINED_FUNCTION_4_76();
      uint64_t v51 = OUTLINED_FUNCTION_27_13();
      uint64_t v53 = v73;
      break;
    case 8:
      v93[3] = 8;
      sub_257677868();
      uint64_t v56 = v74;
      OUTLINED_FUNCTION_4_76();
      uint64_t v57 = v75;
      uint64_t v53 = v76;
      goto LABEL_16;
    case 9:
      v93[4] = 9;
      sub_25767781C();
      uint64_t v56 = v77;
      OUTLINED_FUNCTION_4_76();
      uint64_t v57 = v78;
      uint64_t v53 = v79;
      goto LABEL_16;
    case 10:
      v93[5] = 10;
      sub_2576777D0();
      uint64_t v56 = v80;
      OUTLINED_FUNCTION_4_76();
      uint64_t v57 = v81;
      uint64_t v53 = v82;
      goto LABEL_16;
    case 11:
      v93[6] = 11;
      sub_257677784();
      uint64_t v56 = v83;
      OUTLINED_FUNCTION_4_76();
      uint64_t v57 = v84;
      uint64_t v53 = v85;
      goto LABEL_16;
    case 12:
      v93[7] = 12;
      sub_257677738();
      uint64_t v56 = v86;
      OUTLINED_FUNCTION_4_76();
      uint64_t v57 = v87;
      uint64_t v53 = v88;
LABEL_16:
      uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      uint64_t v51 = v56;
      break;
    default:
      v92[3] = 0;
      sub_257677AC8();
      uint64_t v50 = v89;
      BOOL v48 = v90;
      sub_2576A8DB0();
      uint64_t v51 = OUTLINED_FUNCTION_12_51();
      uint64_t v53 = v42;
      break;
  }
  v52(v51, v53);
  return (*(uint64_t (**)(void *, void *))(v91 + 8))(v50, v48);
}

uint64_t ScalarType.hashValue.getter()
{
  return sub_2576A9100();
}

uint64_t ScalarType.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v114 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F48);
  OUTLINED_FUNCTION_0_8();
  uint64_t v106 = v5;
  uint64_t v107 = v4;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_9_65(v6, v76);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F50);
  OUTLINED_FUNCTION_0_8();
  uint64_t v104 = v8;
  uint64_t v105 = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_3();
  uint64_t v112 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F58);
  OUTLINED_FUNCTION_0_8();
  uint64_t v102 = v11;
  uint64_t v103 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_3();
  uint64_t v111 = v12;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F60);
  OUTLINED_FUNCTION_0_8();
  uint64_t v100 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_34_20(v15, v77);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F68);
  OUTLINED_FUNCTION_0_8();
  uint64_t v98 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_3();
  uint64_t v110 = v18;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F70);
  OUTLINED_FUNCTION_0_8();
  uint64_t v97 = v19;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_3_3();
  uint64_t v108 = v21;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F78);
  OUTLINED_FUNCTION_0_8();
  uint64_t v95 = v22;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_3_3();
  uint64_t v116 = v24;
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F80);
  OUTLINED_FUNCTION_0_8();
  uint64_t v93 = v25;
  MEMORY[0x270FA5388](v26);
  OUTLINED_FUNCTION_3_3();
  uint64_t v109 = v27;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F88);
  OUTLINED_FUNCTION_0_8();
  uint64_t v91 = v28;
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_33_19(v30, v78);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F90);
  OUTLINED_FUNCTION_0_8();
  uint64_t v89 = v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_3_3();
  v115[1] = v33;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005F98);
  OUTLINED_FUNCTION_0_8();
  uint64_t v86 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_3_3();
  v115[0] = v36;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005FA0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v84 = v37;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_32_11();
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005FA8);
  OUTLINED_FUNCTION_0_8();
  uint64_t v83 = v40;
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_8_0();
  uint64_t v44 = v43 - v42;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A005FB0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_8_0();
  uint64_t v51 = v50 - v49;
  uint64_t v52 = a1[3];
  uint64_t v117 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v52);
  sub_2576776EC();
  sub_2576A91F0();
  if (v118)
  {
    uint64_t v53 = (uint64_t)v117;
LABEL_8:
    uint64_t v69 = v53;
    return __swift_destroy_boxed_opaque_existential_1(v69);
  }
  uint64_t v80 = v44;
  uint64_t v79 = v39;
  uint64_t v81 = v2;
  uint64_t v118 = v47;
  uint64_t v54 = sub_2576A8D90();
  uint64_t v55 = *(void *)(v54 + 16);
  if (!v55
    || (uint64_t v82 = *(unsigned __int8 *)(v54 + 32),
        sub_257677B4C(1, v55, v54, v54 + 32, 0, (2 * v55) | 1),
        uint64_t v57 = v56,
        unint64_t v59 = v58,
        swift_bridgeObjectRelease(),
        v57 != v59 >> 1))
  {
    uint64_t v64 = v45;
    uint64_t v53 = (uint64_t)v117;
    uint64_t v65 = v118;
    uint64_t v66 = sub_2576A8800();
    swift_allocError();
    uint64_t v68 = v67;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CB8);
    *uint64_t v68 = &type metadata for ScalarType;
    sub_2576A8CE0();
    sub_2576A87F0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v66 - 8) + 104))(v68, *MEMORY[0x263F8DCB0], v66);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v51, v64);
    goto LABEL_8;
  }
  uint64_t v60 = v114;
  switch(v82)
  {
    case 1:
      char v121 = 1;
      sub_257677A7C();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Int16CodingKeys, (uint64_t)&v121);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = v115;
      goto LABEL_19;
    case 2:
      char v122 = 2;
      sub_257677A30();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Int32CodingKeys, (uint64_t)&v122);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = &v116;
      goto LABEL_19;
    case 3:
      char v123 = 3;
      sub_2576779E4();
      OUTLINED_FUNCTION_3_69((uint64_t)&type metadata for ScalarType.Int64CodingKeys, (uint64_t)&v123);
      uint64_t v61 = OUTLINED_FUNCTION_12_51();
      uint64_t v63 = (uint64_t *)&v119;
      goto LABEL_19;
    case 4:
      char v124 = 4;
      sub_257677998();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Uint8CodingKeys, (uint64_t)&v124);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = (uint64_t *)&v117;
      goto LABEL_19;
    case 5:
      char v126 = 5;
      sub_25767794C();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Uint16CodingKeys, (uint64_t)&v126);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = &v125;
      goto LABEL_19;
    case 6:
      char v127 = 6;
      sub_257677900();
      OUTLINED_FUNCTION_3_69((uint64_t)&type metadata for ScalarType.Uint32CodingKeys, (uint64_t)&v127);
      uint64_t v61 = OUTLINED_FUNCTION_12_51();
      uint64_t v63 = &v134;
      goto LABEL_19;
    case 7:
      char v128 = 7;
      sub_2576778B4();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Uint64CodingKeys, (uint64_t)&v128);
      uint64_t v61 = OUTLINED_FUNCTION_17_46();
      goto LABEL_19;
    case 8:
      char v129 = 8;
      sub_257677868();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Float16CodingKeys, (uint64_t)&v129);
      uint64_t v61 = OUTLINED_FUNCTION_13_52();
      goto LABEL_19;
    case 9:
      char v130 = 9;
      sub_25767781C();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Bfloat16CodingKeys, (uint64_t)&v130);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = &v135;
      goto LABEL_19;
    case 10:
      char v131 = 10;
      sub_2576777D0();
      uint64_t v72 = v111;
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Float32CodingKeys, (uint64_t)&v131);
      uint64_t v73 = v102;
      uint64_t v71 = v103;
      goto LABEL_23;
    case 11:
      char v132 = 11;
      sub_257677784();
      uint64_t v72 = v112;
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Float64CodingKeys, (uint64_t)&v132);
      uint64_t v73 = v104;
      uint64_t v71 = v105;
      goto LABEL_23;
    case 12:
      char v133 = 12;
      sub_257677738();
      uint64_t v72 = v113;
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.BoolCodingKeys, (uint64_t)&v133);
      uint64_t v73 = v106;
      uint64_t v71 = v107;
LABEL_23:
      uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
      uint64_t v61 = v72;
      break;
    default:
      char v120 = 0;
      sub_257677AC8();
      OUTLINED_FUNCTION_2_76((uint64_t)&type metadata for ScalarType.Int8CodingKeys, (uint64_t)&v120);
      uint64_t v61 = OUTLINED_FUNCTION_27_13();
      uint64_t v63 = &v110;
LABEL_19:
      uint64_t v71 = *(v63 - 32);
      break;
  }
  v62(v61, v71);
  swift_unknownObjectRelease();
  uint64_t v74 = OUTLINED_FUNCTION_3_35();
  v75(v74);
  uint64_t v69 = (uint64_t)v117;
  *uint64_t v60 = v82;
  return __swift_destroy_boxed_opaque_existential_1(v69);
}

unint64_t sub_2576776EC()
{
  unint64_t result = qword_26A005ED8;
  if (!qword_26A005ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005ED8);
  }
  return result;
}

unint64_t sub_257677738()
{
  unint64_t result = qword_26A005EE0;
  if (!qword_26A005EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005EE0);
  }
  return result;
}

unint64_t sub_257677784()
{
  unint64_t result = qword_26A005EE8;
  if (!qword_26A005EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005EE8);
  }
  return result;
}

unint64_t sub_2576777D0()
{
  unint64_t result = qword_26A005EF0;
  if (!qword_26A005EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005EF0);
  }
  return result;
}

unint64_t sub_25767781C()
{
  unint64_t result = qword_26A005EF8;
  if (!qword_26A005EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005EF8);
  }
  return result;
}

unint64_t sub_257677868()
{
  unint64_t result = qword_26A005F00;
  if (!qword_26A005F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F00);
  }
  return result;
}

unint64_t sub_2576778B4()
{
  unint64_t result = qword_26A005F08;
  if (!qword_26A005F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F08);
  }
  return result;
}

unint64_t sub_257677900()
{
  unint64_t result = qword_26A005F10;
  if (!qword_26A005F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F10);
  }
  return result;
}

unint64_t sub_25767794C()
{
  unint64_t result = qword_26A005F18;
  if (!qword_26A005F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F18);
  }
  return result;
}

unint64_t sub_257677998()
{
  unint64_t result = qword_26A005F20;
  if (!qword_26A005F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F20);
  }
  return result;
}

unint64_t sub_2576779E4()
{
  unint64_t result = qword_26A005F28;
  if (!qword_26A005F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F28);
  }
  return result;
}

unint64_t sub_257677A30()
{
  unint64_t result = qword_26A005F30;
  if (!qword_26A005F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F30);
  }
  return result;
}

unint64_t sub_257677A7C()
{
  unint64_t result = qword_26A005F38;
  if (!qword_26A005F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F38);
  }
  return result;
}

unint64_t sub_257677AC8()
{
  unint64_t result = qword_26A005F40;
  if (!qword_26A005F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005F40);
  }
  return result;
}

uint64_t sub_257677B14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ScalarType.init(from:)(a1, a2);
}

uint64_t sub_257677B2C(void *a1)
{
  return ScalarType.encode(to:)(a1);
}

uint64_t sub_257677B4C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_257677BCC()
{
  unint64_t result = qword_26A005FB8;
  if (!qword_26A005FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ScalarType()
{
  return &type metadata for ScalarType;
}

uint64_t _s14NeuralNetworks10ScalarTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 12) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v5 = v6 - 13;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14NeuralNetworks10ScalarTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257677D84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScalarType.CodingKeys()
{
  return &type metadata for ScalarType.CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Int8CodingKeys()
{
  return &type metadata for ScalarType.Int8CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Int16CodingKeys()
{
  return &type metadata for ScalarType.Int16CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Int32CodingKeys()
{
  return &type metadata for ScalarType.Int32CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Int64CodingKeys()
{
  return &type metadata for ScalarType.Int64CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Uint8CodingKeys()
{
  return &type metadata for ScalarType.Uint8CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Uint16CodingKeys()
{
  return &type metadata for ScalarType.Uint16CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Uint32CodingKeys()
{
  return &type metadata for ScalarType.Uint32CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Uint64CodingKeys()
{
  return &type metadata for ScalarType.Uint64CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Float16CodingKeys()
{
  return &type metadata for ScalarType.Float16CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Bfloat16CodingKeys()
{
  return &type metadata for ScalarType.Bfloat16CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Float32CodingKeys()
{
  return &type metadata for ScalarType.Float32CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.Float64CodingKeys()
{
  return &type metadata for ScalarType.Float64CodingKeys;
}

ValueMetadata *type metadata accessor for ScalarType.BoolCodingKeys()
{
  return &type metadata for ScalarType.BoolCodingKeys;
}

unint64_t sub_257677E90()
{
  unint64_t result = qword_26A005FC0;
  if (!qword_26A005FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FC0);
  }
  return result;
}

unint64_t sub_257677EE0()
{
  unint64_t result = qword_26A005FC8;
  if (!qword_26A005FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FC8);
  }
  return result;
}

unint64_t sub_257677F30()
{
  unint64_t result = qword_26A005FD0;
  if (!qword_26A005FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FD0);
  }
  return result;
}

unint64_t sub_257677F80()
{
  unint64_t result = qword_26A005FD8;
  if (!qword_26A005FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FD8);
  }
  return result;
}

unint64_t sub_257677FD0()
{
  unint64_t result = qword_26A005FE0;
  if (!qword_26A005FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FE0);
  }
  return result;
}

unint64_t sub_257678020()
{
  unint64_t result = qword_26A005FE8;
  if (!qword_26A005FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FE8);
  }
  return result;
}

unint64_t sub_257678070()
{
  unint64_t result = qword_26A005FF0;
  if (!qword_26A005FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FF0);
  }
  return result;
}

unint64_t sub_2576780C0()
{
  unint64_t result = qword_26A005FF8;
  if (!qword_26A005FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A005FF8);
  }
  return result;
}

unint64_t sub_257678110()
{
  unint64_t result = qword_26A006000;
  if (!qword_26A006000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006000);
  }
  return result;
}

unint64_t sub_257678160()
{
  unint64_t result = qword_26A006008;
  if (!qword_26A006008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006008);
  }
  return result;
}

unint64_t sub_2576781B0()
{
  unint64_t result = qword_26A006010;
  if (!qword_26A006010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006010);
  }
  return result;
}

unint64_t sub_257678200()
{
  unint64_t result = qword_26A006018;
  if (!qword_26A006018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006018);
  }
  return result;
}

unint64_t sub_257678250()
{
  unint64_t result = qword_26A006020;
  if (!qword_26A006020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006020);
  }
  return result;
}

unint64_t sub_2576782A0()
{
  unint64_t result = qword_26A006028;
  if (!qword_26A006028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006028);
  }
  return result;
}

unint64_t sub_2576782F0()
{
  unint64_t result = qword_26A006030;
  if (!qword_26A006030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006030);
  }
  return result;
}

unint64_t sub_257678340()
{
  unint64_t result = qword_26A006038;
  if (!qword_26A006038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006038);
  }
  return result;
}

unint64_t sub_257678390()
{
  unint64_t result = qword_26A006040;
  if (!qword_26A006040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006040);
  }
  return result;
}

unint64_t sub_2576783E0()
{
  unint64_t result = qword_26A006048;
  if (!qword_26A006048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006048);
  }
  return result;
}

unint64_t sub_257678430()
{
  unint64_t result = qword_26A006050;
  if (!qword_26A006050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006050);
  }
  return result;
}

unint64_t sub_257678480()
{
  unint64_t result = qword_26A006058;
  if (!qword_26A006058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006058);
  }
  return result;
}

unint64_t sub_2576784D0()
{
  unint64_t result = qword_26A006060;
  if (!qword_26A006060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006060);
  }
  return result;
}

unint64_t sub_257678520()
{
  unint64_t result = qword_26A006068;
  if (!qword_26A006068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006068);
  }
  return result;
}

unint64_t sub_257678570()
{
  unint64_t result = qword_26A006070;
  if (!qword_26A006070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006070);
  }
  return result;
}

unint64_t sub_2576785C0()
{
  unint64_t result = qword_26A006078;
  if (!qword_26A006078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006078);
  }
  return result;
}

unint64_t sub_257678610()
{
  unint64_t result = qword_26A006080;
  if (!qword_26A006080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006080);
  }
  return result;
}

unint64_t sub_257678660()
{
  unint64_t result = qword_26A006088;
  if (!qword_26A006088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006088);
  }
  return result;
}

unint64_t sub_2576786B0()
{
  unint64_t result = qword_26A006090;
  if (!qword_26A006090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006090);
  }
  return result;
}

unint64_t sub_257678700()
{
  unint64_t result = qword_26A006098;
  if (!qword_26A006098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006098);
  }
  return result;
}

unint64_t sub_257678750()
{
  unint64_t result = qword_26A0060A0;
  if (!qword_26A0060A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060A0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_76(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9F250](a1, a2, v2, a1);
}

uint64_t OUTLINED_FUNCTION_3_69(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9F250](a1, a2, v2, a1);
}

uint64_t OUTLINED_FUNCTION_4_76()
{
  return sub_2576A8DB0();
}

void OUTLINED_FUNCTION_9_65(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_12_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_48@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + 8 * a1);
}

uint64_t OUTLINED_FUNCTION_17_46()
{
  return v0;
}

void sub_257678860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v64)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t *v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(void);
  void (*v93)(void);
  uint64_t v94;
  __n128 *v95;
  void (*v96)(void);
  void (*v97)(void);
  uint64_t v98;
  uint64_t v99[2];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_25();
  uint64_t v31 = v29 - v30;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_10_9();
  uint64_t v115 = v33;
  uint64_t v34 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v116 = v35;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_6_2();
  uint64_t v118 = v37;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v38);
  uint64_t v47 = OUTLINED_FUNCTION_19_42(v39, v40, v41, v42, v43, v44, v45, v46, v99[0]);
  OUTLINED_FUNCTION_0_8();
  uint64_t v49 = v48;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_8_0();
  uint64_t v53 = v52 - v51;
  uint64_t v54 = sub_2575CA350();
  if (sub_2574BAF20(v54, v26))
  {
    uint64_t v109 = v34;
    uint64_t v110 = v21;
    uint64_t v56 = v55;
    uint64_t v112 = v31;
    *(void *)uint64_t v53 = 0;
    *(void *)(v53 + 8) = 0;
    uint64_t v57 = 1;
    *(unsigned char *)(v53 + 16) = 1;
    *(int64x2_t *)(v53 + 24) = vdupq_n_s64(1uLL);
    uint64_t v113 = v49;
    uint64_t v114 = v47;
    uint64_t v117 = v53;
    OUTLINED_FUNCTION_12_11();
    v58();
    uint64_t v59 = v20[6];
    uint64_t v107 = v20[7];
    uint64_t v108 = v59;
    uint64_t v60 = v20[8];
    uint64_t v105 = v20[9];
    uint64_t v106 = v60;
    uint64_t v61 = v20[10];
    uint64_t v62 = v20[12];
    uint64_t v103 = v24[11];
    uint64_t v104 = v61;
    if (*(void *)(v62 + 16) >= 2uLL) {
      uint64_t v57 = *(void *)(v62 + 32);
    }
    uint64_t v100 = v57;
    type metadata accessor for NativeTensorStorage();
    a10 = v62;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v64 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v56 + 8);
    uint64_t v111 = v62;
    swift_bridgeObjectRetain_n();
    uint64_t v101 = ObjectType;
    v64(&v120, ObjectType, v56);
    uint64_t v65 = (uint64_t *)OUTLINED_FUNCTION_17_47();
    sub_25754DDC0(v65, v66, v67);
    uint64_t v69 = v68;
    a10 = *(void *)(v68 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(&a10, v119);
    uint64_t v102 = v56;
    OUTLINED_FUNCTION_11_10();
    v70();
    OUTLINED_FUNCTION_8_1(&a10, v118);
    uint64_t v71 = v115;
    uint64_t v72 = v116;
    uint64_t v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16);
    v73(v115, v118, v109);
    __swift_storeEnumTagSinglePayload(v115, 0, 1, v109);
    uint64_t v74 = v112;
    v73(v112, v119, v109);
    uint64_t v75 = __swift_storeEnumTagSinglePayload(v112, 0, 1, v109);
    OUTLINED_FUNCTION_25_36(v75, v76, v77, v78, v79, v80, v81, v82, v99[0]);
    MEMORY[0x270FA5388](v83);
    uint64_t v84 = v108;
    v99[-8] = v117;
    v99[-7] = v84;
    uint64_t v85 = v106;
    v99[-6] = v107;
    v99[-5] = v85;
    uint64_t v86 = v104;
    v99[-4] = v105;
    v99[-3] = v86;
    uint64_t v87 = v100;
    v99[-2] = v103;
    v99[-1] = v87;
    MEMORY[0x270FA5388](v88);
    v99[-6] = v69;
    v99[-5] = (uint64_t)&off_270667760;
    v99[-4] = v74;
    v99[-3] = (uint64_t)sub_25767A4A4;
    v99[-2] = v89;
    uint64_t v90 = v69;
    swift_retain();
    uint64_t v91 = v110;
    sub_257648508((uint64_t)sub_2574C6170, (uint64_t)&v99[-8], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v91)
    {
      swift_release_n();
      OUTLINED_FUNCTION_31_30();
      sub_257480BC8(v71);
      uint64_t v92 = *(void (**)(void))(v72 + 8);
      OUTLINED_FUNCTION_191();
      v92();
      OUTLINED_FUNCTION_191();
      v92();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_14_0();
      v93();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_31_30();
      sub_257480BC8(v71);
      uint64_t v96 = *(void (**)(void))(v72 + 8);
      OUTLINED_FUNCTION_191();
      v96();
      OUTLINED_FUNCTION_191();
      v96();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_0();
      v97();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v98 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v98 + 16) = xmmword_2576ABB10;
      *(void *)(v98 + 32) = v90;
      *(void *)(v98 + 40) = &off_270667760;
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_257480520();
    uint64_t v94 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1210, v94, v95);
  }
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_7_1();
}

#error "257678D5C: call analysis failed (funcsize=6)"

void sub_257678D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v64)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(void);
  void (*v72)(void);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(void);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(void);
  uint64_t v90;
  void (*v91)(uint64_t);
  uint64_t v92;
  __n128 *v93;
  void (*v94)(void);
  uint64_t v95;
  void (*v96)(uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123[15];

  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  uint64_t v115 = v21;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v29 = OUTLINED_FUNCTION_24_9(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_3_25();
  uint64_t v32 = v30 - v31;
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_49_5();
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_10_9();
  uint64_t v116 = v35;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_6_2();
  uint64_t v118 = v39;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v40);
  char v119 = (uint64_t)&v98 - v41;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v42);
  OUTLINED_FUNCTION_10_9();
  char v120 = v43;
  uint64_t v44 = sub_2576A69D0();
  OUTLINED_FUNCTION_0_8();
  char v121 = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_8_0();
  uint64_t v49 = v48 - v47;
  uint64_t v50 = sub_2575CA350();
  uint64_t v51 = sub_2574BAF20(v50, v27);
  if (!v51) {
    goto LABEL_9;
  }
  uint64_t v117 = v52;
  uint64_t v113 = v32;
  char v122 = v51;
  uint64_t v53 = sub_2575CA350();
  uint64_t v54 = sub_2574BAF20(v53, v27);
  if (!v54)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_257480520();
    uint64_t v92 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1220, v92, v93);
    goto LABEL_10;
  }
  uint64_t v56 = v54;
  uint64_t v57 = v55;
  uint64_t v111 = v37;
  *(void *)uint64_t v49 = 0;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 1;
  uint64_t v112 = 1;
  *(int64x2_t *)(v49 + 24) = vdupq_n_s64(1uLL);
  uint64_t v109 = v49;
  OUTLINED_FUNCTION_12_11();
  v58();
  uint64_t v107 = v25[6];
  uint64_t v106 = v25[7];
  uint64_t v105 = v25[8];
  uint64_t v104 = v25[9];
  uint64_t v103 = v25[10];
  uint64_t v59 = v25[12];
  uint64_t v102 = v25[11];
  uint64_t ObjectType = swift_getObjectType();
  sub_2576A7810();
  uint64_t v61 = sub_257611DF8();
  uint64_t v62 = v120;
  if (v61 > 1)
  {
    OUTLINED_FUNCTION_11_10();
    v63();
    if (!*(void *)(a10 + 16))
    {
      OUTLINED_FUNCTION_8_16();
      OUTLINED_FUNCTION_14_13();
    }
    uint64_t v112 = *(void *)(a10 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v110 = v44;
  type metadata accessor for NativeTensorStorage();
  v123[0] = v59;
  uint64_t v64 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v57 + 8);
  sub_2576A7810();
  uint64_t v108 = v59;
  uint64_t v114 = v56;
  v64(&a10, ObjectType, v57);
  uint64_t v65 = (uint64_t *)OUTLINED_FUNCTION_22_11();
  uint64_t v66 = v115;
  sub_25754DDC0(v65, v67, v68);
  uint64_t v70 = v69;
  uint64_t v99 = v69;
  uint64_t v115 = v66;
  uint64_t v101 = swift_getObjectType();
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v71();
  OUTLINED_FUNCTION_8_1(v123, v62);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v72();
  uint64_t v100 = v57;
  uint64_t v73 = v62;
  OUTLINED_FUNCTION_8_1(v123, v119);
  v123[0] = *(void *)(v70 + 16);
  sub_2576A7810();
  OUTLINED_FUNCTION_8_1(v123, v118);
  uint64_t v74 = v111;
  uint64_t v75 = *(void (**)(void))(v111 + 16);
  uint64_t v76 = v116;
  OUTLINED_FUNCTION_3_4();
  v75();
  OUTLINED_FUNCTION_2_6(v76);
  OUTLINED_FUNCTION_3_4();
  v75();
  OUTLINED_FUNCTION_2_6(v22);
  uint64_t v77 = v113;
  OUTLINED_FUNCTION_3_4();
  v75();
  uint64_t v78 = OUTLINED_FUNCTION_2_6(v77);
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = v109;
  *(&v98 - 10) = v73;
  *(&v98 - 9) = v79;
  uint64_t v80 = v106;
  *(&v98 - 8) = v107;
  *(&v98 - 7) = v80;
  uint64_t v81 = v104;
  *(&v98 - 6) = v105;
  *(&v98 - 5) = v81;
  uint64_t v82 = v102;
  *(&v98 - 4) = v103;
  *(&v98 - 3) = v82;
  *(&v98 - 2) = v112;
  MEMORY[0x270FA5388](v83);
  uint64_t v84 = v100;
  *(&v98 - 8) = v114;
  *(&v98 - 7) = v84;
  uint64_t v85 = v99;
  *(&v98 - 6) = v22;
  *(&v98 - 5) = v85;
  *(&v98 - 4) = (uint64_t)&off_270667760;
  *(&v98 - 3) = v77;
  *(&v98 - 2) = (uint64_t)sub_25767A8BC;
  *(&v98 - 1) = v86;
  uint64_t v87 = v85;
  swift_retain();
  uint64_t v88 = v115;
  sub_257648508((uint64_t)sub_2574C2548, (uint64_t)(&v98 - 10), MEMORY[0x263F8EE60] + 8, (uint64_t)&a18);
  if (v88)
  {
    swift_release_n();
    sub_257480BC8(v77);
    sub_257480BC8(v22);
    sub_257480BC8(v76);
    uint64_t v89 = *(void (**)(void))(v74 + 8);
    OUTLINED_FUNCTION_4_16();
    v89();
    OUTLINED_FUNCTION_4_16();
    v89();
    OUTLINED_FUNCTION_4_16();
    v89();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v90 = OUTLINED_FUNCTION_11_60();
    v91(v90);
  }
  else
  {
    swift_release();
    sub_257480BC8(v77);
    sub_257480BC8(v22);
    sub_257480BC8(v76);
    uint64_t v94 = *(void (**)(void))(v74 + 8);
    OUTLINED_FUNCTION_4_16();
    v94();
    OUTLINED_FUNCTION_4_16();
    v94();
    OUTLINED_FUNCTION_4_16();
    v94();
    swift_bridgeObjectRelease();
    uint64_t v95 = OUTLINED_FUNCTION_11_60();
    v96(v95);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v97 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v97 + 16) = xmmword_2576ABB10;
    *(void *)(v97 + 32) = v87;
    *(void *)(v97 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_10:
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_7_1();
}

#error "25767943C: call analysis failed (funcsize=6)"

void sub_257679448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v72)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t *v73;
  uint64_t v74;
  void (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(void);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(void);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(void);
  void (*v101)(void);
  void (*v102)(void);
  uint64_t v103;
  uint64_t v104[5];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v116 = v21;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_25();
  uint64_t v31 = v29 - v30;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_10_9();
  uint64_t v118 = v33;
  uint64_t v34 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  char v119 = v35;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_6_2();
  uint64_t v117 = v37;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v38);
  uint64_t v47 = OUTLINED_FUNCTION_19_42(v39, v40, v41, v42, v43, v44, v45, v46, v104[0]);
  OUTLINED_FUNCTION_0_8();
  uint64_t v49 = v48;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_8_0();
  uint64_t v53 = (unsigned char *)(v52 - v51);
  uint64_t v54 = sub_2575CA350();
  uint64_t v55 = sub_2574BAF20(v54, v26);
  if (v55)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    *uint64_t v53 = *(unsigned char *)(v24 + 192);
    OUTLINED_FUNCTION_12_11();
    v59();
    uint64_t v60 = *(void *)(v24 + 48);
    uint64_t v61 = *(void *)(v24 + 56);
    uint64_t v62 = *(void *)(v24 + 64);
    uint64_t v63 = *(void *)(v24 + 72);
    uint64_t v64 = *(void *)(v24 + 80);
    uint64_t v65 = *(void *)(v24 + 88);
    uint64_t v66 = *(void *)(v24 + 96);
    unint64_t v67 = *(void *)(v66 + 16);
    uint64_t v114 = v49;
    uint64_t v115 = v47;
    char v120 = (uint64_t)v53;
    uint64_t v112 = v60;
    uint64_t v113 = v34;
    uint64_t v110 = v62;
    uint64_t v111 = v61;
    uint64_t v108 = v64;
    uint64_t v109 = v63;
    uint64_t v106 = v31;
    uint64_t v107 = v65;
    if (v67 < 2) {
      uint64_t v68 = 1;
    }
    else {
      uint64_t v68 = *(void *)(v66 + 32);
    }
    v104[0] = v68;
    type metadata accessor for NativeTensorStorage();
    a10 = v66;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v72 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v58 + 8);
    swift_bridgeObjectRetain_n();
    v104[4] = v57;
    v104[2] = ObjectType;
    v72(&v122, ObjectType, v58);
    uint64_t v73 = (uint64_t *)OUTLINED_FUNCTION_17_47();
    sub_25754DDC0(v73, v74, v75);
    uint64_t v76 = v58;
    uint64_t v78 = v77;
    uint64_t v105 = v116;
    a10 = *(void *)(v77 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(&a10, v121);
    v104[3] = v76;
    OUTLINED_FUNCTION_11_10();
    v79();
    uint64_t v116 = v66;
    OUTLINED_FUNCTION_8_1(&a10, v117);
    uint64_t v80 = v118;
    uint64_t v81 = v119;
    uint64_t v82 = *(void (**)(void))(v119 + 16);
    OUTLINED_FUNCTION_3_4();
    v82();
    OUTLINED_FUNCTION_2_6(v118);
    uint64_t v83 = v106;
    OUTLINED_FUNCTION_3_4();
    v82();
    uint64_t v84 = OUTLINED_FUNCTION_2_6(v106);
    OUTLINED_FUNCTION_25_36(v84, v85, v86, v87, v88, v89, v90, v91, v104[0]);
    MEMORY[0x270FA5388](v92);
    uint64_t v93 = v112;
    v104[-8] = v120;
    v104[-7] = v93;
    uint64_t v94 = v110;
    v104[-6] = v111;
    v104[-5] = v94;
    uint64_t v95 = v108;
    v104[-4] = v109;
    v104[-3] = v95;
    uint64_t v96 = v104[0];
    v104[-2] = v107;
    v104[-1] = v96;
    MEMORY[0x270FA5388](v97);
    v104[-6] = v78;
    v104[-5] = (uint64_t)&off_270667760;
    v104[-4] = v83;
    v104[-3] = (uint64_t)sub_25767A4A4;
    v104[-2] = v98;
    swift_retain();
    uint64_t v99 = v105;
    sub_257648508((uint64_t)sub_2574C6170, (uint64_t)&v104[-8], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v99)
    {
      swift_release_n();
      OUTLINED_FUNCTION_30_32();
      sub_257480BC8(v80);
      uint64_t v100 = *(void (**)(void))(v81 + 8);
      OUTLINED_FUNCTION_4_16();
      v100();
      OUTLINED_FUNCTION_4_16();
      v100();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v120, v115);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_30_32();
      sub_257480BC8(v80);
      uint64_t v101 = *(void (**)(void))(v81 + 8);
      OUTLINED_FUNCTION_4_16();
      v101();
      OUTLINED_FUNCTION_4_16();
      v101();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_14_0();
      v102();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v103 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v103 + 16) = xmmword_2576ABB10;
      *(void *)(v103 + 32) = v78;
      *(void *)(v103 + 40) = &off_270667760;
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_257480520();
    uint64_t v69 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1230, v69, v70);
  }
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_7_1();
}

#error "25767990C: call analysis failed (funcsize=6)"

void sub_257679918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  uint64_t v109 = v21;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v29 = OUTLINED_FUNCTION_24_9(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_6_2();
  uint64_t v111 = v30;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v31);
  uint64_t v110 = (char *)&v93 - v32;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v93 - v34;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_6_2();
  uint64_t v115 = v39;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_49_5();
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v93 - v42;
  uint64_t v44 = sub_2576A69D0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v116 = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_8_0();
  uint64_t v117 = (unsigned char *)(v48 - v47);
  uint64_t v49 = sub_2575CA350();
  uint64_t v50 = sub_2574BAF20(v49, v27);
  if (!v50) {
    goto LABEL_7;
  }
  uint64_t v112 = v51;
  uint64_t v113 = v43;
  uint64_t v114 = v22;
  uint64_t v52 = v50;
  uint64_t v106 = v35;
  uint64_t v53 = sub_2575CA350();
  uint64_t v54 = sub_2574BAF20(v53, v27);
  if (!v54)
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_257480520();
    uint64_t v62 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1240, v62, v63);
    goto LABEL_11;
  }
  uint64_t v56 = v54;
  uint64_t v57 = v55;
  *uint64_t v117 = *(unsigned char *)(v20 + 184);
  OUTLINED_FUNCTION_12_11();
  v58();
  uint64_t v103 = *(void *)(v20 + 48);
  uint64_t v102 = *(void *)(v20 + 56);
  uint64_t v101 = *(void *)(v20 + 64);
  uint64_t v100 = *(void *)(v20 + 72);
  uint64_t v99 = *(void *)(v20 + 80);
  uint64_t v59 = *(void *)(v20 + 96);
  uint64_t v98 = *(void *)(v25 + 88);
  swift_getObjectType();
  sub_2576A7810();
  uint64_t v60 = sub_257611DF8();
  uint64_t v108 = v37;
  uint64_t v105 = v44;
  if (v60 <= 1)
  {
    uint64_t v97 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_29_29();
    OUTLINED_FUNCTION_11_10();
    v61();
    if (!*(void *)(a10 + 16))
    {
      OUTLINED_FUNCTION_8_16();
      OUTLINED_FUNCTION_14_13();
    }
    uint64_t v97 = *(void *)(a10 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v104 = v59;
  type metadata accessor for NativeTensorStorage();
  v118[0] = v59;
  uint64_t v64 = *(void (**)(uint64_t))(v57 + 8);
  sub_2576A7810();
  uint64_t v65 = OUTLINED_FUNCTION_29_29();
  v64(v65);
  uint64_t v66 = (uint64_t *)OUTLINED_FUNCTION_22_11();
  uint64_t v67 = v109;
  sub_25754DDC0(v66, v68, v69);
  uint64_t v71 = v70;
  uint64_t v94 = v70;
  uint64_t v109 = v67;
  uint64_t v96 = v52;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v107 = v56;
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v72();
  uint64_t v73 = (uint64_t)v113;
  OUTLINED_FUNCTION_8_1(v118, (uint64_t)v113);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v74();
  OUTLINED_FUNCTION_8_1(v118, v114);
  v118[0] = *(void *)(v71 + 16);
  sub_2576A7810();
  OUTLINED_FUNCTION_8_1(v118, v115);
  uint64_t v75 = *(void (**)(void))(v108 + 16);
  uint64_t v76 = (uint64_t)v106;
  OUTLINED_FUNCTION_3_4();
  v75();
  OUTLINED_FUNCTION_2_6(v76);
  uint64_t v77 = (uint64_t)v110;
  OUTLINED_FUNCTION_3_4();
  v75();
  OUTLINED_FUNCTION_2_6(v77);
  uint64_t v78 = v111;
  OUTLINED_FUNCTION_3_4();
  v75();
  uint64_t v79 = OUTLINED_FUNCTION_2_6(v78);
  MEMORY[0x270FA5388](v79);
  uint64_t v80 = v117;
  *(&v93 - 10) = v73;
  *(&v93 - 9) = (uint64_t)v80;
  uint64_t v81 = v102;
  *(&v93 - 8) = v103;
  *(&v93 - 7) = v81;
  uint64_t v82 = v100;
  *(&v93 - 6) = v101;
  *(&v93 - 5) = v82;
  uint64_t v83 = v98;
  *(&v93 - 4) = v99;
  *(&v93 - 3) = v83;
  *(&v93 - 2) = v97;
  MEMORY[0x270FA5388](v84);
  *(&v93 - 8) = v107;
  *(&v93 - 7) = v57;
  uint64_t v85 = v94;
  *(&v93 - 6) = v77;
  *(&v93 - 5) = v85;
  *(&v93 - 4) = (uint64_t)&off_270667760;
  *(&v93 - 3) = v78;
  *(&v93 - 2) = (uint64_t)sub_25767A8BC;
  *(&v93 - 1) = v86;
  uint64_t v87 = v85;
  swift_retain();
  uint64_t v88 = v109;
  sub_257648508((uint64_t)sub_2574C2548, (uint64_t)(&v93 - 10), MEMORY[0x263F8EE60] + 8, (uint64_t)&a17);
  if (v88)
  {
    swift_release_n();
    sub_257480BC8(v78);
    sub_257480BC8(v77);
    sub_257480BC8(v76);
    uint64_t v89 = *(void (**)(void))(v108 + 8);
    OUTLINED_FUNCTION_1_8();
    v89();
    OUTLINED_FUNCTION_1_8();
    v89();
    OUTLINED_FUNCTION_1_8();
    v89();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v116 + 8))(v117, v105);
  }
  else
  {
    swift_release();
    sub_257480BC8(v78);
    sub_257480BC8(v77);
    sub_257480BC8(v76);
    uint64_t v90 = *(void (**)(void))(v108 + 8);
    OUTLINED_FUNCTION_1_8();
    v90();
    OUTLINED_FUNCTION_1_8();
    v90();
    OUTLINED_FUNCTION_1_8();
    v90();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_0();
    v91();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v92 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v92 + 16) = xmmword_2576ABB10;
    *(void *)(v92 + 32) = v87;
    *(void *)(v92 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_11:
  OUTLINED_FUNCTION_14_55();
  OUTLINED_FUNCTION_7_1();
}

#error "25767A008: call analysis failed (funcsize=6)"

uint64_t sub_25767A014(uint64_t a1)
{
  uint64_t result = sub_25767A124(&qword_26A001848, (void (*)(uint64_t))type metadata accessor for Average2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25767A058(uint64_t a1)
{
  uint64_t result = sub_25767A124(&qword_26A001850, (void (*)(uint64_t))type metadata accessor for Average2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25767A09C(uint64_t a1)
{
  uint64_t result = sub_25767A124(&qword_26A001838, (void (*)(uint64_t))type metadata accessor for Max2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25767A0E0(uint64_t a1)
{
  uint64_t result = sub_25767A124(&qword_26A001840, (void (*)(uint64_t))type metadata accessor for Max2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25767A124(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25767A178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v30 = a8;
  uint64_t v36 = a7;
  uint64_t v31 = a6;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v27 = a9;
  uint64_t v29 = sub_2576A6C00();
  uint64_t v9 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v11 = (void *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_2576A6BF0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_2576A69D0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = sub_2576A6A90();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v25, v16);
  sub_2574C14FC(v35);
  sub_2574D1114((uint64_t)v35, (uint64_t)&v34);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8CB58], v12);
  uint64_t v20 = v29;
  uint64_t v21 = v30;
  *uint64_t v11 = v27;
  v11[1] = v21;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8CB60], v20);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6A70())
  {
    sub_2576A6A80();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v23 = xmmword_2576C1250;
    *(unsigned char *)(v23 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_25767A4A4(uint64_t a1, uint64_t a2)
{
  return sub_25767A8D4(a1, a2);
}

uint64_t sub_25767A4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v39 = a8;
  uint64_t v43 = a7;
  uint64_t v40 = a6;
  uint64_t v33 = a5;
  uint64_t v31 = a4;
  long long v29[2] = a3;
  uint64_t v37 = a2;
  uint64_t v38 = a9;
  uint64_t v36 = a10;
  uint64_t v34 = a11;
  uint64_t v35 = sub_2576A6C00();
  uint64_t v12 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v14 = (void *)((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_2576A6BF0();
  uint64_t v15 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v30 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2576A69D0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_2576A6DD0();
  __n128 v22 = MEMORY[0x270FA5388](v21);
  v29[1] = a1;
  (*(void (**)(char *, uint64_t, __n128))(v24 + 16))((char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v22);
  sub_2576A83F0();
  sub_2576A6A90();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v33, v17);
  sub_2574C14FC(v42);
  sub_2574D1114((uint64_t)v42, (uint64_t)&v41);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v30, *MEMORY[0x263F8CB58], v32);
  uint64_t v25 = v35;
  uint64_t v26 = v36;
  *uint64_t v14 = v34;
  v14[1] = v26;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8CB60], v25);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6A70())
  {
    sub_2576A6A60();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v28 = xmmword_2576C1260;
    *(unsigned char *)(v28 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_25767A8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25767A908(a1, a2, a3);
}

uint64_t sub_25767A8D4(uint64_t a1, uint64_t a2)
{
  return sub_25767A178(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_25767A908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25767A4BC(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

uint64_t OUTLINED_FUNCTION_11_60()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_47()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_19_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 104) = (char *)&a9 - v9;
  return sub_2576A69D0();
}

void OUTLINED_FUNCTION_25_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 264) = &a9;
}

uint64_t OUTLINED_FUNCTION_29_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_32()
{
  return sub_257480BC8(v0);
}

uint64_t OUTLINED_FUNCTION_31_30()
{
  return sub_257480BC8(v0);
}

uint64_t BFloat16.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_24_41();
  v9();
  sub_25748E5B0();
  sub_2576A7750();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  *a3 = v11;
  return result;
}

uint64_t BFloat16.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, _WORD *a4@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_24_41();
  v9();
  if (sub_2576A85D0() < 65)
  {
    char v12 = sub_2576A85E0();
    uint64_t v13 = sub_2576A85C0();
    uint64_t v14 = OUTLINED_FUNCTION_9_66();
    a3(v14);
    if (v12) {
      float v11 = (float)v13;
    }
    else {
      float v11 = (float)(unint64_t)v13;
    }
  }
  else
  {
    sub_25748E5B0();
    sub_2575864D8();
    sub_2576A7770();
    uint64_t v10 = OUTLINED_FUNCTION_9_66();
    a3(v10);
    float v11 = v17;
  }
  int v15 = HIWORD(LODWORD(v11));
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))a3)(a1, a2);
  *a4 = v15;
  return result;
}

ValueMetadata *sub_25767AC64()
{
  uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E498];
  switch(*v0)
  {
    case 1:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E4F0];
      break;
    case 2:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E548];
      break;
    case 3:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D6C8];
      break;
    case 4:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E778];
      break;
    case 5:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E888];
      break;
    case 6:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E8F8];
      break;
    case 7:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E970];
      break;
    case 8:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E9F8];
      break;
    case 9:
      uint64_t v1 = &type metadata for BFloat16;
      sub_25748E668();
      break;
    case 0xA:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D5C8];
      break;
    case 0xB:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D538];
      break;
    case 0xC:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D4F8];
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t static TensorScalarKind.allCases.getter()
{
  uint64_t v0 = qword_270660370;
  if (qword_270660370)
  {
    OUTLINED_FUNCTION_6_65();
    uint64_t v1 = v21;
    unint64_t v2 = *(void *)(v21 + 16);
    uint64_t v3 = &byte_270660380;
    do
    {
      char v5 = *v3++;
      char v4 = v5;
      uint64_t v21 = v1;
      if (v2 >= *(void *)(v1 + 24) >> 1) {
        sub_2574E7FD8();
      }
      *(void *)(v1 + 16) = v2 + 1;
      *(unsigned char *)(v1 + v2++ + 32) = v4;
      --v0;
    }
    while (v0);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  uint64_t v6 = qword_270660398;
  if (qword_270660398)
  {
    OUTLINED_FUNCTION_6_65();
    unint64_t v7 = *(void *)(v21 + 16);
    uint64_t v8 = &byte_2706603A8;
    do
    {
      char v10 = *v8++;
      char v9 = v10;
      if (v7 >= *(void *)(v21 + 24) >> 1) {
        OUTLINED_FUNCTION_17_48();
      }
      *(void *)(v21 + 16) = v7 + 1;
      *(unsigned char *)(v21 + v7++ + 32) = v9 | 0x40;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  sub_2575A13E8();
  uint64_t v11 = qword_2706603C0;
  if (qword_2706603C0)
  {
    OUTLINED_FUNCTION_6_65();
    unint64_t v12 = *(void *)(v1 + 16);
    uint64_t v13 = &byte_2706603D0;
    do
    {
      char v15 = *v13++;
      char v14 = v15;
      if (v12 >= *(void *)(v1 + 24) >> 1) {
        OUTLINED_FUNCTION_17_48();
      }
      *(void *)(v1 + 16) = v12 + 1;
      *(unsigned char *)(v1 + v12++ + 32) = v14 | 0x80;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  sub_2575A13E8();
  uint64_t v16 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257473524();
    uint64_t v16 = v19;
  }
  unint64_t v17 = *(void *)(v16 + 16);
  if (v17 >= *(void *)(v16 + 24) >> 1)
  {
    sub_257473524();
    uint64_t v16 = v20;
  }
  *(void *)(v16 + 16) = v17 + 1;
  *(unsigned char *)(v16 + v17 + 32) = -64;
  return v16;
}

void *static TensorSignedIntegerScalarKind.allCases.getter()
{
  return &unk_270660360;
}

void *static TensorUnsignedIntegerScalarKind.allCases.getter()
{
  return &unk_270660388;
}

void *static TensorFloatingPointScalarKind.allCases.getter()
{
  return &unk_2706603B0;
}

void static TensorScalarKind.int8.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static TensorScalarKind.int16.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.int32.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.int64.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.uint8.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.uint16.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.uint32.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.uint64.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.float16.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.bfloat16.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.float.getter(unsigned char *a1@<X8>)
{
}

void static TensorFloatingPointScalarKind.float32.getter(unsigned char *a1@<X8>)
{
}

void static TensorScalarKind.double.getter(unsigned char *a1@<X8>)
{
}

void static TensorFloatingPointScalarKind.float64.getter(unsigned char *a1@<X8>)
{
}

ValueMetadata *TensorScalarKind.type.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = (ValueMetadata *)MEMORY[0x263F8D4F8];
  switch(v1 >> 6)
  {
    case 1:
      v1 &= 0x3Fu;
      uint64_t v3 = qword_26542BFC8;
      goto LABEL_4;
    case 2:
      unint64_t v2 = (ValueMetadata *)MEMORY[0x263F8E9F8];
      switch(v1 & 0x3F)
      {
        case 1:
          unint64_t v2 = &type metadata for BFloat16;
          sub_25767F6D0();
          break;
        case 2:
          unint64_t v2 = (ValueMetadata *)MEMORY[0x263F8D5C8];
          break;
        case 3:
          unint64_t v2 = (ValueMetadata *)MEMORY[0x263F8D538];
          break;
        default:
          return v2;
      }
      break;
    case 3:
      return v2;
    default:
      uint64_t v3 = qword_26542BF88;
LABEL_4:
      unint64_t v2 = (ValueMetadata *)v3[v1];
      break;
  }
  return v2;
}

uint64_t TensorSignedIntegerScalarKind.type.getter()
{
  return qword_26542BF88[*v0];
}

uint64_t TensorUnsignedIntegerScalarKind.type.getter()
{
  return qword_26542BFC8[*v0];
}

ValueMetadata *TensorFloatingPointScalarKind.type.getter()
{
  uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E9F8];
  switch(*v0)
  {
    case 1:
      uint64_t v1 = &type metadata for BFloat16;
      sub_25767F6D0();
      break;
    case 2:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D5C8];
      break;
    case 3:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D538];
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t TensorScalarKind.size.getter()
{
  return *((void *)TensorScalarKind.type.getter()[-1].Description + 8);
}

uint64_t TensorScalarKind.stride.getter()
{
  return *((void *)TensorScalarKind.type.getter()[-1].Description + 9);
}

uint64_t TensorScalarKind.alignment.getter()
{
  return *((unsigned __int8 *)TensorScalarKind.type.getter()[-1].Description + 80) + 1;
}

BOOL sub_25767B38C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25757513C(*a1, *a2);
}

uint64_t sub_25767B398()
{
  return sub_2576A3994();
}

uint64_t sub_25767B3A0()
{
  return sub_257470238();
}

uint64_t sub_25767B3A8()
{
  return sub_2575EEF90();
}

uint64_t sub_25767B3B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static TensorScalarKind.allCases.getter();
  *a1 = result;
  return result;
}

BOOL TensorScalarKind.isCastable(to:)(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  int v3 = *v1;
  BOOL result = 1;
  switch(v2 >> 6)
  {
    case 2u:
      return result;
    case 3u:
      BOOL result = v3 == 192;
      break;
    default:
      BOOL result = (v3 & 0xC0) != 128;
      break;
  }
  return result;
}

uint64_t TensorScalarKind.rawValue.getter()
{
  unsigned int v1 = *v0;
  unsigned int v2 = 12;
  switch(v1 >> 6)
  {
    case 1u:
      unsigned int v2 = (v1 & 0x3F) + 4;
      break;
    case 2u:
      unsigned int v2 = (v1 & 0x3F) + 8;
      break;
    case 3u:
      return v2;
    default:
      unsigned int v2 = *v0;
      break;
  }
  return v2;
}

uint64_t TensorSignedIntegerScalarKind.rawValue.getter()
{
  return *v0;
}

uint64_t TensorUnsignedIntegerScalarKind.rawValue.getter()
{
  return *v0 + 4;
}

uint64_t TensorFloatingPointScalarKind.rawValue.getter()
{
  return *v0 + 8;
}

unint64_t TensorScalarKind.init(rawValue:)@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 4)
  {
    if ((result & 0xFFFFFFFFFFFFFFFCLL) == 8)
    {
      if (result - 8 < 4)
      {
        BOOL result = (result - 8) | 0xFFFFFF80;
        goto LABEL_11;
      }
    }
    else if ((result & 0xFFFFFFFFFFFFFFFCLL) == 4)
    {
      if (result < 8)
      {
        BOOL result = 0x43424140FCFCFCFCuLL >> (8 * result);
        goto LABEL_11;
      }
    }
    else if (result == 12)
    {
      BOOL result = 192;
      goto LABEL_11;
    }
    BOOL result = 252;
  }
LABEL_11:
  *a2 = result;
  return result;
}

NeuralNetworks::TensorSignedIntegerScalarKind_optional __swiftcall TensorSignedIntegerScalarKind.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *unsigned int v1 = v2;
  return (NeuralNetworks::TensorSignedIntegerScalarKind_optional)rawValue;
}

NeuralNetworks::TensorUnsignedIntegerScalarKind_optional __swiftcall TensorUnsignedIntegerScalarKind.init(rawValue:)(Swift::Int rawValue)
{
  OUTLINED_FUNCTION_53_9(v1);
  return result;
}

NeuralNetworks::TensorFloatingPointScalarKind_optional __swiftcall TensorFloatingPointScalarKind.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = rawValue - 8;
  if ((unint64_t)(rawValue - 8) >= 4) {
    char v2 = 4;
  }
  *unsigned int v1 = v2;
  return (NeuralNetworks::TensorFloatingPointScalarKind_optional)rawValue;
}

unint64_t sub_25767B570@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return TensorScalarKind.init(rawValue:)(*a1, a2);
}

uint64_t sub_25767B578@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TensorScalarKind.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25767B5A0()
{
  return sub_2576A7DC0();
}

uint64_t sub_25767B600()
{
  return sub_2576A7D80();
}

NeuralNetworks::TensorSignedIntegerScalarKind_optional sub_25767B650(Swift::Int *a1)
{
  return TensorSignedIntegerScalarKind.init(rawValue:)(*a1);
}

uint64_t sub_25767B658@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TensorSignedIntegerScalarKind.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25767B680()
{
  return sub_2576A7DC0();
}

uint64_t sub_25767B6E0()
{
  return sub_2576A7D80();
}

void sub_25767B730(void *a1@<X8>)
{
  *a1 = &unk_270660360;
}

NeuralNetworks::TensorUnsignedIntegerScalarKind_optional sub_25767B740(Swift::Int *a1)
{
  return TensorUnsignedIntegerScalarKind.init(rawValue:)(*a1);
}

uint64_t sub_25767B748@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TensorUnsignedIntegerScalarKind.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25767B770()
{
  return sub_2576A39A0();
}

uint64_t sub_25767B778()
{
  return sub_25746FB84();
}

uint64_t sub_25767B780()
{
  return sub_2575EEC14();
}

uint64_t sub_25767B788()
{
  return sub_2576A7DC0();
}

uint64_t sub_25767B7E8()
{
  return sub_2576A7D80();
}

void sub_25767B838(void *a1@<X8>)
{
  *a1 = &unk_270660388;
}

NeuralNetworks::TensorFloatingPointScalarKind_optional sub_25767B848(Swift::Int *a1)
{
  return TensorFloatingPointScalarKind.init(rawValue:)(*a1);
}

uint64_t sub_25767B850@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TensorFloatingPointScalarKind.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_25767B878()
{
  return sub_2576A39E4();
}

uint64_t sub_25767B880()
{
  return sub_25746FBB0();
}

uint64_t sub_25767B888()
{
  return sub_2575EEC54();
}

uint64_t sub_25767B890()
{
  return sub_2576A7DC0();
}

uint64_t sub_25767B8F0()
{
  return sub_2576A7D80();
}

void sub_25767B940(void *a1@<X8>)
{
  *a1 = &unk_2706603B0;
}

void sub_25767B954(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

void sub_25767B960(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_25767B968(unsigned char *a1@<X8>)
{
  *a1 = 67;
}

void sub_25767B974(unsigned char *a1@<X8>)
{
  *a1 = 64;
}

void sub_25767B980(unsigned char *a1@<X8>)
{
  *a1 = 65;
}

void sub_25767B98C(unsigned char *a1@<X8>)
{
  *a1 = 66;
}

void sub_25767B998(unsigned char *a1@<X8>)
{
  *a1 = -64;
}

void static TensorScalar.tensorScalarKind.getter()
{
  OUTLINED_FUNCTION_21_43();
  v1();
  sub_25767B9E0(v0);
}

void sub_25767B9E0(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767B9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return sub_25767D2F4(a1, a2, a3, a4, (uint64_t)sub_2574F050C, a5);
}

void static Int8.scalarType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_25767BA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v65 = a5;
  uint64_t v59 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)v56 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (char *)v56 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v56 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)v56 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v56 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v56 - v23;
  char v25 = sub_2576A85E0();
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v67 = a1;
  v66(v24, a1, a2);
  if ((v25 & 1) == 0)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v24, a2);
    uint64_t v34 = v7;
LABEL_9:
    uint64_t v30 = v66;
    uint64_t v31 = v67;
    goto LABEL_10;
  }
  uint64_t v26 = sub_2576A85D0();
  uint64_t v57 = v7;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v27 = v7 + 8;
  uint64_t v28 = v29;
  v29(v24, a2);
  if (v26 <= 8)
  {
    uint64_t v34 = v57;
    goto LABEL_9;
  }
  v56[1] = v27;
  uint64_t v30 = v66;
  uint64_t v31 = v67;
  v66(v21, v67, a2);
  char v68 = 0x80;
  if (sub_2576A85E0())
  {
    if (sub_2576A85D0() >= 8)
    {
      sub_2576801AC();
      uint64_t v50 = v63;
      sub_2576A8590();
      char v51 = sub_2576A7920();
      uint64_t v52 = v50;
      uint64_t v30 = v66;
      v28(v52, a2);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v51) {
        goto LABEL_37;
      }
    }
    else
    {
      char v32 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v68 > v32) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    char v46 = sub_2576A85E0();
    uint64_t v47 = sub_2576A85D0();
    if (v46)
    {
      if (v47 <= 8)
      {
        swift_getAssociatedConformanceWitness();
        sub_2576A8FD0();
        uint64_t v54 = v63;
        sub_2576A8F50();
        LODWORD(v59) = sub_2576A7920();
        v28(v54, a2);
        uint64_t v34 = v57;
        uint64_t v41 = (uint64_t)v60;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v60, v21, a2);
        uint64_t v31 = v67;
        if (v59) {
          goto LABEL_36;
        }
        LODWORD(v59) = v68;
        char v55 = sub_2576A85C0();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
        uint64_t v30 = v66;
        if ((int)v59 > v55) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_2576801AC();
        uint64_t v48 = v63;
        sub_2576A8590();
        char v49 = sub_2576A7920();
        v28(v48, a2);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
        uint64_t v34 = v57;
        uint64_t v30 = v66;
        uint64_t v31 = v67;
        if (v49) {
          goto LABEL_37;
        }
      }
    }
    else if (v47 < 8)
    {
      char v53 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
      if (v68 > v53) {
        goto LABEL_37;
      }
    }
    else
    {
      v28(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
    }
  }
LABEL_10:
  uint64_t v35 = sub_2576A85D0();
  v30(v16, v31, a2);
  if (v35 < 9)
  {
    uint64_t v36 = sub_2576A85D0();
    v28(v16, a2);
    if (v36 != 8 || (sub_2576A85E0() & 1) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    v28(v16, a2);
  }
  uint64_t v37 = v64;
  v30(v64, v31, a2);
  char v70 = 127;
  char v38 = sub_2576A85E0();
  uint64_t v39 = sub_2576A85D0();
  if ((v38 & 1) == 0)
  {
    if (v39 > 7)
    {
      char v69 = 127;
      uint64_t v43 = v63;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v63, v37, a2);
      sub_2576801AC();
      uint64_t v44 = v61;
      sub_2576A8590();
      uint64_t v41 = sub_2576A7920();
      v28(v44, a2);
      uint64_t v42 = v43;
      goto LABEL_20;
    }
LABEL_18:
    sub_2576A85C0();
    v28(v37, a2);
LABEL_21:
    char v45 = sub_2576A85C0();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v31, a2);
    *uint64_t v65 = v45;
    return result;
  }
  if (v39 <= 8) {
    goto LABEL_18;
  }
  sub_2576801AC();
  uint64_t v40 = v63;
  sub_2576A8590();
  uint64_t v41 = sub_2576A7920();
  v28(v40, a2);
  uint64_t v42 = v37;
LABEL_20:
  v28(v42, a2);
  if ((v41 & 1) == 0) {
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25767C25C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _WORD *a5@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v65 = a5;
  uint64_t v59 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)v56 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (char *)v56 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v56 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)v56 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v56 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v56 - v23;
  char v25 = sub_2576A85E0();
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v67 = a1;
  v66(v24, a1, a2);
  if ((v25 & 1) == 0)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v24, a2);
    uint64_t v34 = v7;
LABEL_9:
    uint64_t v30 = v66;
    uint64_t v31 = v67;
    goto LABEL_10;
  }
  uint64_t v26 = sub_2576A85D0();
  uint64_t v57 = v7;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v27 = v7 + 8;
  uint64_t v28 = v29;
  v29(v24, a2);
  if (v26 <= 16)
  {
    uint64_t v34 = v57;
    goto LABEL_9;
  }
  v56[1] = v27;
  uint64_t v30 = v66;
  uint64_t v31 = v67;
  v66(v21, v67, a2);
  __int16 v68 = 0x8000;
  if (sub_2576A85E0())
  {
    if (sub_2576A85D0() >= 16)
    {
      sub_257680160();
      uint64_t v50 = v63;
      sub_2576A8590();
      char v51 = sub_2576A7920();
      uint64_t v52 = v50;
      uint64_t v30 = v66;
      v28(v52, a2);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v51) {
        goto LABEL_37;
      }
    }
    else
    {
      __int16 v32 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v68 > v32) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    char v46 = sub_2576A85E0();
    uint64_t v47 = sub_2576A85D0();
    if (v46)
    {
      if (v47 <= 16)
      {
        swift_getAssociatedConformanceWitness();
        sub_2576A8FD0();
        uint64_t v54 = v63;
        sub_2576A8F50();
        LODWORD(v59) = sub_2576A7920();
        v28(v54, a2);
        uint64_t v34 = v57;
        uint64_t v41 = (uint64_t)v60;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v60, v21, a2);
        uint64_t v31 = v67;
        if (v59) {
          goto LABEL_36;
        }
        LODWORD(v59) = v68;
        __int16 v55 = sub_2576A85C0();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
        uint64_t v30 = v66;
        if ((int)v59 > v55) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_257680160();
        uint64_t v48 = v63;
        sub_2576A8590();
        char v49 = sub_2576A7920();
        v28(v48, a2);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
        uint64_t v34 = v57;
        uint64_t v30 = v66;
        uint64_t v31 = v67;
        if (v49) {
          goto LABEL_37;
        }
      }
    }
    else if (v47 < 16)
    {
      __int16 v53 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
      if (v68 > v53) {
        goto LABEL_37;
      }
    }
    else
    {
      v28(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
    }
  }
LABEL_10:
  uint64_t v35 = sub_2576A85D0();
  v30(v16, v31, a2);
  if (v35 < 17)
  {
    uint64_t v36 = sub_2576A85D0();
    v28(v16, a2);
    if (v36 != 16 || (sub_2576A85E0() & 1) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    v28(v16, a2);
  }
  uint64_t v37 = v64;
  v30(v64, v31, a2);
  __int16 v70 = 0x7FFF;
  char v38 = sub_2576A85E0();
  uint64_t v39 = sub_2576A85D0();
  if ((v38 & 1) == 0)
  {
    if (v39 > 15)
    {
      __int16 v69 = 0x7FFF;
      uint64_t v43 = v63;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v63, v37, a2);
      sub_257680160();
      uint64_t v44 = v61;
      sub_2576A8590();
      uint64_t v41 = sub_2576A7920();
      v28(v44, a2);
      uint64_t v42 = v43;
      goto LABEL_20;
    }
LABEL_18:
    sub_2576A85C0();
    v28(v37, a2);
LABEL_21:
    __int16 v45 = sub_2576A85C0();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v31, a2);
    *uint64_t v65 = v45;
    return result;
  }
  if (v39 <= 16) {
    goto LABEL_18;
  }
  sub_257680160();
  uint64_t v40 = v63;
  sub_2576A8590();
  uint64_t v41 = sub_2576A7920();
  v28(v40, a2);
  uint64_t v42 = v37;
LABEL_20:
  v28(v42, a2);
  if ((v41 & 1) == 0) {
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25767CA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, _DWORD *a5@<X8>)
{
  uint64_t v62 = a4;
  uint64_t v65 = a5;
  uint64_t v59 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v60 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v61 = (char *)&v56 - v11;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = (char *)&v56 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v56 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v63 = (char *)&v56 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v56 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v56 - v23;
  char v25 = sub_2576A85E0();
  uint64_t v66 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v67 = a1;
  v66(v24, a1, a2);
  if ((v25 & 1) == 0)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28(v24, a2);
    uint64_t v34 = v7;
LABEL_9:
    uint64_t v30 = v66;
    uint64_t v31 = v67;
    goto LABEL_10;
  }
  uint64_t v26 = sub_2576A85D0();
  uint64_t v57 = v7;
  uint64_t v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v27 = v7 + 8;
  uint64_t v28 = v29;
  v29(v24, a2);
  if (v26 <= 32)
  {
    uint64_t v34 = v57;
    goto LABEL_9;
  }
  uint64_t v56 = v27;
  uint64_t v30 = v66;
  uint64_t v31 = v67;
  v66(v21, v67, a2);
  signed int v68 = 0x80000000;
  if (sub_2576A85E0())
  {
    if (sub_2576A85D0() >= 32)
    {
      sub_2575875B8();
      uint64_t v50 = v63;
      sub_2576A8590();
      char v51 = sub_2576A7920();
      uint64_t v52 = v50;
      uint64_t v30 = v66;
      v28(v52, a2);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v51) {
        goto LABEL_37;
      }
    }
    else
    {
      signed int v32 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v68 > v32) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    char v46 = sub_2576A85E0();
    uint64_t v47 = sub_2576A85D0();
    if (v46)
    {
      if (v47 <= 32)
      {
        swift_getAssociatedConformanceWitness();
        sub_2576A8FD0();
        uint64_t v54 = v63;
        sub_2576A8F50();
        LODWORD(v59) = sub_2576A7920();
        v28(v54, a2);
        uint64_t v34 = v57;
        uint64_t v41 = (uint64_t)v60;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v60, v21, a2);
        uint64_t v31 = v67;
        if (v59) {
          goto LABEL_36;
        }
        LODWORD(v59) = v68;
        int v55 = sub_2576A85C0();
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
        uint64_t v30 = v66;
        if ((int)v59 > v55) {
          goto LABEL_37;
        }
      }
      else
      {
        sub_2575875B8();
        uint64_t v48 = v63;
        sub_2576A8590();
        char v49 = sub_2576A7920();
        v28(v48, a2);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
        uint64_t v34 = v57;
        uint64_t v30 = v66;
        uint64_t v31 = v67;
        if (v49) {
          goto LABEL_37;
        }
      }
    }
    else if (v47 < 32)
    {
      signed int v53 = sub_2576A85C0();
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
      if (v68 > v53) {
        goto LABEL_37;
      }
    }
    else
    {
      v28(v21, a2);
      uint64_t v34 = v57;
      uint64_t v31 = v67;
    }
  }
LABEL_10:
  uint64_t v35 = sub_2576A85D0();
  v30(v16, v31, a2);
  if (v35 < 33)
  {
    uint64_t v36 = sub_2576A85D0();
    v28(v16, a2);
    if (v36 != 32 || (sub_2576A85E0() & 1) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    v28(v16, a2);
  }
  uint64_t v37 = v64;
  v30(v64, v31, a2);
  int v70 = 0x7FFFFFFF;
  char v38 = sub_2576A85E0();
  uint64_t v39 = sub_2576A85D0();
  if ((v38 & 1) == 0)
  {
    if (v39 > 31)
    {
      int v69 = 0x7FFFFFFF;
      uint64_t v43 = v63;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v63, v37, a2);
      sub_2575875B8();
      uint64_t v44 = v61;
      sub_2576A8590();
      uint64_t v41 = sub_2576A7920();
      v28(v44, a2);
      uint64_t v42 = v43;
      goto LABEL_20;
    }
LABEL_18:
    sub_2576A85C0();
    v28(v37, a2);
LABEL_21:
    int v45 = sub_2576A85C0();
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v31, a2);
    *uint64_t v65 = v45;
    return result;
  }
  if (v39 <= 32) {
    goto LABEL_18;
  }
  sub_2575875B8();
  uint64_t v40 = v63;
  sub_2576A8590();
  uint64_t v41 = sub_2576A7920();
  v28(v40, a2);
  uint64_t v42 = v37;
LABEL_20:
  v28(v42, a2);
  if ((v41 & 1) == 0) {
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_25767D2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  return sub_25767D2F4(a1, a2, a3, a4, (uint64_t)sub_257680114, a5);
}

uint64_t sub_25767D2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t v62 = a5;
  uint64_t v63 = a4;
  uint64_t v66 = a6;
  int64_t v59 = *(void *)(*(void *)(a3 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_6_2();
  uint64_t v60 = v11;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_7_11();
  uint64_t v61 = v13;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_7_11();
  uint64_t v65 = v15;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v16);
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_7_11();
  uint64_t v64 = v18;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v56 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v56 - v23;
  char v25 = OUTLINED_FUNCTION_4_77();
  uint64_t v67 = *(void (**)(void))(v9 + 16);
  uint64_t v68 = a1;
  ((void (*)(char *, uint64_t, uint64_t))v67)(v24, a1, a2);
  if ((v25 & 1) == 0)
  {
    uint64_t v28 = *(void (**)(void))(v9 + 8);
    OUTLINED_FUNCTION_23_37();
    OUTLINED_FUNCTION_199();
    v28();
    uint64_t v34 = v9;
LABEL_9:
    uint64_t v30 = v67;
    goto LABEL_10;
  }
  uint64_t v26 = OUTLINED_FUNCTION_10_58();
  uint64_t v57 = v9;
  uint64_t v29 = *(void (**)(void))(v9 + 8);
  uint64_t v27 = v9 + 8;
  uint64_t v28 = v29;
  OUTLINED_FUNCTION_23_37();
  OUTLINED_FUNCTION_119_2();
  v29();
  if (v26 <= 64)
  {
    uint64_t v34 = v57;
    goto LABEL_9;
  }
  v56[1] = v27;
  uint64_t v30 = v67;
  OUTLINED_FUNCTION_8_64();
  v30();
  int64_t v70 = 0x8000000000000000;
  if (OUTLINED_FUNCTION_4_77())
  {
    if (OUTLINED_FUNCTION_10_58() >= 64)
    {
      OUTLINED_FUNCTION_29_30();
      v49();
      OUTLINED_FUNCTION_2_77();
      char v50 = OUTLINED_FUNCTION_5_69();
      char v51 = v30;
      uint64_t v30 = v67;
      ((void (*)(void (*)(void), uint64_t))v28)(v51, a2);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v21, a2);
      uint64_t v34 = v57;
      if (v50) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v31 = OUTLINED_FUNCTION_13_53();
      uint64_t v32 = OUTLINED_FUNCTION_3_70();
      uint64_t result = ((uint64_t (*)(uint64_t))v28)(v32);
      uint64_t v34 = v57;
      if (v31 < v70) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    char v45 = OUTLINED_FUNCTION_4_77();
    uint64_t v46 = OUTLINED_FUNCTION_10_58();
    if (v45)
    {
      if (v46 <= 64)
      {
        OUTLINED_FUNCTION_23_37();
        swift_getAssociatedConformanceWitness();
        sub_2576A8FD0();
        sub_2576A8F50();
        LODWORD(v59) = OUTLINED_FUNCTION_5_69();
        OUTLINED_FUNCTION_119_2();
        v28();
        uint64_t v34 = v57;
        uint64_t v41 = v60;
        (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v60, v21, a2);
        if (v59) {
          goto LABEL_36;
        }
        int64_t v59 = v70;
        uint64_t v54 = OUTLINED_FUNCTION_13_53();
        OUTLINED_FUNCTION_119_2();
        uint64_t result = ((uint64_t (*)(void))v28)();
        uint64_t v30 = v67;
        if (v54 < v59) {
          goto LABEL_37;
        }
      }
      else
      {
        OUTLINED_FUNCTION_29_30();
        v47();
        OUTLINED_FUNCTION_2_77();
        char v48 = OUTLINED_FUNCTION_5_69();
        OUTLINED_FUNCTION_119_2();
        v28();
        OUTLINED_FUNCTION_119_2();
        uint64_t result = ((uint64_t (*)(void))v28)();
        uint64_t v34 = v57;
        uint64_t v30 = v67;
        if (v48) {
          goto LABEL_37;
        }
      }
    }
    else if (v46 < 64)
    {
      uint64_t v52 = OUTLINED_FUNCTION_13_53();
      uint64_t v53 = OUTLINED_FUNCTION_3_70();
      uint64_t result = ((uint64_t (*)(uint64_t))v28)(v53);
      uint64_t v34 = v57;
      if (v52 < v70) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v55 = OUTLINED_FUNCTION_3_70();
      ((void (*)(uint64_t))v28)(v55);
      uint64_t v34 = v57;
    }
  }
LABEL_10:
  uint64_t v35 = OUTLINED_FUNCTION_10_58();
  OUTLINED_FUNCTION_8_64();
  v30();
  if (v35 < 65)
  {
    uint64_t v36 = OUTLINED_FUNCTION_10_58();
    OUTLINED_FUNCTION_199();
    v28();
    if (v36 != 64 || (OUTLINED_FUNCTION_4_77() & 1) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    OUTLINED_FUNCTION_199();
    v28();
  }
  uint64_t v37 = v65;
  OUTLINED_FUNCTION_8_64();
  v30();
  int64_t v70 = 0x7FFFFFFFFFFFFFFFLL;
  char v38 = OUTLINED_FUNCTION_4_77();
  uint64_t v39 = OUTLINED_FUNCTION_10_58();
  if ((v38 & 1) == 0)
  {
    if (v39 > 63)
    {
      uint64_t v69 = 0x7FFFFFFFFFFFFFFFLL;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v64, v37, a2);
      OUTLINED_FUNCTION_29_30();
      v42();
      sub_2576A8590();
      OUTLINED_FUNCTION_27_31();
      uint64_t v41 = sub_2576A7920();
      OUTLINED_FUNCTION_20_40();
      v28();
      goto LABEL_20;
    }
LABEL_18:
    OUTLINED_FUNCTION_13_53();
    OUTLINED_FUNCTION_199();
    v28();
LABEL_21:
    uint64_t v43 = OUTLINED_FUNCTION_13_53();
    uint64_t v44 = OUTLINED_FUNCTION_23_37();
    uint64_t result = ((uint64_t (*)(uint64_t))v28)(v44);
    *uint64_t v66 = v43;
    return result;
  }
  if (v39 <= 64) {
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_29_30();
  v40();
  OUTLINED_FUNCTION_2_77();
  OUTLINED_FUNCTION_27_31();
  uint64_t v41 = sub_2576A7920();
  OUTLINED_FUNCTION_20_40();
  v28();
LABEL_20:
  OUTLINED_FUNCTION_20_40();
  v28();
  if ((v41 & 1) == 0) {
    goto LABEL_21;
  }
  __break(1u);
LABEL_36:
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v28)(v41, a2);
LABEL_37:
  __break(1u);
  return result;
}

void static UInt.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767D930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  return sub_25767E8BC(a1, a2, a3, (void (*)(void))sub_2576800C8, a4);
}

void static UInt8.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767D958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, unsigned char *a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = a1;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v27 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (sub_2576A85E0())
  {
    swift_getAssociatedConformanceWitness();
    sub_2576A8FD0();
    sub_2576A8F50();
    char v15 = sub_2576A7930();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, a2);
    if ((v15 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_2576A85D0() < 8)
  {
LABEL_14:
    char v25 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, a2);
    *a4 = v25;
    return result;
  }
  uint64_t v28 = v5;
  uint64_t v29 = a4;
  uint64_t v31 = v7;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v33, v5, a2);
  unsigned __int8 v34 = -1;
  char v16 = sub_2576A85E0();
  uint64_t v17 = sub_2576A85D0();
  if ((v16 & 1) == 0)
  {
    if (v17 < 9)
    {
      sub_2576A85C0();
      uint64_t v7 = v31;
      uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
      goto LABEL_13;
    }
LABEL_10:
    sub_25768007C();
    sub_2576A8590();
    char v24 = sub_2576A7920();
    uint64_t v7 = v31;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
    v20(v13, a2);
    if (v24) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (v17 > 8) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  sub_2576A8FD0();
  sub_2576A8F50();
  uint64_t v18 = v33;
  char v19 = sub_2576A7910();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
  v20(v13, a2);
  unsigned int v21 = v34;
  uint64_t v22 = v30;
  v27(v30, (uint64_t)v18, a2);
  if ((v19 & 1) == 0)
  {
    v20(v22, a2);
    uint64_t v7 = v31;
    goto LABEL_13;
  }
  unsigned __int8 v23 = sub_2576A85C0();
  v20(v22, a2);
  uint64_t v7 = v31;
  if (v21 >= v23)
  {
LABEL_13:
    v20(v33, a2);
    uint64_t v5 = v28;
    a4 = v29;
    goto LABEL_14;
  }
LABEL_16:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

void static UInt16.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767DE74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, _WORD *a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = a1;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v27 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (sub_2576A85E0())
  {
    swift_getAssociatedConformanceWitness();
    sub_2576A8FD0();
    sub_2576A8F50();
    char v15 = sub_2576A7930();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, a2);
    if ((v15 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_2576A85D0() < 16)
  {
LABEL_14:
    __int16 v25 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, a2);
    *a4 = v25;
    return result;
  }
  uint64_t v28 = v5;
  uint64_t v29 = a4;
  uint64_t v31 = v7;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v33, v5, a2);
  unsigned __int16 v34 = -1;
  char v16 = sub_2576A85E0();
  uint64_t v17 = sub_2576A85D0();
  if ((v16 & 1) == 0)
  {
    if (v17 < 17)
    {
      sub_2576A85C0();
      uint64_t v7 = v31;
      uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
      goto LABEL_13;
    }
LABEL_10:
    sub_257680030();
    sub_2576A8590();
    char v24 = sub_2576A7920();
    uint64_t v7 = v31;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
    v20(v13, a2);
    if (v24) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (v17 > 16) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  sub_2576A8FD0();
  sub_2576A8F50();
  uint64_t v18 = v33;
  char v19 = sub_2576A7910();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
  v20(v13, a2);
  unsigned int v21 = v34;
  uint64_t v22 = v30;
  v27(v30, (uint64_t)v18, a2);
  if ((v19 & 1) == 0)
  {
    v20(v22, a2);
    uint64_t v7 = v31;
    goto LABEL_13;
  }
  unsigned __int16 v23 = sub_2576A85C0();
  v20(v22, a2);
  uint64_t v7 = v31;
  if (v21 >= v23)
  {
LABEL_13:
    v20(v33, a2);
    uint64_t v5 = v28;
    a4 = v29;
    goto LABEL_14;
  }
LABEL_16:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

void static UInt32.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767E390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, _DWORD *a4@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = a1;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v27 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (sub_2576A85E0())
  {
    swift_getAssociatedConformanceWitness();
    sub_2576A8FD0();
    sub_2576A8F50();
    char v15 = sub_2576A7930();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, a2);
    if ((v15 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_2576A85D0() < 32)
  {
LABEL_14:
    int v25 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, a2);
    *a4 = v25;
    return result;
  }
  uint64_t v28 = v5;
  uint64_t v29 = a4;
  uint64_t v31 = v7;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v33, v5, a2);
  int v34 = -1;
  char v16 = sub_2576A85E0();
  uint64_t v17 = sub_2576A85D0();
  if ((v16 & 1) == 0)
  {
    if (v17 < 33)
    {
      sub_2576A85C0();
      uint64_t v7 = v31;
      uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
      goto LABEL_13;
    }
LABEL_10:
    sub_25767FFE4();
    sub_2576A8590();
    char v24 = sub_2576A7920();
    uint64_t v7 = v31;
    uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
    v20(v13, a2);
    if (v24) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (v17 > 32) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  sub_2576A8FD0();
  sub_2576A8F50();
  uint64_t v18 = v33;
  char v19 = sub_2576A7910();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v31 + 8);
  v20(v13, a2);
  unsigned int v21 = v34;
  uint64_t v22 = v30;
  v27(v30, (uint64_t)v18, a2);
  if ((v19 & 1) == 0)
  {
    v20(v22, a2);
    uint64_t v7 = v31;
    goto LABEL_13;
  }
  unsigned int v23 = sub_2576A85C0();
  v20(v22, a2);
  uint64_t v7 = v31;
  if (v21 >= v23)
  {
LABEL_13:
    v20(v33, a2);
    uint64_t v5 = v28;
    a4 = v29;
    goto LABEL_14;
  }
LABEL_16:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25767E8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  return sub_25767E8BC(a1, a2, a3, (void (*)(void))sub_2574F05F0, a4);
}

uint64_t sub_25767E8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(void)@<X6>, uint64_t *a5@<X8>)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_6_2();
  uint64_t v34 = v11;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_7_11();
  uint64_t v38 = v13;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v30 - v15;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  if (sub_2576A85E0())
  {
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_28_34();
    OUTLINED_FUNCTION_19_43();
    OUTLINED_FUNCTION_27_31();
    char v18 = sub_2576A7930();
    OUTLINED_FUNCTION_199();
    v19();
    if ((v18 & 1) == 0) {
      goto LABEL_16;
    }
  }
  if (sub_2576A85D0() < 64)
  {
LABEL_14:
    uint64_t v28 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, a2);
    *a5 = v28;
    return result;
  }
  uint64_t v32 = a1;
  uint64_t v33 = a5;
  uint64_t v35 = v9;
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v31(v38, a1, a2);
  uint64_t v39 = -1;
  char v20 = sub_2576A85E0();
  uint64_t v21 = sub_2576A85D0();
  if ((v20 & 1) == 0)
  {
    if (v21 < 65)
    {
      sub_2576A85C0();
      uint64_t v9 = v35;
      char v24 = *(void (**)(void))(v35 + 8);
      goto LABEL_13;
    }
LABEL_10:
    v36();
    sub_2576A8590();
    char v27 = sub_2576A7920();
    uint64_t v9 = v35;
    char v24 = *(void (**)(void))(v35 + 8);
    ((void (*)(char *, uint64_t))v24)(v16, a2);
    if (v27) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (v21 > 64) {
    goto LABEL_10;
  }
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_28_34();
  OUTLINED_FUNCTION_19_43();
  OUTLINED_FUNCTION_27_31();
  uint64_t v22 = v38;
  char v23 = sub_2576A7910();
  char v24 = *(void (**)(void))(v35 + 8);
  OUTLINED_FUNCTION_15_48();
  v24();
  unint64_t v25 = v39;
  v31(v34, v22, a2);
  if ((v23 & 1) == 0)
  {
    OUTLINED_FUNCTION_15_48();
    v24();
    uint64_t v9 = v35;
    goto LABEL_13;
  }
  unint64_t v26 = sub_2576A85C0();
  OUTLINED_FUNCTION_15_48();
  v24();
  uint64_t v9 = v35;
  if (v25 >= v26)
  {
LABEL_13:
    ((void (*)(uint64_t, uint64_t))v24)(v38, a2);
    a1 = v32;
    a5 = v33;
    goto LABEL_14;
  }
LABEL_16:
  OUTLINED_FUNCTION_0_4();
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

void sub_25767ED10(unsigned char *a1@<X8>)
{
  *a1 = -127;
}

void sub_25767ED1C(unsigned char *a1@<X8>)
{
  *a1 = 0x80;
}

void sub_25767ED28(unsigned char *a1@<X8>)
{
  *a1 = -126;
}

void sub_25767ED34(unsigned char *a1@<X8>)
{
  *a1 = -125;
}

uint64_t static TensorFloatingPointScalar.tensorScalarKind.getter()
{
  OUTLINED_FUNCTION_21_43();
  uint64_t result = v1();
  *uint64_t v0 = v3 | 0x80;
  return result;
}

void static Float16.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767ED84()
{
  sub_25751CF38();
  return sub_2576A7750();
}

uint64_t sub_25767EDF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, short float *a3@<X8>)
{
  if (sub_2576A85D0() < 65)
  {
    char v8 = sub_2576A85E0();
    uint64_t v9 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    if (v8) {
      short float v7 = (short float)v9;
    }
    else {
      short float v7 = (short float)(unint64_t)v9;
    }
  }
  else
  {
    sub_25751CF38();
    sub_25751CF84();
    sub_2576A7770();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    short float v7 = v10;
  }
  *a3 = v7;
  return result;
}

uint64_t BFloat16.data.getter()
{
  return *v0;
}

uint64_t BFloat16.data.setter(uint64_t result)
{
  *unsigned int v1 = result;
  return result;
}

uint64_t (*BFloat16.data.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_25767EF68(uint64_t a1, uint64_t a2)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_25767EFE0()
{
  return 1635017060;
}

uint64_t sub_25767EFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25767EF68(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_25767F020(uint64_t a1)
{
  unint64_t v2 = sub_25767F71C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25767F05C(uint64_t a1)
{
  unint64_t v2 = sub_25767F71C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void static BFloat16.scalarType.getter(unsigned char *a1@<X8>)
{
}

void static BFloat16.tensorFloatingPointScalarKind.getter(unsigned char *a1@<X8>)
{
}

uint64_t BFloat16.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0060B0);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25767F71C();
  sub_2576A9230();
  sub_2576A8E50();
  uint64_t v3 = OUTLINED_FUNCTION_2_42();
  return v4(v3);
}

uint64_t BFloat16.init(from:)@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0060C0);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25767F71C();
  sub_2576A91F0();
  if (!v2)
  {
    __int16 v6 = sub_2576A8D70();
    uint64_t v7 = OUTLINED_FUNCTION_2_42();
    v8(v7);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_25767F2B4@<X0>(void *a1@<X0>, _WORD *a2@<X8>)
{
  return BFloat16.init(from:)(a1, a2);
}

uint64_t sub_25767F2CC(void *a1)
{
  return BFloat16.encode(to:)(a1);
}

BOOL static BFloat16.< infix(_:_:)(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 < *a2;
}

BOOL static BFloat16.== infix(_:_:)(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

BOOL sub_25767F310(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_257536750(*a1, *a2);
}

BOOL sub_25767F31C(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_257536790(*a1, *a2);
}

BOOL sub_25767F328(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_25753660C(*a1, *a2);
}

uint64_t BFloat16.description.getter(float a1)
{
  LOWORD(a1) = *v1;
  return MEMORY[0x270F9DDF8]((float)LODWORD(a1));
}

void static Float.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767F350()
{
  sub_25748E5B0();
  return sub_2576A7750();
}

uint64_t sub_25767F3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, float *a3@<X8>)
{
  if (sub_2576A85D0() < 65)
  {
    char v8 = sub_2576A85E0();
    uint64_t v9 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    if (v8) {
      float v7 = (float)v9;
    }
    else {
      float v7 = (float)(unint64_t)v9;
    }
  }
  else
  {
    sub_25748E5B0();
    sub_2575864D8();
    sub_2576A7770();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    float v7 = v10;
  }
  *a3 = v7;
  return result;
}

void static Double.scalarType.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_25767F50C()
{
  sub_2574E95A8();
  return sub_2576A7750();
}

uint64_t sub_25767F578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  if (sub_2576A85D0() < 65)
  {
    char v8 = sub_2576A85E0();
    uint64_t v9 = sub_2576A85C0();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    if (v8) {
      double v7 = (double)v9;
    }
    else {
      double v7 = (double)(unint64_t)v9;
    }
  }
  else
  {
    sub_2574E95A8();
    sub_2574E960C();
    sub_2576A7770();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    double v7 = v10;
  }
  *a3 = v7;
  return result;
}

void static Bool.scalarType.getter(unsigned char *a1@<X8>)
{
}

unint64_t sub_25767F6D0()
{
  unint64_t result = qword_26A0060A8;
  if (!qword_26A0060A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060A8);
  }
  return result;
}

unint64_t sub_25767F71C()
{
  unint64_t result = qword_26A0060B8;
  if (!qword_26A0060B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060B8);
  }
  return result;
}

unint64_t sub_25767F76C()
{
  unint64_t result = qword_26A0060C8;
  if (!qword_26A0060C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060C8);
  }
  return result;
}

uint64_t sub_25767F7B8()
{
  return sub_257587540(&qword_26A0060D0, &qword_26A0060D8);
}

unint64_t sub_25767F7E4()
{
  unint64_t result = qword_26A0060E0;
  if (!qword_26A0060E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060E0);
  }
  return result;
}

uint64_t sub_25767F830()
{
  return sub_257587540(&qword_26A0060E8, &qword_26A0060F0);
}

unint64_t sub_25767F85C()
{
  unint64_t result = qword_26A0060F8;
  if (!qword_26A0060F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0060F8);
  }
  return result;
}

uint64_t sub_25767F8A8()
{
  return sub_257587540(&qword_26A006100, &qword_26A006108);
}

unint64_t sub_25767F8D4()
{
  unint64_t result = qword_26A006110;
  if (!qword_26A006110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006110);
  }
  return result;
}

uint64_t sub_25767F920()
{
  return sub_257587540(&qword_26A006118, &qword_26A006120);
}

unint64_t sub_25767F948(uint64_t a1)
{
  unint64_t result = sub_25748E668();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25767F970(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25767F9A0();
  unint64_t result = sub_25767F9EC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_25767F9A0()
{
  unint64_t result = qword_26A006128;
  if (!qword_26A006128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006128);
  }
  return result;
}

unint64_t sub_25767F9EC()
{
  unint64_t result = qword_26A006130;
  if (!qword_26A006130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006130);
  }
  return result;
}

unint64_t sub_25767FA3C()
{
  unint64_t result = qword_26A006138;
  if (!qword_26A006138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006138);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TensorScalarKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3D)
  {
    if (a2 + 195 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 195) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 196;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v5 >= 0x3C) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for TensorScalarKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 195 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 195) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3C)
  {
    unsigned int v6 = ((a2 - 61) >> 8) + 1;
    *unint64_t result = a2 - 61;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25767FBF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_25767FC1C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  unsigned int v2 = v1 >> 6;
  unsigned int v3 = (v1 & 3) + 3;
  if (v2 == 3) {
    return v3;
  }
  else {
    return v2;
  }
}

unsigned char *sub_25767FC38(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_25767FC48(unsigned char *result, unsigned int a2)
{
  if (a2 < 3) {
    char v2 = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = (a2 + 1) & 3 | 0xC0;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for TensorScalarKind()
{
}

void type metadata accessor for TensorSignedIntegerScalarKind()
{
}

void type metadata accessor for TensorUnsignedIntegerScalarKind()
{
}

unsigned char *_s14NeuralNetworks29TensorSignedIntegerScalarKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25767FD68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for TensorFloatingPointScalarKind()
{
}

uint64_t dispatch thunk of static TensorScalar.tensorScalarKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static TensorScalar.scalarType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TensorFloatingPointScalar.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of static TensorFloatingPointScalar.tensorFloatingPointScalarKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of TensorIntegerScalar.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

void type metadata accessor for BFloat16()
{
}

unsigned char *storeEnumTagSinglePayload for BFloat16.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25767FEBCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BFloat16.CodingKeys()
{
  return &type metadata for BFloat16.CodingKeys;
}

unint64_t sub_25767FEF8()
{
  unint64_t result = qword_26A006140;
  if (!qword_26A006140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006140);
  }
  return result;
}

unint64_t sub_25767FF48()
{
  unint64_t result = qword_26A006148;
  if (!qword_26A006148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006148);
  }
  return result;
}

unint64_t sub_25767FF98()
{
  unint64_t result = qword_26A006150;
  if (!qword_26A006150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006150);
  }
  return result;
}

unint64_t sub_25767FFE4()
{
  unint64_t result = qword_26A006158;
  if (!qword_26A006158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006158);
  }
  return result;
}

unint64_t sub_257680030()
{
  unint64_t result = qword_26A006160;
  if (!qword_26A006160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006160);
  }
  return result;
}

unint64_t sub_25768007C()
{
  unint64_t result = qword_26A006168;
  if (!qword_26A006168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006168);
  }
  return result;
}

unint64_t sub_2576800C8()
{
  unint64_t result = qword_26A006170;
  if (!qword_26A006170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006170);
  }
  return result;
}

unint64_t sub_257680114()
{
  unint64_t result = qword_26A006178;
  if (!qword_26A006178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006178);
  }
  return result;
}

unint64_t sub_257680160()
{
  unint64_t result = qword_26A006180;
  if (!qword_26A006180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006180);
  }
  return result;
}

unint64_t sub_2576801AC()
{
  unint64_t result = qword_26A006188;
  if (!qword_26A006188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006188);
  }
  return result;
}

unint64_t sub_2576801F8()
{
  unint64_t result = qword_26A006190;
  if (!qword_26A006190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006190);
  }
  return result;
}

unint64_t sub_257680244()
{
  unint64_t result = qword_26A006198;
  if (!qword_26A006198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006198);
  }
  return result;
}

unint64_t sub_257680290()
{
  unint64_t result = qword_26A0061A0;
  if (!qword_26A0061A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0061A0);
  }
  return result;
}

unint64_t sub_2576802DC()
{
  unint64_t result = qword_26A0061A8[0];
  if (!qword_26A0061A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0061A8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_77()
{
  return sub_2576A8590();
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_77()
{
  return sub_2576A85E0();
}

uint64_t OUTLINED_FUNCTION_5_69()
{
  return sub_2576A7920();
}

void OUTLINED_FUNCTION_6_65()
{
  sub_2574E7FD8();
}

uint64_t OUTLINED_FUNCTION_9_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_58()
{
  return sub_2576A85D0();
}

uint64_t OUTLINED_FUNCTION_13_53()
{
  return sub_2576A85C0();
}

void OUTLINED_FUNCTION_17_48()
{
  sub_2574E7FD8();
}

uint64_t OUTLINED_FUNCTION_19_43()
{
  return sub_2576A8F50();
}

uint64_t OUTLINED_FUNCTION_23_37()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_34()
{
  return sub_2576A8FD0();
}

uint64_t sub_257680534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t ObjectType;
  void v27[4];
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (!v7)
  {
    swift_unknownObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    goto LABEL_29;
  }
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  if (v7 < 0)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    v27[2] = 0;
    v27[3] = 0;
    v27[1] = v6;
    uint64_t v28 = -1;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v29 = a6;
    uint64_t v32 = -1;
    uint64_t v33 = 4;
    sub_25746BF88();
  }
  uint64_t v11 = v35;
  uint64_t ObjectType = swift_getObjectType();
  char v23 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16);
  a6 = a5 + 32;
  uint64_t v6 = a1;
  do
  {
    if (a2 == v6)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v23(&v34, ObjectType, a3);
    a6 = *(void *)(v34 + 16);
    if (v6 < -a6 || v6 >= a6) {
      goto LABEL_41;
    }
    unint64_t v13 = (a6 & (a1 >> 63)) + v6;
    if (v13 >= a6) {
      goto LABEL_31;
    }
    uint64_t v14 = *(void *)(v34 + 8 * v13 + 32);
    swift_bridgeObjectRelease();
    uint64_t v15 = swift_getObjectType();
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 16))(v27, v15, a4);
    a6 = *(void *)(v27[0] + 16);
    if (v6 < -a6 || v6 >= a6) {
      goto LABEL_41;
    }
    unint64_t v17 = (a6 & (a1 >> 63)) + v6;
    if (v17 >= a6) {
      goto LABEL_32;
    }
    uint64_t v18 = *(void *)(v27[0] + 8 * v17 + 32);
    swift_bridgeObjectRelease();
    a6 = v14 - v18;
    if (__OFSUB__(v14, v18)) {
      goto LABEL_33;
    }
    if (a1 < 0) {
      goto LABEL_34;
    }
    if ((unint64_t)v6 >= *(void *)(a5 + 16)) {
      goto LABEL_35;
    }
    uint64_t v19 = *(void *)(a5 + 32 + 8 * v6);
    uint64_t v20 = a6 - v19;
    if (__OFSUB__(a6, v19)) {
      goto LABEL_36;
    }
    uint64_t v35 = v11;
    unint64_t v21 = *(void *)(v11 + 16);
    if (v21 >= *(void *)(v11 + 24) >> 1)
    {
      sub_2574E7154();
      uint64_t v11 = v35;
    }
    *(void *)(v11 + 16) = v21 + 1;
    a6 = v11 + 8 * v21;
    *(void *)(a6 + 32) = v20;
    if (a2 < a1) {
      goto LABEL_37;
    }
    if (v6 >= a2) {
      goto LABEL_38;
    }
    ++v6;
  }
  while (a2 != v6);
  swift_unknownObjectRelease();
LABEL_29:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

uint64_t sub_2576807F0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v4; uint64_t v4 = sub_2576A8BF0())
  {
    unint64_t v5 = v3 & 0xC000000000000001;
    uint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v7 = 4;
    unint64_t v23 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v5) {
        MEMORY[0x25A2B8DB0](v7 - 4, v3);
      }
      else {
        swift_retain();
      }
      uint64_t v8 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_2575CA350();
      if (*(void *)(a2 + 16) && (unint64_t v10 = sub_2574759B8(v9), (v11 & 1) != 0))
      {
        uint64_t v12 = v4;
        unint64_t v13 = v3;
        uint64_t v14 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v10);
        uint64_t v16 = *v14;
        uint64_t v15 = v14[1];
        swift_unknownObjectRetain();
        swift_release();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v24 = v6;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_257472BE4();
          uint64_t v6 = v20;
          uint64_t v24 = v20;
        }
        unint64_t v18 = *(void *)(v6 + 16);
        if (v18 >= *(void *)(v6 + 24) >> 1)
        {
          sub_257472BE4();
          uint64_t v6 = v21;
          uint64_t v24 = v21;
        }
        uint64_t ObjectType = swift_getObjectType();
        sub_257547BC4(v18, v16, &v24, ObjectType, v15);
        unint64_t v3 = v13;
        uint64_t v4 = v12;
        unint64_t v5 = v23;
      }
      else
      {
        swift_release();
      }
      ++v7;
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_19:
    sub_2576A7810();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_21:
  swift_bridgeObjectRelease();
  return v6;
}

#error "257680AA0: call analysis failed (funcsize=51)"

void sub_257680AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v29 = OUTLINED_FUNCTION_24_9(v28);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_0_8();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_6_2();
  uint64_t v45 = v34;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_240_0();
  uint64_t v36 = sub_2575CA350();
  if (sub_2574BAF20(v36, v27))
  {
    type metadata accessor for NativeTensorStorage();
    a10 = *(void *)(v20 + 56);
    char v46 = *(unsigned char *)(v20 + 64);
    sub_2576A7810();
    sub_25754DDC0(&a10, (uint64_t)&v46, 0);
    uint64_t v38 = v37;
    a10 = *(void *)(v37 + 16);
    sub_2576A7810();
    sub_25758A634(&a10, 0, 3, v22);
    swift_getObjectType();
    OUTLINED_FUNCTION_34_28();
    OUTLINED_FUNCTION_11_10();
    v39();
    sub_25758A634(&a10, 0, 3, v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v23, v22, v30);
    uint64_t v40 = __swift_storeEnumTagSinglePayload(v23, 0, 1, v30);
    MEMORY[0x270FA5388](v40);
    sub_257588F28(v23, (void (*)(unsigned char *))sub_257686280);
    if (v21)
    {
      swift_release();
      sub_2574B92D8(v23, &qword_26A0012D0);
      uint64_t v41 = *(void (**)(void))(v32 + 8);
      ((void (*)(uint64_t, uint64_t))v41)(v22, v30);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_2574B92D8(v23, &qword_26A0012D0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v44 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v44 + 16) = xmmword_2576ABB10;
      *(void *)(v44 + 32) = v38;
      *(void *)(v44 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      uint64_t v41 = *(void (**)(void))(v32 + 8);
      OUTLINED_FUNCTION_20_40();
      v41();
    }
    ((void (*)(uint64_t, uint64_t))v41)(v45, v30);
  }
  else
  {
    sub_257480520();
    uint64_t v42 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1C90, v42, v43);
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257680DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getObjectType();
  uint64_t v11 = sub_2576A6DD0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a2, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
  uint64_t v14 = a1;
  uint64_t v15 = a3;
  sub_257648508((uint64_t)sub_2576862A0, (uint64_t)v13, MEMORY[0x263F8EE60] + 8, a4);
  return sub_2574B92D8((uint64_t)v10, &qword_26A0012D0);
}

uint64_t sub_257680F10()
{
  sub_2576A6A50();
  sub_2576A7810();
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6A40())
  {
    sub_2576A69B0();
    if (v0)
    {
      sub_2576A8730();
      sub_2576A7B00();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
      sub_2576A8A30();
      sub_2576A7B00();
      sub_257480520();
      swift_allocError();
      *(void *)uint64_t v1 = 0;
      *(void *)(v1 + 8) = 0xE000000000000000;
      *(unsigned char *)(v1 + 16) = 1;
      swift_willThrow();
    }
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v3 = xmmword_2576C1C90;
    *(unsigned char *)(v3 + 16) = 4;
    return swift_willThrow();
  }
}

#error "2576810EC: call analysis failed (funcsize=6)"

uint64_t sub_2576810F8(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2575CA350();
  uint64_t v6 = sub_2574BAF20(v5, a1);
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v2 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB10;
    uint64_t v10 = *(void *)(v3 + 48);
    type metadata accessor for ViewingTensorStorage();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v8;
    v11[3] = v9;
    v11[4] = v10;
    *(void *)(v2 + 32) = v11;
    *(void *)(v2 + 40) = &off_2706641B0;
    sub_2576A7810();
  }
  else
  {
    sub_257480520();
    uint64_t v12 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CA0, v12, v13);
  }
  return v2;
}

uint64_t sub_2576811D0(uint64_t a1)
{
  return sub_2576810F8(a1);
}

void sub_2576811E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v76)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v77)(void);
  uint64_t *v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(void);
  uint64_t v98;
  void (*v99)(void);
  void (*v100)(void);
  uint64_t v101;
  uint64_t v102;
  void (*v103)(void);
  void (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(void);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char v128;
  uint64_t v129[6];
  int v130;
  char v131;
  uint64_t v132;
  uint64_t v133;

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  char v119 = v21;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  uint64_t v115 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_7_11();
  uint64_t v116 = v31;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_10_9();
  uint64_t v117 = v33;
  uint64_t v118 = sub_2576A6B00();
  OUTLINED_FUNCTION_0_8();
  uint64_t v35 = v34;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_3_25();
  uint64_t v39 = v37 - v38;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v107 - v41;
  uint64_t v43 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v45 = v44;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_6_2();
  char v123 = v47;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v48);
  OUTLINED_FUNCTION_7_11();
  char v124 = v49;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_10_9();
  char v127 = v51;
  uint64_t v52 = *(void *)(v20 + 40);
  uint64_t v53 = sub_2575CA350();
  uint64_t v54 = sub_2574BAF20(v53, v26);
  if (!v54)
  {
    sub_257480520();
    uint64_t v71 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CB0, v71, v72);
    goto LABEL_11;
  }
  uint64_t v56 = v54;
  uint64_t v57 = v55;
  uint64_t v113 = v45;
  uint64_t v125 = v39;
  char v126 = v42;
  uint64_t v114 = v35;
  uint64_t ObjectType = swift_getObjectType();
  int64_t v59 = *(void (**)(void))(v57 + 16);
  char v122 = v56;
  char v120 = ObjectType;
  char v121 = v57;
  OUTLINED_FUNCTION_31_31();
  v59();
  char v132 = a10;
  uint64_t v112 = v24;
  uint64_t v60 = *(void *)(v24 + 56);
  unint64_t v61 = *(void *)(v60 + 16);
  static ShapeInference.broadcasting(_:toRank:)((uint64_t)&v132, v61, v129);
  swift_bridgeObjectRelease();
  uint64_t v62 = v129[0];
  if (!v129[0]) {
    goto LABEL_13;
  }
  char v132 = v60;
  char v128 = *(unsigned char *)(v52 + 160);
  char v130 = 0;
  memset(v129, 0, sizeof(v129));
  sub_2576A7810();
  Tensor.init(ones:scalarType:on:)(&v132, &v128, (uint64_t)v129, &a10);
  swift_retain_n();
  swift_release();
  OUTLINED_FUNCTION_20_41();
  uint64_t v63 = v119;
  int64_t v59 = (void (*)(void))sub_2576140FC(v64, v65, v66, v67);
  uint64_t v69 = v68;
  swift_release();
  uint64_t v111 = v43;
  uint64_t v110 = v63;
  if (v61 >= 2)
  {
    uint64_t v70 = v127;
    if (*(void *)(v60 + 16))
    {
      uint64_t v109 = *(void *)(v60 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_13:
    v129[0] = 0;
    v129[1] = 0xE000000000000000;
    sub_2576A8730();
    sub_2576A7B00();
    OUTLINED_FUNCTION_31_31();
    v59();
    uint64_t v106 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v106, MEMORY[0x263F8D6C8]);
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    a10 = v61;
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    char v131 = 3;
    OUTLINED_FUNCTION_25_37();
    sub_25746BE6C();
  }
  uint64_t v109 = 1;
  uint64_t v70 = v127;
LABEL_8:
  v129[0] = v62;
  sub_2576A7810();
  OUTLINED_FUNCTION_8_1(v129, v70);
  swift_getObjectType();
  uint64_t v73 = v69;
  uint64_t v74 = *(void (**)(void))(v69 + 16);
  OUTLINED_FUNCTION_31_31();
  v74();
  OUTLINED_FUNCTION_8_1(v129, v124);
  v129[0] = v62;
  uint64_t v108 = v73;
  OUTLINED_FUNCTION_31_31();
  v74();
  char v132 = a10;
  sub_257558168((uint64_t)v129, (uint64_t)&v132, (uint64_t)v126);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_31();
  v74();
  a10 = v129[0];
  char v132 = v62;
  sub_257558168((uint64_t)&a10, (uint64_t)&v132, v125);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v129[0] = v60;
  sub_2576A7810();
  OUTLINED_FUNCTION_8_1(v129, v123);
  type metadata accessor for NativeTensorStorage();
  v129[0] = v60;
  uint64_t v75 = v121;
  uint64_t v76 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v121 + 8);
  sub_2576A7810();
  char v119 = v59;
  v76(&a10, v120, v75);
  OUTLINED_FUNCTION_20_41();
  uint64_t v77 = v110;
  sub_25754DDC0(v78, v79, v80);
  uint64_t v82 = v81;
  uint64_t v110 = v77;
  uint64_t v83 = v113;
  uint64_t v84 = *(void (**)(void))(v113 + 16);
  uint64_t v85 = v117;
  OUTLINED_FUNCTION_3_4();
  v84();
  OUTLINED_FUNCTION_2_6(v85);
  uint64_t v86 = v116;
  OUTLINED_FUNCTION_3_4();
  v84();
  OUTLINED_FUNCTION_2_6(v86);
  uint64_t v87 = v115;
  OUTLINED_FUNCTION_3_4();
  v84();
  uint64_t v88 = OUTLINED_FUNCTION_2_6(v87);
  uint64_t v107 = (uint64_t)&v107;
  MEMORY[0x270FA5388](v88);
  uint64_t v89 = v125;
  *(&v107 - 4) = (uint64_t)v126;
  *(&v107 - 3) = v89;
  uint64_t v90 = v109;
  *(&v107 - 2) = v112;
  *(&v107 - 1) = v90;
  MEMORY[0x270FA5388](v91);
  OUTLINED_FUNCTION_37_23();
  uint64_t v93 = *(void *)(v92 - 256);
  uint64_t v94 = v108;
  *(void *)(v95 - 64) = v93;
  *(void *)(v95 - 56) = v94;
  *(void *)(v95 - 48) = v86;
  *(void *)(v95 - 40) = v82;
  uint64_t v112 = v82;
  *(void *)(v95 - 32) = &off_270667760;
  *(void *)(v95 - 24) = v87;
  *(void *)(v95 - 16) = sub_2576862BC;
  *(void *)(v95 - 8) = v96;
  uint64_t v97 = v110;
  sub_257648508((uint64_t)sub_2574C2548, v98, MEMORY[0x263F8EE60] + 8, (uint64_t)&v133);
  if (v97)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_2574B92D8(v87, &qword_26A0012D0);
    sub_2574B92D8(v86, &qword_26A0012D0);
    sub_2574B92D8(v85, &qword_26A0012D0);
    uint64_t v99 = *(void (**)(void))(v83 + 8);
    OUTLINED_FUNCTION_20_40();
    v99();
    OUTLINED_FUNCTION_20_40();
    v99();
    OUTLINED_FUNCTION_20_40();
    v99();
    uint64_t v100 = *(void (**)(void))(v114 + 8);
    uint64_t v101 = v118;
    OUTLINED_FUNCTION_31_1();
    v100();
    ((void (*)(char *, uint64_t))v100)(v126, v101);
  }
  else
  {
    sub_2574B92D8(v87, &qword_26A0012D0);
    sub_2574B92D8(v86, &qword_26A0012D0);
    sub_2574B92D8(v85, &qword_26A0012D0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v102 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v102 + 16) = xmmword_2576ABB10;
    *(void *)(v102 + 32) = v112;
    *(void *)(v102 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v103 = *(void (**)(void))(v83 + 8);
    OUTLINED_FUNCTION_20_40();
    v103();
    OUTLINED_FUNCTION_20_40();
    v103();
    OUTLINED_FUNCTION_20_40();
    v103();
    uint64_t v104 = *(void (**)(uint64_t, uint64_t))(v114 + 8);
    uint64_t v105 = v118;
    v104(v125, v118);
    v104((uint64_t)v126, v105);
  }
LABEL_11:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257681AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v25[1] = a7;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v34 = a3;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v7 = sub_2576A6BF0();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2576A6D00();
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2576A6B00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)v25 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v25 - v20;
  v25[3] = sub_2576A6CE0();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v22(v21, v27, v12);
  v22(v18, v28, v12);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8CA78], v12);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8CCA8], v26);
  sub_2576A8470();
  sub_2576A83D0();
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x263F8CB58], v31);
  if (sub_2576A6CD0())
  {
    sub_2576A6CC0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v24 = xmmword_2576C1CB0;
    *(unsigned char *)(v24 + 16) = 4;
    return swift_willThrow();
  }
}

#error "257681E5C: call analysis failed (funcsize=6)"

void sub_257681E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v43)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  __n128 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t ObjectType;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  long long v77;
  uint64_t v78[3];
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  uint64_t v71 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_10_9();
  uint64_t v70 = v31;
  OUTLINED_FUNCTION_20_41();
  swift_beginAccess();
  sub_2576A7810();
  unint64_t v32 = sub_2576A7810();
  uint64_t v33 = sub_2576807F0(v32, v26);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34 == sub_257576E10())
  {
    type metadata accessor for NativeTensorStorage();
    v78[0] = *(void *)(v24 + 64);
    LOBYTE(a10) = *(unsigned char *)(v24 + 72);
    sub_2576A7810();
    OUTLINED_FUNCTION_20_41();
    sub_25754DDC0(v35, v36, v37);
    uint64_t v39 = v38;
    uint64_t v75 = v21;
    uint64_t v69 = *(void *)(v33 + 16);
    if (v69)
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v76 = 0;
      uint64_t v40 = 0;
      uint64_t v67 = MEMORY[0x263F8EE60] + 8;
      uint64_t v66 = v33;
      while (1)
      {
        uint64_t v72 = v40;
        uint64_t v77 = *(_OWORD *)(v33 + 16 * v40 + 32);
        uint64_t v41 = swift_getObjectType();
        uint64_t v42 = *((void *)&v77 + 1);
        uint64_t v43 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*((void *)&v77 + 1) + 16);
        swift_unknownObjectRetain();
        swift_retain();
        v43(v78, v41, v42);
        uint64_t v44 = v70;
        OUTLINED_FUNCTION_8_1(v78, v70);
        uint64_t v45 = v24;
        uint64_t v46 = sub_2576A6DD0();
        __swift_storeEnumTagSinglePayload(v44, 0, 1, v46);
        uint64_t v73 = v43;
        v43(v78, v41, v42);
        uint64_t v47 = v39;
        uint64_t v48 = v71;
        OUTLINED_FUNCTION_8_1(v78, v71);
        uint64_t v49 = __swift_storeEnumTagSinglePayload(v48, 0, 1, v46);
        uint64_t v74 = &v65;
        MEMORY[0x270FA5388](v49);
        *(&v65 - 6) = v76;
        *(_OWORD *)(&v65 - 5) = v77;
        *(&v65 - 3) = v45;
        *(&v65 - 2) = v47;
        *(&v65 - 1) = (uint64_t)&off_270667760;
        MEMORY[0x270FA5388](v50);
        OUTLINED_FUNCTION_23_38();
        uint64_t v51 = ObjectType;
        *(void *)(v52 - 64) = v41;
        *(void *)(v52 - 56) = v51;
        *(void *)(v52 - 48) = *((void *)&v77 + 1);
        *(void *)(v52 - 40) = v53;
        *(void *)(v52 - 32) = v47;
        *(void *)(v52 - 24) = v48;
        *(void *)(v52 - 16) = sub_2576862DC;
        *(void *)(v52 - 8) = v54;
        uint64_t v55 = v75;
        sub_257648980((uint64_t)sub_257686308, v56, v67, (uint64_t)&a11);
        sub_2574B92D8(v48, &qword_26A0012D0);
        sub_2574B92D8(v44, &qword_26A0012D0);
        uint64_t v75 = v55;
        if (v55) {
          break;
        }
        swift_release();
        v73(&a10, v41, v42);
        uint64_t v57 = *(void *)(v45 + 48);
        uint64_t v58 = *(void *)(a10 + 16);
        if (v57 < -v58 || v57 >= v58) {
          goto LABEL_19;
        }
        v57 += v58 & (v57 >> 63);
        if (v57 >= (unint64_t)v58)
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          v78[1] = 0;
          v78[2] = 0;
          v78[0] = v57;
          uint64_t v79 = -1;
          uint64_t v81 = 0;
          uint64_t v82 = 0;
          uint64_t v80 = v58;
          uint64_t v83 = -1;
          uint64_t v84 = 4;
          sub_25746BF88();
        }
        uint64_t v24 = v45;
        uint64_t v39 = v47;
        uint64_t v60 = *(void *)(a10 + 8 * v57 + 32);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        unint64_t v61 = __OFADD__(v76, v60);
        uint64_t v58 = v76 + v60;
        v76 += v60;
        if (v61) {
          goto LABEL_18;
        }
        uint64_t v40 = v72 + 1;
        uint64_t v33 = v66;
        if (v69 == v72 + 1) {
          goto LABEL_13;
        }
      }
      swift_unknownObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v62 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v62 + 16) = xmmword_2576ABB10;
      *(void *)(v62 + 32) = v39;
      *(void *)(v62 + 40) = &off_270667760;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_257480520();
    uint64_t v63 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CC0, v63, v64);
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257682350(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (**v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v33)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v36;
  void v37[3];
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  unsigned char __dst[176];
  unsigned char v45[176];
  uint64_t v46;

  uint64_t v8 = *(void *)(a2 + 136);
  if (v8)
  {
    uint64_t v13 = (void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v33 = *v13;
    (*v13)(v37, ObjectType, a5);
    uint64_t v46 = v37[0];
    uint64_t v14 = sub_257654DF0();
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(a6 + 48);
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)(v14 + 16))
    {
      uint64_t v16 = *(void *)(v14 + 8 * v15 + 32);
      swift_bridgeObjectRelease();
      uint64_t v17 = a3 * v16;
      if ((unsigned __int128)(a3 * (__int128)v16) >> 64 == (a3 * v16) >> 63)
      {
        unint64_t v18 = sub_2576121AC(ObjectType, a5);
        if ((unsigned __int128)(v17 * (__int128)v18) >> 64 == (v17 * v18) >> 63)
        {
          *(void *)(a2 + 136) = v8 + v17 * v18;
          uint64_t v19 = a1[1];
          uint64_t v20 = v19 == 0x10000;
          if (v19 == 0x10000) {
            uint64_t v21 = 163840;
          }
          else {
            uint64_t v21 = 294912;
          }
          uint64_t v22 = 3;
          if (v20) {
            uint64_t v22 = 1;
          }
          uint64_t v36 = v22;
          a1[1] = v21;
          if (*(_DWORD *)(a2 + 4) == 0x10000) {
            uint64_t v23 = 163840;
          }
          else {
            uint64_t v23 = 294912;
          }
          *(_DWORD *)(a2 + 4) = v23;
          v33(&v46, ObjectType, a5);
          if (!*(void *)(v46 + 16))
          {
LABEL_27:
            memset(v37, 0, sizeof(v37));
            uint64_t v38 = -1;
            uint64_t v40 = 0;
            uint64_t v41 = 0;
            uint64_t v39 = 0;
            uint64_t v42 = -1;
            uint64_t v43 = 4;
            sub_25746BF88();
          }
          uint64_t v24 = *(void *)(v46 + 32);
          swift_bridgeObjectRelease();
          sub_25758D3D4(v24, v36);
          v33(v37, ObjectType, a5);
          uint64_t v46 = v37[0];
          uint64_t v25 = sub_257654DF0();
          swift_bridgeObjectRelease();
          if (*(void *)(v25 + 16))
          {
            uint64_t v26 = *(void *)(v25 + 32);
            swift_bridgeObjectRelease();
            sub_25758D4F4(v26, v36);
            sub_25758D3D4(v24, v36);
            uint64_t v27 = swift_getObjectType();
            (*(void (**)(void *__return_ptr, uint64_t))(a8 + 16))(v37, v27);
            uint64_t v46 = v37[0];
            uint64_t v28 = sub_257654DF0();
            swift_bridgeObjectRelease();
            if (*(void *)(v28 + 16))
            {
              uint64_t v29 = *(void *)(v28 + 32);
              swift_bridgeObjectRelease();
              sub_25758D4F4(v29, v36);
              memcpy(__dst, a1, sizeof(__dst));
              memcpy(v45, (const void *)a2, sizeof(v45));
              sub_2576A8470();
              sub_2576A83D0();
              return sub_2576A6D40();
            }
            goto LABEL_26;
          }
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  sub_257480520();
  swift_allocError();
  *(void *)uint64_t v31 = 0xD00000000000002CLL;
  *(void *)(v31 + 8) = 0x80000002576D22A0;
  *(unsigned char *)(v31 + 16) = 1;
  return swift_willThrow();
}

#error "2576826F0: call analysis failed (funcsize=6)"

void sub_2576826FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v111 = v21;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_3_25();
  uint64_t v31 = v29 - v30;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_10_9();
  uint64_t v34 = v33;
  uint64_t v35 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_3_25();
  uint64_t v41 = v39 - v40;
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v93 - v43;
  uint64_t v45 = sub_2575CA350();
  uint64_t v46 = sub_2574BAF20(v45, v26);
  uint64_t v104 = v47;
  uint64_t v112 = v46;
  if (!v46)
  {
    sub_257480520();
    uint64_t v90 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CD0, v90, v91);
LABEL_15:
    OUTLINED_FUNCTION_7_1();
    return;
  }
  uint64_t v48 = *(void *)(v20 + 72);
  uint64_t v49 = *(void *)(v48 + 16);
  if (!v49)
  {
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  uint64_t v102 = v31;
  uint64_t v103 = v24;
  uint64_t v100 = type metadata accessor for NativeTensorStorage();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v98 = *(void *)(v104 + 16);
  uint64_t v99 = v104 + 16;
  uint64_t v97 = (void (**)(uint64_t, char *, uint64_t))(v37 + 16);
  uint64_t v101 = (void (**)(void))(v37 + 8);
  sub_2576A7810();
  uint64_t v108 = 0;
  uint64_t v109 = MEMORY[0x263F8EE78];
  v93[1] = v48;
  uint64_t v50 = (unsigned char *)(v48 + 40);
  uint64_t v95 = v44;
  uint64_t v96 = MEMORY[0x263F8EE60] + 8;
  uint64_t v51 = v35;
  uint64_t v52 = v34;
  uint64_t v53 = v111;
  uint64_t v94 = v41;
  while (1)
  {
    uint64_t v105 = v50;
    uint64_t v106 = v49;
    char v54 = *v50;
    a10 = *((void *)v50 - 1);
    LOBYTE(v114) = v54;
    sub_2576A7810();
    OUTLINED_FUNCTION_20_41();
    sub_25754DDC0(v55, v56, v57);
    uint64_t v59 = v58;
    uint64_t v111 = v53;
    uint64_t v107 = swift_getObjectType();
    a10 = *(void *)(v59 + 16);
    swift_retain();
    sub_2576A7810();
    uint64_t v60 = v41;
    uint64_t v61 = v104;
    OUTLINED_FUNCTION_11_10();
    v62();
    uint64_t v113 = v114;
    uint64_t v63 = (void *)sub_257654DF0();
    swift_bridgeObjectRelease();
    sub_25758A634(&a10, v63, 2, (uint64_t)v44);
    a10 = *(void *)(v59 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(&a10, v60);
    uint64_t v64 = *v97;
    (*v97)(v52, v44, v51);
    OUTLINED_FUNCTION_2_6(v52);
    uint64_t v65 = v51;
    uint64_t v66 = v52;
    uint64_t v67 = v102;
    v64(v102, (char *)v60, v51);
    uint64_t v68 = __swift_storeEnumTagSinglePayload(v67, 0, 1, v51);
    MEMORY[0x270FA5388](v68);
    uint64_t v69 = v108;
    v93[-6] = v108;
    v93[-5] = v59;
    uint64_t v70 = v103;
    v93[-4] = &off_270667760;
    v93[-3] = v70;
    v93[-2] = v112;
    v93[-1] = v61;
    MEMORY[0x270FA5388](v71);
    OUTLINED_FUNCTION_23_38();
    uint64_t v72 = v111;
    uint64_t v73 = v107;
    *(void *)(v74 - 64) = ObjectType;
    *(void *)(v74 - 56) = v73;
    *(void *)(v74 - 48) = v61;
    *(void *)(v74 - 40) = v75;
    *(void *)(v74 - 32) = v59;
    *(void *)(v74 - 24) = v67;
    *(void *)(v74 - 16) = sub_257686320;
    *(void *)(v74 - 8) = v76;
    sub_257648980((uint64_t)sub_257686308, v77, v96, v74);
    uint64_t v111 = v72;
    if (v72)
    {
      sub_2574B92D8(v67, &qword_26A0012D0);
      sub_2574B92D8(v66, &qword_26A0012D0);
      uint64_t v92 = *v101;
      OUTLINED_FUNCTION_16_49();
      v92();
      OUTLINED_FUNCTION_16_49();
      v92();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_release_n();
      goto LABEL_15;
    }
    sub_2574B92D8(v67, &qword_26A0012D0);
    sub_2574B92D8(v66, &qword_26A0012D0);
    uint64_t v78 = *v101;
    uint64_t v41 = v94;
    ((void (*)(uint64_t, uint64_t))*v101)(v94, v65);
    uint64_t v79 = v95;
    ((void (*)(char *, uint64_t))v78)(v95, v65);
    swift_release();
    uint64_t v80 = *(void *)(v70 + 64);
    a10 = *(void *)(v59 + 16);
    uint64_t v81 = TensorShape.subscript.getter(v80);
    BOOL v82 = __OFADD__(v69, v81);
    uint64_t v83 = v69 + v81;
    if (v82) {
      break;
    }
    uint64_t v51 = v65;
    uint64_t v52 = v66;
    uint64_t v44 = v79;
    swift_retain();
    uint64_t v84 = v109;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v108 = v83;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_257472BE4();
      uint64_t v84 = v88;
    }
    uint64_t v53 = v111;
    unint64_t v86 = *(void *)(v84 + 16);
    if (v86 >= *(void *)(v84 + 24) >> 1)
    {
      sub_257472BE4();
      uint64_t v84 = v89;
    }
    *(void *)(v84 + 16) = v86 + 1;
    uint64_t v109 = v84;
    uint64_t v87 = v84 + 16 * v86;
    *(void *)(v87 + 32) = v59;
    *(void *)(v87 + 40) = &off_270667760;
    swift_release();
    uint64_t v50 = v105 + 16;
    uint64_t v49 = v106 - 1;
    if (v106 == 1)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
  }
  __break(1u);
}

uint64_t sub_257682C7C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v34)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  void v36[3];
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  unsigned char __dst[176];
  unsigned char v44[176];
  uint64_t v45;

  uint64_t v8 = *(void *)(a1 + 136);
  if (v8)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v34 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
    uint64_t v35 = ObjectType;
    v34(v36, ObjectType, a5);
    uint64_t v45 = v36[0];
    uint64_t v14 = sub_257654DF0();
    swift_bridgeObjectRelease();
    unint64_t v15 = *(void *)(a6 + 64);
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)(v14 + 16))
    {
      uint64_t v16 = *(void *)(v14 + 8 * v15 + 32);
      swift_bridgeObjectRelease();
      uint64_t v17 = a3 * v16;
      if ((unsigned __int128)(a3 * (__int128)v16) >> 64 == (a3 * v16) >> 63)
      {
        uint64_t v18 = sub_2576121AC(v35, a5);
        if ((unsigned __int128)(v17 * (__int128)v18) >> 64 == (v17 * v18) >> 63)
        {
          *(void *)(a1 + 136) = v8 + v17 * v18;
          int v19 = *(_DWORD *)(a1 + 4);
          BOOL v20 = v19 == 0x10000;
          if (v19 == 0x10000) {
            int v21 = 163840;
          }
          else {
            int v21 = 294912;
          }
          if (v20) {
            uint64_t v22 = 1;
          }
          else {
            uint64_t v22 = 3;
          }
          *(_DWORD *)(a1 + 4) = v21;
          if (a2[1] == 0x10000) {
            int v23 = 163840;
          }
          else {
            int v23 = 294912;
          }
          a2[1] = v23;
          v34(&v45, v35, a5);
          if (!*(void *)(v45 + 16))
          {
LABEL_27:
            memset(v36, 0, sizeof(v36));
            uint64_t v37 = -1;
            uint64_t v39 = 0;
            uint64_t v40 = 0;
            uint64_t v38 = 0;
            uint64_t v41 = -1;
            uint64_t v42 = 4;
            sub_25746BF88();
          }
          uint64_t v24 = *(void *)(v45 + 32);
          swift_bridgeObjectRelease();
          sub_25758D3D4(v24, v22);
          uint64_t v25 = swift_getObjectType();
          (*(void (**)(void *__return_ptr, uint64_t))(a8 + 16))(v36, v25);
          uint64_t v45 = v36[0];
          uint64_t v26 = sub_257654DF0();
          swift_bridgeObjectRelease();
          if (*(void *)(v26 + 16))
          {
            uint64_t v27 = *(void *)(v26 + 32);
            swift_bridgeObjectRelease();
            sub_25758D4F4(v27, v22);
            sub_25758D3D4(v24, v22);
            v34(v36, v35, a5);
            uint64_t v45 = v36[0];
            uint64_t v28 = sub_257654DF0();
            swift_bridgeObjectRelease();
            if (*(void *)(v28 + 16))
            {
              uint64_t v29 = *(void *)(v28 + 32);
              swift_bridgeObjectRelease();
              sub_25758D4F4(v29, v22);
              memcpy(__dst, (const void *)a1, sizeof(__dst));
              memcpy(v44, a2, sizeof(v44));
              sub_2576A8470();
              sub_2576A83D0();
              return sub_2576A6D40();
            }
            goto LABEL_26;
          }
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  sub_257480520();
  swift_allocError();
  *(void *)uint64_t v31 = 0xD00000000000002BLL;
  *(void *)(v31 + 8) = 0x80000002576D22D0;
  *(unsigned char *)(v31 + 16) = 1;
  return swift_willThrow();
}

#error "257683010: call analysis failed (funcsize=6)"

uint64_t sub_25768301C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2575CA350();
  if (sub_2574BAF20(v4, a1))
  {
    type metadata accessor for NativeTensorStorage();
    swift_getObjectType();
    OUTLINED_FUNCTION_11_10();
    v5();
    swift_unknownObjectRetain();
    swift_retain();
    sub_25754F050();
    uint64_t v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v2 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB10;
    *(void *)(v2 + 32) = v9;
    *(void *)(v2 + 40) = &off_270667760;
    swift_unknownObjectRelease();
  }
  else
  {
    sub_257480520();
    uint64_t v6 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CE0, v6, v7);
  }
  return v2;
}

void sub_257683170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, unsigned __int8 a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  a22 = v23;
  a23 = v24;
  uint64_t v44 = v25;
  uint64_t v27 = v26;
  uint64_t v43 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v33 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v35 = v34;
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v42 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  OUTLINED_FUNCTION_38_3();
  v39();
  a12 = *(unsigned char *)(v27 + 48);
  OUTLINED_FUNCTION_38_25();
  uint64_t v40 = sub_2576122F0();
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v38, *MEMORY[0x263F8E1F8], v33);
  sub_2574D1794(v32, v30, &a13, v43, v44, &a12, v40, (uint64_t)v38);
  OUTLINED_FUNCTION_31_1();
  v41();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2576832A8(uint64_t a1)
{
  return sub_25768301C(a1);
}

uint64_t sub_2576832C0@<X0>(uint64_t a1@<X8>)
{
  switch(*(unsigned char *)(v1 + 80))
  {
    case 1:
    case 6:
      sub_257561D88();
      sub_25746BE6C();
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAD0];
      goto LABEL_6;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAD8];
      goto LABEL_6;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CB08];
      goto LABEL_6;
    case 5:
      uint64_t v8 = sub_2576A6BD0();
      uint64_t v6 = a1;
      uint64_t v7 = 1;
      goto LABEL_7;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAE0];
LABEL_6:
      uint64_t v4 = *v3;
      uint64_t v5 = sub_2576A6BD0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a1, v4, v5);
      uint64_t v6 = a1;
      uint64_t v7 = 0;
      uint64_t v8 = v5;
LABEL_7:
      return __swift_storeEnumTagSinglePayload(v6, v7, 1, v8);
  }
}

void sub_2576834B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v85)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v86)(void);
  void (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(void);
  uint64_t ObjectType;
  uint64_t v100;
  void (*v101)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v102)(void);
  void (*v103)(void);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(void);
  void (*v115)(void);
  void (*v116)(void);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void v120[2];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137[12];

  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  int v136 = v21;
  uint64_t v25 = v20;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v29 = OUTLINED_FUNCTION_24_9(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_6_2();
  char v127 = v30;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v31);
  OUTLINED_FUNCTION_7_11();
  char v128 = v32;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v33);
  char v129 = (char *)v120 - v34;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)v120 - v36;
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)v120 - v39;
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_10_9();
  char v126 = v42;
  uint64_t v43 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v135 = v44;
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_6_2();
  char v131 = v46;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_7_11();
  char v132 = (char *)v48;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v49);
  char v133 = (uint64_t)v120 - v50;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v51);
  OUTLINED_FUNCTION_28_35();
  MEMORY[0x270FA5388](v52);
  char v54 = (char *)v120 - v53;
  MEMORY[0x270FA5388](v55);
  OUTLINED_FUNCTION_10_9();
  char v130 = v56;
  uint64_t v57 = sub_2575CA350();
  uint64_t v58 = sub_2574BAF20(v57, v27);
  if (!v58) {
    goto LABEL_7;
  }
  uint64_t v60 = v58;
  uint64_t v125 = v59;
  uint64_t v61 = sub_2575CA350();
  if (!sub_2574BAF20(v61, v27))
  {
LABEL_6:
    swift_unknownObjectRelease();
LABEL_7:
    unint64_t v67 = sub_257561D88();
    unint64_t v69 = v68;
    sub_257480520();
    uint64_t v70 = OUTLINED_FUNCTION_33_0();
    *uint64_t v71 = v67;
    v71[1] = v69;
    OUTLINED_FUNCTION_5_70(v70, (uint64_t)v71);
    goto LABEL_8;
  }
  char v123 = v62;
  uint64_t v63 = sub_2575CA350();
  if (!sub_2574BAF20(v63, v27))
  {
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  uint64_t v65 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v66 = v64;
  char v122 = v60;
  switch(v65)
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    default:
      char v72 = sub_2576A8F60();
      swift_bridgeObjectRelease();
      if (v72)
      {
LABEL_11:
        char v121 = type metadata accessor for NativeTensorStorage();
        swift_getObjectType();
        OUTLINED_FUNCTION_11_10();
        v73();
        OUTLINED_FUNCTION_38_3();
        v74();
        uint64_t v76 = v136;
        uint64_t v77 = sub_25754ED08();
        int v136 = v76;
        uint64_t v60 = v122;
      }
      else
      {
        uint64_t v75 = swift_unknownObjectRetain();
        uint64_t v77 = sub_2576809E8(v75, v66);
      }
      int v78 = *(unsigned __int8 *)(v25 + 48);
      char v121 = v77;
      if (v78)
      {
        if (v78 != 2)
        {
          swift_release();
          v137[0] = sub_257561D88();
          v137[1] = v119;
          OUTLINED_FUNCTION_25_37();
          sub_25746BE6C();
        }
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v100 = v125;
        uint64_t v101 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v125 + 16);
        swift_retain();
        v101(v137, ObjectType, v100);
        OUTLINED_FUNCTION_3_7(v137, v133);
        char v130 = swift_getObjectType();
        OUTLINED_FUNCTION_11_10();
        v102();
        OUTLINED_FUNCTION_3_7(v137, (uint64_t)v132);
        v137[0] = *(void *)(v77 + 16);
        sub_2576A7810();
        OUTLINED_FUNCTION_3_7(v137, v131);
        uint64_t v103 = *(void (**)(void))(v135 + 16);
        uint64_t v104 = (uint64_t)v129;
        OUTLINED_FUNCTION_9_18();
        v103();
        OUTLINED_FUNCTION_18_10(v104);
        uint64_t v105 = (uint64_t)v128;
        OUTLINED_FUNCTION_9_18();
        v103();
        OUTLINED_FUNCTION_18_10(v105);
        uint64_t v106 = v127;
        OUTLINED_FUNCTION_9_18();
        v103();
        uint64_t v107 = OUTLINED_FUNCTION_18_10(v106);
        MEMORY[0x270FA5388](v107);
        OUTLINED_FUNCTION_37_23();
        uint64_t v109 = *(void *)(v108 - 256);
        *(void *)(v110 - 64) = v60;
        *(void *)(v110 - 56) = v109;
        uint64_t v111 = v121;
        *(void *)(v110 - 48) = v105;
        *(void *)(v110 - 40) = v111;
        *(void *)(v110 - 32) = &off_270667760;
        *(void *)(v110 - 24) = v106;
        *(void *)(v110 - 16) = sub_2576863B8;
        *(void *)(v110 - 8) = v25;
        uint64_t v112 = v136;
        sub_257648508((uint64_t)sub_2574C2548, v113, MEMORY[0x263F8EE60] + 8, (uint64_t)&a15);
        if (v112)
        {
          sub_2574B92D8(v106, &qword_26A0012D0);
          sub_2574B92D8(v105, &qword_26A0012D0);
          sub_2574B92D8(v104, &qword_26A0012D0);
          uint64_t v114 = *(void (**)(void))(v135 + 8);
          OUTLINED_FUNCTION_31_1();
          v114();
          OUTLINED_FUNCTION_31_1();
          v114();
          OUTLINED_FUNCTION_31_1();
          v114();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_19;
        }
        sub_2574B92D8(v106, &qword_26A0012D0);
        sub_2574B92D8(v105, &qword_26A0012D0);
        sub_2574B92D8(v104, &qword_26A0012D0);
        uint64_t v116 = *(void (**)(void))(v135 + 8);
        OUTLINED_FUNCTION_31_1();
        v116();
        OUTLINED_FUNCTION_31_1();
        v116();
        ((void (*)(uint64_t, uint64_t))v116)(v133, v43);
      }
      else
      {
        char v129 = *(char **)(v25 + 40);
        uint64_t v79 = swift_getObjectType();
        uint64_t v80 = v43;
        uint64_t v81 = v79;
        char v131 = v79;
        char v132 = v37;
        char v133 = v80;
        uint64_t v82 = v22;
        char v128 = v40;
        uint64_t v83 = (uint64_t)v54;
        uint64_t v84 = v123;
        uint64_t v85 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v123 + 16);
        swift_retain();
        v85(v137, v81, v84);
        OUTLINED_FUNCTION_3_7(v137, v130);
        swift_getObjectType();
        OUTLINED_FUNCTION_11_10();
        v86();
        OUTLINED_FUNCTION_3_7(v137, v83);
        v137[0] = *(void *)(v77 + 16);
        sub_2576A7810();
        OUTLINED_FUNCTION_3_7(v137, v22);
        uint64_t v87 = *(void (**)(void))(v135 + 16);
        uint64_t v88 = v126;
        OUTLINED_FUNCTION_9_18();
        v87();
        OUTLINED_FUNCTION_18_10(v88);
        uint64_t v89 = (uint64_t)v128;
        char v127 = v83;
        uint64_t v90 = (uint64_t)v132;
        OUTLINED_FUNCTION_9_18();
        v87();
        OUTLINED_FUNCTION_18_10(v89);
        v120[1] = v82;
        OUTLINED_FUNCTION_9_18();
        v87();
        uint64_t v91 = OUTLINED_FUNCTION_18_10(v90);
        MEMORY[0x270FA5388](v91);
        v120[-2] = v129;
        v120[-1] = v25;
        MEMORY[0x270FA5388](v92);
        OUTLINED_FUNCTION_23_38();
        uint64_t v93 = v125;
        *(void *)(v94 - 64) = v122;
        *(void *)(v94 - 56) = v93;
        *(void *)(v94 - 48) = v89;
        *(void *)(v94 - 40) = v77;
        *(void *)(v94 - 32) = &off_270667760;
        *(void *)(v94 - 24) = v90;
        *(void *)(v94 - 16) = sub_2576863D4;
        *(void *)(v94 - 8) = v95;
        uint64_t v96 = v136;
        sub_257648508((uint64_t)sub_2574C2548, v97, MEMORY[0x263F8EE60] + 8, (uint64_t)&a15);
        if (v96)
        {
          sub_2574B92D8(v90, &qword_26A0012D0);
          sub_2574B92D8(v89, &qword_26A0012D0);
          sub_2574B92D8(v88, &qword_26A0012D0);
          uint64_t v98 = *(void (**)(void))(v135 + 8);
          OUTLINED_FUNCTION_31_1();
          v98();
          OUTLINED_FUNCTION_31_1();
          v98();
          OUTLINED_FUNCTION_31_1();
          v98();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
LABEL_19:
          swift_unknownObjectRelease();
          swift_release_n();
          break;
        }
        sub_2574B92D8(v90, &qword_26A0012D0);
        sub_2574B92D8(v89, &qword_26A0012D0);
        sub_2574B92D8(v88, &qword_26A0012D0);
        uint64_t v115 = *(void (**)(void))(v135 + 8);
        OUTLINED_FUNCTION_31_1();
        v115();
        OUTLINED_FUNCTION_31_1();
        v115();
        OUTLINED_FUNCTION_31_1();
        v115();
      }
      uint64_t v117 = v121;
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v118 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v118 + 16) = xmmword_2576ABB10;
      *(void *)(v118 + 32) = v117;
      *(void *)(v118 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      break;
  }
LABEL_8:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257683F28(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003CA8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576832C0((uint64_t)v4);
  sub_2576A8470();
  sub_2576A83D0();
  sub_25758D614(a1);
  return sub_2574B92D8((uint64_t)v4, &qword_26A003CA8);
}

uint64_t sub_257684024(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003CA8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576832C0((uint64_t)v4);
  sub_2576A8470();
  sub_2576A83D0();
  sub_25758DA04(a1);
  return sub_2574B92D8((uint64_t)v4, &qword_26A003CA8);
}

#error "257684120: call analysis failed (funcsize=6)"

void sub_25768412C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v72)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v73)(void);
  void (*v74)(void);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(void);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t ObjectType;
  void (*v94)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v95;
  void (*v96)(void);
  void (*v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(void);
  void (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132[12];

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v125 = v21;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v27 = OUTLINED_FUNCTION_24_9(v26);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_6_2();
  char v123 = v28;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v29);
  char v124 = (char *)&v114 - v30;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v114 - v32;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_28_35();
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_7_11();
  char v121 = v36;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_10_9();
  char v122 = v38;
  uint64_t v39 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  char v131 = v40;
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_6_2();
  char v127 = v42;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v43);
  char v128 = (uint64_t)&v114 - v44;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_7_11();
  char v129 = v46;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v114 - v48;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_7_11();
  char v126 = v51;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_10_9();
  uint64_t v54 = v53;
  uint64_t v55 = sub_2575CA350();
  uint64_t v56 = sub_2574BAF20(v55, v25);
  if (v56)
  {
    uint64_t v58 = v56;
    char v130 = v57;
    uint64_t v59 = sub_2575CA350();
    uint64_t v60 = sub_2574BAF20(v59, v25);
    if (v60)
    {
      uint64_t v62 = v60;
      uint64_t v115 = v49;
      uint64_t v116 = v33;
      uint64_t v63 = v61;
      type metadata accessor for NativeTensorStorage();
      v132[0] = *(void *)(v20 + 80);
      sub_2576A7810();
      OUTLINED_FUNCTION_20_41();
      uint64_t v64 = v125;
      sub_25754DDC0(v65, v66, v67);
      uint64_t v69 = v68;
      int v70 = *(unsigned __int8 *)(v20 + 56);
      char v120 = v62;
      uint64_t v125 = v68;
      char v119 = v64;
      uint64_t v118 = v58;
      uint64_t v117 = v63;
      if (v70)
      {
        if (v70 != 2)
        {
          v132[0] = sub_2575E2AD0();
          v132[1] = v113;
          OUTLINED_FUNCTION_25_37();
          sub_25746BE6C();
        }
        uint64_t ObjectType = swift_getObjectType();
        char v126 = ObjectType;
        uint64_t v94 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v63 + 16);
        swift_retain();
        v94(v132, ObjectType, v63);
        OUTLINED_FUNCTION_3_7(v132, v129);
        uint64_t v95 = v58;
        swift_getObjectType();
        OUTLINED_FUNCTION_11_10();
        v96();
        OUTLINED_FUNCTION_3_7(v132, v128);
        v132[0] = *(void *)(v69 + 16);
        sub_2576A7810();
        OUTLINED_FUNCTION_3_7(v132, v127);
        uint64_t v97 = *(void (**)(void))(v131 + 16);
        uint64_t v98 = (uint64_t)v116;
        OUTLINED_FUNCTION_3_4();
        v97();
        OUTLINED_FUNCTION_2_6(v98);
        uint64_t v99 = (uint64_t)v124;
        OUTLINED_FUNCTION_3_4();
        v97();
        OUTLINED_FUNCTION_2_6(v99);
        uint64_t v100 = v123;
        OUTLINED_FUNCTION_3_4();
        v97();
        uint64_t v101 = __swift_storeEnumTagSinglePayload(v100, 0, 1, v39);
        MEMORY[0x270FA5388](v101);
        OUTLINED_FUNCTION_36_25();
        *(void *)(v102 - 64) = v95;
        *(void *)(v102 - 56) = v103;
        uint64_t v104 = v125;
        *(void *)(v102 - 48) = v99;
        *(void *)(v102 - 40) = v104;
        *(void *)(v102 - 32) = &off_270667760;
        *(void *)(v102 - 24) = v100;
        *(void *)(v102 - 16) = sub_257684A20;
        *(void *)(v102 - 8) = 0;
        OUTLINED_FUNCTION_35_24();
        uint64_t v105 = v119;
        sub_257648508(v106, v107, v108, (uint64_t)&a16);
        if (v105)
        {
          sub_2574B92D8(v100, &qword_26A0012D0);
          sub_2574B92D8(v99, &qword_26A0012D0);
          sub_2574B92D8(v98, &qword_26A0012D0);
          uint64_t v109 = *(void (**)(void))(v131 + 8);
          OUTLINED_FUNCTION_31_1();
          v109();
          OUTLINED_FUNCTION_31_1();
          v109();
          OUTLINED_FUNCTION_31_1();
          v109();
          swift_unknownObjectRelease();
          goto LABEL_11;
        }
        sub_2574B92D8(v100, &qword_26A0012D0);
        sub_2574B92D8(v99, &qword_26A0012D0);
        sub_2574B92D8(v98, &qword_26A0012D0);
        uint64_t v110 = *(void (**)(void))(v131 + 8);
        OUTLINED_FUNCTION_31_1();
        v110();
      }
      else
      {
        char v127 = *(void *)(v20 + 40);
        uint64_t v71 = swift_getObjectType();
        char v128 = v71;
        char v72 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v63 + 16);
        swift_retain();
        v72(v132, v71, v63);
        OUTLINED_FUNCTION_3_7(v132, v54);
        swift_getObjectType();
        OUTLINED_FUNCTION_11_10();
        v73();
        OUTLINED_FUNCTION_3_7(v132, v126);
        v132[0] = *(void *)(v69 + 16);
        sub_2576A7810();
        OUTLINED_FUNCTION_3_7(v132, (uint64_t)v115);
        uint64_t v74 = *(void (**)(void))(v131 + 16);
        uint64_t v75 = v122;
        char v129 = v54;
        OUTLINED_FUNCTION_3_4();
        v74();
        OUTLINED_FUNCTION_2_6(v75);
        uint64_t v76 = v121;
        OUTLINED_FUNCTION_3_4();
        v74();
        __swift_storeEnumTagSinglePayload(v76, 0, 1, v39);
        OUTLINED_FUNCTION_3_4();
        v74();
        uint64_t v77 = __swift_storeEnumTagSinglePayload(v69, 0, 1, v39);
        MEMORY[0x270FA5388](v77);
        *(&v114 - 2) = v127;
        MEMORY[0x270FA5388](v78);
        OUTLINED_FUNCTION_36_25();
        *(void *)(v79 - 64) = v58;
        *(void *)(v79 - 56) = v80;
        uint64_t v81 = v125;
        *(void *)(v79 - 48) = v76;
        *(void *)(v79 - 40) = v81;
        *(void *)(v79 - 32) = &off_270667760;
        *(void *)(v79 - 24) = v69;
        *(void *)(v79 - 16) = sub_2576863F0;
        *(void *)(v79 - 8) = v82;
        OUTLINED_FUNCTION_35_24();
        uint64_t v83 = v119;
        sub_257648508(v84, v85, v86, (uint64_t)&a16);
        if (v83)
        {
          sub_2574B92D8(v69, &qword_26A0012D0);
          sub_2574B92D8(v76, &qword_26A0012D0);
          sub_2574B92D8(v75, &qword_26A0012D0);
          uint64_t v87 = *(void (**)(void))(v131 + 8);
          OUTLINED_FUNCTION_31_1();
          v87();
          OUTLINED_FUNCTION_31_1();
          v87();
          OUTLINED_FUNCTION_31_1();
          v87();
          swift_unknownObjectRelease();
LABEL_11:
          swift_unknownObjectRelease();
          swift_release_n();
          goto LABEL_12;
        }
        sub_2574B92D8(v69, &qword_26A0012D0);
        sub_2574B92D8(v76, &qword_26A0012D0);
        sub_2574B92D8(v75, &qword_26A0012D0);
        uint64_t v110 = *(void (**)(void))(v131 + 8);
        OUTLINED_FUNCTION_31_1();
        v110();
      }
      OUTLINED_FUNCTION_31_1();
      v110();
      OUTLINED_FUNCTION_31_1();
      v110();
      uint64_t v111 = v125;
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v112 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v112 + 16) = xmmword_2576ABB10;
      *(void *)(v112 + 32) = v111;
      *(void *)(v112 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_12;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v88 = sub_2575E2AD0();
  uint64_t v90 = v89;
  sub_257480520();
  uint64_t v91 = OUTLINED_FUNCTION_33_0();
  *uint64_t v92 = v88;
  v92[1] = v90;
  OUTLINED_FUNCTION_5_70(v91, (uint64_t)v92);
LABEL_12:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2576849A4()
{
  return sub_2576A6DF0();
}

uint64_t sub_257684A20()
{
  return sub_2576A6E10();
}

#error "257684A98: call analysis failed (funcsize=6)"

uint64_t sub_257684AA4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_2575CA350();
  if (sub_2574BAF20(v5, a1))
  {
    type metadata accessor for NativeTensorStorage();
    swift_unknownObjectRetain();
    swift_retain();
    sub_2576A7810();
    sub_25754F1DC();
    if (!v2)
    {
      uint64_t v9 = v8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v3 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v3 + 16) = xmmword_2576ABB10;
      *(void *)(v3 + 32) = v9;
      *(void *)(v3 + 40) = &off_270667760;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    sub_257480520();
    uint64_t v6 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1CF0, v6, v7);
  }
  return v3;
}

uint64_t sub_257684BF8(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  OUTLINED_FUNCTION_11_10();
  v4();
  OUTLINED_FUNCTION_38_3();
  v5();
  sub_25768FEC4();
  uint64_t v7 = v6;
  sub_2576A7810();
  sub_257684D0C(a1, a2, v10, v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_257684D0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  type metadata accessor for SliceOperation();
  uint64_t v27 = sub_257654DF0();
  uint64_t v8 = *(void *)(v27 + 16);
  if (v8)
  {
    uint64_t v26 = *(void *)(a5 + 16);
    if (v26)
    {
      uint64_t v24 = a2;
      uint64_t v9 = *(void *)(v27 + 32);
      sub_2576A7810();
      uint64_t v10 = 0;
      uint64_t v11 = a5;
      uint64_t v12 = 0;
      uint64_t v13 = (uint64_t *)(v11 + 48);
      uint64_t v14 = MEMORY[0x263F8EE78];
      while (1)
      {
        uint64_t v15 = v9 * *v13;
        if ((unsigned __int128)(v9 * (__int128)*v13) >> 64 != v15 >> 63) {
          break;
        }
        uint64_t v16 = *(v13 - 2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257471E14(0, *(void *)(v14 + 16) + 1, 1, v14);
          uint64_t v14 = v21;
        }
        unint64_t v18 = *(void *)(v14 + 16);
        unint64_t v17 = *(void *)(v14 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_257471E14(v17 > 1, v18 + 1, 1, v14);
          uint64_t v14 = v22;
        }
        *(void *)(v14 + 16) = v18 + 1;
        *(void *)(v14 + 8 * v18 + 32) = v15;
        uint64_t v19 = v9 * v16;
        if ((unsigned __int128)(v9 * (__int128)v16) >> 64 != (v9 * v16) >> 63) {
          goto LABEL_25;
        }
        BOOL v20 = __OFADD__(v12, v19);
        v12 += v19;
        if (v20) {
          goto LABEL_26;
        }
        if (v8 - 1 != v10)
        {
          if ((unint64_t)(v10 + 1) >= *(void *)(v27 + 16)) {
            goto LABEL_27;
          }
          v13 += 3;
          uint64_t v9 = *(void *)(v27 + 40 + 8 * v10++);
          if (v26 != v10) {
            continue;
          }
        }
        swift_bridgeObjectRelease();
        a2 = v24;
        goto LABEL_17;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  uint64_t v12 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  if ((a4 - 1) > 0xAu) {
    uint64_t v23 = 1;
  }
  else {
    uint64_t v23 = qword_2576C1E58[(char)(a4 - 1)];
  }
  if ((unsigned __int128)(v12 * (__int128)v23) >> 64 != (v12 * v23) >> 63)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!a1 || !__OFSUB__(a2 - a1, v12 * v23))
  {
    sub_257684F8C();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_29:
  __break(1u);
}

void sub_257684F8C()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  uint64_t v65 = v3;
  uint64_t v5 = v4;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_3_25();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - v13;
  unsigned int v15 = *(unsigned __int8 *)(v2 + 8);
  if (v15 > 0xC || ((1 << v15) & 0x1777) == 0)
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *(_OWORD *)uint64_t v29 = xmmword_2576C1D00;
    *(unsigned char *)(v29 + 16) = 3;
    swift_willThrow();
LABEL_10:
    OUTLINED_FUNCTION_31_5();
    OUTLINED_FUNCTION_7_1();
    return;
  }
  uint64_t v37 = v12;
  uint64_t v38 = v11;
  uint64_t v39 = v0;
  unint64_t v17 = *(void **)v2;
  OUTLINED_FUNCTION_38_25();
  sub_2576A8550();
  uint64_t v18 = sub_2576A7810();
  uint64_t v19 = sub_257694DB4(v18);
  swift_bridgeObjectRelease();
  *(void *)&long long v40 = v19;
  OUTLINED_FUNCTION_3_7((uint64_t *)&v40, (uint64_t)v14);
  LOBYTE(v40) = v15;
  sub_2576A7810();
  uint64_t v20 = OUTLINED_FUNCTION_38_25();
  sub_25758D100(v20, (uint64_t)v14, v21, v5, v22);
  sub_2574D1114((uint64_t)&v45, (uint64_t)v46);
  if (sub_257530834((uint64_t)v46) != 1)
  {
    memcpy(v47, v46, sizeof(v47));
    if (v17[2]) {
      sub_2576A7810();
    }
    else {
      unint64_t v17 = &unk_2706603D8;
    }
    *(void *)&long long v40 = v17;
    sub_25758A634((uint64_t *)&v40, 0, 3, v9);
    int v36 = sub_2576A6DB0();
    sub_2576A6DA0();
    long long v34 = v41;
    long long v35 = v40;
    long long v33 = v42;
    uint64_t v23 = v43;
    uint64_t v24 = v44;
    sub_2576A6DC0();
    long long v31 = v41;
    long long v32 = v40;
    long long v30 = v42;
    uint64_t v25 = v43;
    uint64_t v26 = v44;
    LOBYTE(v40) = v15;
    int v27 = sub_25758B4C0();
    LOBYTE(v40) = v15;
    int v28 = sub_25758B4C0();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v9, v38);
    int v48 = 0;
    int v49 = v36;
    long long v50 = v35;
    long long v51 = v34;
    long long v52 = v33;
    uint64_t v53 = v23;
    uint64_t v54 = v24;
    long long v55 = v32;
    long long v56 = v31;
    long long v57 = v30;
    uint64_t v58 = v25;
    uint64_t v59 = v26;
    uint64_t v60 = v65;
    int v61 = v27;
    uint64_t v62 = 0;
    int v63 = v28;
    uint64_t v64 = 1065353216;
    sub_2576A8470();
    OUTLINED_FUNCTION_20_41();
    sub_2576A83D0();
    sub_2576A6D40();
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_257685298(uint64_t a1)
{
  return sub_257684AA4(a1);
}

void sub_2576852B0()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v4 = v1;
  uint64_t v5 = v0;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v9 = OUTLINED_FUNCTION_24_9(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = OUTLINED_FUNCTION_27_32();
  OUTLINED_FUNCTION_0_8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_6_2();
  uint64_t v53 = v13;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_240_0();
  uint64_t v15 = sub_2575CA350();
  uint64_t v16 = sub_2574BAF20(v15, v7);
  if (!v16) {
    goto LABEL_6;
  }
  uint64_t v18 = v16;
  uint64_t v19 = v17;
  uint64_t v20 = sub_2575CA350();
  uint64_t v21 = sub_2574BAF20(v20, v7);
  if (!v21)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257480520();
    uint64_t v43 = OUTLINED_FUNCTION_33_0();
    *uint64_t v44 = 0xD000000000000013;
    v44[1] = 0x80000002576CBE80;
    OUTLINED_FUNCTION_5_70(v43, (uint64_t)v44);
    goto LABEL_7;
  }
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(v0 + 48);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v49 = v3;
  uint64_t v26 = v24;
  uint64_t v27 = v11;
  uint64_t v28 = v4;
  uint64_t v29 = v21;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_2576A7810();
  uint64_t v52 = v29;
  uint64_t v50 = sub_257680534(0, v25, v23, v19, v26, v30);
  uint64_t v55 = v2;
  uint64_t v31 = v27;
  type metadata accessor for NativeTensorStorage();
  uint64_t v57 = *(void *)(v5 + 72);
  char v56 = *(unsigned char *)(v5 + 80);
  sub_2576A7810();
  sub_25754DDC0(&v57, (uint64_t)&v56, 0);
  uint64_t v33 = v32;
  uint64_t v48 = v28;
  uint64_t v57 = *(void *)(v32 + 16);
  sub_2576A7810();
  OUTLINED_FUNCTION_3_7(&v57, v55);
  swift_getObjectType();
  OUTLINED_FUNCTION_11_10();
  v34();
  uint64_t v35 = v53;
  OUTLINED_FUNCTION_3_7(&v57, v53);
  uint64_t v51 = v31;
  uint64_t v36 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v49, v55, v54);
  uint64_t v37 = __swift_storeEnumTagSinglePayload(v49, 0, 1, v54);
  v47[1] = v47;
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_23_38();
  *(void *)(v38 - 64) = v18;
  *(void *)(v38 - 56) = v19;
  uint64_t v39 = v36;
  uint64_t v40 = v33;
  *(void *)(v38 - 48) = v35;
  *(void *)(v38 - 40) = v26;
  *(void *)(v38 - 32) = v50;
  *(void *)(v38 - 24) = v5;
  *(void *)(v38 - 16) = 1;
  uint64_t v41 = v48;
  sub_257588F28(v39, (void (*)(unsigned char *))sub_25768640C);
  if (v41)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_2574B92D8(v39, &qword_26A0012D0);
    long long v42 = *(void (**)(void))(v51 + 8);
    OUTLINED_FUNCTION_16_49();
    v42();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_16_49();
    v42();
  }
  else
  {
    sub_2574B92D8(v39, &qword_26A0012D0);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v45 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v45 + 16) = xmmword_2576ABB10;
    *(void *)(v45 + 32) = v40;
    *(void *)(v45 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v46 = *(void (**)(void))(v51 + 8);
    OUTLINED_FUNCTION_16_49();
    v46();
    OUTLINED_FUNCTION_16_49();
    v46();
  }
LABEL_7:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25768566C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  uint64_t v21 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v16 = sub_2576A6DD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a3, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  uint64_t v23 = a1;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = v19;
  sub_257648508((uint64_t)sub_257686434, (uint64_t)v22, MEMORY[0x263F8EE60] + 8, v20);
  return sub_2574B92D8((uint64_t)v15, &qword_26A0012D0);
}

uint64_t sub_2576857DC(uint64_t a1, uint64_t a2, size_t a3, uint64_t a4)
{
  uint64_t v8 = sub_2576A69C0();
  __n128 v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (_DWORD *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v11 = 0;
  (*(void (**)(_DWORD *, void, __n128))(v12 + 104))(v11, *MEMORY[0x263F8C9E0], v9);
  sub_2576A7810();
  sub_2576A7810();
  sub_257532E4C(a3, a4);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 + 16);
  if (v15)
  {
    uint64_t v23 = a1;
    uint64_t v24 = a2;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_2574E79F4();
    uint64_t v16 = 0;
    uint64_t v17 = v25;
    unint64_t v18 = *(void *)(v25 + 16);
    do
    {
      long long v19 = *(_OWORD *)(v14 + 16 * v16 + 32);
      uint64_t v25 = v17;
      if (v18 >= *(void *)(v17 + 24) >> 1)
      {
        long long v22 = v19;
        sub_2574E79F4();
        long long v19 = v22;
        uint64_t v17 = v25;
      }
      ++v16;
      *(void *)(v17 + 16) = v18 + 1;
      *(_OWORD *)(v17 + 16 * v18++ + 32) = v19;
    }
    while (v15 != v16);
  }
  swift_bridgeObjectRelease();
  sub_2576A6A30();
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6A20())
  {
    sub_2576A69B0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v21 = 0xD000000000000013;
    *(void *)(v21 + 8) = 0x80000002576CBE80;
    *(unsigned char *)(v21 + 16) = 4;
    return swift_willThrow();
  }
}

void sub_257685A84()
{
}

void sub_257685A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v24;
  a20 = v25;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v29 = OUTLINED_FUNCTION_24_9(v28);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_28_35();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_240_0();
  uint64_t v57 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v58 = v20;
  uint64_t v59 = (uint64_t)&v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_2575CA350();
  if (sub_2574BAF20(v35, v27))
  {
    type metadata accessor for NativeTensorStorage();
    swift_getObjectType();
    OUTLINED_FUNCTION_34_28();
    uint64_t v55 = v36;
    OUTLINED_FUNCTION_11_10();
    v37();
    OUTLINED_FUNCTION_38_25();
    OUTLINED_FUNCTION_38_3();
    v38();
    OUTLINED_FUNCTION_20_41();
    sub_25754DDC0(v39, v40, v41);
    uint64_t v43 = v42;
    uint64_t v54 = v21;
    a10 = *(void *)(v42 + 16);
    sub_2576A7810();
    sub_25758A634(&a10, 0, 1, v59);
    uint64_t v56 = v32;
    uint64_t v44 = *(void (**)(void))(v32 + 16);
    uint64_t v45 = v57;
    OUTLINED_FUNCTION_3_4();
    v44();
    __swift_storeEnumTagSinglePayload(v22, 0, 1, v45);
    OUTLINED_FUNCTION_3_4();
    v44();
    uint64_t v46 = OUTLINED_FUNCTION_2_6(v23);
    MEMORY[0x270FA5388](v46);
    *(&v53 - 6) = v43;
    *(&v53 - 5) = (uint64_t)&off_270667760;
    *(&v53 - 4) = v23;
    *(&v53 - 3) = (uint64_t)sub_257686458;
    *(&v53 - 2) = v58;
    swift_retain();
    uint64_t v47 = v54;
    sub_257648508((uint64_t)sub_257480BA4, (uint64_t)(&v53 - 8), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v47)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      sub_2574B92D8(v23, &qword_26A0012D0);
      sub_2574B92D8(v22, &qword_26A0012D0);
    }
    else
    {
      swift_release();
      sub_2574B92D8(v23, &qword_26A0012D0);
      sub_2574B92D8(v22, &qword_26A0012D0);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v52 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v52 + 16) = xmmword_2576ABB10;
      *(void *)(v52 + 32) = v43;
      *(void *)(v52 + 40) = &off_270667760;
      swift_unknownObjectRelease();
    }
    uint64_t v48 = OUTLINED_FUNCTION_32_27();
    v49(v48);
  }
  else
  {
    sub_257480520();
    uint64_t v50 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576C1D10, v50, v51);
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257685DD4()
{
  return sub_2576A6AA0();
}

#error "257685E64: call analysis failed (funcsize=6)"

uint64_t sub_257685E70(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A48, (void (*)(uint64_t))type metadata accessor for BandPartOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257685EC8(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A58, (void (*)(uint64_t))type metadata accessor for SliceGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257685F20(uint64_t a1)
{
  uint64_t result = sub_257686238((unint64_t *)&qword_26A002300, (void (*)(uint64_t))type metadata accessor for SliceOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257685F78(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A78, (void (*)(uint64_t))type metadata accessor for GatherOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257685FD0(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A70, (void (*)(uint64_t))type metadata accessor for ScatterOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257686028(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A80, (void (*)(uint64_t))type metadata accessor for CastOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257686080(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A60, (void (*)(uint64_t))type metadata accessor for SplitOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576860D8(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A88, (void (*)(uint64_t))type metadata accessor for ConcatOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257686130(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A90, (void (*)(uint64_t))type metadata accessor for BroadcastOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257686188(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003A98, (void (*)(uint64_t))type metadata accessor for ReshapeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576861E0(uint64_t a1)
{
  uint64_t result = sub_257686238(&qword_26A003430, (void (*)(uint64_t))type metadata accessor for TransposeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257686238(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_257686280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257680DB0(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_2576862A0()
{
  return sub_257680F10();
}

uint64_t sub_2576862BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_257681AC4(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_2576862DC(uint64_t a1, uint64_t a2)
{
  return sub_25768634C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_257682350);
}

uint64_t sub_257686308@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257686378(a1, a2);
}

uint64_t sub_257686320(uint64_t a1, uint64_t a2)
{
  return sub_25768634C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_257682C7C);
}

uint64_t sub_25768634C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_257686378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257648F74(a1, v2[8], v2[9], v2[2], v2[3], MEMORY[0x263F8EE60] + 8, a2, v2[4], v2[5]);
}

uint64_t sub_2576863B8(void *a1)
{
  return sub_257684024(a1);
}

uint64_t sub_2576863D4(void *a1)
{
  return sub_257683F28(a1);
}

uint64_t sub_2576863F0()
{
  return sub_2576849A4();
}

uint64_t sub_25768640C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25768566C(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

uint64_t sub_257686434(uint64_t a1)
{
  return sub_2576857DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_257686458()
{
  return sub_257685DD4();
}

uint64_t OUTLINED_FUNCTION_5_70(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = 2;
  return swift_willThrow();
}

double OUTLINED_FUNCTION_17_49@<D0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 160) = v1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(void *)(v2 - 152) = (a1 - 32) | 0x8000000000000000;
  double result = 0.0;
  *(_OWORD *)(v2 - 144) = 0u;
  *(_OWORD *)(v2 - 128) = 0u;
  *(_OWORD *)(v2 - 112) = 0u;
  *(_DWORD *)(v2 - 96) = 0;
  *(unsigned char *)(v2 - 92) = 7;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_32()
{
  return sub_2576A6DD0();
}

uint64_t OUTLINED_FUNCTION_32_27()
{
  return *(void *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_38_25()
{
  return v0;
}

uint64_t static CodingUserInfoKey.optimizerSerializationContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CE0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A8A60();
  uint64_t v5 = sub_2576A8A80();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t (*sub_2576866A4(uint64_t a1, uint64_t a2, uint64_t a3))(unsigned char *, void)
{
  uint64_t result = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(a3 + 32))(v5);
  if (__OFADD__(*v4, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v4;
    return (uint64_t (*)(unsigned char *, void))result(v5, 0);
  }
  return result;
}

uint64_t sub_257686714(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  swift_retain();
  int v11 = 0;
  memset(v10, 0, sizeof(v10));
  char v2 = *(unsigned char *)(*(void *)(v1 + 16) + 160);
  sub_25747B47C((uint64_t)v10, (uint64_t)v9);
  uint64_t v7 = MEMORY[0x263F8EE78];
  char v6 = v2;
  sub_25747B47C((uint64_t)v9, (uint64_t)v5);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v9);
  uint64_t v3 = v8;
  sub_25747B4E4((uint64_t)v10);
  *(void *)&v10[0] = v1;
  Tensor.squared()();
  v5[0] = v9[0];
  Tensor.sum()();
  swift_release();
  v9[0] = *(void *)&v10[0];
  v5[0] = v3;
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_257686830(uint64_t a1, uint64_t a2, uint64_t a3, void (**a4)(char *, uint64_t, uint64_t), uint64_t a5, uint64_t *a6, uint64_t a7, void *a8)
{
  void (*v37)(uint64_t *__return_ptr, uint64_t, void *);
  void (*v38)(void);
  int v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(void *__return_ptr, uint64_t, void *, void *, uint64_t, void *);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void (**v65)(char *, uint64_t, uint64_t);
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unsigned __int8 v76;
  void v77[7];
  void v78[7];
  void v79[6];
  int v80;
  uint64_t v81;

  uint64_t v68 = a5;
  uint64_t v69 = a2;
  uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))a4;
  int v70 = a3;
  uint64_t v81 = *MEMORY[0x263EF8340];
  sub_2576A8EF0();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v59 - v19;
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    uint64_t v59 = v21;
    uint64_t v60 = v20;
    int v61 = result;
    uint64_t v62 = a6;
    int v63 = a1;
    uint64_t v64 = v8;
    unint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v67((char *)&v59 - v19, v70, a7);
    uint64_t v23 = a7;
    uint64_t v24 = (float (*)(uint64_t))a8[6];
    swift_retain();
    uint64_t v25 = OUTLINED_FUNCTION_4_78();
    float v26 = v24(v25);
    uint64_t v66 = *(void (**)(char *, uint64_t))(v15 + 8);
    v66(v22, a7);
    if (v26 == 1.0)
    {
      uint64_t v27 = v69;
    }
    else
    {
      OUTLINED_FUNCTION_2_78();
      v28();
      uint64_t v29 = OUTLINED_FUNCTION_4_78();
      float v30 = v24(v29);
      OUTLINED_FUNCTION_5_71();
      v31();
      uint64_t v80 = 0;
      memset(v79, 0, sizeof(v79));
      uint64_t v32 = v69;
      char v33 = *(unsigned char *)(*(void *)(v69 + 16) + 160);
      sub_25747B47C((uint64_t)v79, (uint64_t)v78);
      uint64_t v73 = MEMORY[0x263F8EE78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
      *(float *)(inited + 32) = v30;
      LOBYTE(v72) = v33;
      sub_25747B47C((uint64_t)v78, (uint64_t)v77);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v78);
      uint64_t v35 = v74;
      sub_25747B4E4((uint64_t)v79);
      v78[0] = v32;
      v77[0] = v35;
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v27 = v79[0];
    }
    OUTLINED_FUNCTION_2_78();
    v36();
    uint64_t v37 = (void (*)(uint64_t *__return_ptr, uint64_t, void *))a8[5];
    swift_retain();
    v37(&v74, v23, a8);
    uint64_t v69 = v23;
    OUTLINED_FUNCTION_5_71();
    v38();
    if (v76 == 255)
    {
      swift_release();
      v79[0] = v27;
    }
    else
    {
      uint64_t v39 = v74;
      uint64_t v40 = v75 | ((unint64_t)v76 << 32);
      if (v76)
      {
        uint64_t v41 = *v65;
        OUTLINED_FUNCTION_3_71();
        if (HIDWORD(v40) == 1)
        {
          uint64_t v42 = *(unsigned char *)(*(void *)(v27 + 16) + 160);
          sub_25747B47C((uint64_t)v79, (uint64_t)v78);
          char v72 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v43 = swift_initStackObject();
          *(_OWORD *)(v43 + 16) = xmmword_2576ABB10;
          *(_DWORD *)(v43 + 32) = v39;
          uint64_t v71 = v42;
          sub_25747B47C((uint64_t)v78, (uint64_t)v77);
          swift_retain();
          OUTLINED_FUNCTION_1_90();
          sub_25747B4E4((uint64_t)v78);
          uint64_t v44 = v73;
          sub_25747B4E4((uint64_t)v79);
          v78[0] = v27;
          Tensor.squared()();
          v77[0] = v79[0];
          Tensor.sum()();
          swift_release();
          v77[0] = v78[0];
          sqrt(_:)();
          swift_release();
          uint64_t v45 = v79[0];
          v78[0] = v27;
          v79[0] = v44;
          v77[0] = v45;
          char v72 = v44;
          max(_:_:)();
          char v72 = v73;
          static Tensor./ infix(_:_:)();
          swift_release();
          uint64_t v73 = v77[0];
          static Tensor.* infix(_:_:)();
          swift_release_n();
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v46 = *(unsigned char *)(*(void *)(v27 + 16) + 160);
          sub_25747B47C((uint64_t)v79, (uint64_t)v78);
          char v72 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v47 = swift_initStackObject();
          *(_OWORD *)(v47 + 16) = xmmword_2576ABB10;
          *(_DWORD *)(v47 + 32) = v40;
          uint64_t v71 = v46;
          sub_25747B47C((uint64_t)v78, (uint64_t)v77);
          swift_retain();
          OUTLINED_FUNCTION_1_90();
          sub_25747B4E4((uint64_t)v78);
          uint64_t v48 = v73;
          sub_25747B4E4((uint64_t)v79);
          v79[0] = v27;
          v78[0] = v48;
          static Tensor.* infix(_:_:)();
          v79[0] = v41;
          LOBYTE(v73) = *(unsigned char *)(*(void *)(v27 + 16) + 160);
          uint64_t v49 = *MEMORY[0x263F8E1F8];
          unint64_t v67 = v41;
          uint64_t v50 = v59;
          uint64_t v51 = v60;
          uint64_t v52 = v61;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 104))(v59, v49, v61);
          Tensor.cast(to:roundingRule:)();
          (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
          uint64_t v73 = v78[0];
          static Tensor./ infix(_:_:)();
          swift_release();
          swift_release();
          swift_release_n();
        }
        swift_release();
        swift_release();
      }
      else
      {
        v78[0] = v27;
        Tensor.clamped(to:)((uint64_t)v79, *(float *)&v74, *((float *)&v74 + 1));
        swift_release_n();
      }
    }
    uint64_t v53 = *(void *)(*(void *)v63 + 32);
    if ((~v53 & 0xF000000000000007) != 0 && v53 < 0)
    {
      v78[0] = v53 & 0x7FFFFFFFFFFFFFFFLL;
      v77[0] = v79[0];
      uint64_t v54 = (void (*)(void *__return_ptr, uint64_t, void *, void *, uint64_t, void *))a8[8];
      swift_retain();
      sub_257486C70(v53);
      v54(v79, v68, v78, v77, v69, a8);
      swift_release();
      uint64_t v55 = v79[0];
      swift_retain();
      uint64_t v56 = v62;
      sub_2574712E8();
      uint64_t v57 = *(void *)(*v56 + 16);
      sub_257471868();
      uint64_t v58 = *v56;
      *(void *)(v58 + 16) = v57 + 1;
      *(void *)(v58 + 8 * v57 + 32) = v55;
      *uint64_t v56 = v58;
      v79[0] = v55;
      swift_retain();
      Parameter.wrappedValue.setter(v79);
      sub_257486C8C(v53);
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t result = sub_2576A8B60();
      __break(1u);
    }
  }
  return result;
}

uint64_t OptimizerSerializationContext.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OptimizerSerializationContext.init(_:)(a1);
  return v2;
}

uint64_t OptimizerSerializationContext.init(_:)(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t OptimizerSerializationContext.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t OptimizerSerializationContext.__deallocating_deinit()
{
  OptimizerSerializationContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of Optimizer.learningRate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Optimizer.learningRate.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Optimizer.learningRate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Optimizer.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t type metadata accessor for OptimizerSerializationContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for OptimizerSerializationContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OptimizerSerializationContext);
}

uint64_t dispatch thunk of OptimizerSerializationContext.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void OUTLINED_FUNCTION_1_90()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

double OUTLINED_FUNCTION_3_71()
{
  *(_DWORD *)(v0 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_78()
{
  return v0;
}

uint64_t sub_257687270()
{
  return sub_2576872B8(&qword_26A000950);
}

uint64_t sub_257687294()
{
  return sub_2576872B8(&qword_26A000958);
}

uint64_t sub_2576872B8(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v1 = sub_25768731C();
  swift_release();
  return v1;
}

uint64_t sub_257687310(uint64_t a1)
{
  return sub_2576873D4(a1, &qword_26A006230);
}

uint64_t sub_25768731C()
{
  swift_retain();
  swift_retain();
  sub_257595364();
  uint64_t v1 = *(unsigned int *)(v0 + 24);
  *(_DWORD *)(v0 + 24) = v1 + 1;
  sub_257595388();
  swift_release();
  swift_release();
  return v1;
}

uint64_t type metadata accessor for VariableIdentityGenerator()
{
  return self;
}

uint64_t type metadata accessor for LayerIdentityGenerator()
{
  return self;
}

uint64_t sub_2576873C8(uint64_t a1)
{
  return sub_2576873D4(a1, qword_26A006238);
}

uint64_t sub_2576873D4(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0062C0);
  swift_allocObject();
  uint64_t result = sub_257687508(0);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for TensorOperationIdentityGenerator()
{
  return self;
}

uint64_t type metadata accessor for TensorRepresentationIdentityGenerator()
{
  return self;
}

uint64_t sub_257687464()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_257687508(int a1)
{
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_2575952D0();
  *(_DWORD *)(v1 + 24) = a1;
  return v1;
}

uint64_t *sub_25768755C()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  return v0;
}

uint64_t sub_2576875DC()
{
  sub_25768755C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SequentialIDGenerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25768764C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 12;
  switch(result)
  {
    case 0:
      break;
    case 2:
      char v2 = 8;
      break;
    case 3:
      char v2 = 10;
      break;
    case 4:
      char v2 = 11;
      break;
    case 5:
      char v2 = 0;
      break;
    case 6:
      char v2 = 1;
      break;
    case 7:
      char v2 = 2;
      break;
    case 8:
      char v2 = 3;
      break;
    case 9:
      char v2 = 4;
      break;
    case 10:
      char v2 = 5;
      break;
    case 11:
      char v2 = 6;
      break;
    case 12:
      char v2 = 7;
      break;
    default:
      sub_2576A8730();
      OUTLINED_FUNCTION_0_77();
      type metadata accessor for SNNDataType(0);
      sub_2576A8A30();
      OUTLINED_FUNCTION_1_91();
      OUTLINED_FUNCTION_13_34();
      OUTLINED_FUNCTION_2_79();
      sub_25746BE6C();
  }
  *a2 = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_77()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_1_91()
{
  return sub_2576A7B00();
}

uint64_t SequentialSampler.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t sub_25768789C(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  swift_beginAccess();
  sub_25746B3D0(v2 + 16, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002480);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002488);
  if (swift_dynamicCast())
  {
    sub_257479260(v12, (uint64_t)v15);
    uint64_t v4 = v16;
    uint64_t v5 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    char v6 = *(uint64_t (**)(uint64_t, uint64_t *, void, unint64_t, unint64_t, uint64_t, uint64_t))(v5 + 24);
    unint64_t v7 = sub_2574E960C();
    unint64_t v8 = sub_2576894C8();
    uint64_t v9 = v6(a1, &v18, MEMORY[0x263F8E970], v7, v8, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v9;
  }
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  uint64_t result = sub_2574F0484((uint64_t)v12);
  if ((a1 & 0x8000000000000000) == 0)
  {
    MEMORY[0x270FA5388](result);
    v11[2] = v2;
    v11[3] = &v18;
    return sub_25759792C((uint64_t)sub_2576894A8, (uint64_t)v11, 0, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_257687A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(v3, *(void *)(a2 + 40));
  sub_2574E960C();
  sub_2576894C8();
  sub_2576A78B0();
  swift_endAccess();
  return v5;
}

uint64_t sub_257687AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v9 = type metadata accessor for AnyRandomNumberGenerator();
  uint64_t v10 = sub_257689424(&qword_26A0062C8);
  v8[0] = v5;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  swift_retain();
  uint64_t v6 = sub_25768789C(a1, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_257687B7C(uint64_t a1, float a2, float a3)
{
  *(float *)unint64_t v8 = a2;
  *(float *)&v8[1] = a3;
  float v7 = a3 - a2;
  if ((~COERCE_INT(a3 - a2) & 0x7F800000) != 0)
  {
    MEMORY[0x270FA5388](a1);
    v6[2] = v3;
    uint64_t v6[3] = v8;
    v6[4] = &v7;
    v6[5] = v4;
    return sub_2576890FC(v4, sub_257689404, (uint64_t)v6, (uint64_t (*)(void))sub_25749F4D0);
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t sub_257687C80(uint64_t *a1, void *a2, float a3, float a4, float a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_25769455C(0, a1[1]);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t result = sub_257687AD0(v14, 16777217);
  if (!v14)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *a2 = a7;
    return result;
  }
  uint64_t v16 = *(void *)(result + 16);
  if (v16)
  {
    unint64_t v17 = *(void *)(result + 32);
    if (v17 == 0x1000000)
    {
      unint64_t v18 = 0;
LABEL_10:
      uint64_t result = swift_bridgeObjectRelease();
      if (v18 < *(void *)(v13 + 16))
      {
        uint64_t v22 = *(void *)(v13 + 8 * v18 + 32);
        uint64_t result = swift_release();
        *(float *)(*a1 + 4 * v22) = a4;
        return result;
      }
      goto LABEL_16;
    }
    unint64_t v18 = 0;
    uint64_t v19 = *a1;
    uint64_t v20 = v16 - 1;
    uint64_t v21 = *(void *)(v13 + 16);
    while (v21 != v18)
    {
      *(float *)(v19 + 4 * *(void *)(v13 + 32 + 8 * v18)) = (float)((float)((float)v17 * 0.000000059605) * a5) + a3;
      if (v14 - 1 == v18) {
        goto LABEL_12;
      }
      if (v20 == v18) {
        goto LABEL_14;
      }
      unint64_t v17 = *(void *)(result + 40 + 8 * v18++);
      if (v17 == 0x1000000) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_257687DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (a3 - a2 == -1) {
    return sub_257688FFC(a1, a1);
  }
  uint64_t v4 = sub_257687AD0(a1, a3 - a2 + 1);
  MEMORY[0x270FA5388](v4);
  _DWORD v8[2] = a1;
  void v8[3] = v9;
  v8[4] = v5;
  uint64_t v6 = sub_2576890FC(a1, (uint64_t (*)(void *, uint64_t *))sub_257689514, (uint64_t)v8, (uint64_t (*)(void))sub_25749F4DC);
  swift_bridgeObjectRelease();
  return v6;
}

void **sub_257687ECC(void **result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (!a3)
    {
LABEL_6:
      *a2 = a3;
      return result;
    }
    if ((unint64_t)(a3 - 1) < *(void *)(a6 + 16))
    {
      uint64_t v6 = *result;
      float v7 = (uint64_t *)(a6 + 32);
      uint64_t v8 = a3;
      do
      {
        uint64_t v9 = *v7++;
        *v6++ = v9 + a4;
        --v8;
      }
      while (v8);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t SequentialSampler.init()()
{
  return v0;
}

uint64_t sub_257687F1C()
{
  OUTLINED_FUNCTION_4_79();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v0);
  sub_2576A8150();
  OUTLINED_FUNCTION_4_79();
  OUTLINED_FUNCTION_29_9();
  swift_getAssociatedConformanceWitness();
  return sub_2576A7F60();
}

uint64_t SequentialSampler.deinit()
{
  return v0;
}

uint64_t SequentialSampler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_257688010()
{
  return sub_257687F1C();
}

uint64_t ShuffleSampler.__allocating_init(seed:)(unint64_t a1, char a2)
{
  sub_2575D61AC(a1, a2 & 1, v4);
  type metadata accessor for ShuffleSampler();
  uint64_t v2 = OUTLINED_FUNCTION_6_4();
  RandomSampler.init(generator:)(v4);
  return v2;
}

uint64_t sub_257688074()
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_6_66();
  sub_2576A8150();
  swift_beginAccess();
  type metadata accessor for AnyRandomNumberGenerator();
  swift_getAssociatedConformanceWitness();
  sub_257689424((unint64_t *)&qword_26A002470);
  uint64_t v1 = sub_2576A7D30();
  uint64_t v2 = OUTLINED_FUNCTION_29_9();
  v3(v2);
  swift_endAccess();
  return v1;
}

uint64_t sub_2576881D8()
{
  return sub_257688074();
}

uint64_t RandomSampler.__allocating_init(generator:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_6_4();
  RandomSampler.init(generator:)(a1);
  return v2;
}

uint64_t _s14NeuralNetworks14ShuffleSamplerC9generatorACSG_p_tcfc_0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AnyRandomNumberGenerator();
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v4);
  OUTLINED_FUNCTION_0_10();
  __n128 v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  uint64_t v11 = sub_2574F0558((uint64_t)v9, v3, v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(void *)(v1 + 16) = v11;
  return v1;
}

uint64_t RandomSampler.__allocating_init(seed:)(unint64_t a1, char a2)
{
  sub_2575D61AC(a1, a2 & 1, v4);
  return (*(uint64_t (**)(uint64_t *))(v2 + 112))(v4);
}

uint64_t sub_257688354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_67();
  OUTLINED_FUNCTION_1_92();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_6_66();
  sub_2576A8150();
  uint64_t v8 = OUTLINED_FUNCTION_2_80();
  uint64_t result = OUTLINED_FUNCTION_2_80();
  uint64_t v10 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v10 & 0x8000000000000000) == 0)
  {
    swift_beginAccess();
    uint64_t v11 = sub_257687DE4(v8, 0, v10);
    uint64_t v12 = swift_endAccess();
    uint64_t v19[7] = v11;
    MEMORY[0x270FA5388](v12);
    v19[2] = v4;
    uint64_t v19[3] = a3;
    v19[4] = v3;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v14 = OUTLINED_FUNCTION_1_92();
    sub_257539D44();
    uint64_t v15 = OUTLINED_FUNCTION_3_72();
    uint64_t v16 = sub_2574CA830(v15, (uint64_t)sub_25768924C, (uint64_t)v19, v13, v14, v5);
    uint64_t v17 = OUTLINED_FUNCTION_29_9();
    v18(v17);
    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_25768850C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = &v8[-v4];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_2575BC98C();
  uint64_t v6 = (void (*)(unsigned char *, void))sub_2576A8200();
  (*(void (**)(uint64_t))(v3 + 16))(a1);
  v6(v8, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
}

uint64_t RandomSampler.deinit()
{
  swift_release();
  return v0;
}

uint64_t sub_2576886D4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 120))();
}

uint64_t WeightedRandomSampler.weights.getter()
{
  return sub_2576A7810();
}

uint64_t WeightedRandomSampler.__allocating_init(generator:weights:)()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_29_9();
  WeightedRandomSampler.init(generator:weights:)(v1, v2);
  return v0;
}

uint64_t WeightedRandomSampler.init(generator:weights:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = (float *)(a2 + 32);
    float v6 = 0.0;
    do
    {
      float v7 = *v5++;
      float v6 = v6 + v7;
      --v4;
    }
    while (v4);
  }
  else
  {
    float v6 = 0.0;
  }
  *(float *)(v2 + 32) = v6;
  sub_25746B3D0(a1, (uint64_t)v9);
  RandomSampler.init(generator:)(v9);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t WeightedRandomSampler.__allocating_init(seed:weights:)(unint64_t a1, char a2, uint64_t a3)
{
  sub_2575D61AC(a1, a2 & 1, v7);
  sub_25746B3D0((uint64_t)v7, (uint64_t)v6);
  type metadata accessor for WeightedRandomSampler();
  uint64_t v4 = swift_allocObject();
  WeightedRandomSampler.init(generator:weights:)((uint64_t)v6, a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return v4;
}

uint64_t sub_257688850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_67();
  uint64_t v7 = OUTLINED_FUNCTION_1_92();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = *(void *)(*(void *)(v3 + 24) + 16);
  if (v13 == OUTLINED_FUNCTION_2_80())
  {
    sub_2576A8150();
    uint64_t v14 = OUTLINED_FUNCTION_2_80();
    float v15 = *(float *)(v3 + 32);
    if (v15 < 0.0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v16 = v14;
      v25[0] = v7;
      swift_beginAccess();
      uint64_t v17 = sub_257687B7C(v16, 0.0, v15);
      swift_endAccess();
      uint64_t v18 = OUTLINED_FUNCTION_2_80();
      if ((v18 & 0x8000000000000000) == 0)
      {
        v25[1] = 0;
        v25[2] = v18;
        MEMORY[0x270FA5388](v18);
        v25[-6] = v4;
        v25[-5] = a3;
        v25[-4] = v3;
        v25[-3] = v17;
        uint64_t v24 = v12;
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
        uint64_t v20 = OUTLINED_FUNCTION_1_92();
        sub_2574BEE8C();
        uint64_t v21 = OUTLINED_FUNCTION_3_72();
        uint64_t v22 = sub_2574CA830(v21, (uint64_t)sub_25768927C, (uint64_t)&v25[-8], v19, v20, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, void))(v9 + 8))(v12, v25[0]);
        return v22;
      }
    }
    __break(1u);
  }
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

void sub_257688A94(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = &v21[-v10];
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
LABEL_8:
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_2575BC98C();
    uint64_t v20 = (void (*)(unsigned char *, void))sub_2576A8200();
    (*(void (**)(uint64_t))(v9 + 16))(a4);
    v20(v21, 0);
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    return;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)(a3 + 16))
  {
    float v15 = *(float *)(v13 + 32) + 0.0;
    float v16 = *(float *)(a3 + 4 * v12 + 32);
    uint64_t v17 = 0;
    if (v16 > v15)
    {
      uint64_t v18 = v13 + 36;
      uint64_t v19 = v14 - 1;
      do
      {
        if (v19 == v17) {
          break;
        }
        float v15 = v15 + *(float *)(v18 + 4 * v17++);
      }
      while (v16 > v15);
    }
    goto LABEL_8;
  }
  __break(1u);
}

void WeightedRandomSampler.__allocating_init(generator:)()
{
}

void WeightedRandomSampler.init(generator:)()
{
}

uint64_t sub_257688D64()
{
  return swift_bridgeObjectRelease();
}

uint64_t WeightedRandomSampler.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WeightedRandomSampler.__deallocating_deinit()
{
  WeightedRandomSampler.deinit();
  return swift_deallocClassInstance();
}

uint64_t static Sampler<>.sequential.getter()
{
  type metadata accessor for SequentialSampler();
  return swift_allocObject();
}

uint64_t static Sampler<>.shuffle(seed:)(unint64_t a1, char a2)
{
  return sub_257688E7C(a1, a2, (void (*)(void))type metadata accessor for ShuffleSampler, (void (*)(uint64_t *))ShuffleSampler.init(generator:));
}

uint64_t static Sampler<>.shuffle(using:)(uint64_t a1)
{
  return sub_257688F00(a1, (void (*)(uint64_t))type metadata accessor for ShuffleSampler, (void (*)(unsigned char *))ShuffleSampler.init(generator:));
}

uint64_t static Sampler<>.random(seed:)(unint64_t a1, char a2)
{
  return sub_257688E7C(a1, a2, (void (*)(void))type metadata accessor for RandomSampler, (void (*)(uint64_t *))RandomSampler.init(generator:));
}

uint64_t sub_257688E7C(unint64_t a1, char a2, void (*a3)(void), void (*a4)(uint64_t *))
{
  sub_2575D61AC(a1, a2 & 1, v8);
  a3();
  uint64_t v6 = OUTLINED_FUNCTION_6_4();
  a4(v8);
  return v6;
}

uint64_t static Sampler<>.random(using:)(uint64_t a1)
{
  return sub_257688F00(a1, (void (*)(uint64_t))type metadata accessor for RandomSampler, (void (*)(unsigned char *))RandomSampler.init(generator:));
}

uint64_t sub_257688F00(uint64_t a1, void (*a2)(uint64_t), void (*a3)(unsigned char *))
{
  uint64_t v5 = sub_25746B3D0(a1, (uint64_t)v8);
  a2(v5);
  uint64_t v6 = OUTLINED_FUNCTION_6_4();
  a3(v8);
  return v6;
}

uint64_t static Sampler<>.weightedRandom(seed:weights:)(unint64_t a1, char a2, uint64_t a3)
{
  char v5 = a2 & 1;
  type metadata accessor for WeightedRandomSampler();
  sub_2576A7810();
  return WeightedRandomSampler.__allocating_init(seed:weights:)(a1, v5, a3);
}

uint64_t static Sampler<>.weightedRandom(using:weights:)(uint64_t a1, uint64_t a2)
{
  sub_25746B3D0(a1, (uint64_t)v5);
  type metadata accessor for WeightedRandomSampler();
  uint64_t v3 = swift_allocObject();
  sub_2576A7810();
  WeightedRandomSampler.init(generator:weights:)((uint64_t)v5, a2);
  return v3;
}

uint64_t sub_257688FFC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0) {
    goto LABEL_12;
  }
  if (a1)
  {
    uint64_t v4 = sub_2576A7EA0();
    *(void *)(v4 + 16) = a1;
    if ((a2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = MEMORY[0x263F8EE78];
    if ((a2 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (a2)
      {
        char v5 = (uint64_t *)(v4 + 32);
        uint64_t v6 = a2;
        do
        {
          *v5++ = sub_2574ED018();
          --v6;
        }
        while (v6);
      }
      if (a1 >= a2)
      {
        *(void *)(v4 + 16) = a2;
        return v4;
      }
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
LABEL_12:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_2576890FC(uint64_t a1, uint64_t (*a2)(void *, uint64_t *), uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4();
  uint64_t v9 = v8;
  v11[1] = a1;
  uint64_t v12 = 0;
  v11[0] = v8;
  uint64_t result = a2(v11, &v12);
  if (v4)
  {
    if (v12 > a1)
    {
      __break(1u);
    }
    else
    {
      if (!v11[0])
      {
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      if (v9 == v11[0])
      {
        *(void *)(v7 + 16) = v12;
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  if (v12 > a1)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v11[0])
  {
    if (v9 == v11[0])
    {
      *(void *)(v7 + 16) = v12;
      return v7;
    }
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_2576891E0(uint64_t *a1, void *a2, uint64_t a3, float *a4, float *a5, uint64_t a6)
{
  return sub_257687C80(a1, a2, *a4, a4[1], *a5, a3, a6);
}

void **sub_257689204(void **a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  return sub_257687ECC(a1, a2, a3, *a4, a4[1], a5);
}

uint64_t type metadata accessor for ShuffleSampler()
{
  return self;
}

uint64_t sub_25768924C@<X0>(uint64_t a1@<X8>)
{
  return sub_25768850C(a1);
}

uint64_t type metadata accessor for WeightedRandomSampler()
{
  return self;
}

void sub_25768927C(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_257688A94(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t type metadata accessor for SequentialSampler()
{
  return self;
}

uint64_t type metadata accessor for RandomSampler()
{
  return self;
}

uint64_t dispatch thunk of Sampler.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for SequentialSampler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SequentialSampler);
}

uint64_t dispatch thunk of SequentialSampler.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of SequentialSampler.callAsFunction<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t method lookup function for ShuffleSampler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ShuffleSampler);
}

uint64_t dispatch thunk of ShuffleSampler.__allocating_init(generator:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ShuffleSampler.callAsFunction<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t method lookup function for RandomSampler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RandomSampler);
}

uint64_t dispatch thunk of RandomSampler.__allocating_init(generator:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of RandomSampler.callAsFunction<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t method lookup function for WeightedRandomSampler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WeightedRandomSampler);
}

uint64_t dispatch thunk of WeightedRandomSampler.__allocating_init(generator:weights:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_257689404(uint64_t *a1, void *a2)
{
  return sub_2576891E0(a1, a2, *(void *)(v2 + 16), *(float **)(v2 + 24), *(float **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_257689424(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnyRandomNumberGenerator();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_257689468@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_257687A28(*a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_2576894A8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_257689468(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_2576894C8()
{
  unint64_t result = qword_26A0062D0[0];
  if (!qword_26A0062D0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0062D0);
  }
  return result;
}

void **sub_257689514(void **a1, void *a2)
{
  return sub_257689204(a1, a2, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t OUTLINED_FUNCTION_1_92()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_2_80()
{
  return sub_2576A8130();
}

uint64_t OUTLINED_FUNCTION_3_72()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t OUTLINED_FUNCTION_4_79()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_2576895D8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v11 - v10, v4);
  return sub_257689698(v12, a1, a2, a3, a4);
}

uint64_t sub_257689698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for Batches();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  *(unsigned char *)(a5 + *(int *)(result + 40)) = a3;
  return result;
}

uint64_t sub_25768972C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v24 = a3;
  OUTLINED_FUNCTION_0_10();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_8_0();
  uint64_t v14 = v13 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  __n128 v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v23 - v20;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 16))(v14, a1, a4, v19);
  sub_2576A7C00();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a4);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a5, v21, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for Batches.Iterator();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  *(unsigned char *)(a5 + *(int *)(result + 40)) = v24;
  return result;
}

uint64_t Batches.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_8_0();
  uint64_t v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8 - v7, v2, v5);
  sub_25768972C(v9, *(void *)(v2 + *(int *)(a1 + 36)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 40)), v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
}

Swift::OpaquePointer_optional __swiftcall Batches.Iterator.next()()
{
  uint64_t v2 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v30 = v5;
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - v6;
  OUTLINED_FUNCTION_0_10();
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v39 = sub_2576A76E0();
  uint64_t v32 = v2;
  uint64_t v15 = *(int *)(v2 + 36);
  uint64_t v16 = sub_2576A7810();
  uint64_t v17 = MEMORY[0x25A2B84C0](v16, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  uint64_t v34 = v1;
  uint64_t v37 = v15;
  if (v17 < *(void *)(v1 + v15))
  {
    uint64_t v36 = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v19 = v34;
    uint64_t v35 = AssociatedConformanceWitness;
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v33 + 32);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v22 = (void (**)(char *, uint64_t))(v33 + 8);
    while (1)
    {
      sub_2576A8500();
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, AssociatedTypeWitness) == 1) {
        break;
      }
      (*v20)(v14, v7, AssociatedTypeWitness);
      (*v21)(v11, v14, AssociatedTypeWitness);
      sub_2576A7F50();
      sub_2576A7F10();
      (*v22)(v14, AssociatedTypeWitness);
      uint64_t v23 = sub_2576A7810();
      uint64_t v24 = MEMORY[0x25A2B84C0](v23, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      if (v24 >= *(void *)(v19 + v37)) {
        goto LABEL_7;
      }
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v31);
  }
LABEL_7:
  uint64_t v25 = (void *)v39;
  uint64_t v38 = v39;
  sub_2576A7F50();
  swift_getWitnessTable();
  if ((sub_2576A81E0() & 1) != 0
    || (uint64_t v26 = sub_2576A7810(),
        uint64_t v27 = MEMORY[0x25A2B84C0](v26, AssociatedTypeWitness),
        swift_bridgeObjectRelease(),
        v27 != *(void *)(v34 + v37))
    && *(unsigned char *)(v34 + *(int *)(v32 + 40)) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
  }
  uint64_t v29 = v25;
  result.value._rawValue = v29;
  result.is_nil = v28;
  return result;
}

uint64_t sub_257689CE4()
{
  return swift_getWitnessTable();
}

unint64_t sub_257689D00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = (unint64_t)Batches.Iterator.next()();
  *a1 = result;
  return result;
}

uint64_t sub_257689D28()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_257689DD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  }
  return v4;
}

uint64_t sub_257689ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_257689F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_257689FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A0E0(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25768A238);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_21:
        int v14 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v14 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v15 = *a1;
        }
        else {
          int v15 = *(_DWORD *)a1;
        }
        int v18 = v7 + (v15 | v14);
        return (v18 + 1);
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 < 2) {
    return 0;
  }
  int v18 = (v17 + 2147483646) & 0x7FFFFFFF;
  return (v18 + 1);
}

void sub_25768A24C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x25768A43CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Batches()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25768A47C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25768A534(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v10 = *(void *)v11;
    *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  }
  return a1;
}

uint64_t sub_25768A650(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_25768A6CC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A774(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A81C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A8C4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  return a1;
}

uint64_t sub_25768A96C(unsigned __int8 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v5 <= 0xFE) {
    unsigned int v6 = 254;
  }
  else {
    unsigned int v6 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v8 < 4) {
      unsigned int v9 = ((a2 - v6 + 255) >> (8 * v8)) + 1;
    }
    else {
      unsigned int v9 = 2;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v12 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25768AB18);
      case 4:
        int v12 = *(_DWORD *)&a1[v8];
        if (!v12) {
          break;
        }
LABEL_21:
        int v13 = (v12 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v13 = 0;
        }
        if (v8 == 1) {
          int v14 = *a1;
        }
        else {
          int v14 = *(_DWORD *)a1;
        }
        int v17 = v6 + (v14 | v13);
        return (v17 + 1);
      default:
        break;
    }
  }
  if (v5 >= 0xFE)
  {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, AssociatedTypeWitness);
  }
  unsigned int v16 = *(unsigned __int8 *)(((unint64_t)&a1[v7 + 7] & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v16 < 2) {
    return 0;
  }
  int v17 = (v16 + 2147483646) & 0x7FFFFFFF;
  return (v17 + 1);
}

void sub_25768AB2C(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    if (v10 <= 3) {
      unsigned int v12 = ((a3 - v8 + 255) >> v11) + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v15 = ~v8 + a2;
    if (v10 < 4) {
      int v16 = (v15 >> v11) + 1;
    }
    else {
      int v16 = 1;
    }
    if (v10 >= 4) {
      unsigned int v17 = v15;
    }
    else {
      unsigned int v17 = v15;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v17;
    }
    else {
      *(_DWORD *)a1 = v17;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x25768AD40);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 8) = a2 + 1;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, AssociatedTypeWitness);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for Batches.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25768AD80(uint64_t result)
{
  if (result == 3) {
    return 48;
  }
  if (result == 2) {
    return 32;
  }
  if (result)
  {
    sub_2576A8730();
    OUTLINED_FUNCTION_0_78();
    type metadata accessor for MTLStorageMode(0);
    sub_2576A8A30();
    sub_2576A7B00();
    OUTLINED_FUNCTION_1_93();
    sub_25746BE6C();
  }
  return result;
}

uint64_t sub_25768AE58(uint64_t a1)
{
  uint64_t result = 0x65746176697270;
  switch(a1)
  {
    case 0:
      uint64_t result = 0x646572616873;
      break;
    case 1:
      uint64_t result = 0x646567616E616DLL;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 0x656C79726F6D656DLL;
      break;
    default:
      sub_2576A8730();
      OUTLINED_FUNCTION_0_78();
      type metadata accessor for MTLStorageMode(0);
      sub_2576A8A30();
      sub_2576A7B00();
      OUTLINED_FUNCTION_1_93();
      sub_25746BE6C();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_78()
{
  return sub_2576A7B00();
}

unint64_t sub_25768AFD4()
{
  return 0xD000000000000015;
}

unint64_t sub_25768AFF0()
{
  return 0xD00000000000001ALL;
}

void sub_25768B00C()
{
}

uint64_t sub_25768B06C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 128);
  *(void *)(v1 + 32) = *(void *)(v0 + 120);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25768B0C8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25768B100()
{
  sub_25768B0C8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseLossOperation()
{
  return self;
}

uint64_t sub_25768B158()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_25768B17C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_25768B1A4()
{
  return sub_25761B124();
}

uint64_t sub_25768B1F0()
{
  return sub_25768B224();
}

uint64_t type metadata accessor for LossOperation()
{
  return self;
}

uint64_t sub_25768B21C()
{
  return sub_25768B224();
}

uint64_t sub_25768B224()
{
  sub_25768B0C8();
  sub_25747A4E0(*(void *)(v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SoftmaxCrossEntropyOperation()
{
  return self;
}

uint64_t sub_25768B290()
{
  sub_2576A78E0();
  sub_2576A90A0();
  if (*(unsigned char *)(v0 + 160) == 2) {
    return sub_2576A90B0();
  }
  sub_2576A90B0();
  return sub_2576A90A0();
}

uint64_t sub_25768B304()
{
  return sub_25768B290();
}

uint64_t sub_25768B328()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB20;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  *(void *)(v1 + 32) = v0[19];
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  uint64_t v5 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  swift_retain();
  return v5;
}

uint64_t sub_25768B3B4()
{
  sub_25768B0C8();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SoftmaxCrossEntropyGradientOperation()
{
  return self;
}

uint64_t sub_25768B414()
{
  sub_2576A78E0();
  sub_2576A90A0();
  if (*(unsigned char *)(v0 + 144) == 2) {
    return sub_2576A90B0();
  }
  sub_2576A90B0();
  return sub_2576A90A0();
}

uint64_t sub_25768B488()
{
  return sub_25768B414();
}

uint64_t sub_25768B4AC(uint64_t a1)
{
  uint64_t result = sub_25768B55C(&qword_26A0063D8, (void (*)(void))type metadata accessor for LossOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25768B504(uint64_t a1)
{
  uint64_t result = sub_25768B55C(&qword_26A0063E0, (void (*)(void))type metadata accessor for BaseLossOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25768B55C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25768B5A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2574E7154();
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 2;
      uint64_t v5 = v6;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      if (v7 >= *(void *)(result + 24) >> 1)
      {
        sub_2574E7154();
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_25768B660(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1) {
    return *(void *)(a1 + 8 * v1 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_25768B684(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return sub_2576A7810();
  }
  else {
    return 0;
  }
}

uint64_t conv2D(_:weight:bias:stride:padding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, long long **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  void (*v33)(void *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(void, void);
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  long long v47;
  long long v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  long long v56;
  long long v57;
  long long v58;
  int v59;
  long long v60;
  long long v61;
  long long v62;
  int v63;
  unsigned char v64[48];
  uint64_t v65;
  char v66;
  char v67;

  uint64_t v14 = *a1;
  uint64_t v15 = *a2;
  int v16 = *a3;
  uint64_t v17 = *(unsigned __int8 *)(*(void *)(*a1 + 16) + 160);
  int v18 = static ScalarType.floatingPointTypes.getter();
  BOOL v19 = sub_2575A0094(v17, (uint64_t)v18);
  swift_bridgeObjectRelease();
  if (!v19)
  {
LABEL_19:
    OUTLINED_FUNCTION_16_50();
    OUTLINED_FUNCTION_23_11();
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)uint64_t v64 = v17;
    *(void *)&v64[8] = v16;
    *(_OWORD *)&v64[16] = xmmword_2576AD000;
    OUTLINED_FUNCTION_2_81(v46);
    OUTLINED_FUNCTION_0_79();
    goto LABEL_23;
  }
  uint64_t v20 = *(void *)(v14 + 16);
  if (*(void *)(*(void *)(v20 + 152) + 16) != 4)
  {
    *(void *)uint64_t v64 = *(void *)(*(void *)(v20 + 152) + 16);
    *(_OWORD *)&v64[8] = xmmword_2576AD000;
    v64[24] = 0;
    *(_OWORD *)&v64[32] = xmmword_2576AD020;
    OUTLINED_FUNCTION_4_80();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(*(void *)(v15 + 16) + 152);
  if (*(void *)(v21 + 16) != 4)
  {
    *(void *)uint64_t v64 = *(void *)(v21 + 16);
    *(_OWORD *)&v64[8] = xmmword_2576AE9C0;
    v64[24] = 0;
    *(_OWORD *)&v64[32] = xmmword_2576AD020;
    OUTLINED_FUNCTION_4_80();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_23;
  }
  if (!v16) {
    goto LABEL_7;
  }
  uint64_t v22 = *((void *)v16 + 2);
  uint64_t v23 = *(void *)(v22 + 152);
  if (*(void *)(v23 + 16) != 1)
  {
    *(void *)uint64_t v64 = *(void *)(v23 + 16);
    *(_OWORD *)&v64[8] = xmmword_2576B6090;
    v64[24] = 0;
    *(_OWORD *)&v64[32] = xmmword_2576B0250;
    OUTLINED_FUNCTION_4_80();
    swift_retain();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_23;
  }
  if (*(void *)(v23 + 32) != *(void *)(v21 + 32))
  {
    *(void *)uint64_t v64 = 0;
    *(void *)&v64[8] = 0xE000000000000000;
    swift_retain();
    sub_2576A8730();
    uint64_t v60 = *(_OWORD *)v64;
    sub_2576A7B00();
    uint64_t v17 = *(void *)(v22 + 152);
    uint64_t v43 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v43, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v16 = &v60;
    OUTLINED_FUNCTION_19_7();
    uint64_t v44 = *(void *)(*(void *)(v15 + 16) + 152);
    if (*(void *)(v44 + 16))
    {
      uint64_t v45 = *(void *)(v44 + 32);
      if ((unsigned __int128)(v45 * (__int128)a11) >> 64 == (v45 * a11) >> 63)
      {
        *(void *)uint64_t v64 = v45 * a11;
        sub_2576A8EA0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        uint64_t result = OUTLINED_FUNCTION_6_67();
        __break(1u);
        return result;
      }
      __break(1u);
      goto LABEL_19;
    }
    memset(v64, 0, 24);
    v64[24] = -1;
    *(void *)&v64[40] = 0;
    uint64_t v65 = 0;
    *(void *)&v64[32] = 0;
    uint64_t v66 = -1;
    unint64_t v67 = 4;
    sub_2576A7810();
    OUTLINED_FUNCTION_8_65();
LABEL_23:
    sub_25746BF88();
  }
LABEL_7:
  uint64_t v52 = *(void *)(v15 + 16);
  uint64_t v24 = *(void *)(v14 + 16);
  uint64_t v25 = v14;
  *(void *)&uint64_t v60 = *(void *)(v20 + 152);
  *(void *)&uint64_t v56 = v21;
  LOBYTE(v49) = 2;
  sub_257693AE0((uint64_t)&v60, (uint64_t *)&v56, a4, a5, a6, a7, a8, a10, (uint64_t *)v64, a11, (uint64_t)"conv2D(_:weight:bias:stride:padding:dilation:groupCount:)", 57, v49, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/NN.swift", 95, 2u, 232);
  uint64_t v26 = *(void *)v64;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  if (v16)
  {
    uint64_t v50 = *((void *)v16 + 2);
    swift_retain();
  }
  else
  {
    uint64_t v50 = 0;
  }
  BOOL v29 = v16 != 0;
  uint64_t v51 = v25;
  *(void *)uint64_t v64 = v25;
  uint64_t v30 = Tensor.scalarType.getter();
  uint64_t v32 = v31;
  uint64_t v33 = *(void (**)(void *__return_ptr, ValueMetadata *, uint64_t))(v31 + 32);
  swift_retain();
  swift_retain();
  v33((void *)&v60 + 1, v30, v32);
  *(void *)&uint64_t v60 = v26;
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = v29;
  *(void *)(v34 + 24) = v27;
  *(void *)(v34 + 32) = v28;
  *(void *)(v34 + 40) = a6;
  *(void *)(v34 + 48) = a7;
  *(void *)(v34 + 56) = a8;
  *(void *)(v34 + 64) = a10;
  *(void *)(v34 + 72) = a11;
  sub_25761BED4((uint64_t)sub_25768EAE0);
  OUTLINED_FUNCTION_44_12();
  *(_OWORD *)&v64[8] = xmmword_2576B22A0;
  *(_OWORD *)&v64[24] = xmmword_2576C2360;
  *(void *)uint64_t v64 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  OUTLINED_FUNCTION_14_56(101);
  type metadata accessor for Convolution2DOperation();
  swift_allocObject();
  *(void *)&uint64_t v48 = a8;
  *((void *)&v48 + 1) = a10;
  *(void *)&uint64_t v47 = a6;
  *((void *)&v47 + 1) = a7;
  uint64_t v35 = OUTLINED_FUNCTION_28_19();
  uint64_t v38 = sub_25752EC38(v35, v36, v37, v24, v52, v50, v27, v28, v47, v48, a11, (uint64_t)&v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_2576ABB30;
  *(void *)(v39 + 32) = v15;
  *(void *)(v39 + 40) = v51;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2576A7810();
  while (1)
  {
    uint64_t v40 = OUTLINED_FUNCTION_12_52();
    sub_25747B47C(v40, (uint64_t)&v56);
    if (*((void *)&v57 + 1)) {
      break;
    }
    sub_25747B4E4((uint64_t)&v56);
    if (a6)
    {
      swift_bridgeObjectRelease();
      int v63 = 0;
      int v61 = 0u;
      uint64_t v62 = 0u;
      uint64_t v60 = 0u;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v60 = v56;
  int v61 = v57;
  uint64_t v62 = v58;
  int v63 = v59;
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v41 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A001820, (void (*)(uint64_t))type metadata accessor for Convolution2DOperation);
  sub_257613838(v38, v41, 0, (uint64_t)&v60, a9);
  return swift_release();
}

uint64_t transposedConv2D(_:weight:bias:stride:padding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, long long **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11 = *a1;
  unsigned int v12 = *a3;
  uint64_t v15 = *a2;
  uint64_t v16 = v11;
  uint64_t v14 = v12;
  return transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)(&v16, &v15, &v14, a4, a5, a6, a7, 0, a9, 0, a8, a10, a11);
}

uint64_t transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, long long **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void (*v41)(void *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (**v49)(void, void);
  uint64_t result;
  uint64_t v51;
  unsigned char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  long long v59;
  long long v60;
  uint64_t v61;
  long long v67;
  long long v68;
  long long v69;
  int v70;
  long long v71;
  long long v72;
  long long v73;
  int v74;
  unsigned char v75[48];
  uint64_t v76;
  char v77;
  char v78;

  uint64_t v14 = v75;
  uint64_t v15 = *a1;
  uint64_t v16 = *a2;
  uint64_t v17 = *a3;
  uint64_t v18 = *(unsigned __int8 *)(*(void *)(*a1 + 16) + 160);
  BOOL v19 = static ScalarType.floatingPointTypes.getter();
  BOOL v20 = OUTLINED_FUNCTION_9_68((uint64_t)v19);
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_25:
    OUTLINED_FUNCTION_16_50();
    OUTLINED_FUNCTION_23_11();
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)uint64_t v75 = v18;
    *(void *)&v75[8] = v17;
    *((_OWORD *)v14 + 1) = xmmword_2576AD000;
    OUTLINED_FUNCTION_2_81(v56);
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  uint64_t v21 = *(void *)(v15 + 16);
  if (*(void *)(*(void *)(v21 + 152) + 16) != 4)
  {
    *(void *)uint64_t v75 = *(void *)(*(void *)(v21 + 152) + 16);
    *(_OWORD *)&v75[8] = xmmword_2576AD000;
    v75[24] = 0;
    *(_OWORD *)&v75[32] = xmmword_2576AD020;
    OUTLINED_FUNCTION_4_80();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  uint64_t v22 = *(unsigned __int8 *)(v21 + 160);
  uint64_t v23 = static ScalarType.floatingPointTypes.getter();
  BOOL v24 = OUTLINED_FUNCTION_9_68((uint64_t)v23);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    OUTLINED_FUNCTION_16_50();
    OUTLINED_FUNCTION_23_11();
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)uint64_t v75 = v22;
    *(void *)&v75[8] = v17;
    *(_OWORD *)&v75[16] = xmmword_2576AE9C0;
    OUTLINED_FUNCTION_2_81(v57);
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  uint64_t v25 = *(void *)(v16 + 16);
  uint64_t v26 = *(void *)(v25 + 152);
  if (*(void *)(v26 + 16) != 4)
  {
    *(void *)uint64_t v75 = *(void *)(v26 + 16);
    *(_OWORD *)&v75[8] = xmmword_2576AE9C0;
    v75[24] = 0;
    *(_OWORD *)&v75[32] = xmmword_2576AD020;
    OUTLINED_FUNCTION_4_80();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  if (!v17) {
    goto LABEL_12;
  }
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v17 + 2) + 160);
  uint64_t v28 = static ScalarType.floatingPointTypes.getter();
  BOOL v29 = OUTLINED_FUNCTION_9_68((uint64_t)v28);
  swift_retain();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    OUTLINED_FUNCTION_16_50();
    OUTLINED_FUNCTION_23_11();
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)uint64_t v75 = v27;
    *(void *)&v75[8] = v17;
    *(_OWORD *)&v75[16] = xmmword_2576B6090;
    OUTLINED_FUNCTION_2_81(v58);
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  uint64_t v30 = *((void *)v17 + 2);
  uint64_t v31 = *(void *)(v30 + 152);
  if (*(void *)(v31 + 16) != 1)
  {
    *(void *)uint64_t v75 = *(void *)(v31 + 16);
    *(_OWORD *)&v75[8] = xmmword_2576B6090;
    v75[24] = 0;
    *(_OWORD *)&v75[32] = xmmword_2576B0250;
    OUTLINED_FUNCTION_4_80();
    OUTLINED_FUNCTION_0_79();
    goto LABEL_33;
  }
  uint64_t v32 = *(void *)(*(void *)(v16 + 16) + 152);
  unint64_t v33 = *(void *)(v32 + 16);
  if (v33 <= 1)
  {
    *(void *)&v75[16] = 0;
    *(_OWORD *)uint64_t v75 = 1uLL;
    v75[24] = -1;
    *(void *)&v75[40] = 0;
    uint64_t v76 = 0;
    *(void *)&v75[32] = v33;
    uint64_t v77 = -1;
LABEL_32:
    int v78 = 4;
    sub_2576A7810();
    OUTLINED_FUNCTION_8_65();
LABEL_33:
    sub_25746BF88();
  }
  uint64_t v34 = *(void *)(v32 + 40);
  if ((unsigned __int128)(v34 * (__int128)a13) >> 64 != (v34 * a13) >> 63)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(void *)(v31 + 32) != v34 * a13)
  {
LABEL_22:
    *(void *)uint64_t v75 = 0;
    *(void *)&v75[8] = 0xE000000000000000;
    sub_2576A8730();
    uint64_t v71 = *(_OWORD *)v75;
    sub_2576A7B00();
    uint64_t v18 = *(void *)(v30 + 152);
    uint64_t v51 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v51, MEMORY[0x263F8D6C8]);
    uint64_t v14 = v52;
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = &v71;
    OUTLINED_FUNCTION_19_7();
    uint64_t v53 = *(void *)(*(void *)(v16 + 16) + 152);
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54 > 1)
    {
      uint64_t v55 = *(void *)(v53 + 40);
      if ((unsigned __int128)(v55 * (__int128)a13) >> 64 == (v55 * a13) >> 63)
      {
        *(void *)uint64_t v75 = v55 * a13;
        sub_2576A8EA0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        uint64_t result = OUTLINED_FUNCTION_6_67();
        __break(1u);
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    *(void *)&v75[16] = 0;
    *(_OWORD *)uint64_t v75 = 1uLL;
    v75[24] = -1;
    *(void *)&v75[40] = 0;
    uint64_t v76 = 0;
    *(void *)&v75[32] = v54;
    uint64_t v77 = -1;
    goto LABEL_32;
  }
  swift_release();
  uint64_t v25 = *(void *)(v16 + 16);
  uint64_t v26 = *(void *)(v25 + 152);
LABEL_12:
  uint64_t v35 = *(void *)(v15 + 16);
  *(void *)&uint64_t v71 = *(void *)(v35 + 152);
  *(void *)&unint64_t v67 = v26;
  sub_257694090(&v71, (uint64_t)&v67, a4, a5, a6, a7, a8, a10, (uint64_t *)v75, a11, a12, a13);
  uint64_t v36 = *(void *)v75;
  if (v17)
  {
    int v61 = *((void *)v17 + 2);
    swift_retain();
  }
  else
  {
    int v61 = 0;
  }
  BOOL v37 = v17 != 0;
  *(void *)uint64_t v75 = v15;
  uint64_t v38 = Tensor.scalarType.getter();
  uint64_t v40 = v39;
  uint64_t v41 = *(void (**)(void *__return_ptr, ValueMetadata *, uint64_t))(v39 + 32);
  swift_retain();
  swift_retain();
  v41((void *)&v71 + 1, v38, v40);
  *(void *)&uint64_t v71 = v36;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = v37;
  *(void *)(v42 + 24) = a4;
  *(void *)(v42 + 32) = a5;
  *(void *)(v42 + 40) = a6;
  *(void *)(v42 + 48) = a7;
  *(void *)(v42 + 56) = a11;
  *(void *)(v42 + 64) = a12;
  *(void *)(v42 + 72) = a13;
  sub_25761BED4((uint64_t)sub_25768F4D4);
  OUTLINED_FUNCTION_44_12();
  *(_OWORD *)&v75[8] = xmmword_2576B22A0;
  *(_OWORD *)&v75[24] = xmmword_2576C2370;
  *(void *)uint64_t v75 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  OUTLINED_FUNCTION_14_56(115);
  type metadata accessor for ConvolutionTranspose2DOperation();
  swift_allocObject();
  *(void *)&uint64_t v60 = a8;
  *((void *)&v60 + 1) = a10;
  *(void *)&uint64_t v59 = a6;
  *((void *)&v59 + 1) = a7;
  uint64_t v43 = OUTLINED_FUNCTION_28_19();
  uint64_t v46 = sub_25752EE00(v43, v44, v45, v35, v25, v61, a4, a5, v59, v60, a11, a12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_2576ABB30;
  *(void *)(v47 + 32) = v16;
  *(void *)(v47 + 40) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2576A7810();
  while (1)
  {
    uint64_t v48 = OUTLINED_FUNCTION_12_52();
    sub_25747B47C(v48, (uint64_t)&v67);
    if (*((void *)&v68 + 1)) {
      break;
    }
    sub_25747B4E4((uint64_t)&v67);
    if (v16)
    {
      swift_bridgeObjectRelease();
      uint64_t v74 = 0;
      char v72 = 0u;
      uint64_t v73 = 0u;
      uint64_t v71 = 0u;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v71 = v67;
  char v72 = v68;
  uint64_t v73 = v69;
  uint64_t v74 = v70;
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v49 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A001810, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DOperation);
  sub_257613838(v46, v49, 0, (uint64_t)&v71, a9);
  return swift_release();
}

uint64_t Tensor.padded(forSizes:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  DynamicType = (ValueMetadata *)swift_getDynamicType();
  v10[0] = v7;
  if (DynamicType == Tensor.scalarType.getter())
  {
    v10[5] = v7;
    sub_25746B3D0((uint64_t)a2, (uint64_t)v10);
    Tensor.padded(forSizes:mode:)(a1, (uint64_t)v10, a3);
    return sub_2574A46C4((uint64_t)v10);
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_6_67();
    __break(1u);
  }
  return result;
}

uint64_t Tensor.padded(forSizes:mode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void (*v17)(uint64_t *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v18;
  ValueMetadata *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (**v33)(void, void);
  uint64_t v35;
  uint64_t *v36;
  const char *v37;
  long long v38;
  long long v39;
  const char *v40;
  uint64_t v41;
  __int16 v42;
  char v43;
  void v44[7];
  long long v45[2];
  const char *v46;
  uint64_t v47;

  uint64_t v7 = *v3;
  sub_2574A4668(a2, (uint64_t)&v37);
  uint64_t v36 = a3;
  if ((unint64_t)v39 > 2)
  {
    sub_257479260((long long *)&v37, (uint64_t)v44);
    __swift_project_boxed_opaque_existential_1(v44, v44[3]);
    DynamicType = (ValueMetadata *)swift_getDynamicType();
    BOOL v37 = (const char *)v7;
    uint64_t v9 = &v37;
    if (DynamicType == Tensor.scalarType.getter())
    {
      LOBYTE(v9) = *(unsigned char *)(*(void *)(v7 + 16) + 160);
      size_t v10 = static ScalarType.floatingPointTypes.getter();
      BOOL v11 = sub_2575A0094(v9, (uint64_t)v10);
      swift_bridgeObjectRelease();
      if (v11)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
        goto LABEL_6;
      }
    }
    else
    {
      OUTLINED_FUNCTION_6_67();
      __break(1u);
    }
    LOBYTE(v37) = (_BYTE)v9;
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    BOOL v37 = (const char *)a3;
    uint64_t v38 = (unint64_t)&v37;
    *(void *)&uint64_t v39 = 0;
    BYTE8(v39) = 6;
    uint64_t v40 = (const char *)v35;
    LOBYTE(v41) = 2;
    uint64_t v43 = 3;
    OUTLINED_FUNCTION_0_79();
    sub_25746BF88();
  }
  sub_2574A46C4((uint64_t)&v37);
LABEL_6:
  v44[0] = *(void *)(*(void *)(v7 + 16) + 152);
  sub_2576A7810();
  sub_25769398C();
  swift_bridgeObjectRelease();
  unsigned int v12 = v37;
  uint64_t v13 = *(void *)(v7 + 16);
  sub_2574A4668(a2, (uint64_t)v44);
  BOOL v37 = (const char *)v7;
  uint64_t v14 = Tensor.scalarType.getter();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v15 + 32);
  swift_retain();
  sub_2576A7810();
  v17(&v47, v14, v16);
  uint64_t v46 = v12;
  sub_2574A4668(a2, (uint64_t)&v37);
  uint64_t v18 = *(void *)(v13 + 152);
  *(void *)&v45[0] = v7;
  BOOL v19 = Tensor.scalarType.getter();
  uint64_t v21 = v20;
  sub_2574A4668((uint64_t)&v37, (uint64_t)v45);
  uint64_t v22 = (void *)swift_allocObject();
  sub_257479260(v45, (uint64_t)(v22 + 2));
  v22[7] = a1;
  v22[8] = v18;
  v22[9] = v19;
  v22[10] = v21;
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v23 = sub_25761BED4((uint64_t)sub_25768F580);
  uint64_t v25 = v24;
  swift_release();
  sub_2574A46C4((uint64_t)&v37);
  BOOL v37 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PaddingOps.swift";
  uint64_t v38 = xmmword_2576AE600;
  uint64_t v39 = xmmword_2576C2380;
  uint64_t v40 = "init(id:operand:mode:padding:resultDescriptor:creationSite:backward:)";
  uint64_t v41 = 69;
  uint64_t v42 = 2;
  type metadata accessor for PadOperation();
  swift_allocObject();
  uint64_t v26 = OUTLINED_FUNCTION_28_19();
  uint64_t v32 = sub_2574E0B50(v26, v27, v28, v13, v29, a1, v30, v31, v23, v25);
  unint64_t v33 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A001860, (void (*)(uint64_t))type metadata accessor for PadOperation);
  sub_25747B47C(*(void *)(v7 + 16) + 168, (uint64_t)v44);
  return sub_257613838(v32, v33, 0, (uint64_t)v44, v36);
}

uint64_t maxPool2D(_:kernelSize:stride:padding:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  void (*v23)(uint64_t *__return_ptr, ValueMetadata *, uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)(void, void);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  const char *v35;
  uint64_t v36[6];
  uint64_t v37;
  const char *v38;
  long long v39;
  long long v40;

  uint64_t v13 = *a1;
  unsigned __int8 v14 = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v15 = static ScalarType.floatingPointTypes.getter();
  BOOL v16 = sub_2575A0094(v14, (uint64_t)v15);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    BOOL v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v38 = a8;
    *(void *)&uint64_t v39 = &v38;
    OUTLINED_FUNCTION_3_44(v29, (__n128)xmmword_2576AD000);
    OUTLINED_FUNCTION_0_79();
    sub_25746BF88();
  }
  uint64_t v32 = (uint64_t *)a8;
  uint64_t v35 = *(const char **)(*(void *)(v13 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  *(int64x2_t *)(inited + 32) = vdupq_n_s64(1uLL);
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  uint64_t v31 = a3;
  BOOL v37 = inited;
  sub_2576A7810();
  uint64_t v18 = a4;
  uint64_t v30 = a5;
  sub_2576936D4((uint64_t)&v35, (uint64_t)&v37, a4, a5, a6, a7, &v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v19 = v38;
  if (v38)
  {
    uint64_t v38 = (const char *)v13;
    BOOL v20 = Tensor.scalarType.getter();
    uint64_t v22 = v21;
    uint64_t v23 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v21 + 32);
    swift_retain();
    v23(v36, v20, v22);
    uint64_t v35 = v19;
    BOOL v24 = (void *)swift_allocObject();
    void v24[2] = a2;
    v24[3] = v31;
    v24[4] = v18;
    v24[5] = v30;
    v24[6] = a6;
    uint64_t v24[7] = a7;
    sub_25761BED4((uint64_t)sub_25768F59C);
    swift_release();
    uint64_t v39 = xmmword_2576AE600;
    uint64_t v40 = xmmword_2576C2390;
    uint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PoolingOps.swift";
    OUTLINED_FUNCTION_13_54(82);
    type metadata accessor for Max2DPoolOperation();
    swift_allocObject();
    uint64_t v25 = OUTLINED_FUNCTION_28_19();
    uint64_t v26 = sub_257523318(v25);
    uint64_t v27 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A001840, (void (*)(uint64_t))type metadata accessor for Max2DPoolOperation);
    sub_25747B47C(*(void *)(v13 + 16) + 168, (uint64_t)&v35);
    return sub_257613838(v26, v27, 0, (uint64_t)&v35, v32);
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_6_67();
    __break(1u);
  }
  return result;
}

uint64_t averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t *a9@<X8>)
{
  void (*v24)(uint64_t *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(void, void);
  uint64_t result;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  const char *v36;
  uint64_t v37[6];
  uint64_t v38;
  const char *v39;
  long long v40;
  long long v41;

  uint64_t v15 = *a1;
  unsigned __int8 v16 = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v17 = static ScalarType.floatingPointTypes.getter();
  BOOL v18 = sub_2575A0094(v16, (uint64_t)v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v39 = (const char *)v18;
    *(void *)&uint64_t v40 = &v39;
    OUTLINED_FUNCTION_3_44(v30, (__n128)xmmword_2576AD000);
    OUTLINED_FUNCTION_0_79();
    sub_25746BF88();
  }
  uint64_t v34 = a9;
  uint64_t v36 = *(const char **)(*(void *)(v15 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  *(int64x2_t *)(inited + 32) = vdupq_n_s64(1uLL);
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  uint64_t v38 = inited;
  sub_2576A7810();
  uint64_t v32 = a4;
  unint64_t v33 = a5;
  sub_2576936D4((uint64_t)&v36, (uint64_t)&v38, a4, a5, a6, a7, &v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v20 = v39;
  if (v39)
  {
    uint64_t v39 = (const char *)v15;
    uint64_t v21 = Tensor.scalarType.getter();
    uint64_t v23 = v22;
    BOOL v24 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v22 + 32);
    swift_retain();
    v24(v37, v21, v23);
    uint64_t v36 = v20;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a2;
    *(void *)(v25 + 24) = a3;
    *(void *)(v25 + 32) = v32;
    *(void *)(v25 + 40) = v33;
    *(void *)(v25 + 48) = a6;
    *(void *)(v25 + 56) = a7;
    *(unsigned char *)(v25 + 64) = a8 & 1;
    sub_25761BED4((uint64_t)sub_25768F5B8);
    swift_release();
    uint64_t v40 = xmmword_2576AE600;
    uint64_t v41 = xmmword_2576C23A0;
    uint64_t v39 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PoolingOps.swift";
    OUTLINED_FUNCTION_13_54(103);
    type metadata accessor for Average2DPoolOperation();
    swift_allocObject();
    uint64_t v26 = OUTLINED_FUNCTION_28_19();
    uint64_t v27 = sub_257523150(v26);
    uint64_t v28 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A001850, (void (*)(uint64_t))type metadata accessor for Average2DPoolOperation);
    sub_25747B47C(*(void *)(v15 + 16) + 168, (uint64_t)&v36);
    return sub_257613838(v27, v28, 0, (uint64_t)&v36, v34);
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_6_67();
    __break(1u);
  }
  return result;
}

uint64_t sub_25768D06C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>, float a3@<S0>)
{
  uint64_t v68 = *MEMORY[0x263EF8340];
  uint64_t v7 = sub_2576A8EF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  size_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v3;
  if (a3 <= 0.0)
  {
    *a2 = v11;
    return swift_retain();
  }
  else if (a3 >= 1.0)
  {
    v49[0] = *v3;
    swift_retain();
    return Tensor.init(zerosLike:)(v49, a2);
  }
  else
  {
    uint64_t v44 = a2;
    uint64_t v12 = *a1;
    unsigned __int8 v13 = *(unsigned char *)(*(void *)(v11 + 16) + 160);
    unsigned __int8 v14 = static ScalarType.floatingPointTypes.getter();
    BOOL v15 = sub_2575A0094(v13, (uint64_t)v14);
    swift_bridgeObjectRelease();
    if (!v15)
    {
      v49[0] = v11;
      BOOL v37 = Tensor.scalarType.getter();
      uint64_t v39 = v38;
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
      v49[0] = (uint64_t)v37;
      v49[1] = v39;
      long long v49[2] = 0;
      uint64_t v50 = 0;
      LOBYTE(v51) = 6;
      uint64_t v52 = v40;
      char v53 = 2;
      char v57 = 3;
      OUTLINED_FUNCTION_0_79();
      sub_25746BF88();
    }
    uint64_t v16 = *(void *)(v12 + 16);
    *(void *)&long long v42 = *(void *)(v11 + 16);
    v60[0] = *(void *)(v42 + 152);
    char v17 = *(unsigned char *)(v42 + 160);
    uint64_t v50 = MEMORY[0x263F8D538];
    uint64_t v51 = &protocol witness table for Double;
    v49[0] = 0;
    uint64_t v54 = MEMORY[0x263F8D538];
    uint64_t v55 = &protocol witness table for Double;
    uint64_t v52 = 0x3FF0000000000000;
    char v58 = 2;
    char v59 = v17;
    uint64_t v62 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
    long long v63 = xmmword_2576ACB10;
    long long v64 = xmmword_2576ACB20;
    uint64_t v65 = "init(id:state:shape:distribution:creationSite:)";
    uint64_t v66 = 47;
    __int16 v67 = 2;
    type metadata accessor for RandomOperation();
    swift_allocObject();
    swift_retain();
    sub_2576A7810();
    int v18 = OUTLINED_FUNCTION_28_19();
    uint64_t v24 = sub_2575D41E4(v18, v19, v20, v16, v21, v22, v23);
    type metadata accessor for ContextManager();
    memset(v60, 0, sizeof(v60));
    int v61 = 0;
    uint64_t v43 = v24;
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v49);
    swift_release();
    uint64_t v25 = v56;
    swift_retain();
    sub_2574718B0((uint64_t)v49);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v49);
    swift_release();
    uint64_t v26 = (uint64_t)v55;
    swift_retain();
    sub_2574718B0((uint64_t)v49);
    type metadata accessor for TensorRepresentation();
    uint64_t v27 = swift_allocObject();
    LOBYTE(v49[0]) = 1;
    sub_257583694(v24, 0, (uint64_t)v60, 0x100000000, v25, v26, v27);
    uint64_t v29 = v28;
    type metadata accessor for TensorHandle();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v29;
    uint64_t v31 = v30;
    v41[1] = v30;
    swift_retain();
    sub_2576139A8();
    uint64_t v48 = v31;
    LOBYTE(v24) = *(unsigned char *)(v42 + 160);
    OUTLINED_FUNCTION_15_49();
    uint64_t v46 = MEMORY[0x263F8EE78];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    uint64_t inited = swift_initStackObject();
    long long v42 = xmmword_2576ABB10;
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(float *)(inited + 32) = a3;
    char v45 = v24;
    sub_25747B47C((uint64_t)v49, (uint64_t)v60);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    sub_25747B4E4((uint64_t)v49);
    v60[0] = v47;
    static Tensor..>= infix(_:_:)();
    swift_release();
    uint64_t v33 = v49[0];
    LOBYTE(v31) = *(unsigned char *)(*(void *)(v11 + 16) + 160);
    OUTLINED_FUNCTION_15_49();
    uint64_t v47 = MEMORY[0x263F8EE78];
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v42;
    *(float *)(v34 + 32) = 1.0 - a3;
    LOBYTE(v46) = v31;
    sub_25747B47C((uint64_t)v49, (uint64_t)v60);
    Tensor.init(shape:coercingScalars:scalarType:on:)();
    sub_25747B4E4((uint64_t)v49);
    uint64_t v35 = v48;
    v49[0] = v11;
    v60[0] = v33;
    LOBYTE(v47) = *(unsigned char *)(*(void *)(v11 + 16) + 160);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8E1F8], v7);
    Tensor.cast(to:roundingRule:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v47 = v48;
    static Tensor.* infix(_:_:)();
    swift_release();
    uint64_t v47 = v35;
    uint64_t v48 = v60[0];
    static Tensor./ infix(_:_:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    *uint64_t v44 = v49[0];
  }
  return result;
}

uint64_t normalize(_:mean:variance:scale:offset:varianceEpsilon:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t *a4@<X4>, void *a5@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a3;
  uint64_t v8 = *a4;
  uint64_t v11 = *a2;
  static Tensor.+ infix(_:_:)();
  rsqrt(_:)();
  swift_release();
  uint64_t v9 = v11;
  uint64_t v12 = v6;
  static Tensor.- infix(_:_:)();
  if (v7)
  {
    uint64_t v12 = v9;
    static Tensor.* infix(_:_:)();
  }
  else
  {
    swift_retain();
  }
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  if (v8)
  {
    static Tensor.+ infix(_:_:)();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *a5 = v12;
  }
  return result;
}

uint64_t Tensor.droppingOut(withProbability:seed:)@<X0>(unint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>, float a4@<S0>)
{
  if (a4 < 0.0 || a4 > 1.0) {
    goto LABEL_14;
  }
  uint64_t v9 = *v4;
  if ((a2 & 1) == 0)
  {
LABEL_10:
    UInt64.vector2.getter(a1);
    uint64_t v18[2] = 0;
    v18[3] = 0;
    v18[4] = v14;
    char v19 = 0;
    uint64_t v20 = 0;
    v18[1] = v9;
    sub_2574EDD68(v18);
    uint64_t v17 = v18[0];
    sub_25768D06C(&v17, a3, a4);
    return swift_release();
  }
  type metadata accessor for ContextManager();
  size_t v10 = (char *)sub_2575D60A8() + 16;
  swift_beginAccess();
  unint64_t v11 = *(void *)(*(void *)v10 + 16);
  swift_beginAccess();
  uint64_t v12 = *(void *)v10;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)size_t v10 = v12;
  if (isUniquelyReferenced_nonNull_native)
  {
    if (v11) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_257582B64();
    uint64_t v12 = v16;
    *(void *)size_t v10 = v16;
    if (v11)
    {
LABEL_8:
      if (v11 <= *(void *)(v12 + 16))
      {
        a1 = sub_2575D5D80();
        swift_endAccess();
        swift_release();
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  sub_2576A8730();
  sub_2576A7B00();
  sub_2576A8040();
  uint64_t result = OUTLINED_FUNCTION_6_67();
  __break(1u);
  return result;
}

uint64_t sub_25768D960(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (result < a5 || result >= a6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
    sub_2575942A8(a2, a3, a4);
    sub_2575942A8(a7, a8, a9);
    sub_25746BF88();
  }
  return result;
}

uint64_t sub_25768DA60(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v8 = *(void *)(*(void *)(result + 32) + 16);
      uint64_t v9 = *(void *)(*(void *)(a2 + 32) + 16);
      char v10 = *(unsigned char *)(v9 + 160);
      uint64_t v26 = *(void *)(v9 + 152);
      char v27 = v10;
      long long v33 = xmmword_2576AE600;
      long long v34 = xmmword_2576C23B0;
      uint64_t v32 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PoolingOps.swift";
      uint64_t v35 = "init(id:gradientOperand:operand:kernelSize:stride:padding:resultDescriptor:creationSite:)";
      uint64_t v36 = 89;
      __int16 v37 = 2;
      type metadata accessor for Max2DPoolGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2576A7810();
      uint64_t v15 = sub_257523408(0, 0, 0, v8, v9, a3, a4, a5, a6, a7, a8, &v26, &v32);
      sub_25747B47C(v8 + 168, (uint64_t)v31);
      sub_25747B47C((uint64_t)v31, (uint64_t)v30);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v26);
      swift_release();
      uint64_t v16 = v29;
      swift_retain();
      sub_2574718B0((uint64_t)&v26);
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v26);
      swift_release();
      uint64_t v17 = v28;
      swift_retain();
      sub_2574718B0((uint64_t)&v26);
      type metadata accessor for TensorRepresentation();
      uint64_t v18 = swift_allocObject();
      LOBYTE(v26) = 1;
      uint64_t v19 = sub_257585B04(v15, 0, v30, 0x100000000, v16, v17, v18);
      type metadata accessor for TensorHandle();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      swift_retain();
      sub_2576139A8();
      swift_release();
      sub_25747B4E4((uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_2574E8C6C();
      *(void *)(v21 + 32) = v20;
      *(void *)(v21 + 40) = v22;
      *(void *)(v21 + 48) = v23;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25768DD28(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v9 = *(void *)(*(void *)(result + 32) + 16);
      uint64_t v10 = *(void *)(*(void *)(a2 + 32) + 16);
      char v11 = *(unsigned char *)(v10 + 160);
      uint64_t v28 = *(void *)(v10 + 152);
      char v29 = v11;
      long long v35 = xmmword_2576AE600;
      long long v36 = xmmword_2576C23C0;
      long long v34 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PoolingOps.swift";
      __int16 v37 = "init(id:gradientOperand:operand:kernelSize:stride:padding:countIncludesPadding:resultDescriptor:creationSite:)";
      uint64_t v38 = 110;
      __int16 v39 = 2;
      type metadata accessor for Average2DPoolGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2576A7810();
      char v25 = a9 & 1;
      uint64_t v16 = sub_257523234(0, 0, 0, v9, v10, a3, a4, a5, a6, a7, a8, v25, &v28, &v34);
      sub_25747B47C(v9 + 168, (uint64_t)v33);
      sub_25747B47C((uint64_t)v33, (uint64_t)v32);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v28);
      swift_release();
      uint64_t v17 = v31;
      swift_retain();
      sub_2574718B0((uint64_t)&v28);
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v28);
      swift_release();
      uint64_t v18 = v30;
      swift_retain();
      sub_2574718B0((uint64_t)&v28);
      type metadata accessor for TensorRepresentation();
      uint64_t v19 = swift_allocObject();
      LOBYTE(v28) = 1;
      uint64_t v20 = sub_257585CF4(v16, 0, v32, 0x100000000, v17, v18, v19);
      type metadata accessor for TensorHandle();
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      swift_retain();
      sub_2576139A8();
      swift_release();
      sub_25747B4E4((uint64_t)v33);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v23 = sub_2574E8C6C();
      *(void *)(v22 + 32) = v21;
      *(void *)(v22 + 40) = v23;
      *(void *)(v22 + 48) = v24;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v22;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25768E004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v16)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64x2_t *v32;
  int64x2_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  void v38[18];
  unsigned char v39[56];
  uint64_t v40;
  void v41[6];
  unsigned char v42[24];
  unint64_t v43;
  unsigned char v44[56];
  const char *v45;
  long long v46;
  long long v47;
  const char *v48;
  uint64_t v49;
  __int16 v50;

  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a2 + 32);
  sub_25747B47C(*(void *)(v12 + 16) + 168, (uint64_t)v44);
  sub_2574A4668(a3, (uint64_t)v42);
  if (v43 < 3)
  {
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(v13 + 16);
    sub_2574A4668(a3, (uint64_t)v38);
    uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a7 + 32);
    swift_retain();
    swift_retain();
    sub_2576A7810();
    swift_retain();
    swift_retain();
    sub_2576A7810();
    v16(v41, a6, a7);
    uint64_t v40 = a5;
    uint64_t v46 = xmmword_2576AE600;
    uint64_t v47 = xmmword_2576C23D0;
    char v45 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/PaddingOps.swift";
    uint64_t v48 = "init(id:gradientOperand:operand:mode:padding:resultDescriptor:creationSite:)";
    uint64_t v49 = 76;
    uint64_t v50 = 2;
    type metadata accessor for PadGradientOperation();
    swift_allocObject();
    uint64_t v17 = sub_2574E0CC8(0, 0, 0, v14, v15, (uint64_t)v38, a4, (uint64_t)&v40, (uint64_t)&v45);
    sub_25747B47C((uint64_t)v44, (uint64_t)&v40);
    sub_25747B47C((uint64_t)&v40, (uint64_t)v39);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v38);
    swift_release();
    uint64_t v18 = v38[10];
    swift_retain();
    sub_2574718B0((uint64_t)v38);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v38);
    swift_release();
    uint64_t v19 = v38[9];
    swift_retain();
    sub_2574718B0((uint64_t)v38);
    type metadata accessor for TensorRepresentation();
    uint64_t v20 = swift_allocObject();
    LOBYTE(v38[0]) = 1;
    uint64_t v21 = sub_257585EE4(v17, 0, v39, 0x100000000, v18, v19, v20);
    type metadata accessor for TensorHandle();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)&v40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2576ABB10;
    swift_retain();
    swift_retain();
    uint64_t v24 = sub_2574E8C6C();
    *(void *)(v23 + 32) = v22;
    *(void *)(v23 + 40) = v24;
    *(void *)(v23 + 48) = v25;
    swift_release();
    swift_release();
LABEL_8:
    swift_release();
    swift_release();
    sub_25747B4E4((uint64_t)v44);
    sub_2574A46C4((uint64_t)v42);
    return v23;
  }
  swift_retain();
  swift_retain();
  uint64_t v26 = sub_25768B5A0(a4);
  char v27 = *(void *)(v26 + 16);
  if (v27 == *(void *)(a5 + 16) && v27 == *(void *)(*(void *)(*(void *)(v12 + 16) + 152) + 16))
  {
    uint64_t v28 = v26;
    sub_2576A7810();
    sub_2576A7810();
    sub_2574E3864(v28, a5);
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_2576A7810();
    sub_2574E3618(v31, v30);
    long long v33 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2574E3D78(v33, v12, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v34 = v38[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2576ABB10;
    swift_retain();
    swift_retain();
    long long v35 = sub_2574E8C6C();
    *(void *)(v23 + 32) = v34;
    *(void *)(v23 + 40) = v35;
    *(void *)(v23 + 48) = v36;
    swift_release();
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_25768E47C(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v15 = a2[2];
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v15 == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(result + 32);
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[5];
  if ((a3 & 1) == 0)
  {
    uint64_t v21 = a4;
    uint64_t v26 = 0;
    uint64_t v52 = 0;
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = *(void *)(v19 + 16);
    uint64_t v25 = *(void *)(v20 + 16);
LABEL_8:
    long long v61 = xmmword_2576B22A0;
    long long v62 = xmmword_2576C23E0;
    uint64_t v60 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
    long long v63 = "init(id:gradient:input:weight:bias:stride:padding:dilation:groupCount:creationSite:)";
    uint64_t v64 = 84;
    __int16 v65 = 2;
    type metadata accessor for Convolution2DGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v27 = sub_25752ED74(0, 0, 0, v23, v24, v25, v26, v21, a5, a6, a7, a8, a9, a10, &v60);
    sub_25747B47C(v23 + 168, (uint64_t)v59);
    sub_25747B47C((uint64_t)v59, (uint64_t)v57);
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v28 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v29 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    type metadata accessor for TensorRepresentation();
    uint64_t v30 = swift_allocObject();
    v53[0] = 1;
    uint64_t v31 = sub_2575860D8(v27, 0, v56, 0x100000000, v28, v29, v30);
    type metadata accessor for TensorHandle();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    sub_25768F8A4(&qword_26A001818, (void (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation);
    sub_25747B47C((uint64_t)v59, (uint64_t)v57);
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    swift_retain_n();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v33 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v34 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    uint64_t v35 = swift_allocObject();
    v53[0] = 1;
    uint64_t v36 = sub_2575860D8(v27, 1, v56, 0x100000000, v33, v34, v35);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    swift_retain();
    sub_2576139A8();
    swift_release();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2576ABB30;
    swift_retain();
    swift_retain();
    uint64_t v39 = sub_2574E8C6C();
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v39;
    *(void *)(v38 + 48) = v40;
    swift_retain();
    swift_retain();
    uint64_t v41 = sub_2574E8C6C();
    *(void *)(v38 + 56) = v37;
    *(void *)(v38 + 64) = v41;
    *(void *)(v38 + 72) = v42;
    if (!v52)
    {
      sub_25747B4E4((uint64_t)v59);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v38;
    }
    int v58 = 0;
    memset(v57, 0, sizeof(v57));
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    swift_retain();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v43 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v44 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    uint64_t v45 = swift_allocObject();
    v53[0] = 1;
    uint64_t v46 = sub_2575860D8(v27, 2, v56, 0x100000000, v43, v44, v45);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v46;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    swift_retain();
    uint64_t v10 = sub_2574E8C6C();
    uint64_t v13 = v47;
    unint64_t v12 = *(void *)(v38 + 16);
    unint64_t v14 = v12 + 1;
    if (v12 < *(void *)(v38 + 24) >> 1)
    {
LABEL_10:
      *(void *)(v38 + 16) = v14;
      uint64_t v48 = (void *)(v38 + 24 * v12);
      v48[4] = v11;
      v48[5] = v10;
      v48[6] = v13;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      sub_25747B4E4((uint64_t)v59);
      return v38;
    }
LABEL_16:
    sub_257472D74();
    uint64_t v38 = v49;
    goto LABEL_10;
  }
  if (v15 >= 3)
  {
    uint64_t v21 = a4;
    uint64_t v22 = a2[6];
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = *(void *)(v19 + 16);
    uint64_t v25 = *(void *)(v20 + 16);
    uint64_t v26 = *(void *)(v22 + 16);
    swift_retain();
    uint64_t v52 = v22;
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_25768EAD4()
{
  return OUTLINED_FUNCTION_1_37(v0, 80);
}

uint64_t sub_25768EAE0(uint64_t a1, uint64_t a2)
{
  return sub_25768F4EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25768E47C);
}

uint64_t sub_25768EAF8(uint64_t result, void *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v15 = a2[2];
  if (!v15)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v15 == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v18 = *(void *)(result + 32);
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[5];
  if ((a3 & 1) == 0)
  {
    uint64_t v21 = a4;
    uint64_t v26 = 0;
    uint64_t v50 = 0;
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = *(void *)(v19 + 16);
    uint64_t v25 = *(void *)(v20 + 16);
LABEL_8:
    long long v60 = xmmword_2576B22A0;
    long long v61 = xmmword_2576C23F0;
    char v59 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
    long long v62 = "init(id:gradient:input:weight:bias:stride:padding:dilation:groupCount:creationSite:)";
    uint64_t v63 = 84;
    __int16 v64 = 2;
    type metadata accessor for ConvolutionTranspose2DGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v27 = sub_25752F080(0, 0, 0, v23, v24, v25, v26, v21, a5, a6, a7, a8, a9, a10, &v59);
    sub_25747B47C(v23 + 168, (uint64_t)v58);
    sub_25747B47C((uint64_t)v58, (uint64_t)v57);
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v28 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v29 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    type metadata accessor for TensorRepresentation();
    uint64_t v30 = swift_allocObject();
    v53[0] = 1;
    uint64_t v31 = sub_2575862C8(v27, 0, v56, 0x100000000, v28, v29, v30);
    type metadata accessor for TensorHandle();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v31;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    sub_25768F8A4(&qword_26A001808, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DGradientOperation);
    sub_25747B47C((uint64_t)v58, (uint64_t)v57);
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    swift_retain_n();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v33 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v34 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    uint64_t v35 = swift_allocObject();
    v53[0] = 1;
    uint64_t v36 = sub_2575862C8(v27, 1, v56, 0x100000000, v33, v34, v35);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    swift_retain();
    sub_2576139A8();
    swift_release();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_2576ABB30;
    swift_retain();
    swift_retain();
    uint64_t v39 = sub_2574E8C6C();
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v39;
    *(void *)(v38 + 48) = v40;
    swift_retain();
    swift_retain();
    uint64_t v41 = sub_2574E8C6C();
    *(void *)(v38 + 56) = v37;
    *(void *)(v38 + 64) = v41;
    *(void *)(v38 + 72) = v42;
    if (!v50)
    {
      sub_25747B4E4((uint64_t)v58);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v38;
    }
    sub_25747B47C(*(void *)(v50 + 16) + 168, (uint64_t)v57);
    sub_25747B47C((uint64_t)v57, (uint64_t)v56);
    swift_retain();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v43 = v55;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v53);
    swift_release();
    uint64_t v44 = v54;
    swift_retain();
    sub_2574718B0((uint64_t)v53);
    uint64_t v45 = swift_allocObject();
    v53[0] = 1;
    uint64_t v46 = sub_2575862C8(v27, 2, v56, 0x100000000, v43, v44, v45);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v46;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v57);
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_2574E8C6C();
    uint64_t v13 = v47;
    unint64_t v12 = *(void *)(v38 + 16);
    unint64_t v14 = v12 + 1;
    if (v12 < *(void *)(v38 + 24) >> 1)
    {
LABEL_10:
      *(void *)(v38 + 16) = v14;
      uint64_t v48 = (void *)(v38 + 24 * v12);
      v48[4] = v11;
      v48[5] = v10;
      v48[6] = v13;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      sub_25747B4E4((uint64_t)v58);
      return v38;
    }
LABEL_16:
    sub_257472D74();
    uint64_t v38 = v49;
    goto LABEL_10;
  }
  if (v15 >= 3)
  {
    uint64_t v21 = a4;
    uint64_t v22 = a2[6];
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = *(void *)(v19 + 16);
    uint64_t v25 = *(void *)(v20 + 16);
    uint64_t v26 = *(void *)(v22 + 16);
    swift_retain();
    uint64_t v50 = v22;
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t Tensor.topk(_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  uint64_t v10 = *(void *)(*v3 + 16);
  uint64_t result = sub_25768B660(*(void *)(v10 + 152));
  if ((v12 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      sub_25768D960(a3, 107, 0xE100000000000000, 0, 0, result, 0, 0, 255);
      *(void *)(swift_allocObject() + 16) = a3;
      swift_retain();
      sub_25761BED4((uint64_t)sub_25768F5F8);
      OUTLINED_FUNCTION_44_12();
      uint64_t v23 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransf"
            "ormationOps.swift";
      long long v24 = xmmword_2576B4FF0;
      long long v25 = xmmword_2576C2400;
      uint64_t v26 = "init(id:operand:k:creationSite:backward:)";
      uint64_t v27 = 41;
      __int16 v28 = 2;
      type metadata accessor for TopKOperation();
      swift_allocObject();
      int v13 = OUTLINED_FUNCTION_28_19();
      sub_2575E3EF0(v13, v14, v15, v10, a3, v16, v4, v5);
      uint64_t v18 = v17;
      uint64_t v19 = (uint64_t (**)(void, void))sub_25768F8A4(&qword_26A003A40, (void (*)(uint64_t))type metadata accessor for TopKOperation);
      uint64_t v20 = *(void *)(v9 + 16) + 168;
      sub_25747B47C(v20, (uint64_t)v22);
      uint64_t v21 = swift_retain();
      sub_257613838(v21, v19, 0, (uint64_t)v22, a1);
      sub_25747B47C(v20, (uint64_t)v22);
      return sub_257613838(v18, v19, 1uLL, (uint64_t)v22, a2);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25768F374(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v4 = *(void *)(result + 32);
      v21[0] = *(void *)(a2 + 32);
      uint64_t v5 = v21[0];
      swift_retain();
      swift_retain();
      Tensor.topk(_:)(&v20, &v19, a3);
      swift_release();
      uint64_t v17 = v4;
      uint64_t v18 = v19;
      v21[0] = v5;
      swift_retain();
      Tensor.init(zerosLike:)(v21, &v16);
      uint64_t v15 = v16;
      uint64_t v6 = *(void *)(*(void *)(*(void *)(v5 + 16) + 152) + 16) - 1;
      HIBYTE(v14) = 0;
      sub_25759B3B4((uint64_t)&v18, (uint64_t)&v17, (uint64_t)&v15, v6, (uint64_t)&v14 + 7, v7, v8, v9, v14, v16, v16, v17, v18, v19, v20, v21[0], v21[1], v21[2], v21[3],
        v21[4]);
      swift_release();
      swift_release();
      uint64_t v10 = v21[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v12 = sub_2574E8C6C();
      *(void *)(v11 + 32) = v10;
      *(void *)(v11 + 40) = v12;
      *(void *)(v11 + 48) = v13;
      swift_release();
      swift_release();
      swift_release();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25768F4C8()
{
  return OUTLINED_FUNCTION_1_37(v0, 80);
}

uint64_t sub_25768F4D4(uint64_t a1, uint64_t a2)
{
  return sub_25768F4EC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))sub_25768EAF8);
}

uint64_t sub_25768F4EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void, void))
{
  return a3(a1, a2, *(unsigned __int8 *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72));
}

uint64_t sub_25768F52C()
{
  if (*(void *)(v0 + 40) >= 3uLL) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_25768F580(uint64_t a1, uint64_t a2)
{
  return sub_25768E004(a1, a2, (uint64_t)(v2 + 2), v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_25768F590()
{
  return OUTLINED_FUNCTION_1_37(v0, 64);
}

uint64_t sub_25768F59C(uint64_t a1, uint64_t a2)
{
  return sub_25768DA60(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_25768F5AC()
{
  return OUTLINED_FUNCTION_1_37(v0, 65);
}

uint64_t sub_25768F5B8(uint64_t a1, uint64_t a2)
{
  return sub_25768DD28(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(unsigned char *)(v2 + 64));
}

uint64_t sub_25768F5EC()
{
  return OUTLINED_FUNCTION_1_37(v0, 24);
}

uint64_t sub_25768F5F8(uint64_t a1, uint64_t a2)
{
  return sub_25768F374(a1, a2, *(void *)(v2 + 16));
}

uint64_t _s11PaddingModeOwxx(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  return a1;
}

uint64_t _s11PaddingModeOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t _s11PaddingModeOwca(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t _s11PaddingModeOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t _s11PaddingModeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s11PaddingModeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_25768F850(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_25768F868(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Tensor.PaddingMode()
{
  return &type metadata for Tensor.PaddingMode;
}

uint64_t sub_25768F8A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_81(uint64_t result)
{
  *(unsigned char *)(v1 - 176) = 0;
  *(void *)(v1 - 168) = result;
  *(unsigned char *)(v1 - 160) = 2;
  *(unsigned char *)(v1 - 100) = 3;
  return result;
}

void OUTLINED_FUNCTION_4_80()
{
  *(unsigned char *)(v0 - 160) = 0;
  *(unsigned char *)(v0 - 100) = 7;
}

uint64_t OUTLINED_FUNCTION_6_67()
{
  return sub_2576A8B60();
}

BOOL OUTLINED_FUNCTION_9_68(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

uint64_t OUTLINED_FUNCTION_12_52()
{
  return *(void *)(*(void *)(v1 + 8 * v0) + 16) + 168;
}

uint64_t OUTLINED_FUNCTION_13_54@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 160) = v1;
  *(void *)(v2 - 152) = a1;
  *(_WORD *)(v2 - 144) = 2;
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_56@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 168) = v1;
  *(void *)(v2 - 160) = a1;
  *(_WORD *)(v2 - 152) = 2;
  return 0;
}

double OUTLINED_FUNCTION_15_49()
{
  *(_DWORD *)(v0 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  return result;
}

ValueMetadata *OUTLINED_FUNCTION_16_50()
{
  *(unsigned char *)(v1 - 208) = v0;
  return sub_25767AC64();
}

uint64_t Tensor.withUnsafeMetalBuffer<A>(_:)(void (*a1)(uint64_t))
{
  uint64_t v2 = v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v4 = *(void *)(*(void *)v1 + 16);
    uint64_t v5 = swift_retain_n();
    id v6 = sub_2576140FC(v5, v4, 0, 0);
    uint64_t v8 = v7;
    swift_release();
    if (qword_26A000948 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_26A030AB0;
    uint64_t v10 = *(void *)(*(void *)v2 + 16);
    v26[0] = *(void *)(v10 + 152);
    v27[0] = *(unsigned char *)(v10 + 160);
    uint64_t v11 = v10 + 168;
    swift_unknownObjectRetain();
    sub_2576A7810();
    sub_257657C50(v26, v27, v11, v9, v6, v8);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = type metadata accessor for TensorRepresentation();
    sub_25747B47C(*(void *)(*(void *)v2 + 16) + 168, (uint64_t)v26);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = swift_unknownObjectRetain();
    v27[0] = 1;
    uint64_t v17 = sub_25761627C(v16, (uint64_t)v26, 0x100000000uLL, v14, ObjectType, v13);
    type metadata accessor for TensorHandle();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    swift_retain();
    sub_2576139A8();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)uint64_t v2 = v18;
    swift_release();
  }
  uint64_t v19 = *(void *)(*(void *)v2 + 16);
  uint64_t v20 = swift_retain_n();
  id v21 = sub_2576140FC(v20, v19, 0, 0);
  swift_release();
  if (object_getClass(v21) != (Class)_TtC14NeuralNetworks21MPSGraphTensorStorage || v21 == 0)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v23 = sub_2575C6344();
    swift_unknownObjectRelease();
    if (v23)
    {
      uint64_t v24 = swift_unknownObjectRetain();
      a1(v24);
      return swift_unknownObjectRelease_n();
    }
  }
  return ((uint64_t (*)(void))a1)(0);
}

void sub_25768FC84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v3)
  {
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v25 = MEMORY[0x263F8EE78];
  sub_2574E7A34();
  uint64_t v6 = a1;
  if (a2 >= a1 && (v3 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = a3[6];
    uint64_t v8 = a3[7];
    uint64_t v9 = v7 + 32;
    uint64_t v10 = v8 + 32;
    uint64_t v11 = a3[8];
    uint64_t v12 = v11 + 32;
    unint64_t v13 = a1;
    while (a2 != v13)
    {
      if (v6 < 0) {
        goto LABEL_18;
      }
      if (v13 >= *(void *)(v7 + 16)) {
        goto LABEL_19;
      }
      if (v13 >= *(void *)(v8 + 16)) {
        goto LABEL_20;
      }
      uint64_t v14 = *(void *)(v9 + 8 * v13);
      uint64_t v15 = *(void *)(v10 + 8 * v13);
      if (v15 < v14) {
        goto LABEL_21;
      }
      if (v13 >= *(void *)(v11 + 16)) {
        goto LABEL_22;
      }
      uint64_t v16 = *(void *)(v12 + 8 * v13);
      unint64_t v17 = *(void *)(v25 + 16);
      if (v17 >= *(void *)(v25 + 24) >> 1)
      {
        uint64_t v22 = v8;
        uint64_t v23 = v7;
        uint64_t v20 = v10;
        uint64_t v21 = v9;
        uint64_t v19 = v12;
        sub_2574E7A34();
        uint64_t v12 = v19;
        uint64_t v10 = v20;
        uint64_t v9 = v21;
        uint64_t v8 = v22;
        uint64_t v7 = v23;
        uint64_t v6 = a1;
      }
      *(void *)(v25 + 16) = v17 + 1;
      uint64_t v18 = (void *)(v25 + 24 * v17);
      v18[4] = v14;
      void v18[5] = v15;
      v18[6] = v16;
      if (a2 == ++v13) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_24:
  __break(1u);
}

uint64_t sub_25768FE38()
{
  return OUTLINED_FUNCTION_1_94();
}

unint64_t sub_25768FE48()
{
  return 0xD000000000000013;
}

void sub_25768FE64()
{
}

void sub_25768FEC4()
{
  uint64_t v1 = *(void *)(v0[6] + 16);
  swift_retain();
  sub_25768FC84(0, v1, v0);
}

uint64_t sub_25768FF18(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  uint64_t v10 = *a8;
  char v11 = *((unsigned char *)a8 + 8);
  *(_DWORD *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = a6;
  *(void *)(v9 + 64) = a7;
  *(void *)(v9 + 72) = v10;
  *(unsigned char *)(v9 + 80) = v11;
  sub_257469238(a9, v9 + 88);
  return v9;
}

uint64_t sub_25768FF60()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25768FFA8()
{
  sub_25768FF60();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseSliceOperation()
{
  return self;
}

uint64_t sub_257690000()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_257690024()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_257690048()
{
  return sub_25761B124();
}

uint64_t sub_257690094()
{
  (*(void (**)(void))(*(void *)v0 + 136))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_257657270();
  sub_257657270();
  return sub_257657270();
}

uint64_t sub_257690130()
{
  return sub_257690094();
}

uint64_t sub_257690154(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 152) = a10;
  *(void *)(v11 + 160) = a11;
  if (!a3)
  {
    uint64_t v12 = OUTLINED_FUNCTION_1_94();
    a1 = sub_25761B148(v12, v13);
  }
  return OUTLINED_FUNCTION_0_80(a1, a2, a3, a4, a5, a6, a7, a8, v15, v16, v17, v18);
}

uint64_t sub_2576901C4()
{
  sub_25768FF60();
  sub_25747A4E0(*(void *)(v0 + 152));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SliceOperation()
{
  return self;
}

uint64_t sub_257690224(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 152) = a4;
  if (!a3) {
    a1 = sub_25761B148(0xD000000000000013, 0x80000002576CBE80);
  }
  return OUTLINED_FUNCTION_0_80(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11, v12, v13);
}

uint64_t sub_2576902A4()
{
  sub_25768FF60();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SliceGradientOperation()
{
  return self;
}

uint64_t sub_257690304(uint64_t a1)
{
  uint64_t result = sub_25769040C(&qword_26A003A58, (void (*)(void))type metadata accessor for SliceGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25769035C(uint64_t a1)
{
  uint64_t result = sub_25769040C((unint64_t *)&qword_26A002300, (void (*)(void))type metadata accessor for SliceOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576903B4(uint64_t a1)
{
  uint64_t result = sub_25769040C(&qword_26A0063E8, (void (*)(void))type metadata accessor for BaseSliceOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25769040C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_80(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  a11 = v17;
  a12 = v18;
  return sub_25768FF18(a1, a2, a3, v15, v14, v13, v12, &a11, v16);
}

uint64_t OUTLINED_FUNCTION_1_94()
{
  return 0x79625F6563696C73;
}

uint64_t sub_2576904A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional(v3))
  {
    uint64_t v5 = v4;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_unknownObjectRetain();
    uint64_t v8 = v7(a1, ObjectType, v5);
    swift_unknownObjectRelease();
    return v8;
  }
  else
  {
    sub_2576A7810();
    sub_257694BCC();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    return v11;
  }
}

uint64_t sub_25769058C(uint64_t a1)
{
  return sub_2576904A8(a1);
}

unint64_t sub_2576905A4(uint64_t a1)
{
  unint64_t result = sub_2576905CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2576905CC()
{
  unint64_t result = qword_26A001A68;
  if (!qword_26A001A68)
  {
    type metadata accessor for PassthroughOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001A68);
  }
  return result;
}

uint64_t static Tensor..! prefix(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  if (*(unsigned char *)(v3 + 160) != 12)
  {
    *(void *)&long long v9 = sub_25767AC64();
    *((void *)&v9 + 1) = v7;
    *(_OWORD *)uint64_t v10 = xmmword_2576ACB30;
    v10[16] = 6;
    uint64_t v11 = 12;
    LOBYTE(v12) = 0;
    char v14 = 3;
    sub_25746BF88();
  }
  *(void *)&long long v9 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/Unary"
                   "LogicalOps.swift";
  *((void *)&v9 + 1) = 117;
  v10[0] = 2;
  *(_OWORD *)&v10[8] = xmmword_2576C2590;
  uint64_t v11 = (uint64_t)"init(id:operator:operand:creationSite:)";
  uint64_t v12 = 39;
  char v13 = 2;
  type metadata accessor for UnaryLogicalOperation();
  swift_allocObject();
  swift_retain();
  uint64_t v4 = sub_2576A3C00(0, 0, 0, v3, &v9);
  uint64_t v5 = (uint64_t (**)(void, void))sub_257691038((unint64_t *)&qword_26A002790, (void (*)(uint64_t))type metadata accessor for UnaryLogicalOperation);
  sub_25747B47C(v3 + 168, (uint64_t)v8);
  return sub_257613838(v4, v5, 0, (uint64_t)v8, a2);
}

#error "2576907D0: call analysis failed (funcsize=123)"

uint64_t static Tensor..& infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_257690E88(a1, a2, (void (*)(_OWORD *, void *))static Tensor..& infix(_:_:));
}

uint64_t static Tensor..& infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_257690F70(a1, a2, (void (*)(uint64_t *, _OWORD *))static Tensor..& infix(_:_:));
}

#error "257690A28: call analysis failed (funcsize=123)"

uint64_t static Tensor..| infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_257690E88(a1, a2, (void (*)(_OWORD *, void *))static Tensor..| infix(_:_:));
}

uint64_t static Tensor..| infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_257690F70(a1, a2, (void (*)(uint64_t *, _OWORD *))static Tensor..| infix(_:_:));
}

#error "257690C80: call analysis failed (funcsize=123)"

uint64_t static Tensor..^ infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_257690E88(a1, a2, (void (*)(_OWORD *, void *))static Tensor..^ infix(_:_:));
}

uint64_t sub_257690E88(char a1, uint64_t *a2, void (*a3)(_OWORD *, void *))
{
  uint64_t v5 = *a2;
  int v11 = 0;
  memset(v10, 0, sizeof(v10));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(unsigned char *)(inited + 32) = a1;
  sub_25747B47C((uint64_t)v10, (uint64_t)v8);
  sub_2575A31EC(MEMORY[0x263F8EE78], inited, (uint64_t)v8, &v9);
  sub_25747B4E4((uint64_t)v10);
  *(void *)&v10[0] = v9;
  v8[0] = v5;
  a3(v10, v8);
  return swift_release();
}

uint64_t static Tensor..^ infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_257690F70(a1, a2, (void (*)(uint64_t *, _OWORD *))static Tensor..^ infix(_:_:));
}

uint64_t sub_257690F70(uint64_t *a1, char a2, void (*a3)(uint64_t *, _OWORD *))
{
  uint64_t v11 = *a1;
  int v10 = 0;
  memset(v9, 0, sizeof(v9));
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003F28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(unsigned char *)(inited + 32) = a2;
  sub_25747B47C((uint64_t)v9, (uint64_t)v7);
  sub_2575A31EC(MEMORY[0x263F8EE78], inited, (uint64_t)v7, &v8);
  sub_25747B4E4((uint64_t)v9);
  *(void *)&v9[0] = v8;
  a3(&v11, v9);
  return swift_release();
}

uint64_t sub_257691038(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_82(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va1, a13);
  va_start(va, a13);
  va_arg(va1, void);
  uint64_t v16 = v13;
  return sub_257599168((uint64_t *)va, (uint64_t *)va1);
}

uint64_t OUTLINED_FUNCTION_3_73()
{
  return static ShapeInference.broadcasting(_:_:)();
}

uint64_t OUTLINED_FUNCTION_5_72(__n128 a1)
{
  *(__n128 *)(v1 + 24) = a1;
  return type metadata accessor for BinaryLogicalOperation();
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_8_66(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_257613838(v7, v8, 0, (uint64_t)va, v6);
}

uint64_t OUTLINED_FUNCTION_9_69(__n128 a1)
{
  *(__n128 *)(v1 + 40) = a1;
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_10_59()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_55(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  a1[2].n128_u64[1] = v3;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_14_57(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_257664F64(a1, a2, a3, a4);
}

uint64_t sub_25769123C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
    goto LABEL_21;
  }
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  if (v4 < 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    sub_25746BF88();
  }
  uint64_t v7 = v20;
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  unint64_t v10 = a1;
  do
  {
    if (a2 == v10)
    {
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (a1 < 0) {
      goto LABEL_23;
    }
    if (v10 >= *(void *)(v9 + 16)) {
      goto LABEL_24;
    }
    uint64_t v11 = *(void *)(a4 + 32 + 8 * v10);
    uint64_t v12 = *(void *)(v8 + 16);
    if (v11 < -v12 || v11 >= v12) {
      goto LABEL_30;
    }
    unint64_t v14 = (v12 & (v11 >> 63)) + v11;
    if (v14 >= v12) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(a3 + 32 + 8 * v14);
    unint64_t v16 = *(void *)(v20 + 16);
    if (v16 >= *(void *)(v20 + 24) >> 1)
    {
      sub_2574E7154();
      uint64_t v8 = a3;
      uint64_t v9 = a4;
    }
    *(void *)(v20 + 16) = v16 + 1;
    *(void *)(v20 + 8 * v16 + 32) = v15;
    if (a2 < a1) {
      goto LABEL_26;
    }
    if ((uint64_t)v10 >= a2) {
      goto LABEL_27;
    }
    ++v10;
  }
  while (a2 != v10);
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_257691424(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2574E7154();
    uint64_t v5 = v13;
    uint64_t v6 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v7 = v8;
      uint64_t v9 = *(void *)(a2 + 16);
      if (v8 < -v9 || v7 >= v9) {
        sub_25746BF88();
      }
      unint64_t v11 = *(void *)(v13 + 16);
      if (v11 >= *(void *)(v13 + 24) >> 1) {
        sub_2574E7154();
      }
      *(void *)(v13 + 16) = v11 + 1;
      *(void *)(v13 + 8 * v11 + 32) = (v9 & (v7 >> 63)) + v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v5;
}

uint64_t sub_257691588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_2574E72F4();
    uint64_t v7 = v18;
    uint64_t v8 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v9 = *(void *)(a2 + 16);
      if (-v9 > a3 || v9 <= a3) {
        goto LABEL_19;
      }
      uint64_t v12 = *v8++;
      uint64_t v11 = v12;
      sub_2576A7810();
      uint64_t v13 = a2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257582A78();
        uint64_t v13 = v16;
      }
      unint64_t v14 = (v9 & (a3 >> 63)) + a3;
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        sub_2576A7810();
        sub_25746BF88();
      }
      if (v14 >= *(void *)(v13 + 16)) {
        goto LABEL_18;
      }
      *(void *)(v13 + 8 * v14 + 32) = v11;
      unint64_t v15 = *(void *)(v18 + 16);
      if (v15 >= *(void *)(v18 + 24) >> 1) {
        sub_2574E72F4();
      }
      *(void *)(v18 + 16) = v15 + 1;
      *(void *)(v18 + 8 * v15 + 32) = v13;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

void sub_25769173C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!*(void *)(*(void *)a2 + 16))
  {
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v3 = *(void *)(*(void *)a1 + 16) - 1;
  uint64_t v4 = *(void *)(*(void *)a2 + 32);
  *a3 = *(void *)a1;
  sub_2576A7810();
  TensorShape.subscript.setter(v4, v3);
}

uint64_t sub_2576917E8@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v7 = *(void *)(*a1 + 16);
  uint64_t result = v7 - 2;
  if (v7 < 2) {
    goto LABEL_10;
  }
  uint64_t v9 = *a3;
  if (*(void *)(*a3 + 16) < 2uLL) {
    goto LABEL_10;
  }
  uint64_t v12 = TensorShape.subscript.getter(result);
  uint64_t v21 = v12;
  uint64_t v19 = v6;
  uint64_t v13 = TensorShape.subscript.getter(v7 - 1);
  uint64_t v14 = *(void *)(v9 + 16);
  uint64_t v15 = TensorShape.subscript.getter(v14 - 2);
  uint64_t v18 = v9;
  uint64_t result = TensorShape.subscript.getter(v14 - 1);
  uint64_t v20 = result;
  if (a2)
  {
    uint64_t v21 = v13;
    uint64_t v13 = v12;
  }
  if (a4)
  {
    uint64_t v20 = v15;
    uint64_t v15 = result;
  }
  if (v13 != v15) {
    goto LABEL_10;
  }
  sub_2576A7810();
  sub_25746EC14();
  uint64_t v17 = v16;
  sub_2576A7810();
  sub_25746EC14();
  static ShapeInference.broadcasting(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v18)
  {
    uint64_t v17 = v18;
    sub_2576944A4(&v17, &v21, (uint64_t)&v19, a5);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    *a5 = 0;
  }
  return result;
}

uint64_t sub_25769198C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_18_44();
  sub_2576A7810();
  uint64_t v5 = sub_257691424(a2, v3);
  uint64_t v6 = sub_2576A7810();
  uint64_t v7 = *(void *)(sub_257487244(v6) + 16);
  swift_bridgeObjectRelease();
  if (v7 != *(void *)(v3 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    uint64_t v9 = 0;
    while (*(void *)(v5 + 8 * v9 + 32) < v7)
    {
      if (v8 == ++v9) {
        goto LABEL_6;
      }
    }
    goto LABEL_7;
  }
LABEL_6:
  sub_2576A7810();
  uint64_t result = sub_25769123C(0, v7, v3, v5);
LABEL_8:
  *unint64_t v2 = result;
  return result;
}

uint64_t static ShapeInference.broadcasting(_:_:)()
{
  OUTLINED_FUNCTION_18_44();
  uint64_t v3 = *v2;
  if ((sub_257654B3C(v1, *v2) & 1) == 0)
  {
    unint64_t v5 = *(void *)(v1 + 16);
    unint64_t v6 = *(void *)(v3 + 16);
    unint64_t v7 = v3 + 24;
    uint64_t v23 = v0;
    unint64_t v8 = MEMORY[0x263F8EE78];
    while (1)
    {
      unint64_t v9 = v5 - 1;
      if ((uint64_t)(v5 - 1) < 0)
      {
        uint64_t v10 = 0;
      }
      else
      {
        unint64_t v7 = *(void *)(v1 + 16);
        if (v9 >= v7) {
          goto LABEL_37;
        }
        uint64_t v10 = *(void *)(v1 + 24 + 8 * v5);
      }
      if (__OFSUB__(v9, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        unint64_t v24 = v9;
        char v27 = -1;
        uint64_t v30 = 0;
        unint64_t v28 = v7;
LABEL_39:
        uint64_t v29 = 0;
        char v31 = -1;
        char v32 = 4;
        OUTLINED_FUNCTION_6_10();
      }
      unint64_t v11 = v6 - 1;
      if (((v6 - 1) & 0x8000000000000000) != 0)
      {
        uint64_t v13 = 0;
      }
      else
      {
        unint64_t v12 = *(void *)(v3 + 16);
        if (v11 >= v12)
        {
          uint64_t v25 = 0;
          uint64_t v26 = 0;
          unint64_t v24 = v6 - 1;
          char v27 = -1;
          uint64_t v30 = 0;
          unint64_t v28 = v12;
          goto LABEL_39;
        }
        uint64_t v13 = *(void *)(v3 + 24 + 8 * v6);
      }
      if (__OFSUB__(v11, 1)) {
        goto LABEL_36;
      }
      if ((v9 & 0x8000000000000000) != 0) {
        break;
      }
      if ((v11 & 0x8000000000000000) != 0 || v13 == 1)
      {
        uint64_t v13 = v10;
LABEL_29:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_3_74();
          unint64_t v8 = v18;
        }
        unint64_t v15 = *(void *)(v8 + 16);
        unint64_t v17 = *(void *)(v8 + 24);
        unint64_t v16 = v15 + 1;
        if (v15 >= v17 >> 1)
        {
          OUTLINED_FUNCTION_2_83(v17);
          unint64_t v8 = v19;
        }
        goto LABEL_33;
      }
      if (v10 == 1) {
        goto LABEL_29;
      }
      if (v10 != v13)
      {
        uint64_t result = swift_bridgeObjectRelease();
        *uint64_t v23 = 0;
        return result;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_74();
        unint64_t v8 = v20;
      }
      unint64_t v15 = *(void *)(v8 + 16);
      unint64_t v14 = *(void *)(v8 + 24);
      unint64_t v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        OUTLINED_FUNCTION_2_83(v14);
        unint64_t v8 = v21;
      }
      uint64_t v13 = v10;
LABEL_33:
      *(void *)(v8 + 16) = v16;
      *(void *)(v8 + 8 * v15 + 32) = v13;
      unint64_t v5 = v9;
      unint64_t v6 = v11;
    }
    if ((v11 & 0x8000000000000000) != 0)
    {
      unint64_t v24 = v8;
      uint64_t v22 = sub_257694594((uint64_t)&v24);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v23 = v22;
      return result;
    }
    goto LABEL_29;
  }
  *uint64_t v0 = v1;
  return sub_2576A7810();
}

void static ShapeInference.broadcasting(_:toRank:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (a2 != v4)
  {
    if (a2 > v4)
    {
      sub_257696D2C(1, a2 - v4);
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_2576A7810();
      sub_2575A0A68();
      uint64_t v5 = sub_2576A7810();
      sub_2575A0D60(v5);
      swift_bridgeObjectRelease();
      uint64_t v6 = v12;
LABEL_15:
      *a3 = v6;
      return;
    }
    BOOL v7 = __OFSUB__(v4, a2);
    uint64_t v8 = v4 - a2;
    if (v7)
    {
      __break(1u);
    }
    else if ((v8 & 0x8000000000000000) == 0)
    {
      uint64_t v9 = sub_2574FCFD8(0, v8, v4);
      if (v10) {
        uint64_t v11 = v4;
      }
      else {
        uint64_t v11 = v9;
      }
      if (v4 >= v11)
      {
        if ((v11 & 0x8000000000000000) == 0)
        {
          sub_2576A7810();
          sub_25746EC14();
          goto LABEL_15;
        }
LABEL_19:
        __break(1u);
        return;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_18;
  }
  *a3 = *(void *)a1;
  sub_2576A7810();
}

uint64_t sub_257691DE0()
{
  OUTLINED_FUNCTION_18_44();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v2;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = *(void *)(v4 + 8 * v5 + 32);
      uint64_t v7 = *(void *)(v1 + 16);
      BOOL v8 = v6 >= ~v7 && v6 <= v7;
      if (!v8 || (uint64_t v9 = ((v7 + 1) & (v6 >> 63)) + v6, v7 < v9))
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v1 = 0;
        goto LABEL_18;
      }
      if (v9 < 0) {
        break;
      }
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || (unint64_t)v7 >= *(void *)(v1 + 24) >> 1)
      {
        sub_257471E14(isUniquelyReferenced_nonNull_native, v7 + 1, 1, v1);
        uint64_t v1 = v11;
      }
      uint64_t v12 = *(void *)(v1 + 16) - v9;
      if (v12 < 0) {
        goto LABEL_20;
      }
      ++v5;
      uint64_t v13 = v1 + 8 * v9;
      memmove((void *)(v13 + 40), (const void *)(v13 + 32), 8 * v12);
      ++*(void *)(v1 + 16);
      *(void *)(v13 + 32) = 1;
      if (v3 == v5)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    OUTLINED_FUNCTION_2_64();
    uint64_t result = OUTLINED_FUNCTION_1_79();
    __break(1u);
  }
  else
  {
    uint64_t result = sub_2576A7810();
LABEL_18:
    *uint64_t v0 = v1;
  }
  return result;
}

void sub_257691F40()
{
  OUTLINED_FUNCTION_18_44();
  unint64_t v4 = *(void *)(v3 + 16);
  unint64_t v5 = *(void *)(v1 + 16);
  if (v5 < v4) {
    goto LABEL_2;
  }
  uint64_t v34 = v1;
  if (v4)
  {
    uint64_t v25 = v3;
    sub_2576A7810();
    sub_2576A7810();
    sub_2576964EC(&v25);
    uint64_t v6 = v25;
    uint64_t v7 = *(void *)(v25 + 16);
    if (!v7)
    {
LABEL_33:
      swift_release();
      *uint64_t v0 = v1;
      return;
    }
    uint64_t v8 = *(void *)(v25 + 32);
    unint64_t v5 = *(void *)(v1 + 16);
    if (v8 >= -(uint64_t)v5 && v8 < (uint64_t)v5)
    {
      uint64_t v11 = 0;
      uint64_t v12 = v7 - 1;
      while (1)
      {
        uint64_t v2 = (v5 & (v8 >> 63)) + v8;
        if (v2 >= (uint64_t)v5) {
          break;
        }
        if (v2 < -(uint64_t)v5) {
          goto LABEL_77;
        }
        unint64_t v13 = (v5 & (v2 >> 63)) + v2;
        if (v13 >= v5) {
          goto LABEL_64;
        }
        if (*(void *)(v1 + 8 * v13 + 32) != 1) {
          break;
        }
        if (v2 < 0) {
          goto LABEL_70;
        }
        if (v2 >= v5) {
          goto LABEL_73;
        }
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if (!isUniquelyReferenced_nonNull_native || (int64_t)(v5 - 1) > *(void *)(v1 + 24) >> 1)
        {
          sub_257471E14(isUniquelyReferenced_nonNull_native, v5, 1, v1);
          uint64_t v1 = v15;
        }
        uint64_t v16 = *(void *)(v1 + 16) - (v2 + 1);
        if (v16 < 0)
        {
          OUTLINED_FUNCTION_2_64();
          OUTLINED_FUNCTION_1_79();
          __break(1u);
LABEL_77:
          uint64_t v27 = 0;
          uint64_t v25 = v2;
LABEL_78:
          uint64_t v26 = 0;
          char v28 = -1;
          uint64_t v30 = 0;
          uint64_t v31 = 0;
          unint64_t v29 = v5;
          char v32 = -1;
LABEL_79:
          char v33 = 4;
          OUTLINED_FUNCTION_6_10();
        }
        memmove((void *)(v1 + 32 + 8 * v2), (const void *)(v1 + 32 + 8 * (v2 + 1)), 8 * v16);
        uint64_t v17 = *(void *)(v1 + 16);
        unint64_t v5 = v17 - 1;
        *(void *)(v1 + 16) = v17 - 1;
        uint64_t v34 = v1;
        if (v12 == v11) {
          goto LABEL_33;
        }
        if ((unint64_t)(v11 + 1) >= *(void *)(v6 + 16)) {
          goto LABEL_65;
        }
        uint64_t v8 = *(void *)(v6 + 8 * v11++ + 40);
        if (v8 < 1 - v17 || v8 >= (uint64_t)v5) {
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
LABEL_9:
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_2:
    *uint64_t v0 = 0;
    return;
  }
  if (!v5)
  {
    sub_2576A7810();
    uint64_t v10 = 0;
    goto LABEL_62;
  }
  uint64_t v10 = 0;
  while (1)
  {
    uint64_t v6 = v10 + 1;
    if (*(void *)(v1 + 32 + 8 * v10) == 1) {
      break;
    }
    ++v10;
    if (v5 == v6)
    {
      sub_2576A7810();
      uint64_t v10 = v5;
      goto LABEL_62;
    }
  }
  if (v5 - 1 == v10)
  {
    sub_2576A7810();
    goto LABEL_61;
  }
  if (v6 < -(uint64_t)v5)
  {
    sub_2576A7810();
    goto LABEL_75;
  }
  sub_2576A7810();
  if (v6 >= v5)
  {
LABEL_75:
    uint64_t v27 = 0;
    uint64_t v25 = v6;
    goto LABEL_78;
  }
  uint64_t v6 = v10 + 5;
  while (1)
  {
    unint64_t v19 = v6 - 4;
    if (v6 - 4 >= v5)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      if (__CFADD__(v5, v2)) {
        __break(1u);
      }
LABEL_73:
      __break(1u);
LABEL_74:
      v6 -= 4;
      goto LABEL_75;
    }
    uint64_t v20 = *(void *)(v1 + 8 * v6);
    if (v20 != 1)
    {
      if (v19 != v10)
      {
        if (v10 < -(uint64_t)v5 || v10 >= (uint64_t)v5)
        {
          uint64_t v27 = 0;
          uint64_t v25 = v10;
          goto LABEL_78;
        }
        uint64_t v2 = (v5 & (v10 >> 63)) + v10;
        if (v2 >= v5) {
          goto LABEL_67;
        }
        unint64_t v5 = *(void *)(v1 + 32 + 8 * v2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v1 = v24;
        }
        if ((unint64_t)v2 >= *(void *)(v1 + 16)) {
          goto LABEL_68;
        }
        *(void *)(v1 + 8 * v2 + 32) = v20;
        if (v19 >= *(void *)(v1 + 16))
        {
          uint64_t v26 = 0;
          uint64_t v27 = 0;
          uint64_t v25 = v6 - 4;
          OUTLINED_FUNCTION_11_62();
          goto LABEL_79;
        }
        *(void *)(v1 + 8 * v6) = v5;
        uint64_t v34 = v1;
      }
      if (__OFADD__(v10++, 1)) {
        goto LABEL_66;
      }
    }
    unint64_t v5 = *(void *)(v1 + 16);
    BOOL v23 = v6 - 3 >= v5;
    if (v6 - 3 == v5) {
      break;
    }
    ++v6;
    if (v23) {
      goto LABEL_74;
    }
  }
  unint64_t v5 = v6 - 3;
LABEL_61:
  if ((uint64_t)v5 < v10) {
    goto LABEL_69;
  }
LABEL_62:
  sub_257692C2C(v10, v5);
  *uint64_t v0 = v34;
}

uint64_t static ShapeInference.broadcastingAxes(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (sub_257654B3C(*a1, *a2)) {
    return MEMORY[0x263F8EE78];
  }
  if (*(void *)(v3 + 16) <= *(void *)(v2 + 16)) {
    uint64_t v5 = *(void *)(v2 + 16);
  }
  else {
    uint64_t v5 = *(void *)(v3 + 16);
  }
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v6 = MEMORY[0x263F8EE78];
  sub_257471CF8(0, v5, 0, MEMORY[0x263F8EE78]);
  uint64_t v4 = v7;
  if (*(void *)(v3 + 16) <= *(void *)(v2 + 16)) {
    uint64_t v8 = *(void *)(v2 + 16);
  }
  else {
    uint64_t v8 = *(void *)(v3 + 16);
  }
  sub_257471CF8(0, v8, 0, v6);
  uint64_t v10 = v9;
  unint64_t v11 = *(void *)(v2 + 16);
  unint64_t v12 = *(void *)(v3 + 16);
  if (v11 >= v12)
  {
    if (v12 < v11)
    {
      uint64_t v14 = sub_257696D2C(1, v11 - v12);
      sub_257693070(0, 0, v14);
    }
  }
  else
  {
    uint64_t v13 = sub_257696D2C(1, v12 - v11);
    sub_257693070(0, 0, v13);
  }
  sub_2576A7810();
  sub_2576A7810();
  unint64_t v15 = *(void *)(v2 + 16);
  if (v15)
  {
    uint64_t v16 = 4;
    while (1)
    {
      unint64_t v17 = v16 - 4;
      if (v16 - 4 < -(uint64_t)v15 || v17 >= v15) {
        goto LABEL_40;
      }
      unint64_t v19 = *(void *)(v3 + 16);
      if (v17 == v19) {
        goto LABEL_39;
      }
      if (v17 >= v19) {
        goto LABEL_40;
      }
      uint64_t v20 = *(void *)(v3 + 8 * v16);
      if (v20 == 1) {
        break;
      }
      uint64_t v25 = *(void *)(v2 + 8 * v16);
      if (v25 == 1)
      {
        unint64_t v22 = *(void *)(v4 + 16);
        unint64_t v26 = *(void *)(v4 + 24);
        unint64_t v23 = v22 + 1;
        if (v22 >= v26 >> 1)
        {
          char v32 = OUTLINED_FUNCTION_263(v26);
          sub_257471CF8(v32, v33, v34, v4);
          uint64_t v4 = v24;
        }
        else
        {
          uint64_t v24 = v4;
        }
        goto LABEL_27;
      }
      if (v25 != v20)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return 0;
      }
LABEL_29:
      unint64_t v15 = *(void *)(v2 + 16);
      uint64_t v27 = v16 + 1;
      uint64_t v28 = v16 - 3;
      ++v16;
      if (v28 == v15)
      {
        unint64_t v35 = v27 - 4;
        goto LABEL_34;
      }
    }
    unint64_t v22 = *(void *)(v10 + 16);
    unint64_t v21 = *(void *)(v10 + 24);
    unint64_t v23 = v22 + 1;
    if (v22 >= v21 >> 1)
    {
      char v29 = OUTLINED_FUNCTION_263(v21);
      sub_257471CF8(v29, v30, v31, v10);
      uint64_t v10 = v24;
    }
    else
    {
      uint64_t v24 = v10;
    }
LABEL_27:
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 8 * v22 + 32) = v17;
    goto LABEL_29;
  }
  unint64_t v35 = 0;
LABEL_34:
  unint64_t v36 = *(void *)(v3 + 16);
  if (v35 != v36)
  {
    if (v35 < v36)
    {
LABEL_39:
      sub_2576A8B60();
      __break(1u);
    }
LABEL_40:
    OUTLINED_FUNCTION_6_10();
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t sub_257692648(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  if (-v4 > a3 || v4 <= a3)
  {
    OUTLINED_FUNCTION_2_70();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v6 = (v4 & (a3 >> 63)) + a3;
  if (v4 < v6) {
    return 0;
  }
  uint64_t v8 = TensorShape.subscript.getter((v4 & (a3 >> 63)) + a3);
  uint64_t v9 = v8 / a2;
  if (a2 == -1)
  {
    if (v8 != 0x8000000000000000) {
      goto LABEL_11;
    }
    __break(1u);
  }
  if (v8 % a2) {
    return 0;
  }
LABEL_11:
  sub_2576A7810();
  TensorShape.subscript.setter(v9, v6);
  return sub_257608F28(v3, a2);
}

uint64_t sub_257692740(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  uint64_t v5 = *a1;
  uint64_t v6 = *(void *)(*a1 + 16);
  if (-v6 <= a3 && v6 > a3)
  {
    uint64_t v9 = (v6 & (a3 >> 63)) + a3;
    uint64_t result = TensorShape.subscript.getter(v9);
    uint64_t v10 = *(void *)(a2 + 16);
    if (v10)
    {
      uint64_t v11 = 0;
      unint64_t v12 = (uint64_t *)(a2 + 32);
      do
      {
        uint64_t v13 = *v12++;
        BOOL v14 = __OFADD__(v11, v13);
        v11 += v13;
        if (v14)
        {
          __break(1u);
          return result;
        }
        --v10;
      }
      while (v10);
      if (result != v11) {
        return 0;
      }
      goto LABEL_10;
    }
    if (!result)
    {
LABEL_10:
      sub_2576A7810();
      return sub_257691588(a2, v5, v9);
    }
    return 0;
  }
  return result;
}

void sub_257692804(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v8 = a1 + 32;
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v9 = *(void *)(v7 + 16);
    while (*(void *)(*(void *)(a1 + 8 * v6 + 32) + 16) == v9)
    {
      if (v4 == ++v6)
      {
        sub_2576A7810();
        sub_2576A7810();
        for (uint64_t i = 0; i != v4; ++i)
        {
          uint64_t v11 = *(void *)(v8 + 8 * i);
          if (*(void *)(v11 + 16) != v9) {
            goto LABEL_19;
          }
          if (v9)
          {
            uint64_t v12 = 0;
            uint64_t v13 = v11 + 32;
            while (a2 == v12 || *(void *)(v13 + 8 * v12) == *(void *)(v7 + 8 * v12 + 32))
            {
              if (v9 == ++v12) {
                goto LABEL_12;
              }
            }
LABEL_19:
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
LABEL_12:
          ;
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v7 + 16);
        if (-v14 <= a2 && v14 > a2)
        {
          uint64_t v16 = 0;
          uint64_t v17 = (v14 & (a2 >> 63)) + a2;
          do
          {
            uint64_t v18 = *(void *)(*(void *)v8 + 16);
            if (v17 < -v18 || v17 >= v18) {
              goto LABEL_48;
            }
            unint64_t v20 = (v18 & (v17 >> 63)) + v17;
            if (v20 >= v18)
            {
              __break(1u);
LABEL_43:
              __break(1u);
              goto LABEL_44;
            }
            uint64_t v21 = *(void *)(*(void *)v8 + 8 * v20 + 32);
            BOOL v22 = __OFADD__(v16, v21);
            v16 += v21;
            if (v22) {
              goto LABEL_43;
            }
            v8 += 8;
            --v4;
          }
          while (v4);
          if (v17 < -v14 || v17 >= v14)
          {
            OUTLINED_FUNCTION_2_70();
            goto LABEL_49;
          }
          if ((v17 & 0x8000000000000000) == 0 || (BOOL v22 = __OFADD__(v14, v17), v17 += v14, !v22))
          {
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              if ((v17 & 0x8000000000000000) == 0) {
                goto LABEL_40;
              }
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
LABEL_44:
            sub_257582A78();
            uint64_t v7 = v24;
            if (v17 < 0) {
              goto LABEL_45;
            }
LABEL_40:
            if ((unint64_t)v17 < *(void *)(v7 + 16))
            {
              *(void *)(v7 + 8 * v17 + 32) = v16;
              goto LABEL_22;
            }
LABEL_46:
            __break(1u);
          }
          __break(1u);
LABEL_48:
          sub_2576A7810();
          sub_2576A7810();
LABEL_49:
          OUTLINED_FUNCTION_6_10();
        }
LABEL_20:
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  uint64_t v7 = 0;
LABEL_22:
  *a3 = v7;
}

uint64_t *sub_257692A38@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4 = a4;
  uint64_t v5 = *result;
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    if ((a3 & 1) == 0)
    {
LABEL_18:
      uint64_t v22 = v13;
      MEMORY[0x270FA5388](result);
      v19[2] = &v22;
      sub_2576A7810();
      uint64_t v8 = sub_2576547D8((void (*)(void *__return_ptr, void))sub_257696DE8, (uint64_t)v19, v5);
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
      goto LABEL_19;
    }
LABEL_15:
    sub_2576932B8(v13, 1, v5, &v22);
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    uint64_t v8 = v22;
    goto LABEL_19;
  }
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(v5 + 16);
  if (v9 >= -v10 && v9 < v10)
  {
    int v20 = a3;
    uint64_t v21 = a4;
    sub_2576A7810();
    sub_257471E14(0, 1, 1, MEMORY[0x263F8EE78]);
    uint64_t v13 = v12;
    uint64_t v14 = 0;
    unint64_t v15 = *(void *)(v12 + 16);
    uint64_t v16 = v6 - 1;
    while (1)
    {
      unint64_t v17 = *(void *)(v13 + 24);
      if (v15 >= v17 >> 1)
      {
        sub_257471E14(v17 > 1, v15 + 1, 1, v13);
        uint64_t v13 = v18;
      }
      *(void *)(v13 + 16) = v15 + 1;
      *(void *)(v13 + 8 * v15 + 32) = (v10 & (v9 >> 63)) + v9;
      if (v16 == v14) {
        break;
      }
      uint64_t v9 = *(void *)(a2 + 8 * v14 + 40);
      if (v9 >= -v10)
      {
        ++v14;
        ++v15;
        if (v9 < v10) {
          continue;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
      uint64_t v8 = 0;
      uint64_t v4 = v21;
      goto LABEL_19;
    }
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    uint64_t v4 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_19:
  uint64_t *v4 = v8;
  return result;
}

void sub_257692C2C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v4 + 24) >> 1)
  {
    if (!v8) {
      goto LABEL_17;
    }
  }
  else
  {
    if (v5 <= v9) {
      uint64_t v11 = v5 + v8;
    }
    else {
      uint64_t v11 = v5;
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    uint64_t v4 = v12;
    if (!v8) {
      goto LABEL_17;
    }
  }
  uint64_t v13 = *(void *)(v4 + 16);
  if (__OFSUB__(v13, a2)) {
    goto LABEL_23;
  }
  sub_25760A020(v4 + 32 + 8 * a2, v13 - a2, v4 + 32 + 8 * a1);
  uint64_t v14 = *(void *)(v4 + 16);
  BOOL v15 = __OFADD__(v14, v8);
  uint64_t v16 = v14 + v8;
  if (!v15)
  {
    *(void *)(v4 + 16) = v16;
LABEL_17:
    *uint64_t v2 = v4;
    return;
  }
LABEL_24:
  __break(1u);
}

void sub_257692D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      uint64_t v13 = v6 + v9;
    }
    else {
      uint64_t v13 = v6;
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    uint64_t v5 = v14;
  }
  BOOL v15 = (void *)(v5 + 32 + 8 * a1);
  if (!v9) {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(v5 + 16);
  if (__OFSUB__(v16, a2)) {
    goto LABEL_22;
  }
  sub_25760A020(v5 + 32 + 8 * a2, v16 - a2, v15 + 1);
  uint64_t v17 = *(void *)(v5 + 16);
  BOOL v18 = __OFADD__(v17, v9);
  uint64_t v19 = v17 + v9;
  if (!v18)
  {
    *(void *)(v5 + 16) = v19;
LABEL_16:
    *BOOL v15 = a3;
    *uint64_t v3 = v5;
    return;
  }
LABEL_23:
  __break(1u);
}

void sub_257692E14()
{
  OUTLINED_FUNCTION_4_31();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v6 = v2;
  uint64_t v7 = *v0;
  uint64_t v8 = *(void *)(*v0 + 16);
  if (v8 < v2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = v1;
  uint64_t v10 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v8, v11))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v12 = v3;
  uint64_t v13 = v4;
  uint64_t v21 = v5;
  if (!swift_isUniquelyReferenced_nonNull_native() || v8 + v11 > *(void *)(v7 + 24) >> 1)
  {
    sub_257472418();
    uint64_t v7 = v14;
  }
  uint64_t v15 = v7 + 32;
  swift_arrayDestroy();
  if (!v11) {
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)(v7 + 16);
  if (__OFSUB__(v16, v6)) {
    goto LABEL_19;
  }
  sub_25760A25C(v15 + 24 * v6, v16 - v6);
  uint64_t v17 = *(void *)(v7 + 16);
  BOOL v18 = __OFADD__(v17, v11);
  uint64_t v19 = v17 + v11;
  if (!v18)
  {
    *(void *)(v7 + 16) = v19;
LABEL_13:
    *(void *)(v7 + 32 + 24 * v9) = v12;
    uint64_t v20 = v15 + 24 * v9;
    *(void *)(v20 + 8) = v13;
    *(void *)(v20 + 16) = v21;
    *uint64_t v0 = v7;
    OUTLINED_FUNCTION_6_30();
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_257692F38()
{
  OUTLINED_FUNCTION_4_31();
  if (v1 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v6 = v2;
  uint64_t v7 = *v0;
  uint64_t v8 = *(void *)(*v0 + 16);
  if (v8 < v2)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = v1;
  uint64_t v10 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v11 = v4;
  uint64_t v12 = (v5 >> 1) - v4;
  if (__OFSUB__(v5 >> 1, v4))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v13 = v12 - v10;
  if (__OFSUB__(v12, v10))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v14 = v8 + v13;
  if (__OFADD__(v8, v13))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    return;
  }
  uint64_t v26 = v3;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v14 > *(void *)(v7 + 24) >> 1)
  {
    if (v8 <= v14) {
      uint64_t v16 = v8 + v13;
    }
    else {
      uint64_t v16 = v8;
    }
    sub_257471CF8(isUniquelyReferenced_nonNull_native, v16, 1, v7);
    uint64_t v7 = v17;
  }
  BOOL v18 = (char *)(v7 + 32 + 8 * v9);
  if (!v13) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v7 + 16);
  uint64_t v20 = v19 - v6;
  if (__OFSUB__(v19, v6)) {
    goto LABEL_31;
  }
  uint64_t v21 = &v18[8 * v12];
  uint64_t v22 = (char *)(v7 + 32 + 8 * v6);
  if (v21 != v22 || &v22[8 * v20] <= v21)
  {
    memmove(v21, v22, 8 * v20);
    uint64_t v19 = *(void *)(v7 + 16);
  }
  BOOL v24 = __OFADD__(v19, v13);
  uint64_t v25 = v19 + v13;
  if (v24) {
    goto LABEL_32;
  }
  *(void *)(v7 + 16) = v25;
LABEL_22:
  if (v12 >= 1) {
    memcpy(v18, (const void *)(v26 + 8 * v11), 8 * v12);
  }
  swift_unknownObjectRelease();
  *uint64_t v0 = v7;
  OUTLINED_FUNCTION_6_30();
}

void sub_257693070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = v10 - v8;
  if (__OFSUB__(v10, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = v6 + v11;
  if (__OFADD__(v6, v11))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v12 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v12) {
      uint64_t v14 = v6 + v11;
    }
    else {
      uint64_t v14 = v6;
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v14, 1, v5);
    uint64_t v5 = v15;
  }
  uint64_t v16 = (char *)(v5 + 32 + 8 * a1);
  if (!v11) {
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(v5 + 16);
  if (__OFSUB__(v17, a2)) {
    goto LABEL_25;
  }
  sub_25760A020(v5 + 32 + 8 * a2, v17 - a2, &v16[8 * v10]);
  uint64_t v18 = *(void *)(v5 + 16);
  BOOL v19 = __OFADD__(v18, v11);
  uint64_t v20 = v18 + v11;
  if (v19)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  *(void *)(v5 + 16) = v20;
LABEL_16:
  if (!v10)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return;
  }
  if (*(void *)(a3 + 16) == v10)
  {
    memcpy(v16, (const void *)(a3 + 32), 8 * v10);
    goto LABEL_19;
  }
LABEL_27:
  __break(1u);
}

void sub_257693198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = a3;
  uint64_t v11 = a3 - v9;
  if (__OFSUB__(a3, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v12 = v7 + v11;
  if (__OFADD__(v7, v11))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v12 > *(void *)(v6 + 24) >> 1)
  {
    if (v7 <= v12) {
      uint64_t v15 = v7 + v11;
    }
    else {
      uint64_t v15 = v7;
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v15, 1, v6);
    uint64_t v6 = v16;
  }
  uint64_t v17 = (void *)(v6 + 32 + 8 * a1);
  uint64_t v18 = &v17[v10];
  if (!v11)
  {
LABEL_16:
    if (v10 < 1)
    {
LABEL_19:
      uint64_t *v4 = v6;
      return;
    }
    while (v10)
    {
      *v17++ = a4;
      --v10;
      if (v17 >= v18) {
        goto LABEL_19;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  if (__OFSUB__(v19, a2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_25760A020(v6 + 32 + 8 * a2, v19 - a2, &v17[v10]);
  uint64_t v20 = *(void *)(v6 + 16);
  BOOL v21 = __OFADD__(v20, v11);
  uint64_t v22 = v20 + v11;
  if (!v21)
  {
    *(void *)(v6 + 16) = v22;
    goto LABEL_16;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_2576932B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = a3;
  unint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t result = sub_2576A7810();
    goto LABEL_17;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a3 + 16);
  if (v8 < -v9)
  {
    sub_2576A7810();
    sub_2576A7810();
LABEL_23:
    sub_25746BF88();
  }
  sub_2576A7810();
  sub_2576A7810();
  if (v8 >= v9) {
    goto LABEL_23;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
LABEL_21:
    sub_257582A78();
    uint64_t v4 = v15;
  }
  uint64_t v11 = 0;
  while (1)
  {
    uint64_t v12 = (v9 & (v8 >> 63)) + v8;
    if (v12 < 0)
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if ((unint64_t)v12 >= *(void *)(v4 + 16)) {
      goto LABEL_19;
    }
    *(void *)(v4 + 32 + 8 * v12) = a2;
    if (v6 - 1 == v11) {
      break;
    }
    if (v11 + 1 >= v6) {
      goto LABEL_20;
    }
    uint64_t v8 = *(void *)(a1 + 8 * v11 + 40);
    uint64_t v9 = *(void *)(v4 + 16);
    ++v11;
    if (v8 < -v9 || v8 >= v9) {
      goto LABEL_23;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_17:
  *a4 = v4;
  return result;
}

uint64_t sub_25769343C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return a2;
  }
  if (*(void *)(a3 + 32) == result) {
    return 0;
  }
  if (v3 == 1) {
    return a2;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v5 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    if (*(void *)(a3 + 8 * i) == result) {
      return 0;
    }
    if (v5 == v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

void static ShapeInference.broadcasting(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_4_31();
  a21 = v24;
  a22 = v28;
  char v29 = v27;
  uint64_t v30 = *v26;
  unint64_t v31 = *(void *)(*v26 + 16);
  uint64_t v32 = *v25;
  unint64_t v33 = *(void *)(*v25 + 16);
  if (v31 < v33)
  {
    *uint64_t v27 = 0;
    goto LABEL_36;
  }
  if (sub_257654B3C(*v25, *v26))
  {
    *char v29 = v32;
    OUTLINED_FUNCTION_6_30();
    sub_2576A7810();
    return;
  }
  uint64_t v51 = v29;
  sub_2576A7810();
  sub_2576A7810();
  unint64_t v35 = v31 + 3;
  uint64_t v36 = MEMORY[0x263F8EE78];
  while (1)
  {
    unint64_t v37 = v33;
    if (v33) {
      break;
    }
    if (v35 == 3) {
      goto LABEL_39;
    }
    unint64_t v33 = 0;
    uint64_t v38 = 0;
LABEL_12:
    if ((int64_t)(v35 - 4) >= *(void *)(v30 + 16)) {
      goto LABEL_38;
    }
    uint64_t v39 = *(void *)(v30 + 8 * v35);
    if (!v37)
    {
LABEL_22:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_74();
        uint64_t v36 = v44;
      }
      OUTLINED_FUNCTION_19_44();
      if (v41)
      {
        OUTLINED_FUNCTION_2_83(v42);
        uint64_t v36 = v45;
      }
      uint64_t v38 = v39;
      goto LABEL_32;
    }
    if (v39 == 1)
    {
      if (v38 != 1) {
        goto LABEL_35;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_74();
        uint64_t v36 = v46;
      }
      OUTLINED_FUNCTION_19_44();
      if (v41)
      {
        OUTLINED_FUNCTION_2_83(v40);
        uint64_t v36 = v47;
      }
      uint64_t v38 = 1;
    }
    else
    {
      if (v38 == 1) {
        goto LABEL_22;
      }
      if (v38 != v39)
      {
LABEL_35:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v51 = 0;
        goto LABEL_36;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_3_74();
        uint64_t v36 = v48;
      }
      OUTLINED_FUNCTION_19_44();
      if (v41)
      {
        OUTLINED_FUNCTION_2_83(v43);
        uint64_t v36 = v49;
      }
    }
LABEL_32:
    *(void *)(v36 + 16) = v22;
    *(void *)(v36 + 8 * v23 + 32) = v38;
    --v35;
  }
  --v33;
  if ((int64_t)(v37 - 1) < *(void *)(v32 + 16))
  {
    if (v35 == 3) {
      goto LABEL_35;
    }
    uint64_t v38 = *(void *)(v32 + 32 + 8 * v33);
    goto LABEL_12;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  a10 = v36;
  uint64_t v50 = sub_257694594((uint64_t)&a10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v51 = v50;
LABEL_36:
  OUTLINED_FUNCTION_6_30();
}

void sub_2576936D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v7 = *(void **)a1;
  if (*(void *)(*(void *)a1 + 16) != 4
    || (uint64_t v8 = *(void **)a2, *(void *)(*(void *)a2 + 16) != 4)
    || v7[6] < v8[6] && v7[7] < v8[7])
  {
    uint64_t v11 = 0;
    goto LABEL_6;
  }
  char v29 = a7;
  sub_2576A7810();
  unint64_t v12 = 0;
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  unint64_t v13 = 4;
  while (1)
  {
    if (v12 >= v13)
    {
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v14 = v7[v12 + 4];
    if (v12)
    {
      if (v12 == 3)
      {
        uint64_t v16 = a4;
        uint64_t v15 = a6;
        uint64_t v17 = v8 + 7;
        if (v8[2] < 4uLL) {
          goto LABEL_44;
        }
      }
      else
      {
        uint64_t v15 = a5;
        uint64_t v16 = a3;
        uint64_t v17 = v8 + 6;
        if (v12 == 1) {
          goto LABEL_24;
        }
      }
      if (v15 + 0x4000000000000000 < 0) {
        goto LABEL_39;
      }
      BOOL v18 = __OFADD__(v14, 2 * v15);
      uint64_t v19 = v14 + 2 * v15;
      if (v18) {
        goto LABEL_40;
      }
      uint64_t v20 = *v17;
      BOOL v18 = __OFSUB__(v19, v20);
      uint64_t v21 = v19 - v20;
      if (v18) {
        goto LABEL_41;
      }
      if (!v16) {
        goto LABEL_42;
      }
      if (v21 == 0x8000000000000000 && v16 == -1) {
        goto LABEL_45;
      }
      uint64_t v23 = v21 / v16;
      uint64_t v14 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_43;
      }
      if (v14 < 1) {
        break;
      }
    }
LABEL_24:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257471CF8(0, v11[2] + 1, 1, (uint64_t)v11);
      uint64_t v11 = v26;
    }
    unint64_t v25 = v11[2];
    unint64_t v24 = v11[3];
    if (v25 >= v24 >> 1)
    {
      sub_257471CF8(v24 > 1, v25 + 1, 1, (uint64_t)v11);
      uint64_t v11 = v27;
    }
    ++v12;
    void v11[2] = v25 + 1;
    v11[v25 + 4] = v14;
    unint64_t v13 = v7[2];
    if (v12 == v13)
    {
      swift_bridgeObjectRelease();
      if (v7[2] >= 2uLL)
      {
        if (v11[2] <= 1uLL) {
          goto LABEL_49;
        }
        unint64_t v12 = v7[5];
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_34:
          if (v11[2] >= 2uLL)
          {
            v11[5] = v12;
            goto LABEL_37;
          }
          __break(1u);
LABEL_49:
          OUTLINED_FUNCTION_11_62();
          OUTLINED_FUNCTION_6_10();
        }
LABEL_47:
        sub_257582A78();
        uint64_t v11 = v28;
        goto LABEL_34;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v12 == 4) {
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
LABEL_37:
  a7 = v29;
LABEL_6:
  *a7 = v11;
}

uint64_t sub_25769398C()
{
  OUTLINED_FUNCTION_18_44();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3 == *(void *)(v1 + 16))
  {
    if (v3)
    {
      uint64_t v4 = v2;
      sub_2576A7810();
      sub_2576A7810();
      uint64_t v5 = 0;
      unint64_t v6 = (void *)(v4 + 16 * v3 + 24);
      uint64_t v7 = -v3;
      while (1)
      {
        uint64_t v8 = *(v6 - 1);
        uint64_t v9 = v8 + *v6;
        if (__OFADD__(v8, *v6)) {
          break;
        }
        uint64_t v10 = *(void *)(v1 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v1 = v15;
        }
        unint64_t v11 = v5 + v10 - 1;
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_13;
        }
        if (v11 >= *(void *)(v1 + 16)) {
          goto LABEL_14;
        }
        uint64_t v12 = *(void *)(v1 + 32 + 8 * v11);
        BOOL v13 = __OFADD__(v12, v9);
        uint64_t v14 = v12 + v9;
        if (v13) {
          goto LABEL_15;
        }
        v6 -= 2;
        *(void *)(v1 + 32 + 8 * v11) = v14;
        if (v7 == --v5) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = sub_2576A7810();
    }
    *uint64_t v0 = v1;
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t sub_257693AE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17)
{
  uint64_t v17 = *(void **)a1;
  unint64_t v18 = *(void *)(*(void *)a1 + 16);
  if (v18 <= 1 || (uint64_t v19 = (void *)*a2, v20 = *(void *)(*a2 + 16), v20 <= 1))
  {
    sub_2576A7810();
    goto LABEL_58;
  }
  uint64_t v21 = v19[5];
  if ((unsigned __int128)(v21 * (__int128)a10) >> 64 != (v21 * a10) >> 63) {
    goto LABEL_53;
  }
  if (v17[5] != v21 * a10)
  {
    sub_2576A8730();
    sub_2576A7B00();
    OUTLINED_FUNCTION_22_42();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_56();
    OUTLINED_FUNCTION_22_42();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_56();
    OUTLINED_FUNCTION_22_42();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    uint64_t v58 = sub_2576A7B00();
    OUTLINED_FUNCTION_21_44(v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, a11);
    goto LABEL_66;
  }
  if (v18 != 4 || v20 != 4) {
LABEL_66:
  }
    sub_25746BF88();
  uint64_t v73 = a5 + 0x4000000000000000;
  if (a5 + 0x4000000000000000 < 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v23 = v17[6];
  if (__OFADD__(v23, 2 * a5))
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v71 = v19 + 6;
  if (v23 + 2 * a5 < v19[6])
  {
    OUTLINED_FUNCTION_27_33();
    goto LABEL_66;
  }
  uint64_t v25 = a6 + 0x4000000000000000;
  if (a6 + 0x4000000000000000 < 0)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v26 = v17[7];
  if (__OFADD__(v26, 2 * a6))
  {
LABEL_57:
    __break(1u);
LABEL_58:
    OUTLINED_FUNCTION_17_31();
    goto LABEL_66;
  }
  uint64_t v70 = *a2;
  HIDWORD(v67) = a16;
  uint64_t v27 = v19 + 7;
  if (v26 + 2 * a6 < v19[7])
  {
    OUTLINED_FUNCTION_27_33();
LABEL_60:
    OUTLINED_FUNCTION_21_44(v50, v51, v52, v53, v54, v55, v56, v57, a15, v67, a17, a11);
    goto LABEL_66;
  }
  sub_2576A7810();
  unint64_t v28 = 0;
  uint64_t v29 = MEMORY[0x263F8EE78];
  unint64_t v30 = 4;
  while (1)
  {
    if (v28 >= v30)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    uint64_t v31 = v17[v28 + 4];
    if (!v28) {
      goto LABEL_34;
    }
    uint64_t v32 = v25;
    uint64_t v33 = a6;
    uint64_t v34 = a4;
    uint64_t v35 = a8;
    uint64_t v36 = v27;
    if (v28 != 3)
    {
      if (v28 == 1)
      {
        if (!*(void *)(v70 + 16)) {
          goto LABEL_51;
        }
        uint64_t v31 = *(void *)(v70 + 32);
        goto LABEL_34;
      }
      uint64_t v33 = a5;
      uint64_t v32 = v73;
      uint64_t v34 = a3;
      uint64_t v35 = a7;
      uint64_t v36 = v71;
    }
    if (v32 < 0) {
      goto LABEL_43;
    }
    BOOL v37 = __OFADD__(v31, 2 * v33);
    uint64_t v38 = v31 + 2 * v33;
    if (v37) {
      goto LABEL_44;
    }
    BOOL v37 = __OFSUB__(*v36, 1);
    uint64_t v39 = *v36 - 1;
    if (v37) {
      goto LABEL_45;
    }
    uint64_t v40 = v35 * v39;
    if ((unsigned __int128)(v35 * (__int128)v39) >> 64 != (v35 * v39) >> 63) {
      goto LABEL_46;
    }
    uint64_t v41 = v38 - v40;
    if (__OFSUB__(v38, v40)) {
      goto LABEL_47;
    }
    BOOL v37 = __OFSUB__(v41, 1);
    uint64_t v42 = v41 - 1;
    if (v37) {
      goto LABEL_48;
    }
    if (!v34) {
      goto LABEL_49;
    }
    if (v42 == 0x8000000000000000 && v34 == -1) {
      goto LABEL_52;
    }
    uint64_t v44 = v42 / v34;
    uint64_t v31 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_50;
    }
    if (v31 < 1)
    {
      sub_2576A8730();
      OUTLINED_FUNCTION_13_56();
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      uint64_t v50 = OUTLINED_FUNCTION_13_56();
      goto LABEL_60;
    }
LABEL_34:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257471CF8(0, *(void *)(v29 + 16) + 1, 1, v29);
      uint64_t v29 = v47;
    }
    unint64_t v46 = *(void *)(v29 + 16);
    unint64_t v45 = *(void *)(v29 + 24);
    if (v46 >= v45 >> 1)
    {
      sub_257471CF8(v45 > 1, v46 + 1, 1, v29);
      uint64_t v29 = v48;
    }
    ++v28;
    *(void *)(v29 + 16) = v46 + 1;
    *(void *)(v29 + 8 * v46 + 32) = v31;
    unint64_t v30 = v17[2];
    if (v28 == v30) {
      break;
    }
    if (v28 - 1 >= 3) {
      goto LABEL_58;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a9 = v29;
  return result;
}

double sub_257694090@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12 = (void *)*a1;
  unint64_t v13 = v12[2];
  if (v13 <= 1) {
    goto LABEL_45;
  }
  uint64_t v14 = *(void **)a2;
  uint64_t v15 = *(void *)(*(void *)a2 + 16);
  if (!v15) {
    goto LABEL_45;
  }
  if (v12[5] != v14[4])
  {
    sub_2576A8730();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    goto LABEL_47;
  }
  if (v13 != 4 || v15 != 4) {
LABEL_47:
  }
    sub_25746BF88();
  uint64_t v16 = v14[5];
  uint64_t v17 = v16 * a12;
  if ((unsigned __int128)(v16 * (__int128)a12) >> 64 != (v16 * a12) >> 63)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v18 = v12[6];
  uint64_t v19 = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v20 = v19 * a3;
  if ((unsigned __int128)(v19 * (__int128)a3) >> 64 != (v19 * a3) >> 63)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (a5 + 0x4000000000000000 < 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  BOOL v21 = __OFSUB__(v20, 2 * a5);
  uint64_t v22 = v20 - 2 * a5;
  if (v21)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v23 = v14[6];
  BOOL v21 = __OFSUB__(v23, 1);
  uint64_t v24 = v23 - 1;
  if (v21)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v25 = a10 * v24;
  if ((unsigned __int128)(a10 * (__int128)v24) >> 64 != (a10 * v24) >> 63)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  BOOL v21 = __OFADD__(v22, v25);
  uint64_t v26 = v22 + v25;
  if (v21)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  BOOL v21 = __OFADD__(v26, 1);
  uint64_t v27 = v26 + 1;
  if (v21)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v28 = v27 + a7;
  if (__OFADD__(v27, a7))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v29 = v12[7];
  uint64_t v30 = v29 - 1;
  if (__OFSUB__(v29, 1))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v31 = v30 * a4;
  if ((unsigned __int128)(v30 * (__int128)a4) >> 64 != (v30 * a4) >> 63)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (a6 + 0x4000000000000000 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  BOOL v21 = __OFSUB__(v31, 2 * a6);
  uint64_t v32 = v31 - 2 * a6;
  if (v21)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v34 = v14[7];
  BOOL v21 = __OFSUB__(v34, 1);
  uint64_t v35 = v34 - 1;
  if (v21)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v36 = a11 * v35;
  if ((unsigned __int128)(a11 * (__int128)v35) >> 64 != (a11 * v35) >> 63)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v37 = v32 + v36;
  if (__OFADD__(v32, v36))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  BOOL v21 = __OFADD__(v37, 1);
  uint64_t v38 = v37 + 1;
  if (v21)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v39 = v38 + a8;
  if (__OFADD__(v38, a8))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    sub_2576A7810();
    OUTLINED_FUNCTION_17_31();
    goto LABEL_47;
  }
  uint64_t v40 = v12[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v41 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v41 + 16) = xmmword_2576AE070;
  *(void *)(v41 + 32) = v40;
  *(void *)(v41 + 40) = v17;
  *(void *)(v41 + 48) = v28;
  *(void *)(v41 + 56) = v39;
  *a9 = v41;
  return result;
}

void sub_257694490()
{
  qword_26A030AB8 = (uint64_t)&unk_27065CE20;
}

void sub_2576944A4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *a2;
  uint64_t v7 = *(void *)(a3 + 8);
  *a4 = v5;
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = v8 + 2;
  if (__OFADD__(v8, 2))
  {
    __break(1u);
  }
  else
  {
    sub_2576A7810();
    sub_2574FD028(v9, 1);
    sub_257471330();
    uint64_t v10 = *(void *)(*a4 + 16);
    sub_257471810();
    uint64_t v11 = *a4;
    *(void *)(v11 + 16) = v10 + 1;
    *(void *)(v11 + 8 * v10 + 32) = v6;
    sub_257471330();
    uint64_t v12 = *(void *)(*a4 + 16);
    sub_257471810();
    uint64_t v13 = *a4;
    *(void *)(v13 + 16) = v12 + 1;
    *(void *)(v13 + 8 * v12 + 32) = v7;
  }
}

uint64_t sub_25769455C(uint64_t a1, uint64_t a2)
{
  return sub_257694C04(a1, a2, (uint64_t (*)(unsigned char *, void *, uint64_t, uint64_t, uint64_t))sub_257694ED0);
}

void sub_257694574(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void *sub_257694594(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v2 = (void *)swift_allocObject();
  size_t v3 = _swift_stdlib_malloc_size(v2);
  v2[2] = v1;
  v2[3] = 2 * ((uint64_t)(v3 - 32) / 8);
  sub_2576A7810();
  uint64_t v4 = sub_257694F54(&v6, v2 + 4, v1);
  swift_bridgeObjectRelease();
  if (v4 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v2;
}

void sub_25769464C()
{
  OUTLINED_FUNCTION_18();
  if (*(void *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v1 = (const void *)OUTLINED_FUNCTION_48();
    _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_10_60();
    OUTLINED_FUNCTION_4_82(v2);
    sub_257694FE8(v3, v4, v5, v6);
    OUTLINED_FUNCTION_6_69();
    OUTLINED_FUNCTION_1_96();
    if (!v7) {
      __break(1u);
    }
  }
  OUTLINED_FUNCTION_4_0();
}

uint64_t sub_2576946C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_48();
  uint64_t v4 = OUTLINED_FUNCTION_14_58(v3);
  uint64_t v12 = OUTLINED_FUNCTION_23_39(v4, v5, v6, v7, v8, v9, v10, v11, v18);
  uint64_t v16 = sub_257695608(v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  if (v16 != v2)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v1;
}

void sub_257694744()
{
  OUTLINED_FUNCTION_18();
  if (*(void *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0055D8);
    uint64_t v1 = (const void *)swift_allocObject();
    size_t v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_4_82(2 * v2 - 64);
    sub_2576956C8(v3, v4, v5, v6);
    OUTLINED_FUNCTION_6_69();
    OUTLINED_FUNCTION_1_96();
    if (!v7) {
      __break(1u);
    }
  }
  OUTLINED_FUNCTION_4_0();
}

void sub_2576947C8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (void *)OUTLINED_FUNCTION_48();
      _swift_stdlib_malloc_size(v8);
      OUTLINED_FUNCTION_10_60();
      _DWORD v8[2] = v5;
      void v8[3] = v9;
    }
    if (v4 != a3)
    {
      sub_2575A6E60(a2 + 8 * a3, v5);
      return;
    }
    goto LABEL_9;
  }
}

void sub_257694874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_18();
  a25 = v26;
  a26 = v28;
  uint64_t v29 = *(void *)(v27 + 16);
  if (v29)
  {
    uint64_t v30 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A005840);
    uint64_t v31 = (void *)swift_allocObject();
    size_t v32 = _swift_stdlib_malloc_size(v31);
    v31[2] = v29;
    v31[3] = 2 * ((uint64_t)(v32 - 32) / 24);
    sub_25769585C((uint64_t)&a10, v31 + 4, v29, v30);
    sub_2576A7810();
    OUTLINED_FUNCTION_1_96();
    if (!v33) {
      __break(1u);
    }
  }
  OUTLINED_FUNCTION_4_0();
}

void sub_257694928()
{
  OUTLINED_FUNCTION_18();
  if (*(void *)(v0 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A006430);
    uint64_t v1 = (const void *)OUTLINED_FUNCTION_48();
    size_t v2 = _swift_stdlib_malloc_size(v1);
    OUTLINED_FUNCTION_4_82(2 * ((uint64_t)(v2 - 32) / 32));
    sub_257695BA0(v3, v4, v5, v6);
    OUTLINED_FUNCTION_6_69();
    OUTLINED_FUNCTION_1_96();
    if (!v7) {
      __break(1u);
    }
  }
  OUTLINED_FUNCTION_4_0();
}

void sub_2576949B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006420);
      char v7 = (void *)OUTLINED_FUNCTION_48();
      _swift_stdlib_malloc_size(v7);
      OUTLINED_FUNCTION_25_38();
      void v7[2] = v5;
      v7[3] = v8;
    }
    if (v4 != a3)
    {
      sub_2575A6D10();
      return;
    }
    goto LABEL_9;
  }
}

void *sub_257694A5C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_8;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v3 = (void *)OUTLINED_FUNCTION_48();
      _swift_stdlib_malloc_size(v3);
      OUTLINED_FUNCTION_10_60();
      void v3[2] = v2;
      v3[3] = v4;
    }
    sub_2576A7810();
    sub_2575A9410((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v5;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_8:
    sub_2576A7810();
    uint64_t v2 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v3;
}

void *sub_257694B38(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  if (a2 <= 0)
  {
    uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001078);
    uint64_t v4 = (void *)OUTLINED_FUNCTION_48();
    size_t v5 = _swift_stdlib_malloc_size(v4);
    void v4[2] = a2;
    v4[3] = 2 * ((uint64_t)(v5 - 32) / 4);
  }
  sub_2575A6D0C(a1, a2, v4 + 4);
  return v4;
}

void sub_257694BCC()
{
}

uint64_t sub_257694BEC(uint64_t a1, uint64_t a2)
{
  return sub_257694C04(a1, a2, (uint64_t (*)(unsigned char *, void *, uint64_t, uint64_t, uint64_t))sub_257695FBC);
}

uint64_t sub_257694C04(uint64_t result, uint64_t a2, uint64_t (*a3)(unsigned char *, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v3) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v6 = result;
    if (v3 <= 0)
    {
      char v7 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      char v7 = (void *)OUTLINED_FUNCTION_48();
      _swift_stdlib_malloc_size(v7);
      OUTLINED_FUNCTION_26_35();
      void v7[2] = v3;
      v7[3] = v8;
    }
    double result = a3(v9, v7 + 4, v3, v6, a2);
    if (result == v3) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
  return result;
}

void sub_257694CC4()
{
}

void sub_257694CE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_257694D04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, void *))
{
  unint64_t v6 = a4 >> 1;
  uint64_t v7 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (v7)
  {
    if (v7 <= 0)
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)OUTLINED_FUNCTION_48();
      _swift_stdlib_malloc_size(v11);
      OUTLINED_FUNCTION_26_35();
      void v11[2] = v7;
      v11[3] = v12;
    }
    if (v6 != a3)
    {
      a6(a2 + 8 * a3, v7, v11 + 4);
      return;
    }
    goto LABEL_10;
  }
}

uint64_t sub_257694DB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v3 = (void *)OUTLINED_FUNCTION_48();
  uint64_t v4 = OUTLINED_FUNCTION_14_58(v3);
  uint64_t v12 = OUTLINED_FUNCTION_23_39(v4, v5, v6, v7, v8, v9, v10, v11, v18);
  uint64_t v16 = sub_257696258(v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  if (v16 != v2)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v1;
}

void sub_257694E30()
{
}

void sub_257694E50()
{
  OUTLINED_FUNCTION_18();
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = v1;
    __swift_instantiateConcreteTypeFromMangledName(v0);
    uint64_t v4 = (const void *)OUTLINED_FUNCTION_48();
    _swift_stdlib_malloc_size(v4);
    OUTLINED_FUNCTION_25_38();
    OUTLINED_FUNCTION_4_82(v5);
    v3();
    OUTLINED_FUNCTION_6_69();
    OUTLINED_FUNCTION_1_96();
    if (!v6) {
      __break(1u);
    }
  }
  OUTLINED_FUNCTION_4_0();
}

void *sub_257694ED0(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v5 = a4;
LABEL_7:
    *double result = a4;
    result[1] = a5;
    result[2] = v5;
    return (void *)a3;
  }
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a5 == a4)
    {
LABEL_5:
      a3 = 0;
      goto LABEL_6;
    }
    if (a5 >= a4)
    {
      if (a5 <= a4)
      {
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t v5 = a5;
        a3 = a5 - a4;
      }
      else
      {
        uint64_t v6 = a3 - 1;
        uint64_t v5 = a4 + 1;
        while (1)
        {
          *a2 = v5 - 1;
          if (!v6) {
            break;
          }
          if (a5 == v5) {
            goto LABEL_18;
          }
          ++a2;
          --v6;
          BOOL v7 = v5 >= a4 && v5 < a5;
          ++v5;
          if (!v7) {
            goto LABEL_17;
          }
        }
      }
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void *sub_257694F54(void *result, void *a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 16);
  if (!a2)
  {
    uint64_t v7 = *(void *)(*v3 + 16);
    uint64_t v5 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v7 = *(void *)(*v3 + 16);
LABEL_13:
    uint64_t v5 = a3;
    goto LABEL_14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (v5)
    {
      uint64_t v6 = 0;
      while (v5 + v6 <= *(void *)(v4 + 16))
      {
        *a2 = *(void *)(v4 + 8 * v5 + 24 + 8 * v6);
        if (!(a3 - 1 + v6))
        {
          uint64_t v7 = v5 + v6 - 1;
          goto LABEL_13;
        }
        ++a2;
        --v6;
        if (!(v5 + v6)) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_16;
    }
LABEL_9:
    uint64_t v7 = 0;
LABEL_14:
    *double result = v4;
    result[1] = v7;
    return (void *)v5;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_257694FE8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    double result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2576951E4(void *a1, uint64_t *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 24);
  sub_2576A7810();
  uint64_t result = swift_release();
  if (!a2) {
    goto LABEL_25;
  }
  if (!a3)
  {
    unint64_t v10 = 0;
    goto LABEL_27;
  }
  if (a3 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
LABEL_25:
    unint64_t v10 = 0;
    a3 = 0;
    goto LABEL_27;
  }
  unint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = v7 + 32;
  uint64_t v13 = 1;
  while (2)
  {
    uint64_t v25 = a2;
    uint64_t v26 = v11;
    uint64_t v24 = v13;
    uint64_t v14 = v12 + 8 * v10;
    while (1)
    {
      unint64_t v15 = v10;
      unint64_t v10 = *(void *)(v7 + 16);
      if (v15 >= v10)
      {
        __break(1u);
        goto LABEL_29;
      }
      sub_2575CA75C(v14, (uint64_t)v31);
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong) {
        break;
      }
      sub_2574B92D8((uint64_t)v31, (uint64_t *)&unk_26A006410);
LABEL_20:
      unint64_t v10 = v15 + 1;
      v14 += 8;
      if ((uint64_t)(v15 + 1) >= v9)
      {
        unint64_t v10 = v15 + 1;
        a3 = v26;
        goto LABEL_27;
      }
    }
    uint64_t v17 = Strong;
    if (*(uint64_t *)(Strong + 32) <= 0) {
      goto LABEL_18;
    }
    swift_retain();
    id v18 = sub_257614628();
    objc_msgSend(v18, sel_lock);

    swift_beginAccess();
    sub_257486824(v17 + 40, (uint64_t)v28);
    if (v30)
    {
      if (v30 == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_25748692C((uint64_t)&v29);
      }
      else
      {
        sub_257486880((uint64_t)v28);
      }
      id v22 = sub_257614628();
      objc_msgSend(v22, sel_unlock);
      swift_release();

LABEL_18:
      sub_2574B92D8((uint64_t)v31, (uint64_t *)&unk_26A006410);
LABEL_19:
      swift_release();
      goto LABEL_20;
    }
    sub_2574A794C((uint64_t)v28, (uint64_t)v27);
    uint64_t v19 = v27[1];
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 56))(ObjectType, v19);
    sub_25748692C((uint64_t)v27);
    id v21 = sub_257614628();
    objc_msgSend(v21, sel_unlock);
    swift_release();

    sub_2574B92D8((uint64_t)v31, (uint64_t *)&unk_26A006410);
    if (v19) {
      goto LABEL_19;
    }
    uint64_t v23 = v24;
    *uint64_t v25 = v17;
    unint64_t v10 = v15 + 1;
    if (v24 == a3)
    {
LABEL_29:
      uint64_t v23 = a3;
      break;
    }
    uint64_t v13 = v24 + 1;
    a2 = v25 + 1;
    uint64_t v11 = v24;
    uint64_t v12 = v7 + 32;
    if ((uint64_t)v10 < v9) {
      continue;
    }
    break;
  }
  a3 = v23;
LABEL_27:
  *a1 = v7;
  a1[1] = v10;
  return a3;
}

uint64_t sub_257695494(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2574F4538();
  uint64_t v8 = v7;
  swift_release();
  if (!a2)
  {
LABEL_7:
    a3 = 0;
    goto LABEL_8;
  }
  if (a3)
  {
    if (a3 < 0) {
      goto LABEL_25;
    }
    if (v6 >> 62) {
      goto LABEL_26;
    }
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      uint64_t v10 = v9 - v8;
      if (v9 == v8) {
        goto LABEL_7;
      }
      uint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v8 + v12;
        if ((v6 & 0xC000000000000001) != 0)
        {
          uint64_t v14 = MEMORY[0x25A2B8DB0](v13, v6);
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_23;
          }
          if (v13 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_24;
          }
          uint64_t v14 = swift_retain();
        }
        if (!(v8 - 0x7FFFFFFFFFFFFFFFLL + v12)) {
          break;
        }
        *(void *)(a2 + 8 * v12) = v14;
        if (a3 - 1 == v12)
        {
          v8 += v12 + 1;
          goto LABEL_8;
        }
        if (v12 + 1 >= a3) {
          goto LABEL_22;
        }
        if (v10 == ++v12)
        {
          uint64_t v8 = v9;
          a3 = v10;
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_2576A7810();
      uint64_t v9 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
    }
  }
LABEL_8:
  *a1 = v6;
  a1[1] = v8;
  return a3;
}

uint64_t sub_257695608(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    goto LABEL_11;
  }
  if (!a3) {
    goto LABEL_12;
  }
  if (a3 < 0)
  {
    __break(1u);
LABEL_15:
    OUTLINED_FUNCTION_2_70();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v4 = *(void *)(a4 + 16);
  if (!v4)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  uint64_t v5 = 0;
  while (1)
  {
    *(void *)(a2 + 8 * v5) = *(void *)(a4 + 32 + 8 * v5);
    if (a3 - 1 == v5) {
      break;
    }
    unint64_t v6 = *(void *)(a4 + 16);
    if (v5 + 1 == v6)
    {
      a3 = v5 + 1;
      break;
    }
    if (v4 - 1 == v5) {
      goto LABEL_15;
    }
    if (++v5 >= v6)
    {
      __break(1u);
      goto LABEL_11;
    }
  }
LABEL_12:
  *a1 = a4;
  a1[1] = a3;
  return a3;
}

void *sub_2576956C8(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_36:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_19:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v13 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_18;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_14:
    int64_t v13 = v8;
LABEL_18:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_19;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_17:
    int64_t v13 = v15;
    goto LABEL_18;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_14;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_31:
    unint64_t v7 = 0;
LABEL_35:
    a3 = v9;
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_35;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_25769585C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    uint64_t v23 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    *unint64_t v11 = v22;
    v11[1] = v21;
    void v11[2] = v23;
    if (v13 == v10)
    {
      sub_2576A7810();
      goto LABEL_38;
    }
    v11 += 3;
    uint64_t result = sub_2576A7810();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_257695A64(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  memcpy(__dst, v4, 0xECuLL);
  bzero(v10, 0xECuLL);
  sub_257696E04((uint64_t)__dst, (uint64_t)v10);
  uint64_t result = memcpy(__src, v10, 0xECuLL);
  if (!a2)
  {
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    memcpy(a1, __src, 0xECuLL);
    return (void *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_257696E6C((uint64_t)__src, (uint64_t)v10);
    bzero(__src, 0xECuLL);
    if (v10[0])
    {
      uint64_t v9 = 0;
      while (1)
      {
        memcpy(__dst, v10, 0xECuLL);
        memcpy(a2, __dst, 0xECuLL);
        if (a3 - 1 == v9) {
          break;
        }
        a2 += 240;
        sub_257696E6C((uint64_t)__src, (uint64_t)v10);
        bzero(__src, 0xECuLL);
        ++v9;
        if (!v10[0]) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      uint64_t v9 = 0;
LABEL_11:
      sub_2574B92D8((uint64_t)v10, &qword_26A001BD8);
      a3 = v9;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_257695BA0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 24 * v16;
    uint64_t v21 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    uint64_t v23 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v20;
    *(void *)(v11 + 8) = v23;
    *(void *)(v11 + 16) = v22;
    *(void *)(v11 + 24) = v21;
    if (v13 == v10)
    {
      sub_2576A7810();
      goto LABEL_38;
    }
    v11 += 32;
    uint64_t result = sub_2576A7810();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_257695DB8(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(_OWORD *)(*(void *)(a4 + 56) + 16 * v16);
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_unknownObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_257695FBC(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
LABEL_6:
    uint64_t v5 = a4;
LABEL_7:
    *uint64_t result = a4;
    result[1] = a5;
    result[2] = v5;
    return (void *)a3;
  }
  if (a3 < 0) {
    goto LABEL_20;
  }
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4) {
    goto LABEL_21;
  }
  if (a5 > a4)
  {
    uint64_t v5 = a4 + 1;
    *a2 = a4;
    uint64_t v6 = a3 - 1;
    if (a3 == 1) {
      goto LABEL_7;
    }
    uint64_t v7 = a2 + 1;
    while (v6)
    {
      if (a5 == v5)
      {
        uint64_t v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v5 >= a5) {
        goto LABEL_19;
      }
      uint64_t v8 = v5 + 1;
      *v7++ = v5++;
      if (!--v6)
      {
        uint64_t v5 = v8;
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_257696058(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    *uint64_t v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      swift_unknownObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_unknownObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_257696258(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
        __break(1u);
      }
      else if (v4)
      {
        uint64_t v5 = 0;
        while (1)
        {
          uint64_t v6 = v4 + v5 - 1;
          *a2 = *(void *)(a4 + 8 * v4 + 24 + 8 * v5);
          if (!(a3 - 1 + v5)) {
            goto LABEL_12;
          }
          if (v4 + v5 == 1) {
            goto LABEL_13;
          }
          ++a2;
          --v5;
          if (v4 + v5 > *(void *)(a4 + 16))
          {
            __break(1u);
            goto LABEL_10;
          }
        }
      }
      uint64_t v6 = 0;
      goto LABEL_13;
    }
    uint64_t v6 = *(void *)(a4 + 16);
LABEL_12:
    uint64_t v4 = a3;
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v6 = v4;
  uint64_t v4 = 0;
LABEL_13:
  *a1 = a4;
  a1[1] = v6;
  return v4;
}

uint64_t sub_2576962EC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      sub_2576A7810();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_2576A7810();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2576964EC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25763C230();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_257696558(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_257696558(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2576A8E90();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_257696B2C(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_124;
  }
  uint64_t v5 = result;
  uint64_t result = sub_25749F4DC(v3 / 2);
  uint64_t v83 = a1;
  uint64_t v84 = result;
  uint64_t v88 = v6;
  uint64_t v86 = v3;
  if (v3 <= 0)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    unint64_t v26 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_90:
    if (v26 < 2)
    {
LABEL_101:
      uint64_t result = swift_bridgeObjectRelease();
      if (v86 >= -1)
      {
        *(void *)(v84 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_129;
    }
    uint64_t v76 = *v83;
    while (1)
    {
      unint64_t v77 = v26 - 2;
      if (v26 < 2) {
        break;
      }
      if (!v76) {
        goto LABEL_133;
      }
      uint64_t v78 = *(void *)(v9 + 32 + 16 * v77);
      uint64_t v79 = *(void *)(v9 + 32 + 16 * (v26 - 1) + 8);
      uint64_t result = sub_257696B84((uint64_t *)(v76 + 8 * v78), (uint64_t *)(v76 + 8 * *(void *)(v9 + 32 + 16 * (v26 - 1))), v76 + 8 * v79, v88);
      if (v1) {
        goto LABEL_86;
      }
      if (v79 < v78) {
        goto LABEL_119;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_25760008C(v9);
        uint64_t v9 = result;
      }
      if (v77 >= *(void *)(v9 + 16)) {
        goto LABEL_120;
      }
      uint64_t v80 = (void *)(v9 + 32 + 16 * v77);
      void *v80 = v78;
      v80[1] = v79;
      unint64_t v81 = *(void *)(v9 + 16);
      if (v26 > v81) {
        goto LABEL_121;
      }
      uint64_t result = (uint64_t)memmove((void *)(v9 + 32 + 16 * (v26 - 1)), (const void *)(v9 + 32 + 16 * v26), 16 * (v81 - v26));
      *(void *)(v9 + 16) = v81 - 1;
      unint64_t v26 = v81 - 1;
      if (v81 <= 2) {
        goto LABEL_101;
      }
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return result;
  }
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v82 = *a1 - 8;
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v85 = v5;
  uint64_t v87 = *a1;
  while (1)
  {
    uint64_t v10 = v7++;
    if (v7 < v3)
    {
      uint64_t v11 = *(void *)(v8 + 8 * v7);
      uint64_t v12 = *(void *)(v8 + 8 * v10);
      uint64_t v7 = v10 + 2;
      if (v10 + 2 < v3)
      {
        uint64_t v13 = v11;
        while (1)
        {
          uint64_t v14 = *(void *)(v8 + 8 * v7);
          if (v12 < v11 == v13 >= v14) {
            break;
          }
          ++v7;
          uint64_t v13 = v14;
          if (v7 >= v3)
          {
            uint64_t v7 = v3;
            break;
          }
        }
      }
      if (v12 < v11)
      {
        if (v7 < v10) {
          goto LABEL_126;
        }
        if (v10 < v7)
        {
          uint64_t v15 = v7 - 1;
          uint64_t v16 = v10;
          do
          {
            if (v16 != v15)
            {
              if (!v8) {
                goto LABEL_132;
              }
              uint64_t v17 = *(void *)(v8 + 8 * v16);
              *(void *)(v8 + 8 * v16) = *(void *)(v8 + 8 * v15);
              *(void *)(v8 + 8 * v15) = v17;
            }
            BOOL v57 = ++v16 < v15--;
          }
          while (v57);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v10)) {
        goto LABEL_123;
      }
      if (v7 - v10 < v5)
      {
        uint64_t v18 = v10 + v5;
        if (__OFADD__(v10, v5)) {
          goto LABEL_127;
        }
        if (v18 >= v3) {
          uint64_t v18 = v3;
        }
        if (v18 < v10) {
          goto LABEL_128;
        }
        if (v7 != v18)
        {
          int64_t v19 = (uint64_t *)(v82 + 8 * v7);
          do
          {
            uint64_t v20 = *(void *)(v8 + 8 * v7);
            uint64_t v21 = v10;
            uint64_t v22 = v19;
            do
            {
              uint64_t v23 = *v22;
              if (*v22 >= v20) {
                break;
              }
              if (!v8) {
                goto LABEL_130;
              }
              *uint64_t v22 = v20;
              v22[1] = v23;
              --v22;
              ++v21;
            }
            while (v7 != v21);
            ++v7;
            ++v19;
          }
          while (v7 != v18);
          uint64_t v7 = v18;
        }
      }
    }
    if (v7 < v10) {
      goto LABEL_122;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2575FFF94(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v25 = *(void *)(v9 + 16);
    unint64_t v24 = *(void *)(v9 + 24);
    unint64_t v26 = v25 + 1;
    uint64_t v8 = v87;
    if (v25 >= v24 >> 1)
    {
      uint64_t result = (uint64_t)sub_2575FFF94((char *)(v24 > 1), v25 + 1, 1, (char *)v9);
      uint64_t v8 = v87;
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v26;
    uint64_t v27 = v9 + 32;
    uint64_t v28 = (uint64_t *)(v9 + 32 + 16 * v25);
    *uint64_t v28 = v10;
    v28[1] = v7;
    if (v25) {
      break;
    }
    unint64_t v26 = 1;
LABEL_81:
    uint64_t v5 = v85;
    uint64_t v3 = v86;
    if (v7 >= v86) {
      goto LABEL_90;
    }
  }
  while (1)
  {
    unint64_t v29 = v26 - 1;
    if (v26 >= 4)
    {
      unint64_t v34 = v27 + 16 * v26;
      uint64_t v35 = *(void *)(v34 - 64);
      uint64_t v36 = *(void *)(v34 - 56);
      BOOL v40 = __OFSUB__(v36, v35);
      uint64_t v37 = v36 - v35;
      if (v40) {
        goto LABEL_107;
      }
      uint64_t v39 = *(void *)(v34 - 48);
      uint64_t v38 = *(void *)(v34 - 40);
      BOOL v40 = __OFSUB__(v38, v39);
      uint64_t v32 = v38 - v39;
      char v33 = v40;
      if (v40) {
        goto LABEL_108;
      }
      unint64_t v41 = v26 - 2;
      uint64_t v42 = (uint64_t *)(v27 + 16 * (v26 - 2));
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      BOOL v40 = __OFSUB__(v43, v44);
      uint64_t v45 = v43 - v44;
      if (v40) {
        goto LABEL_109;
      }
      BOOL v40 = __OFADD__(v32, v45);
      uint64_t v46 = v32 + v45;
      if (v40) {
        goto LABEL_111;
      }
      if (v46 >= v37)
      {
        uint64_t v64 = (uint64_t *)(v27 + 16 * v29);
        uint64_t v66 = *v64;
        uint64_t v65 = v64[1];
        BOOL v40 = __OFSUB__(v65, v66);
        uint64_t v67 = v65 - v66;
        if (v40) {
          goto LABEL_117;
        }
        BOOL v57 = v32 < v67;
        goto LABEL_70;
      }
    }
    else
    {
      if (v26 != 3)
      {
        uint64_t v58 = *(void *)(v9 + 32);
        uint64_t v59 = *(void *)(v9 + 40);
        BOOL v40 = __OFSUB__(v59, v58);
        uint64_t v51 = v59 - v58;
        char v52 = v40;
        goto LABEL_64;
      }
      uint64_t v31 = *(void *)(v9 + 32);
      uint64_t v30 = *(void *)(v9 + 40);
      BOOL v40 = __OFSUB__(v30, v31);
      uint64_t v32 = v30 - v31;
      char v33 = v40;
    }
    if (v33) {
      goto LABEL_110;
    }
    unint64_t v41 = v26 - 2;
    uint64_t v47 = (uint64_t *)(v27 + 16 * (v26 - 2));
    uint64_t v49 = *v47;
    uint64_t v48 = v47[1];
    BOOL v50 = __OFSUB__(v48, v49);
    uint64_t v51 = v48 - v49;
    char v52 = v50;
    if (v50) {
      goto LABEL_112;
    }
    uint64_t v53 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    BOOL v40 = __OFSUB__(v54, v55);
    uint64_t v56 = v54 - v55;
    if (v40) {
      goto LABEL_114;
    }
    if (__OFADD__(v51, v56)) {
      goto LABEL_116;
    }
    if (v51 + v56 >= v32)
    {
      BOOL v57 = v32 < v56;
LABEL_70:
      if (v57) {
        unint64_t v29 = v41;
      }
      goto LABEL_72;
    }
LABEL_64:
    if (v52) {
      goto LABEL_113;
    }
    uint64_t v60 = (uint64_t *)(v27 + 16 * v29);
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    BOOL v40 = __OFSUB__(v61, v62);
    uint64_t v63 = v61 - v62;
    if (v40) {
      goto LABEL_115;
    }
    if (v63 < v51) {
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v68 = v9;
    unint64_t v69 = v29 - 1;
    if (v29 - 1 >= v26)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v8) {
      goto LABEL_131;
    }
    uint64_t v70 = (uint64_t *)(v27 + 16 * v69);
    uint64_t v71 = *v70;
    uint64_t v72 = v27;
    uint64_t v73 = (void *)(v27 + 16 * v29);
    uint64_t v74 = v73[1];
    uint64_t result = sub_257696B84((uint64_t *)(v8 + 8 * *v70), (uint64_t *)(v8 + 8 * *v73), v8 + 8 * v74, v88);
    if (v1) {
      break;
    }
    if (v74 < v71) {
      goto LABEL_104;
    }
    if (v29 > *(void *)(v68 + 16)) {
      goto LABEL_105;
    }
    uint64_t *v70 = v71;
    *(void *)(v72 + 16 * v69 + 8) = v74;
    unint64_t v75 = *(void *)(v68 + 16);
    if (v29 >= v75) {
      goto LABEL_106;
    }
    uint64_t v9 = v68;
    unint64_t v26 = v75 - 1;
    uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v29));
    uint64_t v27 = v72;
    *(void *)(v68 + 16) = v75 - 1;
    uint64_t v8 = v87;
    if (v75 <= 2) {
      goto LABEL_81;
    }
  }
LABEL_86:
  uint64_t result = swift_bridgeObjectRelease();
  if (v86 < -1) {
    goto LABEL_125;
  }
  *(void *)(v84 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_257696B2C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
    while (2)
    {
      uint64_t v6 = *(void *)(v4 + 8 * a3);
      uint64_t v7 = result;
      uint64_t v8 = (uint64_t *)v5;
      do
      {
        uint64_t v9 = *v8;
        if (*v8 >= v6) {
          break;
        }
        if (!v4)
        {
          __break(1u);
          return result;
        }
        *uint64_t v8 = v6;
        v8[1] = v9;
        --v8;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 8;
      if (a3 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_257696B84(uint64_t *a1, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = (char *)a2 - (char *)a1;
  uint64_t v9 = a2 - a1;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 8;
  if (v9 >= v11)
  {
    sub_25760A020(a2, (uint64_t)(a3 - (void)a2) / 8, a4);
    uint64_t v12 = &v4[v11];
    if (v7 >= v6 || v10 < 8) {
      goto LABEL_39;
    }
    uint64_t v18 = (uint64_t *)(a3 - 8);
    while (1)
    {
      int64_t v19 = v18 + 1;
      uint64_t v20 = *(v6 - 1);
      if (v20 >= *(v12 - 1))
      {
        BOOL v22 = v19 != v12 || v18 >= v12;
        uint64_t v20 = *--v12;
        if (!v22) {
          goto LABEL_35;
        }
      }
      else
      {
        BOOL v21 = v19 != v6 || v18 >= v6;
        --v6;
        if (!v21) {
          goto LABEL_35;
        }
      }
      *uint64_t v18 = v20;
LABEL_35:
      --v18;
      if (v6 <= v7 || v12 <= v4) {
        goto LABEL_39;
      }
    }
  }
  sub_25760A020(a1, a2 - a1, a4);
  uint64_t v12 = &v4[v9];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      uint64_t v14 = *v6;
      if (*v4 < *v6) {
        break;
      }
      uint64_t v14 = *v4;
      BOOL v15 = v7 == v4++;
      if (!v15) {
        goto LABEL_11;
      }
LABEL_12:
      ++v7;
      if (v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_17;
      }
    }
    BOOL v15 = v7 == v6++;
    if (v15) {
      goto LABEL_12;
    }
LABEL_11:
    *uint64_t v7 = v14;
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v6 = v7;
LABEL_39:
  sub_25760A020(v4, v12 - v4, v6);
  return 1;
}

char *sub_257696D00(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[8 * a2] <= __dst) {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

uint64_t sub_257696D2C(uint64_t result, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else if (a2)
  {
    uint64_t v3 = result;
    uint64_t result = sub_2576A7EA0();
    uint64_t v4 = 0;
    *(void *)(result + 16) = a2;
    do
    {
      uint64_t v5 = result + 8 * v4++;
      *(void *)(v5 + 32) = v3;
    }
    while (a2 != v4);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

ValueMetadata *type metadata accessor for ShapeInference()
{
  return &type metadata for ShapeInference;
}

uint64_t sub_257696DA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_25769343C(*a1, a1[1], *a2);
  if (!v3)
  {
    *(void *)a3 = result;
    *(unsigned char *)(a3 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_257696DE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257696DA4(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_257696E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_257696E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_96()
{
  return sub_25748681C();
}

void OUTLINED_FUNCTION_2_83(unint64_t a1@<X8>)
{
  sub_257471CF8(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_3_74()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_257471CF8(0, v2, 1, v0);
}

void OUTLINED_FUNCTION_4_82(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
}

uint64_t OUTLINED_FUNCTION_6_69()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_14_58(void *a1)
{
  size_t v3 = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(v3 - 32) / 8);
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_21_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return a12;
}

uint64_t OUTLINED_FUNCTION_22_42()
{
  return sub_2576A8EA0();
}

uint64_t *OUTLINED_FUNCTION_23_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t sub_2576970B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_2576970C0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Layer<>.compiled(forInput:options:)()
{
  OUTLINED_FUNCTION_30_33();
  uint64_t v14 = v1;
  v10[0] = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  char v13 = v5;
  return sub_2574816EC(v6, v0, (uint64_t)&v14, (uint64_t)v10, (uint64_t (*)(uint64_t))sub_257699E90, 0, (uint64_t (*)(char *))sub_257699E8C, 0, (uint64_t)&type metadata for Tensor, (uint64_t)&type metadata for Tensor, v7, v8);
}

{
  return sub_2576975A8();
}

{
  return sub_257697424();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned char v9[32];

  OUTLINED_FUNCTION_4_83();
  OUTLINED_FUNCTION_24_42();
  char v2 = OUTLINED_FUNCTION_8_67();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001E18);
  return OUTLINED_FUNCTION_3_75(v3, v4, v5, (uint64_t)v9, sub_257699E94, v6, (uint64_t (*)(char *))sub_2576988C0, v7, v2, v3, v1, v0);
}

{
  return sub_257697424();
}

{
  return sub_2576975A8();
}

{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char v12[8];
  uint64_t v13;
  uint64_t v14;
  char v15;

  OUTLINED_FUNCTION_4_83();
  v12[0] = v2;
  char v13 = v3;
  uint64_t v14 = v4;
  BOOL v15 = v5;
  char v6 = OUTLINED_FUNCTION_8_67();
  return OUTLINED_FUNCTION_3_75(v6, v7, v8, (uint64_t)v12, sub_257699014, v9, (uint64_t (*)(char *))sub_257699E8C, v10, v6, (uint64_t)&type metadata for Tensor, v1, v0);
}

uint64_t Layer<>.compiled(forInput:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_5_73(a1, a2, a3);
  uint64_t v5 = OUTLINED_FUNCTION_8_67();
  return OUTLINED_FUNCTION_3_75(v5, v6, v7, (uint64_t)v11, (uint64_t (*)(uint64_t))sub_257698908, v8, (uint64_t (*)(char *))sub_257699E8C, v9, v5, (uint64_t)&type metadata for Tensor, v4, v3);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned char v12[32];

  OUTLINED_FUNCTION_5_73(a1, a2, a3);
  uint64_t v5 = OUTLINED_FUNCTION_8_67();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0042B8);
  return OUTLINED_FUNCTION_3_75(v6, v7, v8, (uint64_t)v12, (uint64_t (*)(uint64_t))sub_257698908, v9, (uint64_t (*)(char *))sub_25769890C, v10, v5, v6, v4, v3);
}

uint64_t Layer.compiled(forInput:options:)()
{
  OUTLINED_FUNCTION_4_83();
  v20[0] = v5;
  uint64_t v21 = v6;
  uint64_t v22 = v7;
  char v23 = v8;
  uint64_t v18 = v9;
  uint64_t v19 = v10;
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  return sub_2574816EC(v4, v0, v3, (uint64_t)v20, (uint64_t (*)(uint64_t))sub_257699E9C, (uint64_t)v17, (uint64_t (*)(char *))sub_257699E98, (uint64_t)v14, AssociatedTypeWitness, v12, v2, v1);
}

uint64_t sub_257697424()
{
  OUTLINED_FUNCTION_26_36();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_30_33();
  uint64_t v19 = v7;
  v15[0] = v8;
  uint64_t v16 = v9;
  uint64_t v17 = v10;
  char v18 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(v12);
  return sub_2574816EC(v6, v1, (uint64_t)&v19, (uint64_t)v15, v2, 0, v0, 0, (uint64_t)&type metadata for Tensor, v13, v4, v3);
}

uint64_t Layer<>.compiled(forInput:options:)(void *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  char v9 = *a3;
  uint64_t v10 = *((void *)a3 + 1);
  uint64_t v11 = *((void *)a3 + 2);
  char v12 = a3[24];
  uint64_t v19 = a2;
  v15[0] = v9;
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  char v18 = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0042B8);
  return sub_2574816EC(a1, v5, (uint64_t)&v19, (uint64_t)v15, sub_257698A90, 0, (uint64_t (*)(char *))sub_25769890C, 0, v13, v13, a4, a5);
}

uint64_t sub_2576975A8()
{
  OUTLINED_FUNCTION_26_36();
  uint64_t v6 = v5;
  char v8 = v7;
  OUTLINED_FUNCTION_24_42();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_2574816EC(v8, v1, v6, (uint64_t)v12, v2, (uint64_t)v11, v0, 0, AssociatedTypeWitness, (uint64_t)&type metadata for Tensor, v4, v3);
}

uint64_t Layer<>.compiled(forInput:options:)(uint64_t a1, void *a2)
{
  OUTLINED_FUNCTION_6_70(a1, a2);
  uint64_t v4 = OUTLINED_FUNCTION_8_67();
  return OUTLINED_FUNCTION_14_59(v4, v5, v6, v7, (uint64_t (*)(uint64_t))sub_257698D48, v8, (uint64_t (*)(char *))sub_257698F60, v9, (uint64_t)&type metadata for Tensor, v4, v3, v2);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_6_70(a1, a2);
  uint64_t v4 = OUTLINED_FUNCTION_8_67();
  return OUTLINED_FUNCTION_14_59(v4, v5, v6, v7, (uint64_t (*)(uint64_t))sub_257699E90, v8, (uint64_t (*)(char *))sub_257698FC8, v9, (uint64_t)&type metadata for Tensor, v4, v3, v2);
}

uint64_t Layer<>.compiled(forInput:options:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = *(void *)(a3 + 8);
  uint64_t v13 = *(void *)(a3 + 16);
  char v14 = *(unsigned char *)(a3 + 24);
  v28[0] = *(unsigned char *)a3;
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  char v31 = v14;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  uint64_t v22 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  return sub_2574816EC(a1, v7, a2, (uint64_t)v28, sub_257698FB0, (uint64_t)v23, (uint64_t (*)(char *))sub_257698FBC, (uint64_t)v18, AssociatedTypeWitness, v16, a4, a5);
}

uint64_t sub_2576977E8()
{
  swift_retain();
  sub_2576A7810();
  sub_257694E30();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v5 = v2;
  sub_257699510(&v5);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = v5;
  uint64_t v3 = sub_2576A7810();
  *(void *)(v0 + 16) = sub_2574870D4(v3);
  swift_release();
  return v0;
}

uint64_t sub_257697880()
{
  swift_retain();
  sub_2576A7810();
  sub_257694E30();
  uint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = v2;
  sub_257699510(&v4);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v4;
  swift_release();
  return v0;
}

uint64_t Function.description.getter()
{
  return sub_2575736DC();
}

uint64_t Function.customMirror.getter()
{
  uint64_t v1 = sub_2576A9150();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  uint64_t v8 = v0[1];
  uint64_t v10 = v0[2];
  uint64_t v9 = v0[3];
  void v13[2] = v7;
  _OWORD v13[3] = v8;
  v13[4] = v10;
  v13[5] = v9;
  v13[1] = MEMORY[0x263F8EE78];
  uint64_t v11 = sub_2576A9140();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006438);
  sub_257699060();
  sub_2574C4BB4((uint64_t)v3);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_2576A9190();
}

ValueMetadata *Function<>.inputTensorProperties.getter(void *a1, uint64_t a2)
{
  return sub_257697C08(a1, a2, sub_257602DA0);
}

ValueMetadata *Function<>.outputTensorProperties.getter(void *a1, uint64_t a2)
{
  return sub_257697C08(a1, a2, sub_257602CC0);
}

ValueMetadata *sub_257697C08(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = (ValueMetadata *)a3();
  if (result[1].Kind)
  {
    uint64_t Kind = result[3].Kind;
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v7 = *(void *)(Kind + 152);
    sub_2576A7810();
    uint64_t v8 = swift_release();
    *a1 = v7;
    uint64_t result = (ValueMetadata *)((uint64_t (*)(uint64_t))a3)(v8);
    if (result[1].Kind)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      return sub_25767AC64();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Function<>.inputCount.getter()
{
  OUTLINED_FUNCTION_21_45();
  OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_43_20();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_9_70((uint64_t)sub_2576990B4, v2, v3, WitnessTable, v4, v5, v6, v7, v9);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_18_2();
  return v0;
}

{
  uint64_t v0;
  uint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_0_82();
  OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_43_20();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_9_70((uint64_t)sub_257699E54, v2, v3, WitnessTable, v4, v5, v6, v7, v9);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_18_2();
  return v0;
}

ValueMetadata *Function<>.tensorProperties(forInputAt:)()
{
  OUTLINED_FUNCTION_25_39();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v2)
  {
    OUTLINED_FUNCTION_2_84();
    if (v0)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_54();
    swift_release();
    return sub_25767AC64();
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  uint64_t v0;
  ValueMetadata *result;
  uint64_t v2;

  OUTLINED_FUNCTION_16_51();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v2)
  {
    OUTLINED_FUNCTION_2_84();
    if (v0)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_54();
    swift_release();
    return sub_25767AC64();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Function<>.outputCount.getter()
{
  OUTLINED_FUNCTION_21_45();
  OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_43_20();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_9_70((uint64_t)sub_257699120, v2, v3, WitnessTable, v4, v5, v6, v7, v9);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_18_2();
  return v0;
}

{
  uint64_t v0;
  uint64_t WitnessTable;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_0_82();
  OUTLINED_FUNCTION_13_57();
  OUTLINED_FUNCTION_43_20();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_9_70((uint64_t)sub_257699E70, v2, v3, WitnessTable, v4, v5, v6, v7, v9);
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_18_2();
  return v0;
}

ValueMetadata *Function<>.tensorProperties(forOutputAt:)()
{
  OUTLINED_FUNCTION_25_39();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v2)
  {
    OUTLINED_FUNCTION_2_84();
    if (v0)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_54();
    swift_release();
    return sub_25767AC64();
  }
  else
  {
    __break(1u);
  }
  return result;
}

{
  uint64_t v0;
  ValueMetadata *result;
  uint64_t v2;

  OUTLINED_FUNCTION_16_51();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = (ValueMetadata *)swift_bridgeObjectRelease();
  if (v2)
  {
    OUTLINED_FUNCTION_2_84();
    if (v0)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_54();
    swift_release();
    return sub_25767AC64();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Function<>.inputNames.getter()
{
  OUTLINED_FUNCTION_0_82();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_43_20();
  swift_getWitnessTable();
  uint64_t v0 = OUTLINED_FUNCTION_29_31();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Function<>.tensorProperties(forInputNamed:)@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_11_63();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    OUTLINED_FUNCTION_2_84();
    if (v1)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v7 + 152);
    sub_2576A7810();
    swift_release();
    uint64_t result = (uint64_t)sub_25767AC64();
    *a1 = v4;
    a1[1] = result;
    a1[2] = v5;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  return result;
}

uint64_t Function<>.outputNames.getter()
{
  OUTLINED_FUNCTION_0_82();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_43_20();
  swift_getWitnessTable();
  uint64_t v0 = OUTLINED_FUNCTION_29_31();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2576983EC@<X0>(uint64_t a1@<X0>, char a2@<W6>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = sub_25748C560(*(unsigned char *)a1, a2);
  if (result)
  {
    uint64_t result = sub_2576A7810();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  *a3 = v5;
  a3[1] = v4;
  return result;
}

uint64_t Function<>.tensorProperties(forOutputNamed:)@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_11_63();
  OUTLINED_FUNCTION_18_34();
  OUTLINED_FUNCTION_19_45();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_20_42();
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    OUTLINED_FUNCTION_2_84();
    if (v1)
    {
      sub_2576A7810();
      OUTLINED_FUNCTION_22_43();
      OUTLINED_FUNCTION_17_50();
    }
    else
    {
      OUTLINED_FUNCTION_7_62();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void *)(v7 + 152);
    sub_2576A7810();
    swift_release();
    uint64_t result = (uint64_t)sub_25767AC64();
    *a1 = v4;
    a1[1] = result;
    a1[2] = v5;
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  return result;
}

uint64_t sub_257698560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 8) == a2 && *(void *)(a1 + 16) == a3) {
    return 1;
  }
  else {
    return sub_2576A8F60() & 1;
  }
}

void CompilationOptions.learningPhase.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void static CompilationOptions.default.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 46;
  *(void *)(a1 + 16) = 0xE100000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static CompilationOptions.inference.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = 46;
  *(void *)(a1 + 16) = 0xE100000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static Function.load(from:options:)()
{
  id v0 = objc_msgSend(self, sel_defaultManager);
  sub_2576A70B0();
  uint64_t v1 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  unsigned int v2 = objc_msgSend(v0, sel_fileExistsAtPath_, v1);

  if (v2) {
    sub_25746BE6C();
  }
  sub_2576A8730();
  swift_bridgeObjectRelease();
  sub_2576A70B0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8B60();
  __break(1u);
}

uint64_t sub_257698870(uint64_t a1)
{
  return sub_257698D7C(a1, v1[2], v1[3], v1[4], (uint64_t)&associated type descriptor for Layer.Input, (void (*)(void, uint64_t, uint64_t, __n128))type metadata accessor for TensorCollectionInputParser, (uint64_t (*)(char *))sub_257603F40);
}

uint64_t sub_2576988C4()
{
  type metadata accessor for TensorArrayOutputParser(0);
  swift_allocObject();
  uint64_t v0 = sub_2576A7810();
  return sub_25760622C(v0);
}

uint64_t sub_25769890C(uint64_t a1)
{
  return sub_257698AB4(a1, &qword_26A006548, 24, (uint64_t (*)(uint64_t))sub_257697880);
}

uint64_t sub_2576989C4()
{
  OUTLINED_FUNCTION_23_40();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v0);
  type metadata accessor for TensorKeyValuePairsInputParser();
  uint64_t v1 = OUTLINED_FUNCTION_15_50();
  v2(v1);
  return sub_2576042FC();
}

uint64_t sub_257698A90(uint64_t a1)
{
  return sub_257698AB4(a1, &qword_26A006550, 32, (uint64_t (*)(uint64_t))sub_2576977E8);
}

uint64_t sub_257698AB4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject();
  uint64_t v5 = sub_2576A7810();
  return a4(v5);
}

uint64_t sub_257698B0C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v7 - v4;
  type metadata accessor for KeyTensorPairsRepresentableInputParser();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  return sub_25760525C();
}

uint64_t sub_257698C10(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = (char *)&v7 - v4;
  type metadata accessor for KeyTensorPairsRepresentableOutputParser();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  return sub_257606CC0();
}

uint64_t sub_257698D14()
{
  type metadata accessor for TensorOutputParser(0);
  return swift_allocObject();
}

uint64_t sub_257698D48()
{
  type metadata accessor for TensorInputParser(0);
  return swift_allocObject();
}

uint64_t sub_257698D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void, uint64_t, uint64_t, __n128), uint64_t (*a7)(char *))
{
  uint64_t v10 = OUTLINED_FUNCTION_23_40();
  OUTLINED_FUNCTION_0_8();
  __n128 v12 = MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v18 - v13;
  a6(0, v10, a4, v12);
  uint64_t v15 = OUTLINED_FUNCTION_15_50();
  v16(v15);
  return a7(v14);
}

uint64_t sub_257698E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, uint64_t, __n128), uint64_t (*a6)(char *))
{
  uint64_t v9 = OUTLINED_FUNCTION_23_40();
  OUTLINED_FUNCTION_0_8();
  uint64_t v11 = v10;
  __n128 v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v17 - v14;
  a5(0, v9, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, a1, v9);
  return a6(v15);
}

uint64_t sub_257698F10(uint64_t a1)
{
  return sub_257698D7C(a1, v1[2], v1[3], v1[4], (uint64_t)&associated type descriptor for Layer.Input, (void (*)(void, uint64_t, uint64_t, __n128))type metadata accessor for KeyTensorPairsRepresentableInputParser, (uint64_t (*)(char *))sub_25760525C);
}

uint64_t sub_257698F60(uint64_t a1)
{
  return sub_257698D7C(a1, v1[2], v1[3], v1[4], (uint64_t)&associated type descriptor for Layer.Output, (void (*)(void, uint64_t, uint64_t, __n128))type metadata accessor for KeyTensorPairsRepresentableOutputParser, (uint64_t (*)(char *))sub_257606CC0);
}

uint64_t sub_257698FB0(uint64_t a1)
{
  return sub_257698B0C(a1);
}

uint64_t sub_257698FBC(uint64_t a1)
{
  return sub_257698C10(a1);
}

uint64_t sub_257698FC8(uint64_t a1)
{
  return sub_257698E40(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&associated type descriptor for Layer.Output, (void (*)(void, uint64_t, __n128))type metadata accessor for CustomOutputParser, (uint64_t (*)(char *))sub_2576075A4);
}

uint64_t sub_257699014(uint64_t a1)
{
  return sub_257698E40(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&associated type descriptor for Layer.Input, (void (*)(void, uint64_t, __n128))type metadata accessor for CustomInputParser, (uint64_t (*)(char *))sub_257605A18);
}

unint64_t sub_257699060()
{
  unint64_t result = qword_26A006440[0];
  if (!qword_26A006440[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A006438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A006440);
  }
  return result;
}

BOOL sub_2576990B4(char *a1)
{
  return sub_25748C560(*a1, 0);
}

uint64_t Function.CompilationError.description.getter()
{
  uint64_t v1 = *v0;
  sub_2576A7810();
  return v1;
}

BOOL sub_257699120(char *a1)
{
  return sub_25748C560(*a1, 3);
}

uint64_t sub_257699158@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2576991AC(a1, 0, a2);
}

uint64_t sub_257699174(uint64_t a1)
{
  return sub_2576991D4(a1) & 1;
}

uint64_t sub_257699190@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2576991AC(a1, 3, a2);
}

uint64_t sub_2576991AC@<X0>(uint64_t a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  return sub_2576983EC(a1, a2, a3);
}

uint64_t sub_2576991D4(uint64_t a1)
{
  return sub_257698560(a1, *(void *)(v1 + 56), *(void *)(v1 + 64)) & 1;
}

uint64_t sub_257699200()
{
  return sub_2576989C4();
}

void *sub_257699224(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_25769927C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_25769930C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Function()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t initializeWithCopy for CompilationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  sub_2576A7810();
  return a1;
}

uint64_t assignWithCopy for CompilationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for CompilationOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for CompilationOptions(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompilationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompilationOptions()
{
  return &type metadata for CompilationOptions;
}

uint64_t type metadata accessor for Function.CompilationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257699510(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_25763C6AC();
    uint64_t v2 = v3;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  uint64_t result = sub_25769957C(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_25769957C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_2576A8E90();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3) {
        return sub_257699BE4(0, v3, 1, a1);
      }
      return result;
    }
    goto LABEL_144;
  }
  uint64_t v5 = result;
  uint64_t result = sub_25749F4B8(v3 / 2);
  uint64_t v95 = result;
  uint64_t v96 = v3;
  uint64_t v97 = v6;
  uint64_t v93 = a1;
  if (v3 <= 0)
  {
    uint64_t v98 = MEMORY[0x263F8EE78];
    unint64_t v31 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_110:
    if (v31 < 2)
    {
LABEL_121:
      uint64_t result = swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(void *)(v95 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_149;
    }
    uint64_t v85 = *v93;
    while (1)
    {
      unint64_t v86 = v31 - 2;
      if (v31 < 2) {
        break;
      }
      if (!v85) {
        goto LABEL_153;
      }
      uint64_t v87 = v98;
      uint64_t v88 = *(void *)(v98 + 32 + 16 * v86);
      uint64_t v89 = *(void *)(v98 + 32 + 16 * (v31 - 1) + 8);
      uint64_t result = sub_257699CAC((char *)(v85 + 16 * v88), (char *)(v85 + 16 * *(void *)(v98 + 32 + 16 * (v31 - 1))), v85 + 16 * v89, v97);
      if (v1) {
        goto LABEL_106;
      }
      if (v89 < v88) {
        goto LABEL_139;
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_25760008C(v98);
        uint64_t v87 = result;
      }
      if (v86 >= *(void *)(v87 + 16)) {
        goto LABEL_140;
      }
      uint64_t v90 = (void *)(v87 + 32 + 16 * v86);
      *uint64_t v90 = v88;
      v90[1] = v89;
      unint64_t v91 = *(void *)(v87 + 16);
      if (v31 > v91) {
        goto LABEL_141;
      }
      uint64_t result = (uint64_t)memmove((void *)(v87 + 32 + 16 * (v31 - 1)), (const void *)(v87 + 32 + 16 * v31), 16 * (v91 - v31));
      uint64_t v98 = v87;
      *(void *)(v87 + 16) = v91 - 1;
      unint64_t v31 = v91 - 1;
      uint64_t v3 = v96;
      if (v91 <= 2) {
        goto LABEL_121;
      }
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return result;
  }
  uint64_t v94 = v5;
  uint64_t v7 = 0;
  uint64_t v8 = *a1;
  uint64_t v92 = *a1 + 8;
  uint64_t v98 = MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v9 = v7++;
    if (v7 >= v3) {
      goto LABEL_32;
    }
    uint64_t v10 = (uint64_t *)(v8 + 16 * v7);
    uint64_t result = *v10;
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(v8 + 16 * v9);
    if (result == *v12 && v11 == v12[1])
    {
      uint64_t v15 = v9 + 2;
      if (v9 + 2 >= v3) {
        goto LABEL_31;
      }
      int v14 = 0;
LABEL_13:
      uint64_t v16 = (void *)(v92 + 16 * v15);
      do
      {
        uint64_t result = *(v16 - 1);
        uint64_t v17 = (void *)(v8 + 16 * v7);
        if (result == *v17 && *v16 == v17[1])
        {
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          uint64_t result = sub_2576A8F60();
          if ((v14 ^ result)) {
            goto LABEL_23;
          }
        }
        v16 += 2;
        uint64_t v19 = v15 + 1;
        uint64_t v7 = v15;
        uint64_t v15 = v19;
      }
      while (v19 < v3);
      uint64_t v15 = v19;
      goto LABEL_23;
    }
    uint64_t result = sub_2576A8F60();
    int v14 = result;
    uint64_t v15 = v9 + 2;
    if (v9 + 2 < v3) {
      goto LABEL_13;
    }
LABEL_23:
    uint64_t v7 = v15;
    if ((v14 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_24:
    if (v15 < v9) {
      goto LABEL_148;
    }
    if (v9 < v15)
    {
      uint64_t v20 = 16 * v15;
      uint64_t v21 = 16 * v9;
      uint64_t v22 = v15;
      uint64_t v23 = v9;
      do
      {
        if (v23 != --v22)
        {
          if (!v8) {
            goto LABEL_152;
          }
          uint64_t v24 = v8 + v20;
          uint64_t v25 = *(void *)(v8 + v21);
          uint64_t v26 = *(void *)(v8 + v21 + 8);
          *(_OWORD *)(v8 + v21) = *(_OWORD *)(v8 + v20 - 16);
          *(void *)(v24 - 16) = v25;
          *(void *)(v24 - 8) = v26;
        }
        ++v23;
        v20 -= 16;
        v21 += 16;
      }
      while (v23 < v22);
    }
LABEL_31:
    uint64_t v7 = v15;
LABEL_32:
    if (v7 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v7, v9)) {
      goto LABEL_143;
    }
    if (v7 - v9 >= v94) {
      goto LABEL_41;
    }
    if (__OFADD__(v9, v94)) {
      goto LABEL_146;
    }
    if (v9 + v94 >= v3) {
      uint64_t v27 = v3;
    }
    else {
      uint64_t v27 = v9 + v94;
    }
    if (v27 < v9) {
      goto LABEL_147;
    }
    if (v7 == v27)
    {
LABEL_41:
      uint64_t v28 = v98;
    }
    else
    {
      uint64_t v79 = (uint64_t *)(v8 + 16 * v7);
      uint64_t v28 = v98;
      do
      {
        uint64_t v80 = (uint64_t *)(v8 + 16 * v7);
        uint64_t result = *v80;
        uint64_t v81 = v80[1];
        uint64_t v82 = v9;
        uint64_t v83 = v79;
        do
        {
          if (result == *(v83 - 2) && v81 == *(v83 - 1)) {
            break;
          }
          uint64_t result = sub_2576A8F60();
          if ((result & 1) == 0) {
            break;
          }
          if (!v8) {
            goto LABEL_150;
          }
          uint64_t result = *v83;
          uint64_t v81 = v83[1];
          *(_OWORD *)uint64_t v83 = *((_OWORD *)v83 - 1);
          *(v83 - 1) = v81;
          *(v83 - 2) = result;
          v83 -= 2;
          ++v82;
        }
        while (v7 != v82);
        ++v7;
        v79 += 2;
      }
      while (v7 != v27);
      uint64_t v7 = v27;
    }
    if (v7 < v9) {
      goto LABEL_142;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2575FFF94(0, *(void *)(v28 + 16) + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    unint64_t v30 = *(void *)(v28 + 16);
    unint64_t v29 = *(void *)(v28 + 24);
    unint64_t v31 = v30 + 1;
    if (v30 >= v29 >> 1)
    {
      uint64_t result = (uint64_t)sub_2575FFF94((char *)(v29 > 1), v30 + 1, 1, (char *)v28);
      uint64_t v28 = result;
    }
    *(void *)(v28 + 16) = v31;
    uint64_t v32 = v28 + 32;
    char v33 = (uint64_t *)(v28 + 32 + 16 * v30);
    *char v33 = v9;
    v33[1] = v7;
    uint64_t v98 = v28;
    if (v30) {
      break;
    }
    unint64_t v31 = 1;
LABEL_90:
    uint64_t v3 = v96;
    if (v7 >= v96) {
      goto LABEL_110;
    }
  }
  while (1)
  {
    unint64_t v34 = v31 - 1;
    if (v31 >= 4)
    {
      unint64_t v39 = v32 + 16 * v31;
      uint64_t v40 = *(void *)(v39 - 64);
      uint64_t v41 = *(void *)(v39 - 56);
      BOOL v45 = __OFSUB__(v41, v40);
      uint64_t v42 = v41 - v40;
      if (v45) {
        goto LABEL_127;
      }
      uint64_t v44 = *(void *)(v39 - 48);
      uint64_t v43 = *(void *)(v39 - 40);
      BOOL v45 = __OFSUB__(v43, v44);
      uint64_t v37 = v43 - v44;
      char v38 = v45;
      if (v45) {
        goto LABEL_128;
      }
      unint64_t v46 = v31 - 2;
      uint64_t v47 = (uint64_t *)(v32 + 16 * (v31 - 2));
      uint64_t v49 = *v47;
      uint64_t v48 = v47[1];
      BOOL v45 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      if (v45) {
        goto LABEL_129;
      }
      BOOL v45 = __OFADD__(v37, v50);
      uint64_t v51 = v37 + v50;
      if (v45) {
        goto LABEL_131;
      }
      if (v51 >= v42)
      {
        unint64_t v69 = (uint64_t *)(v32 + 16 * v34);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        BOOL v45 = __OFSUB__(v70, v71);
        uint64_t v72 = v70 - v71;
        if (v45) {
          goto LABEL_137;
        }
        BOOL v62 = v37 < v72;
        goto LABEL_79;
      }
    }
    else
    {
      if (v31 != 3)
      {
        uint64_t v63 = *(void *)(v28 + 32);
        uint64_t v64 = *(void *)(v28 + 40);
        BOOL v45 = __OFSUB__(v64, v63);
        uint64_t v56 = v64 - v63;
        char v57 = v45;
        goto LABEL_73;
      }
      uint64_t v36 = *(void *)(v28 + 32);
      uint64_t v35 = *(void *)(v28 + 40);
      BOOL v45 = __OFSUB__(v35, v36);
      uint64_t v37 = v35 - v36;
      char v38 = v45;
    }
    if (v38) {
      goto LABEL_130;
    }
    unint64_t v46 = v31 - 2;
    char v52 = (uint64_t *)(v32 + 16 * (v31 - 2));
    uint64_t v54 = *v52;
    uint64_t v53 = v52[1];
    BOOL v55 = __OFSUB__(v53, v54);
    uint64_t v56 = v53 - v54;
    char v57 = v55;
    if (v55) {
      goto LABEL_132;
    }
    uint64_t v58 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    BOOL v45 = __OFSUB__(v59, v60);
    uint64_t v61 = v59 - v60;
    if (v45) {
      goto LABEL_134;
    }
    if (__OFADD__(v56, v61)) {
      goto LABEL_136;
    }
    if (v56 + v61 >= v37)
    {
      BOOL v62 = v37 < v61;
LABEL_79:
      if (v62) {
        unint64_t v34 = v46;
      }
      goto LABEL_81;
    }
LABEL_73:
    if (v57) {
      goto LABEL_133;
    }
    uint64_t v65 = (uint64_t *)(v32 + 16 * v34);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    BOOL v45 = __OFSUB__(v66, v67);
    uint64_t v68 = v66 - v67;
    if (v45) {
      goto LABEL_135;
    }
    if (v68 < v56) {
      goto LABEL_90;
    }
LABEL_81:
    unint64_t v73 = v34 - 1;
    if (v34 - 1 >= v31)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v8) {
      goto LABEL_151;
    }
    uint64_t v74 = (uint64_t *)(v32 + 16 * v73);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)(v32 + 16 * v34);
    uint64_t v77 = v76[1];
    uint64_t result = sub_257699CAC((char *)(v8 + 16 * *v74), (char *)(v8 + 16 * *v76), v8 + 16 * v77, v97);
    if (v1) {
      break;
    }
    if (v77 < v75) {
      goto LABEL_124;
    }
    if (v34 > *(void *)(v98 + 16)) {
      goto LABEL_125;
    }
    *uint64_t v74 = v75;
    *(void *)(v32 + 16 * v73 + 8) = v77;
    unint64_t v78 = *(void *)(v98 + 16);
    if (v34 >= v78) {
      goto LABEL_126;
    }
    uint64_t v28 = v98;
    unint64_t v31 = v78 - 1;
    uint64_t result = (uint64_t)memmove((void *)(v32 + 16 * v34), v76 + 2, 16 * (v78 - 1 - v34));
    *(void *)(v98 + 16) = v78 - 1;
    if (v78 <= 2) {
      goto LABEL_90;
    }
  }
LABEL_106:
  uint64_t result = swift_bridgeObjectRelease();
  if (v96 < -1) {
    goto LABEL_145;
  }
  *(void *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_257699BE4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
    while (2)
    {
      uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
      uint64_t result = *v9;
      uint64_t v10 = v9[1];
      uint64_t v11 = v6;
      uint64_t v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1)) {
          break;
        }
        uint64_t result = sub_2576A8F60();
        if ((result & 1) == 0) {
          break;
        }
        if (!v7)
        {
          __break(1u);
          return result;
        }
        uint64_t result = *v12;
        uint64_t v10 = v12[1];
        *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2) {
        continue;
      }
      break;
    }
  }
  return result;
}

uint64_t sub_257699CAC(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = a1;
  uint64_t v8 = a2 - a1;
  uint64_t v9 = (a2 - a1) / 16;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 16;
  if (v9 >= v11)
  {
    sub_257609FC4(a2, (uint64_t)(a3 - (void)a2) / 16, a4);
    unint64_t v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16) {
      goto LABEL_47;
    }
    uint64_t v18 = (char *)(a3 - 16);
    while (1)
    {
      uint64_t v19 = v18 + 16;
      uint64_t v20 = (char *)(v12 - 16);
      BOOL v21 = *(void *)(v12 - 16) == *((void *)v6 - 2) && *(void *)(v12 - 8) == *((void *)v6 - 1);
      if (v21 || (sub_2576A8F60() & 1) == 0)
      {
        BOOL v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23) {
          goto LABEL_43;
        }
      }
      else
      {
        BOOL v22 = v19 != v6 || v18 >= v6;
        uint64_t v20 = v6 - 16;
        v6 -= 16;
        if (!v22) {
          goto LABEL_43;
        }
      }
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4) {
        goto LABEL_47;
      }
    }
  }
  sub_257609FC4(a1, (a2 - a1) / 16, a4);
  unint64_t v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      BOOL v14 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
      if (!v14 && (sub_2576A8F60() & 1) != 0) {
        break;
      }
      uint64_t v15 = v4;
      BOOL v14 = v7 == v4;
      v4 += 16;
      if (!v14) {
        goto LABEL_15;
      }
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3) {
        goto LABEL_21;
      }
    }
    uint64_t v15 = v6;
    BOOL v14 = v7 == v6;
    v6 += 16;
    if (v14) {
      goto LABEL_16;
    }
LABEL_15:
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  uint64_t v6 = v7;
LABEL_47:
  sub_257609FC4(v4, (uint64_t)(v12 - (void)v4) / 16, v6);
  return 1;
}

BOOL sub_257699E54(char *a1)
{
  return sub_2576990B4(a1);
}

BOOL sub_257699E70(char *a1)
{
  return sub_257699120(a1);
}

uint64_t OUTLINED_FUNCTION_0_82()
{
  *(void *)(v1 - 40) = v0;
  return _s9IOMappingVMa();
}

uint64_t OUTLINED_FUNCTION_2_84()
{
  return sub_257582858(v0, (v1 & 0xC000000000000001) == 0, v1);
}

uint64_t OUTLINED_FUNCTION_3_75(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return sub_2574816EC(v13, v11, v12, a4, a5, (uint64_t)va, a7, 0, a8, a9, a10, a11);
}

void OUTLINED_FUNCTION_5_73(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t v5 = *(void *)(a3 + 16);
  char v6 = *(unsigned char *)(a3 + 24);
  *(unsigned char *)(v3 - 80) = *(unsigned char *)a3;
  *(void *)(v3 - 72) = v4;
  *(void *)(v3 - 64) = v5;
  *(unsigned char *)(v3 - 56) = v6;
}

void OUTLINED_FUNCTION_6_70(uint64_t a1, void *a2)
{
  *(void *)(v2 - 40) = *a2;
}

uint64_t OUTLINED_FUNCTION_7_62()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_8_67()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_9_70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return MEMORY[0x270F9EB80](a1, &a9, v9);
}

uint64_t OUTLINED_FUNCTION_11_63()
{
  return _s9IOMappingVMa();
}

uint64_t OUTLINED_FUNCTION_12_54()
{
  *uint64_t v0 = *(void *)(v1 + 152);
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return sub_2576A7F50();
}

uint64_t OUTLINED_FUNCTION_14_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  uint64_t v21 = va_arg(va1, void);
  return sub_2574816EC(v12, v11, v13 - 40, (uint64_t)va1, a5, 0, a7, (uint64_t)va, a8, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_15_50()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_51()
{
  return _s9IOMappingVMa();
}

uint64_t OUTLINED_FUNCTION_17_50()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_45()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_20_42()
{
  return sub_2576A7CD0();
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  *(void *)(v1 - 40) = v0;
  return _s9IOMappingVMa();
}

void OUTLINED_FUNCTION_22_43()
{
  JUMPOUT(0x25A2B8DB0);
}

uint64_t OUTLINED_FUNCTION_23_40()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_25_39()
{
  return _s9IOMappingVMa();
}

void OUTLINED_FUNCTION_27_34()
{
  JUMPOUT(0x25A2B84C0);
}

uint64_t OUTLINED_FUNCTION_29_31()
{
  return sub_2576A7C60();
}

BOOL LayerState.isInitialized.getter()
{
  OUTLINED_FUNCTION_19_46();
  return !v1 && v0 < 0;
}

uint64_t LayerState.place(on:)(uint64_t a1)
{
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return sub_257490818(a1);
  }
  *char v1 = sub_257490918();
  return swift_release();
}

ValueMetadata *LayerState.scalarType.getter()
{
  OUTLINED_FUNCTION_19_46();
  if (v1)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v0 < 0) {
      return Tensor.scalarType.getter();
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (ValueMetadata *)OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t LayerState.cast(to:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(a1 + 8) + 32))(&v4);
  uint64_t result = sub_257490B98(&v4);
  *a2 = result;
  return result;
}

uint64_t LayerState.projectedValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t LayerState.shape.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *a1 = *(void *)(*(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  return sub_2576A7810();
}

uint64_t LayerState.init(initializer:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t result = sub_25748FBC8(a1);
  *a2 = result;
  return result;
}

Swift::Void __swiftcall LayerState.initializeIfNeeded(toShape:)(NeuralNetworks::TensorShape toShape)
{
  uint64_t v1 = *(void *)toShape.dimensions._rawValue;
  sub_25748FC8C(&v1);
}

void OptionalLayerState.wrappedValue.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 8) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_22_44();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  *uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  sub_257486C84();
}

void OptionalLayerState.wrappedValue.setter(void *a1)
{
  if (*a1)
  {
    uint64_t v2 = *v1;
    v4[0] = *a1;
    v4[1] = v2;
    LayerState.wrappedValue.setter(v4);
  }
  else
  {
    OUTLINED_FUNCTION_11_64();
    if (v3)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_24_40();
      __break(1u);
    }
  }
}

uint64_t OptionalLayerState.projectedValue.getter@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_11_64();
  if (v2) {
    uint64_t result = swift_retain();
  }
  else {
    uint64_t result = 0;
  }
  *a1 = result;
  return result;
}

uint64_t OptionalLayerState.init(_:)(uint64_t *a1)
{
  if (*a1)
  {
    uint64_t v1 = *a1;
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v1 = OUTLINED_FUNCTION_20_7();
  }
  return OUTLINED_FUNCTION_9_71(v1);
}

uint64_t OptionalLayerState.init(initializer:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = sub_25748FBC8(a1);
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_20_7();
  }
  return OUTLINED_FUNCTION_9_71(v2);
}

uint64_t LayerState.id.getter()
{
  return *(unsigned int *)(*(void *)v0 + 16);
}

uint64_t (*LayerState.wrappedValue.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_14_60(a1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      *uint64_t v1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769A7B8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25769A7B8(uint64_t *a1, char a2)
{
  return sub_25769ABBC(a1, a2, (void (*)(uint64_t *))LayerState.wrappedValue.setter);
}

uint64_t _s14NeuralNetworks10LayerStateV12wrappedValueAA6TensorVvg_0()
{
  uint64_t v0 = OUTLINED_FUNCTION_22_44();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *uint64_t v1 = v0 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_257486C84();
}

void *sub_25769A868@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_25769A8B0(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  uint64_t v6 = *a2;
  v8[0] = *a1;
  v8[1] = v6;
  swift_retain();
  return a5(v8);
}

uint64_t _s14NeuralNetworks10LayerStateV12wrappedValueAA6TensorVvs_0(uint64_t *a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v3 = *a1;
    if ((v2 & 0x8000000000000000) == 0)
    {
      v8[0] = v3 | 0x8000000000000000;
      swift_retain();
      sub_25748F984(v8);
      return swift_release();
    }
    if (sub_257654B3C(*(void *)(*(void *)(v3 + 16) + 152), *(void *)(*(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)))
    {
      v8[0] = v3 | 0x8000000000000000;
      swift_retain();
      sub_257486C70(v2);
      sub_25748F984(v8);
      sub_257486C8C(v2);
      return swift_release();
    }
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    swift_retain();
    sub_257486C70(v2);
    sub_2576A8730();
    sub_2576A7B00();
    uint64_t v5 = sub_2576A7810();
    uint64_t v6 = MEMORY[0x263F8D6C8];
    MEMORY[0x25A2B83F0](v5, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v7 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v7, v6);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_35_1();
  uint64_t result = OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t (*LayerState.value.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v2 = OUTLINED_FUNCTION_14_60(a1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      *uint64_t v1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769ABA4;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25769ABA4(uint64_t *a1, char a2)
{
  return sub_25769ABBC(a1, a2, (void (*)(uint64_t *))LayerState.value.setter);
}

uint64_t sub_25769ABBC(uint64_t *a1, char a2, void (*a3)(uint64_t *))
{
  if (a2)
  {
    uint64_t v5 = *a1;
    swift_retain();
    a3(&v5);
    return swift_release();
  }
  else
  {
    uint64_t v5 = *a1;
    return ((uint64_t (*)(uint64_t *))a3)(&v5);
  }
}

uint64_t LayerState.rank.getter()
{
  OUTLINED_FUNCTION_19_46();
  if (v1)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v0 < 0) {
      return *(void *)(*(void *)(*(void *)((v0 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152) + 16);
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t _s14NeuralNetworks10LayerStateVyAcA6TensorVcfC_0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LayerVariableReference();
  uint64_t v2 = OUTLINED_FUNCTION_1_4();
  uint64_t result = OUTLINED_FUNCTION_15_51(v2);
  *a1 = result;
  return result;
}

BOOL sub_25769AD20()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_25769AD78@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_25769AD20();
  *a1 = result;
  return result;
}

void sub_25769ADB0(void *a1@<X8>)
{
  *a1 = 0x656C626169726176;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_25769ADCC()
{
  return 0x656C626169726176;
}

uint64_t sub_25769ADE4@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_25769AD68();
  *a1 = result != 0;
  return result;
}

uint64_t sub_25769AE14(uint64_t a1)
{
  unint64_t v2 = sub_25769C334();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25769AE50(uint64_t a1)
{
  unint64_t v2 = sub_25769C334();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LayerState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A006558);
  OUTLINED_FUNCTION_0_8();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_25769C334();
  sub_2576A91F0();
  if (!v10)
  {
    type metadata accessor for LayerVariableReference();
    sub_25769C380(&qword_26A006568);
    sub_2576A8D50();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v11, v16);
    *uint64_t v15 = a10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  OUTLINED_FUNCTION_7_1();
}

void LayerState.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A006570);
  OUTLINED_FUNCTION_0_8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25769C334();
  sub_2576A9230();
  type metadata accessor for LayerVariableReference();
  sub_25769C380(&qword_26A006578);
  sub_2576A8E40();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  OUTLINED_FUNCTION_7_1();
}

void (*sub_25769B0FC(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = LayerState.value.modify((uint64_t)v2);
  return sub_257655BB0;
}

void sub_25769B158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LayerState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_25769B170()
{
}

BOOL static LayerState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(*(void *)a1 + 16) == *(_DWORD *)(*(void *)a2 + 16);
}

uint64_t LayerState.hash(into:)()
{
  return sub_2576A90D0();
}

uint64_t LayerState.hashValue.getter()
{
  return sub_2576A9100();
}

uint64_t sub_25769B224()
{
  return sub_2576A9100();
}

unint64_t LayerState.description.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  if ((~v1 & 0xF000000000000007) == 0) {
    return 0;
  }
  sub_257486C84();
  sub_2576A8730();
  swift_bridgeObjectRelease();
  if (v1 < 0)
  {
    unint64_t v4 = 0xD000000000000014;
    uint64_t v3 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v3, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    Tensor.scalarType.getter();
    sub_2576A92D0();
  }
  else
  {
    unint64_t v4 = 0xD000000000000028;
    ParameterInitializer.description.getter();
  }
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_257486C8C(v1);
  return v4;
}

uint64_t LayerState.customMirror.getter()
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_2576A9150();
  OUTLINED_FUNCTION_0_8();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_13_58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F60);
  uint64_t inited = swift_initStackObject();
  uint64_t v9 = inited;
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v10 = MEMORY[0x263F8E8F8];
  *(_DWORD *)(inited + 48) = *(_DWORD *)(v0 + 16);
  *(void *)(inited + 72) = v10;
  strcpy((char *)(inited + 80), "isInitialized");
  *(_WORD *)(inited + 94) = -4864;
  uint64_t v11 = *(void *)(v0 + 32);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    *(void *)(inited + 120) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 96) = v11 < 0;
    if (v11 < 0)
    {
      uint64_t v21 = &type metadata for Tensor;
      *(void *)&long long v20 = v11 & 0x7FFFFFFFFFFFFFFFLL;
      *(void *)&long long v18 = 0x65756C6176;
      *((void *)&v18 + 1) = 0xE500000000000000;
      sub_257491D58(&v20, v19);
      sub_257486C84();
      sub_25747358C();
      uint64_t v9 = v12;
      *(void *)(v12 + 16) = 3;
      long long v13 = v19[0];
      *(_OWORD *)(v12 + 128) = v18;
      *(_OWORD *)(v12 + 144) = v13;
      *(_OWORD *)(v12 + 160) = v19[1];
    }
  }
  else
  {
    *(void *)(inited + 120) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(inited + 96) = 0;
  }
  *(void *)&long long v18 = v0;
  swift_retain();
  uint64_t v14 = sub_25746E770(v9);
  swift_bridgeObjectRelease();
  *(void *)&long long v20 = v14;
  uint64_t v15 = sub_2576A9140();
  OUTLINED_FUNCTION_20_43(v15);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, *MEMORY[0x263F8E830], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006438);
  sub_257699060();
  return sub_2576A9190();
}

void LayerState.computeDevice.getter(uint64_t a1@<X8>)
{
}

uint64_t LayerState.placed(on:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = *v2;
  swift_retain();
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return sub_257490818(a1);
  }
  *a2 = sub_257490918();
  return swift_release();
}

void sub_25769B764(void *a1@<X8>)
{
  OptionalLayerState.wrappedValue.getter(&v2);
  *a1 = v2;
}

void sub_25769B7B0(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char v3 = *((unsigned char *)a2 + 8);
  v4[0] = *a1;
  v4[1] = v2;
  char v5 = v3;
  swift_retain();
  OptionalLayerState.wrappedValue.setter(v4);
}

uint64_t (*OptionalLayerState.wrappedValue.modify(uint64_t a1))(uint64_t result, char a2)
{
  uint64_t v3 = *v1;
  *(void *)(a1 + 8) = *v1;
  int v4 = *((unsigned __int8 *)v1 + 8);
  *(unsigned char *)(a1 + 16) = v4;
  if (v4 != 1)
  {
    *(void *)a1 = 0;
    return sub_25769B8D0;
  }
  uint64_t v5 = *(void *)(v3 + 32);
  if ((~v5 & 0xF000000000000007) != 0)
  {
    if (v5 < 0)
    {
      *(void *)a1 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769B8D0;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t (*)(uint64_t, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25769B8D0(uint64_t result, char a2)
{
  uint64_t v2 = *(void *)result;
  if (a2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)result;
      swift_retain();
      LayerState.wrappedValue.setter(&v3);
LABEL_7:
      return swift_release();
    }
    if ((*(unsigned char *)(result + 16) & 1) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_24_40();
    __break(1u);
    return result;
  }
  if (v2)
  {
    uint64_t v3 = *(void *)result;
    return LayerState.wrappedValue.setter(&v3);
  }
  if (*(unsigned char *)(result + 16) == 1) {
    goto LABEL_11;
  }
  return result;
}

uint64_t OptionalLayerState.init(wrappedValue:)(void *a1)
{
  if (*a1)
  {
    type metadata accessor for LayerVariableReference();
    uint64_t v1 = OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_15_51(v1);
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_20_7();
  }
  return OUTLINED_FUNCTION_9_71(v2);
}

BOOL static OptionalLayerState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(*(void *)a1 + 16) == *(_DWORD *)(*(void *)a2 + 16);
}

uint64_t sub_25769BA28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7453726579616C5FLL && a2 == 0xEB00000000657461;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25769BB3C(char a1)
{
  if (a1) {
    return 0x656C62616E457369;
  }
  else {
    return 0x7453726579616C5FLL;
  }
}

uint64_t sub_25769BB80()
{
  return sub_25769BB3C(*v0);
}

uint64_t sub_25769BB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25769BA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25769BBB0(uint64_t a1)
{
  unint64_t v2 = sub_25769C3C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25769BBEC(uint64_t a1)
{
  unint64_t v2 = sub_25769C3C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void OptionalLayerState.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A006580);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[2] = *(unsigned __int8 *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25769C3C4();
  sub_2576A9230();
  char v12 = 0;
  sub_25766EA90();
  sub_2576A8E40();
  if (!v1)
  {
    char v11 = 1;
    sub_2576A8E10();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  OUTLINED_FUNCTION_7_1();
}

void OptionalLayerState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  char v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006590);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v15);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_25769C3C4();
  sub_2576A91F0();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_25766EA44();
    sub_2576A8D50();
    swift_retain();
    char v16 = sub_2576A8D20();
    uint64_t v17 = OUTLINED_FUNCTION_38_9();
    v18(v17);
    *(void *)uint64_t v14 = a10;
    *(unsigned char *)(v14 + 8) = v16 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_release();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25769BF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OptionalLayerState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_25769BF20()
{
}

uint64_t OptionalLayerState.customMirror.getter()
{
  uint64_t v1 = sub_2576A9150();
  OUTLINED_FUNCTION_0_8();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_18_1();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v5 - 8);
  OUTLINED_FUNCTION_13_58();
  OUTLINED_FUNCTION_11_64();
  if (v6) {
    return LayerState.customMirror.getter();
  }
  uint64_t v7 = sub_2576A9140();
  OUTLINED_FUNCTION_20_43(v7);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v0, *MEMORY[0x263F8E830], v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006438);
  sub_257699060();
  return sub_2576A9190();
}

unint64_t OptionalLayerState.description.getter()
{
  OUTLINED_FUNCTION_11_64();
  if (v0) {
    return LayerState.description.getter();
  }
  else {
    return 0;
  }
}

double OptionalLayerState.computeDevice.getter@<D0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_11_64();
  if (v2)
  {
    swift_retain();
    sub_257490778(a1);
    swift_release();
  }
  else
  {
    *(_DWORD *)(a1 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void OptionalLayerState.place(on:)()
{
  OUTLINED_FUNCTION_11_64();
  if (v2)
  {
    uint64_t v3 = v1;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_257490818(v3);
    }
    else
    {
      *char v0 = sub_257490918();
      swift_release();
    }
  }
}

uint64_t OptionalLayerState.placed(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(v2 + 8);
  if (v4 == 1)
  {
    uint64_t v6 = *(void *)v2;
    swift_retain_n();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_257490818(a1);
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t v8 = sub_257490918();
      uint64_t result = swift_release_n();
      uint64_t v6 = v8;
    }
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t result = OUTLINED_FUNCTION_20_7();
    uint64_t v6 = result;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t OptionalLayerState.cast(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  int v5 = *(unsigned __int8 *)(v3 + 8);
  if (v5 == 1)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 32);
    swift_retain();
    v8(&v11, a1, v7);
    uint64_t v9 = sub_257490B98(&v11);
    uint64_t result = swift_release();
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t result = OUTLINED_FUNCTION_20_7();
    uint64_t v9 = result;
  }
  *(void *)a3 = v9;
  *(unsigned char *)(a3 + 8) = v5;
  return result;
}

unint64_t sub_25769C334()
{
  unint64_t result = qword_26A006560;
  if (!qword_26A006560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006560);
  }
  return result;
}

uint64_t sub_25769C380(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LayerVariableReference();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25769C3C4()
{
  unint64_t result = qword_26A006588;
  if (!qword_26A006588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006588);
  }
  return result;
}

unint64_t sub_25769C414()
{
  unint64_t result = qword_26A006598;
  if (!qword_26A006598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006598);
  }
  return result;
}

void *sub_25769C460@<X0>(void *a1@<X8>)
{
  return sub_25769A868((void *(*)(uint64_t *__return_ptr))LayerState.wrappedValue.getter, a1);
}

uint64_t sub_25769C48C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25769A8B0(a1, a2, a3, a4, (uint64_t (*)(void *))LayerState.wrappedValue.setter);
}

void *sub_25769C4B8@<X0>(void *a1@<X8>)
{
  return sub_25769A868((void *(*)(uint64_t *__return_ptr))LayerState.value.getter, a1);
}

uint64_t sub_25769C4E4(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_25769A8B0(a1, a2, a3, a4, (uint64_t (*)(void *))LayerState.value.setter);
}

void type metadata accessor for LayerState()
{
}

uint64_t initializeBufferWithCopyOfBuffer for OptionalLayerState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OptionalLayerState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for OptionalLayerState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

void type metadata accessor for OptionalLayerState()
{
}

unsigned char *storeEnumTagSinglePayload for OptionalLayerState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25769C6C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalLayerState.CodingKeys()
{
  return &type metadata for OptionalLayerState.CodingKeys;
}

unsigned char *sub_25769C6FC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x25769C798);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for LayerState.CodingKeys()
{
}

unint64_t sub_25769C7D0()
{
  unint64_t result = qword_26A0065A0;
  if (!qword_26A0065A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065A0);
  }
  return result;
}

unint64_t sub_25769C820()
{
  unint64_t result = qword_26A0065A8;
  if (!qword_26A0065A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065A8);
  }
  return result;
}

unint64_t sub_25769C870()
{
  unint64_t result = qword_26A0065B0;
  if (!qword_26A0065B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065B0);
  }
  return result;
}

unint64_t sub_25769C8C0()
{
  unint64_t result = qword_26A0065B8;
  if (!qword_26A0065B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065B8);
  }
  return result;
}

unint64_t sub_25769C910()
{
  unint64_t result = qword_26A0065C0;
  if (!qword_26A0065C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065C0);
  }
  return result;
}

unint64_t sub_25769C960()
{
  unint64_t result = qword_26A0065C8;
  if (!qword_26A0065C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_71(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 8) = v2 != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_60(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(a1 + 8) = *v1;
  return *(void *)(v2 + 32);
}

uint64_t OUTLINED_FUNCTION_15_51(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_25748FB58((uint64_t *)va, 0x100000000);
}

uint64_t OUTLINED_FUNCTION_20_43(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_22_44()
{
  return *(void *)(*(void *)v0 + 32);
}

uint64_t Parameter.projectedValue.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 9);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_retain();
}

void OptionalParameter.wrappedValue.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 10) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_22_44();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  *char v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  sub_257486C84();
}

void OptionalParameter.wrappedValue.setter()
{
  OUTLINED_FUNCTION_12_55();
  if (v1)
  {
    if (v0)
    {
      uint64_t v2 = v0;
      Parameter.wrappedValue.setter(&v2);
      return;
    }
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_9;
  }
  if (v0)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_9:
    sub_2576A8B60();
    __break(1u);
  }
}

uint64_t OptionalParameter.projectedValue.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_12_55();
  if (v3)
  {
    if (*(unsigned char *)(v1 + 9)) {
      __int16 v4 = 256;
    }
    else {
      __int16 v4 = 0;
    }
    __int16 v6 = v4 | *(unsigned __int8 *)(v1 + 8);
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v6 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v6;
  return result;
}

BOOL Parameter.isInitialized.getter()
{
  OUTLINED_FUNCTION_19_46();
  return !v1 && v0 < 0;
}

uint64_t Parameter.rank.getter()
{
  OUTLINED_FUNCTION_19_46();
  if (v1)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v0 < 0) {
      return *(void *)(*(void *)(*(void *)((v0 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152) + 16);
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t Parameter.shape.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *a1 = *(void *)(*(void *)((v2 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  return sub_2576A7810();
}

uint64_t OptionalParameter.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  if (*(void *)a1)
  {
    unsigned int v4 = *(unsigned __int16 *)(a1 + 8);
    char v5 = v4 & 1;
    int v6 = (v4 >> 8) & 1;
    uint64_t result = *(void *)a1;
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t result = OUTLINED_FUNCTION_20_7();
    char v5 = 0;
    LOBYTE(v6) = 1;
  }
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 9) = v6;
  *(unsigned char *)(a2 + 10) = v3 != 0;
  return result;
}

uint64_t Parameter.init(initializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  uint64_t result = sub_25748FBC8(a1);
  *(void *)a2 = result;
  *(_WORD *)(a2 + 8) = 256;
  return result;
}

uint64_t OptionalParameter.init(initializer:)(uint64_t a1)
{
  if (a1)
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = sub_25748FBC8(a1);
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_20_7();
  }
  return OUTLINED_FUNCTION_11_65(v2);
}

Swift::Void __swiftcall Parameter.initializeIfNeeded(toShape:)(NeuralNetworks::TensorShape toShape)
{
  uint64_t v1 = *(void *)toShape.dimensions._rawValue;
  sub_25748FC8C(&v1);
}

uint64_t Parameter.place(on:)(uint64_t a1)
{
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return sub_257490818(a1);
  }
  *uint64_t v1 = sub_257490918();
  return swift_release();
}

ValueMetadata *Parameter.scalarType.getter()
{
  OUTLINED_FUNCTION_19_46();
  if (v1)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v0 < 0) {
      return Tensor.scalarType.getter();
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (ValueMetadata *)OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t Parameter.cast(to:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(*(void *)(a1 + 8) + 32))(&v4);
  uint64_t result = sub_257490B98(&v4);
  *(void *)a2 = result;
  *(_WORD *)(a2 + 8) = 256;
  return result;
}

uint64_t Parameter.id.getter()
{
  return *(unsigned int *)(*(void *)v0 + 16);
}

uint64_t (*Parameter.wrappedValue.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = OUTLINED_FUNCTION_9_72();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769D12C;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25769D12C(uint64_t *a1, char a2)
{
  return sub_25769D548(a1, a2, (void (*)(uint64_t *))Parameter.wrappedValue.setter);
}

void *sub_25769D148@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_25769D1A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v7 = *a1;
  swift_retain();
  return a5(&v7);
}

uint64_t _s14NeuralNetworks9ParameterV12wrappedValueAA6TensorVvs_0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v1[8] == 1) {
    goto LABEL_7;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v9[0] = v2;
    uint64_t v4 = *(unsigned int *)(*(void *)v1 + 16);
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    swift_retain();
    char v10 = 0;
    *(void *)uint64_t v1 = sub_25748FB58(v9, v4);
    swift_release();
LABEL_7:
    return swift_release();
  }
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      v9[0] = v2 | 0x8000000000000000;
      swift_retain();
      sub_25748F984(v9);
      return swift_release();
    }
    if (sub_257654B3C(*(void *)(*(void *)(v2 + 16) + 152), *(void *)(*(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)))
    {
      v9[0] = v2 | 0x8000000000000000;
      swift_retain();
      sub_257486C70(v3);
      sub_25748F984(v9);
      sub_257486C8C(v3);
      return swift_release();
    }
    v9[0] = 0;
    v9[1] = 0xE000000000000000;
    swift_retain();
    sub_257486C70(v3);
    sub_2576A8730();
    sub_2576A7B00();
    uint64_t v6 = sub_2576A7810();
    uint64_t v7 = MEMORY[0x263F8D6C8];
    MEMORY[0x25A2B83F0](v6, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v8 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v8, v7);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
  }
  else
  {
    OUTLINED_FUNCTION_17_0();
  }
  OUTLINED_FUNCTION_35_1();
  uint64_t result = OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t (*Parameter.value.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = OUTLINED_FUNCTION_9_72();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769D530;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_25769D530(uint64_t *a1, char a2)
{
  return sub_25769D548(a1, a2, (void (*)(uint64_t *))Parameter.value.setter);
}

uint64_t sub_25769D548(uint64_t *a1, char a2, void (*a3)(uint64_t *))
{
  if (a2)
  {
    uint64_t v5 = *a1;
    swift_retain();
    a3(&v5);
    return swift_release();
  }
  else
  {
    uint64_t v5 = *a1;
    return ((uint64_t (*)(uint64_t *))a3)(&v5);
  }
}

uint64_t Parameter.isFrozen.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t Parameter.isFrozen.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*Parameter.isFrozen.modify())(void)
{
  return nullsub_1;
}

uint64_t Parameter.isRequiringGradients.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t Parameter.isRequiringGradients.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*Parameter.isRequiringGradients.modify())(void)
{
  return nullsub_1;
}

uint64_t _s14NeuralNetworks9ParameterV12wrappedValueAcA6TensorV_tcfC_0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LayerVariableReference();
  uint64_t v2 = OUTLINED_FUNCTION_1_4();
  uint64_t result = OUTLINED_FUNCTION_15_51(v2);
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = 256;
  return result;
}

uint64_t sub_25769D684()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25769D6DC(char a1)
{
  if (a1) {
    return 0x6E657A6F72467369;
  }
  else {
    return 0x656C626169726176;
  }
}

uint64_t sub_25769D70C(char *a1, char *a2)
{
  return sub_257573DA4(*a1, *a2);
}

uint64_t sub_25769D718()
{
  return sub_2576A3A40();
}

uint64_t sub_25769D720()
{
  return sub_25746F690();
}

uint64_t sub_25769D728()
{
  return sub_2575EE9C8();
}

uint64_t sub_25769D730@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25769D684();
  *a1 = result;
  return result;
}

uint64_t sub_25769D760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25769D6DC(*v1);
  *a1 = result;
  a1[1] = 0xE800000000000000;
  return result;
}

uint64_t sub_25769D790()
{
  return sub_25769D6DC(*v0);
}

uint64_t sub_25769D7B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25769D6D8();
  *a1 = result;
  return result;
}

uint64_t sub_25769D7D8(uint64_t a1)
{
  unint64_t v2 = sub_25769EE40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25769D814(uint64_t a1)
{
  unint64_t v2 = sub_25769EE40();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Parameter.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  char v12 = v11;
  uint64_t v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0065D0);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v15);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_25769EE40();
  sub_2576A91F0();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    sub_25769C380(&qword_26A006568);
    sub_2576A8D50();
    swift_retain();
    char v16 = sub_2576A8D20();
    uint64_t v17 = OUTLINED_FUNCTION_6_21();
    v18(v17);
    *(void *)uint64_t v14 = a10;
    *(unsigned char *)(v14 + 8) = v16 & 1;
    *(unsigned char *)(v14 + 9) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_release();
  }
  OUTLINED_FUNCTION_7_1();
}

void Parameter.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0065E0);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_14_61();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25769EE40();
  OUTLINED_FUNCTION_22_45();
  type metadata accessor for LayerVariableReference();
  sub_25769C380(&qword_26A006578);
  sub_2576A8E40();
  if (!v0) {
    sub_2576A8E10();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_7_1();
}

void (*sub_25769DB5C(uint64_t **a1))(void *a1)
{
  unint64_t v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)Parameter.value.modify(v2);
  return sub_257655BB0;
}

void sub_25769DBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Parameter.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_25769DBD0()
{
}

Swift::Void __swiftcall Parameter.freeze()()
{
  *(unsigned char *)(v0 + 8) = 1;
}

Swift::Void __swiftcall Parameter.unfreeze()()
{
  *(unsigned char *)(v0 + 8) = 0;
}

BOOL static Parameter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(*(void *)a1 + 16) == *(_DWORD *)(*(void *)a2 + 16);
}

uint64_t Parameter.hash(into:)()
{
  return sub_2576A90D0();
}

uint64_t Parameter.hashValue.getter()
{
  return sub_2576A9100();
}

unint64_t Parameter.description.getter()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  if ((~v1 & 0xF000000000000007) == 0) {
    return 0;
  }
  sub_257486C84();
  sub_2576A8730();
  swift_bridgeObjectRelease();
  if (v1 < 0)
  {
    unint64_t v4 = 0xD000000000000012;
    uint64_t v3 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v3, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    Tensor.scalarType.getter();
    sub_2576A92D0();
  }
  else
  {
    unint64_t v4 = 0xD000000000000026;
    ParameterInitializer.description.getter();
  }
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_257486C8C(v1);
  return v4;
}

uint64_t Parameter.customMirror.getter()
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_2576A9150();
  OUTLINED_FUNCTION_0_8();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_8_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v8 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *v0;
  char v13 = *((unsigned char *)v0 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F60);
  uint64_t inited = swift_initStackObject();
  uint64_t v15 = inited;
  *(_OWORD *)(inited + 16) = xmmword_2576ABB50;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v16 = MEMORY[0x263F8E8F8];
  *(_DWORD *)(inited + 48) = *(_DWORD *)(v12 + 16);
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = 0x6E657A6F72467369;
  *(void *)(inited + 88) = 0xE800000000000000;
  uint64_t v17 = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 96) = v13;
  *(void *)(inited + 120) = v17;
  strcpy((char *)(inited + 128), "isInitialized");
  *(_WORD *)(inited + 142) = -4864;
  uint64_t v18 = *(void *)(v12 + 32);
  if ((~v18 & 0xF000000000000007) != 0)
  {
    *(void *)(inited + 168) = v17;
    *(unsigned char *)(inited + 144) = v18 < 0;
    if (v18 < 0)
    {
      uint64_t v27 = &type metadata for Tensor;
      *(void *)&long long v26 = v18 & 0x7FFFFFFFFFFFFFFFLL;
      *(void *)&long long v24 = 0x65756C6176;
      *((void *)&v24 + 1) = 0xE500000000000000;
      sub_257491D58(&v26, v25);
      sub_257486C84();
      sub_25747358C();
      uint64_t v15 = v19;
      *(void *)(v19 + 16) = 4;
      long long v20 = v25[0];
      *(_OWORD *)(v19 + 176) = v24;
      *(_OWORD *)(v19 + 192) = v20;
      *(_OWORD *)(v19 + 208) = v25[1];
    }
  }
  else
  {
    *(void *)(inited + 168) = v17;
    *(unsigned char *)(inited + 144) = 0;
  }
  swift_retain();
  uint64_t v21 = sub_25746E770(v15);
  swift_bridgeObjectRelease();
  *(void *)&long long v26 = v21;
  uint64_t v22 = sub_2576A9140();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v22);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, *MEMORY[0x263F8E830], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006438);
  sub_257699060();
  return sub_2576A9190();
}

void Parameter.computeDevice.getter(uint64_t a1@<X8>)
{
}

uint64_t Parameter.placed(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *(unsigned char *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 9);
  *(void *)a2 = *(void *)v2;
  *(unsigned char *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 9) = v6;
  swift_retain();
  if (swift_isUniquelyReferenced_nonNull_native()) {
    return sub_257490818(a1);
  }
  *(void *)a2 = sub_257490918();
  return swift_release();
}

void sub_25769E1CC(void *a1@<X8>)
{
  OptionalParameter.wrappedValue.getter(&v2);
  *a1 = v2;
}

void sub_25769E228()
{
}

uint64_t *(*OptionalParameter.wrappedValue.modify(uint64_t *a1))(uint64_t *result, char a2)
{
  a1[1] = v1;
  OUTLINED_FUNCTION_12_55();
  if (!v3)
  {
    *a1 = 0;
    return sub_25769E328;
  }
  uint64_t v4 = OUTLINED_FUNCTION_9_72();
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      *a1 = v4 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_25769E328;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t *(*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t *sub_25769E328(uint64_t *result, char a2)
{
  uint64_t v2 = *result;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(result[1] + 10))
    {
      if (v2)
      {
        uint64_t v3 = *result;
        return (uint64_t *)Parameter.wrappedValue.setter(&v3);
      }
      goto LABEL_14;
    }
    if (!v2) {
      return result;
    }
    swift_release();
LABEL_16:
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  if (!*(unsigned char *)(result[1] + 10))
  {
    if (!v2) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!v2)
  {
LABEL_14:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
LABEL_17:
    uint64_t result = (uint64_t *)sub_2576A8B60();
    __break(1u);
    return result;
  }
  uint64_t v3 = *result;
  swift_retain();
  Parameter.wrappedValue.setter(&v3);
LABEL_9:
  return (uint64_t *)swift_release();
}

uint64_t OptionalParameter.init(wrappedValue:)(void *a1)
{
  if (*a1)
  {
    type metadata accessor for LayerVariableReference();
    uint64_t v1 = OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_15_51(v1);
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t v2 = OUTLINED_FUNCTION_20_7();
  }
  return OUTLINED_FUNCTION_11_65(v2);
}

BOOL static OptionalParameter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(*(void *)a1 + 16) == *(_DWORD *)(*(void *)a2 + 16);
}

uint64_t sub_25769E4A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74656D617261705FLL && a2 == 0xEA00000000007265;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25769E5B0(char a1)
{
  if (a1) {
    return 0x656C62616E457369;
  }
  else {
    return 0x74656D617261705FLL;
  }
}

uint64_t sub_25769E5F0()
{
  return sub_25769E5B0(*v0);
}

uint64_t sub_25769E5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25769E4A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25769E620(uint64_t a1)
{
  unint64_t v2 = sub_25769EE8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25769E65C(uint64_t a1)
{
  unint64_t v2 = sub_25769EE8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void OptionalParameter.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0065E8);
  OUTLINED_FUNCTION_0_8();
  uint64_t v7 = v5;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_14_61();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25769EE8C();
  OUTLINED_FUNCTION_22_45();
  sub_2574B3990();
  sub_2576A8E40();
  if (!v0) {
    sub_2576A8E10();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v4);
  OUTLINED_FUNCTION_7_1();
}

void OptionalParameter.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0065F8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25769EE8C();
  sub_2576A91F0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_2574B3944();
    sub_2576A8D50();
    swift_retain();
    char v6 = sub_2576A8D20();
    uint64_t v7 = OUTLINED_FUNCTION_6_21();
    v8(v7);
    *(void *)uint64_t v4 = v9;
    *(unsigned char *)(v4 + 8) = v10;
    *(unsigned char *)(v4 + 9) = v11;
    *(unsigned char *)(v4 + 10) = v6 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_release();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25769E984()
{
}

void sub_25769E99C()
{
}

uint64_t OptionalParameter.customMirror.getter()
{
  uint64_t v1 = sub_2576A9150();
  OUTLINED_FUNCTION_0_8();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_8_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = *((unsigned char *)v0 + 8);
  char v12 = *((unsigned char *)v0 + 9);
  if (*((unsigned char *)v0 + 10) == 1)
  {
    uint64_t v16 = *v0;
    char v17 = v11;
    char v18 = v12;
    return Parameter.customMirror.getter();
  }
  else
  {
    uint64_t v16 = *v0;
    char v17 = v11;
    char v18 = v12;
    char v19 = 0;
    v15[1] = MEMORY[0x263F8EE78];
    uint64_t v14 = sub_2576A9140();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v14);
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, *MEMORY[0x263F8E830], v1);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A006438);
    sub_257699060();
    return sub_2576A9190();
  }
}

unint64_t OptionalParameter.description.getter()
{
  OUTLINED_FUNCTION_12_55();
  if (v0) {
    return Parameter.description.getter();
  }
  else {
    return 0;
  }
}

double OptionalParameter.computeDevice.getter@<D0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_12_55();
  if (v2)
  {
    swift_retain();
    sub_257490778(a1);
    swift_release();
  }
  else
  {
    *(_DWORD *)(a1 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

void OptionalParameter.place(on:)()
{
  OUTLINED_FUNCTION_12_55();
  if (v2)
  {
    uint64_t v3 = v1;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_257490818(v3);
    }
    else
    {
      *char v0 = sub_257490918();
      swift_release();
    }
  }
}

uint64_t OptionalParameter.placed(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(v2 + 10);
  if (v4 == 1)
  {
    uint64_t v6 = *(void *)v2;
    char v7 = *(unsigned char *)(v2 + 9);
    char v8 = *(unsigned char *)(v2 + 8);
    swift_retain_n();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      sub_257490818(a1);
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t v10 = sub_257490918();
      uint64_t result = swift_release_n();
      uint64_t v6 = v10;
    }
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t result = OUTLINED_FUNCTION_20_7();
    uint64_t v6 = result;
    char v8 = 0;
    char v7 = 1;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 9) = v7;
  *(unsigned char *)(a2 + 10) = v4;
  return result;
}

uint64_t OptionalParameter.cast(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  int v5 = *(unsigned __int8 *)(v3 + 10);
  if (v5 == 1)
  {
    uint64_t v7 = *(void *)(a2 + 8);
    char v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v7 + 32);
    swift_retain();
    v8(&v11, a1, v7);
    uint64_t v9 = sub_257490B98(&v11);
    uint64_t result = swift_release();
  }
  else
  {
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_1_4();
    uint64_t result = OUTLINED_FUNCTION_20_7();
    uint64_t v9 = result;
  }
  *(void *)a3 = v9;
  *(_WORD *)(a3 + 8) = 256;
  *(unsigned char *)(a3 + 10) = v5;
  return result;
}

unint64_t sub_25769EE40()
{
  unint64_t result = qword_26A0065D8;
  if (!qword_26A0065D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065D8);
  }
  return result;
}

unint64_t sub_25769EE8C()
{
  unint64_t result = qword_26A0065F0;
  if (!qword_26A0065F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0065F0);
  }
  return result;
}

unint64_t sub_25769EEDC()
{
  unint64_t result = qword_26A006600;
  if (!qword_26A006600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006600);
  }
  return result;
}

void *sub_25769EF28@<X0>(void *a1@<X8>)
{
  return sub_25769D148((void *(*)(uint64_t *__return_ptr))Parameter.wrappedValue.getter, a1);
}

uint64_t sub_25769EF54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25769D1A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))Parameter.wrappedValue.setter);
}

void *sub_25769EF80@<X0>(void *a1@<X8>)
{
  return sub_25769D148((void *(*)(uint64_t *__return_ptr))Parameter.value.getter, a1);
}

uint64_t sub_25769EFAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_25769D1A0(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))Parameter.value.setter);
}

uint64_t sub_25769EFE4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Parameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for Parameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Parameter(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 10))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Parameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Parameter()
{
}

uint64_t sub_25769F14C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 9) = *(_WORD *)(a2 + 9);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OptionalParameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t __swift_memcpy11_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 7) = *(_DWORD *)((char *)a2 + 7);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for OptionalParameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalParameter(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 11))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalParameter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 10) = 0;
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 11) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 11) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for OptionalParameter()
{
}

ValueMetadata *type metadata accessor for OptionalParameter.CodingKeys()
{
  return &type metadata for OptionalParameter.CodingKeys;
}

unsigned char *_s14NeuralNetworks17OptionalParameterV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25769F3C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for Parameter.CodingKeys()
{
}

unint64_t sub_25769F3F8()
{
  unint64_t result = qword_26A006608;
  if (!qword_26A006608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006608);
  }
  return result;
}

unint64_t sub_25769F448()
{
  unint64_t result = qword_26A006610;
  if (!qword_26A006610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006610);
  }
  return result;
}

unint64_t sub_25769F498()
{
  unint64_t result = qword_26A006618;
  if (!qword_26A006618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006618);
  }
  return result;
}

unint64_t sub_25769F4E8()
{
  unint64_t result = qword_26A006620;
  if (!qword_26A006620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006620);
  }
  return result;
}

unint64_t sub_25769F538()
{
  unint64_t result = qword_26A006628;
  if (!qword_26A006628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006628);
  }
  return result;
}

unint64_t sub_25769F588()
{
  unint64_t result = qword_26A006630[0];
  if (!qword_26A006630[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A006630);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_72()
{
  return *(void *)(*(void *)v0 + 32);
}

uint64_t OUTLINED_FUNCTION_11_65(uint64_t result)
{
  *(void *)uint64_t v1 = result;
  *(_WORD *)(v1 + 8) = 256;
  *(unsigned char *)(v1 + 10) = v2 != 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_45()
{
  return sub_2576A9230();
}

uint64_t static Framework.name.getter()
{
  return 0x654E6C617275654ELL;
}

unint64_t static Framework.bundleIdentifier.getter()
{
  return 0xD000000000000018;
}

ValueMetadata *type metadata accessor for Framework()
{
  return &type metadata for Framework;
}

double sub_25769F6A0@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/OptimizerOps.swift";
  *(_OWORD *)(a1 + 8) = xmmword_2576AD930;
  *(void *)&double result = 82;
  *(_OWORD *)(a1 + 24) = xmmword_2576B8240;
  *(void *)(a1 + 40) = "init(id:parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:creationSite:)";
  *(void *)(a1 + 48) = 93;
  *(_WORD *)(a1 + 56) = 2;
  return result;
}

float SGD.learningRate.getter()
{
  return *(float *)v0;
}

void SGD.learningRate.setter(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*SGD.learningRate.modify())(void)
{
  return nullsub_1;
}

float SGD.momentum.getter()
{
  return *(float *)(v0 + 4);
}

float SGD.gradientScale.getter()
{
  return *(float *)(v0 + 8);
}

uint64_t SGD.usesNesterovMomentum.getter()
{
  return *(unsigned __int8 *)(v0 + 12);
}

void SGD.gradientClippingMode.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 28);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

void SGD.regularizationKind.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 32);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(v1 + 36);
  *(_DWORD *)a1 = v2;
}

uint64_t SGD.velocity.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return sub_2576A7810();
}

uint64_t SGD.velocity.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  return result;
}

uint64_t (*SGD.velocity.modify())(void)
{
  return nullsub_1;
}

uint64_t SGD.init(for:learningRate:momentum:usesNesterovMomentum:gradientClippingMode:regularizationKind:gradientScale:)@<X0>(char a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>, float a5@<S0>, float a6@<S1>, float a7@<S2>)
{
  OUTLINED_FUNCTION_0_10();
  float v18 = MEMORY[0x270FA5388](v14).n128_f32[0];
  long long v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v18 < 0.0)
  {
    OUTLINED_FUNCTION_18_4();
    uint64_t v26 = 40;
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  if (a6 >= 0.0)
  {
    uint64_t v21 = *v15;
    unint64_t v22 = *(unsigned int *)v16 | ((unint64_t)*((unsigned __int8 *)v16 + 4) << 32);
    if (BYTE4(v22) == 255 || *v16 > 0.0)
    {
      unint64_t v23 = *((unsigned int *)v15 + 2) | ((unint64_t)*((unsigned __int8 *)v15 + 12) << 32);
      (*(void (**)(char *))(v17 + 16))(v20);
      uint64_t result = OptimizerStateDictionary.init(_:)((void (*)(void, void))v20, a2, a3, &v27);
      uint64_t v25 = v27;
      *(float *)a4 = a5;
      *(float *)(a4 + 4) = a6;
      *(float *)(a4 + 8) = a7;
      *(unsigned char *)(a4 + 12) = a1 & 1;
      *(void *)(a4 + 16) = v21;
      *(unsigned char *)(a4 + 28) = BYTE4(v23);
      *(_DWORD *)(a4 + 24) = v23;
      *(unsigned char *)(a4 + 36) = BYTE4(v22);
      *(_DWORD *)(a4 + 32) = v22;
      *(void *)(a4 + 40) = v25;
      *(void *)(a4 + 48) = 0;
      return result;
    }
    OUTLINED_FUNCTION_18_4();
    uint64_t v26 = 43;
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_18_4();
  uint64_t v26 = 41;
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_35_1();
LABEL_10:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t (*SGD.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3))(unsigned char *, void)
{
  uint64_t v4 = v3;
  uint64_t v177 = a1;
  uint64_t v207 = *MEMORY[0x263EF8340];
  uint64_t v155 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_10();
  v182 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_3();
  uint64_t v154 = v9;
  sub_2576A75E0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v152 = v11;
  uint64_t v153 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_3();
  uint64_t v151 = v12;
  uint64_t v163 = sub_2576A75A0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  v161 = (char *)&v148 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v148 - v18;
  MEMORY[0x270FA5388](v20);
  unint64_t v22 = (unint64_t)&v148 - v21;
  uint64_t WitnessTable = swift_getWitnessTable();
  nullsub_1(a3);
  v180 = (const char **)a3;
  uint64_t v174 = *(void *)(a3 + 16);
  sub_2576A89D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v179 = a2;
  uint64_t v23 = MEMORY[0x25A2B84C0](a2);
  sub_2574729F0(0, v23 & ~(v23 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v183 = v24;
  if (qword_26A0008F8 != -1) {
LABEL_91:
  }
    swift_once();
  uint64_t v25 = sub_2576A75D0();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_26A001FD0);
  sub_2576A7590();
  uint64_t v158 = v26;
  uint64_t v27 = sub_2576A75C0();
  os_signpost_type_t v28 = sub_2576A83C0();
  char v29 = sub_2576A8480();
  uint64_t v171 = v4;
  if (v29)
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v30 = 0;
    os_signpost_id_t v31 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v27, v28, v31, "Optimizing", "", v30, 2u);
    uint64_t v32 = v30;
    uint64_t v4 = v171;
    MEMORY[0x25A2BAC80](v32, -1, -1);
  }

  uint64_t v33 = v163;
  (*((void (**)(char *, unint64_t, uint64_t))v14 + 2))(v19, v22, v163);
  sub_2576A7610();
  swift_allocObject();
  uint64_t v159 = sub_2576A7600();
  unint64_t v34 = (void (*)(char *, uint64_t))*((void *)v14 + 1);
  v14 += 8;
  v162 = v14;
  v160 = v34;
  v34((char *)v22, v33);
  OUTLINED_FUNCTION_23_2();
  sub_25747B47C((uint64_t)&v187, (uint64_t)&v201);
  uint64_t v35 = MEMORY[0x263F8EE78];
  sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)&unk_27065EDE0, (uint64_t)&v201, (uint64_t *)&v196);
  uint64_t v36 = sub_25747B4E4((uint64_t)&v187);
  v186 = (void *)v196;
  if (*(unsigned __int8 *)(v4 + 28) != 255 && (unint64_t)*(unsigned __int8 *)(v4 + 28) << 32 == 0x200000000)
  {
    unint64_t v22 = *(void *)(v4 + 16);
    if ((v22 & 0x100000000) != 0)
    {
      *(void *)&long long v187 = v179;
      MEMORY[0x270FA5388](v36);
      uint64_t v146 = v180;
      uint64_t v147 = WitnessTable;
      uint64_t v40 = sub_2576A7F50();
      uint64_t v41 = swift_getWitnessTable();
      sub_257495BE0((void (*)(char *, uint64_t))sub_25749F688, (uint64_t)(&v148 - 4), v40, (uint64_t)&type metadata for Tensor, MEMORY[0x263F8E628], v41, MEMORY[0x263F8E658], v42);
      uint64_t v181 = 0;
      uint64_t v4 = v171;
      LOBYTE(v187) = 13;
      Tensor.init(stacking:alongAxis:scalarType:)();
      *(void *)&long long v196 = v201;
      Tensor.sum()();
      swift_release();
      uint64_t v43 = v187;
      OUTLINED_FUNCTION_23_2();
      unint64_t v22 = *(unsigned __int8 *)(*(void *)(v43 + 16) + 160);
      sub_25747B47C((uint64_t)&v187, (uint64_t)&v201);
      v193[0] = v35;
      v200[0] = v22;
      sub_25747B47C((uint64_t)&v201, (uint64_t)&v196);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v201);
      uint64_t v44 = v194[0];
      sub_25747B4E4((uint64_t)&v187);
      *(void *)&long long v187 = v43;
      *(void *)&long long v196 = v44;
      static Tensor.* infix(_:_:)();
      *(void *)&long long v196 = v201;
      sqrt(_:)();
      swift_release();
      swift_release();
      swift_release();
      unint64_t v39 = (void *)v187;
      swift_release();
    }
    else
    {
      OUTLINED_FUNCTION_23_2();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t v38 = OUTLINED_FUNCTION_2_11();
      *(_OWORD *)(v38 + 16) = xmmword_2576ABB10;
      *(_DWORD *)(v38 + 32) = v22;
      sub_25747B47C((uint64_t)&v187, (uint64_t)&v201);
      sub_25749F194(MEMORY[0x263F8EE78], v38, (uint64_t)&v201, (uint64_t *)&v196);
      sub_25747B4E4((uint64_t)&v187);
      unint64_t v39 = (void *)v196;
      swift_release();
      uint64_t v181 = 0;
    }
    v186 = v39;
  }
  else
  {
    uint64_t v181 = 0;
  }
  sub_2574720D8();
  uint64_t v185 = v45;
  if (v23 < 0) {
    __break(1u);
  }
  if (v23)
  {
    uint64_t v19 = 0;
    uint64_t v150 = (void (**)(uint64_t, void, uint64_t))(v182 + 13);
    unsigned int v149 = *MEMORY[0x263F8E1F8];
    uint64_t v148 = (uint64_t)(v182 + 1);
    uint64_t v170 = MEMORY[0x263F8EE60] + 8;
    long long v168 = xmmword_2576ABB10;
    long long v164 = xmmword_2576ABB30;
    long long v157 = xmmword_2576AD930;
    long long v156 = xmmword_2576B8240;
    uint64_t v46 = WitnessTable;
    uint64_t v173 = v23;
    while (1)
    {
      if (v19 == (char *)v23)
      {
        __break(1u);
        goto LABEL_91;
      }
      unint64_t v47 = v23;
      sub_2576A7F90();
      long long v48 = v187;
      swift_retain();
      uint64_t v49 = swift_retain();
      v182 = &v148;
      MEMORY[0x270FA5388](v49);
      unint64_t v50 = (unint64_t)(&v148 - 10);
      uint64_t v51 = v180;
      *(&v148 - 8) = (uint64_t)v180;
      *(&v148 - 7) = v46;
      *(&v148 - 6) = *((void *)&v48 + 1);
      *(&v148 - 5) = v4;
      *(&v148 - 4) = (uint64_t)&v186;
      *(&v148 - 3) = v48;
      uint64_t v146 = (const char **)&v185;
      swift_retain();
      uint64_t v52 = sub_2576A8600();
      if (v53) {
        break;
      }
      MEMORY[0x270FA5388](v52);
      uint64_t v54 = (uint64_t)v51[3];
      *(&v148 - 6) = v174;
      *(&v148 - 5) = v54;
      *(&v148 - 4) = v55;
      *(&v148 - 3) = (uint64_t)sub_25749F838;
      uint64_t v146 = (const char **)(&v148 - 10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
      uint64_t v23 = v173;
      uint64_t v56 = v181;
      sub_2575E6708();
      uint64_t v181 = v56;
      swift_release();
LABEL_78:
      uint64_t v117 = sub_2575CA350();
      uint64_t v118 = v183;
      unint64_t v22 = *(void *)(v183 + 16);
      unint64_t v119 = *(void *)(v183 + 24);
      uint64_t v14 = (char *)(v22 + 1);
      if (v22 >= v119 >> 1)
      {
        char v120 = OUTLINED_FUNCTION_17_51(v119);
        sub_2574729F0(v120, v121, v122, v123);
        uint64_t v118 = v124;
      }
      ++v19;
      *(void *)(v118 + 16) = v14;
      uint64_t v183 = v118;
      *(void *)(v118 + 8 * v22 + 32) = v117;
      swift_release_n();
      swift_release_n();
      if (v19 == (char *)v23) {
        goto LABEL_83;
      }
    }
    uint64_t v57 = swift_modifyAtWritableKeyPath();
    uint64_t v59 = (void (*)(char *, void))v57;
    if (*(unsigned char *)(v58 + 8))
    {
      uint64_t v23 = v47;
LABEL_77:
      v59(v200, 0);
      swift_release();
      goto LABEL_78;
    }
    uint64_t v60 = v58;
    v169 = (void (*)(char *, void))v57;
    float v61 = *(float *)(v4 + 8);
    uint64_t v23 = v47;
    uint64_t v176 = v58;
    if (v61 == 1.0)
    {
      swift_retain();
      uint64_t v62 = *((void *)&v48 + 1);
    }
    else
    {
      OUTLINED_FUNCTION_23_2();
      unint64_t v50 = *(unsigned __int8 *)(*(void *)(*((void *)&v48 + 1) + 16) + 160);
      OUTLINED_FUNCTION_18_45();
      unint64_t v195 = MEMORY[0x263F8EE78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t v63 = (__n128 *)OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_11_66(v63);
      OUTLINED_FUNCTION_16_52();
      swift_retain();
      OUTLINED_FUNCTION_2_85();
      sub_25747B4E4((uint64_t)&v196);
      uint64_t v64 = v193[0];
      sub_25747B4E4((uint64_t)&v187);
      *(void *)&long long v196 = *((void *)&v48 + 1);
      v194[0] = v64;
      static Tensor.* infix(_:_:)();
      uint64_t v60 = v176;
      swift_release();
      swift_release();
      uint64_t v62 = v187;
    }
    if (*(unsigned __int8 *)(v4 + 28) == 255)
    {
      *(void *)&long long v187 = v62;
    }
    else
    {
      unint64_t v50 = *(void *)(v4 + 16);
      unint64_t v47 = *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32);
      if (*(unsigned char *)(v4 + 28))
      {
        uint64_t v65 = v186;
        OUTLINED_FUNCTION_13_59();
        if (HIDWORD(v47) == 1)
        {
          char v67 = *(unsigned char *)(v66 + 160);
          OUTLINED_FUNCTION_18_45();
          unint64_t v195 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v68 = OUTLINED_FUNCTION_2_11();
          *(_OWORD *)(v68 + 16) = v168;
          *(_DWORD *)(v68 + 32) = v50;
          LOBYTE(v184) = v67;
          OUTLINED_FUNCTION_16_52();
          swift_retain();
          swift_retain();
          OUTLINED_FUNCTION_2_85();
          sub_25747B4E4((uint64_t)&v196);
          unint64_t v47 = v193[0];
          sub_25747B4E4((uint64_t)&v187);
          *(void *)&long long v196 = v62;
          Tensor.squared()();
          unint64_t v50 = (unint64_t)v65;
          v194[0] = v187;
          Tensor.sum()();
          swift_release();
          v194[0] = v196;
          sqrt(_:)();
          swift_release();
          uint64_t v69 = v187;
          *(void *)&long long v196 = v62;
          *(void *)&long long v187 = v47;
          v194[0] = v69;
          unint64_t v195 = v47;
          max(_:_:)();
          unint64_t v195 = v193[0];
          static Tensor./ infix(_:_:)();
          swift_release();
          v193[0] = v194[0];
          static Tensor.* infix(_:_:)();
        }
        else
        {
          char v70 = *(unsigned char *)(v66 + 160);
          OUTLINED_FUNCTION_18_45();
          unint64_t v195 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v71 = OUTLINED_FUNCTION_2_11();
          *(_OWORD *)(v71 + 16) = v168;
          *(_DWORD *)(v71 + 32) = v47;
          LOBYTE(v184) = v70;
          OUTLINED_FUNCTION_16_52();
          swift_retain();
          swift_retain();
          OUTLINED_FUNCTION_2_85();
          sub_25747B4E4((uint64_t)&v196);
          uint64_t v72 = v193[0];
          uint64_t v175 = v193[0];
          sub_25747B4E4((uint64_t)&v187);
          *(void *)&long long v187 = v62;
          v194[0] = v72;
          static Tensor.* infix(_:_:)();
          unint64_t v47 = v196;
          v194[0] = v196;
          *(void *)&long long v187 = v65;
          LOBYTE(v195) = *(unsigned char *)(*(void *)(v62 + 16) + 160);
          uint64_t v73 = v154;
          unint64_t v50 = v155;
          (*v150)(v154, v149, v155);
          Tensor.cast(to:roundingRule:)();
          uint64_t v74 = v73;
          uint64_t v23 = v173;
          (*(void (**)(uint64_t, unint64_t))v148)(v74, v50);
          unint64_t v195 = v193[0];
          static Tensor./ infix(_:_:)();
        }
        swift_release_n();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v4 = v171;
        uint64_t v60 = v176;
      }
      else
      {
        *(void *)&long long v196 = v62;
        Tensor.clamped(to:)((uint64_t)&v187, *(float *)&v50, *((float *)&v50 + 1));
        uint64_t v60 = v176;
        swift_release();
      }
    }
    uint64_t v75 = *(void *)(*(void *)v60 + 32);
    if ((~v75 & 0xF000000000000007) == 0)
    {
      OUTLINED_FUNCTION_18_4();
      uint64_t v148 = 329;
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_35_1();
      goto LABEL_98;
    }
    if ((v75 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_18_4();
      uint64_t v148 = 325;
LABEL_96:
      OUTLINED_FUNCTION_17_0();
      goto LABEL_97;
    }
    uint64_t v76 = v187;
    swift_retain();
    sub_257486C70(v75);
    if (qword_26A0008A0 != -1) {
      swift_once();
    }
    uint64_t v172 = v75;
    swift_beginAccess();
    uint64_t v175 = v76;
    if (byte_26A000DE8 == 1)
    {
      if (*(unsigned __int8 *)(v4 + 36) == 255)
      {
        swift_retain();
        uint64_t v166 = v76;
      }
      else
      {
        OUTLINED_FUNCTION_4_84(*(unsigned char *)(v4 + 36));
        uint64_t v166 = v187;
      }
      int v77 = *(_DWORD *)v4;
      char v78 = *(unsigned char *)(*(void *)((v75 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 160);
      OUTLINED_FUNCTION_23_2();
      v193[0] = MEMORY[0x263F8EE78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t v79 = OUTLINED_FUNCTION_2_11();
      *(_OWORD *)(v79 + 16) = v168;
      *(_DWORD *)(v79 + 32) = v77;
      LOBYTE(v195) = v78;
      OUTLINED_FUNCTION_18_45();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v187);
      uint64_t v80 = v4;
      uint64_t v81 = v194[0];
      float v82 = *(float *)(v80 + 4);
      if (v82 > 0.0)
      {
        if (*(void *)(v80 + 48))
        {
          *(void *)&long long v196 = *(void *)(v80 + 40);
          OUTLINED_FUNCTION_3_76();
          uint64_t v83 = OptimizerStateDictionary.subscript.getter(v48);
          uint64_t v84 = v187;
          if (!(void)v187) {
            goto LABEL_45;
          }
        }
        else
        {
          *(void *)&long long v196 = *(void *)(v80 + 40);
          OUTLINED_FUNCTION_3_76();
          sub_2576A7810();
          OptimizerStateDictionary.subscript.getter(v48, (uint64_t (*)(uint64_t))sub_25749F654, &v187);
          uint64_t v83 = swift_bridgeObjectRelease();
          uint64_t v84 = v187;
        }
        uint64_t v106 = v181;
        MEMORY[0x270FA5388](v83);
        OUTLINED_FUNCTION_15_52();
        *(void *)(v107 - 48) = v166;
        *(void *)(v107 - 40) = v84;
        uint64_t v108 = v171;
        *(void *)(v107 - 32) = v81;
        *(void *)(v107 - 24) = v108;
        *(void *)(v107 - 16) = v48;
        sub_25749AB00((void (*)(uint64_t))sub_2576A2848);
        uint64_t v181 = v106;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v23 = v173;
        goto LABEL_64;
      }
      v194[0] = v75 & 0x7FFFFFFFFFFFFFFFLL;
      v193[0] = v166;
      unint64_t v195 = 0;
      uint64_t v184 = v81;
      basicSGD(parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:)((uint64_t *)&v187, (uint64_t *)&v196, v194, v193, (uint64_t *)&v195, v82, (uint64_t)&v184, *(unsigned char *)(v80 + 12));
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      if (*(unsigned __int8 *)(v4 + 36) == 255)
      {
        swift_retain();
      }
      else
      {
        OUTLINED_FUNCTION_4_84(*(unsigned char *)(v4 + 36));
        uint64_t v76 = v187;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
      uint64_t v85 = swift_allocObject();
      *(_OWORD *)(v85 + 16) = v164;
      *(void *)(v85 + 32) = v75 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v86 = v85 + 32;
      *(void *)(v85 + 40) = v76;
      sub_257486C70(v172);
      uint64_t v166 = v76;
      swift_retain();
      sub_2576A7810();
      char v87 = 0;
      uint64_t v88 = 0;
      while (1)
      {
        char v89 = v87;
        sub_25747B47C(*(void *)(*(void *)(v86 + 8 * v88) + 16) + 168, (uint64_t)&v187);
        if (*((void *)&v188 + 1)) {
          break;
        }
        sub_25747B4E4((uint64_t)&v187);
        char v87 = 1;
        uint64_t v88 = 1;
        if (v89)
        {
          swift_bridgeObjectRelease();
          int v199 = 0;
          long long v197 = 0u;
          long long v198 = 0u;
          long long v196 = 0u;
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRelease();
      long long v196 = v187;
      long long v197 = v188;
      long long v198 = v189;
      int v199 = v190;
LABEL_52:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_23_2();
      unint64_t v195 = MEMORY[0x263F8EE78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t v90 = (__n128 *)OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_11_66(v90);
      sub_25747B47C((uint64_t)&v187, (uint64_t)v194);
      OUTLINED_FUNCTION_2_85();
      sub_25747B4E4((uint64_t)&v187);
      float v91 = *(float *)(v4 + 4);
      uint64_t v165 = v193[0];
      if (v91 <= 0.0)
      {
        uint64_t v96 = *(void *)((v75 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v97 = *(void *)(v166 + 16);
        uint64_t v98 = *(void *)(v193[0] + 16);
        char v99 = *(unsigned char *)(v4 + 12);
        long long v202 = v157;
        long long v203 = v156;
        v201 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/OptimizerOps.swift";
        v204 = "init(id:parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:creationSite:)";
        uint64_t v205 = 93;
        __int16 v206 = 2;
        type metadata accessor for StochasticGradientDescentOperation();
        swift_allocObject();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v146 = &v201;
        uint64_t v100 = sub_2574686A0(0, 0, 0, v91, v96, v97, 0, v98, v99);
        OUTLINED_FUNCTION_16_52();
        sub_25747B47C((uint64_t)v194, (uint64_t)v193);
        type metadata accessor for ContextManager();
        swift_retain();
        sub_2575D60A8();
        sub_2575D614C((uint64_t)&v187);
        swift_release();
        uint64_t v101 = v192;
        swift_retain();
        sub_2574718B0((uint64_t)&v187);
        sub_2575D60A8();
        sub_2575D614C((uint64_t)&v187);
        swift_release();
        uint64_t v102 = v191;
        swift_retain();
        sub_2574718B0((uint64_t)&v187);
        type metadata accessor for TensorRepresentation();
        uint64_t v103 = swift_allocObject();
        LOBYTE(v187) = 1;
        uint64_t v104 = sub_2575843A4(v100, 0, v193, 0x100000000, v101, v102, v103);
        type metadata accessor for TensorHandle();
        uint64_t v105 = swift_allocObject();
        *(void *)(v105 + 16) = v104;
        swift_retain();
        sub_2576139A8();
        swift_release();
        sub_25747B4E4((uint64_t)v194);
        swift_release();
        swift_release();
        swift_release();
        *(void *)&long long v187 = v105;
      }
      else
      {
        uint64_t v93 = v4 + 40;
        uint64_t v92 = *(void *)(v4 + 40);
        if (*(void *)(v93 + 8))
        {
          v194[0] = v92;
          OUTLINED_FUNCTION_3_76();
          uint64_t v94 = OptimizerStateDictionary.subscript.getter(v48);
          uint64_t v95 = v187;
          if (!(void)v187)
          {
LABEL_45:
            OUTLINED_FUNCTION_5_74();
            sub_25746BF88();
          }
        }
        else
        {
          v194[0] = v92;
          OUTLINED_FUNCTION_3_76();
          sub_2576A7810();
          OptimizerStateDictionary.subscript.getter(v48, (uint64_t (*)(uint64_t))sub_25749F654, &v187);
          uint64_t v94 = swift_bridgeObjectRelease();
          uint64_t v95 = v187;
        }
        uint64_t v109 = v181;
        MEMORY[0x270FA5388](v94);
        OUTLINED_FUNCTION_15_52();
        uint64_t v110 = v165;
        *(void *)(v111 - 48) = v166;
        *(void *)(v111 - 40) = v95;
        uint64_t v112 = v171;
        *(void *)(v111 - 32) = v110;
        *(void *)(v111 - 24) = v112;
        *(void *)(v111 - 16) = &v196;
        *(void *)(v111 - 8) = v48;
        sub_25749AB00((void (*)(uint64_t))sub_2576A2830);
        uint64_t v181 = v109;
        swift_release();
        swift_release();
        swift_release();
      }
      sub_25747B4E4((uint64_t)&v196);
    }
    swift_release();
LABEL_64:
    uint64_t v62 = v187;
    uint64_t v113 = v185;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2574720D8();
      uint64_t v113 = v125;
    }
    uint64_t v4 = v171;
    unint64_t v50 = *(void *)(v113 + 16);
    unint64_t v114 = *(void *)(v113 + 24);
    if (v50 >= v114 >> 1)
    {
      OUTLINED_FUNCTION_17_51(v114);
      sub_2574720D8();
      uint64_t v113 = v126;
    }
    *(void *)(v113 + 16) = v50 + 1;
    *(void *)(v113 + 8 * v50 + 32) = v62;
    uint64_t v185 = v113;
    uint64_t v115 = v176;
    if ((*(unsigned char *)(v176 + 8) & 1) == 0)
    {
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        unint64_t v47 = *(void *)(*(void *)v115 + 32);
        if ((~v47 & 0xF000000000000007) == 0)
        {
          OUTLINED_FUNCTION_18_4();
          uint64_t v148 = 317;
          goto LABEL_96;
        }
        if ((v47 & 0x8000000000000000) != 0)
        {
          unint64_t v50 = *(void *)((v47 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
          if ((sub_257654B3C(*(void *)(*(void *)(v62 + 16) + 152), *(void *)(v50 + 152)) & 1) == 0)
          {
            while (1)
            {
              *(void *)&long long v187 = 0;
              *((void *)&v187 + 1) = 0xE000000000000000;
              swift_retain();
              sub_257486C70(v47);
              sub_2576A8730();
              sub_2576A7B00();
              uint64_t v142 = *(void *)(v50 + 152);
              sub_2576A7810();
              uint64_t v143 = MEMORY[0x263F8D6C8];
              MEMORY[0x25A2B83F0](v142, MEMORY[0x263F8D6C8]);
              sub_2576A7B00();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2576A7B00();
              unint64_t v50 = *(void *)(*(void *)(v62 + 16) + 152);
              uint64_t v144 = sub_2576A7810();
              MEMORY[0x25A2B83F0](v144, v143);
              unint64_t v47 = v145;
              sub_2576A7B00();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2576A7B00();
              OUTLINED_FUNCTION_18_4();
              uint64_t v148 = 116;
LABEL_97:
              OUTLINED_FUNCTION_35_1();
LABEL_98:
              sub_2576A8B60();
              __break(1u);
            }
          }
          *(void *)&long long v187 = v62 | 0x8000000000000000;
          swift_retain();
          sub_257486C70(v47);
          sub_25748F984((uint64_t *)&v187);
          sub_257486C8C(v47);
        }
        else
        {
          *(void *)&long long v187 = v62 | 0x8000000000000000;
          swift_retain();
          sub_25748F984((uint64_t *)&v187);
        }
      }
      else
      {
        *(void *)&long long v187 = v62;
        uint64_t v116 = *(unsigned int *)(*(void *)v115 + 16);
        type metadata accessor for LayerVariableReference();
        swift_allocObject();
        swift_retain();
        LOBYTE(v196) = 0;
        *(void *)uint64_t v115 = sub_25748FB58((uint64_t *)&v187, v116);
        swift_release();
      }
    }
    swift_release();
    sub_257486C8C(v172);
    swift_release();
    uint64_t v46 = WitnessTable;
    uint64_t v59 = v169;
    goto LABEL_77;
  }
  uint64_t v46 = WitnessTable;
LABEL_83:
  char v127 = sub_2576A75C0();
  char v128 = v161;
  sub_2576A75F0();
  os_signpost_type_t v129 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    uint64_t v130 = v151;
    sub_2576A7620();
    swift_release();
    uint64_t v132 = v152;
    uint64_t v131 = v153;
    int v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v152 + 88))(v130, v153);
    uint64_t v134 = v160;
    if (v133 == *MEMORY[0x263F90238])
    {
      uint64_t v135 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v130, v131);
      uint64_t v135 = "";
    }
    int v136 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v136 = 0;
    os_signpost_id_t v137 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v127, v129, v137, "Optimizing", v135, v136, 2u);
    MEMORY[0x25A2BAC80](v136, -1, -1);

    swift_release();
    uint64_t v46 = WitnessTable;
    v134(v128, v163);
  }
  else
  {
    swift_release();

    v160(v128, v163);
  }
  uint64_t v138 = v185;
  swift_release();
  uint64_t v139 = sub_25748721C(v183);
  *(void *)&long long v187 = 1;
  *((void *)&v187 + 1) = v139;
  Array<A>.resolve(descriptor:)(&v187, v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v140 = (uint64_t)v180;
  j_nullsub_1(v180);
  return sub_2576866A4(v4, v140, v46);
}

uint64_t sub_2576A11BC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(a4 + 16);
  float v12 = *(float *)(a5 + 4);
  char v13 = *(unsigned char *)(a5 + 12);
  long long v34 = xmmword_2576AD930;
  long long v35 = xmmword_2576B8240;
  uint64_t v33 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/OptimizerOps.swift";
  uint64_t v36 = "init(id:parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:creationSite:)";
  uint64_t v37 = 93;
  __int16 v38 = 2;
  type metadata accessor for StochasticGradientDescentOperation();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = sub_2574686A0(0, 0, 0, v12, v8, v9, v10, v11, v13);
  sub_25747B47C(a6, (uint64_t)v32);
  sub_25747B47C((uint64_t)v32, (uint64_t)v31);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v28);
  swift_release();
  uint64_t v15 = v30;
  swift_retain();
  sub_2574718B0((uint64_t)v28);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v28);
  swift_release();
  uint64_t v16 = v29;
  swift_retain();
  sub_2574718B0((uint64_t)v28);
  type metadata accessor for TensorRepresentation();
  uint64_t v17 = swift_allocObject();
  LOBYTE(v28[0]) = 1;
  uint64_t v18 = sub_2575843A4(v14, 0, v31, 0x100000000, v15, v16, v17);
  type metadata accessor for TensorHandle();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v32);
  sub_25747B47C(a6, (uint64_t)v32);
  sub_25747B47C((uint64_t)v32, (uint64_t)v31);
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v28);
  swift_release();
  uint64_t v20 = v30;
  swift_retain();
  sub_2574718B0((uint64_t)v28);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v28);
  swift_release();
  uint64_t v21 = v29;
  swift_retain();
  sub_2574718B0((uint64_t)v28);
  uint64_t v22 = swift_allocObject();
  LOBYTE(v28[0]) = 1;
  uint64_t v23 = sub_2575843A4(v14, 1, v31, 0x100000000, v20, v21, v22);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v23;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v32);
  v28[0] = v24;
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(void *)(inited + 32) = v24;
  *(void *)(inited + 40) = v19;
  swift_retain();
  swift_retain();
  sub_2575CA228(inited);
  swift_release();
  swift_release();
  swift_setDeallocating();
  uint64_t result = sub_2575AEC4C();
  *a7 = v19;
  return result;
}

uint64_t sub_2576A15C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v13 = a2;
  uint64_t v14 = a1;
  uint64_t v11 = a4;
  uint64_t v12 = a3;
  uint64_t result = basicSGD(parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:)(&v16, &v15, &v14, &v13, &v12, *(float *)(a5 + 4), (uint64_t)&v11, *(unsigned char *)(a5 + 12));
  uint64_t v8 = v16;
  uint64_t v9 = v15;
  if (v15)
  {
    uint64_t v16 = v15;
    type metadata accessor for OptimizerStateDictionary();
    swift_retain_n();
    swift_retain();
    OptimizerStateDictionary.subscript.setter(&v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
    *(void *)(inited + 32) = v9;
    *(void *)(inited + 40) = v8;
    swift_retain();
    swift_retain();
    sub_2575CA228(inited);
    swift_release();
    swift_setDeallocating();
    sub_2575AEC4C();
    uint64_t result = swift_release();
  }
  *a6 = v8;
  return result;
}

uint64_t sub_2576A1740()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

unint64_t sub_2576A1790(char a1)
{
  unint64_t result = 0x6F69746172657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x676E696E7261656CLL;
      break;
    case 2:
      unint64_t result = 0x6D75746E656D6F6DLL;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x746E656964617267;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x797469636F6C6576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2576A18B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *a2;
  uint64_t v9 = *a3;
  uint64_t v10 = sub_25746A92C();
  swift_beginAccess();
  if (*v10 == 1)
  {
    int v11 = *(_DWORD *)(v5 + 32);
    BYTE4(v31[0]) = *(unsigned char *)(v5 + 36);
    LODWORD(v31[0]) = v11;
    v40[0] = v9;
    v39[0] = v8;
    sub_25747B3F4(v40, v39, &v32);
    uint64_t v12 = v32;
    *(void *)&long long v32 = v8;
    Tensor.elementType.getter(v39);
    LODWORD(v35) = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v32 = 0u;
    Tensor.init(coercing:scalarType:on:)((char *)v39, (uint64_t)&v32, v40);
    float v13 = *(float *)(v5 + 4);
    if (v13 <= 0.0)
    {
      v39[0] = v8;
      uint64_t v30 = 0;
      v31[0] = v12;
      uint64_t v29 = v40[0];
      basicSGD(parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:)((uint64_t *)&v32, v40, v39, v31, &v30, v13, (uint64_t)&v29, *(unsigned char *)(v5 + 12));
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      *a4 = v32;
    }
    else
    {
      if (*(void *)(v5 + 48))
      {
        v40[0] = *(void *)(v5 + 40);
        type metadata accessor for OptimizerStateDictionary();
        uint64_t v14 = OptimizerStateDictionary.subscript.getter(a1);
        if (!(void)v32)
        {
LABEL_9:
          long long v36 = 0u;
          memset(v37, 0, sizeof(v37));
          long long v34 = 0u;
          long long v35 = 0u;
          long long v32 = 0u;
          long long v33 = 0u;
          char v38 = 22;
          sub_25746BF88();
        }
      }
      else
      {
        v40[0] = *(void *)(v5 + 40);
        type metadata accessor for OptimizerStateDictionary();
        sub_2576A7810();
        OptimizerStateDictionary.subscript.getter(a1, (uint64_t (*)(uint64_t))sub_25749F654, &v32);
        uint64_t v14 = swift_bridgeObjectRelease();
      }
      MEMORY[0x270FA5388](v14);
      sub_25749AB00((void (*)(uint64_t))sub_2576A2848);
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  else
  {
    int v15 = *(_DWORD *)(v5 + 32);
    BYTE4(v31[0]) = *(unsigned char *)(v5 + 36);
    LODWORD(v31[0]) = v15;
    v40[0] = v9;
    v39[0] = v8;
    sub_25747B3F4(v40, v39, &v32);
    uint64_t v16 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
    *(void *)(inited + 32) = v8;
    *(void *)(inited + 40) = v16;
    uint64_t v18 = nullsub_1(inited);
    swift_retain();
    swift_retain();
    sub_2575B5190(v18, (uint64_t)v40);
    swift_bridgeObjectRelease();
    *(void *)&long long v32 = v8;
    Tensor.elementType.getter(v31);
    LODWORD(v35) = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v32 = 0u;
    Tensor.init(coercing:scalarType:on:)((char *)v31, (uint64_t)&v32, v39);
    uint64_t v19 = v39[0];
    float v20 = *(float *)(v5 + 4);
    if (v20 <= 0.0)
    {
      type metadata accessor for StochasticGradientDescentOperation();
      *(void *)&long long v32 = v8;
      uint64_t v23 = sub_2574BB35C();
      *(void *)&long long v32 = v16;
      uint64_t v24 = sub_2574BB35C();
      *(void *)&long long v32 = v19;
      uint64_t v25 = sub_2574BB35C();
      char v26 = *(unsigned char *)(v5 + 12);
      sub_25769F6A0((uint64_t)&v32);
      sub_2574685E8(0, 0, 0, v23, v24, 0, v25, v26, v20);
      uint64_t v27 = (uint64_t (**)(void, void))sub_2576A2C18();
      sub_25747B47C((uint64_t)v40, (uint64_t)v39);
      uint64_t v28 = swift_retain();
      sub_257613838(v28, v27, 0, (uint64_t)v39, a4);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      if (*(void *)(v5 + 48))
      {
        v39[0] = *(void *)(v5 + 40);
        type metadata accessor for OptimizerStateDictionary();
        uint64_t v21 = OptimizerStateDictionary.subscript.getter(a1);
        if (!(void)v32) {
          goto LABEL_9;
        }
      }
      else
      {
        v39[0] = *(void *)(v5 + 40);
        type metadata accessor for OptimizerStateDictionary();
        sub_2576A7810();
        OptimizerStateDictionary.subscript.getter(a1, (uint64_t (*)(uint64_t))sub_25749F654, &v32);
        uint64_t v21 = swift_bridgeObjectRelease();
      }
      MEMORY[0x270FA5388](v21);
      sub_25749AB00((void (*)(uint64_t))sub_2576A2830);
      swift_release();
      swift_release();
      swift_release();
    }
    return sub_25747B4E4((uint64_t)v40);
  }
  return result;
}

uint64_t sub_2576A1E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2576A1EC4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_2576A1F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2576A1FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2576A2010@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2576A1740();
  *a1 = result;
  return result;
}

unint64_t sub_2576A2048@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2576A1790(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_2576A2078()
{
  return sub_2576A18AC(*v0);
}

uint64_t sub_2576A2084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_2576A178C(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_2576A20B4()
{
  return sub_25747A82C();
}

uint64_t sub_2576A20D8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2576A212C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t SGD.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  long long v35 = a2;
  type metadata accessor for SGD.CodingKeys();
  swift_getWitnessTable();
  sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v36 = v5;
  uint64_t v37 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = a1[3];
  char v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_2576A91F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  uint64_t v9 = v36;
  uint64_t v10 = v37;
  LOBYTE(v40) = 0;
  uint64_t v11 = sub_2576A8D40();
  OUTLINED_FUNCTION_7_63(1);
  uint64_t v12 = (uint64_t)v38;
  int v14 = v13;
  OUTLINED_FUNCTION_7_63(2);
  int v16 = v15;
  LOBYTE(v40) = 3;
  int v34 = sub_2576A8D20();
  char v39 = 5;
  sub_25749F70C();
  OUTLINED_FUNCTION_12_56();
  uint64_t v32 = v42;
  uint64_t v33 = v40;
  uint64_t v17 = v41;
  char v39 = 6;
  sub_25749F6C0();
  OUTLINED_FUNCTION_12_56();
  uint64_t v30 = BYTE4(v40);
  uint64_t v31 = v17;
  uint64_t v18 = v40;
  OUTLINED_FUNCTION_7_63(4);
  int v20 = v19;
  uint64_t v29 = v18;
  type metadata accessor for OptimizerStateDictionary();
  char v39 = 7;
  swift_getWitnessTable();
  sub_2576A8D50();
  uint64_t v21 = v10;
  LOBYTE(v10) = v34 & 1;
  uint64_t v22 = v31 | (v32 << 32);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v24 = v29 | (v30 << 32);
  v23(v7, v21);
  uint64_t v25 = v40;
  char v26 = v35;
  *long long v35 = v14;
  v26[1] = v16;
  v26[2] = v20;
  *((unsigned char *)v26 + 12) = v10;
  *((void *)v26 + 2) = v33;
  *((unsigned char *)v26 + 28) = BYTE4(v22);
  v26[6] = v22;
  *((unsigned char *)v26 + 36) = BYTE4(v24);
  v26[8] = v24;
  *((void *)v26 + 5) = v25;
  *((void *)v26 + 6) = v11;
  sub_2576A7810();
  __swift_destroy_boxed_opaque_existential_1(v12);
  return swift_bridgeObjectRelease();
}

uint64_t SGD.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  v18[1] = *(void *)(a2 + 16);
  uint64_t v18[2] = v4;
  type metadata accessor for SGD.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_2576A8E70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v25 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v18 - v8;
  int v24 = *(unsigned __int8 *)(v2 + 12);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v22 = *(unsigned __int8 *)(v2 + 28);
  uint64_t v23 = v10;
  uint64_t v21 = *(unsigned int *)(v2 + 24);
  uint64_t v19 = *(unsigned __int8 *)(v2 + 36);
  uint64_t v20 = *(unsigned int *)(v2 + 32);
  v18[0] = *(void *)(v2 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v5;
  sub_2576A9230();
  LOBYTE(v28) = 0;
  uint64_t v12 = v26;
  sub_2576A8E30();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v5);
  }
  uint64_t v14 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  uint64_t v17 = v25;
  LOBYTE(v28) = 1;
  OUTLINED_FUNCTION_10_61();
  LOBYTE(v28) = 2;
  OUTLINED_FUNCTION_10_61();
  LOBYTE(v28) = 3;
  sub_2576A8E10();
  uint64_t v28 = v16;
  int v29 = v14;
  char v30 = (v14 | (unint64_t)(v15 << 32)) >> 32;
  char v27 = 5;
  sub_25749F7A4();
  OUTLINED_FUNCTION_9_73();
  BYTE4(v28) = (v20 | (unint64_t)(v19 << 32)) >> 32;
  LODWORD(v28) = v20;
  char v27 = 6;
  sub_25749F758();
  OUTLINED_FUNCTION_9_73();
  LOBYTE(v28) = 4;
  OUTLINED_FUNCTION_10_61();
  uint64_t v28 = v18[0];
  char v27 = 7;
  type metadata accessor for OptimizerStateDictionary();
  swift_getWitnessTable();
  sub_2576A8E40();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v9, v11);
}

uint64_t sub_2576A27F8@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return SGD.init(from:)(a1, a2);
}

uint64_t sub_2576A2818(void *a1, uint64_t a2)
{
  return SGD.encode(to:)(a1, a2);
}

uint64_t sub_2576A2830@<X0>(uint64_t *a1@<X8>)
{
  return sub_2576A2C68(a1);
}

uint64_t sub_2576A2848@<X0>(uint64_t *a1@<X8>)
{
  return sub_2576A2C9C(a1);
}

uint64_t type metadata accessor for SGD.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2576A2878(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2576A28B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2576A28BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  sub_2576A7810();
  return a1;
}

uint64_t sub_2576A2924(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(void *)(a1 + 16) = v4;
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_2576A29B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_2576A2A2C(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2576A2A6C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for SGD()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_2576A2AD0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576A2B9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_2576A2BC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2576A2BE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2576A2BFC()
{
  return swift_getWitnessTable();
}

unint64_t sub_2576A2C18()
{
  unint64_t result = qword_26A0033F8;
  if (!qword_26A0033F8)
  {
    type metadata accessor for StochasticGradientDescentOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0033F8);
  }
  return result;
}

uint64_t sub_2576A2C68@<X0>(uint64_t *a1@<X8>)
{
  return sub_2576A11BC(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

uint64_t sub_2576A2C9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2576A15C4(v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

void OUTLINED_FUNCTION_2_85()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_3_76()
{
  return type metadata accessor for OptimizerStateDictionary();
}

uint64_t OUTLINED_FUNCTION_4_84@<X0>(unsigned __int8 a1@<W8>)
{
  unint64_t v6 = *(unsigned int *)(v4 + 32) | ((unint64_t)a1 << 32);
  *(_DWORD *)(v1 + 512) = *(_DWORD *)(v4 + 32);
  *(unsigned char *)(v1 + 516) = BYTE4(v6) & 1;
  *(void *)(v1 + 656) = v2;
  *(void *)(v1 + 592) = v3;
  return sub_25747B240(v1 + 656, (uint64_t *)(v1 + 592));
}

double OUTLINED_FUNCTION_5_74()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 460) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(unsigned char *)(v0 + 476) = 22;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_63@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 112) = a1;
  return sub_2576A8D30();
}

uint64_t OUTLINED_FUNCTION_9_73()
{
  return sub_2576A8DE0();
}

uint64_t OUTLINED_FUNCTION_10_61()
{
  return sub_2576A8E20();
}

__n128 OUTLINED_FUNCTION_11_66(__n128 *a1)
{
  __n128 result = v1[12];
  a1[1] = result;
  a1[2].n128_u32[0] = v3;
  v1[21].n128_u8[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_56()
{
  return sub_2576A8D00();
}

double OUTLINED_FUNCTION_13_59()
{
  *(_DWORD *)(v0 + 416) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_62()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return sub_25747B47C(v0 + 656, v0 + 592);
}

BOOL OUTLINED_FUNCTION_17_51@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_18_45()
{
  return sub_25747B47C(v0 + 368, v0 + 656);
}

ValueMetadata *type metadata accessor for TensorDescriptor()
{
  return &type metadata for TensorDescriptor;
}

unint64_t sub_2576A2EA0()
{
  unint64_t result = qword_26A006738;
  if (!qword_26A006738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006738);
  }
  return result;
}

uint64_t sub_2576A2EEC()
{
  sub_2576A8730();
  sub_2576A7B00();
  uint64_t v0 = sub_2576A7810();
  MEMORY[0x25A2B83F0](v0, MEMORY[0x263F8D6C8]);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  return 0;
}

uint64_t sub_2576A2FEC(uint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    if (result > 0x100000)
    {
      if ((unint64_t)result >= 0xA00000)
      {
        if (!((unint64_t)result >> 26))
        {
          NSUInteger v2 = 0x8000000;
          return NSRoundUpToMultipleOfPageSize(v2);
        }
        goto LABEL_13;
      }
LABEL_8:
      NSUInteger v2 = 0x2000000;
      return NSRoundUpToMultipleOfPageSize(v2);
    }
LABEL_9:
    NSUInteger v2 = 0x800000;
    return NSRoundUpToMultipleOfPageSize(v2);
  }
  if (result <= 0x100000) {
    goto LABEL_9;
  }
  if ((unint64_t)result < 0xA00000) {
    goto LABEL_8;
  }
  if (!((unint64_t)result >> 29))
  {
    NSUInteger v2 = 0x40000000;
    return NSRoundUpToMultipleOfPageSize(v2);
  }
LABEL_13:
  if (!__OFADD__(result, 0x200000))
  {
    NSUInteger v2 = (result + 0x1FFFFF) & 0xFFFFFFFFFFE00000;
    return NSRoundUpToMultipleOfPageSize(v2);
  }
  __break(1u);
  return result;
}

int64_t sub_2576A3088()
{
  uint64_t v1 = *(void **)(v0 + 16);
  NSUInteger v2 = objc_msgSend(v1, sel_size);
  unsigned __int32 v3 = objc_msgSend(v1, sel_usedSize);
  BOOL v4 = __OFSUB__(v2, v3);
  int64_t result = v2 - v3;
  if (v4) {
    __break(1u);
  }
  return result;
}

BOOL sub_2576A30D8()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setPurgeableState_, 4) == (id)4;
}

uint64_t sub_2576A3108()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSHeap()
{
  return self;
}

uint64_t getEnumTagSinglePayload for MPSHeap.Descriptor(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 24))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MPSHeap.Descriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)int64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPSHeap.Descriptor()
{
  return &type metadata for MPSHeap.Descriptor;
}

BOOL sub_2576A3204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

uint64_t sub_2576A3210()
{
  return sub_2576A9100();
}

uint64_t sub_2576A3258()
{
  return sub_2576A3210();
}

uint64_t sub_2576A3264()
{
  return sub_25746F664();
}

BOOL sub_2576A3270(uint64_t *a1, uint64_t *a2)
{
  return sub_2576A3204(*a1, 0, *a2);
}

uint64_t sub_2576A3284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0;
}

uint64_t sub_2576A337C()
{
  return sub_2576A90A0();
}

BOOL sub_2576A33B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a3 == a6;
}

uint64_t sub_2576A33C0()
{
  return sub_2576A9100();
}

uint64_t sub_2576A3420()
{
  return sub_2576A33C0();
}

uint64_t sub_2576A3430()
{
  return sub_2576A337C();
}

uint64_t sub_2576A3440()
{
  return sub_2576A9100();
}

uint64_t sub_2576A349C()
{
  return sub_2576A3284(*v0, 0, v0[2]);
}

BOOL sub_2576A34AC(uint64_t *a1, uint64_t *a2)
{
  return sub_2576A33B0(*a1, 0, a1[2], *a2, 0, a2[2]);
}

unint64_t sub_2576A34D0()
{
  unint64_t result = qword_26A006740;
  if (!qword_26A006740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006740);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MPSHeap.Size(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MPSHeap.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPSHeap.Size()
{
  return &type metadata for MPSHeap.Size;
}

unint64_t sub_2576A35C0()
{
  unint64_t result = qword_26A006748;
  if (!qword_26A006748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006748);
  }
  return result;
}

uint64_t sub_2576A3610()
{
  return sub_2575EEDE0();
}

uint64_t sub_2576A3620(uint64_t a1)
{
  return sub_2576A394C(a1, (void (*)(unsigned char *, uint64_t))sub_2574702E0);
}

uint64_t sub_2576A3638(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2574B4BA4);
}

uint64_t sub_2576A3650(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2574B1BA4);
}

uint64_t sub_2576A366C(char a1)
{
  return sub_2575EF104(0, a1 & 1);
}

uint64_t sub_2576A3678(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2574DFF00);
}

uint64_t sub_2576A3690()
{
  return sub_2575EEBB0();
}

uint64_t sub_2576A369C(uint64_t a1)
{
  return sub_2575EEA34(0, a1);
}

uint64_t sub_2576A36A8()
{
  return sub_2576A9100();
}

uint64_t sub_2576A36E8()
{
  return sub_2575EEED0();
}

uint64_t sub_2576A36F4()
{
  return sub_2575EEAE0();
}

uint64_t sub_2576A3700()
{
  return sub_2575EF214();
}

uint64_t sub_2576A370C(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2575BA0E8);
}

uint64_t sub_2576A3724(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2575BA1EC);
}

uint64_t sub_2576A373C()
{
  return sub_2576A9100();
}

uint64_t sub_2576A377C()
{
  return sub_2576A9100();
}

uint64_t sub_2576A37C0(uint64_t a1)
{
  return sub_2576A394C(a1, (void (*)(unsigned char *, uint64_t))sub_25746FA74);
}

uint64_t sub_2576A37D8(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_257647390);
}

uint64_t sub_2576A37F0()
{
  return sub_2575EEC94();
}

uint64_t sub_2576A37FC()
{
  return sub_2575EECF8();
}

uint64_t sub_2576A3808(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2576649C8);
}

uint64_t sub_2576A3820(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_257664C88);
}

uint64_t sub_2576A3838()
{
  return sub_2575EEE40();
}

uint64_t sub_2576A3844(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_2576683DC);
}

uint64_t sub_2576A385C()
{
  return sub_2576A9100();
}

uint64_t sub_2576A38A0(uint64_t a1)
{
  return sub_2576A394C(a1, (void (*)(unsigned char *, uint64_t))sub_25746F718);
}

uint64_t sub_2576A38B8(uint64_t a1)
{
  return sub_2576A38D0(a1, (void (*)(uint64_t))sub_25766C7E0);
}

uint64_t sub_2576A38D0(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_2576A9100();
}

uint64_t sub_2576A3934(uint64_t a1)
{
  return sub_2576A394C(a1, (void (*)(unsigned char *, uint64_t))sub_25746F7B4);
}

uint64_t sub_2576A394C(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  OUTLINED_FUNCTION_1_97();
  a2(v5, a1);
  return sub_2576A9100();
}

uint64_t sub_2576A3994()
{
  return sub_2575EEF90();
}

uint64_t sub_2576A39A0()
{
  return sub_2576A9100();
}

uint64_t sub_2576A39E4()
{
  return sub_2576A9100();
}

uint64_t sub_2576A3A28()
{
  return sub_2576A3A4C();
}

uint64_t sub_2576A3A40()
{
  return sub_2575EE9C8();
}

uint64_t sub_2576A3A4C()
{
  return sub_2576A9100();
}

uint64_t sub_2576A3A94()
{
  return sub_2576A9100();
}

uint64_t sub_2576A3AD4()
{
  return sub_2576A9100();
}

BOOL sub_2576A3B18()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

uint64_t sub_2576A3B60()
{
  return sub_2576A3A4C();
}

BOOL sub_2576A3B98@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2576A3B18();
  *a1 = result;
  return result;
}

void sub_2576A3BD0(void *a1@<X8>)
{
  *a1 = 0x4E6C616369676F6CLL;
  a1[1] = 0xEA0000000000746FLL;
}

void sub_2576A3BF0(void *a1@<X8>)
{
  *a1 = &unk_2706605C8;
}

uint64_t sub_2576A3C00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  long long v6 = *a5;
  uint64_t v7 = *((unsigned __int8 *)a5 + 16);
  long long v8 = *(long long *)((char *)a5 + 24);
  long long v9 = *(long long *)((char *)a5 + 40);
  char v10 = *((unsigned char *)a5 + 56);
  if (!a3)
  {
    long long v13 = *(long long *)((char *)a5 + 24);
    long long v14 = *a5;
    long long v12 = *(long long *)((char *)a5 + 40);
    a1 = sub_2576645EC();
    long long v9 = v12;
    long long v8 = v13;
    long long v6 = v14;
  }
  long long v15 = v6;
  uint64_t v16 = v7;
  long long v17 = v8;
  long long v18 = v9;
  char v19 = v10;
  char v20 = 0;
  return sub_2575321A4(a1, a2, a3, a4, (uint64_t)&v15);
}

uint64_t sub_2576A3C80()
{
  sub_2575321D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnaryLogicalOperation()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for UnaryLogicalOperation.Operator(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *BOOL result = a2;
        return result;
      case 2:
        *(_WORD *)BOOL result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)BOOL result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *BOOL result = 0;
      break;
    case 2:
      *(_WORD *)BOOL result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2576A3D70);
    case 4:
      *(_DWORD *)BOOL result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnaryLogicalOperation.Operator()
{
  return &type metadata for UnaryLogicalOperation.Operator;
}

unint64_t sub_2576A3DAC()
{
  unint64_t result = qword_26A006750;
  if (!qword_26A006750)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A006758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006750);
  }
  return result;
}

unint64_t sub_2576A3E04()
{
  unint64_t result = qword_26A006760;
  if (!qword_26A006760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006760);
  }
  return result;
}

uint64_t sub_2576A3E50()
{
  return sub_25746FFEC();
}

uint64_t OUTLINED_FUNCTION_0_83()
{
  return sub_2576A3A4C();
}

uint64_t OUTLINED_FUNCTION_1_97()
{
  return sub_2576A9090();
}

uint64_t OUTLINED_FUNCTION_2_86()
{
  return sub_2576A3A4C();
}

uint64_t OUTLINED_FUNCTION_3_77()
{
  return 0x4E6C616369676F6CLL;
}

uint64_t sub_2576A3EC0(id a1, id *a2)
{
  uint64_t v3 = v2;
  unsigned int v4 = a2;
  id v5 = (id)((unint64_t)a2 & 0xC000000000000001);
  sub_257582858(0, ((unint64_t)a2 & 0xC000000000000001) == 0, a2);
  if (v5) {
    goto LABEL_90;
  }
  for (id i = v4[4]; ; id i = (id)MEMORY[0x25A2B8DB0](0, v4))
  {
    uint64_t v7 = (uint64_t)i;
    if (sub_257612C20())
    {
      OUTLINED_FUNCTION_3_78();
      sub_257582858(1, v8, v4);
      id v9 = v5 ? (id)MEMORY[0x25A2B8DB0](1, v4) : v4[5];
      long long v164 = v9;
    }
    else
    {
      long long v164 = 0;
    }
    if (sub_257612C20())
    {
      OUTLINED_FUNCTION_3_78();
      sub_257582858(2, v10, v4);
      id v11 = v5 ? (id)MEMORY[0x25A2B8DB0](2, v4) : v4[6];
      uint64_t v173 = (uint64_t)v11;
    }
    else
    {
      uint64_t v173 = 0;
    }
    sub_257612C20();
    OUTLINED_FUNCTION_3_78();
    if (v13)
    {
      sub_257582858(3, v12, v4);
      if (v5)
      {
        uint64_t v14 = 3;
LABEL_20:
        id v15 = (id)MEMORY[0x25A2B8DB0](v14, v4);
        goto LABEL_24;
      }
      id v16 = v4[7];
    }
    else
    {
      sub_257582858(1, v12, v4);
      if (v5)
      {
        uint64_t v14 = 1;
        goto LABEL_20;
      }
      id v16 = v4[5];
    }
    id v15 = v16;
LABEL_24:
    long long v17 = v15;
    sub_257612C20();
    uint64_t v179 = v7;
    OUTLINED_FUNCTION_3_78();
    if (v19)
    {
      sub_257582858(4, v18, v4);
      if (v5)
      {
        id v20 = v17;
        uint64_t v21 = 4;
LABEL_29:
        id v23 = (id)MEMORY[0x25A2B8DB0](v21, v4);
        goto LABEL_33;
      }
      id v24 = v4[8];
    }
    else
    {
      sub_257582858(2, v18, v4);
      if (v5)
      {
        id v22 = v17;
        uint64_t v21 = 2;
        goto LABEL_29;
      }
      id v24 = v4[6];
    }
    id v25 = v17;
    id v23 = v24;
LABEL_33:
    id v5 = v23;
    unint64_t v26 = sub_2576125E0();
    sub_2576128E0(v26);
    uint64_t v28 = v27;
    uint64_t v29 = sub_2576125E0();
    char v30 = &off_26542C000;
    if (v29 == sub_2576124CC())
    {
      id v168 = v17;
      id v31 = v5;
    }
    else
    {
      sub_25746D770(v28);
      sub_2574CA6FC();
      uint64_t v32 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      char v30 = (_UNKNOWN ***)v3;
      id v168 = objc_msgSend(a1, sel_reshapeTensor_withShape_name_, v17, v32, 0);

      sub_25746D770(v28);
      uint64_t v33 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      id v31 = objc_msgSend(a1, sel_reshapeTensor_withShape_name_, v5, v33, 0);

      long long v17 = v5;
    }
    id v34 = (id)v179;

    uint64_t v161 = (uint64_t)v31;
    if (*(unsigned char *)(v3 + 168))
    {
      if (*(unsigned char *)(v3 + 168) != 1) {
        goto LABEL_49;
      }
      goto LABEL_41;
    }
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)__src);
    swift_release();
    memcpy(__dst, __src, 0x88uLL);
    if (!__dst[10]) {
      break;
    }
    char v35 = *(unsigned char *)(__dst[10] + 24);
    sub_2574718B0((uint64_t)__dst);
    if ((v35 & 1) == 0) {
      goto LABEL_49;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    id v36 = sub_2576A4B58(v179, 0, 0, a1);
    unsigned int v4 = (id *)sub_2576A4C08(v179, (uint64_t)v36, 0, 0, a1);
    uint64_t v182 = (uint64_t)v4;
    if (!sub_257612CF4())
    {
      uint64_t v176 = v4;
      goto LABEL_58;
    }
    uint64_t v37 = *(void *)(v3 + 64);
    uint64_t v38 = *(void *)(v37 + 16);
    if (!v38)
    {
      float v43 = 1.0;
LABEL_57:
      double v64 = (float)(v43 / (float)(v43 + -1.0));
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v65 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v65 + 16) = xmmword_2576AC2A0;
      sub_2574CA6FC();
      uint64_t v66 = v4;
      *(void *)(v65 + 32) = sub_2576A8440();
      __src[0] = v65;
      sub_2576A7E20();
      char v67 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      LOBYTE(__src[0]) = *(unsigned char *)(*(void *)(v3 + 40) + 160);
      char v30 = (_UNKNOWN ***)a1;
      id v68 = objc_msgSend(a1, sel_constantWithScalar_shape_dataType_, v67, sub_25764701C(), v64);

      uint64_t v176 = (id *)objc_msgSend(a1, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v66, v68, 0);
LABEL_58:
      float v69 = *(float *)(v3 + 72);
      uint64_t v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v70 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v70 + 16) = xmmword_2576AC2A0;
      sub_2574CA6FC();
      *(void *)(v70 + 32) = sub_2576A8440();
      __src[0] = v70;
      sub_2576A7E20();
      uint64_t v71 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      uint64_t v72 = v164;
      if (v164) {
        id v73 = objc_msgSend(v164, sel_dataType);
      }
      else {
        id v73 = objc_msgSend(v36, sel_dataType);
      }
      id v165 = objc_msgSend(a1, sel_constantWithScalar_shape_dataType_, v71, v73, v69);

      if (v72) {
        id v74 = v72;
      }
      else {
        id v74 = v36;
      }
      id v75 = v72;
      id v83 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_1_98((int)v75, v76, v77, v78, v79, v80, v81, v82, v136, v139, v142, v145, v148, (uint64_t)v75, v152, v154, 1, 3,
                v159,
                (uint64_t)v31,
                (uint64_t)v165,
                (uint64_t)v168,
                v171,
                v173,
                (uint64_t)v176,
                v179,
                v182,
                a1));

      uint64_t v84 = OUTLINED_FUNCTION_1_4();
      *(_OWORD *)(v84 + 16) = *(_OWORD *)v157;
      id v85 = v83;
      *(void *)(v84 + 32) = sub_2576A8440();
      __src[0] = v84;
      sub_2576A7E20();
      uint64_t v86 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      id v87 = objc_msgSend(v30, sel_constantWithScalar_shape_dataType_, v86, objc_msgSend(v36, sel_dataType), (float)(1.0 - v69));

      uint64_t v155 = (uint64_t)v36;
      v157[0] = (uint64_t)v87;
      id v88 = objc_msgSend(v30, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v36, v87, 0);
      id v89 = objc_msgSend(v30, sel_squeezeTensor_name_, v88, 0);

      id v90 = v85;
      id v91 = v89;
      unsigned int v92 = objc_msgSend(v85, sel_dataType);
      unsigned int v93 = objc_msgSend(v91, sel_dataType);
      if (v92 == 268435472)
      {

        if (v93 == 268435488)
        {
          id v95 = OUTLINED_FUNCTION_0_84(v186, sel_castTensor_toType_name_, (uint64_t)v90);
          uint64_t v96 = v90;
          uint64_t v97 = v90;
          id v90 = v95;
LABEL_71:
        }
        else
        {
          uint64_t v97 = v90;
        }
      }
      else
      {
        if (v92 != 268435488)
        {
          uint64_t v96 = v90;
          uint64_t v97 = v91;
          goto LABEL_71;
        }

        if (v93 == 268435472)
        {
          id v94 = OUTLINED_FUNCTION_0_84(v186, sel_castTensor_toType_name_, (uint64_t)v91);
          uint64_t v96 = v91;
          uint64_t v97 = v91;
          id v91 = v94;
          goto LABEL_71;
        }
        uint64_t v97 = v91;
      }

      uint64_t v98 = sub_2574A25CC(0x5F676E696E6E7572, 0xEC0000006E61656DLL);
      id v100 = sub_2574A4718((uint64_t)v90, (uint64_t)v91, v98, v99, v186);
      uint64_t v101 = (void *)v174;
      uint64_t v146 = (uint64_t)v100;
      if (v174)
      {
        id v102 = (id)v174;
      }
      else
      {
        id v102 = v184;
        uint64_t v101 = 0;
      }
      id v103 = v101;
      id v111 = objc_retainAutoreleasedReturnValue(OUTLINED_FUNCTION_1_98((int)v103, v104, v105, v106, v107, v108, v109, v110, v137, v140, v143, v146, v149, v150, v153, v155, v157[0], v157[1],
                 v160,
                 v162,
                 v166,
                 v169,
                 v172,
                 (uint64_t)v103,
                 v178,
                 v180,
                 (uint64_t)v184,
                 v186));

      id v112 = v111;
      id v113 = objc_msgSend(&selRef_notWithTensor_name_, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v177, v158, 0);
      id v114 = v112;
      id v115 = objc_msgSend(&selRef_notWithTensor_name_, sel_squeezeTensor_name_, v113, 0);

      id v116 = v115;
      unsigned int v117 = objc_msgSend(v114, sel_dataType);
      unsigned int v118 = objc_msgSend(v116, sel_dataType);
      if (v117 == 268435472)
      {

        if (v118 != 268435488)
        {
          uint64_t v121 = v114;
          goto LABEL_83;
        }
        id v122 = OUTLINED_FUNCTION_0_84(v187, sel_castTensor_toType_name_, (uint64_t)v114);
        char v120 = v114;
        uint64_t v121 = v114;
        id v114 = v122;
      }
      else
      {
        if (v117 == 268435488)
        {

          if (v118 == 268435472)
          {
            id v119 = OUTLINED_FUNCTION_0_84(v187, sel_castTensor_toType_name_, (uint64_t)v116);
            char v120 = v116;
            uint64_t v121 = v116;
            id v116 = v119;
            goto LABEL_82;
          }
          uint64_t v121 = v116;
LABEL_83:
          unsigned __int8 v141 = v116;
          id v144 = v114;

          uint64_t v123 = sub_2574A25CC(0xD000000000000010, 0x80000002576D35F0);
          id v138 = sub_2574A4718((uint64_t)v114, (uint64_t)v116, v123, v124, v187);
          float v125 = *(float *)(v3 + 76);
          id v126 = v170;
          id v34 = v163;
          uint64_t v127 = OUTLINED_FUNCTION_4_28();
          uint64_t v129 = sub_2574A25CC(v127, v128);
          char v53 = (void *)v156;
          id v131 = sub_2576A51F4((uint64_t)v181, v156, (uint64_t)v183, (uint64_t)v170, (uint64_t)v163, v125, v129, v130, v187);

          uint64_t v132 = swift_allocObject();
          *(_OWORD *)(v132 + 16) = xmmword_2576ABB20;
          *(void *)(v132 + 32) = v131;
          *(void *)(v132 + 40) = v147;
          *(void *)(v132 + 48) = v138;
          __src[0] = v132;
          sub_2576A7E20();
          uint64_t v63 = __src[0];
          id v133 = v131;
          id v134 = v147;

          uint64_t v60 = v144;
          id v55 = v90;
          uint64_t v59 = v91;
          goto LABEL_84;
        }
        char v120 = v114;
        uint64_t v121 = v116;
      }
LABEL_82:

      goto LABEL_83;
    }
    char v39 = (unint64_t *)(v37 + 32);
    uint64_t v40 = *(void *)(*(void *)(v3 + 40) + 152);
    uint64_t v41 = v40 + 32;
    unint64_t v42 = *(void *)(v40 + 16);
    float v43 = 1.0;
    while (1)
    {
      unint64_t v45 = *v39++;
      unint64_t v44 = v45;
      if (v45 >= v42) {
        break;
      }
      float v43 = v43 * (float)*(uint64_t *)(v41 + 8 * v44);
      if (!--v38) {
        goto LABEL_57;
      }
    }
    __break(1u);
LABEL_90:
    ;
  }
  sub_2574718B0((uint64_t)__dst);
LABEL_49:
  uint64_t v46 = v164;
  if (v164)
  {
    id v47 = v164;
  }
  else
  {
    id v47 = sub_2576A4B58(v179, 0, 0, a1);
    uint64_t v46 = 0;
  }
  id v177 = v46;
  sub_25746D770(v28);
  sub_2574CA6FC();
  long long v48 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(a1, sel_reshapeTensor_withShape_name_, v47, v48, 0);

  if (v173)
  {
    id v50 = v49;
    uint64_t v51 = (void *)v173;
    id v52 = (id)v173;
  }
  else
  {
    id v52 = sub_2576A4C08(v179, (uint64_t)v49, 0, 0, a1);
    uint64_t v51 = 0;
  }
  char v53 = v49;
  id v183 = v51;
  sub_25746D770(v28);
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v55 = objc_msgSend(a1, sel_reshapeTensor_withShape_name_, v52, v54, 0);

  float v56 = *(float *)(v3 + 76);
  uint64_t v58 = *(void *)(v3 + 24);
  uint64_t v57 = *(void *)(v3 + 32);
  sub_2576A7810();
  uint64_t v59 = v168;
  uint64_t v60 = (void *)v161;
  id v61 = sub_2576A51F4(v179, (uint64_t)v53, (uint64_t)v55, (uint64_t)v168, v161, v56, v58, v57, a1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v62 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v62 + 16) = xmmword_2576AC2A0;
  *(void *)(v62 + 32) = v61;
  __src[0] = v62;
  sub_2576A7E20();
  uint64_t v63 = __src[0];
LABEL_84:

  return v63;
}

id sub_2576A4B58(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_25746D770(*(void *)(v4 + 64));
  sub_2574CA6FC();
  uint64_t v8 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  if (a3) {
    a3 = (void *)sub_2576A79C0();
  }
  id v9 = objc_msgSend(a4, sel_meanOfTensor_axes_name_, a1, v8, a3);

  return v9;
}

id sub_2576A4C08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  sub_25746D770(*(void *)(v5 + 64));
  sub_2574CA6FC();
  uint64_t v10 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  if (a4) {
    a4 = (void *)sub_2576A79C0();
  }
  id v11 = objc_msgSend(a5, sel_varianceOfTensor_meanTensor_axes_name_, a1, a2, v10, a4);

  return v11;
}

uint64_t sub_2576A4CC8(void *a1, id *a2)
{
  return sub_2576A3EC0(a1, a2);
}

uint64_t sub_2576A4CE0(void *a1, unint64_t a2)
{
  unint64_t v5 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v5) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v6 = *(id *)(a2 + 32);
  }
  uint64_t v7 = (uint64_t)v6;
  sub_257582858(1, v5 == 0, a2);
  if (v5) {
    id v8 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v8 = *(id *)(a2 + 40);
  }
  id v9 = v8;
  uint64_t v10 = *(void *)(v2 + 48);
  if (v10)
  {
    sub_257582858(2, v5 == 0, a2);
    if (v5) {
      id v11 = (id)MEMORY[0x25A2B8DB0](2, a2);
    }
    else {
      id v11 = *(id *)(a2 + 48);
    }
    id v12 = v11;
  }
  else
  {
    id v12 = 0;
  }
  id v13 = v12;
  unint64_t v14 = sub_2576125E0();
  sub_2576128E0(v14);
  uint64_t v16 = v15;
  if (v12)
  {
    long long v17 = a1;
    uint64_t v18 = sub_2576125E0();
    if (v18 == sub_2576124CC())
    {

      swift_bridgeObjectRelease();
      a1 = v17;
    }
    else
    {
      sub_25746D770(v16);
      swift_bridgeObjectRelease();
      sub_2574CA6FC();
      char v19 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      a1 = v17;
      id v12 = objc_msgSend(v17, sel_reshapeTensor_withShape_name_, v13, v19, 0);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v53 = sub_2576A4B58((uint64_t)v9, 0, 0, a1);
  id v20 = sub_2576A4C08((uint64_t)v9, (uint64_t)v53, 0, 0, a1);
  uint64_t v51 = v12;
  if (v10)
  {
    uint64_t v21 = a1;
    if (*(void *)(v2 + 56))
    {
      uint64_t v22 = *(void *)(v2 + 64);
      sub_25746D770(v22);
      sub_2574CA6FC();
      uint64_t v23 = (uint64_t)v9;
      id v24 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      float v25 = *(float *)(v2 + 76);
      uint64_t v26 = sub_2574A25CC(0x656C616373, 0xE500000000000000);
      id v52 = sub_2576A537C(v7, v23, (uint64_t)v53, (uint64_t)v20, (uint64_t)v24, v25, v26, v27, a1);

      id v9 = (void *)v23;
      id v12 = v51;
      sub_25746D770(v22);
      uint64_t v28 = (void *)sub_2576A7DE0();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_2574A25CC(0x74657366666FLL, 0xE600000000000000);
      id v31 = sub_2576A5430(v7, (uint64_t)v9, (uint64_t)v28, v29, v30, v21);
    }
    else
    {
      id v31 = 0;
      id v52 = 0;
    }
  }
  else
  {
    id v31 = 0;
    id v52 = 0;
    uint64_t v21 = a1;
  }
  sub_25746D770(*(void *)(v2 + 64));
  sub_2574CA6FC();
  uint64_t v32 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  float v33 = *(float *)(v2 + 76);
  uint64_t v34 = OUTLINED_FUNCTION_4_28();
  uint64_t v36 = sub_2574A25CC(v34, v35);
  id v50 = (void *)v7;
  id v38 = sub_2576A52A8(v7, (uint64_t)v9, (uint64_t)v53, (uint64_t)v20, (uint64_t)v12, (uint64_t)v52, (uint64_t)v31, (uint64_t)v32, v33, v36, v37, v21);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v39 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v39 + 16) = xmmword_2576AC2A0;
  *(void *)(v39 + 32) = v38;
  uint64_t v54 = v39;
  sub_2576A7E20();
  uint64_t v40 = v20;
  uint64_t v41 = v52;
  if (v52)
  {
    id v42 = v38;
    id v43 = v52;
    id v44 = objc_msgSend(v21, sel_squeezeTensor_name_, v43, 0);
    MEMORY[0x25A2B83B0]();
    if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_5_75();
    }
    sub_2576A7ED0();
    sub_2576A7E20();

    uint64_t v41 = v52;
    if (v31) {
      goto LABEL_26;
    }
LABEL_30:
    id v47 = v53;
    goto LABEL_31;
  }
  id v48 = v38;
  if (!v31) {
    goto LABEL_30;
  }
LABEL_26:
  id v45 = v31;
  id v46 = objc_msgSend(v21, sel_squeezeTensor_name_, v45, 0);
  MEMORY[0x25A2B83B0]();
  if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_5_75();
  }
  sub_2576A7ED0();
  sub_2576A7E20();

  id v47 = v38;
  uint64_t v40 = v45;
  id v38 = v45;
LABEL_31:

  return v54;
}

uint64_t sub_2576A51DC(void *a1, unint64_t a2)
{
  return sub_2576A4CE0(a1, a2);
}

id sub_2576A51F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v16 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  *(float *)&double v17 = a6;
  id v18 = objc_msgSend(a9, sel_normalizationWithTensor_meanTensor_varianceTensor_gammaTensor_betaTensor_epsilon_name_, a1, a2, a3, a4, a5, v16, v17);

  return v18;
}

id sub_2576A52A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, uint64_t a10, uint64_t a11, void *a12)
{
  id v20 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  *(float *)&double v21 = a9;
  id v22 = objc_msgSend(a12, sel_normalizationGradientWithIncomingGradientTensor_sourceTensor_meanTensor_varianceTensor_gammaTensor_gammaGradientTensor_betaGradientTensor_reductionAxes_epsilon_name_, a1, a2, a3, a4, a5, a6, v21, a7, a8, v20);

  return v22;
}

id sub_2576A537C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, float a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v16 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  *(float *)&double v17 = a6;
  id v18 = objc_msgSend(a9, sel_normalizationGammaGradientWithIncomingGradientTensor_sourceTensor_meanTensor_varianceTensor_reductionAxes_epsilon_name_, a1, a2, a3, a4, a5, v16, v17);

  return v18;
}

id sub_2576A5430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a6, sel_normalizationBetaGradientWithIncomingGradientTensor_sourceTensor_reductionAxes_name_, a1, a2, a3, v10);

  return v11;
}

id OUTLINED_FUNCTION_0_84(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, 268435488, 0);
}

id OUTLINED_FUNCTION_1_98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  id v31 = *(const char **)(v29 + 48);
  return objc_msgSend(a28, v31, v28, a21, 0);
}

uint64_t OUTLINED_FUNCTION_5_75()
{
  return sub_2576A7E70();
}

uint64_t sub_2576A552C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(v2 + 16);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional(v7))
  {
    uint64_t v9 = v8;
    uint64_t ObjectType = swift_getObjectType();
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
    swift_unknownObjectRetain();
    uint64_t v4 = v11(a1, a2, ObjectType, v9);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_257547A80();
    swift_allocError();
    *id v12 = 0;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_2576A5628(uint64_t a1, uint64_t a2)
{
  return sub_2576A552C(a1, a2);
}

unint64_t sub_2576A5640(uint64_t a1)
{
  unint64_t result = sub_2576A5668();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2576A5668()
{
  unint64_t result = qword_26A003AA0;
  if (!qword_26A003AA0)
  {
    type metadata accessor for TrackedOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003AA0);
  }
  return result;
}

uint64_t static GradientClippingMode.== infix(_:_:)(uint64_t *a1, float *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)a2;
  int v4 = *((unsigned __int8 *)a2 + 12);
  if (*((unsigned char *)a1 + 12))
  {
    if (*((unsigned char *)a1 + 12) == 1) {
      return v4 == 1 && *(float *)&v2 == *(float *)&v3;
    }
    if (v4 == 2)
    {
      if ((v2 & 0x100000000) != 0)
      {
        if ((v3 & 0x100000000) != 0) {
          return *((float *)a1 + 2) == a2[2];
        }
      }
      else if ((v3 & 0x100000000) == 0 && *(float *)&v2 == *(float *)&v3)
      {
        return *((float *)a1 + 2) == a2[2];
      }
    }
    return 0;
  }
  if (*((unsigned char *)a2 + 12)) {
    return 0;
  }
  LODWORD(v3) = *(float *)&v2 == *(float *)&v3;
  if (*((float *)&v2 + 1) == *((float *)&v3 + 1)) {
    return v3;
  }
  else {
    return 0;
  }
}

unint64_t sub_2576A5764(unint64_t result)
{
  if (result >= 3) {
    return 3;
  }
  return result;
}

uint64_t sub_2576A5774(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002576D3610 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002576D3630 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002576D3650 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000002576D3670)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_2576A5994(char a1)
{
  unint64_t result = 0x696D697263736964;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2576A5A60@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2576A5764(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2576A5A8C()
{
  return sub_2576A7DC0();
}

uint64_t sub_2576A5AEC()
{
  return sub_2576A7D80();
}

unint64_t sub_2576A5B3C()
{
  return sub_2576A5994(*v0);
}

uint64_t sub_2576A5B44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2576A5774(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2576A5B6C(uint64_t a1)
{
  unint64_t v2 = sub_2576A5E58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2576A5BA8(uint64_t a1)
{
  unint64_t v2 = sub_2576A5E58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GradientClippingMode.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A006768);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2576A5E58();
  sub_2576A91F0();
  if (!v2)
  {
    sub_2576A5EA4();
    sub_2576A8D50();
    if (v20)
    {
      if (v20 != 1)
      {
        uint64_t v15 = sub_2576A8CF0();
        sub_2576A8D30();
        int v14 = v16;
        uint64_t v17 = OUTLINED_FUNCTION_12_4();
        v18(v17);
        uint64_t v11 = v15 & 0x1FFFFFFFFLL;
        goto LABEL_9;
      }
      sub_2576A8D30();
      unsigned int v8 = v7;
      uint64_t v9 = OUTLINED_FUNCTION_12_4();
      v10(v9);
      uint64_t v11 = v8;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004638);
      sub_25760FD54(&qword_26A005130);
      sub_2576A8D50();
      uint64_t v12 = OUTLINED_FUNCTION_12_4();
      v13(v12);
      uint64_t v11 = v19;
    }
    int v14 = 0;
LABEL_9:
    *(void *)a2 = v11;
    *(_DWORD *)(a2 + 8) = v14;
    *(unsigned char *)(a2 + 12) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_2576A5E58()
{
  unint64_t result = qword_26A006770;
  if (!qword_26A006770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006770);
  }
  return result;
}

unint64_t sub_2576A5EA4()
{
  unint64_t result = qword_26A006778;
  if (!qword_26A006778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006778);
  }
  return result;
}

uint64_t GradientClippingMode.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A006780);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  int v10 = *((unsigned __int8 *)v1 + 12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2576A5E58();
  sub_2576A9230();
  if (v10)
  {
    if (v10 == 1)
    {
      LOBYTE(v14) = 1;
      char v15 = 0;
      sub_2576A6158();
      OUTLINED_FUNCTION_2_87();
      if (!v2)
      {
        LOBYTE(v14) = 2;
LABEL_9:
        sub_2576A8E20();
      }
    }
    else
    {
      LOBYTE(v14) = 2;
      char v15 = 0;
      sub_2576A6158();
      OUTLINED_FUNCTION_2_87();
      if (!v2)
      {
        LOBYTE(v14) = 4;
        sub_2576A8DD0();
        LOBYTE(v14) = 3;
        goto LABEL_9;
      }
    }
  }
  else
  {
    LOBYTE(v14) = 0;
    char v15 = 0;
    sub_2576A6158();
    OUTLINED_FUNCTION_2_87();
    if (!v2)
    {
      uint64_t v14 = v13;
      char v15 = 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004638);
      sub_25760FD54(&qword_26A005120);
      sub_2576A8E40();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_2576A6158()
{
  unint64_t result = qword_26A006788;
  if (!qword_26A006788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006788);
  }
  return result;
}

uint64_t sub_2576A61A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GradientClippingMode.init(from:)(a1, a2);
}

uint64_t sub_2576A61BC(void *a1)
{
  return GradientClippingMode.encode(to:)(a1);
}

void *__swift_memcpy13_4(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(void *)((char *)result + 5) = *(uint64_t *)((char *)a2 + 5);
  *unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for GradientClippingMode(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 13))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 12);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientClippingMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 12) = 0;
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 13) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 12) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2576A6270(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_2576A6278(uint64_t result, char a2)
{
  *(unsigned char *)(result + 12) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GradientClippingMode()
{
  return &type metadata for GradientClippingMode;
}

unsigned char *storeEnumTagSinglePayload for GradientClippingMode.Discriminator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576A635CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientClippingMode.Discriminator()
{
  return &type metadata for GradientClippingMode.Discriminator;
}

unsigned char *storeEnumTagSinglePayload for GradientClippingMode.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2576A6460);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientClippingMode.CodingKeys()
{
  return &type metadata for GradientClippingMode.CodingKeys;
}

unint64_t sub_2576A649C()
{
  unint64_t result = qword_26A006790;
  if (!qword_26A006790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006790);
  }
  return result;
}

unint64_t sub_2576A64EC()
{
  unint64_t result = qword_26A006798;
  if (!qword_26A006798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A006798);
  }
  return result;
}

unint64_t sub_2576A653C()
{
  unint64_t result = qword_26A0067A0;
  if (!qword_26A0067A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0067A0);
  }
  return result;
}

unint64_t sub_2576A658C()
{
  unint64_t result = qword_26A0067A8;
  if (!qword_26A0067A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0067A8);
  }
  return result;
}

unint64_t sub_2576A65D8()
{
  unint64_t result = qword_26A0067B0;
  if (!qword_26A0067B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0067B0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_87()
{
  return sub_2576A8E40();
}

uint64_t sub_2576A6980()
{
  return MEMORY[0x270F9C960]();
}

uint64_t sub_2576A6990()
{
  return MEMORY[0x270F9C968]();
}

uint64_t sub_2576A69A0()
{
  return MEMORY[0x270F9C970]();
}

uint64_t sub_2576A69B0()
{
  return MEMORY[0x270F9C978]();
}

uint64_t sub_2576A69C0()
{
  return MEMORY[0x270F9C980]();
}

uint64_t sub_2576A69D0()
{
  return MEMORY[0x270F9C988]();
}

uint64_t sub_2576A69E0()
{
  return MEMORY[0x270F9C990]();
}

uint64_t sub_2576A69F0()
{
  return MEMORY[0x270F9C998]();
}

uint64_t sub_2576A6A00()
{
  return MEMORY[0x270F9C9A0]();
}

uint64_t sub_2576A6A10()
{
  return MEMORY[0x270F9C9A8]();
}

uint64_t sub_2576A6A20()
{
  return MEMORY[0x270F9C9B0]();
}

uint64_t sub_2576A6A30()
{
  return MEMORY[0x270F9C9B8]();
}

uint64_t sub_2576A6A40()
{
  return MEMORY[0x270F9C9C0]();
}

uint64_t sub_2576A6A50()
{
  return MEMORY[0x270F9C9C8]();
}

uint64_t sub_2576A6A60()
{
  return MEMORY[0x270F9C9D0]();
}

uint64_t sub_2576A6A70()
{
  return MEMORY[0x270F9C9D8]();
}

uint64_t sub_2576A6A80()
{
  return MEMORY[0x270F9C9E0]();
}

uint64_t sub_2576A6A90()
{
  return MEMORY[0x270F9C9E8]();
}

uint64_t sub_2576A6AA0()
{
  return MEMORY[0x270F9C9F0]();
}

uint64_t sub_2576A6AB0()
{
  return MEMORY[0x270F9C9F8]();
}

uint64_t sub_2576A6AC0()
{
  return MEMORY[0x270F9CA00]();
}

uint64_t sub_2576A6AD0()
{
  return MEMORY[0x270F9CA08]();
}

uint64_t sub_2576A6AE0()
{
  return MEMORY[0x270F9CA10]();
}

uint64_t sub_2576A6AF0()
{
  return MEMORY[0x270F9CA18]();
}

uint64_t sub_2576A6B00()
{
  return MEMORY[0x270F9CA20]();
}

uint64_t sub_2576A6B20()
{
  return MEMORY[0x270F9CA30]();
}

uint64_t sub_2576A6B30()
{
  return MEMORY[0x270F9CA38]();
}

uint64_t sub_2576A6B40()
{
  return MEMORY[0x270F9CA40]();
}

uint64_t sub_2576A6B50()
{
  return MEMORY[0x270F9CA48]();
}

uint64_t sub_2576A6B60()
{
  return MEMORY[0x270F9CA50]();
}

uint64_t sub_2576A6B70()
{
  return MEMORY[0x270F9CA58]();
}

uint64_t sub_2576A6B80()
{
  return MEMORY[0x270F9CA60]();
}

uint64_t sub_2576A6B90()
{
  return MEMORY[0x270F9CA68]();
}

uint64_t sub_2576A6BA0()
{
  return MEMORY[0x270F9CA70]();
}

uint64_t sub_2576A6BB0()
{
  return MEMORY[0x270F9CA78]();
}

uint64_t sub_2576A6BC0()
{
  return MEMORY[0x270F9CA80]();
}

uint64_t sub_2576A6BD0()
{
  return MEMORY[0x270F9CA88]();
}

uint64_t sub_2576A6BE0()
{
  return MEMORY[0x270F9CA90]();
}

uint64_t sub_2576A6BF0()
{
  return MEMORY[0x270F9CA98]();
}

uint64_t sub_2576A6C00()
{
  return MEMORY[0x270F9CAA0]();
}

uint64_t sub_2576A6C10()
{
  return MEMORY[0x270F9CAA8]();
}

uint64_t sub_2576A6C20()
{
  return MEMORY[0x270F9CAB0]();
}

uint64_t sub_2576A6C30()
{
  return MEMORY[0x270F9CAB8]();
}

uint64_t sub_2576A6C40()
{
  return MEMORY[0x270F9CAC0]();
}

uint64_t sub_2576A6C50()
{
  return MEMORY[0x270F9CAC8]();
}

uint64_t sub_2576A6C60()
{
  return MEMORY[0x270F9CAD0]();
}

uint64_t sub_2576A6C70()
{
  return MEMORY[0x270F9CAD8]();
}

uint64_t sub_2576A6C80()
{
  return MEMORY[0x270F9CAE0]();
}

uint64_t sub_2576A6C90()
{
  return MEMORY[0x270F9CAE8]();
}

uint64_t sub_2576A6CA0()
{
  return MEMORY[0x270F9CAF0]();
}

uint64_t sub_2576A6CB0()
{
  return MEMORY[0x270F9CAF8]();
}

uint64_t sub_2576A6CC0()
{
  return MEMORY[0x270F9CB00]();
}

uint64_t sub_2576A6CD0()
{
  return MEMORY[0x270F9CB08]();
}

uint64_t sub_2576A6CE0()
{
  return MEMORY[0x270F9CB10]();
}

uint64_t sub_2576A6CF0()
{
  return MEMORY[0x270F9CB18]();
}

uint64_t sub_2576A6D00()
{
  return MEMORY[0x270F9CB20]();
}

uint64_t sub_2576A6D10()
{
  return MEMORY[0x270F9CB28]();
}

uint64_t sub_2576A6D20()
{
  return MEMORY[0x270F9CB30]();
}

uint64_t sub_2576A6D30()
{
  return MEMORY[0x270F9CB38]();
}

uint64_t sub_2576A6D40()
{
  return MEMORY[0x270F9CB40]();
}

uint64_t sub_2576A6D50()
{
  return MEMORY[0x270F9CB48]();
}

uint64_t sub_2576A6D60()
{
  return MEMORY[0x270F9CB50]();
}

uint64_t sub_2576A6D70()
{
  return MEMORY[0x270F9CB58]();
}

uint64_t sub_2576A6D80()
{
  return MEMORY[0x270F9CB60]();
}

uint64_t sub_2576A6D90()
{
  return MEMORY[0x270F9CB68]();
}

uint64_t sub_2576A6DA0()
{
  return MEMORY[0x270F9CB70]();
}

uint64_t sub_2576A6DB0()
{
  return MEMORY[0x270F9CB78]();
}

uint64_t sub_2576A6DC0()
{
  return MEMORY[0x270F9CB80]();
}

uint64_t sub_2576A6DD0()
{
  return MEMORY[0x270F9CB88]();
}

uint64_t sub_2576A6DE0()
{
  return MEMORY[0x270F9CB90]();
}

uint64_t sub_2576A6DF0()
{
  return MEMORY[0x270F9CB98]();
}

uint64_t sub_2576A6E00()
{
  return MEMORY[0x270F9CBA0]();
}

uint64_t sub_2576A6E10()
{
  return MEMORY[0x270F9CBA8]();
}

uint64_t sub_2576A6E20()
{
  return MEMORY[0x270F9CBB0]();
}

uint64_t sub_2576A6E30()
{
  return MEMORY[0x270F9CBB8]();
}

uint64_t sub_2576A6E40()
{
  return MEMORY[0x270F9CBD0]();
}

uint64_t sub_2576A6E50()
{
  return MEMORY[0x270F9CBE0]();
}

uint64_t sub_2576A6E60()
{
  return MEMORY[0x270F9CBE8]();
}

uint64_t sub_2576A6E70()
{
  return MEMORY[0x270F9CBF0]();
}

uint64_t sub_2576A6E80()
{
  return MEMORY[0x270F9CBF8]();
}

uint64_t sub_2576A6E90()
{
  return MEMORY[0x270F9CC00]();
}

uint64_t sub_2576A6EA0()
{
  return MEMORY[0x270F9CC08]();
}

uint64_t sub_2576A6EB0()
{
  return MEMORY[0x270F9CC10]();
}

uint64_t sub_2576A6EC0()
{
  return MEMORY[0x270F9CC18]();
}

uint64_t sub_2576A6ED0()
{
  return MEMORY[0x270F9CC20]();
}

uint64_t sub_2576A6EE0()
{
  return MEMORY[0x270F9CC28]();
}

uint64_t sub_2576A6EF0()
{
  return MEMORY[0x270F9CC30]();
}

uint64_t sub_2576A6F00()
{
  return MEMORY[0x270F9CC38]();
}

uint64_t sub_2576A6F10()
{
  return MEMORY[0x270EEDE38]();
}

uint64_t sub_2576A6F20()
{
  return MEMORY[0x270EEDE48]();
}

uint64_t sub_2576A6F30()
{
  return MEMORY[0x270EEDE58]();
}

uint64_t sub_2576A6F40()
{
  return MEMORY[0x270EEDE70]();
}

uint64_t sub_2576A6F50()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_2576A6F60()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_2576A6F70()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_2576A6F80()
{
  return MEMORY[0x270EEE290]();
}

uint64_t sub_2576A6F90()
{
  return MEMORY[0x270EEE298]();
}

uint64_t sub_2576A6FA0()
{
  return MEMORY[0x270EEE618]();
}

uint64_t sub_2576A6FB0()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_2576A6FC0()
{
  return MEMORY[0x270EEE648]();
}

uint64_t sub_2576A6FD0()
{
  return MEMORY[0x270EEE658]();
}

uint64_t sub_2576A6FE0()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_2576A6FF0()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_2576A7000()
{
  return MEMORY[0x270EEE920]();
}

uint64_t sub_2576A7010()
{
  return MEMORY[0x270EEE930]();
}

uint64_t sub_2576A7020()
{
  return MEMORY[0x270EEE950]();
}

uint64_t sub_2576A7030()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_2576A7040()
{
  return MEMORY[0x270EEFBD0]();
}

uint64_t sub_2576A7050()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_2576A7060()
{
  return MEMORY[0x270EEFC48]();
}

uint64_t sub_2576A7070()
{
  return MEMORY[0x270EEFCB0]();
}

uint64_t sub_2576A7080()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_2576A7090()
{
  return MEMORY[0x270EEFDC0]();
}

uint64_t sub_2576A70A0()
{
  return MEMORY[0x270EEFE68]();
}

uint64_t sub_2576A70B0()
{
  return MEMORY[0x270EEFE80]();
}

uint64_t sub_2576A70C0()
{
  return MEMORY[0x270EEFF18]();
}

uint64_t sub_2576A70D0()
{
  return MEMORY[0x270EEFF58]();
}

uint64_t sub_2576A70E0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_2576A70F0()
{
  return MEMORY[0x270EEFFB0]();
}

uint64_t sub_2576A7100()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_2576A7110()
{
  return MEMORY[0x270EEFFE8]();
}

uint64_t sub_2576A7120()
{
  return MEMORY[0x270EF0000]();
}

uint64_t sub_2576A7130()
{
  return MEMORY[0x270EF0018]();
}

uint64_t sub_2576A7140()
{
  return MEMORY[0x270EF00F8]();
}

uint64_t sub_2576A7150()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_2576A7160()
{
  return MEMORY[0x270EF0148]();
}

uint64_t sub_2576A7170()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_2576A7180()
{
  return MEMORY[0x270EF0198]();
}

uint64_t sub_2576A7190()
{
  return MEMORY[0x270EF01A8]();
}

uint64_t sub_2576A71A0()
{
  return MEMORY[0x270EF01B0]();
}

uint64_t sub_2576A71B0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_2576A71C0()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_2576A71D0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_2576A71E0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_2576A7200()
{
  return MEMORY[0x270FA06C8]();
}

uint64_t sub_2576A7210()
{
  return MEMORY[0x270FA06D8]();
}

uint64_t sub_2576A7220()
{
  return MEMORY[0x270F488F0]();
}

uint64_t sub_2576A7230()
{
  return MEMORY[0x270F48908]();
}

uint64_t sub_2576A7240()
{
  return MEMORY[0x270F48910]();
}

uint64_t sub_2576A7250()
{
  return MEMORY[0x270F48938]();
}

uint64_t sub_2576A7260()
{
  return MEMORY[0x270F48958]();
}

uint64_t sub_2576A7270()
{
  return MEMORY[0x270F48970]();
}

uint64_t sub_2576A7280()
{
  return MEMORY[0x270F489C0]();
}

uint64_t sub_2576A7290()
{
  return MEMORY[0x270F48D10]();
}

uint64_t sub_2576A72A0()
{
  return MEMORY[0x270F48D18]();
}

uint64_t sub_2576A72B0()
{
  return MEMORY[0x270F48D40]();
}

uint64_t sub_2576A72C0()
{
  return MEMORY[0x270F48D48]();
}

uint64_t sub_2576A72D0()
{
  return MEMORY[0x270F49040]();
}

uint64_t sub_2576A72E0()
{
  return MEMORY[0x270F49060]();
}

uint64_t sub_2576A72F0()
{
  return MEMORY[0x270F49068]();
}

uint64_t sub_2576A7300()
{
  return MEMORY[0x270F49078]();
}

uint64_t sub_2576A7310()
{
  return MEMORY[0x270F49080]();
}

uint64_t sub_2576A7320()
{
  return MEMORY[0x270F49088]();
}

uint64_t sub_2576A7330()
{
  return MEMORY[0x270F490A0]();
}

uint64_t sub_2576A7340()
{
  return MEMORY[0x270F490A8]();
}

uint64_t sub_2576A7350()
{
  return MEMORY[0x270F490B0]();
}

uint64_t sub_2576A7360()
{
  return MEMORY[0x270F490D0]();
}

uint64_t sub_2576A7370()
{
  return MEMORY[0x270F490D8]();
}

uint64_t sub_2576A7380()
{
  return MEMORY[0x270F491B8]();
}

uint64_t sub_2576A7390()
{
  return MEMORY[0x270F491D0]();
}

uint64_t sub_2576A73A0()
{
  return MEMORY[0x270F491E8]();
}

uint64_t sub_2576A73B0()
{
  return MEMORY[0x270F491F0]();
}

uint64_t sub_2576A73C0()
{
  return MEMORY[0x270F49210]();
}

uint64_t sub_2576A73D0()
{
  return MEMORY[0x270F49218]();
}

uint64_t sub_2576A73E0()
{
  return MEMORY[0x270F49228]();
}

uint64_t sub_2576A73F0()
{
  return MEMORY[0x270F49230]();
}

uint64_t sub_2576A7400()
{
  return MEMORY[0x270F49240]();
}

uint64_t sub_2576A7410()
{
  return MEMORY[0x270F49248]();
}

uint64_t sub_2576A7420()
{
  return MEMORY[0x270F49260]();
}

uint64_t sub_2576A7430()
{
  return MEMORY[0x270F49270]();
}

uint64_t sub_2576A7440()
{
  return MEMORY[0x270F49280]();
}

uint64_t sub_2576A7450()
{
  return MEMORY[0x270F49328]();
}

uint64_t sub_2576A7460()
{
  return MEMORY[0x270F49330]();
}

uint64_t sub_2576A7470()
{
  return MEMORY[0x270F49338]();
}

uint64_t sub_2576A7480()
{
  return MEMORY[0x270F49340]();
}

uint64_t sub_2576A7490()
{
  return MEMORY[0x270F49348]();
}

uint64_t sub_2576A74A0()
{
  return MEMORY[0x270F49350]();
}

uint64_t sub_2576A74B0()
{
  return MEMORY[0x270F49360]();
}

uint64_t sub_2576A74C0()
{
  return MEMORY[0x270F49370]();
}

uint64_t sub_2576A74D0()
{
  return MEMORY[0x270F49378]();
}

uint64_t sub_2576A74E0()
{
  return MEMORY[0x270F49380]();
}

uint64_t sub_2576A74F0()
{
  return MEMORY[0x270F49398]();
}

uint64_t sub_2576A7500()
{
  return MEMORY[0x270F493A0]();
}

uint64_t sub_2576A7510()
{
  return MEMORY[0x270F493E0]();
}

uint64_t sub_2576A7520()
{
  return MEMORY[0x270F49410]();
}

uint64_t sub_2576A7530()
{
  return MEMORY[0x270F49418]();
}

uint64_t sub_2576A7540()
{
  return MEMORY[0x270F49420]();
}

uint64_t sub_2576A7550()
{
  return MEMORY[0x270F49430]();
}

uint64_t sub_2576A7560()
{
  return MEMORY[0x270F49440]();
}

uint64_t sub_2576A7570()
{
  return MEMORY[0x270FA2C78]();
}

uint64_t sub_2576A7580()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_2576A7590()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_2576A75A0()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_2576A75B0()
{
  return MEMORY[0x270FA2D48]();
}

uint64_t sub_2576A75C0()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_2576A75D0()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_2576A75E0()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_2576A75F0()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_2576A7600()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_2576A7610()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_2576A7620()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_2576A7630()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_2576A7640()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_2576A7650()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_2576A7660()
{
  return MEMORY[0x270EE75A8]();
}

uint64_t sub_2576A7670()
{
  return MEMORY[0x270EE75B0]();
}

uint64_t sub_2576A7680()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_2576A7690()
{
  return MEMORY[0x270FA09D0]();
}

uint64_t sub_2576A76A0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_2576A76B0()
{
  return MEMORY[0x270FA0A00]();
}

uint64_t sub_2576A76C0()
{
  return MEMORY[0x270FA0A28]();
}

uint64_t sub_2576A76D0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_2576A76E0()
{
  return MEMORY[0x270F9CFC0]();
}

uint64_t sub_2576A76F0()
{
  return MEMORY[0x270F9CFC8]();
}

uint64_t sub_2576A7700()
{
  return MEMORY[0x270F9CFD8]();
}

uint64_t sub_2576A7710()
{
  return MEMORY[0x270F9CFE0]();
}

uint64_t sub_2576A7720()
{
  return MEMORY[0x270F9CFE8]();
}

uint64_t sub_2576A7730()
{
  return MEMORY[0x270F9CFF0]();
}

uint64_t sub_2576A7740()
{
  return MEMORY[0x270F9D008]();
}

uint64_t sub_2576A7750()
{
  return MEMORY[0x270F9D010]();
}

uint64_t sub_2576A7760()
{
  return MEMORY[0x270F9D018]();
}

uint64_t sub_2576A7770()
{
  return MEMORY[0x270F9D030]();
}

uint64_t sub_2576A7780()
{
  return MEMORY[0x270F9D048]();
}

uint64_t sub_2576A7790()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_2576A77A0()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_2576A77B0()
{
  return MEMORY[0x270F9D068]();
}

uint64_t sub_2576A77C0()
{
  return MEMORY[0x270F9D070]();
}

uint64_t sub_2576A77D0()
{
  return MEMORY[0x270F9D090]();
}

uint64_t sub_2576A77E0()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_2576A77F0()
{
  return MEMORY[0x270F9D0B0]();
}

uint64_t sub_2576A7800()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_2576A7810()
{
  return MEMORY[0x270F9D0F0]();
}

uint64_t sub_2576A7820()
{
  return MEMORY[0x270F9D120]();
}

uint64_t sub_2576A7830()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_2576A7840()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_2576A7850()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_2576A7860()
{
  return MEMORY[0x270F9D260]();
}

uint64_t sub_2576A7870()
{
  return MEMORY[0x270F9D2A0]();
}

uint64_t sub_2576A7880()
{
  return MEMORY[0x270F9D2B8]();
}

uint64_t sub_2576A7890()
{
  return MEMORY[0x270F9D2F0]();
}

uint64_t sub_2576A78A0()
{
  return MEMORY[0x270F9D300]();
}

uint64_t sub_2576A78B0()
{
  return MEMORY[0x270F9D308]();
}

uint64_t sub_2576A78C0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_2576A78D0()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_2576A78E0()
{
  return MEMORY[0x270F9D3C0]();
}

uint64_t sub_2576A78F0()
{
  return MEMORY[0x270F9D440]();
}

uint64_t sub_2576A7900()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_2576A7910()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_2576A7920()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_2576A7930()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_2576A7940()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_2576A7950()
{
  return MEMORY[0x270F9D4B0]();
}

uint64_t sub_2576A7960()
{
  return MEMORY[0x270F9D4C8]();
}

uint64_t sub_2576A7970()
{
  return MEMORY[0x270F9D4D0]();
}

uint64_t sub_2576A7980()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_2576A7990()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2576A79A0()
{
  return MEMORY[0x270F9D5A8]();
}

uint64_t sub_2576A79B0()
{
  return MEMORY[0x270F9D5C0]();
}

uint64_t sub_2576A79C0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_2576A79D0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_2576A79E0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_2576A79F0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_2576A7A00()
{
  return MEMORY[0x270EF19F8]();
}

uint64_t sub_2576A7A10()
{
  return MEMORY[0x270EF1AA8]();
}

uint64_t sub_2576A7A20()
{
  return MEMORY[0x270EF1AD0]();
}

uint64_t sub_2576A7A30()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_2576A7A40()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_2576A7A50()
{
  return MEMORY[0x270F9D620]();
}

uint64_t sub_2576A7A60()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_2576A7A70()
{
  return MEMORY[0x270F9D668]();
}

uint64_t sub_2576A7A80()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_2576A7A90()
{
  return MEMORY[0x270F9D6C0]();
}

uint64_t sub_2576A7AA0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_2576A7AB0()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_2576A7AC0()
{
  return MEMORY[0x270F9D748]();
}

uint64_t sub_2576A7AD0()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_2576A7AE0()
{
  return MEMORY[0x270F9D788]();
}

uint64_t sub_2576A7AF0()
{
  return MEMORY[0x270F9D790]();
}

uint64_t sub_2576A7B00()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2576A7B10()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_2576A7B20()
{
  return MEMORY[0x270F9D7C8]();
}

uint64_t sub_2576A7B30()
{
  return MEMORY[0x270F9D7D8]();
}

uint64_t sub_2576A7B40()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2576A7B50()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_2576A7B60()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_2576A7B80()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_2576A7B90()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_2576A7BA0()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_2576A7BB0()
{
  return MEMORY[0x270F9D880]();
}

uint64_t sub_2576A7BC0()
{
  return MEMORY[0x270F9D898]();
}

uint64_t sub_2576A7BD0()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_2576A7BE0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_2576A7BF0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_2576A7C00()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_2576A7C10()
{
  return MEMORY[0x270F9D900]();
}

uint64_t sub_2576A7C20()
{
  return MEMORY[0x270F9D908]();
}

uint64_t sub_2576A7C30()
{
  return MEMORY[0x270F9D920]();
}

uint64_t sub_2576A7C40()
{
  return MEMORY[0x270F9D928]();
}

uint64_t sub_2576A7C50()
{
  return MEMORY[0x270F9D930]();
}

uint64_t sub_2576A7C60()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_2576A7C70()
{
  return MEMORY[0x270F9D940]();
}

uint64_t sub_2576A7C80()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_2576A7C90()
{
  return MEMORY[0x270F9D958]();
}

uint64_t sub_2576A7CA0()
{
  return MEMORY[0x270F9D960]();
}

uint64_t sub_2576A7CB0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_2576A7CC0()
{
  return MEMORY[0x270F9D980]();
}

uint64_t sub_2576A7CD0()
{
  return MEMORY[0x270F9D988]();
}

uint64_t sub_2576A7CE0()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_2576A7CF0()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_2576A7D00()
{
  return MEMORY[0x270F9D9C0]();
}

uint64_t sub_2576A7D10()
{
  return MEMORY[0x270F9D9D0]();
}

uint64_t sub_2576A7D20()
{
  return MEMORY[0x270F9D9D8]();
}

uint64_t sub_2576A7D30()
{
  return MEMORY[0x270F9D9E8]();
}

uint64_t sub_2576A7D40()
{
  return MEMORY[0x270F9D9F0]();
}

uint64_t sub_2576A7D50()
{
  return MEMORY[0x270F9DA18]();
}

uint64_t sub_2576A7D60()
{
  return MEMORY[0x270F9DA40]();
}

uint64_t sub_2576A7D70()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_2576A7D80()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_2576A7DC0()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_2576A7DD0()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_2576A7DE0()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_2576A7DF0()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_2576A7E00()
{
  return MEMORY[0x270F9DBA8]();
}

uint64_t sub_2576A7E10()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_2576A7E20()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_2576A7E30()
{
  return MEMORY[0x270F9DBC8]();
}

uint64_t sub_2576A7E40()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_2576A7E50()
{
  return MEMORY[0x270F9DBD8]();
}

uint64_t sub_2576A7E60()
{
  return MEMORY[0x270F9DBE0]();
}

uint64_t sub_2576A7E70()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_2576A7E80()
{
  return MEMORY[0x270F9DC08]();
}

uint64_t sub_2576A7E90()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_2576A7EA0()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_2576A7EB0()
{
  return MEMORY[0x270F9DC28]();
}

uint64_t sub_2576A7EC0()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_2576A7ED0()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_2576A7EE0()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_2576A7EF0()
{
  return MEMORY[0x270F9DC70]();
}

uint64_t sub_2576A7F00()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_2576A7F10()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_2576A7F20()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_2576A7F30()
{
  return MEMORY[0x270F9DCB8]();
}

uint64_t sub_2576A7F40()
{
  return MEMORY[0x270F9DCD0]();
}

uint64_t sub_2576A7F50()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_2576A7F60()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_2576A7F70()
{
  return MEMORY[0x270F9DD10]();
}

uint64_t sub_2576A7F80()
{
  return MEMORY[0x270F9DD20]();
}

uint64_t sub_2576A7F90()
{
  return MEMORY[0x270F9DD28]();
}

uint64_t sub_2576A7FA0()
{
  return MEMORY[0x270F9DD68]();
}

uint64_t sub_2576A7FB0()
{
  return MEMORY[0x270F9DD78]();
}

uint64_t sub_2576A7FC0()
{
  return MEMORY[0x270F9DD98]();
}

uint64_t sub_2576A7FD0()
{
  return MEMORY[0x270F9DDB0]();
}

uint64_t sub_2576A7FE0()
{
  return MEMORY[0x270EF1C48]();
}

uint64_t sub_2576A8000()
{
  return MEMORY[0x270F9DE08]();
}

uint64_t sub_2576A8010()
{
  return MEMORY[0x270F9DE18]();
}

uint64_t sub_2576A8020()
{
  return MEMORY[0x270F9DE38]();
}

uint64_t sub_2576A8030()
{
  return MEMORY[0x270F9DE40]();
}

uint64_t sub_2576A8040()
{
  return MEMORY[0x270F9DE48]();
}

uint64_t sub_2576A8050()
{
  return MEMORY[0x270F9DE58]();
}

uint64_t sub_2576A8060()
{
  return MEMORY[0x270F9DEC0]();
}

uint64_t sub_2576A8070()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_2576A8080()
{
  return MEMORY[0x270F9DF18]();
}

uint64_t sub_2576A8090()
{
  return MEMORY[0x270F9DF58]();
}

uint64_t sub_2576A80A0()
{
  return MEMORY[0x270F9DF70]();
}

uint64_t sub_2576A80B0()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_2576A80C0()
{
  return MEMORY[0x270F9DFD0]();
}

uint64_t sub_2576A80D0()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_2576A80E0()
{
  return MEMORY[0x270EF1CE0]();
}

uint64_t sub_2576A8100()
{
  return MEMORY[0x270F9E018]();
}

uint64_t sub_2576A8110()
{
  return MEMORY[0x270F9E070]();
}

uint64_t sub_2576A8120()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_2576A8130()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_2576A8140()
{
  return MEMORY[0x270F9E0B8]();
}

uint64_t sub_2576A8150()
{
  return MEMORY[0x270F9E0C0]();
}

uint64_t sub_2576A8160()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_2576A8180()
{
  return MEMORY[0x270F9E110]();
}

uint64_t sub_2576A8190()
{
  return MEMORY[0x270F9E118]();
}

uint64_t sub_2576A81A0()
{
  return MEMORY[0x270F9E120]();
}

uint64_t sub_2576A81C0()
{
  return MEMORY[0x270F9E138]();
}

uint64_t sub_2576A81D0()
{
  return MEMORY[0x270F9E168]();
}

uint64_t sub_2576A81E0()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_2576A81F0()
{
  return MEMORY[0x270F9E1D0]();
}

uint64_t sub_2576A8200()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_2576A8210()
{
  return MEMORY[0x270FA2BC8]();
}

uint64_t sub_2576A8220()
{
  return MEMORY[0x270F9E2A0]();
}

uint64_t sub_2576A8240()
{
  return MEMORY[0x270F9E2E8]();
}

uint64_t sub_2576A8250()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_2576A8260()
{
  return MEMORY[0x270F9E340]();
}

uint64_t sub_2576A8270()
{
  return MEMORY[0x270F9E348]();
}

uint64_t sub_2576A8300()
{
  return MEMORY[0x270EF1E30]();
}

uint64_t sub_2576A8310()
{
  return MEMORY[0x270EF1E40]();
}

uint64_t sub_2576A8320()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_2576A8330()
{
  return MEMORY[0x270F9CDE8]();
}

uint64_t sub_2576A8340()
{
  return MEMORY[0x270FA0C50]();
}

uint64_t sub_2576A8350()
{
  return MEMORY[0x270FA0D38]();
}

uint64_t sub_2576A8360()
{
  return MEMORY[0x270FA0D50]();
}

uint64_t sub_2576A8370()
{
  return MEMORY[0x270FA0D88]();
}

uint64_t sub_2576A8380()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_2576A8390()
{
  return MEMORY[0x270FA0DB8]();
}

uint64_t sub_2576A83A0()
{
  return MEMORY[0x270FA0DD0]();
}

uint64_t sub_2576A83B0()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_2576A83C0()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_2576A83D0()
{
  return MEMORY[0x270F9CE10]();
}

uint64_t sub_2576A83E0()
{
  return MEMORY[0x270F9CE28]();
}

uint64_t sub_2576A83F0()
{
  return MEMORY[0x270F9CE30]();
}

uint64_t sub_2576A8400()
{
  return MEMORY[0x270FA0F10]();
}

uint64_t sub_2576A8410()
{
  return MEMORY[0x270FA0F28]();
}

uint64_t sub_2576A8420()
{
  return MEMORY[0x270F9CE38]();
}

uint64_t sub_2576A8430()
{
  return MEMORY[0x270F9CE40]();
}

uint64_t sub_2576A8440()
{
  return MEMORY[0x270EF2198]();
}

uint64_t sub_2576A8450()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_2576A8460()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_2576A8470()
{
  return MEMORY[0x270F9CE60]();
}

uint64_t sub_2576A8480()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_2576A8490()
{
  return MEMORY[0x270FA2F00]();
}

uint64_t sub_2576A84A0()
{
  return MEMORY[0x270F9E360]();
}

uint64_t sub_2576A84B0()
{
  return MEMORY[0x270F9E3A0]();
}

uint64_t sub_2576A84C0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2576A84D0()
{
  return MEMORY[0x270F9E3D0]();
}

uint64_t sub_2576A84E0()
{
  return MEMORY[0x270F9E400]();
}

uint64_t sub_2576A84F0()
{
  return MEMORY[0x270F9E468]();
}

uint64_t sub_2576A8500()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_2576A8510()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_2576A8520()
{
  return MEMORY[0x270F9E538]();
}

uint64_t sub_2576A8530()
{
  return MEMORY[0x270F9E540]();
}

uint64_t sub_2576A8540()
{
  return MEMORY[0x270F9E548]();
}

uint64_t sub_2576A8550()
{
  return MEMORY[0x270F9E550]();
}

uint64_t sub_2576A8560()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_2576A8570()
{
  return MEMORY[0x270EF24A0]();
}

uint64_t sub_2576A8580()
{
  return MEMORY[0x270EF25B0]();
}

uint64_t sub_2576A8590()
{
  return MEMORY[0x270F9E5B8]();
}

uint64_t sub_2576A85A0()
{
  return MEMORY[0x270F9E5D8]();
}

uint64_t sub_2576A85B0()
{
  return MEMORY[0x270F9E600]();
}

uint64_t sub_2576A85C0()
{
  return MEMORY[0x270F9E640]();
}

uint64_t sub_2576A85D0()
{
  return MEMORY[0x270F9E648]();
}

uint64_t sub_2576A85E0()
{
  return MEMORY[0x270F9E650]();
}

uint64_t sub_2576A85F0()
{
  return MEMORY[0x270F9E658]();
}

uint64_t sub_2576A8600()
{
  return MEMORY[0x270F9E698]();
}

uint64_t sub_2576A8610()
{
  return MEMORY[0x270F9E6A0]();
}

uint64_t sub_2576A8620()
{
  return MEMORY[0x270F9E6A8]();
}

uint64_t sub_2576A8630()
{
  return MEMORY[0x270F9E6B0]();
}

uint64_t sub_2576A8640()
{
  return MEMORY[0x270F9E708]();
}

uint64_t sub_2576A8660()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_2576A8670()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_2576A8680()
{
  return MEMORY[0x270F9E7F8]();
}

uint64_t sub_2576A8690()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_2576A86A0()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_2576A86B0()
{
  return MEMORY[0x270F9E890]();
}

uint64_t sub_2576A86C0()
{
  return MEMORY[0x270F9E8F8]();
}

uint64_t sub_2576A86D0()
{
  return MEMORY[0x270F9E908]();
}

uint64_t sub_2576A86E0()
{
  return MEMORY[0x270F9E910]();
}

uint64_t sub_2576A86F0()
{
  return MEMORY[0x270F9E918]();
}

uint64_t sub_2576A8710()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_2576A8720()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_2576A8730()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2576A8740()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2576A8750()
{
  return MEMORY[0x270F9E9B8]();
}

uint64_t sub_2576A8760()
{
  return MEMORY[0x270F9E9E0]();
}

uint64_t sub_2576A8770()
{
  return MEMORY[0x270F9E9F0]();
}

uint64_t sub_2576A8780()
{
  return MEMORY[0x270F9E9F8]();
}

uint64_t sub_2576A8790()
{
  return MEMORY[0x270F9EA00]();
}

uint64_t sub_2576A87A0()
{
  return MEMORY[0x270F9EA08]();
}

uint64_t sub_2576A87B0()
{
  return MEMORY[0x270F9EA30]();
}

uint64_t sub_2576A87C0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_2576A87D0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_2576A87E0()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_2576A87F0()
{
  return MEMORY[0x270F9EA78]();
}

uint64_t sub_2576A8800()
{
  return MEMORY[0x270F9EA98]();
}

uint64_t sub_2576A8810()
{
  return MEMORY[0x270F9EAA0]();
}

uint64_t sub_2576A8820()
{
  return MEMORY[0x270F9EAB0]();
}

uint64_t sub_2576A8830()
{
  return MEMORY[0x270F9EAB8]();
}

uint64_t sub_2576A8840()
{
  return MEMORY[0x270F9EB18]();
}

uint64_t sub_2576A8850()
{
  return MEMORY[0x270F9EB20]();
}

uint64_t sub_2576A8860()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_2576A8870()
{
  return MEMORY[0x270F9EB50]();
}

uint64_t sub_2576A8880()
{
  return MEMORY[0x270F9EB68]();
}

uint64_t sub_2576A88A0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_2576A88C0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_2576A88D0()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_2576A88E0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_2576A88F0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_2576A8900()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_2576A8910()
{
  return MEMORY[0x270F9EC18]();
}

uint64_t sub_2576A8940()
{
  return MEMORY[0x270F9EC30]();
}

uint64_t sub_2576A8950()
{
  return MEMORY[0x270F9EC38]();
}

uint64_t sub_2576A8960()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_2576A8970()
{
  return MEMORY[0x270F9EC68]();
}

uint64_t sub_2576A8980()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_2576A8990()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_2576A89A0()
{
  return MEMORY[0x270F9ECB8]();
}

uint64_t sub_2576A89B0()
{
  return MEMORY[0x270F9ECE8]();
}

uint64_t sub_2576A89C0()
{
  return MEMORY[0x270F9ED00]();
}

uint64_t sub_2576A89D0()
{
  return MEMORY[0x270F9ED10]();
}

uint64_t sub_2576A89E0()
{
  return MEMORY[0x270F9ED20]();
}

uint64_t sub_2576A89F0()
{
  return MEMORY[0x270F9ED30]();
}

uint64_t sub_2576A8A00()
{
  return MEMORY[0x270F9ED38]();
}

uint64_t sub_2576A8A10()
{
  return MEMORY[0x270F9ED40]();
}

uint64_t sub_2576A8A20()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_2576A8A30()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2576A8A40()
{
  return MEMORY[0x270F9EDA8]();
}

uint64_t sub_2576A8A50()
{
  return MEMORY[0x270F9EDD8]();
}

uint64_t sub_2576A8A60()
{
  return MEMORY[0x270F9EDE8]();
}

uint64_t sub_2576A8A70()
{
  return MEMORY[0x270F9EDF0]();
}

uint64_t sub_2576A8A80()
{
  return MEMORY[0x270F9EDF8]();
}

uint64_t sub_2576A8A90()
{
  return MEMORY[0x270F9EE08]();
}

uint64_t sub_2576A8AA0()
{
  return MEMORY[0x270F9EE58]();
}

uint64_t sub_2576A8AB0()
{
  return MEMORY[0x270F9EEB0]();
}

uint64_t sub_2576A8AC0()
{
  return MEMORY[0x270F9EF00]();
}

uint64_t sub_2576A8AD0()
{
  return MEMORY[0x270F9EF08]();
}

uint64_t sub_2576A8AE0()
{
  return MEMORY[0x270F9EF10]();
}

uint64_t sub_2576A8AF0()
{
  return MEMORY[0x270F9EF18]();
}

uint64_t sub_2576A8B00()
{
  return MEMORY[0x270F9EF20]();
}

uint64_t sub_2576A8B10()
{
  return MEMORY[0x270F9EF50]();
}

uint64_t sub_2576A8B20()
{
  return MEMORY[0x270F9EF88]();
}

uint64_t sub_2576A8B30()
{
  return MEMORY[0x270F9EFB0]();
}

uint64_t sub_2576A8B40()
{
  return MEMORY[0x270F9EFC0]();
}

uint64_t sub_2576A8B50()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_2576A8B60()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_2576A8B70()
{
  return MEMORY[0x270F9EFF8]();
}

uint64_t sub_2576A8B80()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_2576A8B90()
{
  return MEMORY[0x270F9F010]();
}

uint64_t sub_2576A8BA0()
{
  return MEMORY[0x270F9F018]();
}

uint64_t sub_2576A8BB0()
{
  return MEMORY[0x270F9F038]();
}

uint64_t sub_2576A8BC0()
{
  return MEMORY[0x270F9F040]();
}

uint64_t sub_2576A8BD0()
{
  return MEMORY[0x270F9F048]();
}

uint64_t sub_2576A8BE0()
{
  return MEMORY[0x270F9F050]();
}

uint64_t sub_2576A8BF0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_2576A8C00()
{
  return MEMORY[0x270F9F088]();
}

uint64_t sub_2576A8C10()
{
  return MEMORY[0x270F9F090]();
}

uint64_t sub_2576A8C20()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_2576A8C30()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_2576A8C40()
{
  return MEMORY[0x270F9F0A8]();
}

uint64_t sub_2576A8C50()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_2576A8C60()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_2576A8C70()
{
  return MEMORY[0x270F9F0C8]();
}

uint64_t sub_2576A8C80()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_2576A8C90()
{
  return MEMORY[0x270F9F138]();
}

uint64_t sub_2576A8CA0()
{
  return MEMORY[0x270F9F148]();
}

uint64_t sub_2576A8CC0()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_2576A8CE0()
{
  return MEMORY[0x270F9F258]();
}

uint64_t sub_2576A8CF0()
{
  return MEMORY[0x270F9F288]();
}

uint64_t sub_2576A8D00()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_2576A8D10()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_2576A8D20()
{
  return MEMORY[0x270F9F2F0]();
}

uint64_t sub_2576A8D30()
{
  return MEMORY[0x270F9F300]();
}

uint64_t sub_2576A8D40()
{
  return MEMORY[0x270F9F308]();
}

uint64_t sub_2576A8D50()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_2576A8D60()
{
  return MEMORY[0x270F9F338]();
}

uint64_t sub_2576A8D70()
{
  return MEMORY[0x270F9F348]();
}

uint64_t sub_2576A8D80()
{
  return MEMORY[0x270F9F350]();
}

uint64_t sub_2576A8D90()
{
  return MEMORY[0x270F9F360]();
}

uint64_t sub_2576A8DA0()
{
  return MEMORY[0x270F9F378]();
}

uint64_t sub_2576A8DB0()
{
  return MEMORY[0x270F9F390]();
}

uint64_t sub_2576A8DC0()
{
  return MEMORY[0x270F9F398]();
}

uint64_t sub_2576A8DD0()
{
  return MEMORY[0x270F9F3C8]();
}

uint64_t sub_2576A8DE0()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_2576A8DF0()
{
  return MEMORY[0x270F9F3F8]();
}

uint64_t sub_2576A8E00()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_2576A8E10()
{
  return MEMORY[0x270F9F430]();
}

uint64_t sub_2576A8E20()
{
  return MEMORY[0x270F9F440]();
}

uint64_t sub_2576A8E30()
{
  return MEMORY[0x270F9F448]();
}

uint64_t sub_2576A8E40()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_2576A8E50()
{
  return MEMORY[0x270F9F488]();
}

uint64_t sub_2576A8E60()
{
  return MEMORY[0x270F9F490]();
}

uint64_t sub_2576A8E70()
{
  return MEMORY[0x270F9F4A8]();
}

uint64_t sub_2576A8E80()
{
  return MEMORY[0x270F9F4C0]();
}

uint64_t sub_2576A8E90()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_2576A8EA0()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2576A8EC0()
{
  return MEMORY[0x270F9F500]();
}

uint64_t sub_2576A8ED0()
{
  return MEMORY[0x270F9F728]();
}

uint64_t sub_2576A8EE0()
{
  return MEMORY[0x270F9F748]();
}

uint64_t sub_2576A8EF0()
{
  return MEMORY[0x270F9F750]();
}

uint64_t sub_2576A8F00()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_2576A8F10()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_2576A8F20()
{
  return MEMORY[0x270F9F788]();
}

uint64_t sub_2576A8F30()
{
  return MEMORY[0x270F9F790]();
}

uint64_t sub_2576A8F40()
{
  return MEMORY[0x270F9F7A8]();
}

uint64_t sub_2576A8F50()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_2576A8F60()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_2576A8F70()
{
  return MEMORY[0x270F9F818]();
}

uint64_t sub_2576A8F80()
{
  return MEMORY[0x270F9F8A8]();
}

uint64_t sub_2576A8F90()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_2576A8FA0()
{
  return MEMORY[0x270F9F920]();
}

uint64_t sub_2576A8FC0()
{
  return MEMORY[0x270F9FA40]();
}

uint64_t sub_2576A8FD0()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_2576A8FE0()
{
  return MEMORY[0x270F9FA98]();
}

uint64_t sub_2576A8FF0()
{
  return MEMORY[0x270F9FAA8]();
}

uint64_t sub_2576A9000()
{
  return MEMORY[0x270F9FAB8]();
}

uint64_t sub_2576A9010()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_2576A9020()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_2576A9030()
{
  return MEMORY[0x270EF2680]();
}

uint64_t sub_2576A9040()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2576A9050()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2576A9060()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2576A9070()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2576A9080()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_2576A9090()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2576A90A0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2576A90B0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_2576A90C0()
{
  return MEMORY[0x270F9FC70]();
}

uint64_t sub_2576A90D0()
{
  return MEMORY[0x270F9FC78]();
}

uint64_t sub_2576A90E0()
{
  return MEMORY[0x270F9FC80]();
}

uint64_t sub_2576A90F0()
{
  return MEMORY[0x270F9FC88]();
}

uint64_t sub_2576A9100()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2576A9110()
{
  return MEMORY[0x270F9FC98]();
}

uint64_t sub_2576A9120()
{
  return MEMORY[0x270F9FCA0]();
}

uint64_t sub_2576A9130()
{
  return MEMORY[0x270F9FCA8]();
}

uint64_t sub_2576A9140()
{
  return MEMORY[0x270F9FCB8]();
}

uint64_t sub_2576A9150()
{
  return MEMORY[0x270F9FCC8]();
}

uint64_t sub_2576A9160()
{
  return MEMORY[0x270F9FCD0]();
}

uint64_t sub_2576A9170()
{
  return MEMORY[0x270F9FCD8]();
}

uint64_t sub_2576A9180()
{
  return MEMORY[0x270F9FCE0]();
}

uint64_t sub_2576A9190()
{
  return MEMORY[0x270F9FCE8]();
}

uint64_t sub_2576A91A0()
{
  return MEMORY[0x270F9FCF0]();
}

uint64_t sub_2576A91B0()
{
  return MEMORY[0x270EF27A0]();
}

uint64_t sub_2576A91C0()
{
  return MEMORY[0x270F9FD38]();
}

uint64_t sub_2576A91D0()
{
  return MEMORY[0x270F9FD60]();
}

uint64_t sub_2576A91E0()
{
  return MEMORY[0x270F9FD68]();
}

uint64_t sub_2576A91F0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_2576A9200()
{
  return MEMORY[0x270F9FD78]();
}

uint64_t sub_2576A9210()
{
  return MEMORY[0x270F9FD88]();
}

uint64_t sub_2576A9220()
{
  return MEMORY[0x270F9FD90]();
}

uint64_t sub_2576A9230()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_2576A9240()
{
  return MEMORY[0x270F9FDA8]();
}

uint64_t sub_2576A9250()
{
  return MEMORY[0x270F9FDB0]();
}

uint64_t sub_2576A9260()
{
  return MEMORY[0x270F9FDB8]();
}

uint64_t sub_2576A9270()
{
  return MEMORY[0x270F9FDC0]();
}

uint64_t sub_2576A9280()
{
  return MEMORY[0x270F9FDC8]();
}

uint64_t sub_2576A9290()
{
  return MEMORY[0x270F9FDD0]();
}

uint64_t sub_2576A92A0()
{
  return MEMORY[0x270FA0078]();
}

uint64_t sub_2576A92D0()
{
  return MEMORY[0x270FA0128]();
}

int BNNSArithmeticFilterApplyBatch(void *filter, size_t batch_size, size_t number_of_inputs, const void **in, const size_t *in_stride, void *out, size_t out_stride)
{
  return MEMORY[0x270EDDFF8](filter, batch_size, number_of_inputs, in, in_stride, out, out_stride);
}

void *__cdecl BNNSCreateRandomGeneratorWithSeed(BNNSRandomGeneratorMethod method, uint64_t seed, const BNNSFilterParameters *filter_params)
{
  return (void *)MEMORY[0x270EDE018](*(void *)&method, seed, filter_params);
}

void BNNSDestroyRandomGenerator(void *generator)
{
}

int BNNSDirectApplyLSTMBatchTrainingCaching(const BNNSLayerParametersLSTM *layer_params, const BNNSFilterParameters *filter_params, void *training_cache_ptr, const size_t training_cache_capacity)
{
  return MEMORY[0x270EDE028](layer_params, filter_params, training_cache_ptr, training_cache_capacity);
}

int BNNSFilterApplyBatch(void *filter, size_t batch_size, const void *in, size_t in_stride, void *out, size_t out_stride)
{
  return MEMORY[0x270EDE040](filter, batch_size, in, in_stride, out, out_stride);
}

void *__cdecl BNNSFilterCreateLayerArithmetic(const BNNSLayerParametersArithmetic *layer_params, const BNNSFilterParameters *filter_params)
{
  return (void *)MEMORY[0x270EDE070](layer_params, filter_params);
}

int BNNSLossFilterApplyBackwardBatch(void *filter, size_t batch_size, const void *in, size_t in_stride, BNNSNDArrayDescriptor *in_delta, size_t in_delta_stride, const void *labels, size_t labels_stride, const void *weights, size_t weights_size, const BNNSNDArrayDescriptor *out_delta, size_t out_delta_stride)
{
  return MEMORY[0x270EDE1A0](filter, batch_size, in, in_stride, in_delta, in_delta_stride, labels, labels_stride);
}

int BNNSLossFilterApplyBatch(void *filter, size_t batch_size, const void *in, size_t in_stride, const void *labels, size_t labels_stride, const void *weights, size_t weights_size, void *out, BNNSNDArrayDescriptor *in_delta, size_t in_delta_stride)
{
  return MEMORY[0x270EDE1A8](filter, batch_size, in, in_stride, labels, labels_stride, weights, weights_size);
}

int BNNSNormalizationFilterApplyBackwardBatch(void *filter, size_t batch_size, BNNSNDArrayDescriptor *in_delta, size_t in_delta_stride, const void *out, size_t out_stride, BNNSNDArrayDescriptor *out_delta, size_t out_delta_stride, BNNSNDArrayDescriptor *beta_delta, BNNSNDArrayDescriptor *gamma_delta)
{
  return MEMORY[0x270EDE1B8](filter, batch_size, in_delta, in_delta_stride, out, out_stride, out_delta, out_delta_stride);
}

int BNNSNormalizationFilterApplyBatch(void *filter, size_t batch_size, const void *in, size_t in_stride, void *out, size_t out_stride, BOOL training)
{
  return MEMORY[0x270EDE1C0](filter, batch_size, in, in_stride, out, out_stride, training);
}

int BNNSRandomFillNormalFloat(void *generator, BNNSNDArrayDescriptor *desc, float mean, float stddev)
{
  return MEMORY[0x270EDE1C8](generator, desc, mean, stddev);
}

int BNNSRandomFillUniformFloat(void *generator, BNNSNDArrayDescriptor *desc, float a, float b)
{
  return MEMORY[0x270EDE1D0](generator, desc, a, b);
}

int BNNSRandomFillUniformInt(void *generator, BNNSNDArrayDescriptor *desc, int64_t a, int64_t b)
{
  return MEMORY[0x270EDE1D8](generator, desc, a, b);
}

int BNNSScatter(size_t axis, BNNSReduceFunction op, const BNNSNDArrayDescriptor *input, const BNNSNDArrayDescriptor *indices, BNNSNDArrayDescriptor *output, const BNNSFilterParameters *filter_params)
{
  return MEMORY[0x270EDE1E0](axis, *(void *)&op, input, indices, output, filter_params);
}

int BNNSScatterND(BNNSReduceFunction op, const BNNSNDArrayDescriptor *input, const BNNSNDArrayDescriptor *indices, BNNSNDArrayDescriptor *output, const BNNSFilterParameters *filter_params)
{
  return MEMORY[0x270EDE1E8](*(void *)&op, input, indices, output, filter_params);
}

size_t IOSurfaceAlignProperty(CFStringRef property, size_t value)
{
  return MEMORY[0x270EF4C00](property, value);
}

IOSurfaceRef IOSurfaceCreate(CFDictionaryRef properties)
{
  return (IOSurfaceRef)MEMORY[0x270EF4C28](properties);
}

void IOSurfaceDecrementUseCount(IOSurfaceRef buffer)
{
}

size_t IOSurfaceGetAllocSize(IOSurfaceRef buffer)
{
  return MEMORY[0x270EF4C50](buffer);
}

void *__cdecl IOSurfaceGetBaseAddress(IOSurfaceRef buffer)
{
  return (void *)MEMORY[0x270EF4C58](buffer);
}

size_t IOSurfaceGetPlaneCount(IOSurfaceRef buffer)
{
  return MEMORY[0x270EF4D88](buffer);
}

size_t IOSurfaceGetPropertyMaximum(CFStringRef property)
{
  return MEMORY[0x270EF4D98](property);
}

void IOSurfaceIncrementUseCount(IOSurfaceRef buffer)
{
}

kern_return_t IOSurfaceLock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t *seed)
{
  return MEMORY[0x270EF4E18](buffer, *(void *)&options, seed);
}

kern_return_t IOSurfaceSetPurgeable(IOSurfaceRef buffer, uint32_t newState, uint32_t *oldState)
{
  return MEMORY[0x270EF4E68](buffer, *(void *)&newState, oldState);
}

kern_return_t IOSurfaceUnlock(IOSurfaceRef buffer, IOSurfaceLockOptions options, uint32_t *seed)
{
  return MEMORY[0x270EF4E88](buffer, *(void *)&options, seed);
}

BOOL MPSSupportsMTLDevice(id device)
{
  return MEMORY[0x270EF6440](device);
}

id MTLCreateSystemDefaultDevice(void)
{
  return (id)MEMORY[0x270EF5E20]();
}

NSUInteger NSRoundUpToMultipleOfPageSize(NSUInteger bytes)
{
  return MEMORY[0x270EF2BD0](bytes);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x270EF2C38](aSelector);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t espresso_plan_add_cpp_net_from_mil_program_and_reload()
{
  return MEMORY[0x270F277C0]();
}

uint64_t MIL::IRArgument::Make()
{
  return MEMORY[0x270F47C78]();
}

{
  return MEMORY[0x270F47C80]();
}

uint64_t MIL::IRFunction::Make()
{
  return MEMORY[0x270F47C88]();
}

uint64_t MIL::IROperation::Make()
{
  return MEMORY[0x270F47CE8]();
}

uint64_t MIL::ParserOptions::Make(MIL::ParserOptions *this)
{
  return MEMORY[0x270F47D10](this);
}

uint64_t MIL::UnknownLocation::Make(MIL::UnknownLocation *this)
{
  return MEMORY[0x270F47D20](this);
}

uint64_t MIL::IRNamedValueType::Make()
{
  return MEMORY[0x270F47D28]();
}

void MIL::IRNamedValueType::~IRNamedValueType(MIL::IRNamedValueType *this)
{
}

uint64_t MIL::TextFileLocation::Make()
{
  return MEMORY[0x270F47D38]();
}

void MIL::ValidationResult::~ValidationResult(MIL::ValidationResult *this)
{
}

uint64_t MIL::IRTensorValueType::MakeScalar()
{
  return MEMORY[0x270F47DA8]();
}

uint64_t MIL::IRTensorValueType::MakeWithShape()
{
  return MEMORY[0x270F47DB0]();
}

uint64_t MIL::IRDataTypeToString()
{
  return MEMORY[0x270F47DC8]();
}

uint64_t MIL::IRProgramValidator::Validate(MIL::IRProgramValidator *this, const IRProgram *a2)
{
  return MEMORY[0x270F47DD0](this, a2);
}

uint64_t MIL::IRConstantDimension::Make(MIL::IRConstantDimension *this, MILContext *a2)
{
  return MEMORY[0x270F47DF8](this, a2);
}

uint64_t MIL::Text::SerializeToFile()
{
  return MEMORY[0x270F47E50]();
}

uint64_t MIL::Text::SerializerOptions::Make(MIL::Text::SerializerOptions *this)
{
  return MEMORY[0x270F47E58](this);
}

uint64_t MIL::Text::ParseProgramFromFile()
{
  return MEMORY[0x270F47E68]();
}

uint64_t MIL::Proto::SerializeProgram()
{
  return MEMORY[0x270F47E70]();
}

uint64_t MIL::Opsets::Common::CreateMILContext(MIL::Opsets::Common *this)
{
  return MEMORY[0x270F47E78](this);
}

uint64_t MIL::IRBlock::Make()
{
  return MEMORY[0x270F47F80]();
}

uint64_t MIL::IRProgram::Make()
{
  return MEMORY[0x270F47FB8]();
}

uint64_t Espresso::get_internal_context(Espresso *this, void *a2)
{
  return MEMORY[0x270F279E0](this, a2);
}

uint64_t Espresso::get_internal_network()
{
  return MEMORY[0x270F279E8]();
}

uint64_t MIL::IRArgument::GetName(MIL::IRArgument *this)
{
  return MEMORY[0x270F47FF0](this);
}

uint64_t MIL::IRArgument::GetValue(MIL::IRArgument *this)
{
  return MEMORY[0x270F47FF8](this);
}

uint64_t MIL::IRDimension::AsConstant(MIL::IRDimension *this)
{
  return MEMORY[0x270F48030](this);
}

uint64_t MIL::IRListValue::GetValues(MIL::IRListValue *this)
{
  return MEMORY[0x270F48040](this);
}

uint64_t MIL::IRTensorValue::GetDataView<signed char>()
{
  return MEMORY[0x270F48150]();
}

uint64_t MIL::IRTensorValue::GetDataView<BOOL>()
{
  return MEMORY[0x270F48160]();
}

uint64_t MIL::IRTensorValue::GetDataView<double>()
{
  return MEMORY[0x270F48170]();
}

uint64_t MIL::IRTensorValue::GetDataView<float>()
{
  return MEMORY[0x270F48178]();
}

uint64_t MIL::IRTensorValue::GetDataView<unsigned char>()
{
  return MEMORY[0x270F48188]();
}

uint64_t MIL::IRTensorValue::GetDataView<int>()
{
  return MEMORY[0x270F48198]();
}

uint64_t MIL::IRTensorValue::GetDataView<unsigned int>()
{
  return MEMORY[0x270F481A8]();
}

uint64_t MIL::IRTensorValue::GetDataView<short>()
{
  return MEMORY[0x270F481B8]();
}

uint64_t MIL::IRTensorValue::GetDataView<unsigned short>()
{
  return MEMORY[0x270F481D0]();
}

uint64_t MIL::IRTensorValue::GetDataView<long long>()
{
  return MEMORY[0x270F481D8]();
}

uint64_t MIL::IRTensorValue::GetDataView<unsigned long long>()
{
  return MEMORY[0x270F481F0]();
}

uint64_t MIL::IRNamedValueType::GetName(MIL::IRNamedValueType *this)
{
  return MEMORY[0x270F482A8](this);
}

uint64_t MIL::IRNamedValueType::GetType(MIL::IRNamedValueType *this)
{
  return MEMORY[0x270F482B0](this);
}

uint64_t MIL::ValidationResult::IsGood(MIL::ValidationResult *this)
{
  return MEMORY[0x270F482D0](this);
}

uint64_t MIL::IRTensorValueType::MakeBoolValue()
{
  return MEMORY[0x270F482F8]();
}

uint64_t MIL::IRTensorValueType::MakeInt8Value()
{
  return MEMORY[0x270F48300]();
}

uint64_t MIL::IRTensorValueType::MakeInt16Value()
{
  return MEMORY[0x270F48308]();
}

uint64_t MIL::IRTensorValueType::MakeInt32Value()
{
  return MEMORY[0x270F48310]();
}

uint64_t MIL::IRTensorValueType::MakeInt64Value()
{
  return MEMORY[0x270F48318]();
}

uint64_t MIL::IRTensorValueType::MakeUInt8Value()
{
  return MEMORY[0x270F48320]();
}

uint64_t MIL::IRTensorValueType::MakeStringValue()
{
  return MEMORY[0x270F48328]();
}

uint64_t MIL::IRTensorValueType::MakeUInt16Value()
{
  return MEMORY[0x270F48330]();
}

uint64_t MIL::IRTensorValueType::MakeUInt32Value()
{
  return MEMORY[0x270F48338]();
}

uint64_t MIL::IRTensorValueType::MakeUInt64Value()
{
  return MEMORY[0x270F48340]();
}

uint64_t MIL::IRTensorValueType::MakeUInt64Value(MIL::IRTensorValueType *this)
{
  return MEMORY[0x270F48348](this);
}

uint64_t MIL::IRTensorValueType::MakeFloat16Value()
{
  return MEMORY[0x270F48350]();
}

uint64_t MIL::IRTensorValueType::MakeFloat32Value()
{
  return MEMORY[0x270F48358]();
}

uint64_t MIL::IRTensorValueType::MakeFloat64Value()
{
  return MEMORY[0x270F48360]();
}

uint64_t MIL::IRTensorValueType::MakeValueFromFileProperties()
{
  return MEMORY[0x270F48370]();
}

uint64_t MIL::IROpset::TryGetOperatorSharedPtr()
{
  return MEMORY[0x270F48598]();
}

uint64_t MIL::IRValue::GetScalar<std::string>()
{
  return MEMORY[0x270F48668]();
}

uint64_t MIL::IRValue::GetScalar<signed char>()
{
  return MEMORY[0x270F48678]();
}

uint64_t MIL::IRValue::GetScalar<BOOL>()
{
  return MEMORY[0x270F48688]();
}

uint64_t MIL::IRValue::GetScalar<double>()
{
  return MEMORY[0x270F48690]();
}

uint64_t MIL::IRValue::GetScalar<float>()
{
  return MEMORY[0x270F48698]();
}

uint64_t MIL::IRValue::GetScalar<unsigned char>()
{
  return MEMORY[0x270F486A8]();
}

uint64_t MIL::IRValue::GetScalar<int>()
{
  return MEMORY[0x270F486B8]();
}

uint64_t MIL::IRValue::GetScalar<unsigned int>()
{
  return MEMORY[0x270F486C8]();
}

uint64_t MIL::IRValue::GetScalar<short>()
{
  return MEMORY[0x270F486D0]();
}

uint64_t MIL::IRValue::GetScalar<unsigned short>()
{
  return MEMORY[0x270F486D8]();
}

uint64_t MIL::IRValue::GetScalar<long long>()
{
  return MEMORY[0x270F486E0]();
}

uint64_t MIL::IRValue::GetScalar<unsigned long long>()
{
  return MEMORY[0x270F486E8]();
}

uint64_t MIL::IRObject::GetAttributes(MIL::IRObject *this)
{
  return MEMORY[0x270F48718](this);
}

uint64_t MIL::MILResult::GetMessage(MIL::MILResult *this)
{
  return MEMORY[0x270F48760](this);
}

uint64_t std::stringbuf::str()
{
  return MEMORY[0x270F98268]();
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x270F98330](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x270F98428](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x270F98458](__n);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return (std::string *)MEMORY[0x270F984B8](this, __s);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x270F98560](this, __str);
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x270F98770]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x270F988A8]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x270F988B0]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
}

std::__shared_weak_count *__cdecl std::__shared_weak_count::lock(std::__shared_weak_count *this)
{
  return (std::__shared_weak_count *)MEMORY[0x270F989E8](this);
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x270F98DE8]();
}

void std::terminate(void)
{
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x270F98EC0](thrown_size);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x270F98ED8](a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

{
  return MEMORY[0x270F9A3C0]();
}

{
  return MEMORY[0x270F9A3C8]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x270FA0150]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void arc4random_buf(void *__buf, size_t __nbytes)
{
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x270ED94B8](value);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

uint64_t espresso_buffer_pack_tensor_shape()
{
  return MEMORY[0x270F27EC8]();
}

uint64_t espresso_context_set_int_option()
{
  return MEMORY[0x270F27EF0]();
}

uint64_t espresso_create_context()
{
  return MEMORY[0x270F27F08]();
}

uint64_t espresso_create_plan()
{
  return MEMORY[0x270F27F20]();
}

uint64_t espresso_device_id_for_metal_device()
{
  return MEMORY[0x270F27F30]();
}

uint64_t espresso_network_bind_buffer()
{
  return MEMORY[0x270F27F78]();
}

uint64_t espresso_network_query_blob_shape()
{
  return MEMORY[0x270F28038]();
}

uint64_t espresso_plan_add_network()
{
  return MEMORY[0x270F28068]();
}

uint64_t espresso_plan_build()
{
  return MEMORY[0x270F28070]();
}

uint64_t espresso_plan_destroy()
{
  return MEMORY[0x270F28090]();
}

uint64_t espresso_plan_execute_sync()
{
  return MEMORY[0x270F280A0]();
}

uint64_t espresso_plan_get_phase()
{
  return MEMORY[0x270F280B0]();
}

void free(void *a1)
{
}

int getpagesize(void)
{
  return MEMORY[0x270ED9CC8]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x270EDA498](__b, *(void *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

int munmap(void *a1, size_t a2)
{
  return MEMORY[0x270EDA5F8](a1, a2);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

{
  MEMORY[0x270F9A570](context);
}

{
  return (void *)MEMORY[0x270F9A588]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x270F9AA40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

size_t os_proc_available_memory(void)
{
  return MEMORY[0x270EDAA40]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

float powf(float a1, float a2)
{
  MEMORY[0x270EDAD00](a1, a2);
  return result;
}

void *__cdecl pthread_getspecific(pthread_key_t a1)
{
  return (void *)MEMORY[0x270EDAEF0](a1);
}

int pthread_key_create(pthread_key_t *a1, void (__cdecl *a2)(void *))
{
  return MEMORY[0x270EDAF18](a1, a2);
}

int pthread_setspecific(pthread_key_t a1, const void *a2)
{
  return MEMORY[0x270EDB048](a1, a2);
}

uint64_t sgetrf_NEWLAPACK()
{
  return MEMORY[0x270EDE7C8]();
}

uint64_t sgetri_NEWLAPACK()
{
  return MEMORY[0x270EDE7D8]();
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x270EDB5B0](__s1, __s2);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x270EDB610](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x270FA0240]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return MEMORY[0x270FA0270]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x270FA0318]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x270FA0330]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x270FA0348]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x270FA0390]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetadataKind()
{
  return MEMORY[0x270FA03C0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x270FA0490]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x270FA04B0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_modifyAtWritableKeyPath()
{
  return MEMORY[0x270FA04E8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x270FA0500]();
}

uint64_t swift_reflectionMirror_recursiveChildMetadata()
{
  return MEMORY[0x270FA0508]();
}

uint64_t swift_reflectionMirror_recursiveChildOffset()
{
  return MEMORY[0x270FA0510]();
}

uint64_t swift_reflectionMirror_recursiveCount()
{
  return MEMORY[0x270FA0518]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x270FA0540]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x270FA0548]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x270FA0588]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return MEMORY[0x270FA05B8]();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return MEMORY[0x270FA05C0]();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return MEMORY[0x270FA05C8]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x270FA05D8]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x270FA05E0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x270FA0600]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x270FA0608]();
}

uint64_t swift_unownedRelease()
{
  return MEMORY[0x270FA0610]();
}

uint64_t swift_unownedRetain()
{
  return MEMORY[0x270FA0618]();
}

uint64_t swift_unownedRetainStrong()
{
  return MEMORY[0x270FA0620]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x270FA0630]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x270FA0638]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x270FA0640]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x270FA0660]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x270FA0668]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x270EDB7D8](a1, a2, a3, a4, a5);
}

time_t time(time_t *a1)
{
  return MEMORY[0x270EDB930](a1);
}

void vDSP_vdpsp(const double *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt16(const __int16 *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt16D(const __int16 *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt32(const int *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt32D(const int *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt8(const char *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vflt8D(const char *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu16(const unsigned __int16 *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu16D(const unsigned __int16 *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu32(const unsigned int *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu32D(const unsigned int *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu8(const unsigned __int8 *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vfltu8D(const unsigned __int8 *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

void vDSP_vspdp(const float *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x270EDBA90](*(void *)&target_task, address, size);
}