void sub_257457778(_Unwind_Exception *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  MEMORY[0x25A2BA080](v3, 0x1012C40EC159624);

  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = 0;
  *(void *)(result + 48) = v2;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 48);
  v1 = (void *)(a1 + 48);
  uint64_t v2 = v3;
  void *v1 = 0;
  if (v3) {
    std::default_delete<std::string>::operator()[abi:ne180100]((uint64_t)v1, v2);
  }
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_26542B9D0, MEMORY[0x263F8C060]);
}

void sub_257457954(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x263F8C388] + 16);
  return result;
}

void std::default_delete<std::string>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    JUMPOUT(0x25A2BA080);
  }
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    std::string::size_type v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    std::string::size_type v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

void sub_257457C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    -[SNNMILContext init]();
  }

  _Unwind_Resume(a1);
}

void *std::shared_ptr<MIL::MILContext>::operator=[abi:ne180100]<MIL::MILContext,std::default_delete<MIL::MILContext>,void>(void *a1, uint64_t *a2)
{
  std::shared_ptr<MIL::MILContext>::shared_ptr[abi:ne180100]<MIL::MILContext,std::default_delete<MIL::MILContext>,void>((uint64_t *)&v6, a2);
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  long long v4 = v6;
  *(void *)&long long v6 = *a1;
  *((void *)&v6 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void sub_257457D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257457EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_257458410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27)
{
  if (__p) {
    operator delete(__p);
  }
  if (a26) {
    operator delete(a26);
  }

  _Unwind_Resume(a1);
}

void sub_2574589EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a32);
  if (__p)
  {
    a48 = (uint64_t)__p;
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *std::shared_ptr<MIL::IRValue const>::operator=[abi:ne180100]<MIL::IRTensorValue const,std::default_delete<MIL::IRTensorValue const>,void>(void *a1, uint64_t *a2)
{
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRTensorValue const,std::default_delete<MIL::IRTensorValue const>,void>((uint64_t *)&v6, a2);
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  long long v4 = v6;
  *(void *)&long long v6 = *a1;
  *((void *)&v6 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void sub_257458DAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_257458FB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_257459C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_257459FA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A110(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A200(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25745A390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A44C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A57C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A764(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A95C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745A9D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745AA1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745AA94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745AB04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745AC38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745AD9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_25745AF30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B084(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B16C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_25745B2B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B350(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B438(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B4CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B78C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745B900(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745BA90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745BBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745BC7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745BD88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745BECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745C0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_25745C20C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745C70C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  _Unwind_Resume(a1);
}

void sub_25745C8C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745CCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  _Unwind_Resume(a1);
}

void sub_25745CF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_25745D024(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::shared_ptr<MIL::IRProgram>::operator=[abi:ne180100]<MIL::IRProgram,std::default_delete<MIL::IRProgram>,void>(void *a1, uint64_t *a2)
{
  std::shared_ptr<MIL::IRProgram>::shared_ptr[abi:ne180100]<MIL::IRProgram,std::default_delete<MIL::IRProgram>,void>((uint64_t *)&v6, a2);
  uint64_t v3 = (std::__shared_weak_count *)a1[1];
  long long v4 = v6;
  *(void *)&long long v6 = *a1;
  *((void *)&v6 + 1) = v3;
  *(_OWORD *)a1 = v4;
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  return a1;
}

void sub_25745D0F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    -[SNNMILProgram initWithProgram:]();
  }
  _Unwind_Resume(exception_object);
}

void sub_25745D478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

void sub_25745D5D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745D7BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, std::__shared_weak_count *a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  if (a22 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_25745D91C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a15) {
    (*(void (**)(uint64_t))(*(void *)a15 + 8))(a15);
  }

  _Unwind_Resume(a1);
}

void sub_25745DB94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a17) {
    -[SNNMILContext init]();
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::ostringstream::basic_ostringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C340] + 64;
  *(void *)(a1 + 112) = MEMORY[0x263F8C340] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x263F8C2C8] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x263F8C2C8] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  size_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x263F8C340] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x263F8C318] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_25745DE1C(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x25A2BA050](v1);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x263F8C2C8];
  uint64_t v3 = *MEMORY[0x263F8C2C8];
  *(void *)a1 = *MEMORY[0x263F8C2C8];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x263F8C318] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x25A2BA050](a1 + 112);
  return a1;
}

void sub_25745DFE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x263F8C208], MEMORY[0x263F8C090]);
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

void std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]()
{
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a2);
}

void *std::vector<BOOL>::__init_with_size[abi:ne180100]<BOOL *,BOOL *>(void *result, unsigned char *a2, unsigned char *a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v7 = result;
    std::vector<BOOL>::__vallocate[abi:ne180100](result, a4);
    return std::vector<BOOL>::__construct_at_end<BOOL *,BOOL *>(v7, a2, a3, a4);
  }
  return result;
}

void sub_25745E1B0(_Unwind_Exception *exception_object)
{
  if (*v1) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<BOOL>::__vallocate[abi:ne180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  }
  result = std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>((uint64_t)(a1 + 2), ((unint64_t)(a2 - 1) >> 6) + 1);
  *a1 = result;
  a1[1] = 0;
  a1[2] = v4;
  return result;
}

void *std::vector<BOOL>::__construct_at_end<BOOL *,BOOL *>(void *result, unsigned char *a2, unsigned char *a3, uint64_t a4)
{
  unint64_t v4 = result[1];
  unint64_t v5 = v4 + a4;
  result[1] = v4 + a4;
  if (!v4 || ((v5 - 1) ^ (v4 - 1)) >= 0x40)
  {
    if (v5 >= 0x41) {
      unint64_t v6 = (v5 - 1) >> 6;
    }
    else {
      unint64_t v6 = 0;
    }
    *(void *)(*result + 8 * v6) = 0;
  }
  if (a2 != a3)
  {
    int v7 = v4 & 0x3F;
    uint64_t v8 = (uint64_t *)(*result + 8 * (v4 >> 6));
    do
    {
      uint64_t v9 = 1 << v7;
      if (*a2) {
        uint64_t v10 = *v8 | v9;
      }
      else {
        uint64_t v10 = *v8 & ~v9;
      }
      uint64_t *v8 = v10;
      ++a2;
      v8 += v7 == 63;
      if (v7 == 63) {
        int v7 = 0;
      }
      else {
        ++v7;
      }
    }
    while (a2 != a3);
  }
  return result;
}

void *std::vector<signed char>::__init_with_size[abi:ne180100]<signed char *,signed char *>(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    unint64_t v6 = result;
    result = std::vector<signed char>::__vallocate[abi:ne180100](result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E30C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<signed char>::__vallocate[abi:ne180100](void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

void *std::vector<short>::__init_with_size[abi:ne180100]<short *,short *>(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E3CC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<short>::__vallocate[abi:ne180100](void *a1, uint64_t a2)
{
  if (a2 < 0) {
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<short>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<short>>(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(2 * a2);
}

void *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E4BC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<int>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(4 * a2);
}

void *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E5B4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<long long>::__vallocate[abi:ne180100](void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
  }
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<MIL::IRDimension const*>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    unint64_t v6 = result;
    result = std::vector<signed char>::__vallocate[abi:ne180100](result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E674(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E6F0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E76C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<unsigned long long>::__init_with_size[abi:ne180100]<unsigned long long *,unsigned long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E7E8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<MIL::Fp16>::__init_with_size[abi:ne180100]<MIL::Fp16*,MIL::Fp16*>(void *result, const void *a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<short>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E864(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<float>::__init_with_size[abi:ne180100]<float *,float *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E8E0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<double>::__init_with_size[abi:ne180100]<double *,double *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    result = std::vector<long long>::__vallocate[abi:ne180100](result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_25745E95C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__deallocate_node(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__deallocate_node(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  size_t v8 = (void *)(a1 + 24);
  unint64_t v9 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (i = *v14; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  v17 = operator new(0x38uLL);
  v29[0] = v17;
  v29[1] = a1 + 16;
  void *v17 = 0;
  v17[1] = v10;
  v18 = *a4;
  long long v19 = **a4;
  v17[4] = *((void *)*a4 + 2);
  *((_OWORD *)v17 + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)v18 = 0;
  v17[5] = 0;
  v17[6] = 0;
  char v30 = 1;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  v26 = *(void **)(*(void *)a1 + 8 * v4);
  if (v26)
  {
    *(void *)v29[0] = *v26;
    void *v26 = v29[0];
  }
  else
  {
    *(void *)v29[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v29[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v29[0])
    {
      unint64_t v27 = *(void *)(*(void *)v29[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v27 >= v11) {
          v27 %= v11;
        }
      }
      else
      {
        v27 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v27) = v29[0];
    }
  }
  i = (unsigned __int8 *)v29[0];
  v29[0] = 0;
  ++*v8;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v29, 0);
  return i;
}

void sub_25745ECD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100]((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::operator()[abi:ne180100](uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      BOOL v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](a2, a3);
  }
  else
  {
    return std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](a2, a3);
  }
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_0_to_16[abi:ne180100](_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_17_to_32[abi:ne180100](void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t std::__murmur2_or_cityhash<unsigned long,64ul>::__hash_len_33_to_64[abi:ne180100](void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t std::equal_to<std::string>::operator()[abi:ne180100](uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__do_rehash<true>(a1, prime);
    }
  }
}

void std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__do_rehash<true>(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      std::__throw_bad_array_new_length[abi:ne180100]();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      int v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            *uint64_t v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            int v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          int v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    int v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>,0>((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

uint64_t *std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRTensorValue const,std::default_delete<MIL::IRTensorValue const>,void>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  char *result = *a2;
  if (v2) {
    operator new();
  }
  result[1] = 0;
  *a2 = 0;
  return result;
}

void std::__shared_ptr_pointer<MIL::IRTensorValue const *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IRTensorValue const *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRTensorValue const *>::__get_deleter(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

uint64_t std::unordered_map<std::string,std::shared_ptr<MIL::IRValue const>>::unordered_map(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (i = *(unsigned __int8 **)(a2 + 16); i; i = *(unsigned __int8 **)i)
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, i + 16, (long long *)i + 1);
  return a1;
}

void sub_25745F6C8(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (i = *v13; i; i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  BOOL v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v25, 0);
  return i;
}

void sub_25745F94C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

std::string *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]((std::string *)(v8 + 16), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_25745F9C4(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

std::string *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100](std::string *this, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    this->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v4;
  }
  std::string::size_type v5 = *((void *)a2 + 4);
  this[1].__r_.__value_.__r.__words[0] = *((void *)a2 + 3);
  this[1].__r_.__value_.__l.__size_ = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return this;
}

uint64_t *std::shared_ptr<MIL::IRProgram>::shared_ptr[abi:ne180100]<MIL::IRProgram,std::default_delete<MIL::IRProgram>,void>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::string *result = *a2;
  if (v2) {
    operator new();
  }
  result[1] = 0;
  *a2 = 0;
  return result;
}

void std::__shared_ptr_pointer<MIL::IRProgram  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IRProgram  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRProgram  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t *std::shared_ptr<MIL::MILContext>::shared_ptr[abi:ne180100]<MIL::MILContext,std::default_delete<MIL::MILContext>,void>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  std::string *result = *a2;
  if (v2) {
    operator new();
  }
  result[1] = 0;
  *a2 = 0;
  return result;
}

void std::__shared_ptr_pointer<MIL::MILContext  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::MILContext  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

void sub_25745FD98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25745FE14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_2574601D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  if (a25) {
    -[SNNMILFunctionBuilder build]();
  }
  _Unwind_Resume(exception_object);
}

void sub_25746065C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, void *a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32)
{
  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_2574607AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574609F0(_Unwind_Exception *a1, void *__p, uint64_t a3, int a4, __int16 a5, char a6, char a7, uint64_t a8, void *a9, void *__pa, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__split_buffer<std::string> *a17)
{
  _Unwind_Resume(a1);
}

void sub_257460B90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574611B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  if (a41 < 0) {
    operator delete(__p);
  }
  uint64_t v49 = *(void *)(v47 - 200);
  *(void *)(v47 - 200) = 0;
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8))(v49);
  }
  v50 = *(std::__shared_weak_count **)(v47 - 184);
  if (v50) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v50);
  }

  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::~pair(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_257461588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_25746170C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574617E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461B14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461CD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461E3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257461F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574620AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574621CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257462EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,std::__shared_weak_count *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a32);
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a42);
  a42 = (uint64_t)&a59;
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100]((void ***)&a42);

  std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy((uint64_t)&STACK[0x218], (void *)STACK[0x220]);
  _Unwind_Resume(a1);
}

void sub_2574633AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_2574636AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }

  if (__p) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_2574638E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a17) {
    (*(void (**)(void *))(*(void *)a17 + 8))(a17);
  }

  _Unwind_Resume(a1);
}

void sub_257463AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  _Unwind_Resume(a1);
}

void sub_257463CA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257463D64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257464130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,std::__shared_weak_count *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (__p) {
    (*(void (**)(void *))(*(void *)__p + 8))(__p);
  }
  if (a25) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a25);
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table((uint64_t)&a36);
  _Unwind_Resume(a1);
}

void sub_257464458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<char const(&)[4],std::unique_ptr<MIL::IRValue const>,0>(void *a1, char *a2, uint64_t *a3)
{
  std::string::size_type v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(v5 + 3, a3);
  return a1;
}

void sub_257464554(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<char const(&)[5],std::unique_ptr<MIL::IRValue const>,0>(void *a1, char *a2, uint64_t *a3)
{
  std::string::size_type v5 = std::string::basic_string[abi:ne180100]<0>(a1, a2);
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(v5 + 3, a3);
  return a1;
}

void sub_2574645A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::vector<std::string>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::string>::__clear[abi:ne180100]((uint64_t *)v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::string>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void std::__shared_ptr_pointer<MIL::Location  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::Location  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::Location  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

void std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__clear[abi:ne180100]((uint64_t *)v2);
    unint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    long long v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  a1[1] = v2;
}

void std::__shared_ptr_pointer<MIL::IRFunction  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IRFunction  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRFunction  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

_OWORD *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<MIL::IRTensorValueType const*&>>(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4, void **a5)
{
  unint64_t v8 = (void **)std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>((uint64_t)a1, &v15, a2);
  unint64_t v9 = *v8;
  if (!*v8)
  {
    unint64_t v10 = (uint64_t **)v8;
    unint64_t v9 = operator new(0x40uLL);
    uint8x8_t v11 = *a4;
    unint64_t v12 = *a5;
    uint64_t v13 = *((void *)*a4 + 2);
    v9[2] = **a4;
    *((void *)v9 + 6) = v13;
    v11[1] = 0;
    v11[2] = 0;
    void *v11 = 0;
    *((void *)v9 + 7) = *v12;
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(a1, v15, v10, (uint64_t *)v9);
  }
  return v9;
}

void *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>(uint64_t a1, void *a2, const void **a3)
{
  std::string::size_type v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        unint64_t v8 = (void *)v4;
        unint64_t v9 = (const void **)(v4 + 32);
        if (!std::less<std::string>::operator()[abi:ne180100](v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        std::string::size_type v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, v9, a3)) {
        break;
      }
      std::string::size_type v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    unint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t *std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  std::string::size_type v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

BOOL std::less<std::string>::operator()[abi:ne180100](uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    unint64_t v8 = a3;
  }
  else {
    unint64_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      int v3 = (uint64_t *)v2[2];
      int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), size_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            size_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            size_t v9 = (uint64_t **)v2[1];
            int v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              int v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *size_t v9 = v2;
            v2[2] = (uint64_t)v9;
            int v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          *int v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          *uint64_t v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            int v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          int v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        *uint64_t v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::vector<std::string>::__swap_out_circular_buffer(std::vector<std::string> *this, std::__split_buffer<std::string> *__v)
{
  std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>((uint64_t)&this->__end_cap_, (uint64_t)this->__end_, (uint64_t)this->__end_, (uint64_t)this->__begin_, (uint64_t)this->__begin_, (uint64_t)__v->__begin_, (uint64_t)__v->__begin_);
  __v->__begin_ = v4;
  begin = this->__begin_;
  this->__begin_ = v4;
  __v->__begin_ = begin;
  end = this->__end_;
  this->__end_ = __v->__end_;
  __v->__end_ = end;
  value = this->__end_cap_.__value_;
  this->__end_cap_.__value_ = __v->__end_cap_.__value_;
  __v->__end_cap_.__value_ = value;
  __v->__first_ = __v->__begin_;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::string>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(24 * a2);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::string>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>,std::reverse_iterator<std::string*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return a6;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::string>,std::reverse_iterator<std::string*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

void std::__split_buffer<std::string>::~__split_buffer(std::__split_buffer<std::string> *this)
{
  if (this->__first_) {
    operator delete(this->__first_);
  }
}

void std::__split_buffer<std::string>::__destruct_at_end[abi:ne180100](uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      size_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        size_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(uint64_t a1, void *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(a1, *a2);
    std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::destroy(a1, a2[1]);
    std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__destroy_vector::operator()[abi:ne180100](&v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

MIL::IRNamedValueType *std::unique_ptr<MIL::IRNamedValueType>::reset[abi:ne180100](MIL::IRNamedValueType **a1, MIL::IRNamedValueType *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    MIL::IRNamedValueType::~IRNamedValueType(result);
    JUMPOUT(0x25A2BA080);
  }
  return result;
}

void std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

MIL::IRNamedValueType *std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(MIL::IRNamedValueType **)(a1 + 24);
  if (result)
  {
    MIL::IRNamedValueType::~IRNamedValueType(result);
    JUMPOUT(0x25A2BA080);
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRNamedValueType  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a2);
}

void *std::__uninitialized_allocator_copy_impl[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::shared_ptr<MIL::IRNamedValueType> const*,std::shared_ptr<MIL::IRNamedValueType> const*,std::shared_ptr<MIL::IRNamedValueType>*>(uint64_t a1, void *a2, void *a3, void *a4)
{
  int v4 = a4;
  long long v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *int v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    long long v10 = v4;
  }
  char v8 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::shared_ptr<MIL::IRNamedValueType>*>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v7);
  return v4;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::shared_ptr<MIL::IRNamedValueType>*>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::shared_ptr<MIL::IRNamedValueType>*>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::shared_ptr<MIL::IRNamedValueType>*>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    int v3 = *(std::__shared_weak_count **)(v1 - 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    v1 -= 16;
  }
}

uint64_t *std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  MIL::IRNamedValueType *result = *a2;
  if (v2) {
    operator new();
  }
  result[1] = 0;
  *a2 = 0;
  return result;
}

void std::__shared_ptr_pointer<MIL::IRValue const *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IRValue const *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRValue const *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t std::unordered_map<std::string,std::shared_ptr<MIL::IRValue const>>::unordered_map(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 40 * a3;
    do
    {
      std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, a2, (long long *)a2);
      a2 += 40;
      v5 -= 40;
    }
    while (v5);
  }
  return a1;
}

void sub_25746531C(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t std::vector<std::shared_ptr<MIL::IROperation>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>::operator()[abi:ne180100](uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    int v3 = *(std::__shared_weak_count **)(v1 + 8);
    if (v3) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v3);
    }
    v1 += 16;
  }
}

void **std::__split_buffer<std::shared_ptr<MIL::IROperation>>::~__split_buffer(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void std::__split_buffer<std::shared_ptr<MIL::IROperation>>::clear[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v1 = *(void *)(a1 + 16);
  while (v1 != v2)
  {
    *(void *)(a1 + 16) = v1 - 16;
    int v4 = *(std::__shared_weak_count **)(v1 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v1 = *(void *)(a1 + 16);
    }
    else
    {
      v1 -= 16;
    }
  }
}

void std::__shared_ptr_pointer<MIL::IROperation  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IROperation  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IROperation  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

uint64_t std::vector<std::shared_ptr<MIL::IRArgument>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRArgument>>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRArgument>>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRArgument>>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRArgument>>,std::reverse_iterator<std::shared_ptr<MIL::IRArgument>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

void std::__shared_ptr_pointer<MIL::IRArgument  *>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x25A2BA080);
}

uint64_t std::__shared_ptr_pointer<MIL::IRArgument  *>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t std::__shared_ptr_pointer<MIL::IRArgument  *>::__get_deleter(uint64_t a1, uint64_t a2)
{
    return a1 + 24;
  else {
    return 0;
  }
}

_OWORD *std::__tree<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::__map_value_compare<std::string,std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>>>::__emplace_unique_key_args<std::string,std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>(uint64_t **a1, const void **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void **)std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__find_equal<std::string>((uint64_t)a1, &v13, a2);
  uint64_t v8 = *v7;
  if (!*v7)
  {
    long long v9 = (uint64_t **)v7;
    uint64_t v8 = operator new(0x50uLL);
    v11[1] = a1 + 1;
    v8[2] = *(_OWORD *)a3;
    *((void *)v8 + 6) = *(void *)(a3 + 16);
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(void *)a3 = 0;
    *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)a4;
    *((void *)v8 + 9) = *(void *)(a4 + 16);
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    *(void *)a4 = 0;
    char v12 = 1;
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::__insert_node_at(a1, v13, v9, (uint64_t *)v8);
    v11[0] = 0;
    std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>>>>::reset[abi:ne180100]((uint64_t)v11, 0);
  }
  return v8;
}

void std::unique_ptr<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>,std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,std::vector<std::shared_ptr<MIL::IRArgument>>>,void *>>>>::reset[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      std::__destroy_at[abi:ne180100]<std::pair<std::string const,std::vector<std::shared_ptr<MIL::IRArgument>>>,0>((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t std::vector<std::shared_ptr<MIL::IRNamedValueType>>::__swap_out_circular_buffer(uint64_t *a1, void *a2)
{
  uint64_t result = std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>>((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:ne180100]<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>>(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v8 = (_OWORD *)(a7 - 16);
    do
    {
      long long v9 = *((_OWORD *)a3 - 1);
      a3 -= 2;
      _OWORD *v8 = v9;
      *a3 = 0;
      a3[1] = 0;
      *((void *)&v15 + 1) = v8;
      v7 -= 16;
      --v8;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>>>::~__exception_guard_exceptions[abi:ne180100]((uint64_t)v12);
  return v10;
}

uint64_t std::__exception_guard_exceptions<std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IRNamedValueType>>,std::reverse_iterator<std::shared_ptr<MIL::IRNamedValueType>*>>>::~__exception_guard_exceptions[abi:ne180100](uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    std::_AllocatorDestroyRangeReverse<std::allocator<std::shared_ptr<MIL::IROperation>>,std::reverse_iterator<std::shared_ptr<MIL::IROperation>*>>::operator()[abi:ne180100](a1);
  }
  return a1;
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4, uint64_t **a5)
{
  uint64_t v10 = (void *)(a1 + 24);
  unint64_t v11 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    unint64_t v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v5 = v11;
      if (v11 >= v13) {
        unint64_t v5 = v11 % v13;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v11;
    }
    float v16 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v5);
    if (v16)
    {
      for (uint64_t i = *v16; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v18 = *((void *)i + 1);
        if (v18 == v12)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13) {
              v18 %= v13;
            }
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5) {
            break;
          }
        }
      }
    }
  }
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>(a1, v12, a4, a5, (uint64_t)v28);
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v13 || (float)(v20 * (float)v13) < v19)
  {
    BOOL v21 = 1;
    if (v13 >= 3) {
      BOOL v21 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v13);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v24);
    unint64_t v13 = *(void *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13) {
        unint64_t v5 = v12 % v13;
      }
      else {
        unint64_t v5 = v12;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v12;
    }
  }
  uint64_t v25 = *(void **)(*(void *)a1 + 8 * v5);
  if (v25)
  {
    *(void *)v28[0] = *v25;
    void *v25 = v28[0];
  }
  else
  {
    *(void *)v28[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v28[0];
    *(void *)(*(void *)a1 + 8 * v5) = a1 + 16;
    if (*(void *)v28[0])
    {
      unint64_t v26 = *(void *)(*(void *)v28[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v26 >= v13) {
          v26 %= v13;
        }
      }
      else
      {
        v26 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v26) = v28[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v28[0];
  v28[0] = 0;
  ++*v10;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v28, 0);
  return i;
}

void sub_257465CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__construct_node_hash<std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::unique_ptr<MIL::IRValue const> &&>>@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t **a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  uint64_t v10 = operator new(0x38uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 0;
  void *v10 = 0;
  v10[1] = a2;
  uint64_t result = std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<std::string&&,std::unique_ptr<MIL::IRValue const> &&>((uint64_t)(v10 + 2), *a3, *a4);
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_257465D5C(_Unwind_Exception *a1)
{
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100](v1, 0);
  _Unwind_Resume(a1);
}

uint64_t std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::pair[abi:ne180100]<std::string&&,std::unique_ptr<MIL::IRValue const> &&>(uint64_t a1, long long *a2, uint64_t *a3)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  std::shared_ptr<MIL::IRValue const>::shared_ptr[abi:ne180100]<MIL::IRValue const,std::default_delete<MIL::IRValue const>,void>((uint64_t *)(a1 + 24), a3);
  return a1;
}

void sub_257465DB8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(uint64_t a1, char *a2)
{
  if (a2)
  {
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(a1, *(void *)a2);
    std::__tree<std::__value_type<std::string,MIL::IRValueType const*>,std::__map_value_compare<std::string,std::__value_type<std::string,MIL::IRValueType const*>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,MIL::IRValueType const*>>>::destroy(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

unsigned __int8 *std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRFunction>>>>::__emplace_unique_key_args<std::string,std::piecewise_construct_t const&,std::tuple<std::string&&>,std::tuple<std::shared_ptr<MIL::IRFunction>&&>>(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4, uint64_t *a5)
{
  uint64_t v10 = (void *)(a1 + 24);
  unint64_t v11 = std::__string_hash<char>::operator()[abi:ne180100](a1 + 24, (uint64_t)a2);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    unint64_t v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v5 = v11;
      if (v11 >= v13) {
        unint64_t v5 = v11 % v13;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v11;
    }
    float v16 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v5);
    if (v16)
    {
      for (uint64_t i = *v16; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v18 = *((void *)i + 1);
        if (v18 == v12)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13) {
              v18 %= v13;
            }
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5) {
            break;
          }
        }
      }
    }
  }
  float v19 = (char *)operator new(0x38uLL);
  v32[0] = v19;
  v32[1] = a1 + 16;
  *(void *)float v19 = 0;
  *((void *)v19 + 1) = v12;
  float v20 = *a4;
  uint64_t v21 = *a5;
  long long v22 = **a4;
  *((void *)v19 + 4) = *((void *)*a4 + 2);
  *((_OWORD *)v19 + 1) = v22;
  *((void *)v20 + 1) = 0;
  *((void *)v20 + 2) = 0;
  *(void *)float v20 = 0;
  *(_OWORD *)(v19 + 40) = *(_OWORD *)v21;
  *(void *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  char v33 = 1;
  float v23 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v24 = *(float *)(a1 + 32);
  if (!v13 || (float)(v24 * (float)v13) < v23)
  {
    BOOL v25 = 1;
    if (v13 >= 3) {
      BOOL v25 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v26 = v25 | (2 * v13);
    unint64_t v27 = vcvtps_u32_f32(v23 / v24);
    if (v26 <= v27) {
      size_t v28 = v27;
    }
    else {
      size_t v28 = v26;
    }
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, v28);
    unint64_t v13 = *(void *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13) {
        unint64_t v5 = v12 % v13;
      }
      else {
        unint64_t v5 = v12;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v12;
    }
  }
  uint64_t v29 = *(void **)(*(void *)a1 + 8 * v5);
  if (v29)
  {
    *(void *)v32[0] = *v29;
    *uint64_t v29 = v32[0];
  }
  else
  {
    *(void *)v32[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v32[0];
    *(void *)(*(void *)a1 + 8 * v5) = a1 + 16;
    if (*(void *)v32[0])
    {
      unint64_t v30 = *(void *)(*(void *)v32[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v30 >= v13) {
          v30 %= v13;
        }
      }
      else
      {
        v30 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v30) = v32[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v32[0];
  v32[0] = 0;
  ++*v10;
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)v32, 0);
  return i;
}

void sub_2574660D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::unique_ptr<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>,std::__hash_node_destructor<std::allocator<std::__hash_node<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,void *>>>>::reset[abi:ne180100]((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_0_0(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  return result;
}

void OUTLINED_FUNCTION_2()
{
  *(void *)uint64_t v0 = v2;
  *(_DWORD *)(v0 + 8) = v1;
}

void sub_257466300(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257466478(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257466700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257466924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_257466E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_257466F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)SNNEspressoV1ExecutionContext;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_257467014(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  long long v4 = v3;

  std::pair<std::string const,std::shared_ptr<MIL::IRValue const>>::~pair((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_25746710C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void Espresso::net::all_globals(Espresso::net *this@<X0>, uint64_t a2@<X8>)
{
  long long v4 = (std::__shared_weak_count *)*((void *)this + 137);
  if (!v4)
  {
    unint64_t v5 = 0;
    goto LABEL_6;
  }
  unint64_t v5 = std::__shared_weak_count::lock(v4);
  if (!v5 || (uint64_t v6 = (Espresso::net *)*((void *)this + 136)) == 0)
  {
LABEL_6:
    std::unordered_map<std::string,std::shared_ptr<Espresso::abstract_blob_container>>::unordered_map(a2, (uint64_t)this + 1440);
    if (!v5) {
      return;
    }
    goto LABEL_7;
  }
  Espresso::net::all_globals(v6);
LABEL_7:
  std::__shared_weak_count::__release_shared[abi:ne180100](v5);
}

void sub_2574671D8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

void sub_25746730C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_257467458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  _Unwind_Resume(a1);
}

void sub_25746787C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }

  _Unwind_Resume(a1);
}

void sub_257467BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }

  _Unwind_Resume(a1);
}

void sub_257467D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }

  _Unwind_Resume(a1);
}

void sub_257467E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }

  _Unwind_Resume(a1);
}

uint64_t std::unordered_map<std::string,std::shared_ptr<Espresso::abstract_blob_container>>::unordered_map(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(unsigned __int8 **)(a2 + 16); i; uint64_t i = *(unsigned __int8 **)i)
    std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::__emplace_unique_key_args<std::string,std::pair<std::string const,std::shared_ptr<MIL::IRValue const>> const&>(a1, i + 16, (long long *)i + 1);
  return a1;
}

void sub_257467FA8(_Unwind_Exception *a1)
{
  std::__hash_table<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::__unordered_map_hasher<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::hash<std::string>,std::equal_to<std::string>,true>,std::__unordered_map_equal<std::string,std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>,std::equal_to<std::string>,std::hash<std::string>,true>,std::allocator<std::__hash_value_type<std::string,std::shared_ptr<MIL::IRValue const>>>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

char *Espresso::abstract_blob_container::shape@<X0>(char *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  long long v2 = *(_OWORD *)(this + 24);
  *(_OWORD *)a2 = *(_OWORD *)(this + 8);
  *(_OWORD *)(a2 + 16) = v2;
  *(void *)(a2 + 32) = *((void *)this + 5);
  if ((char *)(a2 + 40) != this + 48) {
    return std::vector<unsigned int>::__assign_with_size[abi:ne180100]<unsigned int *,unsigned int *>((char *)(a2 + 40), *((char **)this + 6), *((void *)this + 7), (uint64_t)(*((void *)this + 7) - *((void *)this + 6)) >> 2);
  }
  return this;
}

void sub_257468028(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 48) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned int>::__assign_with_size[abi:ne180100]<unsigned int *,unsigned int *>(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62) {
      std::vector<MIL::IRDimension const*>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = std::vector<int>::__vallocate[abi:ne180100](v7, v11);
    unint64_t v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unint64_t v18 = v9;
      float v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v12 = (void **)(result + 8);
  uint8x8_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  float v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unint64_t v18 = v9;
    float v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  void *v12 = &v9[v17];
  return result;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_257468178()
{
}

uint64_t sub_2574681D8()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 48);
  *(void *)(v1 + 32) = *(void *)(v0 + 40);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

__n128 *sub_257468254()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v0 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_0_2(v0, (__n128)xmmword_2576ABB10);
  sub_2576A7810();
  return v0;
}

uint64_t sub_2574682A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2574682D0()
{
  sub_2574682A0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseOptimizerOperation()
{
  return self;
}

uint64_t sub_257468328()
{
  uint64_t v1 = *(unsigned int *)(v0 + 16);
  sub_2576A7810();
  return v1;
}

uint64_t sub_257468368()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_25746838C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_2574683B0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

__n128 sub_2574683D4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  char v3 = *(unsigned char *)(v1 + 112);
  char v4 = *(unsigned char *)(v1 + 113);
  long long v5 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_257468404()
{
  return sub_25761B124();
}

uint64_t sub_257468450()
{
  return 6580083;
}

uint64_t sub_257468460()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2576ABB20;
  uint64_t v3 = v0[6];
  *(void *)(v2 + 32) = v0[5];
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = v0[16];
  uint64_t v7 = v2;
  sub_2576A7E20();
  uint64_t v4 = v7;
  if (v1[17])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v5 = swift_retain();
    sub_2575A01EC(v5);
    return v7;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return v4;
}

uint64_t sub_257468534()
{
  uint64_t v1 = *(void *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v2 = swift_allocObject();
  if (v1)
  {
    OUTLINED_FUNCTION_0_2((__n128 *)v2, (__n128)xmmword_2576ABB30);
    char v3 = *(unsigned char *)(v1 + 160);
    *(void *)(v2 + 48) = *(void *)(v1 + 152);
    *(unsigned char *)(v2 + 56) = v3;
    sub_2576A7810();
  }
  else
  {
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB10;
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v4 + 152);
    LOBYTE(v4) = *(unsigned char *)(v4 + 160);
    *(void *)(v2 + 32) = v5;
    *(unsigned char *)(v2 + 40) = v4;
  }
  sub_2576A7810();
  return v2;
}

uint64_t sub_2574685E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, float a9)
{
  uint64_t v18 = swift_allocObject();
  sub_2574686A0(a1, a2, a3, a9, a4, a5, a6, a7, a8);
  return v18;
}

uint64_t sub_2574686A0(int a1, uint64_t a2, uint64_t a3, float a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  *(void *)(v9 + 128) = a8;
  *(void *)(v9 + 136) = a7;
  *(float *)(v9 + 116) = a4;
  *(unsigned char *)(v9 + 120) = a9;
  if (!a3) {
    a1 = sub_25761B148(6580083, 0xE300000000000000);
  }
  OUTLINED_FUNCTION_1_0(a1, a2, a3);
  return v9;
}

uint64_t sub_2574686F8()
{
  swift_release();
  return swift_release();
}

uint64_t sub_257468728()
{
  sub_2574682A0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_257468754()
{
  sub_257468728();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StochasticGradientDescentOperation()
{
  return self;
}

uint64_t sub_2574687AC()
{
  return sub_2576A90B0();
}

uint64_t sub_2574687F0()
{
  return sub_2574687AC();
}

uint64_t sub_257468814()
{
  return 1835099233;
}

uint64_t sub_257468824()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2576ABB40;
  uint64_t v3 = v0[6];
  *(void *)(v2 + 32) = v0[5];
  *(void *)(v2 + 40) = v3;
  uint64_t v4 = v0[18];
  *(void *)(v2 + 48) = v0[17];
  *(void *)(v2 + 56) = v4;
  uint64_t v5 = v0[21];
  *(void *)(v2 + 64) = v0[20];
  *(void *)(v2 + 72) = v5;
  uint64_t v9 = v2;
  sub_2576A7E20();
  uint64_t v6 = v9;
  if (v1[19])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = swift_retain();
    sub_2575A01EC(v7);
    return v9;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return v6;
}

__n128 *sub_257468938()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_0_2(v1, (__n128)xmmword_2576ABB50);
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  unint64_t v4 = *(void *)(v2 + 152);
  LOBYTE(v2) = *(unsigned char *)(v2 + 160);
  v1[3].n128_u64[0] = v4;
  v1[3].n128_u8[8] = v2;
  LOBYTE(v2) = *(unsigned char *)(v3 + 160);
  v1[4].n128_u64[0] = *(void *)(v3 + 152);
  v1[4].n128_u8[8] = v2;
  uint64_t v5 = v0[19];
  if (v5)
  {
    char v6 = *(unsigned char *)(v5 + 160);
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v7 = sub_2576A7810();
    sub_2575A05D0(v7, v6);
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
  }
  return v1;
}

uint64_t sub_257468A14(int a1, uint64_t a2, uint64_t a3, float a4, float a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  *(void *)(v14 + 136) = a9;
  *(void *)(v14 + 144) = a10;
  *(void *)(v14 + 152) = a11;
  *(void *)(v14 + 160) = a12;
  *(void *)(v14 + 168) = a13;
  *(float *)(v14 + 116) = a4;
  *(float *)(v14 + 120) = a5;
  *(float *)(v14 + 124) = a6;
  *(unsigned char *)(v14 + 128) = a14;
  if (!a3) {
    a1 = sub_25761B148(1835099233, 0xE400000000000000);
  }
  OUTLINED_FUNCTION_1_0(a1, a2, a3);
  return v14;
}

uint64_t sub_257468A80()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_257468AC8()
{
  sub_2574682A0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_257468B0C()
{
  sub_257468AC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdamOperation()
{
  return self;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for IOSurfaceRef(uint64_t a1)
{
}

void *__swift_memcpy168_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xA8uLL);
}

uint64_t sub_257468B98(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257468BB8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
}

uint64_t sub_257468C20()
{
  return sub_2576A90B0();
}

uint64_t sub_257468C74()
{
  return sub_257468C20();
}

uint64_t sub_257468C98(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_25746999C(&qword_26A000BD8, a2, (void (*)(uint64_t))type metadata accessor for BaseOptimizerOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257468CF0()
{
  return sub_257468EB0(*v0, MEMORY[0x263F07B58]);
}

uint64_t sub_257468D24(uint64_t a1, id *a2)
{
  uint64_t result = sub_2576A79D0();
  *a2 = 0;
  return result;
}

uint64_t sub_257468DA0(uint64_t a1, id *a2)
{
  char v3 = sub_2576A79E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_257468E20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_257468E48();
  *a1 = result;
  return result;
}

uint64_t sub_257468E48()
{
  sub_2576A79F0();
  uint64_t v0 = sub_2576A79C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257468E80()
{
  return sub_257468EB0(*v0, MEMORY[0x263F8D308]);
}

uint64_t sub_257468EB0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = sub_2576A79F0();
  uint64_t v4 = a2(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_257468EF0()
{
  return sub_257468EF8();
}

uint64_t sub_257468EF8()
{
  sub_2576A79F0();
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257468F4C()
{
  return sub_257468F54();
}

uint64_t sub_257468F54()
{
  sub_2576A79F0();
  sub_2576A9090();
  sub_2576A78E0();
  uint64_t v0 = sub_2576A9100();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257468FC8()
{
  return sub_2576A7210();
}

uint64_t sub_257469014()
{
  return sub_2576A7200();
}

uint64_t sub_25746906C()
{
  return sub_2576A9100();
}

BOOL sub_2574690D4(int *a1, int *a2)
{
  return sub_257573D14(*a1, *a2);
}

void sub_2574690E0(uint64_t a1@<X8>)
{
  sub_257469114();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3 & 1;
}

uint64_t sub_25746911C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = nullsub_1(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_257469148()
{
  return sub_2576A3AD4();
}

uint64_t sub_257469150()
{
  return sub_25746F664();
}

uint64_t sub_257469158()
{
  return sub_2575EE980();
}

uint64_t sub_257469160()
{
  return sub_257573D20();
}

uint64_t sub_25746916C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA06B8](v4, v5, a3, WitnessTable);
}

_DWORD *sub_2574691D8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_2574691E8(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_257469238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000BF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void *__swift_memcpy5040_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x13B0uLL);
}

uint64_t sub_2574692BC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5040)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574692E0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 5032) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 4344) = 0u;
    *(_OWORD *)(result + 4328) = 0u;
    *(_OWORD *)(result + 4312) = 0u;
    *(_OWORD *)(result + 4296) = 0u;
    *(_OWORD *)(result + 4280) = 0u;
    *(_OWORD *)(result + 4264) = 0u;
    *(_OWORD *)(result + 4248) = 0u;
    *(_OWORD *)(result + 4232) = 0u;
    *(_OWORD *)(result + 4216) = 0u;
    *(_OWORD *)(result + 4200) = 0u;
    *(_OWORD *)(result + 4184) = 0u;
    *(_OWORD *)(result + 4168) = 0u;
    *(_OWORD *)(result + 4152) = 0u;
    *(_OWORD *)(result + 4136) = 0u;
    *(_OWORD *)(result + 4120) = 0u;
    *(_OWORD *)(result + 4104) = 0u;
    *(_OWORD *)(result + 4088) = 0u;
    *(_OWORD *)(result + 4072) = 0u;
    *(_OWORD *)(result + 4056) = 0u;
    *(_OWORD *)(result + 4040) = 0u;
    *(_OWORD *)(result + 4024) = 0u;
    *(_OWORD *)(result + 4008) = 0u;
    *(_OWORD *)(result + 3992) = 0u;
    *(_OWORD *)(result + 3976) = 0u;
    *(_OWORD *)(result + 3960) = 0u;
    *(_OWORD *)(result + 3944) = 0u;
    *(_OWORD *)(result + 3928) = 0u;
    *(_OWORD *)(result + 3912) = 0u;
    *(_OWORD *)(result + 3896) = 0u;
    *(_OWORD *)(result + 3880) = 0u;
    *(_OWORD *)(result + 3864) = 0u;
    *(_OWORD *)(result + 3848) = 0u;
    *(_OWORD *)(result + 3832) = 0u;
    *(_OWORD *)(result + 3816) = 0u;
    *(_OWORD *)(result + 3800) = 0u;
    *(_OWORD *)(result + 3784) = 0u;
    *(_OWORD *)(result + 3768) = 0u;
    *(_OWORD *)(result + 3752) = 0u;
    *(_OWORD *)(result + 3736) = 0u;
    *(_OWORD *)(result + 3720) = 0u;
    *(_OWORD *)(result + 3704) = 0u;
    *(_OWORD *)(result + 3688) = 0u;
    *(_OWORD *)(result + 3672) = 0u;
    *(_OWORD *)(result + 3656) = 0u;
    *(_OWORD *)(result + 3640) = 0u;
    *(_OWORD *)(result + 3624) = 0u;
    *(_OWORD *)(result + 3608) = 0u;
    *(_OWORD *)(result + 3592) = 0u;
    *(_OWORD *)(result + 3576) = 0u;
    *(_OWORD *)(result + 3560) = 0u;
    *(_OWORD *)(result + 3544) = 0u;
    *(_OWORD *)(result + 3528) = 0u;
    *(_OWORD *)(result + 3512) = 0u;
    *(_OWORD *)(result + 3496) = 0u;
    *(_OWORD *)(result + 3480) = 0u;
    *(_OWORD *)(result + 3464) = 0u;
    *(_OWORD *)(result + 3448) = 0u;
    *(_OWORD *)(result + 3432) = 0u;
    *(_OWORD *)(result + 3416) = 0u;
    *(_OWORD *)(result + 3400) = 0u;
    *(_OWORD *)(result + 3384) = 0u;
    *(_OWORD *)(result + 3368) = 0u;
    *(_OWORD *)(result + 3352) = 0u;
    *(_OWORD *)(result + 3336) = 0u;
    *(_OWORD *)(result + 3320) = 0u;
    *(_OWORD *)(result + 3304) = 0u;
    *(_OWORD *)(result + 3288) = 0u;
    *(_OWORD *)(result + 3272) = 0u;
    *(_OWORD *)(result + 3256) = 0u;
    *(_OWORD *)(result + 3240) = 0u;
    *(_OWORD *)(result + 3224) = 0u;
    *(_OWORD *)(result + 3208) = 0u;
    *(_OWORD *)(result + 3192) = 0u;
    *(_OWORD *)(result + 3176) = 0u;
    *(_OWORD *)(result + 3160) = 0u;
    *(_OWORD *)(result + 3144) = 0u;
    *(_OWORD *)(result + 3128) = 0u;
    *(_OWORD *)(result + 3112) = 0u;
    *(_OWORD *)(result + 3096) = 0u;
    *(_OWORD *)(result + 3080) = 0u;
    *(_OWORD *)(result + 3064) = 0u;
    *(_OWORD *)(result + 3048) = 0u;
    *(_OWORD *)(result + 3032) = 0u;
    *(_OWORD *)(result + 3016) = 0u;
    *(_OWORD *)(result + 3000) = 0u;
    *(_OWORD *)(result + 2984) = 0u;
    *(_OWORD *)(result + 2968) = 0u;
    *(_OWORD *)(result + 2952) = 0u;
    *(_OWORD *)(result + 2936) = 0u;
    *(_OWORD *)(result + 2920) = 0u;
    *(_OWORD *)(result + 2904) = 0u;
    *(_OWORD *)(result + 2888) = 0u;
    *(_OWORD *)(result + 2872) = 0u;
    *(_OWORD *)(result + 2856) = 0u;
    *(_OWORD *)(result + 2840) = 0u;
    *(_OWORD *)(result + 2824) = 0u;
    *(_OWORD *)(result + 2808) = 0u;
    *(_OWORD *)(result + 2792) = 0u;
    *(_OWORD *)(result + 2776) = 0u;
    *(_OWORD *)(result + 2760) = 0u;
    *(_OWORD *)(result + 2744) = 0u;
    *(_OWORD *)(result + 2728) = 0u;
    *(_OWORD *)(result + 2712) = 0u;
    *(_OWORD *)(result + 2696) = 0u;
    *(_OWORD *)(result + 2680) = 0u;
    *(_OWORD *)(result + 2664) = 0u;
    *(_OWORD *)(result + 2648) = 0u;
    *(_OWORD *)(result + 2632) = 0u;
    *(_OWORD *)(result + 2616) = 0u;
    *(_OWORD *)(result + 2600) = 0u;
    *(_OWORD *)(result + 2584) = 0u;
    *(_OWORD *)(result + 2568) = 0u;
    *(_OWORD *)(result + 2552) = 0u;
    *(_OWORD *)(result + 2536) = 0u;
    *(_OWORD *)(result + 2520) = 0u;
    *(_OWORD *)(result + 2504) = 0u;
    *(_OWORD *)(result + 2488) = 0u;
    *(_OWORD *)(result + 2472) = 0u;
    *(_OWORD *)(result + 2456) = 0u;
    *(_OWORD *)(result + 2440) = 0u;
    *(_OWORD *)(result + 2424) = 0u;
    *(_OWORD *)(result + 2408) = 0u;
    *(_OWORD *)(result + 2392) = 0u;
    *(_OWORD *)(result + 2376) = 0u;
    *(_OWORD *)(result + 2360) = 0u;
    *(_OWORD *)(result + 2344) = 0u;
    *(_OWORD *)(result + 2328) = 0u;
    *(_OWORD *)(result + 2312) = 0u;
    *(_OWORD *)(result + 2296) = 0u;
    *(_OWORD *)(result + 2280) = 0u;
    *(_OWORD *)(result + 2264) = 0u;
    *(_OWORD *)(result + 2248) = 0u;
    *(_OWORD *)(result + 2232) = 0u;
    *(_OWORD *)(result + 2216) = 0u;
    *(_OWORD *)(result + 2200) = 0u;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 5016) = 0u;
    *(_OWORD *)(result + 5000) = 0u;
    *(_OWORD *)(result + 4984) = 0u;
    *(_OWORD *)(result + 4968) = 0u;
    *(_OWORD *)(result + 4952) = 0u;
    *(_OWORD *)(result + 4936) = 0u;
    *(_OWORD *)(result + 4920) = 0u;
    *(_OWORD *)(result + 4904) = 0u;
    *(_OWORD *)(result + 4888) = 0u;
    *(_OWORD *)(result + 4872) = 0u;
    *(_OWORD *)(result + 4856) = 0u;
    *(_OWORD *)(result + 4840) = 0u;
    *(_OWORD *)(result + 4824) = 0u;
    *(_OWORD *)(result + 4808) = 0u;
    *(_OWORD *)(result + 4792) = 0u;
    *(_OWORD *)(result + 4776) = 0u;
    *(_OWORD *)(result + 4760) = 0u;
    *(_OWORD *)(result + 4744) = 0u;
    *(_OWORD *)(result + 4728) = 0u;
    *(_OWORD *)(result + 4712) = 0u;
    *(_OWORD *)(result + 4696) = 0u;
    *(_OWORD *)(result + 4680) = 0u;
    *(_OWORD *)(result + 4664) = 0u;
    *(_OWORD *)(result + 4648) = 0u;
    *(_OWORD *)(result + 4632) = 0u;
    *(_OWORD *)(result + 4616) = 0u;
    *(_OWORD *)(result + 4600) = 0u;
    *(_OWORD *)(result + 4584) = 0u;
    *(_OWORD *)(result + 4568) = 0u;
    *(_OWORD *)(result + 4552) = 0u;
    *(_OWORD *)(result + 4536) = 0u;
    *(_OWORD *)(result + 4520) = 0u;
    *(_OWORD *)(result + 4504) = 0u;
    *(_OWORD *)(result + 4488) = 0u;
    *(_OWORD *)(result + 4472) = 0u;
    *(_OWORD *)(result + 4456) = 0u;
    *(_OWORD *)(result + 4440) = 0u;
    *(_OWORD *)(result + 4424) = 0u;
    *(_OWORD *)(result + 4408) = 0u;
    *(_OWORD *)(result + 4392) = 0u;
    *(_OWORD *)(result + 4376) = 0u;
    *(_OWORD *)(result + 4360) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5040) = v3;
  return result;
}

void type metadata accessor for BNNSLayerParametersLSTM(uint64_t a1)
{
}

void type metadata accessor for SNNDataType(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void *__swift_memcpy176_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xB0uLL);
}

uint64_t sub_25746989C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574698BC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 176) = v3;
  return result;
}

void type metadata accessor for BNNSNDArrayDescriptor(uint64_t a1)
{
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
}

void type metadata accessor for MTLStorageMode(uint64_t a1)
{
}

uint64_t sub_257469950()
{
  return sub_25746999C(&qword_26A000C30, 255, type metadata accessor for MTLStorageMode);
}

uint64_t sub_25746999C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_2574699E4(uint64_t *a1, uint64_t *a2)
{
  return sub_257573D98(*a1, *a2);
}

uint64_t sub_2574699F0()
{
  return sub_25746999C((unint64_t *)&qword_26A000C38, 255, type metadata accessor for CFString);
}

uint64_t sub_257469A3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2576A79C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_257469A84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_257469AB0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_257469AB4(uint64_t a1)
{
  uint64_t v2 = sub_25746999C((unint64_t *)&qword_26A000C60, 255, type metadata accessor for FileAttributeKey);
  uint64_t v3 = sub_25746999C(&qword_26A000C68, 255, type metadata accessor for FileAttributeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_257469B78()
{
  return sub_25746999C(&qword_26A000C40, 255, type metadata accessor for FileAttributeKey);
}

uint64_t sub_257469BC4()
{
  return sub_25746999C(&qword_26A000C48, 255, type metadata accessor for FileAttributeKey);
}

uint64_t sub_257469C10()
{
  return sub_25746999C(&qword_26A000C50, 255, type metadata accessor for FileAttributeKey);
}

uint64_t sub_257469C5C()
{
  return sub_25746999C(&qword_26A000C58, 255, type metadata accessor for CFString);
}

uint64_t initializeBufferWithCopyOfBuffer for TensorRepresentation.ConcreteValue(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MaxPool2D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MaxPool2D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for BNNSActivation(uint64_t a1)
{
}

void *__swift_memcpy928_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x3A0uLL);
}

uint64_t sub_257469D64(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 928)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257469D84(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 920) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 928) = v3;
  return result;
}

void type metadata accessor for BNNSLSTMGateDescriptor(uint64_t a1)
{
}

void *__swift_memcpy528_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x210uLL);
}

uint64_t sub_257469EC0(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 528)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257469EE0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 520) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 528) = v3;
  return result;
}

void type metadata accessor for BNNSLSTMDataDescriptor(uint64_t a1)
{
}

void type metadata accessor for BNNSDataType(uint64_t a1)
{
}

void type metadata accessor for BNNSDataLayout(uint64_t a1)
{
}

void type metadata accessor for BNNSNDArrayFlags(uint64_t a1)
{
}

void type metadata accessor for BNNSActivationFunction(uint64_t a1)
{
}

void sub_257469FF8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t OUTLINED_FUNCTION_0_2(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  uint64_t v4 = *(void *)(v3 + 40);
  uint64_t result = *(void *)(v4 + 152);
  LOBYTE(v4) = *(unsigned char *)(v4 + 160);
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_0(int a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v5;
  *(void *)(v4 + 48) = v3;
  return sub_257469238(v6, v4 + 56);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return sub_2576A90D0();
}

uint64_t sub_25746A0A4(void *a1, unint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2576AC2A0;
  unint64_t v6 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  uint64_t v8 = v7;
  sub_257582858(1, v6 == 0, a2);
  if (v6) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  uint64_t v10 = v9;
  sub_257582858(2, v6 == 0, a2);
  if (v6) {
    id v11 = (id)MEMORY[0x25A2B8DB0](2, a2);
  }
  else {
    id v11 = *(id *)(a2 + 48);
  }
  unint64_t v12 = v11;
  uint64_t v14 = *(void *)(v2 + 24);
  uint64_t v13 = *(void *)(v2 + 32);
  sub_2576A7810();
  id v15 = sub_25746A290((uint64_t)v8, (uint64_t)v10, (uint64_t)v12, v14, v13, a1);

  *(void *)(v5 + 32) = v15;
  sub_2576A7E20();
  return v5;
}

uint64_t sub_25746A200(void *a1, unint64_t a2)
{
  return sub_25746A0A4(a1, a2);
}

unint64_t sub_25746A218(uint64_t a1)
{
  unint64_t result = sub_25746A240();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25746A240()
{
  unint64_t result = qword_26A000DD0;
  if (!qword_26A000DD0)
  {
    type metadata accessor for SelectOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A000DD0);
  }
  return result;
}

id sub_25746A290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a6, sel_selectWithPredicateTensor_truePredicateTensor_falsePredicateTensor_name_, a1, a2, a3, v10);

  return v11;
}

uint64_t sub_25746A31C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_2576A7810();
  return v1;
}

uint64_t sub_25746A34C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 80);
  *(void *)(v1 + 32) = *(void *)(v0 + 72);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25746A3A8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  char v18;
  char v20;
  uint64_t v21;

  uint64_t v9 = v8;
  if (!a3) {
    a1 = sub_25761B148(0x746E6174736E6F63, 0xE800000000000000);
  }
  *(_DWORD *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 56) = a4;
  *(void *)(v9 + 64) = a5;
  *(void *)(v9 + 40) = a6;
  *(void *)(v9 + 48) = a7;
  uint64_t ObjectType = swift_getObjectType();
  float v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  swift_unknownObjectRetain();
  v16(&v21, ObjectType, a5);
  size_t v17 = v21;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a5 + 8))(&v20, ObjectType, a5);
  swift_unknownObjectRelease();
  uint64_t v18 = v20;
  *(void *)(v9 + 72) = v17;
  *(unsigned char *)(v9 + 80) = v18;
  sub_257469238(a8, v9 + 88);
  return v9;
}

uint64_t sub_25746A4A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25746A4DC()
{
  sub_25746A4A4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConstantOperation()
{
  return self;
}

uint64_t sub_25746A534()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_2576A7810();
  return v1;
}

uint64_t sub_25746A564()
{
  return MEMORY[0x263F8EE78];
}

__n128 sub_25746A574@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 136);
  char v3 = *(unsigned char *)(v1 + 144);
  char v4 = *(unsigned char *)(v1 + 145);
  long long v5 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 120);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_25746A5A4()
{
  return sub_25746A31C();
}

uint64_t sub_25746A5C8()
{
  sub_2576A7810();
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746A620()
{
  return sub_25746A5C8();
}

unint64_t sub_25746A644(uint64_t a1)
{
  unint64_t result = sub_25746A66C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_25746A66C()
{
  unint64_t result = qword_26A000DD8;
  if (!qword_26A000DD8)
  {
    type metadata accessor for ConstantOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A000DD8);
  }
  return result;
}

uint64_t static RuntimeConfiguration.tensorResolutionDepthThreshold.getter()
{
  return qword_26A000DE0;
}

uint64_t static RuntimeConfiguration.tensorResolutionDepthThreshold.setter(uint64_t a1)
{
  uint64_t result = OUTLINED_FUNCTION_6();
  qword_26A000DE0 = a1;
  return result;
}

uint64_t (*static RuntimeConfiguration.tensorResolutionDepthThreshold.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_25746A770()
{
  uint64_t result = sub_25746A794();
  byte_26A000DE8 = result & 1;
  return result;
}

uint64_t sub_25746A794()
{
  id v0 = objc_msgSend(self, sel_processInfo);
  id v1 = objc_msgSend(v0, sel_environment);

  uint64_t v2 = sub_2576A77A0();
  sub_2574BAE90(0xD000000000000020, 0x80000002576C4330, v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4) {
    return 0;
  }
  if (sub_2576A7A40() == 1702195828 && v5 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      uint64_t v9 = sub_2576A7A40();
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      if (v9 != 7562617 || v11 != 0xE300000000000000)
      {
        char v13 = sub_2576A8F60();
        swift_bridgeObjectRelease();
        return v13 & 1;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

char *sub_25746A92C()
{
  if (qword_26A0008A0 != -1) {
    swift_once();
  }
  return &byte_26A000DE8;
}

uint64_t static RuntimeConfiguration.isUsingPrimitivesForOptimizers.getter()
{
  if (qword_26A0008A0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  return byte_26A000DE8;
}

uint64_t static RuntimeConfiguration.isUsingPrimitivesForOptimizers.setter(char a1)
{
  if (qword_26A0008A0 != -1) {
    swift_once();
  }
  uint64_t result = OUTLINED_FUNCTION_6();
  byte_26A000DE8 = a1 & 1;
  return result;
}

uint64_t (*static RuntimeConfiguration.isUsingPrimitivesForOptimizers.modify())()
{
  if (qword_26A0008A0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

uint64_t sub_25746AAC0()
{
  return sub_25746AACC((uint64_t)&unk_26A0309D0);
}

uint64_t sub_25746AACC@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_processInfo);
  id v3 = objc_msgSend(v2, sel_environment);

  uint64_t v4 = sub_2576A77A0();
  uint64_t v5 = sub_2574BAE90(0xD000000000000015, 0x80000002576C42D0, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    BOOL v9 = v5 == 0x6F73736572707365 && v7 == 0xE800000000000000;
    if (v9 || (sub_2576A8F60() & 1) != 0)
    {
      uint64_t v10 = &off_2706693E8;
      uint64_t v11 = &unk_270669328;
    }
    else
    {
      if (v5 != 0x706172675F73706DLL || v7 != 0xE900000000000068) {
        sub_2576A8F60();
      }
      uint64_t v10 = &off_2706693C8;
      uint64_t v11 = &unk_270669348;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = &off_2706693C8;
    uint64_t v11 = &unk_270669348;
  }
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_25746AC64()
{
  return sub_25746AC70((uint64_t)&unk_26A0309F8);
}

uint64_t sub_25746AC70@<X0>(uint64_t a1@<X8>)
{
  id v2 = objc_msgSend(self, sel_processInfo);
  id v3 = objc_msgSend(v2, sel_environment);

  uint64_t v4 = sub_2576A77A0();
  uint64_t v5 = sub_2574BAE90(0xD000000000000015, 0x80000002576C42B0, v4);
  uint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_8;
  }
  BOOL v9 = v5 == 0x6F73736572707365 && v7 == 0xE800000000000000;
  if (!v9 && (sub_2576A8F60() & 1) == 0)
  {
    if (v5 == 1936617058 && v7 == 0xE400000000000000)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_2576A8F60();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t v10 = &off_2706693A8;
    uint64_t v11 = &unk_270669308;
    goto LABEL_9;
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v10 = &off_2706693E8;
  uint64_t v11 = &unk_270669328;
LABEL_9:
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_25746ADF8()
{
  uint64_t result = sub_25746AF2C(0xD000000000000016, 0x80000002576C4310);
  qword_26A000DF0 = result;
  return result;
}

uint64_t static RuntimeConfiguration.mpsGraphCacheSize.getter()
{
  return sub_25746B248(&qword_26A0008B8, (uint64_t)&qword_26A000DF0);
}

uint64_t static RuntimeConfiguration.mpsGraphCacheSize.setter(uint64_t a1)
{
  return sub_25746B2B4(a1, &qword_26A0008B8, &qword_26A000DF0);
}

uint64_t (*static RuntimeConfiguration.mpsGraphCacheSize.modify())()
{
  if (qword_26A0008B8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j__swift_endAccess;
}

uint64_t sub_25746AEF4()
{
  uint64_t result = sub_25746AF2C(0xD00000000000001ELL, 0x80000002576C42F0);
  qword_26A000DF8 = result;
  return result;
}

uint64_t sub_25746AF2C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_processInfo);
  id v5 = objc_msgSend(v4, sel_environment);

  uint64_t v6 = sub_2576A77A0();
  uint64_t v7 = sub_2574BAE90(a1, a2, v6);
  unint64_t v9 = v8;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v9) {
    return 100;
  }
  uint64_t v11 = HIBYTE(v9) & 0xF;
  uint64_t v12 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(v9) & 0xF;
  }
  else {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 100;
  }
  if ((v9 & 0x1000000000000000) == 0)
  {
    if ((v9 & 0x2000000000000000) == 0)
    {
      if ((v7 & 0x1000000000000000) != 0) {
        uint64_t v14 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v14 = (unsigned __int8 *)sub_2576A8860();
      }
      uint64_t v15 = (uint64_t)sub_25746B64C(v14, v12, 10);
      LOBYTE(v7) = v16 & 1;
      goto LABEL_47;
    }
    if (v7 == 43)
    {
      if (!v11) {
        goto LABEL_62;
      }
      if (v11 == 1) {
        goto LABEL_33;
      }
      OUTLINED_FUNCTION_3();
      if (!v20 & v19) {
        goto LABEL_33;
      }
      uint64_t v15 = v22;
      if (v21 != 2)
      {
        OUTLINED_FUNCTION_3();
        if (!v20 & v19) {
          goto LABEL_33;
        }
        uint64_t v15 = 10 * v15 + v24;
        if (v23 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_5();
            if (!v20 & v19) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_1_1();
            if (!v20) {
              goto LABEL_33;
            }
            uint64_t v15 = v26 + v25;
            if (__OFADD__(v26, v25)) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_4();
            if (v20) {
              goto LABEL_47;
            }
          }
        }
      }
    }
    else
    {
      if (v7 == 45)
      {
        if (v11)
        {
          if (v11 != 1)
          {
            OUTLINED_FUNCTION_3();
            if (!(!v20 & v19))
            {
              if (v17 == 2)
              {
                LOBYTE(v7) = 0;
                uint64_t v15 = -(uint64_t)v18;
                goto LABEL_47;
              }
              if ((BYTE2(v7) - 48) <= 9u)
              {
                uint64_t v15 = -10 * v18 - (BYTE2(v7) - 48);
                if (v17 == 3) {
                  goto LABEL_46;
                }
                while (1)
                {
                  OUTLINED_FUNCTION_5();
                  if (!v20 & v19) {
                    break;
                  }
                  OUTLINED_FUNCTION_1_1();
                  if (!v20) {
                    break;
                  }
                  uint64_t v15 = v32 - v31;
                  if (__OFSUB__(v32, v31)) {
                    break;
                  }
                  OUTLINED_FUNCTION_4();
                  if (v20) {
                    goto LABEL_47;
                  }
                }
              }
            }
          }
LABEL_33:
          uint64_t v15 = 0;
          LOBYTE(v7) = 1;
          goto LABEL_47;
        }
        __break(1u);
LABEL_62:
        __break(1u);
        return result;
      }
      if (!v11 || (v7 - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v15 = (v7 - 48);
      if (v11 != 1)
      {
        OUTLINED_FUNCTION_3();
        if (!v20 & v19) {
          goto LABEL_33;
        }
        uint64_t v15 = 10 * (v7 - 48) + v28;
        if (v27 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_5();
            if (!v20 & v19) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_1_1();
            if (!v20) {
              goto LABEL_33;
            }
            uint64_t v15 = v30 + v29;
            if (__OFADD__(v30, v29)) {
              goto LABEL_33;
            }
            OUTLINED_FUNCTION_4();
            if (v20) {
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_46:
    LOBYTE(v7) = 0;
    goto LABEL_47;
  }
  uint64_t v15 = (uint64_t)sub_25746B564(v7, v9, 10);
  LOBYTE(v7) = v33;
LABEL_47:
  swift_bridgeObjectRelease();
  if (v7) {
    return 100;
  }
  else {
    return v15;
  }
}

uint64_t static RuntimeConfiguration.espressoNetworkCacheSize.getter()
{
  return sub_25746B248(&qword_26A0008C0, (uint64_t)&qword_26A000DF8);
}

uint64_t sub_25746B248(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_2_1();
  return *(void *)a2;
}

uint64_t static RuntimeConfiguration.espressoNetworkCacheSize.setter(uint64_t a1)
{
  return sub_25746B2B4(a1, &qword_26A0008C0, &qword_26A000DF8);
}

uint64_t sub_25746B2B4(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a3 = a1;
  return result;
}

uint64_t (*static RuntimeConfiguration.espressoNetworkCacheSize.modify())()
{
  if (qword_26A0008C0 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_3();
  return j_j__swift_endAccess;
}

uint64_t RuntimeConfiguration.deinit()
{
  return v0;
}

uint64_t RuntimeConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t static RuntimeConfiguration.isGPUSupportedByMPSGraph.getter()
{
  return sub_25746B4B8(&qword_26A0008A8, (uint64_t)&unk_26A0309D0);
}

uint64_t sub_25746B3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t static RuntimeConfiguration.isGPUSupportedByEspresso.getter()
{
  return sub_25746B4B8(&qword_26A0008A8, (uint64_t)&unk_26A0309D0);
}

uint64_t static RuntimeConfiguration.isCPUSupportedByBNNS.getter()
{
  return sub_25746B4B8(&qword_26A0008B0, (uint64_t)&unk_26A0309F8);
}

uint64_t static RuntimeConfiguration.isCPUSupportedByEspresso.getter()
{
  return sub_25746B4B8(&qword_26A0008B0, (uint64_t)&unk_26A0309F8);
}

uint64_t sub_25746B4B8(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_25746B3D0(a2, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
  return swift_dynamicCast();
}

uint64_t type metadata accessor for RuntimeConfiguration()
{
  return self;
}

uint64_t method lookup function for RuntimeConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RuntimeConfiguration);
}

unsigned __int8 *sub_25746B564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  sub_2576A7810();
  uint64_t v5 = sub_2576A7BE0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_25746B8C8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_2576A8860();
  }
LABEL_7:
  uint64_t v11 = sub_25746B64C(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_25746B64C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v15 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v16 = a3 + 48;
        unsigned __int8 v17 = a3 + 55;
        unsigned __int8 v18 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = 58;
        }
        else
        {
          unsigned __int8 v18 = 97;
          unsigned __int8 v17 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          char v19 = result + 1;
          do
          {
            unsigned int v20 = *v19;
            if (v20 < 0x30 || v20 >= v16)
            {
              if (v20 < 0x41 || v20 >= v17)
              {
                uint64_t v13 = 0;
                if (v20 < 0x61 || v20 >= v18) {
                  return (unsigned __int8 *)v13;
                }
                char v21 = -87;
              }
              else
              {
                char v21 = -55;
              }
            }
            else
            {
              char v21 = -48;
            }
            uint64_t v22 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v22 + (v20 + v21);
            if (__OFADD__(v22, (v20 + v21))) {
              return 0;
            }
            ++v19;
            --v15;
          }
          while (v15);
          return (unsigned __int8 *)v9;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v4 != 45)
    {
      if (a2)
      {
        unsigned __int8 v23 = a3 + 48;
        unsigned __int8 v24 = a3 + 55;
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v23 = 58;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v24 = 65;
        }
        if (result)
        {
          uint64_t v26 = 0;
          do
          {
            unsigned int v27 = *result;
            if (v27 < 0x30 || v27 >= v23)
            {
              if (v27 < 0x41 || v27 >= v24)
              {
                uint64_t v13 = 0;
                if (v27 < 0x61 || v27 >= v25) {
                  return (unsigned __int8 *)v13;
                }
                char v28 = -87;
              }
              else
              {
                char v28 = -55;
              }
            }
            else
            {
              char v28 = -48;
            }
            uint64_t v29 = v26 * a3;
            if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
              return 0;
            }
            uint64_t v26 = v29 + (v27 + v28);
            if (__OFADD__(v29, (v27 + v28))) {
              return 0;
            }
            ++result;
            --v3;
          }
          while (v3);
          return (unsigned __int8 *)(v29 + (v27 + v28));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      uint64_t v5 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v6 = a3 + 48;
        unsigned __int8 v7 = a3 + 55;
        unsigned __int8 v8 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = 58;
        }
        else
        {
          unsigned __int8 v8 = 97;
          unsigned __int8 v7 = 65;
        }
        if (result)
        {
          uint64_t v9 = 0;
          for (uint64_t i = result + 1; ; ++i)
          {
            unsigned int v11 = *i;
            if (v11 < 0x30 || v11 >= v6)
            {
              if (v11 < 0x41 || v11 >= v7)
              {
                uint64_t v13 = 0;
                if (v11 < 0x61 || v11 >= v8) {
                  return (unsigned __int8 *)v13;
                }
                char v12 = -87;
              }
              else
              {
                char v12 = -55;
              }
            }
            else
            {
              char v12 = -48;
            }
            uint64_t v14 = v9 * a3;
            if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
              return 0;
            }
            uint64_t v9 = v14 - (v11 + v12);
            if (__OFSUB__(v14, (v11 + v12))) {
              return 0;
            }
            if (!--v5) {
              return (unsigned __int8 *)v9;
            }
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25746B8C8()
{
  unint64_t v0 = sub_25746B934();
  uint64_t v4 = sub_25746B968(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25746B934()
{
  return sub_2576A7BF0();
}

uint64_t sub_25746B968(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_25746BAC0(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_2574F87AC(v9, 0);
      unint64_t v12 = sub_25746BBC0((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_2576A7810();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_2576A8860();
LABEL_4:
        JUMPOUT(0x25A2B8060);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x25A2B8060](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x25A2B8060]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_25746BAC0(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_2574F8814(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_2574F8814(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_25746BBC0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0) {
    goto LABEL_38;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_35:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    uint64_t result = v12;
    if ((v12 & 0xC) == v15) {
      uint64_t result = sub_2574F8814(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_2576A7B80();
      char v19 = result;
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_2576A8860();
        }
        char v19 = *(unsigned char *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      uint64_t result = sub_2574F8814(v12, a6, a7);
      unint64_t v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16) {
      goto LABEL_37;
    }
    unint64_t v12 = sub_2576A7B50();
LABEL_31:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_6()
{
  return swift_beginAccess();
}

void sub_25746BE6C()
{
  OUTLINED_FUNCTION_62();
  sub_257477068(v0, (uint64_t)v1);
  sub_2576A8730();
  sub_2576A7B00();
  sub_2576A7B00();
  sub_2574A4394();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  OUTLINED_FUNCTION_87();
  __break(1u);
}

void sub_25746BF88()
{
  OUTLINED_FUNCTION_62();
  sub_25747700C(v0, (uint64_t)v1);
  sub_2576A7B00();
  sub_2576A7B00();
  sub_2574A4394();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  OUTLINED_FUNCTION_87();
  __break(1u);
}

uint64_t Function.callAsFunction(_:parameters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_2576A77E0();
  Function.callAsFunction(_:parameters:states:)(a1, a2, &v7, a3);
  return swift_bridgeObjectRelease();
}

uint64_t Function.callAsFunction(_:parameters:states:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v8 = *v4;
  uint64_t v9 = v4[1];
  uint64_t v11 = v4[2];
  unint64_t v10 = v4[3];
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v136);
  swift_release();
  uint64_t v12 = v142;
  swift_retain();
  sub_2574718B0((uint64_t)&v136);
  unint64_t v127 = v10;
  uint64_t v128 = v8;
  if (v12)
  {
    if (*(unsigned char *)(v12 + 24) == 1 && v9 != 0)
    {
      uint64_t v126 = v9;
      uint64_t v125 = v11;
      (*(void (**)(uint64_t))(*(void *)v11 + 88))(a1);
      uint64_t v46 = ((uint64_t (*)(void))sub_25746DA8C)();
      swift_bridgeObjectRelease();
      uint64_t v47 = sub_25746E8A8(v46);
      OUTLINED_FUNCTION_37(v47, (uint64_t)&v147);
      uint64_t v124 = v48;
      uint64_t v123 = v49;
      uint64_t v8 = _s9IOMappingVMa();
      swift_bridgeObjectRetain_n();
      uint64_t v50 = sub_2576A7E00();
      swift_bridgeObjectRelease();
      uint64_t v135 = v50;
      unint64_t v133 = v8;
      if (v50 != MEMORY[0x25A2B8500](a4, v8))
      {
        uint64_t v131 = a4 + 32;
        uint64_t v18 = MEMORY[0x263F8EE78];
        uint64_t v51 = MEMORY[0x263F8EE78];
        unint64_t v16 = v134;
        while (1)
        {
          uint64_t v52 = sub_2576A7EC0();
          sub_2576A7E40();
          if ((v52 & 1) == 0) {
            goto LABEL_97;
          }
          OUTLINED_FUNCTION_77();
          uint64_t v54 = v53[1];
          unint64_t v5 = v53[2];
          uint64_t v55 = v53[3];
          uint64_t v56 = v53[4];
          sub_2576A7810();
          sub_2576A7810();
          sub_2576A7810();
          MEMORY[0x25A2B8510](&v135, a4, v8);
          swift_bridgeObjectRelease();
          switch(v52)
          {
            case 1:
              uint64_t v61 = v132;
              uint64_t v64 = *(void *)(v132 + 16);
              sub_2576A7810();
              if (!v64) {
                goto LABEL_117;
              }
              sub_2576A7810();
              unint64_t v58 = sub_25747588C(v54, v5);
              if (v65) {
                goto LABEL_45;
              }
              swift_bridgeObjectRelease();
LABEL_117:
              v136 = (const char *)v54;
              *(void *)&long long v137 = v5;
              goto LABEL_118;
            case 2:
              uint64_t v61 = v130;
              uint64_t v62 = *(void *)(v130 + 16);
              sub_2576A7810();
              if (!v62) {
                goto LABEL_114;
              }
              sub_2576A7810();
              unint64_t v58 = sub_25747588C(v54, v5);
              if ((v63 & 1) == 0)
              {
                swift_bridgeObjectRelease();
LABEL_114:
                v136 = (const char *)v54;
                *(void *)&long long v137 = v5;
LABEL_115:
                *((void *)&v137 + 1) = 0x6574617473;
                *(void *)&long long v138 = 0xE500000000000000;
                char v143 = 21;
                OUTLINED_FUNCTION_33();
                goto LABEL_119;
              }
LABEL_45:
              uint64_t v60 = *(void *)(v61 + 56);
LABEL_46:
              uint64_t v66 = *(void *)(v60 + 8 * v58);
              swift_retain();
              swift_bridgeObjectRelease_n();
              uint64_t v67 = *(void *)(v66 + 16);
              sub_2576A7810();
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_19();
                sub_257472200();
                uint64_t v51 = v71;
              }
              unint64_t v16 = *(void *)(v51 + 16);
              unint64_t v68 = *(void *)(v51 + 24);
              uint64_t v8 = v16 + 1;
              if (v16 >= v68 >> 1)
              {
                OUTLINED_FUNCTION_61(v68);
                OUTLINED_FUNCTION_106();
                sub_257472200();
                uint64_t v51 = v72;
              }
              *(void *)(v51 + 16) = v8;
              v69 = (void *)(v51 + 24 * v16);
              v69[4] = v55;
              v69[5] = v56;
              v69[6] = v67;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_71();
                sub_25747210C();
                uint64_t v18 = v73;
              }
              OUTLINED_FUNCTION_95();
              unint64_t v10 = *(void *)(v18 + 16);
              unint64_t v70 = *(void *)(v18 + 24);
              if (v10 >= v70 >> 1)
              {
                OUTLINED_FUNCTION_61(v70);
                OUTLINED_FUNCTION_71();
                sub_25747210C();
                uint64_t v18 = v74;
              }
              *(void *)(v18 + 16) = v10 + 1;
              *(void *)(v18 + 8 * v10 + 32) = v66;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              uint64_t v50 = v135;
              if (v50 == MEMORY[0x25A2B8500](a4, v16 + 1))
              {
                swift_bridgeObjectRelease();
                goto LABEL_56;
              }
              break;
            case 3:
              v136 = 0;
              *(void *)&long long v137 = 0xE000000000000000;
              sub_2576A7810();
              sub_2576A8730();
              OUTLINED_FUNCTION_110();
              OUTLINED_FUNCTION_60();
              goto LABEL_107;
            default:
              uint64_t v57 = *(void *)(v16 + 16);
              sub_2576A7810();
              if (!v57) {
                goto LABEL_113;
              }
              sub_2576A7810();
              unint64_t v58 = sub_25747588C(v54, v5);
              if ((v59 & 1) == 0)
              {
                swift_bridgeObjectRelease();
LABEL_113:
                v136 = (const char *)v54;
                *(void *)&long long v137 = v5;
                goto LABEL_118;
              }
              uint64_t v60 = *(void *)(v16 + 56);
              goto LABEL_46;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x263F8EE78];
      uint64_t v51 = MEMORY[0x263F8EE78];
      unint64_t v16 = v134;
LABEL_56:
      v136 = 0;
      *(void *)&long long v137 = 0;
      Array<A>.resolve(descriptor:)((long long *)&v136, v18);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
      *(void *)&long long v137 = sub_2576A77E0();
      uint64_t v75 = sub_25746DD2C(v51, sub_2574E71F4, &qword_26A001040, &unk_26A000F18);
      uint64_t v76 = swift_bridgeObjectRelease();
      v136 = (const char *)v75;
      sub_257470688(v76);
      unint64_t v10 = (unint64_t)v136;
      uint64_t v77 = v137;
      OUTLINED_FUNCTION_98();
      uint64_t v8 = v78;
      uint64_t v18 = v79;
      unint64_t v5 = sub_25746EA50(v10);
      sub_25746EA50(v8);
      uint64_t v80 = *(void *)(v16 + 16);
      uint64_t v81 = *(void *)(v132 + 16);
      uint64_t v50 = v80 + v81;
      if (__OFADD__(v80, v81)) {
        goto LABEL_99;
      }
      if (v50 < 0) {
        goto LABEL_100;
      }
      unint64_t v122 = v10;
      unint64_t v10 = v5 >> 62;
      uint64_t v121 = v77;
      if (v5 >> 62) {
        goto LABEL_101;
      }
      uint64_t v82 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        if (v82 < v50)
        {
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_106:
          v136 = 0;
          *(void *)&long long v137 = 0xE000000000000000;
          sub_2576A7810();
          sub_2576A8730();
          OUTLINED_FUNCTION_110();
          OUTLINED_FUNCTION_60();
LABEL_107:
          sub_2576A7B00();
          sub_2576A7B00();
          OUTLINED_FUNCTION_110();
          BYTE4(v142) = 9;
          OUTLINED_FUNCTION_33();
          sub_25746BE6C();
        }
        if ((v5 & 0xC000000000000001) != 0 && v50)
        {
          type metadata accessor for TensorRepresentation();
          uint64_t v83 = 0;
          do
          {
            uint64_t v84 = v83 + 1;
            sub_2576A87B0();
            uint64_t v83 = v84;
          }
          while (v50 != v84);
        }
        uint64_t v120 = v8;
        if (v10)
        {
          sub_2576A7810();
          sub_2576A8C00();
          unint64_t v10 = v85;
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v10 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
          sub_2576A7810();
        }
        uint64_t v119 = v18;
        sub_25746EC5C();
        uint64_t v130 = *a3;
        uint64_t v86 = *(void *)(v126 + 16);
        swift_bridgeObjectRetain_n();
        uint64_t v8 = v133;
        uint64_t v50 = sub_2576A7E00();
        swift_bridgeObjectRelease();
        uint64_t v135 = v50;
        if (v50 == MEMORY[0x25A2B8500](v86, v8))
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = MEMORY[0x263F8EE78];
          uint64_t v18 = MEMORY[0x263F8EE78];
          goto LABEL_94;
        }
        uint64_t v131 = v86 + 32;
        unint64_t v5 = MEMORY[0x263F8EE78];
        uint64_t v18 = MEMORY[0x263F8EE78];
LABEL_71:
        uint64_t v87 = sub_2576A7EC0();
        sub_2576A7E40();
        if (v87) {
          break;
        }
LABEL_98:
        sub_2576A87C0();
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        sub_2576A7810();
        uint64_t v118 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
        if (v118 < 0) {
          goto LABEL_104;
        }
        sub_2576A7810();
        uint64_t v82 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
      }
      OUTLINED_FUNCTION_77();
      uint64_t v89 = v88[1];
      uint64_t v90 = v88[2];
      unint64_t v10 = v88[3];
      uint64_t v91 = v88[4];
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      MEMORY[0x25A2B8510](&v135, v86, v8);
      swift_bridgeObjectRelease();
      switch(v87)
      {
        case 1:
          v95 = &v146;
          goto LABEL_78;
        case 2:
          v95 = &v144;
LABEL_78:
          uint64_t v96 = *(v95 - 32);
          if (!*(void *)(v96 + 16)) {
            goto LABEL_90;
          }
          swift_bridgeObjectRetain_n();
          unint64_t v92 = sub_25747588C(v89, v90);
          if ((v97 & 1) == 0) {
            goto LABEL_91;
          }
          uint64_t v94 = *(void *)(v96 + 56);
          goto LABEL_81;
        case 3:
          goto LABEL_106;
        default:
          if (*(void *)(v16 + 16))
          {
            swift_bridgeObjectRetain_n();
            unint64_t v92 = sub_25747588C(v89, v90);
            if (v93)
            {
              uint64_t v94 = *(void *)(v16 + 56);
LABEL_81:
              uint64_t v98 = *(void *)(v94 + 8 * v92);
              swift_retain();
              swift_bridgeObjectRelease_n();
              uint64_t v99 = *(void *)(v98 + 16);
              sub_2576A7810();
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_71();
                sub_257472200();
                uint64_t v18 = v103;
              }
              unint64_t v16 = *(void *)(v18 + 16);
              unint64_t v100 = *(void *)(v18 + 24);
              uint64_t v8 = v16 + 1;
              if (v16 >= v100 >> 1)
              {
                OUTLINED_FUNCTION_61(v100);
                OUTLINED_FUNCTION_71();
                sub_257472200();
                uint64_t v18 = v104;
              }
              *(void *)(v18 + 16) = v8;
              v101 = (void *)(v18 + 24 * v16);
              v101[4] = v10;
              v101[5] = v91;
              v101[6] = v99;
              swift_retain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                OUTLINED_FUNCTION_109();
                sub_25747210C();
                unint64_t v5 = v105;
              }
              OUTLINED_FUNCTION_95();
              unint64_t v10 = *(void *)(v5 + 16);
              unint64_t v102 = *(void *)(v5 + 24);
              if (v10 >= v102 >> 1)
              {
                OUTLINED_FUNCTION_61(v102);
                OUTLINED_FUNCTION_109();
                sub_25747210C();
                unint64_t v5 = v106;
              }
              *(void *)(v5 + 16) = v10 + 1;
              *(void *)(v5 + 8 * v10 + 32) = v98;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
            }
            else
            {
LABEL_91:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
          }
          else
          {
LABEL_90:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v50 = v135;
          if (v50 != MEMORY[0x25A2B8500](v86, v8)) {
            goto LABEL_71;
          }
          swift_bridgeObjectRelease();
          break;
      }
LABEL_94:
      uint64_t v134 = _s9OperationCMa();
      v136 = 0;
      *(void *)&long long v137 = 0;
      Array<A>.resolve(descriptor:)((long long *)&v136, v5);
      swift_bridgeObjectRelease();
      *(void *)&long long v137 = sub_2576A77E0();
      uint64_t v107 = sub_25746DD2C(v18, sub_2574E71F4, &qword_26A001040, &unk_26A000F18);
      uint64_t v108 = swift_bridgeObjectRelease();
      v136 = (const char *)v107;
      sub_257470688(v108);
      swift_bridgeObjectRelease();
      v109 = v136;
      uint64_t v110 = v137;
      uint64_t v111 = *(void *)(v126 + 16);
      uint64_t v112 = *(void *)(v126 + 24);
      v113 = (void *)swift_allocObject();
      v113[2] = v124;
      v113[3] = v123;
      v113[4] = v128;
      v113[5] = v126;
      v113[6] = v125;
      v113[7] = v127;
      v113[8] = v111;
      v113[9] = v112;
      v113[10] = v109;
      v113[11] = v110;
      v113[12] = v122;
      v113[13] = v121;
      v136 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/ComputeFunction/ComputeFunction+Types.swift";
      long long v137 = xmmword_2576AC3C0;
      long long v138 = xmmword_2576AC3D0;
      v139 = "init(inputs:differentiableInputs:outputs:creationSite:backward:)";
      uint64_t v140 = 64;
      __int16 v141 = 2;
      sub_2576A7810();
      sub_2576A7810();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v114 = sub_257602BA8();
      MEMORY[0x270FA5388](v114);
      uint64_t v115 = sub_25746F16C(v120, v119, (uint64_t (*)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))sub_257476C70);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v116 = sub_25746DA8C(v115, sub_2574E71D4, &unk_26A000F50, &unk_26A000F40);
      swift_bridgeObjectRelease();
      sub_257602C14(v116);
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  (*(void (**)(uint64_t))(*(void *)v11 + 88))(a1);
  uint64_t v14 = ((uint64_t (*)(void))sub_25746DA8C)();
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_25746E8A8(v14);
  OUTLINED_FUNCTION_37(v15, (uint64_t)&v145);
  unint64_t v16 = _s9IOMappingVMa();
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_2576A7E00();
  swift_bridgeObjectRelease();
  uint64_t v135 = v17;
  if (v17 == MEMORY[0x25A2B8500](a4, v16))
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = MEMORY[0x263F8EE78];
    unint64_t v5 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v134 = a4 + 32;
    uint64_t v18 = MEMORY[0x263F8EE78];
    unint64_t v5 = MEMORY[0x263F8EE78];
    unint64_t v133 = v16;
    while (2)
    {
      uint64_t v50 = sub_2576A7EC0();
      sub_2576A7E40();
      if ((v50 & 1) == 0)
      {
        sub_2576A87C0();
        __break(1u);
LABEL_97:
        sub_2576A87C0();
        __break(1u);
        goto LABEL_98;
      }
      char v19 = (void *)(v134 + 48 * v17);
      uint64_t v20 = *(unsigned __int8 *)v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      uint64_t v23 = v19[3];
      uint64_t v24 = v19[4];
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      MEMORY[0x25A2B8510](&v135, a4, v16);
      swift_bridgeObjectRelease();
      switch(v20)
      {
        case 1:
          OUTLINED_FUNCTION_73();
          if (!v50) {
            goto LABEL_111;
          }
          sub_2576A7810();
          unint64_t v25 = sub_25747588C(v21, v22);
          if (v28) {
            goto LABEL_21;
          }
          swift_bridgeObjectRelease();
LABEL_111:
          v136 = (const char *)v21;
          *(void *)&long long v137 = v22;
          goto LABEL_118;
        case 2:
          OUTLINED_FUNCTION_73();
          if (!v50) {
            goto LABEL_109;
          }
          sub_2576A7810();
          unint64_t v25 = sub_25747588C(v21, v22);
          if (v27) {
            goto LABEL_21;
          }
          swift_bridgeObjectRelease();
LABEL_109:
          v136 = (const char *)v21;
          *(void *)&long long v137 = v22;
          goto LABEL_115;
        case 3:
          goto LABEL_106;
        default:
          OUTLINED_FUNCTION_73();
          if (!v50) {
            goto LABEL_108;
          }
          sub_2576A7810();
          unint64_t v25 = sub_25747588C(v21, v22);
          if ((v26 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_108:
            v136 = (const char *)v21;
            *(void *)&long long v137 = v22;
LABEL_118:
            OUTLINED_FUNCTION_46();
            OUTLINED_FUNCTION_33();
LABEL_119:
            sub_25746BF88();
          }
LABEL_21:
          uint64_t v29 = *(void *)(*(void *)(v20 + 56) + 8 * v25);
          swift_retain();
          swift_bridgeObjectRelease_n();
          uint64_t v30 = *(void *)(v29 + 16);
          sub_2576A7810();
          swift_retain();
          uint64_t v31 = v23;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_109();
            sub_257472200();
            unint64_t v5 = v36;
          }
          unint64_t v10 = *(void *)(v5 + 16);
          unint64_t v32 = *(void *)(v5 + 24);
          if (v10 >= v32 >> 1)
          {
            OUTLINED_FUNCTION_61(v32);
            OUTLINED_FUNCTION_109();
            sub_257472200();
            unint64_t v5 = v37;
          }
          *(void *)(v5 + 16) = v10 + 1;
          char v33 = (void *)(v5 + 24 * v10);
          v33[4] = v31;
          v33[5] = v24;
          v33[6] = v30;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_71();
            sub_25747210C();
            uint64_t v18 = v38;
          }
          unint64_t v16 = v133;
          unint64_t v35 = *(void *)(v18 + 16);
          unint64_t v34 = *(void *)(v18 + 24);
          uint64_t v8 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            OUTLINED_FUNCTION_61(v34);
            OUTLINED_FUNCTION_71();
            sub_25747210C();
            uint64_t v18 = v39;
          }
          *(void *)(v18 + 16) = v8;
          *(void *)(v18 + 8 * v35 + 32) = v29;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v17 = v135;
          if (v17 != MEMORY[0x25A2B8500](a4, v16)) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  v136 = 0;
  *(void *)&long long v137 = 0;
  Array<A>.resolve(descriptor:)((long long *)&v136, v18);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  *(void *)&long long v137 = sub_2576A77E0();
  uint64_t v40 = sub_25746DD2C(v5, sub_2574E71F4, &qword_26A001040, &unk_26A000F18);
  uint64_t v41 = swift_bridgeObjectRelease();
  v136 = (const char *)v40;
  sub_257470688(v41);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_98();
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v42);
  type metadata accessor for TensorRepresentation();
  swift_getKeyPath();
  swift_retain();
  uint64_t v43 = sub_2576A7810();
  uint64_t v44 = sub_25746EB00(v43);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E10);
  *(void *)(swift_allocObject() + 16) = v44;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v45 = sub_25746E9B4();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v127 + 96))(v45);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746D720(uint64_t a1)
{
  return sub_25746DA8C(a1, sub_2574E71D4, &unk_26A000F50, &qword_26A000F40);
}

uint64_t sub_25746D748(uint64_t a1)
{
  return sub_25746DD2C(a1, sub_2574E71F4, &unk_26A001040, &unk_26A000F18);
}

uint64_t sub_25746D770(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_2576A80E0();
      sub_2576A88A0();
      OUTLINED_FUNCTION_105();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

#error "25746D88C: call analysis failed (funcsize=71)"

#error "25746DA1C: call analysis failed (funcsize=76)"

uint64_t sub_25746DA64(uint64_t a1)
{
  return sub_25746DA8C(a1, sub_2574E72D4, &unk_26A000F40, &unk_26A000F50);
}

#error "25746DAFC: call analysis failed (funcsize=71)"

uint64_t sub_25746DBA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E73D4();
    uint64_t v3 = v14;
    uint64_t v5 = a1 + 56;
    do
    {
      uint64_t v6 = *(void *)(v5 - 8);
      OUTLINED_FUNCTION_70();
      OUTLINED_FUNCTION_102();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F88);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_103();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E73D4();
        uint64_t v3 = v14;
      }
      OUTLINED_FUNCTION_45();
      if (v7)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E73D4();
        uint64_t v3 = v14;
      }
      *(void *)(v3 + 16) = v6;
      uint64_t v8 = v3 + 40 * v1;
      *(_DWORD *)(v8 + 32) = v10;
      *(void *)(v8 + 40) = v11;
      *(_OWORD *)(v8 + 48) = v12;
      *(void *)(v8 + 64) = v13;
      v5 += 40;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_25746DD04(uint64_t a1)
{
  return sub_25746DD2C(a1, sub_2574E7734, &unk_26A000F18, &qword_26A001040);
}

#error "25746DDA8: call analysis failed (funcsize=78)"

uint64_t sub_25746DE64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 4;
      sub_2576A7FE0();
      sub_2576A88A0();
      OUTLINED_FUNCTION_105();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_25746DEFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7A14();
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v8;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001098);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010A0);
      OUTLINED_FUNCTION_75();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7A14();
        uint64_t v2 = v8;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7A14();
        uint64_t v2 = v8;
      }
      *(void *)(v2 + 16) = v5 + 1;
      *(_OWORD *)(v2 + 16 * v5 + 32) = v7;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25746E01C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7E58();
    uint64_t v2 = v13;
    uint64_t v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v5 = *(v4 - 3);
      uint64_t v6 = *v4;
      OUTLINED_FUNCTION_70();
      swift_unknownObjectRetain_n();
      swift_retain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E60);
      swift_dynamicCast();
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7E58();
        uint64_t v2 = v13;
      }
      OUTLINED_FUNCTION_45();
      if (v7)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7E58();
        uint64_t v2 = v13;
      }
      *(void *)(v2 + 16) = v5;
      uint64_t v8 = v2 + 40 * v6;
      *(void *)(v8 + 32) = v10;
      *(_OWORD *)(v8 + 40) = v11;
      *(_OWORD *)(v8 + 56) = v12;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

#error "25746E290: call analysis failed (funcsize=74)"

void sub_25746E2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  OUTLINED_FUNCTION_50();
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v21 = v19;
    uint64_t v27 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7ED8();
    uint64_t v22 = v27;
    do
    {
      uint64_t v23 = *(void *)(v21 + 48);
      uint64_t v24 = *(void *)(v21 + 56);
      char v25 = *(unsigned char *)(v21 + 64);
      sub_2576A7810();
      sub_257476DB4(v23, v24, v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EE0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EE8);
      OUTLINED_FUNCTION_75();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7ED8();
        uint64_t v22 = v27;
      }
      if (*(void *)(v22 + 16) >= *(void *)(v22 + 24) >> 1)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7ED8();
        uint64_t v22 = v27;
      }
      OUTLINED_FUNCTION_67();
      *(unsigned char *)(v26 + 64) = a19;
      --v20;
    }
    while (v20);
  }
  OUTLINED_FUNCTION_49();
}

void sub_25746E400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  OUTLINED_FUNCTION_28();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v17;
    uint64_t v26 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7714();
    uint64_t v20 = v26;
    uint64_t v21 = (uint64_t *)(v19 + 56);
    do
    {
      uint64_t v22 = *(v21 - 2);
      uint64_t v23 = *v21;
      OUTLINED_FUNCTION_70();
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F08);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_103();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7714();
        uint64_t v20 = v26;
      }
      OUTLINED_FUNCTION_45();
      if (v24)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7714();
        uint64_t v20 = v26;
      }
      v21 += 4;
      *(void *)(v20 + 16) = v22;
      char v25 = (void *)(v20 + 32 * v23);
      v25[4] = a14;
      v25[5] = a15;
      v25[6] = a16;
      v25[7] = a17;
      --v18;
    }
    while (v18);
  }
  OUTLINED_FUNCTION_27();
}

void sub_25746E524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  OUTLINED_FUNCTION_50();
  uint64_t v20 = v19[2];
  if (v20)
  {
    uint64_t v21 = v19;
    uint64_t v27 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7F78();
    uint64_t v22 = v27;
    do
    {
      uint64_t v23 = v21[6];
      uint64_t v24 = v21[7];
      unint64_t v25 = v21[8];
      sub_2576A7810();
      sub_257476E64(v23, v24, v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001018);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001020);
      OUTLINED_FUNCTION_75();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7F78();
        uint64_t v22 = v27;
      }
      if (*(void *)(v22 + 16) >= *(void *)(v22 + 24) >> 1)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7F78();
        uint64_t v22 = v27;
      }
      OUTLINED_FUNCTION_67();
      *(void *)(v26 + 64) = a19;
      --v20;
    }
    while (v20);
  }
  OUTLINED_FUNCTION_49();
}

void sub_25746E648(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7FB8();
    uint64_t v3 = v10;
    uint64_t v4 = a1 + 48;
    do
    {
      sub_2576A7810();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FE8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FF0);
      OUTLINED_FUNCTION_75();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7FB8();
        uint64_t v3 = v10;
      }
      unint64_t v5 = *(void *)(v3 + 16);
      if (v5 >= *(void *)(v3 + 24) >> 1)
      {
        OUTLINED_FUNCTION_32();
        sub_2574E7FB8();
        uint64_t v3 = v10;
      }
      v4 += 24;
      *(void *)(v3 + 16) = v5 + 1;
      uint64_t v6 = v3 + 24 * v5;
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(_WORD *)(v6 + 48) = v9;
      --v1;
    }
    while (v1);
  }
  OUTLINED_FUNCTION_85();
}

uint64_t sub_25746E770(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_10();
    sub_2574E7FF8();
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v14;
    do
    {
      sub_257476E94(v4, (uint64_t)v10, &qword_26A000F68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E38);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_19();
        sub_2574E7FF8();
        uint64_t v2 = v14;
      }
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >= *(void *)(v2 + 24) >> 1)
      {
        OUTLINED_FUNCTION_106();
        sub_2574E7FF8();
        uint64_t v2 = v14;
      }
      *(void *)(v2 + 16) = v5 + 1;
      uint64_t v6 = (_OWORD *)(v2 + 48 * v5);
      long long v7 = v11;
      long long v8 = v13;
      v6[3] = v12;
      v6[4] = v8;
      v6[2] = v7;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25746E8A8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0035D0);
    uint64_t v1 = sub_2576A8C50();
  }
  else
  {
    uint64_t v1 = MEMORY[0x263F8EE80];
  }
  uint64_t v4 = v1;
  uint64_t v2 = sub_2576A7810();
  sub_2574768C0(v2, 1, &v4);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_25746E954(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for TensorHandle();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  sub_2576139A8();
  *a2 = v4;
}

uint64_t sub_25746E9B4()
{
  uint64_t v1 = sub_2576A8A10();
  if (v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
  }
  return v1;
}

uint64_t sub_25746EA50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v4 = a1 + 48;
    do
    {
      v4 += 24;
      swift_retain();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_25746EB00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v3 = a1 + 48;
    do
    {
      v3 += 24;
      sub_2576A7810();
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      swift_bridgeObjectRelease();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      --v1;
    }
    while (v1);
    uint64_t v4 = v6;
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v4;
}

void sub_25746EC14()
{
}

void sub_25746EC2C()
{
}

void sub_25746EC44()
{
}

void sub_25746EC5C()
{
  OUTLINED_FUNCTION_81();
  uint64_t v1 = v0;
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  if ((v2 & 1) == 0) {
    goto LABEL_2;
  }
  sub_2576A8FA0();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (__OFSUB__(v3 >> 1, v5))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v11 != (v3 >> 1) - v5)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v1(v9, v7, v5, v3);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_unknownObjectRelease();
  }
LABEL_9:
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_89();
}

uint64_t sub_25746ED4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (!a4 || !a7) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  if (a8 && a9)
  {
    uint64_t v48 = a11;
    uint64_t v49 = a12;
    uint64_t v45 = a9;
    uint64_t v46 = a10;
    uint64_t v17 = _s9IOMappingVMa();
    swift_retain();
    uint64_t v47 = v17;
    sub_2576A7F70();
    uint64_t v18 = sub_2576A8640();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x25A2B8250](v52, v18, WitnessTable);
    uint64_t v20 = swift_unknownObjectRelease();
    long long v50 = v52[0];
    long long v51 = v52[1];
    uint64_t v21 = MEMORY[0x270FA5388](v20);
    uint64_t v40 = a13;
    uint64_t v41 = a14;
    uint64_t v44 = a14;
    uint64_t v42 = a1;
    MEMORY[0x270FA5388](v21);
    v38[2] = a13;
    v38[3] = a14;
    v39[0] = sub_257476F50;
    v39[1] = v22;
    uint64_t v23 = sub_2576A8BE0();
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001040);
    uint64_t v25 = swift_getWitnessTable();
    uint64_t v27 = sub_25761B5C4((void (*)(uint64_t, void (*)(char *, uint64_t, uint64_t)))sub_257476F5C, (uint64_t)v38, v23, v24, MEMORY[0x263F8E628], v25, MEMORY[0x263F8E658], v26);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    *((void *)&v52[0] + 1) = sub_2576A77E0();
    uint64_t v28 = sub_25746DD2C(v27, sub_2574E71F4, &qword_26A001040, &unk_26A000F18);
    uint64_t v29 = swift_bridgeObjectRelease();
    *(void *)&v52[0] = v28;
    sub_257470688(v29);
    sub_25746F2E8(*(uint64_t *)&v52[0]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = sub_257602B58();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = swift_bridgeObjectRelease();
    *(void *)&v52[0] = a8;
    MEMORY[0x270FA5388](v33);
    v39[2] = a13;
    v39[3] = v44;
    uint64_t v40 = v48;
    uint64_t v41 = v49;
    uint64_t v42 = v30;
    uint64_t v43 = v32;
    uint64_t v34 = sub_2576A7F50();
    uint64_t v35 = swift_getWitnessTable();
    uint64_t v15 = sub_257495BE0((void (*)(char *, uint64_t))sub_257476FC8, (uint64_t)v39, v34, (uint64_t)&type metadata for InputGradient, MEMORY[0x263F8E628], v35, MEMORY[0x263F8E658], v36);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v15;
}

unint64_t sub_25746F100(unint64_t result, uint64_t a2, uint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > result)
  {
    uint64_t v3 = *(void *)(a2 + 24);
    sub_2576A7810();
    swift_retain();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_25746F16C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_2574E72D4();
  uint64_t v4 = v21;
  uint64_t v5 = *(void *)(a1 + 16);
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v18 = v5;
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      uint64_t v10 = *(v7 - 2);
      sub_2576A7810();
      swift_retain();
      uint64_t v11 = a3(&v20, v6, v10, v9, v8);
      uint64_t v13 = v12;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v14 = v20;
      uint64_t v21 = v4;
      unint64_t v15 = *(void *)(v4 + 16);
      if (v15 >= *(void *)(v4 + 24) >> 1)
      {
        sub_2574E72D4();
        uint64_t v4 = v21;
      }
      ++v6;
      v7 += 3;
      *(void *)(v4 + 16) = v15 + 1;
      unint64_t v16 = (void *)(v4 + 24 * v15);
      v16[4] = v11;
      v16[5] = v13;
      v16[6] = v14;
    }
    while (v18 != v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_25746F2E8(uint64_t a1)
{
  return a1;
}

void sub_25746F368(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  unint64_t v4 = *(void *)(a1 + 40);
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v4 >= *(void *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain_n();
  sub_2576139A8();
  if (v4 < *(void *)(a3 + 16))
  {
    uint64_t v7 = *(void *)(a3 + 24 * v4 + 48);
    type metadata accessor for TensorHandle();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    swift_retain_n();
    sub_2576139A8();
    swift_retain();
    uint64_t v9 = sub_2574E8C6C();
    uint64_t v11 = v10;
    swift_release();
    swift_release();
    sub_257613A00();
    swift_release();
    *a4 = v8;
    a4[1] = v9;
    a4[2] = v11;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_25746F470(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_257476E94(a5 + 168, (uint64_t)v26, (uint64_t *)&unk_26A004250);
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v24);
  swift_release();
  uint64_t v13 = v25;
  swift_retain();
  sub_2574718B0((uint64_t)v24);
  type metadata accessor for TensorRepresentation();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = _s9OperationCMa();
  swift_retain();
  swift_retain();
  uint64_t WitnessTable = (uint64_t (**)(void, void))swift_getWitnessTable();
  v24[0] = 1;
  uint64_t v17 = sub_257615F14(a6, a2, (uint64_t)v26, 0x100000000, a7, v13, v14, v15, WitnessTable);
  uint64_t v18 = swift_retain();
  id v19 = sub_2576140FC(v18, a5, 0, 0);
  uint64_t v21 = v20;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2576141E0(v17, v17, (uint64_t)v19, v21);
  swift_unknownObjectRelease();
  type metadata accessor for TensorHandle();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v17;
  swift_retain();
  sub_2576A7810();
  sub_2576139A8();
  swift_release();
  *a1 = v22;
  return a3;
}

uint64_t sub_25746F664()
{
  return sub_2576A90A0();
}

uint64_t sub_25746F690()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746F6EC()
{
  return sub_2576A90A0();
}

uint64_t sub_25746F718()
{
  OUTLINED_FUNCTION_66();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_30();
      break;
    case 2:
      OUTLINED_FUNCTION_21();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746F7B4()
{
  OUTLINED_FUNCTION_65();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_97();
      break;
    case 2:
      OUTLINED_FUNCTION_30();
      break;
    case 3:
      OUTLINED_FUNCTION_21();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746F840()
{
  OUTLINED_FUNCTION_72();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_97();
      break;
    case 2:
      OUTLINED_FUNCTION_30();
      break;
    case 3:
      OUTLINED_FUNCTION_21();
      break;
    case 4:
      OUTLINED_FUNCTION_53();
      break;
    case 5:
      OUTLINED_FUNCTION_52();
      break;
    case 6:
      OUTLINED_FUNCTION_17();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746F8EC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746F9D4()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FA74(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      OUTLINED_FUNCTION_17();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FB24()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FB84()
{
  return sub_2576A90A0();
}

uint64_t sub_25746FBB0()
{
  return sub_2576A90A0();
}

uint64_t sub_25746FBDC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FC2C()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FC84()
{
  return sub_2576A90B0();
}

uint64_t sub_25746FCAC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FDAC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FECC(uint64_t a1, char a2)
{
  sub_2574DFF00(a2);
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FF20()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FF7C()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25746FFEC()
{
  return sub_2576A78E0();
}

uint64_t sub_257470008()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470090()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25747015C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 5:
      OUTLINED_FUNCTION_65();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470238()
{
  return sub_2576A90A0();
}

uint64_t sub_2574702B4()
{
  return sub_2576A90D0();
}

uint64_t sub_2574702E0()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470320()
{
  return sub_2576A90A0();
}

uint64_t sub_25747034C()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574703AC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470438()
{
  OUTLINED_FUNCTION_66();
  switch(v0)
  {
    case 1:
      OUTLINED_FUNCTION_30();
      break;
    case 2:
      OUTLINED_FUNCTION_53();
      break;
    case 3:
      OUTLINED_FUNCTION_52();
      break;
    case 4:
      OUTLINED_FUNCTION_72();
      break;
    case 5:
      OUTLINED_FUNCTION_21();
      break;
    case 6:
      OUTLINED_FUNCTION_17();
      break;
    default:
      break;
  }
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574704DC()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470534()
{
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257470648()
{
  return sub_2576A90A0();
}

uint64_t sub_257470670()
{
  return sub_2576A78E0();
}

#error "257470758: call analysis failed (funcsize=80)"

void sub_2574707CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_36();
  if (v19)
  {
    uint64_t v20 = v14;
    sub_2576A7810();
    OUTLINED_FUNCTION_55();
    do
    {
      uint64_t v21 = (uint64_t)*(v16 - 2);
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(*(void *)(v20 + 8) + 16);
      swift_bridgeObjectRetain_n();
      id v31 = v22;
      if (v23)
      {
        OUTLINED_FUNCTION_47();
        uint64_t v24 = MEMORY[0x263F8EE78];
        if (v25) {
          OUTLINED_FUNCTION_20();
        }
      }
      else
      {
        uint64_t v24 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26();
      OUTLINED_FUNCTION_96();
      OUTLINED_FUNCTION_9();
      OUTLINED_FUNCTION_22();
      if (v26)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        sub_2576A9020();
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E40);
      if (OUTLINED_FUNCTION_23())
      {
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_43();
        if (!v28) {
          goto LABEL_24;
        }
        uint64_t v21 = v27;
      }
      if (v18)
      {
        OUTLINED_FUNCTION_74();
        *(void *)(v24 + 8 * v21) = v17;
      }
      else
      {
        OUTLINED_FUNCTION_1_2();
        if (v26) {
          goto LABEL_23;
        }
        OUTLINED_FUNCTION_63(v29);
      }
      ++v15;
      uint64_t v20 = a11;
      *(void *)(a11 + 8) = a14;

      OUTLINED_FUNCTION_88();
      swift_bridgeObjectRelease();
      v16 += 3;
      OUTLINED_FUNCTION_91();
    }
    while (!v28);
    OUTLINED_FUNCTION_4_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_0();
  }
}

void sub_257470930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_36();
  if (v17)
  {
    uint64_t v18 = v14;
    sub_2576A7810();
    OUTLINED_FUNCTION_55();
    do
    {
      uint64_t v19 = *(void *)(v16 - 16);
      uint64_t v20 = *(void *)(*(void *)(v18 + 8) + 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      if (v20)
      {
        OUTLINED_FUNCTION_94();
        if (v21) {
          OUTLINED_FUNCTION_20();
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26();
      uint64_t v22 = a14;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a14 = *(void *)(v18 + 8);
      *(void *)(v18 + 8) = 0x8000000000000000;
      OUTLINED_FUNCTION_94();
      OUTLINED_FUNCTION_22();
      if (v24)
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        sub_2576A9020();
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E40);
      if (OUTLINED_FUNCTION_23())
      {
        OUTLINED_FUNCTION_25();
        OUTLINED_FUNCTION_43();
        if (!v26) {
          goto LABEL_23;
        }
        uint64_t v18 = v25;
      }
      if (v19)
      {
        OUTLINED_FUNCTION_74();
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v18) = v22;
      }
      else
      {
        OUTLINED_FUNCTION_1_2();
        if (v24) {
          goto LABEL_22;
        }
        OUTLINED_FUNCTION_63(v27);
      }
      ++v15;
      v16 += 32;
      uint64_t v18 = a11;
      *(void *)(a11 + 8) = a14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_91();
    }
    while (!v26);
    OUTLINED_FUNCTION_4_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_0();
  }
}

void sub_257470ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_18();
  uint64_t v37 = *(void *)(*v15 + 16);
  if (v37)
  {
    uint64_t v16 = v15;
    uint64_t v17 = 0;
    uint64_t v18 = sub_2576A7810() + 64;
    do
    {
      uint64_t v20 = *(void *)(v18 - 32);
      uint64_t v19 = *(void *)(v18 - 24);
      OUTLINED_FUNCTION_31();
      swift_unknownObjectRetain_n();
      swift_retain_n();
      if (v14)
      {
        OUTLINED_FUNCTION_94();
        if (v21) {
          OUTLINED_FUNCTION_20();
        }
      }
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26();
      uint64_t v22 = a14;
      swift_isUniquelyReferenced_nonNull_native();
      a14 = v16[1];
      v16[1] = 0x8000000000000000;
      uint64_t v23 = v20;
      unint64_t v24 = OUTLINED_FUNCTION_94();
      if (__OFADD__(*(void *)(a14 + 16), (v25 & 1) == 0))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        sub_2576A9020();
        __break(1u);
        return;
      }
      unint64_t v26 = v24;
      char v27 = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E40);
      if (sub_2576A8AD0())
      {
        unint64_t v28 = OUTLINED_FUNCTION_25();
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_21;
        }
        unint64_t v26 = v28;
      }
      if (v27)
      {
        uint64_t v30 = *(void *)(a14 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v30 + 8 * v26) = v22;
      }
      else
      {
        OUTLINED_FUNCTION_93(a14 + 8 * (v26 >> 6));
        uint64_t v32 = (void *)(v31 + 16 * v26);
        *uint64_t v32 = v23;
        v32[1] = v19;
        *(void *)(*(void *)(a14 + 56) + 8 * v26) = v22;
        uint64_t v33 = *(void *)(a14 + 16);
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_20;
        }
        OUTLINED_FUNCTION_63(v35);
      }
      ++v17;
      uint64_t v16 = v15;
      uint64_t v14 = v15[1];
      v15[1] = a14;
      swift_release_n();
      swift_unknownObjectRelease_n();
      OUTLINED_FUNCTION_88();
      swift_bridgeObjectRelease();
      v18 += 40;
    }
    while (v37 != v17);
    OUTLINED_FUNCTION_4_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_4_0();
  }
}

#error "257470DA0: call analysis failed (funcsize=80)"

#error "257470EE4: call analysis failed (funcsize=80)"

void sub_257470F58()
{
  uint64_t v28 = *(void *)(*(void *)v0 + 16);
  if (v28)
  {
    uint64_t v1 = v0;
    uint64_t v2 = 0;
    uint64_t v3 = (char *)(sub_2576A7810() + 64);
    do
    {
      uint64_t v5 = *((void *)v3 - 4);
      uint64_t v4 = *((void *)v3 - 3);
      uint64_t v6 = *((void *)v3 - 2);
      uint64_t v7 = *((void *)v3 - 1);
      char v8 = *v3;
      uint64_t v9 = *(void *)(*(void *)(v1 + 8) + 16);
      sub_2576A7810();
      sub_257476DB4(v6, v7, v8);
      sub_2576A7810();
      sub_257476DB4(v6, v7, v8);
      sub_2576A7810();
      sub_257476DB4(v6, v7, v8);
      if (v9)
      {
        sub_25747588C(v5, v4);
        uint64_t v10 = MEMORY[0x263F8EE78];
        if (v11) {
          OUTLINED_FUNCTION_20();
        }
      }
      else
      {
        uint64_t v10 = MEMORY[0x263F8EE78];
      }
      uint64_t v30 = v7;
      uint64_t v31 = v6;
      char v29 = v8;
      sub_257476E0C(v6, v7, v8);
      swift_bridgeObjectRelease();
      sub_2575A0688(v2);
      uint64_t v12 = v10;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v13 = *(void *)(v1 + 8);
      uint64_t v14 = v1;
      *(void *)(v1 + 8) = 0x8000000000000000;
      unint64_t v15 = sub_25747588C(v5, v4);
      if (__OFADD__(*(void *)(v13 + 16), (v16 & 1) == 0))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        sub_2576A9020();
        __break(1u);
        return;
      }
      unint64_t v17 = v15;
      char v18 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E40);
      if (sub_2576A8AD0())
      {
        unint64_t v19 = sub_25747588C(v5, v4);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_22;
        }
        unint64_t v17 = v19;
      }
      if (v18)
      {
        uint64_t v21 = *(void *)(v13 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v21 + 8 * v17) = v12;
      }
      else
      {
        OUTLINED_FUNCTION_93(v13 + 8 * (v17 >> 6));
        uint64_t v23 = (uint64_t *)(v22 + 16 * v17);
        *uint64_t v23 = v5;
        v23[1] = v4;
        *(void *)(*(void *)(v13 + 56) + 8 * v17) = v12;
        uint64_t v24 = *(void *)(v13 + 16);
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_21;
        }
        *(void *)(v13 + 16) = v26;
        sub_2576A7810();
      }
      ++v2;
      v3 += 40;
      uint64_t v1 = v14;
      *(void *)(v14 + 8) = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_257476E0C(v31, v30, v29);
      sub_257476E0C(v31, v30, v29);
    }
    while (v28 != v2);
    OUTLINED_FUNCTION_85();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_85();
  }
}

uint64_t sub_257471204(uint64_t a1)
{
  if (a1 < 16) {
    return 0;
  }
  sub_2576A8730();
  return 0;
}

void sub_25747124C()
{
}

void sub_257471264()
{
}

uint64_t sub_2574712A0()
{
  return sub_2574716B0();
}

uint64_t sub_2574712E8()
{
  return sub_2574716B0();
}

void sub_257471330()
{
}

void sub_257471348(void (*a1)(uint64_t, uint64_t, char *))
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_257471E34(0, *(void *)(v3 + 16) + 1, 1, v3, &qword_26A001088, a1);
    uint64_t *v1 = v5;
  }
}

uint64_t sub_2574713AC()
{
  return sub_2574716B0();
}

void sub_2574713F4()
{
}

uint64_t sub_257471430()
{
  return sub_257471714((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2574726E8);
}

uint64_t sub_257471448()
{
  return sub_257471714((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2574725CC);
}

void sub_257471460()
{
}

uint64_t sub_25747149C()
{
  return sub_257471714((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_257472B00);
}

uint64_t sub_2574714B4()
{
  return sub_2574716B0();
}

void sub_2574714FC()
{
}

void sub_257471538()
{
  int v2 = OUTLINED_FUNCTION_69();
  *uint64_t v0 = v1;
  if (!v2)
  {
    OUTLINED_FUNCTION_58();
    sub_257471D54();
    *uint64_t v0 = v3;
  }
}

uint64_t sub_257471584()
{
  return sub_2574716B0();
}

uint64_t sub_2574715CC()
{
  return sub_2574716B0();
}

uint64_t sub_257471608()
{
  return sub_257471714((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_257472340);
}

uint64_t sub_257471620()
{
  return sub_2574716B0();
}

uint64_t sub_257471668()
{
  return sub_2574716B0();
}

uint64_t sub_2574716B0()
{
  uint64_t result = OUTLINED_FUNCTION_69();
  uint64_t *v1 = v2;
  if (!result)
  {
    OUTLINED_FUNCTION_58();
    uint64_t result = v0();
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_2574716FC()
{
  return sub_257471714((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2574730B0);
}

uint64_t sub_257471714(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

void sub_257471770()
{
}

void sub_257471788()
{
}

void sub_2574717C8()
{
}

void sub_257471810()
{
}

void sub_257471828()
{
  OUTLINED_FUNCTION_100();
  if (!(v6 ^ v7 | v5))
  {
    sub_257471E34(v4 > 1, v1, 1, v2, &qword_26A001088, v3);
    *uint64_t v0 = v8;
  }
}

void sub_257471868()
{
}

uint64_t sub_2574718B0(uint64_t a1)
{
  return a1;
}

void sub_257471904()
{
}

void sub_25747191C()
{
}

void sub_257471964()
{
}

void sub_2574719A0()
{
}

void sub_2574719B8()
{
}

void sub_2574719D0()
{
}

uint64_t sub_257471A0C(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_2576A7E70();
  }
  return result;
}

void sub_257471A38()
{
}

void sub_257471A50()
{
}

void sub_257471A98()
{
}

void sub_257471AD4()
{
  OUTLINED_FUNCTION_100();
  if (!(v3 ^ v4 | v2))
  {
    OUTLINED_FUNCTION_61(v1);
    sub_257471D54();
    *uint64_t v0 = v5;
  }
}

void sub_257471B14()
{
}

void sub_257471B5C()
{
}

void sub_257471B98()
{
}

void sub_257471BE0()
{
}

void sub_257471C28()
{
  OUTLINED_FUNCTION_101();
  if (!(v4 ^ v5 | v3)) {
    *uint64_t v0 = v1(v2 > 1);
  }
}

void sub_257471C70()
{
}

void sub_257471C88()
{
  OUTLINED_FUNCTION_101();
  if (!(v4 ^ v5 | v3)) {
    *uint64_t v0 = v1(v2 > 1);
  }
}

void sub_257471CC4()
{
}

void sub_257471CF8(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_257471D18()
{
}

void sub_257471D54()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_44();
  if (v6)
  {
    OUTLINED_FUNCTION_3_0();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_12();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_80();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(v9);
    uint64_t v10 = (char *)OUTLINED_FUNCTION_48();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_99((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  if (v3)
  {
    v2(v0 + 32, v4, v10 + 32);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_57();
    v1(v12);
  }
  OUTLINED_FUNCTION_89();
}

void sub_257471E14(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_257471E34(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, char *))
{
  if (a3)
  {
    OUTLINED_FUNCTION_3_0();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_12();
      if (v10)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  else
  {
    uint64_t v9 = a2;
  }
  uint64_t v12 = *(void *)(a4 + 16);
  if (v9 <= v12) {
    uint64_t v13 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v13 = v9;
  }
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v14 = (char *)OUTLINED_FUNCTION_48();
    size_t v15 = _swift_stdlib_malloc_size(v14);
    *((void *)v14 + 2) = v12;
    *((void *)v14 + 3) = 2 * ((uint64_t)(v15 - 32) / 8);
  }
  else
  {
    uint64_t v14 = (char *)MEMORY[0x263F8EE78];
  }
  char v16 = v14 + 32;
  if (a1)
  {
    a6(a4 + 32, v12, v16);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    sub_2574745E8(0, v12, v16, a4);
  }
}

void sub_257471F0C()
{
}

void sub_257471F40()
{
}

void sub_257471F74()
{
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (const void *)OUTLINED_FUNCTION_48();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_39(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_38();
    v1(v10);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_15();
    v0(v11);
  }
}

void sub_25747202C()
{
}

void sub_257472068()
{
}

void sub_25747209C()
{
}

void sub_2574720D8()
{
}

void sub_25747210C()
{
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (const void *)OUTLINED_FUNCTION_48();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_39(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_38();
    v1(v10);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_15();
    v0(v11);
  }
}

void sub_2574721C4()
{
}

void sub_257472200()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_44();
  if (v6)
  {
    OUTLINED_FUNCTION_3_0();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_12();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_80();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(v9);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_99((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  if (v3)
  {
    v2(v0 + 32, v4, v10 + 32);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_57();
    v1(v12);
  }
  OUTLINED_FUNCTION_89();
}

void sub_2574722C8()
{
}

void sub_257472304()
{
}

void sub_257472340()
{
  OUTLINED_FUNCTION_79();
  if (v2)
  {
    OUTLINED_FUNCTION_3_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_12();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_35();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EF0);
    uint64_t v5 = (void *)OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_78();
    sub_25760A2B8(v6, v7, v8);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_42();
    sub_257473A90(v9, v10, v11, v12);
  }
}

void sub_2574723E4()
{
}

void sub_257472418()
{
}

void sub_25747244C()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (void *)OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_51(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_38();
    v1(v9);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_15();
    v0(v10);
  }
  OUTLINED_FUNCTION_89();
}

void sub_2574724F4()
{
}

void sub_257472530()
{
}

void sub_257472564()
{
}

void sub_257472598()
{
}

void sub_2574725CC()
{
  OUTLINED_FUNCTION_79();
  if (v2)
  {
    OUTLINED_FUNCTION_3_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_12();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_35();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FC8);
    char v5 = (void *)OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_78();
    sub_25760A1F8(v6, v7, v8);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_42();
    sub_2574740CC(v9, v10, v11, v12);
  }
}

void sub_257472670()
{
}

void sub_2574726AC()
{
}

char *sub_2574726E8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F78);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 64);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  if (v5)
  {
    sub_25760A3DC((char *)(a4 + 32), v8, v12);
    *(void *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_257474294(0, v8, v12, a4);
  }
  return v10;
}

void sub_2574727D8()
{
}

void sub_257472800()
{
  OUTLINED_FUNCTION_6_0();
  if (v3)
  {
    OUTLINED_FUNCTION_3_0();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_12();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(v6);
    uint64_t v7 = (const void *)OUTLINED_FUNCTION_48();
    size_t v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_39(v8 - 32);
  }
  if (v1)
  {
    uint64_t v9 = OUTLINED_FUNCTION_38();
    v0(v9);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    sub_257474C48();
  }
}

void sub_2574728B8()
{
}

void sub_2574728F4()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_44();
  if (v6)
  {
    OUTLINED_FUNCTION_3_0();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_12();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_80();
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(v9);
    uint64_t v10 = (char *)OUTLINED_FUNCTION_48();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    OUTLINED_FUNCTION_99((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  if (v3)
  {
    v2(v0 + 32, v4, v10 + 32);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_57();
    v1(v12);
  }
  OUTLINED_FUNCTION_89();
}

void sub_2574729B4()
{
}

void sub_2574729F0(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_257472A10()
{
}

void sub_257472A44()
{
  OUTLINED_FUNCTION_6_0();
  if (v5)
  {
    OUTLINED_FUNCTION_3_0();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_12();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(v8);
    uint64_t v9 = (void *)swift_allocObject();
    size_t v10 = _swift_stdlib_malloc_size(v9);
    v9[2] = v3;
    v9[3] = 2 * v10 - 64;
  }
  if (v2)
  {
    uint64_t v11 = OUTLINED_FUNCTION_38();
    v1(v11);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_15();
    v0(v12);
  }
}

void sub_257472B00()
{
  OUTLINED_FUNCTION_79();
  if (v2)
  {
    OUTLINED_FUNCTION_3_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_12();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_35();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004610);
    char v5 = (void *)swift_allocObject();
    OUTLINED_FUNCTION_13(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_78();
    sub_25760A434(v6, v7, v8);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_42();
    sub_2574744E8(v9, v10, v11, v12);
  }
}

void sub_257472BB0()
{
}

void sub_257472BE4()
{
}

uint64_t sub_257472C20(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_64(a1, a2, a3, a4, &qword_26A001008, MEMORY[0x263F533A8], a7, (void (*)(unint64_t, uint64_t, unint64_t))sub_25760A6C0);
}

void sub_257472C54()
{
}

void sub_257472C88()
{
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (const void *)OUTLINED_FUNCTION_48();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_39(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_38();
    v1(v10);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_15();
    v0(v11);
  }
}

void sub_257472D40()
{
}

void sub_257472D74()
{
}

void sub_257472DB0()
{
}

void sub_257472DEC()
{
}

void sub_257472E20()
{
}

void sub_257472E48()
{
  OUTLINED_FUNCTION_79();
  if (v2)
  {
    OUTLINED_FUNCTION_3_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_12();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_35();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E68);
    char v5 = (void *)OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_78();
    sub_25760A570(v6, v7, v8);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_42();
    sub_257474D14(v9, v10, v11, v12);
  }
}

void sub_257472EEC()
{
}

void sub_257472F20()
{
}

void sub_257472F5C()
{
}

void sub_257472F90()
{
}

void sub_257472FC4()
{
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (const void *)OUTLINED_FUNCTION_48();
    size_t v9 = _swift_stdlib_malloc_size(v8);
    OUTLINED_FUNCTION_39(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = OUTLINED_FUNCTION_38();
    v1(v10);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v11 = OUTLINED_FUNCTION_15();
    v0(v11);
  }
}

void sub_25747307C()
{
}

void sub_2574730B0()
{
  OUTLINED_FUNCTION_79();
  if (v2)
  {
    OUTLINED_FUNCTION_3_0();
    if (v3 != v4)
    {
      OUTLINED_FUNCTION_12();
      if (v3)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_35();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001068);
    char v5 = (void *)OUTLINED_FUNCTION_54();
    OUTLINED_FUNCTION_13(v5);
  }
  if (v0)
  {
    char v6 = (char *)OUTLINED_FUNCTION_78();
    sub_25760A840(v6, v7, v8);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v9 = OUTLINED_FUNCTION_42();
    sub_257475138(v9, v10, v11, v12);
  }
}

void sub_257473154()
{
}

uint64_t sub_257473190(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return OUTLINED_FUNCTION_64(a1, a2, a3, a4, &qword_26A001000, MEMORY[0x263F53268], a7, (void (*)(unint64_t, uint64_t, unint64_t))sub_25760A6D8);
}

uint64_t sub_2574731C4(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), void (*a8)(unint64_t, uint64_t, unint64_t))
{
  if (a3)
  {
    OUTLINED_FUNCTION_3_0();
    if (v14 != v15)
    {
      OUTLINED_FUNCTION_12();
      if (v14)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v16 = *(void *)(a4 + 16);
  if (v13 <= v16) {
    uint64_t v17 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v17 = v13;
  }
  if (!v17)
  {
    uint64_t v21 = (const void *)MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v18 = *(void *)(a6(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (const void *)swift_allocObject();
  size_t v22 = _swift_stdlib_malloc_size(v21);
  if (!v19 || (v22 - v20 == 0x8000000000000000 ? (BOOL v23 = v19 == -1) : (BOOL v23 = 0), v23))
  {
LABEL_23:
    OUTLINED_FUNCTION_0_4();
    uint64_t result = sub_2576A8B50();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_99((uint64_t)(v22 - v20) / v19);
LABEL_18:
  uint64_t v24 = *(void *)(a6(0) - 8);
  unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v26 = (unint64_t)v21 + v25;
  if (a1)
  {
    a8(a4 + v25, v16, v26);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    sub_257475238(0, v16, v26, a4, a7);
  }
  return (uint64_t)v21;
}

void sub_2574733D8()
{
}

void sub_25747340C()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (void *)OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_51(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_38();
    v1(v9);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_15();
    v0(v10);
  }
  OUTLINED_FUNCTION_89();
}

void sub_2574734B4()
{
}

void sub_2574734E8()
{
}

void sub_257473524()
{
}

void sub_257473558()
{
}

void sub_25747358C()
{
}

void sub_2574735C0()
{
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_6_0();
  if (v4)
  {
    OUTLINED_FUNCTION_3_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_12();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_2_2();
    }
  }
  OUTLINED_FUNCTION_14();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(v7);
    char v8 = (void *)OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_51(v8);
  }
  if (v2)
  {
    uint64_t v9 = OUTLINED_FUNCTION_38();
    v1(v9);
    OUTLINED_FUNCTION_11();
  }
  else
  {
    uint64_t v10 = OUTLINED_FUNCTION_15();
    v0(v10);
  }
  OUTLINED_FUNCTION_89();
}

uint64_t sub_257473668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E28);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473780(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473878(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E38);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473998(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473A90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 240 * a1 + 32;
    unint64_t v6 = a3 + 240 * v4;
    if (v5 >= v6 || v5 + 240 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473B94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473D94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F88);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473EB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257473FB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FB8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_2574740CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_2574741D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 16 * a1 + 32;
  unint64_t v6 = a3 + 16 * v4;
  if (v5 >= v6 || v5 + 16 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_24();
  __break(1u);
  return result;
}

char *sub_257474294(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + (a1 << 6) + 32);
    unint64_t v6 = &__dst[64 * v4];
    if (v5 >= v6 || &v5[64 * v4] <= __dst)
    {
      memcpy(__dst, v5, v4 << 6);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_2576A8C60();
  __break(1u);
  return result;
}

void sub_257474388()
{
  OUTLINED_FUNCTION_104();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_40();
  if (v5) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 > v2;
  }
  if (!v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_16();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_92();
    return;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  OUTLINED_FUNCTION_24();
  __break(1u);
}

uint64_t sub_25747443C(uint64_t a1, uint64_t a2)
{
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 - a1 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_68();
  if (v7) {
    BOOL v8 = 0;
  }
  else {
    BOOL v8 = v6 > (unint64_t)v4;
  }
  if (!v8)
  {
    memcpy(v4, v3, v5);
    swift_bridgeObjectRelease();
    return v2;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_24();
  __break(1u);
  return result;
}

uint64_t sub_2574744E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 144 * a1 + 32;
    unint64_t v6 = a3 + 144 * v4;
    if (v5 >= v6 || v5 + 144 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

char *sub_2574745E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
  unint64_t v6 = &__dst[8 * v4];
  if (v5 >= v6 || &v5[8 * v4] <= __dst)
  {
    memcpy(__dst, v5, 8 * v4);
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  uint64_t result = (char *)OUTLINED_FUNCTION_24();
  __break(1u);
  return result;
}

uint64_t sub_2574746AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006410);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

void sub_2574747C4()
{
  OUTLINED_FUNCTION_104();
  uint64_t v5 = v4 - v0;
  if (__OFSUB__(v4, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  unint64_t v6 = v2 + 16 * v0 + 32;
  if (v6 >= v1 + 16 * v5 || v6 + 16 * v5 <= v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_16();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_92();
    return;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  OUTLINED_FUNCTION_24();
  __break(1u);
}

uint64_t sub_257474890(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

char *sub_257474988(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    unint64_t v6 = &__dst[32 * v4];
    if (v5 >= v6 || &v5[32 * v4] <= __dst)
    {
      memcpy(__dst, v5, 32 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_2576A8C60();
  __break(1u);
  return result;
}

void sub_257474A7C()
{
  OUTLINED_FUNCTION_104();
  if (__OFSUB__(v1, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v1 - v0 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_56();
  if (v5) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v4 > v2;
  }
  if (!v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_16();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_92();
    return;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  OUTLINED_FUNCTION_24();
  __break(1u);
}

uint64_t sub_257474B30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E78);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

void sub_257474C48()
{
  OUTLINED_FUNCTION_104();
  uint64_t v5 = v4 - v0;
  if (__OFSUB__(v4, v0))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  unint64_t v6 = v2 + 8 * v0 + 32;
  if (v6 >= v1 + 8 * v5 || v6 + 8 * v5 <= v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(v3);
    OUTLINED_FUNCTION_16();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_92();
    return;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  OUTLINED_FUNCTION_24();
  __break(1u);
}

char *sub_257474D14(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 176 * a1 + 32);
    unint64_t v6 = &__dst[176 * v4];
    if (v5 >= v6 || &v5[176 * v4] <= __dst)
    {
      memcpy(__dst, v5, 176 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257474E14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EB8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

char *sub_257474F2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257475020(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001060);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257475138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_257475238(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(a5(0) - 8);
  uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = *(void *)(v9 + 72);
  unint64_t v12 = v10 + v11 * a1;
  unint64_t v13 = a3 + v11 * v5;
  if (v12 >= v13 || v12 + v11 * v5 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v13;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_24();
  __break(1u);
  return result;
}

uint64_t sub_25747536C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001018);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_25747548C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FE8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_2574755AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_0_4();
    OUTLINED_FUNCTION_8();
    goto LABEL_11;
  }
  unint64_t v5 = a4 + 24 * a1 + 32;
  unint64_t v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy();
    swift_bridgeObjectRelease();
    return v6;
  }
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_7();
LABEL_11:
  uint64_t result = OUTLINED_FUNCTION_24();
  __break(1u);
  return result;
}

char *sub_257475678(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)sub_2576A8C60();
  __break(1u);
  return result;
}

uint64_t sub_25747576C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F68);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

unint64_t sub_25747588C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_59();
  OUTLINED_FUNCTION_82();
  uint64_t v4 = sub_2576A9100();
  return sub_257475D58(a1, a2, v4);
}

unint64_t sub_2574758F0(uint64_t a1)
{
  uint64_t v2 = sub_2576A8450();
  return sub_257475E3C(a1, v2);
}

unint64_t sub_257475934(int a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_59();
  sub_2576A7810();
  OUTLINED_FUNCTION_82();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_2576A9100();
  return sub_257475F48(a1, a2, a3, v6);
}

unint64_t sub_2574759B8(uint64_t a1)
{
  uint64_t v2 = sub_2576A9080();
  return sub_257476824(a1, v2);
}

unint64_t sub_2574759F4(uint64_t a1, uint64_t a2, char a3)
{
  OUTLINED_FUNCTION_59();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90B0();
  uint64_t v6 = sub_2576A9100();
  return sub_25747601C(a1, a2, a3, v6);
}

unint64_t sub_257475A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_59();
  sub_2576A90A0();
  sub_2576A90A0();
  uint64_t v6 = sub_2576A9100();
  return sub_2574760A8(a1, a2, a3, v6);
}

unint64_t sub_257475B10(uint64_t a1)
{
  sub_2576A8A80();
  uint64_t v2 = sub_2576A78C0();
  return sub_25747612C(a1, v2);
}

unint64_t sub_257475B74()
{
  OUTLINED_FUNCTION_28();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_59();
  if (v2 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_107();
    uint64_t v5 = OUTLINED_FUNCTION_83();
    v0(v5);
    sub_2576A78E0();
    if (v2 >> 62 == 1)
    {
      sub_257476D6C(v4, v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2576A90A0();
      sub_257476D6C(v4, v2);
    }
  }
  else
  {
    sub_2575CA350();
    sub_2576A90A0();
  }
  sub_2576A9100();
  OUTLINED_FUNCTION_27();
  return sub_2574762C4(v6, v7, v8, v9);
}

unint64_t sub_257475C80(uint64_t *a1)
{
  OUTLINED_FUNCTION_59();
  sub_2575FB7B4((uint64_t)v4);
  uint64_t v2 = sub_2576A9100();
  return sub_25747675C(a1, v2);
}

unint64_t sub_257475CE4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_59();
  sub_2576A7810();
  OUTLINED_FUNCTION_82();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_2576A9100();
  return sub_257475D58(a1, a2, v4);
}

unint64_t sub_257475D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2576A8F60() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2576A8F60() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_257475E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_257476D2C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_2576A8460();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_2576A8460();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_257475F48(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = v12 + 24 * v7;
      if (*(_DWORD *)v13 == a1)
      {
        BOOL v14 = *(void *)(v13 + 8) == a2 && *(void *)(v13 + 16) == a3;
        if (v14 || (sub_2576A8F60() & 1) != 0) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_25747601C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v8 = ~v6;
    do
    {
      uint64_t v9 = *(void *)(v4 + 48) + 24 * result;
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      char v12 = *(unsigned char *)(v9 + 16);
      BOOL v14 = v10 != a1 || v11 != a2;
      if (((v14 | (v12 ^ a3)) & 1) == 0) {
        break;
      }
      unint64_t result = (result + 1) & v8;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2574760A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v8 = ~v6;
    uint64_t v9 = *(void *)(v4 + 48);
    do
    {
      if (*(void *)(v9 + 24 * result) == a1 && *(void *)(v9 + 24 * result + 16) == a3) {
        break;
      }
      unint64_t result = (result + 1) & v8;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_25747612C(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_2576A8A80();
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    char v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    char v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_2576A7990();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_2574762C4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = v4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = a4 & ~v7;
  if ((*(void *)(v4 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    unint64_t v9 = a2;
    uint64_t v10 = ~v7;
    unint64_t v45 = a2 & 0xC000000000000000;
    uint64_t v42 = a2 & 0x3FFFFFFFFFFFFFFFLL;
    unint64_t v43 = a2 >> 62;
    uint64_t v44 = ~v7;
    do
    {
      uint64_t v11 = (uint64_t *)(*(void *)(v5 + 48) + 24 * v8);
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      if (v13 >> 62)
      {
        uint64_t v14 = v11[2];
        if (v13 >> 62 == 1)
        {
          if (v45 == 0x4000000000000000)
          {
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v16 = *(uint64_t (**)(uint64_t, unint64_t))((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            sub_257476D90(v12, v13);
            sub_257476D90(v12, v13);
            sub_257476D90(a1, v9);
            int v17 = v16(ObjectType, v13 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v19 = v18;
            uint64_t v21 = v20;
            uint64_t v22 = swift_getObjectType();
            if (v17 != (*(unsigned int (**)(uint64_t))(v42 + 16))(v22))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_257476D6C(a1, a2);
              sub_257476D6C(v12, v13);
              unint64_t v9 = a2;
LABEL_28:
              uint64_t v5 = v4;
              uint64_t v6 = v4 + 64;
              sub_257476D6C(v12, v13);
              uint64_t v10 = v44;
              goto LABEL_29;
            }
            BOOL v25 = v19 == v23 && v21 == v24;
            if (v25)
            {
              swift_bridgeObjectRelease_n();
              sub_257476D6C(a1, a2);
              sub_257476D6C(v12, v13);
              sub_257476D6C(v12, v13);
              return v8;
            }
            char v26 = sub_2576A8F60();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v9 = a2;
            sub_257476D6C(a1, a2);
            sub_257476D6C(v12, v13);
            sub_257476D6C(v12, v13);
            uint64_t v5 = v4;
            uint64_t v6 = v4 + 64;
            uint64_t v10 = v44;
            if (v26) {
              return v8;
            }
          }
        }
        else if (v45 == 0x8000000000000000)
        {
          uint64_t v28 = swift_getObjectType();
          char v29 = *(uint64_t (**)(uint64_t, unint64_t))((v13 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
          sub_257476D90(v12, v13);
          sub_257476D90(a1, v9);
          LODWORD(v28) = v29(v28, v13 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v31 = v30;
          uint64_t v33 = v32;
          uint64_t v34 = swift_getObjectType();
          if (v28 != (*(unsigned int (**)(uint64_t))(v42 + 16))(v34))
          {
            sub_257476D6C(a1, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v9 = a2;
            goto LABEL_28;
          }
          if (v31 == v35 && v33 == v36)
          {
            unint64_t v9 = a2;
            sub_257476D6C(a1, a2);
            swift_bridgeObjectRelease_n();
            sub_257476D6C(v12, v13);
            uint64_t v5 = v4;
            uint64_t v6 = v4 + 64;
            uint64_t v10 = v44;
            if (v14 == a3) {
              return v8;
            }
          }
          else
          {
            char v38 = sub_2576A8F60();
            sub_257476D6C(a1, a2);
            swift_bridgeObjectRelease();
            unint64_t v9 = a2;
            swift_bridgeObjectRelease();
            sub_257476D6C(v12, v13);
            uint64_t v5 = v4;
            uint64_t v6 = v4 + 64;
            uint64_t v10 = v44;
            if ((v38 & 1) != 0 && v14 == a3) {
              return v8;
            }
          }
        }
      }
      else if (!v43)
      {
        uint64_t v27 = sub_2575CA350();
        BOOL v25 = v27 == sub_2575CA350();
        uint64_t v6 = v4 + 64;
        uint64_t v10 = v44;
        if (v25) {
          return v8;
        }
      }
LABEL_29:
      unint64_t v8 = (v8 + 1) & v10;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_25747675C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_257476C7C(*(void *)(v2 + 48) + 88 * v4, (uint64_t)v9);
      BOOL v7 = sub_2575F3F64(v9, a1);
      sub_257476CD8((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_257476824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_2574768C0(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  sub_2576A7810();
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease_n();
    return;
  }
  unint64_t v5 = 0;
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    if (v5 >= *(void *)(a1 + 16))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      sub_2576A9020();
      __break(1u);
      goto LABEL_24;
    }
    uint64_t v8 = *(v6 - 1);
    uint64_t v7 = *v6;
    uint64_t v9 = *(v6 - 2);
    sub_2576A7810();
    swift_retain();
    if (!v8) {
      goto LABEL_18;
    }
    uint64_t v10 = (void *)*a3;
    unint64_t v12 = sub_25747588C(v9, v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_21;
    }
    char v16 = v11;
    if (v10[3] < v15) {
      break;
    }
    if (a2)
    {
      if (v11) {
        goto LABEL_16;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010E0);
      sub_2576A8AF0();
      if (v16) {
        goto LABEL_16;
      }
    }
LABEL_12:
    uint64_t v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v12 >> 6) + 64) |= 1 << v12;
    uint64_t v20 = (uint64_t *)(v19[6] + 16 * v12);
    *uint64_t v20 = v9;
    v20[1] = v8;
    *(void *)(v19[7] + 8 * v12) = v7;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_22;
    }
    ++v5;
    v19[2] = v23;
    v6 += 3;
    a2 = 1;
    if (v4 == v5) {
      goto LABEL_18;
    }
  }
  sub_2575470A8(v15, a2 & 1);
  unint64_t v17 = sub_25747588C(v9, v8);
  if ((v16 & 1) != (v18 & 1)) {
    goto LABEL_23;
  }
  unint64_t v12 = v17;
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v24 = (void *)swift_allocError();
  swift_willThrow();
  id v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_24:
  sub_2576A8730();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  sub_2576A8B60();
  __break(1u);
}

uint64_t sub_257476BB0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_257476C34(uint64_t a1, uint64_t a2)
{
  return sub_25746ED4C(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], v2[12], v2[13], v2[2], v2[3]);
}

uint64_t sub_257476C70(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_25746F470(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_257476C7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_257476CD8(uint64_t a1)
{
  return a1;
}

unint64_t sub_257476D2C()
{
  unint64_t result = qword_26A000E80;
  if (!qword_26A000E80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A000E80);
  }
  return result;
}

uint64_t sub_257476D6C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  if (a2 >> 62 == 2 || v2 == 1) {
    return swift_unknownObjectRelease();
  }
  if (!v2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_257476D90(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  if (a2 >> 62 == 2 || v2 == 1) {
    return swift_unknownObjectRetain();
  }
  if (!v2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_257476DB4(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t result = sub_2576A7810();
      break;
    case 8:
      uint64_t result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257476E0C(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 4:
    case 5:
    case 6:
    case 7:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 8:
      uint64_t result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257476E64(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x2000000000000000) == 0) {
    return sub_257476E70(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_257476E70(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 2) {
    return swift_retain();
  }
  if ((a3 >> 62) <= 1) {
    return sub_2576A7810();
  }
  return result;
}

uint64_t sub_257476E94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_257476EF8(uint64_t *a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v4 = *a1;
  uint64_t result = a2(&v4);
  if (v2) {
    return swift_allocError();
  }
  return result;
}

unint64_t sub_257476F50(unint64_t a1, uint64_t a2)
{
  return sub_25746F100(a1, a2, *(void *)(v2 + 32));
}

uint64_t sub_257476F5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, _OWORD *))(v2 + 32);
  uint64_t v5 = *a1;
  long long v6 = *(_OWORD *)(a1 + 3);
  v10[0] = *(_OWORD *)(a1 + 1);
  v10[1] = v6;
  v10[2] = *(_OWORD *)(a1 + 5);
  uint64_t result = v4(v5, v10);
  *a2 = result;
  a2[1] = v8;
  a2[2] = v9;
  return result;
}

void sub_257476FC8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_25746F368(a1, *(void *)(v2 + 32), *(void *)(v2 + 48), a2);
}

uint64_t sub_257476FF0(uint64_t *a1)
{
  return sub_257476EF8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_25747700C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_257477068(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_1_2()
{
  *(void *)(v0 + 8 * (v4 >> 6) + 64) |= 1 << v4;
  uint64_t v5 = (void *)(*(void *)(v0 + 48) + 16 * v4);
  void *v5 = v1;
  v5[1] = v2;
  *(void *)(*(void *)(v0 + 56) + 8 * v4) = v3;
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return sub_2576A78E0();
}

unint64_t OUTLINED_FUNCTION_9()
{
  *(void *)(v0 + 8) = 0x8000000000000000;
  return sub_25747588C(v2, v1);
}

uint64_t OUTLINED_FUNCTION_10()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11()
{
  *(void *)(v0 + 16) = 0;
  return swift_bridgeObjectRelease();
}

size_t OUTLINED_FUNCTION_13(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_19()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_20()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_23()
{
  return sub_2576A8AD0();
}

uint64_t OUTLINED_FUNCTION_24()
{
  return sub_2576A8C60();
}

unint64_t OUTLINED_FUNCTION_25()
{
  return sub_25747588C(v0, v1);
}

void OUTLINED_FUNCTION_26()
{
  sub_2575A0688(v0);
}

uint64_t OUTLINED_FUNCTION_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(a11 + 8) = v13;
  return a13;
}

uint64_t OUTLINED_FUNCTION_31()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_34()
{
  return sub_2576A78E0();
}

uint64_t OUTLINED_FUNCTION_36()
{
  return *(void *)v0;
}

uint64_t OUTLINED_FUNCTION_37@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  *(void *)(v2 - 320) = **(void **)(v2 - 328);
  return 0;
}

uint64_t OUTLINED_FUNCTION_38()
{
  return v0 + 32;
}

void OUTLINED_FUNCTION_39(uint64_t a1@<X8>)
{
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_41()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_42()
{
  return 0;
}

void OUTLINED_FUNCTION_46()
{
  *(void *)(v0 - 208) = 0x6574656D61726170;
  *(void *)(v0 - 200) = 0xE900000000000072;
  *(unsigned char *)(v0 - 116) = 21;
}

unint64_t OUTLINED_FUNCTION_47()
{
  return sub_25747588C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_48()
{
  return swift_allocObject();
}

size_t OUTLINED_FUNCTION_51(void *a1)
{
  size_t result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

uint64_t OUTLINED_FUNCTION_54()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_57()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_59()
{
  return sub_2576A9090();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return sub_2576A7B00();
}

BOOL OUTLINED_FUNCTION_61@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_63@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 + 16) = a1;
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_64(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t a7, void (*a8)(unint64_t, uint64_t, unint64_t))
{
  return sub_2574731C4(a1, a2, a3, a4, a5, a6, a6, a8);
}

void OUTLINED_FUNCTION_67()
{
  *(void *)(v0 + 16) = v3;
  uint64_t v7 = (void *)(v0 + 40 * v2);
  v7[4] = v4;
  v7[5] = v5;
  v7[6] = v6;
  v7[7] = v1;
}

uint64_t OUTLINED_FUNCTION_69()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_70()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_73()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_76()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_78()
{
  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_82()
{
  return sub_2576A78E0();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_84@<Q0>(uint64_t a1@<X8>, __n128 a2)
{
  __n128 result = a2;
  *(__n128 *)(a1 + 40) = a2;
  return result;
}

char *OUTLINED_FUNCTION_86(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t OUTLINED_FUNCTION_87()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_bridgeObjectRelease_n();
}

void OUTLINED_FUNCTION_93(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

unint64_t OUTLINED_FUNCTION_94()
{
  return sub_25747588C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_98()
{
  sub_257602184();
}

void OUTLINED_FUNCTION_99(uint64_t a1@<X8>)
{
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 2 * a1;
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_105()
{
  return sub_2576A88F0();
}

uint64_t OUTLINED_FUNCTION_107()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_108()
{
  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_110()
{
  uint64_t v1 = *(void *)(v0 - 216);
  *(void *)(v0 - 224) = *(void *)(v0 - 224);
  *(void *)(v0 - 216) = v1;
}

uint64_t Dataset.batchSize.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Dataset.dropsLastPartialBatch.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t Dataset.underestimatedCount.getter()
{
  return *(void *)(v0 + 8);
}

#error "257477BD0: call analysis failed (funcsize=61)"

uint64_t sub_257477C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A0010E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void Dataset.init<>(samples:batchSize:batchSampler:dropsLastPartialBatch:prefetchMode:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  OUTLINED_FUNCTION_18();
  a25 = v30;
  a26 = v31;
  char v51 = v32;
  uint64_t v34 = v33;
  uint64_t v36 = *v35;
  uint64_t v50 = v35[1];
  char v49 = *((unsigned char *)v35 + 16);
  OUTLINED_FUNCTION_12_0();
  if (v40 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    uint64_t v41 = v39;
    uint64_t v42 = v38;
    unint64_t v43 = v37;
    uint64_t v44 = a28;
    sub_2574F06C0(&a13);
    OUTLINED_FUNCTION_14_0();
    v45();
    OUTLINED_FUNCTION_16_0(a13);
    *(unsigned char *)(v34 + 80) = v51 & 1;
    *(void *)(v34 + 88) = v36;
    *(void *)(v34 + 96) = v50;
    *(unsigned char *)(v34 + 104) = v49;
    if (!v43)
    {
      uint64_t v47 = a29;
      uint64_t v46 = a30;
      uint64_t v48 = a27;
      uint64_t v42 = (void *)swift_allocObject();
      v42[2] = v41;
      v42[3] = v48;
      v42[4] = v44;
      v42[5] = v47;
      v42[6] = v46;
      unint64_t v43 = sub_257477DEC;
    }
    *(void *)(v34 + 64) = v43;
    *(void *)(v34 + 72) = v42;
    OUTLINED_FUNCTION_4_0();
  }
}

#error "257477E94: call analysis failed (funcsize=66)"

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *Dataset.init<>(samples:sampler:batchSize:batchSampler:dropsLastPartialBatch:prefetchMode:transform:)@<X0>(char a1@<W4>, uint64_t *a2@<X5>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = a2[1];
  uint64_t v20 = *a2;
  char v18 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_12_0();
  if (v12 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    __n128 result = (void *)OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    uint64_t v13 = v11;
    BOOL v14 = v10;
    uint64_t v15 = v9;
    sub_2574F0768(v9, &v22);
    __swift_destroy_boxed_opaque_existential_1(v15);
    OUTLINED_FUNCTION_14_0();
    v16();
    __n128 result = (void *)OUTLINED_FUNCTION_16_0(v22);
    *(unsigned char *)(a3 + 80) = a1 & 1;
    *(void *)(a3 + 88) = v20;
    *(void *)(a3 + 96) = v19;
    *(unsigned char *)(a3 + 104) = v18;
    if (!v14)
    {
      __n128 result = (void *)swift_allocObject();
      uint64_t v13 = result;
      result[2] = a4;
      result[3] = a5;
      result[4] = a6;
      result[5] = a7;
      result[6] = a8;
      BOOL v14 = sub_257477DEC;
    }
    *(void *)(a3 + 64) = v14;
    *(void *)(a3 + 72) = v13;
  }
  return result;
}

uint64_t sub_2574780CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 24) - 8) + 16))(a2, a1);
}

uint64_t Dataset.makeIterator()@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 104) == 1)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t v122 = *(void *)v2;
    *(void *)&long long v123 = v4;
    uint64_t v5 = a1[2];
    uint64_t v103 = v5;
    uint64_t v6 = a1[4];
    uint64_t v92 = v6;
    type metadata accessor for Sampling();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v8 = OUTLINED_FUNCTION_7_0();
    MEMORY[0x25A2B82A0](v8, WitnessTable);
    OUTLINED_FUNCTION_6_1();
    uint64_t v106 = *(void *)(v9 + 16);
    uint64_t v108 = v9 + 16;
    uint64_t v10 = OUTLINED_FUNCTION_5_1();
    v11(v10);
    uint64_t v12 = (void *)OUTLINED_FUNCTION_20_0();
    uint64_t v13 = a1[3];
    v12[2] = v5;
    void v12[3] = v13;
    uint64_t v95 = a1[5];
    uint64_t v99 = a1[6];
    v12[4] = v6;
    v12[5] = v95;
    OUTLINED_FUNCTION_18_0((uint64_t)v12, v99);
    uint64_t v14 = sub_2576A8760();
    uint64_t v88 = MEMORY[0x263F8DC28];
    swift_getWitnessTable();
    sub_2574E9658(1, 0, (uint64_t)sub_2574787A8, (uint64_t)v12, v14, (uint64_t)&v118);
    swift_release();
    swift_release();
    long long v123 = v119;
    uint64_t v122 = v118;
    uint64_t v124 = v120;
    long long v125 = v121;
    LOBYTE(v5) = *(unsigned char *)(v2 + 80);
    swift_getWitnessTable();
    uint64_t v15 = type metadata accessor for LazyPrefetchingMapSequence();
    swift_getWitnessTable();
    uint64_t v16 = OUTLINED_FUNCTION_7_0();
    sub_2576895D8(v16, v5, v15, v17);
    swift_release();
    uint64_t v18 = swift_release();
    uint64_t v19 = v111;
    OUTLINED_FUNCTION_15_0(v18, v20, v21, v22, v23, v24, v25, v26, v84, v88, v92, v95, v99, v103, v106, v108, a2, v111, v112);
    uint64_t v122 = v19;
    uint64_t v124 = v27;
    *(void *)&long long v125 = v28;
    *((void *)&v125 + 1) = *((void *)&v114 + 1);
    uint64_t v126 = v29;
    char v127 = v30;
    type metadata accessor for Batches();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_19_0();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_11_0();
    uint64_t v31 = OUTLINED_FUNCTION_1_3();
    v32(v31);
    uint64_t v33 = (void *)OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_2_3(v33, v34, v35, v36, v37, v38, v39, v40, v85, v89, v93, v96, v100, v104);
    sub_2576A8760();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_4_1();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_9_0();
  }
  else
  {
    uint64_t v44 = *(void *)(v2 + 88);
    uint64_t v86 = *(void *)(v2 + 96);
    uint64_t v45 = *(void *)(v2 + 8);
    uint64_t v122 = *(void *)v2;
    *(void *)&long long v123 = v45;
    uint64_t v46 = a1[2];
    uint64_t v47 = a1[4];
    type metadata accessor for Sampling();
    uint64_t v48 = swift_getWitnessTable();
    uint64_t v49 = OUTLINED_FUNCTION_7_0();
    MEMORY[0x25A2B82A0](v49, v48);
    OUTLINED_FUNCTION_6_1();
    uint64_t v107 = *(void *)(v50 + 16);
    uint64_t v109 = v50 + 16;
    uint64_t v51 = OUTLINED_FUNCTION_5_1();
    v52(v51);
    v53 = (void *)OUTLINED_FUNCTION_20_0();
    uint64_t v54 = a1[3];
    v53[2] = v46;
    v53[3] = v54;
    uint64_t v97 = a1[5];
    uint64_t v101 = a1[6];
    v53[4] = v47;
    v53[5] = v97;
    OUTLINED_FUNCTION_18_0((uint64_t)v53, v101);
    uint64_t v55 = sub_2576A8760();
    uint64_t v90 = MEMORY[0x263F8DC28];
    swift_getWitnessTable();
    sub_2574E9658(v44, v86, (uint64_t)sub_2574787A8, (uint64_t)v53, v55, (uint64_t)&v118);
    swift_release();
    swift_release();
    long long v123 = v119;
    uint64_t v122 = v118;
    uint64_t v124 = v120;
    long long v125 = v121;
    uint64_t v56 = *(void *)(v2 + 16);
    char v57 = *(unsigned char *)(v2 + 80);
    swift_getWitnessTable();
    uint64_t v58 = type metadata accessor for LazyPrefetchingMapSequence();
    swift_getWitnessTable();
    sub_2576895D8(v56, v57, v58, (uint64_t)&v111);
    swift_release();
    uint64_t v59 = swift_release();
    uint64_t v60 = v111;
    uint64_t v61 = *((void *)&v114 + 1);
    OUTLINED_FUNCTION_15_0(v59, v62, v63, v64, v65, v66, v67, v68, v86, v90, v47, v97, v101, v46, v107, v109, a2, v111, v112);
    uint64_t v122 = v60;
    uint64_t v124 = v69;
    *(void *)&long long v125 = v70;
    *((void *)&v125 + 1) = v61;
    uint64_t v126 = v71;
    char v127 = v72;
    type metadata accessor for Batches();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_19_0();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_11_0();
    uint64_t v73 = OUTLINED_FUNCTION_1_3();
    v74(v73);
    uint64_t v75 = (void *)OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_2_3(v75, v76, v77, v78, v79, v80, v81, v82, v87, v91, v94, v98, v102, v105);
    sub_2576A8760();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_4_1();
    swift_release();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_9_0();
  }
  long long v112 = v123;
  uint64_t v113 = v41;
  long long v114 = v125;
  uint64_t v115 = v42;
  char v116 = v43;
  long long v117 = v128;
  sub_2576A89C0();
  return sub_2576A89B0();
}

uint64_t sub_257478700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v8[5] = a1;
  v8[2] = a3;
  v8[3] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_257495BE0((void (*)(char *, uint64_t))sub_2574792BC, (uint64_t)v8, v4, a3, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v6);
}

uint64_t sub_2574787AC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  sub_257479198(a2 + 24, (uint64_t)&v22);
  if (v23)
  {
    sub_257479260(&v22, (uint64_t)v24);
    uint64_t v9 = v25;
    uint64_t v10 = v26;
    __swift_project_boxed_opaque_existential_1(v24, v25);
    *(void *)&long long v22 = v8;
    char v11 = *(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8);
    uint64_t v12 = sub_2576A7F50();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v14 = v11(&v22, v12, WitnessTable, v9, v10);
    uint64_t v15 = sub_257478700(v14, v8, a4);
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = v15;
    uint64_t v16 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8);
    uint64_t v17 = swift_getWitnessTable();
    v16(&v22, v12, v17, a4, a6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  }
  else
  {
    sub_257479200((uint64_t)&v22);
    v24[0] = v8;
    uint64_t v19 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8);
    uint64_t v20 = sub_2576A7F50();
    sub_2576A7810();
    uint64_t v21 = swift_getWitnessTable();
    return v19(v24, v20, v21, a4, a6);
  }
}

uint64_t sub_257478980()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  if (*(void *)(v0 + 104)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 161, 7);
}

uint64_t sub_2574789FC(uint64_t *a1)
{
  return sub_2574787AC(a1, (uint64_t)(v1 + 7), v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_257478A24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  Dataset.makeIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void *))(*(a1 - 1) + 8);
  return v4(v2, a1);
}

uint64_t sub_257478A88()
{
  return 2;
}

uint64_t sub_257478A98()
{
  return sub_2576A7CB0();
}

uint64_t Dataset<>.count.getter()
{
  return Sampling<>.count.getter();
}

uint64_t sub_257478B08()
{
  return swift_getWitnessTable();
}

uint64_t sub_257478B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_257478B2C(uint64_t a1)
{
  swift_release();
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  return swift_release();
}

uint64_t sub_257478B78(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = a2 + 24;
  uint64_t v6 = *(void *)(a2 + 48);
  swift_retain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v6;
    *(void *)(a1 + 56) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 24, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 40) = v8;
    *(void *)(a1 + 56) = *(void *)(v5 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t sub_257478C48(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 48);
  if (!*(void *)(a1 + 48))
  {
    if (v4)
    {
      *(void *)(a1 + 48) = v4;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 24, a2 + 24);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 24);
    long long v6 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 40) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v8;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        __n128 result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        char v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          void *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

void *__swift_memcpy105_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x69uLL);
}

uint64_t sub_257478F8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  if (*(void *)(a1 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  }
  long long v4 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t sub_257479024(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 105))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_257479064(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Dataset()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2574790D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_2574790F4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257479114(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_257479144(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257479160(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    char v2 = 1;
  }
  else
  {
    char v2 = 0;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t type metadata accessor for Dataset.PrefetchMode()
{
  return swift_getGenericMetadata();
}

uint64_t sub_257479198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A0010E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_257479200(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26A0010E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_257479260(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2574792BC()
{
  return sub_2576A7F90();
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return v0 - 200;
}

void *OUTLINED_FUNCTION_2_3(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  a1[2] = a14;
  a1[3] = v14;
  a1[4] = a11;
  a1[5] = a12;
  uint64_t v18 = a1 + 7;
  a1[6] = a13;
  return memcpy(v18, (const void *)(v15 - 200), 0x69uLL);
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return sub_2576A8CA0();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return v0 - 200;
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return v0;
}

double OUTLINED_FUNCTION_12_0()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14 = a13;
  v14[1] = a14;
  v14[2] = v16;
  return v15;
}

__n128 OUTLINED_FUNCTION_15_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19)
{
  return (__n128)a19;
}

uint64_t OUTLINED_FUNCTION_16_0@<X0>(uint64_t a1@<X8>)
{
  *long long v2 = a1;
  v2[1] = v1;
  v2[2] = v4;
  return sub_257477C3C(v3, v5);
}

void *OUTLINED_FUNCTION_18_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 48) = a2;
  uint64_t v4 = (void *)(a1 + 56);
  return memcpy(v4, (const void *)(v2 - 200), 0x69uLL);
}

void OUTLINED_FUNCTION_19_0()
{
  JUMPOUT(0x25A2B82A0);
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return swift_allocObject();
}

BOOL sub_2574794F8()
{
  BOOL result = sub_25747951C();
  byte_26A030A20 = result;
  return result;
}

BOOL sub_25747951C()
{
  uint64_t v4 = *MEMORY[0x263EF8340];
  int v3 = 0;
  size_t v2 = 4;
  if (sysctlbyname("kern.hv_vmm_present", &v3, &v2, 0, 0)) {
    BOOL v0 = 1;
  }
  else {
    BOOL v0 = v3 == 0;
  }
  return !v0;
}

uint64_t sub_25747959C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlatformInfo()
{
  return self;
}

uint64_t sub_2574795D0(void *a1, uint64_t a2)
{
  if (!*(unsigned char *)(v2 + 128))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
    if (v4) {
      id v11 = (id)MEMORY[0x25A2B8DB0](0, a2);
    }
    else {
      id v11 = *(id *)(a2 + 32);
    }
    int v9 = v11;
    OUTLINED_FUNCTION_3_2();
    uint64_t v10 = &selRef_erfWithTensor_name_;
    goto LABEL_9;
  }
  if (*(unsigned char *)(v2 + 128) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
    if (v4) {
      id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
    }
    else {
      id v8 = *(id *)(a2 + 32);
    }
    int v9 = v8;
    OUTLINED_FUNCTION_3_2();
    uint64_t v10 = &selRef_sigmoidWithTensor_name_;
LABEL_9:
    id v12 = sub_257479C38((uint64_t)v9, v3, v2, a1, (SEL *)v10);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
  if (v4) {
    id v13 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v13 = *(id *)(a2 + 32);
  }
  int v9 = v13;
  if (*(unsigned char *)(v2 + 136)) {
    double v14 = 0.0;
  }
  else {
    double v14 = *(float *)(v2 + 132);
  }
  OUTLINED_FUNCTION_3_2();
  id v12 = sub_257479BB4((uint64_t)v9, v14, v3, v2, a1);
LABEL_16:
  unint64_t v15 = (unint64_t)v12;

  v7[2].n128_u64[0] = v15;
  uint64_t v16 = sub_2576A7E20();
  return OUTLINED_FUNCTION_4_2(v16, v17, v18, v19, v20, v21, v22, v23, v25, (uint64_t)v7);
}

uint64_t sub_25747975C(void *a1, uint64_t a2)
{
  return sub_2574795D0(a1, a2);
}

uint64_t sub_257479774(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_2576AC2A0;
  OUTLINED_FUNCTION_2_4();
  if ((a2 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  id v8 = v7;
  OUTLINED_FUNCTION_3_2();
  id v9 = sub_257479C38((uint64_t)v8, v3, v2, a1, (SEL *)&selRef_reLUWithTensor_name_);

  *(void *)(v6 + 32) = v9;
  uint64_t v10 = sub_2576A7E20();
  return OUTLINED_FUNCTION_4_2(v10, v11, v12, v13, v14, v15, v16, v17, v19, v6);
}

uint64_t sub_257479838(void *a1, uint64_t a2)
{
  return sub_257479774(a1, a2);
}

uint64_t sub_257479850(void *a1, uint64_t a2)
{
  unint64_t v6 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_2_4();
  if (v6) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  id v8 = v7;
  sub_257582858(1, v6 == 0, a2);
  if (v6) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  uint64_t v10 = v9;
  OUTLINED_FUNCTION_3_2();
  id v11 = sub_257479CB4((uint64_t)v8, (uint64_t)v10, v3, v2, a1, (SEL *)&selRef_reLUGradientWithIncomingGradient_sourceTensor_name_);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v12 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v12 + 16) = xmmword_2576AC2A0;
  *(void *)(v12 + 32) = v11;
  uint64_t v23 = v12;
  uint64_t v13 = sub_2576A7E20();
  return OUTLINED_FUNCTION_4_2(v13, v14, v15, v16, v17, v18, v19, v20, v22, v23);
}

uint64_t sub_25747994C(void *a1, uint64_t a2)
{
  return sub_257479850(a1, a2);
}

uint64_t sub_257479964(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v5 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v5 + 16) = xmmword_2576AC2A0;
  OUTLINED_FUNCTION_2_4();
  if ((a2 & 0xC000000000000001) != 0) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v6 = *(id *)(a2 + 32);
  }
  id v7 = v6;
  uint64_t v8 = v2[16];
  uint64_t v10 = v2[3];
  uint64_t v9 = v2[4];
  sub_2576A7810();
  id v11 = sub_257479CB4((uint64_t)v7, v8, v10, v9, a1, (SEL *)&selRef_softMaxWithTensor_axis_name_);

  *(void *)(v5 + 32) = v11;
  uint64_t v12 = sub_2576A7E20();
  return OUTLINED_FUNCTION_4_2(v12, v13, v14, v15, v16, v17, v18, v19, v21, v5);
}

uint64_t sub_257479A38(void *a1, uint64_t a2)
{
  return sub_257479964(a1, a2);
}

uint64_t sub_257479A50(uint64_t a1)
{
  uint64_t result = sub_257479B60(&qword_26A0011F0, (void (*)(uint64_t))type metadata accessor for SoftmaxOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257479A94(uint64_t a1)
{
  uint64_t result = sub_257479B60(&qword_26A0011F8, (void (*)(uint64_t))type metadata accessor for ReLUGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257479AD8(uint64_t a1)
{
  uint64_t result = sub_257479B60(&qword_26A001200, (void (*)(uint64_t))type metadata accessor for ReLUOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257479B1C(uint64_t a1)
{
  uint64_t result = sub_257479B60(&qword_26A001208, (void (*)(uint64_t))type metadata accessor for ActivationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257479B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_257479BB4(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_leakyReLUWithTensor_alpha_name_, a1, v8, a2);

  return v9;
}

id sub_257479C38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a4, *a5, a1, v8);

  return v9;
}

id sub_257479CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  uint64_t v10 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a5, *a6, a1, a2, v10);

  return v11;
}

uint64_t OUTLINED_FUNCTION_0_6(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_257582858(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_257582858(0, v3, v1);
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_4_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return a10;
}

void sub_257479DB4()
{
}

uint64_t sub_257479E14()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576AC2A0;
  *(void *)(v1 + 32) = *(void *)(v0 + 40);
  uint64_t v3 = v1;
  sub_2576A7E20();
  swift_retain();
  return v3;
}

uint64_t sub_257479E80()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 64);
  *(void *)(v1 + 32) = *(void *)(v0 + 56);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_257479EDC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v8 = *a6;
  char v9 = *((unsigned char *)a6 + 8);
  *(_DWORD *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = v8;
  *(unsigned char *)(v7 + 64) = v9;
  sub_257469238(a7, v7 + 72);
  return v7;
}

uint64_t sub_257479F1C()
{
  (*(void (**)(void))(*(void *)v0 + 120))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  return sub_257657270();
}

uint64_t sub_257479FA0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257479FD8()
{
  sub_257479FA0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseTileOperation()
{
  return self;
}

uint64_t sub_25747A030()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_25747A054()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

__n128 sub_25747A07C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  char v3 = *(unsigned char *)(v1 + 128);
  char v4 = *(unsigned char *)(v1 + 129);
  long long v5 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 104);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_25747A0AC()
{
  return sub_257479F1C();
}

uint64_t sub_25747A0D0()
{
  return sub_25761B124();
}

uint64_t sub_25747A11C()
{
  return 1701603700;
}

uint64_t sub_25747A12C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 136) = a8;
  *(void *)(v9 + 144) = a9;
  if (!a3) {
    a1 = sub_25761B148(1701603700, 0xE400000000000000);
  }
  return OUTLINED_FUNCTION_0_7(a1, a2, a3, a4, a5, a6, a7, a8, v11, v12);
}

uint64_t sub_25747A194()
{
  return sub_25747A4E0(*(void *)(v0 + 136));
}

uint64_t sub_25747A19C()
{
  sub_257479FA0();
  sub_25747A4E0(*(void *)(v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TileOperation()
{
  return self;
}

uint64_t sub_25747A1FC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_25747A230()
{
  return OUTLINED_FUNCTION_1_5();
}

uint64_t sub_25747A240()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v1 + 32) = *(void *)(v0 + 136);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_25747A2C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 136) = a4;
  if (!a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_1_5();
    a1 = sub_25761B148(v9, v10);
  }
  return OUTLINED_FUNCTION_0_7(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
}

uint64_t sub_25747A31C()
{
  return swift_release();
}

uint64_t sub_25747A324()
{
  sub_257479FA0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TileGradientOperation()
{
  return self;
}

uint64_t sub_25747A384(uint64_t a1)
{
  uint64_t result = sub_25747A48C(&qword_26A001210, (void (*)(void))type metadata accessor for TileGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25747A3DC(uint64_t a1)
{
  uint64_t result = sub_25747A48C((unint64_t *)&qword_26A001218, (void (*)(void))type metadata accessor for TileOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25747A434(uint64_t a1)
{
  uint64_t result = sub_25747A48C(&qword_26A001220, (void (*)(void))type metadata accessor for BaseTileOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25747A48C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25747A4D0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_25747A4E0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_7(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  a9 = v13;
  a10 = v14;
  return sub_257479EDC(a1, a2, a3, v12, v11, &a9, v10);
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return 0x6172675F656C6974;
}

BOOL static RegularizationKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 4))
  {
    if ((*(unsigned char *)(a2 + 4) & 1) == 0) {
      return 0;
    }
  }
  else if (*(unsigned char *)(a2 + 4))
  {
    return 0;
  }
  return *(float *)a1 == *(float *)a2;
}

uint64_t sub_25747A578(uint64_t a1)
{
  if (a1 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25747A590(char a1)
{
  return a1 & 1;
}

uint64_t sub_25747A59C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_257587778(*a1, *a2);
}

uint64_t sub_25747A5A8()
{
  return sub_2576A360C(*v0);
}

uint64_t sub_25747A5B0(uint64_t a1)
{
  return sub_2574770C4(a1, *v1);
}

uint64_t sub_25747A5B8(uint64_t a1)
{
  return sub_2575EEF5C(a1, *v1);
}

uint64_t sub_25747A5C0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25747A578(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_25747A5EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25747A590(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_25747A618()
{
  return sub_2576A7DC0();
}

uint64_t sub_25747A678()
{
  return sub_2576A7D80();
}

BOOL sub_25747A6C8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_25747A6D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25747A7E4()
{
  return sub_2576A9100();
}

uint64_t sub_25747A82C()
{
  return 0;
}

uint64_t sub_25747A838(char a1)
{
  if (a1) {
    return 0x656C616373;
  }
  else {
    return 0x696D697263736964;
  }
}

BOOL sub_25747A878(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25747A6C8(*a1, *a2);
}

uint64_t sub_25747A884()
{
  return sub_25747A7E4();
}

uint64_t sub_25747A88C()
{
  return sub_257470648();
}

uint64_t sub_25747A894()
{
  return sub_2576A9100();
}

uint64_t sub_25747A8D8()
{
  return sub_25747A838(*v0);
}

uint64_t sub_25747A8E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25747A6D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25747A908()
{
  return sub_25747A82C();
}

uint64_t sub_25747A928@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257478A88();
  *a1 = result;
  return result;
}

uint64_t sub_25747A950(uint64_t a1)
{
  unint64_t v2 = sub_25747AB78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25747A98C(uint64_t a1)
{
  unint64_t v2 = sub_25747AB78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RegularizationKind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001228);
  OUTLINED_FUNCTION_0_8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25747AB78();
  sub_2576A91F0();
  if (!v2)
  {
    v15[14] = 0;
    sub_25747ABC4();
    sub_2576A8D50();
    char v11 = v16;
    if (v16) {
      v15[13] = 1;
    }
    else {
      v15[12] = 1;
    }
    sub_2576A8D30();
    int v13 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v10, v5);
    *(_DWORD *)a2 = v13;
    *(unsigned char *)(a2 + 4) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_25747AB78()
{
  unint64_t result = qword_26A001230;
  if (!qword_26A001230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001230);
  }
  return result;
}

unint64_t sub_25747ABC4()
{
  unint64_t result = qword_26A001238;
  if (!qword_26A001238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001238);
  }
  return result;
}

uint64_t RegularizationKind.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001240);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v12[3] = *(_DWORD *)v1;
  char v10 = *(unsigned char *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_25747AB78();
  sub_2576A9230();
  if (v10)
  {
    char v17 = 1;
    char v16 = 0;
    sub_25747ADB8();
    sub_2576A8E40();
    if (!v2)
    {
      char v15 = 1;
LABEL_6:
      sub_2576A8E20();
    }
  }
  else
  {
    __int16 v14 = 0;
    sub_25747ADB8();
    sub_2576A8E40();
    if (!v2)
    {
      char v13 = 1;
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

unint64_t sub_25747ADB8()
{
  unint64_t result = qword_26A001248;
  if (!qword_26A001248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001248);
  }
  return result;
}

uint64_t sub_25747AE04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RegularizationKind.init(from:)(a1, a2);
}

uint64_t sub_25747AE1C(void *a1)
{
  return RegularizationKind.encode(to:)(a1);
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RegularizationKind(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 5))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegularizationKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25747AECC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 4);
}

uint64_t sub_25747AED4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 4) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind()
{
  return &type metadata for RegularizationKind;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  void *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind.Discriminator()
{
  return &type metadata for RegularizationKind.Discriminator;
}

uint64_t getEnumTagSinglePayload for LayerVariableReference.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = v6 - 2;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14NeuralNetworks18RegularizationKindO13DiscriminatorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25747B068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25747B090(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25747B098(unsigned char *result, char a2)
{
  void *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RegularizationKind.CodingKeys()
{
  return &type metadata for RegularizationKind.CodingKeys;
}

unint64_t sub_25747B0B8()
{
  unint64_t result = qword_26A001250;
  if (!qword_26A001250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001250);
  }
  return result;
}

unint64_t sub_25747B108()
{
  unint64_t result = qword_26A001258;
  if (!qword_26A001258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001258);
  }
  return result;
}

unint64_t sub_25747B158()
{
  unint64_t result = qword_26A001260;
  if (!qword_26A001260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001260);
  }
  return result;
}

unint64_t sub_25747B1A8()
{
  unint64_t result = qword_26A001268;
  if (!qword_26A001268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001268);
  }
  return result;
}

unint64_t sub_25747B1F4()
{
  unint64_t result = qword_26A001270;
  if (!qword_26A001270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001270);
  }
  return result;
}

uint64_t sub_25747B240(uint64_t a1, uint64_t *a2)
{
  v11[7] = *MEMORY[0x263EF8340];
  int v3 = *v2;
  if (v2[1])
  {
    uint64_t v4 = *a2;
    OUTLINED_FUNCTION_1_6();
    sub_25747B47C((uint64_t)v11, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(_DWORD *)(inited + 32) = v3;
    sub_25747B47C((uint64_t)v10, (uint64_t)v9);
    OUTLINED_FUNCTION_2_5();
    sub_25747B4E4((uint64_t)v10);
    sub_25747B4E4((uint64_t)v11);
    v10[0] = v8;
    v9[0] = v4;
    static Tensor.* infix(_:_:)();
    swift_release();
    v10[0] = v11[0];
  }
  else
  {
    OUTLINED_FUNCTION_1_6();
    sub_25747B47C((uint64_t)v11, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    uint64_t v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
    *(_DWORD *)(v6 + 32) = v3;
    sub_25747B47C((uint64_t)v10, (uint64_t)v9);
    OUTLINED_FUNCTION_2_5();
    sub_25747B4E4((uint64_t)v10);
    sub_25747B4E4((uint64_t)v11);
    v11[0] = v8;
  }
  static Tensor.+ infix(_:_:)();
  return swift_release();
}

uint64_t sub_25747B3F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*((unsigned __int8 *)v3 + 4) == 255)
  {
    *a3 = v4;
    return swift_retain();
  }
  else
  {
    unint64_t v6 = *v3 | ((unint64_t)*((unsigned __int8 *)v3 + 4) << 32);
    uint64_t v7 = *a2;
    int v10 = *v3;
    char v11 = BYTE4(v6) & 1;
    uint64_t v8 = v7;
    uint64_t v9 = v4;
    return sub_25747B240((uint64_t)&v9, &v8);
  }
}

uint64_t sub_25747B47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25747B4E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004250);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double OUTLINED_FUNCTION_1_6()
{
  *(_DWORD *)(v0 + 104) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

void OUTLINED_FUNCTION_2_5()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void sub_25747B5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v64 = v21;
  uint64_t v65 = v24;
  uint64_t v62 = v26;
  uint64_t v63 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v31 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v37 = v36;
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_8_0();
  uint64_t v41 = v40 - v39;
  uint64_t v43 = *v20;
  uint64_t v42 = v20[1];
  uint64_t v68 = v20[2];
  uint64_t v69 = v42;
  uint64_t v67 = v20[3];
  sub_25747C54C(v43 + 88, (uint64_t)v75);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_initStackObject();
  sub_2575F6340((uint64_t)v75);
  uint64_t v66 = v44;
  a10 = v30;
  uint64_t v74 = v28;
  sub_25747ECB0(v63, v34);
  if (__swift_getEnumTagSinglePayload(v34, 1, v35) == 1)
  {
    uint64_t v45 = v43;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v46 = sub_25747ED40(v34);
    uint64_t v47 = v65;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v41, v34, v35);
    uint64_t v70 = v43;
    uint64_t v71 = v69;
    uint64_t v72 = v68;
    uint64_t v73 = v67;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v48 = v28;
    uint64_t v47 = v65;
    uint64_t v49 = sub_25747B8BC(v30, v48, v41, v65);
    if (v64)
    {
      OUTLINED_FUNCTION_24_0();
      v51();
      goto LABEL_9;
    }
    uint64_t v52 = v49;
    uint64_t v45 = v43;
    uint64_t v53 = v50;
    OUTLINED_FUNCTION_24_0();
    v54();
    swift_bridgeObjectRelease();
    a10 = (uint64_t)v52;
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v74 = v53;
  }
  MEMORY[0x270FA5388](v46);
  *((_OWORD *)&v62 - 5) = *(_OWORD *)(v47 + 16);
  uint64_t v55 = v69;
  *(&v62 - 8) = v45;
  *(&v62 - 7) = v55;
  uint64_t v57 = v66;
  uint64_t v56 = v67;
  *(&v62 - 6) = v68;
  *(&v62 - 5) = v56;
  *(&v62 - 4) = (uint64_t)&a10;
  *(&v62 - 3) = v57;
  *(&v62 - 2) = (uint64_t)&v74;
  sub_2575F0018();
  sub_2575F0098();
  if (*(void *)(v58 + 16) == 1)
  {
    sub_25747C54C(v58 + 32, v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_25747C394();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_31_0();
    *uint64_t v59 = v60;
    v59[1] = v61;
    swift_willThrow();
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_1();
}

void (*sub_25747B8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(char *, uint64_t, uint64_t, __n128)
{
  uint64_t v27 = a1;
  uint64_t v28 = a4;
  uint64_t v23 = a2;
  uint64_t v7 = sub_2576A70E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  __n128 v12 = MEMORY[0x270FA5388](v11);
  __int16 v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v4;
  uint64_t v25 = v4[1];
  uint64_t v26 = v15;
  uint64_t v24 = v4[2];
  uint64_t v33 = v4[3];
  char v16 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v16(v10, a3, v7, v12);
  sub_257519B4C();
  if (v5)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v17 = v23;
    ((void (*)(char *, char *, uint64_t))v16)(v14, v10, v7);
    uint64_t v18 = &v14[v11[5]];
    *(void *)uint64_t v18 = 0x200000000;
    *(_OWORD *)(v18 + 8) = 0u;
    *(_OWORD *)(v18 + 24) = 0u;
    *(_OWORD *)(v18 + 40) = 0u;
    *((void *)v18 + 7) = 0;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)&v14[v11[8]] = MEMORY[0x263F8EE78];
    *(void *)&v14[v11[6]] = 64;
    *(void *)&v14[v11[7]] = 64;
    uint64_t v20 = v25;
    uint64_t v19 = v26;
    uint64_t v29 = v26;
    uint64_t v30 = v25;
    uint64_t v21 = v24;
    uint64_t v31 = v24;
    uint64_t v32 = v33;
    char v16 = (void (*)(char *, uint64_t, uint64_t, __n128))sub_25747BDA8(v27, (uint64_t)v14);
    uint64_t v29 = v19;
    uint64_t v30 = v20;
    uint64_t v31 = v21;
    uint64_t v32 = v33;
    sub_25747BE3C(v17, (uint64_t)v14);
    sub_25747EEB8((uint64_t)v14, (void (*)(void))type metadata accessor for MILBlobStorageWriter);
  }
  return v16;
}

uint64_t sub_25747BB74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v29 = *(void *)(a3 + 16);
  _s9IOMappingVMa();
  sub_2576A7F50();
  sub_2576A7810();
  swift_getWitnessTable();
  sub_2576A7CD0();
  uint64_t result = swift_bridgeObjectRelease();
  if ((void)v26)
  {
    if (v25 == 1)
    {
      uint64_t v12 = *a7;
    }
    else
    {
      if (v25 != 2)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v12 = *a9;
    }
    if (*(void *)(v12 + 16))
    {
      sub_2576A7810();
      unint64_t v13 = sub_25747588C(*((uint64_t *)&v25 + 1), v26);
      if (v14)
      {
        uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v16 = *(void *)(v15 + 16);
        uint64_t v17 = swift_retain_n();
        id v18 = sub_2576140FC(v17, v16, 0, 0);
        uint64_t v20 = v19;
        swift_release();
        swift_retain();
        uint64_t v21 = sub_2576136DC();
        uint64_t v23 = v22;
        swift_release();
        type metadata accessor for TensorRepresentation();
        long long v25 = 0u;
        long long v26 = 0u;
        long long v27 = 0u;
        int v28 = 0;
        swift_allocObject();
        LOBYTE(v29) = 1;
        uint64_t v24 = sub_257614BF4((uint64_t)v18, v20, v21, v23, (uint64_t)&v25, 0x100000000);
        sub_2575EF938(a2, v24);
        swift_release();
        swift_release();
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25747BDA8(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v5 = v4;
  sub_25747D174(a2, (void (*)(char *))sub_25747EF0C);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return v7;
  }
}

uint64_t sub_25747BE3C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_10_0();
  uint64_t v5 = v4;
  sub_25747D174(a2, (void (*)(char *))sub_25747EDDC);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return v7;
  }
}

void sub_25747BED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,long long a24)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v25;
  a20 = v26;
  uint64_t v27 = v24;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v71 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v35 = v34;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_3_3();
  uint64_t v70 = v37;
  uint64_t v38 = *(void *)(v31 + 16);
  uint64_t v39 = _s9IOMappingVMa();
  sub_2576A7810();
  uint64_t v40 = sub_2576A7E00();
  a10 = v40;
  if (v40 == MEMORY[0x25A2B8500](v38, v39))
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    OUTLINED_FUNCTION_7_1();
  }
  else
  {
    long long v68 = a24;
    uint64_t v67 = a23;
    uint64_t v69 = (void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    char v73 = a22;
    uint64_t v72 = v39;
    while (1)
    {
      char v41 = sub_2576A7EC0();
      sub_2576A7E40();
      if ((v41 & 1) == 0) {
        break;
      }
      uint64_t v42 = v38 + 32 + 48 * v40;
      uint64_t v74 = *(void *)(v42 + 8);
      uint64_t v43 = v39;
      uint64_t v44 = *(void *)(v42 + 16);
      char v45 = *(unsigned char *)v42;
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      MEMORY[0x25A2B8510](&a10, v38, v43);
      swift_bridgeObjectRelease();
      if (sub_25748C560(v45, v73))
      {
        if (!*(void *)(v29 + 16)) {
          goto LABEL_13;
        }
        sub_2576A7810();
        unint64_t v46 = sub_25747588C(v74, v44);
        if ((v47 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_13:
          swift_bridgeObjectRelease();
          *(void *)&v75[0] = 0;
          *((void *)&v75[0] + 1) = 0xE000000000000000;
          sub_2576A8730();
          swift_bridgeObjectRelease();
          v75[0] = v68;
          sub_2576A7810();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_2576A7B00();
          long long v64 = v75[0];
          sub_25747C394();
          OUTLINED_FUNCTION_33_0();
          *uint64_t v65 = v64;
          swift_willThrow();
          goto LABEL_16;
        }
        uint64_t v48 = *(void *)(*(void *)(v29 + 56) + 8 * v46);
        swift_retain();
        swift_bridgeObjectRelease();
        *(void *)&v75[0] = v48;
        sub_2575195B4();
        if (v27)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        uint64_t v50 = v49;
        (*v69)(v70, v33, v71);
        uint64_t v51 = *(void *)(v48 + 16);
        *(void *)&v75[0] = *(void *)(v51 + 152);
        char v77 = *(unsigned char *)(v51 + 160);
        type metadata accessor for DataSourceTensorStorage();
        swift_allocObject();
        sub_257523908(v70, v50, (uint64_t *)v75, &v77);
        type metadata accessor for TensorRepresentation();
        memset(v75, 0, sizeof(v75));
        int v76 = 0;
        uint64_t v52 = swift_allocObject();
        sub_2576A7810();
        uint64_t v53 = swift_retain();
        char v77 = 1;
        uint64_t v54 = sub_2575A9688(v53, (uint64_t)v75, 0x100000000, v52);
        type metadata accessor for TensorHandle();
        uint64_t v55 = v33;
        uint64_t v56 = v29;
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = v54;
        sub_2576A7810();
        swift_retain();
        sub_2576139A8();
        uint64_t v58 = v57;
        uint64_t v29 = v56;
        uint64_t v33 = v55;
        sub_2575CDD78(v58, v74, v44, v59, v60, v61, v62, v63, v66, v67);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v27 = 0;
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = a10;
      uint64_t v39 = v72;
      if (v40 == MEMORY[0x25A2B8500](v38, v72)) {
        goto LABEL_15;
      }
    }
    sub_2576A87C0();
    __break(1u);
  }
}

uint64_t ModelWritingError.debugDescription.getter()
{
  uint64_t v1 = *v0;
  sub_2576A7810();
  return v1;
}

uint64_t ModelWritingError.errorDescription.getter()
{
  uint64_t v1 = *v0;
  sub_2576A7810();
  return v1;
}

unint64_t sub_25747C394()
{
  unint64_t result = qword_26A001278;
  if (!qword_26A001278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001278);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GradientSourceID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_2576A7810();
  return a1;
}

uint64_t destroy for GradientSourceID()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for GradientSourceID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void *assignWithTake for GradientSourceID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GradientSourceID(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GradientSourceID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelWritingError()
{
  return &type metadata for ModelWritingError;
}

uint64_t sub_25747C54C(uint64_t a1, uint64_t a2)
{
  return a2;
}

#error "25747C5E4: call analysis failed (funcsize=25)"

void sub_25747C610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_5_2(v24, v25, v26, v27, v28, v29, v30);
  uint64_t v78 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_18_1();
  uint64_t v34 = self;
  id v35 = objc_msgSend(v34, sel_defaultManager);
  id v36 = objc_msgSend(v35, sel_currentDirectoryPath);

  uint64_t v37 = sub_2576A79F0();
  uint64_t v39 = v38;

  sub_2576A7040();
  id v40 = objc_msgSend(v34, sel_defaultManager);
  char v41 = (void *)sub_2576A7080();
  unsigned int v42 = OUTLINED_FUNCTION_19_1((uint64_t)v41, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_);

  if (!v42)
  {
    id v59 = 0;
    sub_2576A7030();

    swift_willThrow();
    uint64_t v60 = OUTLINED_FUNCTION_14_1();
    v61(v60);
    id v57 = objc_msgSend(v34, sel_defaultManager);
    uint64_t v62 = sub_2576A79C0();
    uint64_t v58 = (void *)v62;
    uint64_t v63 = sel_changeCurrentDirectoryPath_;
LABEL_7:
    OUTLINED_FUNCTION_34_0(v62, v63);
    goto LABEL_8;
  }
  id v43 = 0;
  id v44 = OUTLINED_FUNCTION_30_0();
  sub_2576A70B0();
  char v45 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v46 = OUTLINED_FUNCTION_29_0();

  if ((v46 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0(0xD000000000000013);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_25747C394();
    OUTLINED_FUNCTION_33_0();
    *long long v64 = 0;
    v64[1] = v82;
    swift_willThrow();
    uint64_t v65 = OUTLINED_FUNCTION_1_7();
    v66(v65);
    id v57 = OUTLINED_FUNCTION_30_0();
    uint64_t v62 = OUTLINED_FUNCTION_26_0();
    uint64_t v58 = (void *)v62;
    uint64_t v63 = (const char *)(v32 + 1621);
    goto LABEL_7;
  }
  uint64_t v47 = OUTLINED_FUNCTION_4_3();
  sub_25747D5AC(v47, v48, v49, v50, v51, v52, v53, v54, v71, v72, a23, v73, v74, v37, v32, v39, v75, v76, v77,
    v78,
    v79,
    v80,
    v81);
  if (!v23)
  {
    uint64_t v67 = OUTLINED_FUNCTION_1_7();
    v68(v67);
    id v69 = OUTLINED_FUNCTION_27_0();
    uint64_t v70 = (void *)OUTLINED_FUNCTION_35_0();
    objc_msgSend(v34, sel_changeCurrentDirectoryPath_, v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_9;
  }
  uint64_t v55 = OUTLINED_FUNCTION_1_7();
  v56(v55);
  id v57 = OUTLINED_FUNCTION_27_0();
  uint64_t v58 = (void *)OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_34_0((uint64_t)v58, sel_changeCurrentDirectoryPath_);
LABEL_8:
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  OUTLINED_FUNCTION_7_1();
}

void sub_25747C9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_5_2(v25, v26, v27, v28, v29, v30, v31);
  uint64_t v78 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v33 = v32;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_18_1();
  id v35 = self;
  id v36 = objc_msgSend(v35, sel_defaultManager);
  id v37 = objc_msgSend(v36, sel_currentDirectoryPath);

  uint64_t v38 = sub_2576A79F0();
  uint64_t v40 = v39;

  sub_2576A7040();
  id v41 = objc_msgSend(v35, sel_defaultManager);
  unsigned int v42 = (void *)sub_2576A7080();
  unsigned int v43 = OUTLINED_FUNCTION_19_1((uint64_t)v42, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_);

  if (!v43)
  {
    id v60 = 0;
    sub_2576A7030();

    swift_willThrow();
    uint64_t v61 = OUTLINED_FUNCTION_14_1();
    v62(v61);
    id v58 = objc_msgSend(v35, sel_defaultManager);
    uint64_t v63 = sub_2576A79C0();
    id v59 = (void *)v63;
    long long v64 = sel_changeCurrentDirectoryPath_;
LABEL_7:
    OUTLINED_FUNCTION_34_0(v63, v64);
    goto LABEL_8;
  }
  id v44 = 0;
  id v45 = OUTLINED_FUNCTION_30_0();
  sub_2576A70B0();
  unsigned __int8 v46 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v47 = OUTLINED_FUNCTION_29_0();

  if ((v47 & 1) == 0)
  {
    OUTLINED_FUNCTION_25_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_32_0(0xD000000000000013);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_25747C394();
    OUTLINED_FUNCTION_33_0();
    *uint64_t v65 = 0;
    v65[1] = v83;
    swift_willThrow();
    uint64_t v66 = OUTLINED_FUNCTION_1_7();
    v67(v66);
    id v58 = OUTLINED_FUNCTION_30_0();
    uint64_t v63 = OUTLINED_FUNCTION_26_0();
    id v59 = (void *)v63;
    long long v64 = (const char *)(v33 + 1621);
    goto LABEL_7;
  }
  uint64_t v48 = OUTLINED_FUNCTION_4_3();
  sub_25747DBF4(v48, v49, v50, v51, v52, v53, v54, v55, v72, v73, a23, a24, v74, v38, v33, v40, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82);
  if (!v24)
  {
    uint64_t v68 = OUTLINED_FUNCTION_1_7();
    v69(v68);
    id v70 = OUTLINED_FUNCTION_27_0();
    uint64_t v71 = (void *)OUTLINED_FUNCTION_35_0();
    objc_msgSend(v35, sel_changeCurrentDirectoryPath_, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_9;
  }
  uint64_t v56 = OUTLINED_FUNCTION_1_7();
  v57(v56);
  id v58 = OUTLINED_FUNCTION_27_0();
  id v59 = (void *)OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_34_0((uint64_t)v59, sel_changeCurrentDirectoryPath_);
LABEL_8:
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  OUTLINED_FUNCTION_7_1();
}

void sub_25747CDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return;
  }
  uint64_t v4 = sub_2576A7810() + 40;
  uint64_t v5 = MEMORY[0x263F8EE78];
  while (*(unsigned char *)(v4 - 8) != 3)
  {
LABEL_13:
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v6 = *(void *)(v4 + 32);
  uint64_t v7 = *(void *)(a2 + 240);
  if ((v7 & 0xC000000000000001) != 0)
  {
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    MEMORY[0x25A2B8DB0](v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_20_1();
      uint64_t v5 = v8;
    }
    if (*(void *)(v5 + 16) >= *(void *)(v5 + 24) >> 1)
    {
      sub_257473154();
      uint64_t v5 = v9;
    }
    OUTLINED_FUNCTION_21_0();
    goto LABEL_13;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    if (v6 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
    sub_2576A7810();
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_25747CF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    swift_release();
    return;
  }
  uint64_t v4 = sub_2576A7810() + 40;
  uint64_t v5 = MEMORY[0x263F8EE78];
  while (*(unsigned char *)(v4 - 8))
  {
LABEL_13:
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  unint64_t v6 = *(void *)(v4 + 32);
  uint64_t v7 = *(void *)(a2 + 176);
  if ((v7 & 0xC000000000000001) != 0)
  {
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    MEMORY[0x25A2B8DB0](v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_8:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_20_1();
      uint64_t v5 = v8;
    }
    if (*(void *)(v5 + 16) >= *(void *)(v5 + 24) >> 1)
    {
      sub_257473154();
      uint64_t v5 = v9;
    }
    OUTLINED_FUNCTION_21_0();
    goto LABEL_13;
  }
  if ((v6 & 0x8000000000000000) == 0)
  {
    if (v6 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
    sub_2576A7810();
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
LABEL_18:
  __break(1u);
}

uint64_t sub_25747D0B8()
{
  swift_retain();
  uint64_t v1 = sub_2576A7810();
  sub_25747CDA0(v1, v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_25747D118()
{
  swift_retain();
  uint64_t v1 = sub_2576A7810();
  sub_25747CF2C(v1, v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  return v3;
}

void sub_25747D174(uint64_t a1, void (*a2)(char *))
{
  uint64_t v26 = a2;
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2576A70E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25747EE14();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  id v11 = sub_25747D464((uint64_t)v10);
  if (!v2)
  {
    uint64_t v12 = v11;
    sub_25747EE54(a1, (uint64_t)v6);
    *(void *)&v6[*(int *)(v4 + 20)] = v12;
    id v13 = v12;
    v26(v6);
    uint64_t v14 = type metadata accessor for MILBlobStorageWriter(0);
    uint64_t v15 = *(int *)(v14 + 20);
    uint64_t v16 = *(void *)&v6[v15 + 56];
    uint64_t v17 = a1 + v15;
    *(void *)uint64_t v17 = *(void *)&v6[v15];
    *(_OWORD *)(v17 + 8) = *(_OWORD *)&v6[v15 + 8];
    *(_OWORD *)(v17 + 24) = *(_OWORD *)&v6[v15 + 24];
    *(_OWORD *)(v17 + 40) = *(_OWORD *)&v6[v15 + 40];
    *(void *)(v17 + 56) = v16;
    *(void *)(a1 + *(int *)(v14 + 32)) = *(void *)&v6[*(int *)(v14 + 32)];
    sub_2576A7810();
    swift_bridgeObjectRelease();
    id v27 = 0;
    unsigned __int8 v18 = objc_msgSend(v13, sel_seekToOffset_error_, 0, &v27);
    id v19 = v27;
    if ((v18 & 1) == 0) {
      goto LABEL_5;
    }
    long long v20 = *(_OWORD *)(v17 + 16);
    v28[0] = *(_OWORD *)v17;
    v28[1] = v20;
    long long v21 = *(_OWORD *)(v17 + 48);
    void v28[2] = *(_OWORD *)(v17 + 32);
    void v28[3] = v21;
    id v22 = v27;
    sub_25751A1DC((uint64_t)v28, v13);
    id v27 = 0;
    unsigned __int8 v23 = objc_msgSend(v13, sel_closeAndReturnError_, &v27);
    id v19 = v27;
    if (v23)
    {
      id v24 = v27;
      sub_25747EEB8((uint64_t)v6, (void (*)(void))type metadata accessor for MILBlobStorageWriter.BlobWriter);
    }
    else
    {
LABEL_5:
      id v25 = v19;
      sub_2576A7030();

      swift_willThrow();
      sub_25747EEB8((uint64_t)v6, (void (*)(void))type metadata accessor for MILBlobStorageWriter.BlobWriter);
    }
  }
}

id sub_25747D464(uint64_t a1)
{
  v12[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_2576A7080();
  v12[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v12);

  id v4 = v12[0];
  if (v3)
  {
    uint64_t v5 = sub_2576A70E0();
    OUTLINED_FUNCTION_16_1();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    id v8 = v4;
    v7(a1, v5);
  }
  else
  {
    id v9 = v12[0];
    sub_2576A7030();

    swift_willThrow();
    sub_2576A70E0();
    OUTLINED_FUNCTION_16_1();
    (*(void (**)(uint64_t))(v10 + 8))(a1);
  }
  return v3;
}

void sub_25747D5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v95 = v24;
  uint64_t v96 = v23;
  uint64_t v91 = v25;
  uint64_t v89 = v26;
  uint64_t v87 = v27;
  uint64_t v86 = v28;
  uint64_t v92 = v29;
  uint64_t v85 = v30;
  uint64_t v93 = a23;
  uint64_t v90 = a22;
  uint64_t v88 = a21;
  LODWORD(v94) = v31 & 1;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v32 - 8);
  OUTLINED_FUNCTION_3_3();
  uint64_t v81 = v33;
  OUTLINED_FUNCTION_15_1();
  uint64_t v84 = sub_2576A6F30();
  OUTLINED_FUNCTION_0_8();
  uint64_t v82 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_3_3();
  uint64_t v83 = v36;
  uint64_t v97 = sub_2576A7050();
  OUTLINED_FUNCTION_0_8();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_8_0();
  uint64_t v42 = v41 - v40;
  uint64_t v98 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v109 = v43;
  MEMORY[0x270FA5388](v44);
  OUTLINED_FUNCTION_6_2();
  uint64_t v80 = v45;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v78 - v47;
  sub_2576A71E0();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_8_0();
  uint64_t v50 = sub_2576A77E0();
  sub_2576A71D0();
  uint64_t v51 = sub_2576A71C0();
  uint64_t v53 = v52;
  OUTLINED_FUNCTION_24_0();
  v54();
  uint64_t v104 = 0x302E302E31;
  unint64_t v105 = 0xE500000000000000;
  uint64_t v106 = v50;
  uint64_t v107 = v51;
  uint64_t v108 = v53;
  OUTLINED_FUNCTION_31_0();
  uint64_t v99 = v55;
  unint64_t v100 = v56;
  uint64_t v58 = v38 + 104;
  id v57 = *(void (**)(void))(v38 + 104);
  HIDWORD(v79) = *MEMORY[0x263F06E50];
  uint64_t v59 = v97;
  uint64_t v78 = (void (*)(uint64_t, void, uint64_t))v57;
  v57(v42);
  sub_25747EFA8();
  sub_2576A70D0();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v42, v59);
  swift_bridgeObjectRelease();
  uint64_t v60 = v86;
  swift_retain();
  uint64_t v61 = v87;
  swift_retain();
  uint64_t v62 = v89;
  swift_retain();
  uint64_t v63 = v91;
  sub_2576A7810();
  uint64_t v64 = v88;
  sub_2576A7810();
  uint64_t v65 = v90;
  sub_2576A7810();
  uint64_t v66 = v92;
  swift_retain();
  uint64_t v67 = v63;
  uint64_t v68 = v96;
  sub_25747C9D8((uint64_t)v48, v94, v66, v60, v61, v62, v95, v67, v64, v65, (uint64_t)&v104, v93, (uint64_t)v78, v79, v80, v81, v82, v83, v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v109 + 8))(v48, v98);
  }
  else
  {
    uint64_t v95 = v58;
    uint64_t v96 = v42;
    id v69 = *(void (**)(char *, uint64_t))(v109 + 8);
    v69(v48, v98);
    sub_2576A6F70();
    swift_allocObject();
    sub_2576A6F60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001298);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_2576ABB30;
    sub_2576A6F10();
    sub_2576A6F20();
    uint64_t v99 = v70;
    sub_25747EFF4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012A8);
    sub_25747F044();
    sub_2576A8660();
    sub_2576A6F40();
    uint64_t v99 = v104;
    unint64_t v100 = v105;
    uint64_t v101 = v106;
    uint64_t v102 = v107;
    uint64_t v103 = v108;
    sub_25747F0E0();
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v71 = sub_2576A6F50();
    unint64_t v73 = v72;
    uint64_t v94 = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28_0();
    __swift_storeEnumTagSinglePayload(v74, v75, v76, v98);
    v78(v96, HIDWORD(v79), v97);
    sub_2576A70C0();
    sub_2576A71B0();
    OUTLINED_FUNCTION_24_0();
    v77();
    sub_25747F154(v71, v73);
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_1();
}

void sub_25747DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v226 = v25;
  unint64_t v227 = v24;
  uint64_t v27 = v26;
  uint64_t v224 = v28;
  uint64_t v30 = v29;
  unint64_t v228 = v31;
  uint64_t v244 = v32;
  char v34 = v33;
  unint64_t v225 = a24;
  sub_2576A71E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v206 = v36;
  uint64_t v207 = v35;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_3_3();
  uint64_t v205 = v37;
  OUTLINED_FUNCTION_15_1();
  uint64_t v38 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v211 = v39;
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_3_3();
  uint64_t v210 = v41;
  OUTLINED_FUNCTION_15_1();
  uint64_t v221 = sub_2576A7280();
  OUTLINED_FUNCTION_0_8();
  uint64_t v212 = v42;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_6_2();
  uint64_t v216 = v44;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v45);
  v217 = (char *)&v188 - v46;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v47);
  uint64_t v219 = (uint64_t)&v188 - v48;
  OUTLINED_FUNCTION_15_1();
  sub_2576A72B0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v231 = v50;
  uint64_t v232 = v49;
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_6_2();
  uint64_t v215 = v51;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v52);
  v218 = (char *)&v188 - v53;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v54);
  v229 = (char *)&v188 - v55;
  OUTLINED_FUNCTION_15_1();
  sub_2576A7370();
  OUTLINED_FUNCTION_0_8();
  uint64_t v213 = v56;
  uint64_t v214 = v57;
  MEMORY[0x270FA5388](v56);
  OUTLINED_FUNCTION_6_2();
  uint64_t v209 = v58;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v59);
  uint64_t v230 = (uint64_t)&v188 - v60;
  uint64_t v61 = sub_2576A7050();
  OUTLINED_FUNCTION_0_8();
  uint64_t v63 = v62;
  MEMORY[0x270FA5388](v64);
  OUTLINED_FUNCTION_8_0();
  uint64_t v67 = v66 - v65;
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  MEMORY[0x270FA5388](v68 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v71 = (char *)&v188 - v70;
  uint64_t v222 = v61;
  uint64_t v223 = v63;
  uint64_t v208 = v72;
  if (v34)
  {
    OUTLINED_FUNCTION_28_0();
    uint64_t v74 = v38;
    uint64_t v220 = v38;
    uint64_t v76 = v75;
    __swift_storeEnumTagSinglePayload(v77, v78, v79, v74);
    (*(void (**)(uint64_t, void, uint64_t))(v63 + 104))(v67, *v76, v61);
    sub_2576A70C0();
    uint64_t v73 = 0;
    uint64_t v38 = v220;
  }
  else
  {
    uint64_t v73 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v71, v73, 1, v38);
  uint64_t v80 = sub_2576A7810();
  uint64_t v81 = v227;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, char *, uint64_t, unint64_t, uint64_t, unint64_t))v225)(v237, v80, v27, v71, v244, v228, v30, v226);
  if (v81)
  {
    swift_bridgeObjectRelease();
    uint64_t v82 = (uint64_t)v71;
LABEL_7:
    sub_25747ED40(v82);
LABEL_8:
    OUTLINED_FUNCTION_7_1();
    return;
  }
  unint64_t v227 = v30;
  uint64_t v195 = v67;
  uint64_t v220 = v38;
  v200 = v71;
  swift_bridgeObjectRelease();
  sub_25747C54C((uint64_t)v237, (uint64_t)&v236);
  sub_2575F2FE4((uint64_t)&v238);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  OUTLINED_FUNCTION_28_0();
  uint64_t v87 = sub_25752C190(v83, v84, v85, v86);
  sub_257528A3C();
  v194 = v87;
  id v89 = v88;
  sub_25747EBE0((uint64_t)v237);
  uint64_t v90 = v230;
  sub_2574AB6DC(v89, 1852399981, 0xE400000000000000, v230);
  uint64_t v224 = 0;
  id v189 = v89;
  uint64_t v91 = *(void *)(sub_2576A7310() + 16);
  swift_bridgeObjectRelease();
  uint64_t v204 = v91;
  if (!v91) {
    goto LABEL_54;
  }
  unint64_t v92 = 0;
  unint64_t v202 = v231 + 8;
  v203 = (_WORD *)(v231 + 16);
  uint64_t v192 = v212 + 16;
  v201 = *(void **)(a21 + 16);
  v190 = (void (**)(uint64_t, uint64_t))(v212 + 8);
  v191 = (void (**)(unint64_t, char *, uint64_t))(v231 + 40);
  v196 = (unint64_t *)(a21 + 64);
  while (1)
  {
    uint64_t v93 = sub_2576A7310();
    if (v92 >= *(void *)(v93 + 16)) {
      break;
    }
    unint64_t v226 = (*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80);
    unint64_t v225 = *(void *)(v231 + 72) * v92;
    (*(void (**)(char *, unint64_t, uint64_t))(v231 + 16))(v229, v93 + v226 + v225, v232);
    swift_bridgeObjectRelease();
    uint64_t v94 = sub_2576A72A0();
    uint64_t v96 = v95;
    OUTLINED_FUNCTION_14_0();
    v97();
    if (!v201)
    {
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    unint64_t v228 = v92;
    uint64_t v98 = v196;
    uint64_t v99 = v201;
    while (1)
    {
      uint64_t v101 = *(v98 - 2);
      uint64_t v100 = *(v98 - 1);
      unint64_t v102 = *v98;
      BOOL v103 = *(v98 - 4) == v94 && *(v98 - 3) == v96;
      if (v103 || (OUTLINED_FUNCTION_23_0() & 1) != 0) {
        break;
      }
      v98 += 5;
      uint64_t v99 = (void *)((char *)v99 - 1);
      if (!v99) {
        goto LABEL_30;
      }
    }
    sub_2576A7810();
    sub_257476E64(v101, v100, v102);
    uint64_t v104 = sub_25747D118();
    uint64_t v105 = v104;
    uint64_t v199 = *(void *)(v104 + 16);
    if (!v199)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_1();
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v90 = v230;
      goto LABEL_37;
    }
    uint64_t v106 = *(void *)(v104 + 32);
    uint64_t v107 = *(void *)(v105 + 40);
    unint64_t v227 = *(void *)(v105 + 48);
    BOOL v108 = v106 == v94 && v107 == v96;
    uint64_t v90 = v230;
    if (v108)
    {
      uint64_t v110 = v96;
      goto LABEL_32;
    }
    uint64_t v193 = v105;
    uint64_t v109 = v107;
    if (OUTLINED_FUNCTION_23_0())
    {
      uint64_t v110 = v109;
      goto LABEL_32;
    }
    if (v199 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_51;
    }
    uint64_t v120 = (uint64_t *)(v193 + 72);
    uint64_t v121 = 1;
    do
    {
      if (__OFADD__(v121, 1)) {
        goto LABEL_108;
      }
      uint64_t v122 = *(v120 - 2);
      uint64_t v123 = *(v120 - 1);
      unint64_t v227 = *v120;
      if (v122 == v94 && v123 == v96)
      {
        uint64_t v110 = v96;
LABEL_32:
        uint64_t v199 = v110;
        sub_2576A7810();
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v233 = v101;
        uint64_t v234 = v100;
        unint64_t v235 = v102;
        uint64_t v111 = v224;
        sub_257534A74(v227, v219);
        uint64_t v224 = v111;
        if (v111)
        {

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          OUTLINED_FUNCTION_14_0();
          v186();
          sub_25747F1AC((uint64_t)v237);
          sub_25747ED40((uint64_t)v200);
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          goto LABEL_8;
        }
        uint64_t v112 = OUTLINED_FUNCTION_12_1();
        v113(v112);
        sub_2576A7290();
        uint64_t v90 = v230;
        long long v114 = (void (*)(uint64_t))sub_2576A7300();
        char v116 = v115;
        uint64_t v117 = *v115;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *char v116 = v117;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v117 = sub_257582BE4();
          *char v116 = v117;
        }
        if (v228 < *(void *)(v117 + 16))
        {
          (*v191)(v117 + v226 + v225, v218, v232);
          uint64_t v119 = OUTLINED_FUNCTION_17_1();
          v114(v119);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_1();
          (*v190)(v219, v221);
          goto LABEL_37;
        }
        goto LABEL_110;
      }
      uint64_t v197 = v121 + 1;
      v198 = (void (**)(unint64_t, uint64_t, uint64_t))v121;
      if (OUTLINED_FUNCTION_23_0())
      {
        uint64_t v110 = v123;
        goto LABEL_32;
      }
      v120 += 3;
      uint64_t v121 = (uint64_t)v198 + 1;
    }
    while (v197 != v199);
    swift_bridgeObjectRelease();
    uint64_t v90 = v230;
LABEL_51:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_1();
    swift_bridgeObjectRelease();
LABEL_37:
    unint64_t v92 = v228;
LABEL_38:
    if (++v92 == v204)
    {
LABEL_54:
      unint64_t v125 = *(void *)(sub_2576A7340() + 16);
      swift_bridgeObjectRelease();
      unint64_t v226 = v125;
      if (!v125)
      {
        uint64_t v137 = v222;
        uint64_t v136 = v223;
LABEL_98:
        uint64_t v161 = v213;
        uint64_t v162 = v214;
        uint64_t v163 = v136;
        uint64_t v164 = v209;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v209, v90, v213);
        OUTLINED_FUNCTION_28_0();
        __swift_storeEnumTagSinglePayload(v165, v166, v167, v220);
        (*(void (**)(uint64_t, void, uint64_t))(v163 + 104))(v195, *MEMORY[0x263F06E50], v137);
        sub_2576A70C0();
        uint64_t v168 = v224;
        sub_2576A72F0();
        if (v168)
        {

          swift_release();
          OUTLINED_FUNCTION_14_0();
          v169();
          v170 = *(void (**)(uint64_t, uint64_t))(v162 + 8);
          v170(v164, v161);
          v170(v90, v161);
LABEL_100:
          sub_25747F1AC((uint64_t)v237);
          uint64_t v82 = (uint64_t)v200;
        }
        else
        {
          uint64_t v171 = v220;
          OUTLINED_FUNCTION_14_0();
          v172();
          v173 = *(void (**)(uint64_t, uint64_t))(v162 + 8);
          uint64_t v214 = v162 + 8;
          v173(v164, v161);
          uint64_t v174 = (uint64_t)v200;
          if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v171) != 1)
          {
            sub_2576A71D0();
            uint64_t v175 = sub_2576A71C0();
            uint64_t v177 = v176;
            OUTLINED_FUNCTION_14_0();
            v178();
            v243[0] = 0xD000000000000010;
            v243[1] = 0x80000002576C49E0;
            OUTLINED_FUNCTION_31_0();
            v243[2] = v179;
            v243[3] = v180;
            v243[4] = 0x73746867696577;
            v243[5] = 0xE700000000000000;
            v243[6] = 0xD000000000000018;
            v243[7] = 0x80000002576C4A00;
            uint64_t v181 = v175;
            uint64_t v174 = (uint64_t)v200;
            sub_2575CE180(v243, v181, v177);
            swift_bridgeObjectRelease();
          }
          uint64_t v182 = *(void *)(a23 + 24);
          uint64_t v183 = *(void *)(a23 + 32);
          v239[0] = 0xD000000000000010;
          v239[1] = 0x80000002576C49E0;
          OUTLINED_FUNCTION_31_0();
          v239[2] = v184;
          v239[3] = v185;
          strcpy((char *)v240, "model.mlmodel");
          v240[7] = -4864;
          unint64_t v241 = 0xD00000000000001ELL;
          unint64_t v242 = 0x80000002576C49A0;
          sub_2576A7810();
          sub_2575CE180(v239, v182, v183);

          swift_release();
          swift_bridgeObjectRelease();
          v173(v230, v213);
          sub_25747F1AC((uint64_t)v237);
          uint64_t v82 = v174;
        }
        goto LABEL_7;
      }
      unint64_t v126 = 0;
      unint64_t v225 = v231 + 16;
      uint64_t v219 = v231 + 8;
      uint64_t v199 = v212 + 16;
      v218 = *(char **)(a22 + 16);
      uint64_t v197 = v212 + 8;
      v198 = (void (**)(unint64_t, uint64_t, uint64_t))(v231 + 40);
      v203 = (_WORD *)(a22 + 48);
      while (2)
      {
        uint64_t v127 = sub_2576A7340();
        if (v126 >= *(void *)(v127 + 16)) {
          goto LABEL_107;
        }
        unint64_t v228 = (*(unsigned __int8 *)(v231 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80);
        unint64_t v227 = *(void *)(v231 + 72) * v126;
        (*(void (**)(char *, unint64_t, uint64_t))(v231 + 16))(v229, v127 + v228 + v227, v232);
        swift_bridgeObjectRelease();
        uint64_t v128 = sub_2576A72A0();
        uint64_t v130 = v129;
        OUTLINED_FUNCTION_14_0();
        v131();
        uint64_t v132 = v218;
        if (v218)
        {
          unint64_t v133 = v203;
          while (1)
          {
            __int16 v134 = *v133;
            BOOL v135 = *((void *)v133 - 2) == v128 && *((void *)v133 - 1) == v130;
            if (v135 || (OUTLINED_FUNCTION_22_0() & 1) != 0) {
              break;
            }
            v133 += 12;
            if (!--v132) {
              goto LABEL_75;
            }
          }
          sub_2576A7810();
          long long v138 = (void *)sub_25747D0B8();
          uint64_t v212 = v138[2];
          if (!v212)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_75:
            swift_bridgeObjectRelease();
            uint64_t v90 = v230;
            uint64_t v137 = v222;
            uint64_t v136 = v223;
            goto LABEL_82;
          }
          uint64_t v139 = v138[5];
          uint64_t v140 = v138[6];
          if (v138[4] == v128 && v139 == v130)
          {
            uint64_t v143 = v130;
LABEL_77:
            uint64_t v212 = v143;
            sub_2576A7810();
            swift_retain();
            swift_bridgeObjectRelease();
            LOWORD(v233) = v134;
            uint64_t v204 = v140;
            uint64_t v144 = v224;
            sub_257535B78(v140, v216);
            if (v144)
            {

              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              OUTLINED_FUNCTION_14_0();
              v187();
              goto LABEL_100;
            }
            uint64_t v224 = 0;
            swift_bridgeObjectRelease();
            uint64_t v145 = OUTLINED_FUNCTION_12_1();
            v146(v145);
            sub_2576A7290();
            uint64_t v90 = v230;
            uint64_t v147 = (void (*)(uint64_t))sub_2576A7330();
            v149 = v148;
            uint64_t v150 = *v148;
            char v151 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t *v149 = v150;
            if ((v151 & 1) == 0)
            {
              uint64_t v150 = sub_257582BE4();
              uint64_t *v149 = v150;
            }
            uint64_t v152 = v223;
            if (v126 >= *(void *)(v150 + 16)) {
              goto LABEL_111;
            }
            (*v198)(v150 + v228 + v227, v215, v232);
            uint64_t v153 = OUTLINED_FUNCTION_17_1();
            v147(v153);
            swift_release();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_14_0();
            v154();
            uint64_t v137 = v222;
            uint64_t v136 = v152;
          }
          else
          {
            v201 = v138;
            uint64_t v142 = v139;
            if (OUTLINED_FUNCTION_22_0())
            {
              uint64_t v143 = v142;
              goto LABEL_77;
            }
            if (v212 != 1)
            {
              v155 = v201 + 9;
              uint64_t v156 = 1;
              unint64_t v202 = v126;
              while (1)
              {
                uint64_t v157 = v156 + 1;
                if (__OFADD__(v156, 1)) {
                  goto LABEL_109;
                }
                uint64_t v158 = *(v155 - 2);
                uint64_t v159 = *(v155 - 1);
                uint64_t v204 = *v155;
                if (v158 == v128 && v159 == v130) {
                  break;
                }
                if (OUTLINED_FUNCTION_22_0())
                {
                  uint64_t v143 = v159;
                  goto LABEL_96;
                }
                v155 += 3;
                ++v156;
                unint64_t v126 = v202;
                if (v157 == v212) {
                  goto LABEL_93;
                }
              }
              uint64_t v143 = v130;
LABEL_96:
              unint64_t v126 = v202;
              uint64_t v140 = v204;
              goto LABEL_77;
            }
LABEL_93:
            swift_bridgeObjectRelease();
            uint64_t v137 = v222;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v90 = v230;
            uint64_t v136 = v223;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v137 = v222;
          uint64_t v136 = v223;
          uint64_t v90 = v230;
        }
LABEL_82:
        if (++v126 == v226) {
          goto LABEL_98;
        }
        continue;
      }
    }
  }
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
}

uint64_t sub_25747EBE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 224) + 16);
  if (v1)
  {
    if (v1 == 1)
    {
      char v2 = sub_2574B79AC(*(void *)(a1 + 224));
      if (v2 == 2 || (v2 & 1) != 0) {
        return 6;
      }
      return 7;
    }
    swift_bridgeObjectRetain_n();
    sub_257694744();
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    uint64_t v8 = v5;
    sub_2575FD24C(&v8);
    swift_bridgeObjectRelease();
    if (*(void *)(v8 + 16))
    {
      char v6 = *(unsigned char *)(v8 + 32);
      swift_release();
      if ((v6 & 1) == 0) {
        return 7;
      }
    }
    else
    {
      swift_release();
    }
  }
  return 6;
}

uint64_t sub_25747ECB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_25747ED40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25747EDA0(uint64_t a1, uint64_t a2)
{
  return sub_25747BB74(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(uint64_t **)(v2 + 64), *(void *)(v2 + 72), *(uint64_t **)(v2 + 80));
}

uint64_t sub_25747EDDC(uint64_t a1)
{
  return sub_25747EF44(a1, 2, 36, 0xD000000000000020, 0x80000002576C4900);
}

unint64_t sub_25747EE14()
{
  unint64_t result = qword_26A001288;
  if (!qword_26A001288)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A001288);
  }
  return result;
}

uint64_t sub_25747EE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MILBlobStorageWriter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25747EEB8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_14_0();
  v3();
  return a1;
}

uint64_t sub_25747EF0C(uint64_t a1)
{
  return sub_25747EF44(a1, 1, 40, 0xD000000000000024, 0x80000002576C4930);
}

#error "25747EF84: call analysis failed (funcsize=20)"

BOOL sub_25747EF94(uint64_t a1)
{
  return *(void *)(a1 + 40) == *(void *)(v1 + 32);
}

unint64_t sub_25747EFA8()
{
  unint64_t result = qword_26A001290;
  if (!qword_26A001290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001290);
  }
  return result;
}

unint64_t sub_25747EFF4()
{
  unint64_t result = qword_26A0012A0;
  if (!qword_26A0012A0)
  {
    sub_2576A6F30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012A0);
  }
  return result;
}

unint64_t sub_25747F044()
{
  unint64_t result = qword_26A0012B0;
  if (!qword_26A0012B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0012A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012B0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_25747F0E0()
{
  unint64_t result = qword_26A0012B8;
  if (!qword_26A0012B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012B8);
  }
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25747F154(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25747F1AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_25747F200(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if ((a3 & 0x2000000000000000) == 0) {
    return sub_25747F20C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_25747F20C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62 == 2) {
    return swift_release();
  }
  if ((a3 >> 62) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return v0;
}

void OUTLINED_FUNCTION_5_2(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  *(void *)(v8 - 184) = a5;
  *(void *)(v8 - 176) = v7;
  *(void *)(v8 - 152) = a6;
  *(void *)(v8 - 144) = a2;
  *(void *)(v8 - 128) = a4;
  *(void *)(v8 - 120) = a3;
  *(void *)(v8 - 112) = a1;
  *(void *)(v8 - 192) = a7;
  *(void *)(v8 - 136) = *(void *)(v8 + 24);
  *(void *)(v8 - 160) = *(void *)(v8 + 16);
}

void OUTLINED_FUNCTION_10_0()
{
  *(void *)(v1 - 24) = v0;
  JUMPOUT(0x25A2BA130);
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return sub_25747F200(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return *(void *)(v0 + 232);
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return v0 + 360;
}

id OUTLINED_FUNCTION_19_1(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2, 1, 0, v4 - 104);
}

void OUTLINED_FUNCTION_20_1()
{
  sub_257473154();
}

void OUTLINED_FUNCTION_21_0()
{
  *(void *)(v2 + 16) = v5;
  char v6 = (void *)(v2 + 24 * v0);
  v6[4] = v1;
  v6[5] = v3;
  v6[6] = v4;
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return sub_2576A8F60();
}

uint64_t OUTLINED_FUNCTION_23_0()
{
  return sub_2576A8F60();
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  *(void *)(v0 - 104) = 0;
  *(void *)(v0 - 96) = 0xE000000000000000;
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return sub_2576A79C0();
}

id OUTLINED_FUNCTION_27_0()
{
  return [v0 (SEL)(v1 + 827)];
}

id OUTLINED_FUNCTION_29_0()
{
  return objc_msgSend(v0, sel_changeCurrentDirectoryPath_, v1);
}

id OUTLINED_FUNCTION_30_0()
{
  return [v1 (SEL)(v0 + 827)];
}

uint64_t OUTLINED_FUNCTION_32_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 96) = (v1 - 32) | 0x8000000000000000;
  return sub_2576A70B0();
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  return swift_allocError();
}

id OUTLINED_FUNCTION_34_0(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  return sub_2576A79C0();
}

uint64_t sub_25747F5A8(uint64_t a1)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v5 - 8);
  OUTLINED_FUNCTION_6_3();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_4_4(v13, v39);
  MEMORY[0x270FA5388](v14);
  uint64_t v45 = (uint64_t)&v39 - v15;
  uint64_t v16 = sub_2575CA350();
  uint64_t v17 = sub_2574BAF20(v16, a1);
  if (v17)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v18;
    type metadata accessor for NativeTensorStorage();
    uint64_t v47 = *(void *)(v1 + 72);
    char v46 = *(unsigned char *)(v1 + 80);
    sub_2576A7810();
    long long v21 = (uint64_t *)OUTLINED_FUNCTION_9_2();
    sub_25754DDC0(v21, v22, v23);
    uint64_t v41 = v24;
    uint64_t v42 = v2;
    uint64_t v47 = *(void *)(v24 + 16);
    sub_2576A7810();
    uint64_t v25 = (uint64_t)v8;
    uint64_t v26 = v45;
    OUTLINED_FUNCTION_8_1(&v47, v45);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 16))(&v47, ObjectType, v20);
    uint64_t v40 = v1;
    OUTLINED_FUNCTION_8_1(&v47, v44);
    uint64_t v43 = v11;
    uint64_t v28 = *(void (**)(void))(v11 + 16);
    OUTLINED_FUNCTION_3_4();
    v28();
    OUTLINED_FUNCTION_2_6(v25);
    OUTLINED_FUNCTION_3_4();
    v28();
    uint64_t v29 = v41;
    uint64_t v30 = OUTLINED_FUNCTION_2_6(v3);
    uint64_t v31 = MEMORY[0x270FA5388](v30);
    *(&v39 - 4) = v40;
    *(&v39 - 3) = v26;
    *(&v39 - 2) = v19;
    *(&v39 - 1) = v20;
    MEMORY[0x270FA5388](v31);
    *(&v39 - 6) = v19;
    *(&v39 - 5) = v20;
    *(&v39 - 4) = v3;
    *(&v39 - 3) = (uint64_t)sub_25748056C;
    *(&v39 - 2) = v32;
    swift_retain();
    uint64_t v33 = v42;
    sub_25748058C(v25, (uint64_t)sub_257480BA4, (uint64_t)(&v39 - 8), v34);
    if (v33)
    {
      swift_release_n();
      sub_257480BC8(v3);
      sub_257480BC8(v25);
      a1 = v43 + 8;
      uint64_t v35 = *(void (**)(void))(v43 + 8);
      OUTLINED_FUNCTION_1_8();
      v35();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_1_8();
      v35();
    }
    else
    {
      swift_release();
      sub_257480BC8(v3);
      sub_257480BC8(v25);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      a1 = swift_allocObject();
      *(_OWORD *)(a1 + 16) = xmmword_2576ABB10;
      *(void *)(a1 + 32) = v29;
      *(void *)(a1 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      uint64_t v37 = *(void (**)(void))(v43 + 8);
      OUTLINED_FUNCTION_5_3();
      v37();
      ((void (*)(uint64_t, uint64_t))v37)(v45, v9);
    }
  }
  else
  {
    sub_257480520();
    swift_allocError();
    OUTLINED_FUNCTION_7_2(v36, 0xD000000000000025);
  }
  return a1;
}

uint64_t sub_25747F940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v17[1] = a5;
  uint64_t v18 = a6;
  uint64_t v8 = sub_2576A6DD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2576A6C60();
  MEMORY[0x270FA5388](v12 - 8);
  sub_25747FBF8((uint64_t)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a4, v8);
  sub_2576A83F0();
  sub_2576A69F0();
  if (sub_2576A69E0())
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v18 + 16))(&v29, ObjectType);
    if (!*(void *)(v29 + 16))
    {
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      char v23 = -1;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v24 = 0;
      char v27 = -1;
      char v28 = 4;
      sub_25746BF88();
    }
    swift_bridgeObjectRelease();
    sub_2576A69B0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v16 = 0xD000000000000035;
    *(void *)(v16 + 8) = 0x80000002576C4B90;
    *(unsigned char *)(v16 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_25747FBE0(uint64_t a1)
{
  return sub_25747F5A8(a1);
}

uint64_t sub_25747FBF8@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v4 = sub_2576A6C60();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);
  uint64_t v6 = (unsigned int *)MEMORY[0x263F8CB68];
  if (v3 != 2) {
    uint64_t v6 = (unsigned int *)MEMORY[0x263F8CB70];
  }
  uint64_t v7 = *v6;
  return v5(a1, v7, v4);
}

uint64_t sub_25747FC7C(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_6_3();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v53 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v63 = (char *)&v53 - v9;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_4_4(v13, v53);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v67 = (uint64_t)&v53 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_2575CA350();
  uint64_t v20 = sub_2574BAF20(v19, a1);
  if (!v20) {
    goto LABEL_6;
  }
  uint64_t v22 = v20;
  uint64_t v64 = v21;
  uint64_t v65 = v11;
  uint64_t v61 = v8;
  uint64_t v23 = sub_2575CA350();
  uint64_t v24 = sub_2574BAF20(v23, a1);
  if (!v24)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257480520();
    swift_allocError();
    OUTLINED_FUNCTION_7_2(v50, 0xD00000000000002ELL);
    return a1;
  }
  uint64_t v26 = v24;
  uint64_t v27 = v25;
  type metadata accessor for NativeTensorStorage();
  uint64_t v69 = *(void *)(v1 + 72);
  char v68 = *(unsigned char *)(v1 + 80);
  sub_2576A7810();
  char v28 = (uint64_t *)OUTLINED_FUNCTION_9_2();
  uint64_t v29 = v62;
  sub_25754DDC0(v28, v30, v31);
  uint64_t v33 = v32;
  uint64_t v57 = v32;
  uint64_t v59 = v29;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr))(v64 + 16))(&v69);
  uint64_t v62 = v2;
  uint64_t v34 = v18;
  OUTLINED_FUNCTION_8_1(&v69, (uint64_t)v18);
  uint64_t v35 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v27 + 16))(&v69, v35, v27);
  uint64_t v60 = v22;
  OUTLINED_FUNCTION_8_1(&v69, v67);
  uint64_t v69 = *(void *)(v33 + 16);
  sub_2576A7810();
  uint64_t v55 = v1;
  OUTLINED_FUNCTION_8_1(&v69, v66);
  uint64_t v36 = *(void (**)(void))(v65 + 16);
  uint64_t v54 = v27;
  uint64_t v37 = v26;
  uint64_t v38 = (uint64_t)v63;
  OUTLINED_FUNCTION_3_4();
  v36();
  OUTLINED_FUNCTION_2_6(v38);
  uint64_t v39 = (uint64_t)v61;
  OUTLINED_FUNCTION_3_4();
  v36();
  OUTLINED_FUNCTION_2_6(v39);
  OUTLINED_FUNCTION_3_4();
  v36();
  uint64_t v40 = (uint64_t)v34;
  uint64_t v41 = v62;
  uint64_t v42 = OUTLINED_FUNCTION_2_6(v62);
  uint64_t v56 = &v53;
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  uint64_t v44 = v54;
  *(&v53 - 4) = v55;
  *(&v53 - 3) = v40;
  *(&v53 - 2) = v37;
  *(&v53 - 1) = v44;
  MEMORY[0x270FA5388](v43);
  *(&v53 - 8) = v37;
  *(&v53 - 7) = v45;
  uint64_t v46 = v57;
  *(&v53 - 6) = v39;
  *(&v53 - 5) = v46;
  *(&v53 - 4) = (uint64_t)&off_270667760;
  *(&v53 - 3) = v41;
  *(&v53 - 2) = (uint64_t)sub_257480E60;
  *(&v53 - 1) = v47;
  uint64_t v48 = v46;
  swift_retain();
  uint64_t v49 = v59;
  sub_257648508((uint64_t)sub_257480E80, (uint64_t)(&v53 - 10), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v49)
  {
    swift_unknownObjectRelease();
    swift_release_n();
    sub_257480BC8(v41);
    sub_257480BC8(v39);
    sub_257480BC8(v38);
    a1 = *(void *)(v65 + 8);
    OUTLINED_FUNCTION_1_8();
    ((void (*)(void))a1)();
    OUTLINED_FUNCTION_1_8();
    ((void (*)(void))a1)();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_1_8();
    ((void (*)(void))a1)();
  }
  else
  {
    swift_release();
    sub_257480BC8(v41);
    sub_257480BC8(v39);
    sub_257480BC8(v38);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    a1 = swift_allocObject();
    *(_OWORD *)(a1 + 16) = xmmword_2576ABB10;
    *(void *)(a1 + 32) = v48;
    *(void *)(a1 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v52 = *(void (**)(void))(v65 + 8);
    OUTLINED_FUNCTION_5_3();
    v52();
    OUTLINED_FUNCTION_5_3();
    v52();
    OUTLINED_FUNCTION_5_3();
    v52();
  }
  return a1;
}

uint64_t sub_257480158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a3;
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v10 = sub_2576A6DD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2576A6C60();
  MEMORY[0x270FA5388](v14 - 8);
  sub_25747FBF8((uint64_t)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a5;
  uint64_t v23 = a1;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(v13, a5, v10);
  sub_2576A83F0();
  sub_2576A69F0();
  uint64_t v24 = a2;
  if (sub_2576A69E0())
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v21 + 16))(&v35, ObjectType);
    if (!*(void *)(v35 + 16))
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      char v29 = -1;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v30 = 0;
      char v33 = -1;
      char v34 = 4;
      sub_25746BF88();
    }
    swift_bridgeObjectRelease();
    v16(v13, v22, v10);
    sub_2576A83F0();
    sub_2576A69A0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v19 = 0xD000000000000035;
    *(void *)(v19 + 8) = 0x80000002576C4B90;
    *(unsigned char *)(v19 + 16) = 1;
    return swift_willThrow();
  }
}

uint64_t sub_25748042C(uint64_t a1)
{
  return sub_25747FC7C(a1);
}

uint64_t sub_257480444(uint64_t a1)
{
  uint64_t result = sub_2574804CC(&qword_26A0012C0, (void (*)(uint64_t))type metadata accessor for ResizeGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257480488(uint64_t a1)
{
  uint64_t result = sub_2574804CC((unint64_t *)&qword_26A0012C8, (void (*)(uint64_t))type metadata accessor for ResizeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574804CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_257480520()
{
  unint64_t result = qword_26A0012D8;
  if (!qword_26A0012D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012D8);
  }
  return result;
}

uint64_t sub_25748056C(uint64_t a1, uint64_t a2)
{
  return sub_25747F940(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_25748058C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v17) = *(unsigned __int8 *)(v5 + 24);
  BOOL v19 = v17 > 0xC;
  int v20 = (1 << v17) & 0x1777;
  if (v19 || v20 == 0)
  {
    LODWORD(v25) = 0;
    uint64_t v24 = 13;
  }
  else
  {
    sub_257480C28(a1, (uint64_t)v12);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
    {
      uint64_t v27 = *(void *)(v5 + 16);
      sub_2576A7810();
      sub_25758A634(&v27, 0, 3, (uint64_t)v18);
      sub_257480BC8((uint64_t)v12);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v12, v13);
    }
    unint64_t v22 = sub_25758CEE0();
    if ((v22 & 1) == 0)
    {
      MEMORY[0x270FA5388](v22);
      *(&v26 - 4) = v5;
      *(&v26 - 3) = (uint64_t)v18;
      uint64_t v24 = a2;
      uint64_t v25 = a3;
      sub_257480C90(a4);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v13);
    }
    LODWORD(v25) = 0;
    uint64_t v24 = 16;
  }
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_25748082C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_257480870@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t (*a3)(unsigned char *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v28 = a4;
  char v29 = a3;
  uint64_t v27 = a5;
  uint64_t v7 = sub_2576A6DD0();
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_2576A8550();
  char v11 = *(unsigned char *)(a1 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  int v24 = sub_2576A6DB0();
  sub_2576A6DA0();
  long long v23 = *(_OWORD *)v30;
  long long v22 = *(_OWORD *)&v30[16];
  long long v21 = *(_OWORD *)&v30[32];
  uint64_t v12 = *(void *)&v30[48];
  uint64_t v13 = v31;
  sub_2576A6DC0();
  long long v20 = *(_OWORD *)v30;
  long long v19 = *(_OWORD *)&v30[16];
  long long v18 = *(_OWORD *)&v30[32];
  uint64_t v14 = *(void *)&v30[48];
  uint64_t v15 = v31;
  v30[0] = v11;
  LODWORD(a1) = sub_25758B4C0();
  v30[0] = v11;
  int v16 = sub_25758B4C0();
  *(_DWORD *)uint64_t v30 = 0;
  *(_DWORD *)&v30[4] = v24;
  *(_OWORD *)&v30[8] = v23;
  *(_OWORD *)&v30[24] = v22;
  *(_OWORD *)&v30[40] = v21;
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  long long v33 = v20;
  long long v34 = v19;
  long long v35 = v18;
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  uint64_t v38 = v25;
  int v39 = a1;
  uint64_t v40 = 0;
  int v41 = v16;
  uint64_t v42 = 1065353216;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  return v29(v30);
}

uint64_t sub_257480AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  swift_getObjectType();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a1;
  return sub_257648508((uint64_t)sub_257480CB0, (uint64_t)v9, MEMORY[0x263F8EE60] + 8, a4);
}

uint64_t sub_257480BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257480AF8(a1, *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_257480BC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_257480C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_257480C90@<X0>(uint64_t a1@<X8>)
{
  return sub_257480870(*(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(unsigned char *))(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_257480CB0(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(*(void *)(v1 + 32), a1);
}

uint64_t sub_257480CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  swift_getObjectType();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a7;
  uint64_t v20 = a1;
  return sub_257648508((uint64_t)sub_257480EB4, (uint64_t)v14, MEMORY[0x263F8EE60] + 8, a6);
}

uint64_t sub_257480DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  swift_getObjectType();
  void v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a1;
  return sub_257648508((uint64_t)sub_257480ED8, (uint64_t)v11, MEMORY[0x263F8EE60] + 8, a5);
}

uint64_t sub_257480E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_257480158(a1, a2, a3, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_257480E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257480CE4(a1, v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_257480EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257480DA8(a1, v2[5], v2[6], v2[7], a2);
}

uint64_t sub_257480ED8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, uint64_t))(v1 + 16))(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t OUTLINED_FUNCTION_2_6(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void OUTLINED_FUNCTION_4_4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_7_2@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_8_1@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25758A634(a1, 0, 2, a2);
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Upsample1D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Upsample2D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance SymmetricPad1D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance SymmetricPad2D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance ConstantPad1D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance ConstantPad2D()
{
  return OUTLINED_FUNCTION_15_2() & 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance MaxPool1D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance MaxPool2D()
{
  return OUTLINED_FUNCTION_15_2() & 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance AveragePool1D()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance AveragePool2D()
{
  return OUTLINED_FUNCTION_15_2() & 1;
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Reshape()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance ScaledTanh()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t protocol witness for Layer.isEveryParameterInitialized.getter in conformance Hardshrink()
{
  return OUTLINED_FUNCTION_15_2();
}

uint64_t sub_257481164()
{
  return OUTLINED_FUNCTION_15_2() & 1;
}

__n128 OUTLINED_FUNCTION_0_9()
{
  return v0[2];
}

uint64_t sub_2574811F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    OUTLINED_FUNCTION_3_5();
    sub_2574E72B4();
    uint64_t v3 = v9;
    uint64_t v4 = (uint64_t *)(v1 + 48);
    do
    {
      uint64_t v5 = *v4;
      unint64_t v7 = *(void *)(v9 + 16);
      unint64_t v6 = *(void *)(v9 + 24);
      swift_retain();
      if (v7 >= v6 >> 1) {
        sub_2574E72B4();
      }
      *(void *)(v9 + 16) = v7 + 1;
      *(void *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_2574812AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    OUTLINED_FUNCTION_3_5();
    sub_2574E7194();
    uint64_t v3 = v11;
    uint64_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      sub_2576A7810();
      if (v8 >= v7 >> 1) {
        sub_2574E7194();
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_257481370(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v4 = a1 + 48;
    do
    {
      v4 += 24;
      swift_retain();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

uint64_t sub_257481424(uint64_t a1, uint64_t (*a2)(void *, uint64_t, uint64_t, uint64_t, uint64_t *))
{
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_2574E71D4();
  uint64_t v3 = v21;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_2576A7810();
  uint64_t v17 = v4;
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      uint64_t v9 = *(v6 - 2);
      v19[1] = v5;
      v19[2] = v9;
      v19[3] = v8;
      uint64_t v20 = v7;
      sub_2576A7810();
      swift_retain();
      uint64_t v10 = a2(v19, v5, v9, v8, &v20);
      uint64_t v12 = v11;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v13 = v19[0];
      uint64_t v21 = v3;
      unint64_t v14 = *(void *)(v3 + 16);
      if (v14 >= *(void *)(v3 + 24) >> 1)
      {
        sub_2574E71D4();
        uint64_t v3 = v21;
      }
      ++v5;
      v6 += 3;
      *(void *)(v3 + 16) = v14 + 1;
      uint64_t v15 = (void *)(v3 + 24 * v14);
      v15[4] = v10;
      v15[5] = v12;
      v15[6] = v13;
    }
    while (v17 != v5);
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_257481594(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v2; uint64_t v2 = sub_2576A8BF0())
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v3 - 4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v5 = sub_2575CA350();
      uint64_t v6 = sub_2575CA350();
      swift_release();
      if (v5 == v6)
      {
        swift_release();
        uint64_t v7 = 1;
        goto LABEL_15;
      }
      ++v3;
      if (v4 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    sub_2576A7810();
  }
LABEL_14:
  swift_release();
  uint64_t v7 = 0;
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2574816EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(char *), uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void (*v52)(long long *__return_ptr, uint64_t);
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(char *);
  char *v62;
  void (*v63)(void);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t WitnessTable;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t *v72;
  void (*v73)(void);
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(void);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(void);
  void *v106;
  uint64_t v107;
  void (*v108)(void);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(void);
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(void);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t (*v158)(char *);
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  int v168;
  long long v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned char v177[80];
  uint64_t v178;
  long long v179;
  long long v180;
  uint64_t v181;

  uint64_t v161 = a3;
  uint64_t v157 = a8;
  uint64_t v158 = a7;
  uint64_t v165 = a9;
  uint64_t v181 = *MEMORY[0x263EF8340];
  uint64_t v171 = a10;
  OUTLINED_FUNCTION_0_10();
  uint64_t v164 = v14;
  uint64_t v15 = a11;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v149 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v166 = (char *)&v149 - v20;
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v21);
  uint64_t v159 = (char *)&v149 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v24 = MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v149 - v25;
  int v28 = *v27;
  *(void *)&v169 = *((void *)v27 + 1);
  uint64_t v174 = *((void *)v27 + 2);
  uint64_t v168 = v27[24];
  v170 = v29;
  uint64_t v162 = v29[2];
  uint64_t v163 = (uint64_t)(v29 + 2);
  ((void (*)(char *, __n128))v162)((char *)&v149 - v25, v24);
  uint64_t v167 = a12;
  v173 = v26;
  sub_257502AA8();
  LODWORD(v172) = v28;
  char v151 = a1;
  if (v28)
  {
    if (v28 != 1) {
      goto LABEL_8;
    }
LABEL_6:
    char v31 = 1;
    goto LABEL_9;
  }
  type metadata accessor for ContextManager();
  sub_2576A7810();
  sub_2575D60A8();
  OUTLINED_FUNCTION_11_2();
  swift_release();
  OUTLINED_FUNCTION_1_9();
  if (v178)
  {
    char v30 = *(unsigned char *)(v178 + 24);
    sub_2574718B0((uint64_t)v177);
    swift_bridgeObjectRelease();
    if (v30) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_2574718B0((uint64_t)v177);
    swift_bridgeObjectRelease();
  }
LABEL_8:
  char v31 = 2;
LABEL_9:
  LOBYTE(v179) = v31;
  uint64_t v32 = v167;
  uint64_t v33 = (uint64_t)v173;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v179);
  uint64_t v34 = v161;
  uint64_t v35 = a5(v161);
  uint64_t v36 = *(uint64_t (**)(uint64_t))(*(void *)v35 + 88);
  v154 = v35;
  uint64_t v176 = v36(v34);
  uint64_t v37 = sub_2576A7810();
  uint64_t v38 = v160;
  uint64_t v39 = sub_2574811F0(v37);
  swift_bridgeObjectRelease();
  uint64_t v179 = 0uLL;
  Array<A>.resolve(descriptor:)(&v179, v39);
  swift_bridgeObjectRelease();
  int v40 = v172;
  LOBYTE(v179) = v172;
  *((void *)&v179 + 1) = v169;
  *(void *)&uint64_t v180 = v174;
  BYTE8(v180) = v168;
  uint64_t v41 = v165;
  uint64_t v42 = sub_257482814(v33, (uint64_t)&v179, v165, v171, a11, v32);
  v160 = v42;
  uint64_t v43 = v33;
  if (v40)
  {
    if (v40 != 1) {
      LOBYTE(v40) = 0;
    }
    uint64_t v44 = v160;
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_2576A7810();
    sub_2575D60A8();
    OUTLINED_FUNCTION_11_2();
    swift_release();
    OUTLINED_FUNCTION_1_9();
    if (v178) {
      LOBYTE(v40) = *(unsigned char *)(v178 + 24);
    }
    else {
      LOBYTE(v40) = 0;
    }
    uint64_t v44 = v160;
    sub_2574718B0((uint64_t)v177);
    uint64_t v42 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](v42);
  *(&v149 - 6) = v41;
  uint64_t v45 = v171;
  *(&v149 - 5) = v171;
  *(&v149 - 4) = a11;
  *(&v149 - 3) = v46;
  uint64_t v147 = v43;
  v148 = v161;
  uint64_t v161 = sub_2575D57B8((uint64_t)v18, v40);
  uint64_t v156 = v38;
  (*(void (**)(char *, char *, uint64_t))(v164 + 32))(v166, v18, v45);
  uint64_t v47 = *(void *)(v44 + 16);
  uint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v175 = a11;
  if (v47)
  {
    sub_2576A7810();
    uint64_t v49 = v44 + 56;
    do
    {
      uint64_t v51 = *(void *)(v49 - 24);
      uint64_t v50 = *(void *)(v49 - 16);
      uint64_t v52 = *(void (**)(long long *__return_ptr, uint64_t))(v49 - 8);
      swift_bridgeObjectRetain_n();
      uint64_t v53 = swift_retain();
      v52(&v179, v53);
      uint64_t v54 = v179;
      swift_release();
      swift_bridgeObjectRelease();
      if (v54)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574729B4();
          uint64_t v48 = v57;
        }
        uint64_t v55 = *(void *)(v48 + 16);
        if (v55 >= *(void *)(v48 + 24) >> 1)
        {
          sub_2574729B4();
          uint64_t v48 = v58;
        }
        *(void *)(v48 + 16) = v55 + 1;
        uint64_t v56 = (void *)(v48 + 24 * v55);
        v56[4] = v51;
        v56[5] = v50;
        v56[6] = v54;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v49 += 32;
      --v47;
    }
    while (v47);
    swift_bridgeObjectRelease();
    uint64_t v15 = v175;
  }
  swift_bridgeObjectRelease();
  uint64_t v59 = v166;
  uint64_t v60 = v158(v166);
  uint64_t v61 = *(uint64_t (**)(char *))(*(void *)v60 + 88);
  uint64_t v153 = v60;
  uint64_t v152 = v61(v59);
  uint64_t v62 = v159;
  OUTLINED_FUNCTION_12_2();
  v63();
  uint64_t v64 = v167;
  Layer.namedParameterKeyPaths(recursively:)();
  v155 = &v149;
  *(void *)&uint64_t v179 = v65;
  MEMORY[0x270FA5388](v65);
  *(&v149 - 8) = v15;
  *(&v149 - 7) = v64;
  *((unsigned char *)&v149 - 48) = v172;
  OUTLINED_FUNCTION_10_1((uint64_t)&v149);
  sub_2576A89D0();
  swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_2576A7F50();
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F40);
  uint64_t v157 = v67;
  uint64_t v158 = (uint64_t (*)(char *))MEMORY[0x263F8D4D0];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v69 = v156;
  v160 = sub_257495BE0((void (*)(char *, uint64_t))sub_2574865F4, (uint64_t)(&v149 - 10), v66, v67, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v70);
  uint64_t v156 = v69;
  swift_bridgeObjectRelease();
  uint64_t v72 = v170 + 1;
  uint64_t v71 = (void (*)(char *, uint64_t))v170[1];
  v71(v62, v15);
  OUTLINED_FUNCTION_12_2();
  v73();
  Layer.namedLayerStateKeyPaths(recursively:)();
  v170 = &v149;
  *(void *)&uint64_t v179 = v74;
  MEMORY[0x270FA5388](v74);
  *(&v149 - 8) = v175;
  *(&v149 - 7) = v64;
  uint64_t v75 = v172;
  *((unsigned char *)&v149 - 48) = v172;
  OUTLINED_FUNCTION_10_1((uint64_t)&v149);
  sub_2576A89D0();
  swift_getTupleTypeMetadata2();
  uint64_t v76 = sub_2576A7F50();
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v78 = v156;
  uint64_t v80 = sub_257495BE0((void (*)(char *, uint64_t))sub_257486614, (uint64_t)(&v149 - 10), v76, v157, MEMORY[0x263F8E628], v77, MEMORY[0x263F8E658], v79);
  swift_bridgeObjectRelease();
  uint64_t v159 = (char *)v71;
  v170 = v72;
  v71(v62, v175);
  if (v75)
  {
    uint64_t v81 = v75 == 1;
    uint64_t v82 = v171;
    uint64_t v83 = v160;
    char v84 = v152;
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_2576A7810();
    sub_2575D60A8();
    OUTLINED_FUNCTION_11_2();
    swift_release();
    OUTLINED_FUNCTION_1_9();
    uint64_t v82 = v171;
    if (v178) {
      uint64_t v81 = *(unsigned char *)(v178 + 24);
    }
    else {
      uint64_t v81 = 0;
    }
    uint64_t v83 = v160;
    char v84 = v152;
    sub_2574718B0((uint64_t)v177);
    swift_bridgeObjectRelease();
  }
  char v85 = v165;
  sub_2574839A4((uint64_t)&v179);
  uint64_t v86 = sub_257483694(&v176, v84, v83, v48, v80, v81, (uint64_t)&v179, v85, v82);
  uint64_t v87 = v78;
  if (!v78)
  {
    uint64_t v157 = v86;
    sub_257486674((uint64_t)&v179);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v89 = (uint64_t)v173;
    uint64_t v91 = v161;
    if (v172)
    {
      if (v172 != 1) {
        goto LABEL_49;
      }
LABEL_42:
      sub_257602C84();
      uint64_t v90 = v175;
      uint64_t v156 = 0;
      uint64_t v93 = sub_257602CC0();
      uint64_t v94 = *(void *)(v93 + 16);
      if (v94)
      {
        OUTLINED_FUNCTION_8_2(MEMORY[0x263F8EE78]);
        uint64_t v95 = v179;
        uint64_t v158 = (uint64_t (*)(char *))type metadata accessor for TensorHandle();
        v155 = (uint64_t *)v93;
        uint64_t v96 = (uint64_t *)(v93 + 48);
        do
        {
          uint64_t v97 = *(v96 - 1);
          uint64_t v163 = *(v96 - 2);
          uint64_t v98 = *v96;
          uint64_t v162 = OUTLINED_FUNCTION_6_4();
          *(void *)(v162 + 16) = v98;
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_13_2();
          sub_2576139A8();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v179 = v95;
          uint64_t v100 = *(void *)(v95 + 16);
          uint64_t v99 = *(void *)(v95 + 24);
          if (v100 >= v99 >> 1)
          {
            OUTLINED_FUNCTION_2_7(v99);
            sub_2574E71D4();
            uint64_t v95 = v179;
          }
          *(void *)(v95 + 16) = v100 + 1;
          uint64_t v101 = (void *)(v95 + 24 * v100);
          v101[4] = v163;
          v101[5] = v97;
          v101[6] = v162;
          v96 += 3;
          --v94;
        }
        while (v94);
        uint64_t v152 = v95;
        swift_bridgeObjectRelease();
        uint64_t v90 = v175;
        uint64_t v110 = v171;
        uint64_t v111 = v161;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v152 = MEMORY[0x263F8EE78];
        uint64_t v110 = v171;
        uint64_t v111 = v91;
      }
      uint64_t v112 = sub_257602DA0();
      uint64_t v113 = *(void *)(v112 + 16);
      if (v113)
      {
        OUTLINED_FUNCTION_8_2(MEMORY[0x263F8EE78]);
        long long v114 = v179;
        uint64_t v158 = (uint64_t (*)(char *))type metadata accessor for TensorHandle();
        uint64_t v150 = v112;
        uint64_t v115 = (uint64_t *)(v112 + 48);
        do
        {
          char v116 = *(v115 - 1);
          uint64_t v163 = *(v115 - 2);
          uint64_t v117 = *v115;
          uint64_t v162 = OUTLINED_FUNCTION_6_4();
          *(void *)(v162 + 16) = v117;
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_13_2();
          sub_2576139A8();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v179 = v114;
          uint64_t v119 = *(void *)(v114 + 16);
          uint64_t v118 = *(void *)(v114 + 24);
          if (v119 >= v118 >> 1)
          {
            OUTLINED_FUNCTION_2_7(v118);
            sub_2574E71D4();
            long long v114 = v179;
          }
          *(void *)(v114 + 16) = v119 + 1;
          uint64_t v120 = (void *)(v114 + 24 * v119);
          v120[4] = v163;
          v120[5] = v116;
          v120[6] = v162;
          v115 += 3;
          --v113;
        }
        while (v113);
        v155 = (uint64_t *)v114;
        swift_bridgeObjectRelease();
        uint64_t v90 = v175;
        uint64_t v121 = v171;
        uint64_t v111 = v161;
      }
      else
      {
        uint64_t v121 = v110;
        swift_bridgeObjectRelease();
        v155 = (uint64_t *)MEMORY[0x263F8EE78];
      }
      uint64_t v122 = sub_257602DB8();
      uint64_t v123 = *(void *)(v122 + 16);
      if (v123)
      {
        OUTLINED_FUNCTION_7_3(MEMORY[0x263F8EE78]);
        uint64_t v124 = (uint64_t (*)(void))v179;
        uint64_t v158 = (uint64_t (*)(char *))type metadata accessor for TensorHandle();
        uint64_t v150 = v122;
        unint64_t v125 = (uint64_t *)(v122 + 48);
        do
        {
          unint64_t v126 = *(v125 - 1);
          uint64_t v163 = *(v125 - 2);
          uint64_t v127 = *v125;
          uint64_t v162 = OUTLINED_FUNCTION_6_4();
          *(void *)(v162 + 16) = v127;
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_13_2();
          sub_2576139A8();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v179 = v124;
          uint64_t v129 = *((void *)v124 + 2);
          uint64_t v128 = *((void *)v124 + 3);
          if (v129 >= v128 >> 1)
          {
            OUTLINED_FUNCTION_2_7(v128);
            sub_2574E71D4();
            uint64_t v124 = (uint64_t (*)(void))v179;
          }
          *((void *)v124 + 2) = v129 + 1;
          uint64_t v130 = (void *)((char *)v124 + 24 * v129);
          v130[4] = v163;
          v130[5] = v126;
          v130[6] = v162;
          v125 += 3;
          --v123;
        }
        while (v123);
        uint64_t v158 = (uint64_t (*)(char *))v124;
        swift_bridgeObjectRelease();
        uint64_t v90 = v175;
        uint64_t v121 = v171;
        uint64_t v111 = v161;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v158 = (uint64_t (*)(char *))MEMORY[0x263F8EE78];
      }
      uint64_t v131 = sub_257602DD0();
      uint64_t v132 = *(void *)(v131 + 16);
      if (v132)
      {
        OUTLINED_FUNCTION_7_3(MEMORY[0x263F8EE78]);
        unint64_t v133 = v179;
        uint64_t v162 = type metadata accessor for TensorHandle();
        uint64_t v150 = v131;
        __int16 v134 = (uint64_t *)(v131 + 48);
        do
        {
          BOOL v135 = *(v134 - 1);
          uint64_t v163 = *(v134 - 2);
          uint64_t v136 = *v134;
          uint64_t v137 = OUTLINED_FUNCTION_6_4();
          *(void *)(v137 + 16) = v136;
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_13_2();
          sub_2576139A8();
          swift_release();
          swift_bridgeObjectRelease();
          *(void *)&uint64_t v179 = v133;
          long long v138 = v133;
          uint64_t v139 = *(void *)(v133 + 16);
          uint64_t v140 = *(void *)(v138 + 24);
          if (v139 >= v140 >> 1)
          {
            OUTLINED_FUNCTION_2_7(v140);
            sub_2574E71D4();
            long long v138 = v179;
          }
          *(void *)(v138 + 16) = v139 + 1;
          __int16 v141 = (void *)(v138 + 24 * v139);
          v141[4] = v163;
          v141[5] = v135;
          v141[6] = v137;
          v134 += 3;
          --v132;
          unint64_t v133 = v138;
        }
        while (v132);
        swift_bridgeObjectRelease();
        uint64_t v90 = v175;
        uint64_t v121 = v171;
        uint64_t v142 = v133;
        uint64_t v111 = v161;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v142 = MEMORY[0x263F8EE78];
      }
      swift_bridgeObjectRelease();
      uint64_t v143 = v165;
      sub_2574839A4((uint64_t)&v179);
      uint64_t v144 = v156;
      uint64_t v163 = v142;
      uint64_t v145 = sub_257483A90(v152, (uint64_t)v155, (uint64_t)v158, v142, v111, (uint64_t)&v179, v143, v121);
      id v89 = (uint64_t)v173;
      if (v144)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_257486674((uint64_t)&v179);
        OUTLINED_FUNCTION_9_3();
        OUTLINED_FUNCTION_14_0();
        v146();
        goto LABEL_36;
      }
      unint64_t v102 = v145;
      sub_257486674((uint64_t)&v179);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      sub_257602C84();
      uint64_t v156 = 0;
      swift_release();
LABEL_50:
      LOBYTE(v179) = v172;
      *((void *)&v179 + 1) = v169;
      *(void *)&uint64_t v180 = v174;
      BYTE8(v180) = v168;
      sub_25748403C(v89, v48, (char *)&v179, v165, v171, v90, v167);
      sub_2576970B4(v157, v102, v154, v153, &v179);
      v172 = *((void *)&v179 + 1);
      uint64_t v174 = v179;
      v169 = v180;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      BOOL v103 = sub_25746DA64(v160);
      swift_bridgeObjectRelease();
      uint64_t v90 = sub_25746E8A8(v103);
      uint64_t v104 = sub_25746DA64(v48);
      swift_bridgeObjectRelease();
      sub_25746E8A8(v104);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_9_3();
      OUTLINED_FUNCTION_14_0();
      v105();
      swift_release();
      uint64_t v106 = v151;
      uint64_t v107 = v172;
      *char v151 = v174;
      v106[1] = v107;
      *((_OWORD *)v106 + 1) = v169;
      OUTLINED_FUNCTION_14_0();
      v108();
      return v90;
    }
    type metadata accessor for ContextManager();
    sub_2576A7810();
    sub_2575D60A8();
    OUTLINED_FUNCTION_11_2();
    swift_release();
    OUTLINED_FUNCTION_1_9();
    if (v178)
    {
      unint64_t v92 = *(unsigned char *)(v178 + 24);
      sub_2574718B0((uint64_t)v177);
      swift_bridgeObjectRelease();
      uint64_t v87 = 0;
      if (v92) {
        goto LABEL_42;
      }
    }
    else
    {
      sub_2574718B0((uint64_t)v177);
      swift_bridgeObjectRelease();
      uint64_t v87 = 0;
    }
LABEL_49:
    uint64_t v156 = v87;
    swift_bridgeObjectRelease();
    unint64_t v102 = 0;
    uint64_t v90 = v175;
    goto LABEL_50;
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_257486674((uint64_t)&v179);
  OUTLINED_FUNCTION_9_3();
  OUTLINED_FUNCTION_14_0();
  v88();
  swift_bridgeObjectRelease();
  id v89 = (uint64_t)v173;
  uint64_t v90 = v175;
LABEL_36:
  ((void (*)(uint64_t, uint64_t))v159)(v89, v90);
  return v90;
}

uint64_t sub_257482814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v73 = a6;
  uint64_t v75 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_2576A89D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v72 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v69 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v69 - v19;
  uint64_t v77 = *(void *)(a2 + 8);
  uint64_t v76 = *(void *)(a2 + 16);
  int v78 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v21 = type metadata accessor for AnyLayerVariablePathCache();
  uint64_t v22 = v73;
  uint64_t v23 = sub_2575E788C(a5, (uint64_t)&type metadata for LayerState, 1, a5);
  uint64_t v74 = a1;
  if (v23)
  {
    uint64_t v24 = v23;
  }
  else
  {
    v69[1] = v21;
    uint64_t v86 = sub_2576A76E0();
    *(void *)&long long v84 = MEMORY[0x263F8EE88];
    *(void *)&long long v85 = MEMORY[0x263F8EE88];
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v10, a1, a5);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = a5;
    *(void *)(v25 + 24) = v22;
    *(unsigned char *)(v25 + 32) = 1;
    *(_DWORD *)(v25 + 36) = 4;
    sub_2574FE820();
    uint64_t v26 = v72;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    uint64_t WitnessTable = (uint64_t)v20;
    v27(v14, v20, v12);
    swift_getWitnessTable();
    sub_2576A7C40();
    uint64_t v75 = v12;
    sub_2574FF0E8();
    int v28 = v79;
    uint64_t v29 = v26;
    char v30 = v17;
    uint64_t v70 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))a5;
    if (v79)
    {
      char v31 = v80;
      unint64_t v32 = v81;
      uint64_t v33 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v34 = sub_2576A7810();
        MEMORY[0x25A2B84C0](v34, v11);
        swift_bridgeObjectRelease();
        uint64_t v79 = v28;
        sub_2576A7F50();
        swift_retain();
        sub_2576A7F10();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574727D8();
          uint64_t v33 = v36;
        }
        unint64_t v35 = *(void *)(v33 + 16);
        if (v35 >= *(void *)(v33 + 24) >> 1)
        {
          sub_2574727D8();
          uint64_t v33 = v37;
        }
        *(void *)(v33 + 16) = v35 + 1;
        *(void *)(v33 + 8 * v35 + 32) = v31;
        if ((v32 & 0x400000000) != 0) {
          sub_2575E8A18();
        }
        if (v32) {
          sub_2575E8A18();
        }
        swift_release();
        sub_2574FF0E8();
        int v28 = v79;
        char v31 = v80;
        unint64_t v32 = v81;
      }
      while (v79);
    }
    uint64_t v38 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v72 = v29 + 8;
    uint64_t v39 = v75;
    v38(v30, v75);
    uint64_t v79 = v70;
    uint64_t v80 = &type metadata for LayerState;
    unint64_t v81 = v73;
    uint64_t v82 = &protocol witness table for LayerState;
    type metadata accessor for LayerVariablePaths();
    sub_2575E7ADC();
    uint64_t v24 = v40;
    sub_2575E7B58();
    sub_2575E7B60(v24);
    v38((char *)WitnessTable, v39);
  }
  swift_retain();
  uint64_t v41 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))sub_2575E7E60();
  swift_release();
  uint64_t v79 = v41;
  uint64_t v73 = v24;
  uint64_t v86 = sub_2575E59F4();
  uint64_t v42 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))__swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
  uint64_t v43 = sub_2576A7F50();
  unint64_t v44 = sub_257486B38();
  uint64_t v45 = swift_getWitnessTable();
  sub_2576A9000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v85 = v84;
  uint64_t v79 = v42;
  uint64_t v80 = (ValueMetadata *)v43;
  unint64_t v81 = v44;
  uint64_t v82 = (_UNKNOWN **)v45;
  sub_2576A87A0();
  sub_2576A8770();
  uint64_t v79 = v42;
  uint64_t v80 = (ValueMetadata *)v43;
  unint64_t v81 = v44;
  uint64_t v82 = (_UNKNOWN **)v45;
  sub_2576A8790();
  sub_2576A8780();
  uint64_t v46 = (ValueMetadata *)*((void *)&v84 + 1);
  if (*((void *)&v84 + 1))
  {
    uint64_t v47 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))v84;
    uint64_t v75 = MEMORY[0x263F8EE78];
    do
    {
      while (1)
      {
        if ((v78 & 1) == 0)
        {
          uint64_t v79 = v47;
          uint64_t v80 = v46;
          *(void *)&long long v84 = 46;
          *((void *)&v84 + 1) = 0xE100000000000000;
          *(void *)&long long v85 = v77;
          *((void *)&v85 + 1) = v76;
          sub_25747EFA8();
          uint64_t v47 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))sub_2576A8570();
          uint64_t v49 = v48;
          swift_bridgeObjectRelease();
          uint64_t v46 = v49;
        }
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        uint64_t v50 = *((void *)v79 + 4);
        if ((~v50 & 0xF000000000000007) != 0) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v79 = v42;
        uint64_t v80 = (ValueMetadata *)v43;
        unint64_t v81 = v44;
        uint64_t v82 = (_UNKNOWN **)v45;
        sub_2576A8790();
        sub_2576A8780();
        uint64_t v46 = (ValueMetadata *)*((void *)&v84 + 1);
        uint64_t v47 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))v84;
        if (!*((void *)&v84 + 1)) {
          goto LABEL_36;
        }
      }
      if (v50 < 0)
      {
        sub_257486C84();
        sub_257486C84();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574728B8();
          uint64_t v75 = v66;
        }
        unint64_t v60 = *(void *)(v75 + 16);
        uint64_t v61 = v60 + 1;
        if (v60 >= *(void *)(v75 + 24) >> 1)
        {
          uint64_t v72 = v60 + 1;
          sub_2574728B8();
          uint64_t v61 = v72;
          uint64_t v75 = v67;
        }
        uint64_t v62 = v75;
        *(void *)(v75 + 16) = v61;
        uint64_t v63 = (void *)(v62 + 32 * v60);
        v63[4] = v47;
        v63[5] = v46;
        v63[6] = sub_257486CA0;
        v63[7] = v50 & 0x7FFFFFFFFFFFFFFFLL;
        swift_release();
        swift_release();
        sub_257486C8C(v50);
      }
      else
      {
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = 0;
        uint64_t v52 = v51;
        uint64_t v72 = v51;
        uint64_t v53 = swift_allocObject();
        uint64_t WitnessTable = v53;
        *(void *)(v53 + 16) = v50;
        *(void *)(v53 + 24) = v52;
        uint64_t v79 = sub_257486C04;
        uint64_t v80 = (ValueMetadata *)v53;
        char v83 = 4;
        type metadata accessor for ParameterInitializer();
        uint64_t v54 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))swift_allocObject();
        sub_257486C14((uint64_t)&v79, (uint64_t)v54 + 16);
        uint64_t v79 = v54;
        sub_257486C70(v50);
        swift_retain();
        sub_257486C70(v50);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_25748F984((uint64_t *)&v79);
        swift_release();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574728B8();
          uint64_t v75 = v64;
        }
        unint64_t v55 = *(void *)(v75 + 16);
        uint64_t v56 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))(v55 + 1);
        if (v55 >= *(void *)(v75 + 24) >> 1)
        {
          uint64_t v70 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))(v55 + 1);
          sub_2574728B8();
          uint64_t v56 = v70;
          uint64_t v75 = v65;
        }
        uint64_t v57 = v75;
        *(void *)(v75 + 16) = v56;
        uint64_t v58 = (void *)(v57 + 32 * v55);
        v58[4] = v47;
        v58[5] = v46;
        uint64_t v59 = v72;
        v58[6] = sub_257486C0C;
        v58[7] = v59;
        swift_release();
        swift_release();
        sub_257486C8C(v50);
        swift_release();
        swift_release_n();
      }
      uint64_t v79 = v42;
      uint64_t v80 = (ValueMetadata *)v43;
      unint64_t v81 = v44;
      uint64_t v82 = (_UNKNOWN **)v45;
      sub_2576A8790();
      sub_2576A8780();
      uint64_t v46 = (ValueMetadata *)*((void *)&v84 + 1);
      uint64_t v47 = (uint64_t (*)@<X0>(uint64_t *@<X0>, void *@<X8>))v84;
    }
    while (*((void *)&v84 + 1));
  }
  else
  {
    uint64_t v75 = MEMORY[0x263F8EE78];
  }
LABEL_36:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v75;
}

uint64_t sub_25748331C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = *(void *)(a5 - 8);
  __n128 v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
  Layer.callAsFunction(_:)(a2, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a5);
}

uint64_t sub_257483428(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v4; uint64_t v4 = sub_2576A8BF0())
  {
    uint64_t v5 = 0;
    unint64_t v21 = v3 & 0xC000000000000001;
    uint64_t v19 = (_OWORD *)(a2 + 40);
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v17 = v4;
    unint64_t v18 = v3;
    uint64_t v20 = a2;
    while (1)
    {
      if (v21) {
        MEMORY[0x25A2B8DB0](v5, v3);
      }
      else {
        swift_retain();
      }
      if (__OFADD__(v5++, 1)) {
        break;
      }
      uint64_t v7 = *(void *)(a2 + 16);
      if (v7)
      {
        sub_2576A7810();
        uint64_t v8 = v19;
        while (1)
        {
          long long v22 = *v8;
          uint64_t v9 = *((void *)v8 - 1);
          swift_retain();
          sub_2576A7810();
          swift_retain();
          uint64_t v10 = sub_2575CA350();
          swift_release();
          if (v10 == sub_2575CA350()) {
            break;
          }
          uint64_t v8 = (_OWORD *)((char *)v8 + 24);
          swift_release();
          swift_bridgeObjectRelease();
          if (!--v7)
          {
            swift_release();
            a2 = v20;
            swift_bridgeObjectRelease();
            uint64_t v4 = v17;
            unint64_t v3 = v18;
            goto LABEL_19;
          }
        }
        swift_release();
        a2 = v20;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574729B4();
          uint64_t v23 = v14;
        }
        uint64_t v4 = v17;
        unint64_t v3 = v18;
        unint64_t v11 = *(void *)(v23 + 16);
        long long v12 = v22;
        if (v11 >= *(void *)(v23 + 24) >> 1)
        {
          sub_2574729B4();
          long long v12 = v22;
          uint64_t v23 = v15;
        }
        *(void *)(v23 + 16) = v11 + 1;
        uint64_t v13 = v23 + 24 * v11;
        *(void *)(v13 + 32) = v9;
        *(_OWORD *)(v13 + 40) = v12;
      }
      else
      {
        swift_release();
      }
LABEL_19:
      if (v5 == v4) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    sub_2576A7810();
  }
  uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_24:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_257483694(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = a4;
  uint64_t v30 = a5;
  uint64_t v28 = a3;
  type metadata accessor for LazyTensorFunctionBuilder();
  unint64_t v15 = sub_257481370(a2);
  v41[0] = a6;
  uint64_t v42 = MEMORY[0x263F8EE88];
  if (!sub_2575F21B0(v15, v41))
  {
    type metadata accessor for Function.CompilationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v21 = 0x80000002576C4CC0;
    uint64_t v23 = v22;
    uint64_t v24 = 0xD000000000000027;
LABEL_7:
    sub_2576970C0(v24, v21, v23);
    swift_willThrow();
    return a8;
  }
  sub_2575F0098();
  uint64_t v17 = v16;
  swift_release();
  if (*(void *)(v17 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for Function.CompilationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v24 = 0xD00000000000007CLL;
    uint64_t v21 = 0x80000002576C4CF0;
    uint64_t v23 = v25;
    goto LABEL_7;
  }
  sub_25747C54C(v17 + 32, (uint64_t)v41);
  uint64_t v18 = swift_bridgeObjectRelease();
  uint64_t v19 = *a1;
  MEMORY[0x270FA5388](v18);
  v27[2] = v41;
  sub_2576A7810();
  uint64_t v20 = sub_25765464C((void (*)(uint64_t *__return_ptr, void *))sub_257486AEC, (uint64_t)v27, v19);
  v27[4] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a1 = v20;
  sub_25747B47C((uint64_t)&v43, (uint64_t)&v33);
  sub_2574866D0(a7, (uint64_t)v31);
  if (*((void *)&v34 + 1))
  {
    sub_257486674((uint64_t)v31);
    long long v37 = v33;
    long long v38 = v34;
    long long v39 = v35;
    int v40 = v36;
  }
  else
  {
    long long v37 = v31[0];
    long long v38 = v31[1];
    long long v39 = v31[2];
    int v40 = v32;
    sub_25747B4E4((uint64_t)&v33);
  }
  a8 = sub_257484668((uint64_t)v41, *a1, v28, v29, 0, 0, v30, a2, 0, (uint64_t)&v37, a8, a9);
  sub_257486674((uint64_t)&v37);
  sub_25747F1AC((uint64_t)v41);
  return a8;
}

uint64_t sub_2574839A4@<X0>(uint64_t a1@<X8>)
{
  if (qword_26A0008B0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26A030A10;
  uint64_t v3 = unk_26A030A18;
  __swift_project_boxed_opaque_existential_1(qword_26A0309F8, qword_26A030A10);
  OUTLINED_FUNCTION_0_10();
  __n128 v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v8 + 16))(v7, v5);
  return sub_2575B5594(1, (uint64_t)v7, v2, v3, a1);
}

uint64_t sub_257483A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v62 = a8;
  *(void *)unint64_t v60 = a2;
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v46 = a3;
  sub_2575A0B2C();
  uint64_t v13 = v9;
  uint64_t v14 = sub_2574811F0(a1);
  uint64_t v49 = *(void *)v60;
  uint64_t v15 = sub_2574811F0(*(uint64_t *)v60);
  uint64_t v16 = v9;
  uint64_t v17 = (void (*)(void))sub_257649EE4(v14, v15, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (v18)
  {
    uint64_t v43 = v17;
    *(void *)&long long v52 = MEMORY[0x263F8EE78];
    sub_2574E71D4();
    uint64_t v19 = v52;
    uint64_t v20 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v21 = *(v20 - 1);
      uint64_t v22 = *v20;
      *(void *)&long long v56 = *(v20 - 2);
      *((void *)&v56 + 1) = v21;
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_2576A7B00();
      *(_OWORD *)unint64_t v60 = v56;
      swift_retain();
      *(void *)&long long v56 = v22;
      Tensor.init(onesLike:)((uint64_t *)&v56, &v60[16]);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v23 = *(void *)v60;
      long long v24 = *(_OWORD *)&v60[8];
      *(void *)&long long v52 = v19;
      unint64_t v25 = *(void *)(v19 + 16);
      if (v25 >= *(void *)(v19 + 24) >> 1)
      {
        long long v42 = *(_OWORD *)&v60[8];
        sub_2574E71D4();
        long long v24 = v42;
        uint64_t v19 = v52;
      }
      *(void *)(v19 + 16) = v25 + 1;
      uint64_t v26 = v19 + 24 * v25;
      *(void *)(v26 + 32) = v23;
      *(_OWORD *)(v26 + 40) = v24;
      v20 += 3;
      --v18;
    }
    while (v18);
    uint64_t v17 = v43;
    uint64_t v16 = v13;
  }
  sub_2574811F0(v19);
  v17();
  uint64_t v27 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_257481424(v49, (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t *))sub_2574866C8);
  uint64_t v29 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  unint64_t v30 = sub_257481370(v28);
  v60[0] = 0;
  *(void *)&v60[8] = MEMORY[0x263F8EE88];
  if (!sub_2575F21B0(v30, v60))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = a7;
    type metadata accessor for Function.CompilationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v34 = 0x80000002576C4CC0;
    int v36 = v35;
    uint64_t v37 = 0xD000000000000027;
LABEL_13:
    sub_2576970C0(v37, v34, v36);
    swift_willThrow();
    swift_release();
    return v29;
  }
  sub_2575F0098();
  uint64_t v32 = v31;
  swift_release();
  if (*(void *)(v32 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = a7;
    type metadata accessor for Function.CompilationError();
    swift_getWitnessTable();
    swift_allocError();
    uint64_t v37 = 0xD00000000000007CLL;
    uint64_t v34 = 0x80000002576C4CF0;
    int v36 = v38;
    goto LABEL_13;
  }
  sub_25747C54C(v32 + 32, (uint64_t)v60);
  swift_bridgeObjectRelease();
  sub_2576A7810();
  unint64_t v33 = sub_2576A7810();
  sub_257483428(v33, a2);
  swift_bridgeObjectRelease();
  sub_25747B47C((uint64_t)&v61, (uint64_t)&v52);
  sub_2574866D0(a6, (uint64_t)v50);
  if (*((void *)&v53 + 1))
  {
    sub_257486674((uint64_t)v50);
    long long v56 = v52;
    long long v57 = v53;
    long long v58 = v54;
    int v59 = v55;
  }
  else
  {
    long long v56 = v50[0];
    long long v57 = v50[1];
    long long v58 = v50[2];
    int v59 = v51;
    sub_25747B4E4((uint64_t)&v52);
  }
  sub_2575A0B2C();
  *(void *)&long long v41 = 1684107879;
  *((void *)&v41 + 1) = 0xE400000000000000;
  uint64_t v39 = sub_257484668((uint64_t)v60, v19, v46, a4, 0, 0, MEMORY[0x263F8EE78], v28, v41, (uint64_t)&v56, a7, v62);
  if (!v16) {
    uint64_t v29 = v39;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_257486674((uint64_t)&v56);
  sub_25747F1AC((uint64_t)v60);
  return v29;
}

uint64_t sub_25748403C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v12 = *a3;
  uint64_t v13 = *((void *)a3 + 1);
  uint64_t v14 = *((void *)a3 + 2);
  char v15 = a3[24];
  Layer.namedLayerStateKeyPaths(recursively:)();
  v51[0] = v16;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v46 = a7;
  char v47 = v12;
  uint64_t v48 = v13;
  uint64_t v49 = v14;
  char v50 = v15;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  long long v41 = sub_257486A64;
  long long v42 = &v43;
  uint64_t v17 = sub_2576A89D0();
  swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_2576A7F50();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v22 = sub_257495BE0((void (*)(char *, uint64_t))sub_257486A9C, (uint64_t)v36, v18, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v21);
  swift_bridgeObjectRelease();
  v51[0] = v22;
  sub_2576A7F50();
  swift_getWitnessTable();
  uint64_t v35 = v17;
  uint64_t v23 = sub_2576A77F0();
  uint64_t v24 = *(void *)(a2 + 16);
  if (v24)
  {
    sub_2576A7810();
    unint64_t v25 = (uint64_t *)(a2 + 48);
    uint64_t v26 = a1;
    uint64_t v34 = v23;
    do
    {
      uint64_t v27 = *(v25 - 1);
      uint64_t v28 = *v25;
      v51[0] = *(v25 - 2);
      v51[1] = v27;
      sub_2576A7810();
      swift_retain();
      MEMORY[0x25A2B7E20](v52, v51, v23, MEMORY[0x263F8D310], v35, MEMORY[0x263F8D320]);
      swift_bridgeObjectRelease();
      if (v52[0])
      {
        uint64_t v29 = sub_2575CA350();
        Layer.value<A>(for:)();
        uint64_t v30 = v26;
        swift_retain();
        swift_release();
        uint64_t v31 = sub_2575CA350();
        swift_release();
        if (v29 != v31)
        {
          v52[0] = v28;
          Layer.updateValue<A>(_:for:)();
          swift_release();
        }
        swift_release();
        swift_release();
        uint64_t v26 = v30;
        uint64_t v23 = v34;
      }
      else
      {
        swift_release();
      }
      v25 += 3;
      --v24;
    }
    while (v24);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_257484360@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for TensorHandle();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain_n();
  sub_2576139A8();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_2574843C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  sub_25748749C(a2, *a1, (uint64_t)&v9);
  uint64_t v7 = v9;
  sub_25748721C(v6);
  swift_retain();
  sub_25748D684((void (*)(uint64_t *__return_ptr))sub_257486CA8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_beginAccess();
  *(void *)(a3 + 16) = v7;
  swift_retain();
  uint64_t result = swift_release();
  *a4 = v7;
  return result;
}

uint64_t sub_2574844C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_25748450C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    sub_2576A7810();
  }
  else
  {
    sub_25747EFA8();
    a1 = sub_2576A8570();
  }
  swift_retain();
  return a1;
}

uint64_t sub_2574845BC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  sub_2576A7810();
  swift_retain();
  unint64_t v6 = sub_2576A7810();
  char v7 = sub_257481594(v6);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    sub_2576A7810();
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  return result;
}

uint64_t sub_257484668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v47 = a12;
  FunctionTypeMetadata1 = a11;
  v40[1] = *((void *)&a9 + 1);
  sub_25747C54C(a1, (uint64_t)v53);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_allocObject();
  sub_2575F6340((uint64_t)v53);
  uint64_t v18 = v17;
  uint64_t v44 = (void *)a2;
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v45 = a3;
  sub_2575A0B2C();
  sub_2576A7810();
  uint64_t v46 = a4;
  sub_2575A0B2C();
  sub_2576A7810();
  sub_2575F2588(v18);
  v50[0] = a8;
  uint64_t v42 = a8;
  sub_2576A7810();
  sub_2576A7810();
  sub_2575A0B2C();
  sub_2576A7810();
  sub_2575F2780(v18, a8);
  uint64_t v54 = MEMORY[0x263F8EE88];
  long long v52 = a9;
  if (*((void *)&a9 + 1))
  {
    uint64_t v41 = v12;
    sub_2576A7810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = sub_2574812AC(a2);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_2574870D4(v19);
    swift_bridgeObjectRelease();
    uint64_t v54 = v20;
    uint64_t v21 = sub_2574812AC(v50[0]);
    uint64_t v41 = v12;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_2574870D4(v21);
    sub_2576A7810();
    LOBYTE(v21) = sub_2574854EC(v22, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      long long v52 = xmmword_2576ACAE0;
    }
  }
  uint64_t v23 = v47;
  uint64_t v24 = FunctionTypeMetadata1;
  _s9IOMappingVMa();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  uint64_t v51 = sub_2576A76E0();
  MEMORY[0x270FA5388](v51);
  v38[2] = v24;
  v38[3] = v47;
  sub_2575F2B08();
  uint64_t v25 = OUTLINED_FUNCTION_6_4();
  sub_2576A84C0();
  swift_getFunctionTypeMetadata1();
  uint64_t v26 = sub_2576A76E0();
  *(void *)(v25 + 16) = v26;
  MEMORY[0x270FA5388](v26);
  void v38[4] = v24;
  v38[5] = v23;
  v39[0] = v44;
  v39[1] = v18;
  uint64_t v47 = v25;
  v39[2] = v25;
  v39[3] = v45;
  void v39[4] = v46;
  sub_2575F0018();
  sub_2575F0098();
  if (*(void *)(v27 + 16) == 1)
  {
    uint64_t v46 = a10;
    sub_25747C54C(v27 + 32, (uint64_t)v50);
    swift_bridgeObjectRelease();
    uint64_t v28 = swift_beginAccess();
    uint64_t v44 = v40;
    v48[0] = *(void *)(v47 + 16);
    MEMORY[0x270FA5388](v28);
    OUTLINED_FUNCTION_14_2((uint64_t)v40);
    sub_2576A7F50();
    sub_2576A7810();
    uint64_t v29 = swift_checkMetadataState();
    swift_getWitnessTable();
    uint64_t v45 = sub_2576A7C60();
    uint64_t v30 = swift_bridgeObjectRelease();
    uint64_t v44 = v39;
    v49[0] = v51;
    MEMORY[0x270FA5388](v30);
    OUTLINED_FUNCTION_14_2((uint64_t)v39);
    uint64_t v31 = sub_2576A7F50();
    sub_2576A7810();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v34 = sub_257495BE0((void (*)(char *, uint64_t))sub_2574867F8, (uint64_t)v38, v31, v29, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v33);
    swift_release();
    swift_bridgeObjectRelease();
    _s11ComputePassCMa();
    sub_2574866D0(v46, (uint64_t)v49);
    sub_25747C54C((uint64_t)v50, (uint64_t)v48);
    uint64_t v35 = sub_257602EE0(v45, v34, (uint64_t)v49, v48);
    sub_25747F1AC((uint64_t)v50);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = type metadata accessor for Function.CompilationError();
    swift_getWitnessTable();
    swift_allocError();
    sub_2576970C0(0xD00000000000007ALL, 0x80000002576C4D70, v36);
    swift_willThrow();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v35;
}

uint64_t *sub_257484CDC(uint64_t *result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (*(void *)(a6 + 16) <= a2)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  char v7 = result;
  uint64_t v8 = *(void *)(a6 + 8 * a2 + 32);
  uint64_t v9 = *(void *)(v8 + 16);
  swift_retain_n();
  swift_retain();
  id v10 = sub_257614628();
  objc_msgSend(v10, sel_lock);

  swift_beginAccess();
  sub_257486824(v9 + 40, (uint64_t)&v20);
  if (v26)
  {
    if (v26 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_25748692C((uint64_t)&v22 + 8);
    }
    else
    {
      sub_257486880((uint64_t)&v20);
    }
    id v12 = sub_257614628();
    objc_msgSend(v12, sel_unlock);
    swift_release_n();

    sub_2576A7810();
    uint64_t v13 = *(void *)(v8 + 16);
    swift_retain();
    uint64_t v14 = sub_25761BED4((uint64_t)sub_25753A050);
    uint64_t v16 = v15;
    *(void *)&long long v20 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/Un"
                      "aryArithmeticOps.swift";
    *((void *)&v20 + 1) = 120;
    char v21 = 2;
    long long v22 = xmmword_2576ACAF0;
    uint64_t v23 = "init(id:operator:operand:creationSite:backward:)";
    uint64_t v24 = 48;
    char v25 = 2;
    type metadata accessor for UnaryArithmeticOperation();
    swift_allocObject();
    uint64_t v17 = sub_2574E01C8(0, 0, 0, 13, v13, &v20, v14, v16);
    uint64_t v18 = (uint64_t (**)(void, void))sub_257486A14();
    sub_25747B47C(v13 + 168, (uint64_t)v19);
    sub_257613838(v17, v18, 0, (uint64_t)v19, v7);
    swift_release();
  }
  else
  {
    sub_257486880((uint64_t)&v20);
    id v11 = sub_257614628();
    objc_msgSend(v11, sel_unlock);
    swift_release_n();

    sub_2576A7810();
    *char v7 = v8;
  }
  return (uint64_t *)a3;
}

BOOL sub_257484F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_257484F78(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2575F248C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2575F248C);
}

BOOL sub_257484F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_2576A7810();
  swift_retain();
  uint64_t v17 = a8(a7, a1, a2, a3);
  LOBYTE(a3) = v18;
  sub_2576A7810();
  swift_retain();
  uint64_t v19 = a9(a7, a4, a5, a6);
  if (a3) {
    uint64_t v17 = *(void *)(a7 + 16);
  }
  if (v20) {
    uint64_t v19 = *(void *)(a7 + 16);
  }
  return v17 < v19;
}

uint64_t sub_257485048(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
  for (uint64_t i = a2 + 48; ; i += 24)
  {
    uint64_t v6 = *(void *)(i - 16);
    swift_retain();
    sub_2576A7810();
    swift_retain();
    uint64_t v7 = sub_2575CA350();
    swift_release();
    if (v7 == sub_2575CA350()) {
      break;
    }
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_25748514C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
  for (uint64_t i = a2 + 48; ; i += 24)
  {
    uint64_t v6 = *(void *)(i - 16);
    swift_retain();
    sub_2576A7810();
    swift_retain();
    uint64_t v7 = sub_2575CA350();
    swift_release();
    if (v7 == sub_2575CA350()) {
      break;
    }
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_257485254(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
  for (uint64_t i = a2 + 48; ; i += 24)
  {
    uint64_t v6 = *(void *)(i - 16);
    swift_retain();
    sub_2576A7810();
    swift_retain();
    uint64_t v7 = sub_2575CA350();
    swift_release();
    if (v7 == sub_2575CA350()) {
      break;
    }
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_25748535C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
  for (uint64_t i = a2 + 48; ; i += 24)
  {
    uint64_t v6 = *(void *)(i - 16);
    swift_retain();
    sub_2576A7810();
    swift_retain();
    uint64_t v7 = sub_2575CA350();
    swift_release();
    if (v7 == sub_2575CA350()) {
      break;
    }
    ++v4;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2 == v4)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
  }
  swift_release();
  swift_bridgeObjectRelease_n();
  return v6;
}

uint64_t sub_257485468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  if (a2)
  {
    sub_2576A7810();
    sub_2576A7B00();
    sub_2576A7B00();
    return a3;
  }
  else
  {
    sub_2576A7810();
  }
  return v3;
}

uint64_t sub_2574854EC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v32 = v4;
  uint64_t v33 = v4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = v5 + 56;
  sub_2576A7810();
  uint64_t result = sub_2576A7810();
  int64_t v11 = 0;
  while (1)
  {
    int64_t v12 = v11;
    if (!v8) {
      break;
    }
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_29:
    if (*(void *)(v5 + 16))
    {
      char v18 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v14);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      sub_2576A9090();
      sub_2576A7810();
      sub_2576A78E0();
      uint64_t v21 = sub_2576A9100();
      uint64_t v22 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v23 = v21 & ~v22;
      if ((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
      {
        uint64_t v24 = *(void *)(v5 + 48);
        char v25 = (void *)(v24 + 16 * v23);
        BOOL v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_2576A8F60() & 1) != 0)
        {
LABEL_46:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v30 = 0;
LABEL_47:
          sub_25748681C();
          return v30;
        }
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          uint64_t v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_2576A8F60() & 1) != 0) {
            goto LABEL_46;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_51;
  }
  if (v15 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v15);
  ++v11;
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 2;
  if (v12 + 2 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16) {
    goto LABEL_28;
  }
  int64_t v11 = v12 + 3;
  if (v12 + 3 >= v31) {
    goto LABEL_49;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v11);
  if (v16)
  {
LABEL_28:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    goto LABEL_29;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v30 = 1;
    goto LABEL_47;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v12 + 4;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_49;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_28;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_2574857CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14 = sub_257485254(a2, a3);
  uint64_t v33 = a2;
  if (!v15)
  {
    uint64_t v14 = sub_25748535C(a2, a4);
    if (!v15)
    {
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576136DC();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_25746BE6C();
    }
  }
  uint64_t v18 = v14;
  uint64_t v19 = v15;
  uint64_t v20 = v16;
  char v21 = v17;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a10;
  *(void *)(v22 + 24) = a11;
  *(void *)(v22 + 32) = a1;
  *(void *)(v22 + 40) = v18;
  *(void *)(v22 + 48) = v19;
  *(void *)(v22 + 56) = v20;
  *(unsigned char *)(v22 + 64) = v21;
  unint64_t v23 = (void *)swift_allocObject();
  v23[2] = a10;
  v23[3] = a11;
  v23[4] = sub_257486980;
  v23[5] = v22;
  _s9IOMappingVMa();
  swift_getFunctionTypeMetadata1();
  sub_2576A7F50();
  sub_2576A7810();
  swift_retain();
  sub_2576A7F10();
  if ((a6 & 1) != 0
    || (uint64_t v24 = *a7, sub_2576A7810(), sub_257528848(v18, v19, v24), v26 = v25, swift_bridgeObjectRelease(), (v26 & 1) != 0))
  {
    uint64_t v28 = *a8;
    uint64_t v27 = a8[1];
    sub_2576A7810();
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v27 = 0;
  }
  sub_257485468(v28, v27, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_25747EFA8();
  sub_2576A8570();
  swift_bridgeObjectRelease();
  sub_2575F2A44(v33);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257485AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, _OWORD *a6@<X8>)
{
  uint64_t v11 = *(void *)(a1 + 152);
  sub_257582858(a2, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0)
  {
    sub_2576A7810();
    MEMORY[0x25A2B8DB0](a2, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  uint64_t v12 = sub_2575F29B0();
  uint64_t v14 = v13;
  swift_release();
  sub_257602ECC(a5, a3, a4, v12, v14, a2, (uint64_t)v17);
  long long v15 = v17[1];
  *a6 = v17[0];
  a6[1] = v15;
  a6[2] = v17[2];
  return sub_2576A7810();
}

uint64_t sub_257485C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_retain();
  id v14 = sub_257614628();
  objc_msgSend(v14, sel_lock);

  swift_beginAccess();
  sub_257486824(a1 + 40, (uint64_t)v28);
  if (v31)
  {
    if (v31 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_25748692C((uint64_t)&v29);
    }
    else
    {
      sub_257486880((uint64_t)v28);
    }
    id v18 = sub_257614628();
    objc_msgSend(v18, sel_unlock);
    swift_release();

    goto LABEL_9;
  }
  sub_257486880((uint64_t)v28);
  id v15 = sub_257614628();
  objc_msgSend(v15, sel_unlock);
  swift_release();

  uint64_t v16 = (void *)sub_257613788();
  if (!v16
    || (Class = (__objc2_class *)object_getClass(v16),
        swift_unknownObjectRelease(),
        Class != _TtC14NeuralNetworks14InputOperation))
  {
LABEL_9:
    v25[0] = *(void *)(a1 + 152);
    char v27 = *(unsigned char *)(a1 + 160);
    type metadata accessor for TensorRepresentation();
    memset(v28, 0, sizeof(v28));
    long long v29 = 0u;
    int v30 = 0;
    swift_allocObject();
    sub_2576A7810();
    char v26 = 1;
    uint64_t v19 = sub_257614988(v25, &v27, (uint64_t)v28, 0x100000000);
    swift_retain();
    sub_2575EF938(a1, (uint64_t)v19);
    swift_release();
    a1 = (uint64_t)v19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_10:
  uint64_t v20 = sub_2575CA350();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a8;
  *(void *)(v21 + 24) = a9;
  *(void *)(v21 + 32) = v20;
  *(void *)(v21 + 40) = a2;
  *(void *)(v21 + 48) = a3;
  *(void *)(v21 + 56) = a4;
  *(unsigned char *)(v21 + 64) = a5;
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a8;
  v22[3] = a9;
  v22[4] = sub_25748690C;
  v22[5] = v21;
  v25[0] = (uint64_t)sub_257486920;
  v25[1] = (uint64_t)v22;
  swift_beginAccess();
  _s9IOMappingVMa();
  sub_2576A84C0();
  swift_getFunctionTypeMetadata1();
  sub_2576A7F50();
  sub_2576A7810();
  swift_retain();
  sub_2576A7F10();
  swift_endAccess();
  swift_release();
  return a1;
}

uint64_t sub_257485F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, void *a6@<X8>)
{
  LODWORD(v6) = a5;
  unint64_t v11 = *(void *)(a1 + 88);
  if (v11 >> 62) {
    goto LABEL_22;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  if (v12)
  {
    while (1)
    {
      uint64_t v27 = a3;
      unsigned int v28 = v6;
      unint64_t v6 = v11 & 0xC000000000000001;
      if ((v11 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](0, v11);
      }
      else {
        swift_retain();
      }
      uint64_t v13 = sub_2575CA350();
      swift_release();
      if (v13 == a2) {
        break;
      }
      if (v12 == 1)
      {
LABEL_14:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        uint64_t v12 = 0;
        goto LABEL_24;
      }
      uint64_t v26 = a4;
      a4 = 5;
      while (1)
      {
        uint64_t v14 = a4 - 4;
        if (v6)
        {
          a3 = MEMORY[0x25A2B8DB0](a4 - 4, v11);
        }
        else
        {
          a3 = *(void *)(v11 + 8 * a4);
          swift_retain();
        }
        uint64_t v15 = sub_2575CA350();
        swift_release();
        if (v15 == a2)
        {
          a4 = v26;
          goto LABEL_17;
        }
        uint64_t v16 = a4 - 3;
        if (__OFADD__(v14, 1)) {
          break;
        }
        ++a4;
        if (v16 == v12) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_22:
      sub_2576A7810();
      uint64_t v12 = sub_2576A8BF0();
      if (!v12) {
        goto LABEL_23;
      }
    }
    uint64_t v14 = 0;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_257582858(v14, v6 == 0, v11);
    if (v6)
    {
      sub_2576A7810();
      MEMORY[0x25A2B8DB0](v14, v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    uint64_t v20 = sub_2575F29B0();
    uint64_t v22 = v21;
    swift_release();
    sub_257602ECC(v28, v27, a4, v20, v22, v14, (uint64_t)v29);
    uint64_t v18 = v29[0];
    uint64_t v19 = v30;
    uint64_t v12 = v31;
    uint64_t v23 = v32;
    uint64_t v24 = v33;
    uint64_t v25 = v34;
    uint64_t result = sub_2576A7810();
  }
  else
  {
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    uint64_t v19 = 0;
LABEL_24:
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  *a6 = v18;
  a6[1] = v19;
  a6[2] = v12;
  a6[3] = v23;
  a6[4] = v24;
  a6[5] = v25;
  return result;
}

uint64_t sub_25748617C@<X0>(void (*a1)(void *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v5);
  _s9IOMappingVMa();
  uint64_t v3 = sub_2576A84C0();
  return (*(uint64_t (**)(uint64_t, void *, uint64_t))(*(void *)(v3 - 8) + 32))(a2, v5, v3);
}

uint64_t sub_257486214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = sub_257485048(a2, a3);
  if (v16)
  {
    uint64_t v18 = sub_257485C14(a2, v15, v16, v17, 0, a4, a5, a8, a9);
LABEL_5:
    sub_2575F2B88(v18);
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v19 = sub_25748514C(a2, a6);
  if (v20)
  {
    uint64_t v18 = sub_257485C14(a2, v19, v20, v21, 1, a4, a5, a8, a9);
    goto LABEL_5;
  }
  uint64_t v23 = sub_25748535C(a2, a7);
  if (v24)
  {
    uint64_t v26 = sub_257485C14(a2, v23, v24, v25, 2, a4, a5, a8, a9);
    sub_2575F2B88(v26);
    goto LABEL_6;
  }
  uint64_t v27 = swift_retain();
  id v28 = sub_2576140FC(v27, a2, 0, 0);
  uint64_t v30 = v29;
  uint64_t v31 = sub_2576136DC();
  uint64_t v33 = v32;
  type metadata accessor for TensorRepresentation();
  memset(v35, 0, sizeof(v35));
  int v36 = 0;
  swift_allocObject();
  uint64_t v34 = sub_257614BF4((uint64_t)v28, v30, v31, v33, (uint64_t)v35, 0x100000000);
  sub_2575EF938(a2, v34);
LABEL_7:
  return swift_release();
}

double sub_25748642C@<D0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  (*a1)(v7, a2);
  double result = *(double *)v7;
  long long v5 = v7[1];
  long long v6 = v7[2];
  *a3 = v7[0];
  a3[1] = v5;
  a3[2] = v6;
  return result;
}

__n128 sub_257486488@<Q0>(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*a1)(&v7, a2);
  __n128 result = v8;
  long long v5 = v9;
  uint64_t v6 = v10;
  *(unsigned char *)a3 = v7;
  *(__n128 *)(a3 + 8) = result;
  *(_OWORD *)(a3 + 24) = v5;
  *(void *)(a3 + 40) = v6;
  return result;
}

void sub_2574864F4(uint64_t *a1@<X0>, char a2@<W4>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  if (a2)
  {
    uint64_t v5 = sub_2576A7810();
  }
  else
  {
    sub_25747EFA8();
    uint64_t v4 = sub_2576A8570();
    uint64_t v5 = v6;
  }
  *a3 = v4;
  a3[1] = v5;
  Layer.value<A>(for:)();
}

uint64_t sub_2574865D0()
{
  return sub_25748331C(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

void sub_2574865F4(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_257486614(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_257486634(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_2574864F4(a1, *(unsigned char *)(v2 + 56), a2);
}

uint64_t sub_257486674(uint64_t a1)
{
  return a1;
}

uint64_t *sub_2574866C8(uint64_t *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_257484CDC(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t sub_2574866D0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25748672C(uint64_t a1, uint64_t a2)
{
  return sub_2574857CC(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned char *)(v2 + 56), *(uint64_t **)(v2 + 64), *(uint64_t **)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25748676C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2574867A4(uint64_t a1, uint64_t a2)
{
  return sub_257486214(a1, a2, v2[4], v2[5], v2[6], v2[7], v2[8], v2[2], v2[3]);
}

double sub_2574867D8@<D0>(void (**a1)(_OWORD *__return_ptr, uint64_t)@<X0>, _OWORD *a2@<X8>)
{
  return sub_25748642C(a1, *(void *)(v2 + 32), a2);
}

double sub_2574867F8@<D0>(void (**a1)(uint64_t *__return_ptr, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_257486488(a1, *(void *)(v2 + 32), a2).n128_u64[0];
  return result;
}

uint64_t sub_25748681C()
{
  return swift_release();
}

uint64_t sub_257486824(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_257486880(uint64_t a1)
{
  return a1;
}

uint64_t sub_2574868D4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 65, 7);
}

uint64_t sub_25748690C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_257485F18(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 64), a2);
}

uint64_t sub_257486920@<X0>(uint64_t a1@<X8>)
{
  return sub_25748617C(*(void (**)(void *__return_ptr))(v1 + 32), a1);
}

uint64_t sub_25748692C(uint64_t a1)
{
  return a1;
}

uint64_t sub_257486980@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_257485AFC(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 64), a2);
}

uint64_t sub_257486994()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

double sub_2574869CC@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(v1 + 32))(v5);
  long long v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  double result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

unint64_t sub_257486A14()
{
  unint64_t result = qword_26A0012E0;
  if (!qword_26A0012E0)
  {
    type metadata accessor for UnaryArithmeticOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012E0);
  }
  return result;
}

uint64_t sub_257486A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25748450C(a1, a2, a3, *(unsigned __int8 *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(unsigned char *)(v3 + 64));
}

uint64_t sub_257486A9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 48))(*a1, a1[1], a1[2]);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_257486AEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2574845BC(a1, a2);
}

uint64_t sub_257486B08()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_257486B18(uint64_t a1, _DWORD *a2)
{
  return sub_2575E79C8(a1, a2, *(unsigned char *)(v2 + 32), *(_DWORD *)(v2 + 36));
}

unint64_t sub_257486B38()
{
  unint64_t result = qword_26A0012E8;
  if (!qword_26A0012E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0010C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012E8);
  }
  return result;
}

uint64_t sub_257486B8C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_257486BC4()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_257486C04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_2574843C4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_257486C0C@<X0>(void *a1@<X8>)
{
  return sub_2574844C0(v1, a1);
}

uint64_t sub_257486C14(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_257486C70(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_257486C84();
  }
  return result;
}

uint64_t sub_257486C84()
{
  return swift_retain();
}

uint64_t sub_257486C8C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_25748681C();
  }
  return result;
}

uint64_t sub_257486CA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_257484360(v1, a1);
}

uint64_t sub_257486CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_25761594C(v1[2], v1[3], v1[4], a1);
}

void *OUTLINED_FUNCTION_1_9()
{
  return memcpy((void *)(v0 + 240), (const void *)(v1 - 240), 0x88uLL);
}

BOOL OUTLINED_FUNCTION_2_7@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return *(void *)(v0 + 136);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_7_3(uint64_t a1@<X8>)
{
  *(void *)(v1 - 240) = a1;
  sub_2574E71D4();
}

void OUTLINED_FUNCTION_8_2(uint64_t a1@<X8>)
{
  *(void *)(v1 - 240) = a1;
  sub_2574E71D4();
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return *(void *)(v0 + 136);
}

void OUTLINED_FUNCTION_10_1(uint64_t a1@<X8>)
{
  *(void *)(a1 - 40) = v2;
  *(void *)(a1 - 32) = v1;
  *(unsigned char *)(a1 - 24) = *(_DWORD *)(v3 + 156);
  *(void *)(a1 - 16) = v4;
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return sub_2575D614C(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_14_2@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 32) = v3;
  *(void *)(a1 - 24) = v2;
  *(void *)(a1 - 16) = v1 + 408;
  return 0;
}

uint64_t ParameterInitializer.callAsFunction(shape:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  char v10 = 1;
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v11 = MEMORY[0x263F8EE78];
  sub_25748749C(v3, v5, (uint64_t)&v9);
  uint64_t v7 = v9;
  sub_25748726C(v6, MEMORY[0x263F8D1F0], MEMORY[0x263F8D1F8], (void (*)(uint64_t *, uint64_t))sub_2575E8DCC);
  swift_retain();
  sub_25748D684((void (*)(uint64_t *__return_ptr))sub_257486CA8);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_unknownObjectRelease();
  *a2 = v7;
  return result;
}

uint64_t static ParameterInitializer.custom(_:)(uint64_t a1, uint64_t a2)
{
  v4[0] = a1;
  v4[1] = a2;
  uint64_t v2 = OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_16_2((uint64_t)v4, v2 + 16);
  swift_retain();
  return v2;
}

uint64_t sub_257486F5C()
{
  sub_2576A89F0();
  uint64_t v0 = sub_2576A8070();
  uint64_t v6 = v0;
  sub_2576A89E0();
  swift_release();
  sub_2576A8C80();
  uint64_t v1 = v5;
  if (v5)
  {
    uint64_t v2 = v4;
    do
    {
      sub_2575E8610((uint64_t)&v4, v2, v1);
      swift_bridgeObjectRelease();
      sub_2576A8C80();
      uint64_t v2 = v4;
      uint64_t v1 = v5;
    }
    while (v5);
    uint64_t v0 = v6;
  }
  swift_release();
  return v0;
}

uint64_t sub_25748700C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_25748E404();
  uint64_t v8 = sub_2576A8070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 32;
    do
    {
      long long v5 = *(_OWORD *)(a1 + v4 + 16);
      v9[0] = *(_OWORD *)(a1 + v4);
      v9[1] = v5;
      v9[2] = *(_OWORD *)(a1 + v4 + 32);
      char v10 = *(unsigned char *)(a1 + v4 + 48);
      sub_25748E450((uint64_t)v9);
      sub_2575E877C((uint64_t)&v7, (uint64_t)v9);
      swift_bridgeObjectRelease();
      swift_release();
      v4 += 56;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    OUTLINED_FUNCTION_18_2();
  }
  return v2;
}

uint64_t sub_2574870D4(uint64_t a1)
{
  uint64_t v19 = sub_2576A8070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = sub_2576A7810();
      uint64_t v13 = OUTLINED_FUNCTION_22_1(v5, v6, v7, v8, v9, v10, v11, v12, v17, v18);
      sub_2575E8610((uint64_t)v13, v14, v15);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    OUTLINED_FUNCTION_18_2();
  }
  return v1;
}

uint64_t sub_257487174(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_2576A8070();
  uint64_t v6 = result;
  if (v2)
  {
    unint64_t v4 = 0;
    while (v4 < *(void *)(a1 + 16))
    {
      ++v4;
      uint64_t result = sub_2575E8DCC();
      if (v2 == v4)
      {
        swift_release();
        return v6;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v5 = result;
    swift_release();
    return v5;
  }
  return result;
}

uint64_t sub_25748721C(uint64_t a1)
{
  return sub_25748726C(a1, MEMORY[0x263F8D1F0], MEMORY[0x263F8D1F8], (void (*)(uint64_t *, uint64_t))sub_2575E8DCC);
}

uint64_t sub_257487244(uint64_t a1)
{
  return sub_25748726C(a1, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6D8], (void (*)(uint64_t *, uint64_t))sub_2575E8A18);
}

uint64_t sub_25748726C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t v12 = sub_2576A8070();
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      uint64_t v9 = *(void *)(a1 + 8 * i + 32);
      a4(&v11, v9);
    }
    swift_bridgeObjectRelease();
    return v12;
  }
  else
  {
    OUTLINED_FUNCTION_18_2();
  }
  return v4;
}

uint64_t sub_2574872FC(uint64_t a1)
{
  uint64_t v19 = sub_2576A8070();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = sub_2576A7810();
      uint64_t v13 = OUTLINED_FUNCTION_22_1(v5, v6, v7, v8, v9, v10, v11, v12, v17, v18);
      sub_2575E8FCC((uint64_t)v13, v14, v15);
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    OUTLINED_FUNCTION_18_2();
  }
  return v1;
}

uint64_t sub_25748739C()
{
  sub_25748D76C(v0 + 16, (uint64_t)v7);
  switch(v9[52])
  {
    case 1:
    case 2:
    case 3:
      swift_release();
      uint64_t v1 = v7[2];
      uint64_t v2 = (uint64_t *)v9;
      goto LABEL_5;
    case 4:
      uint64_t v5 = &unk_27065D6A0;
      ((void (*)(void **__return_ptr, void **))v7[0])(&v6, &v5);
      swift_release();
      uint64_t v5 = v6;
      uint64_t v3 = Tensor.scalarType.getter();
      swift_release();
      uint64_t v1 = dynamic_cast_existential_1_conditional((uint64_t)v3);
      break;
    default:
      uint64_t v1 = v7[1];
      uint64_t v2 = &v8;
LABEL_5:
      sub_25747B4E4((uint64_t)v2);
      break;
  }
  return v1;
}

uint64_t sub_25748749C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_25748D76C(a1 + 16, (uint64_t)&v136);
  switch(v140[52])
  {
    case 1:
      uint64_t v27 = v137;
      uint64_t v28 = (uint64_t)v138;
      sub_25748D7A4((uint64_t)v140, (uint64_t)v135);
      uint64_t v29 = dynamic_cast_existential_2_conditional(v28);
      if (!v29)
      {
        unint64_t v132 = 0xD000000000000043;
        unint64_t v133 = 0x80000002576C5180;
        char v134 = 9;
        OUTLINED_FUNCTION_3_6();
        sub_25746BE6C();
      }
      sub_257487E14(v29, a2, v27, (uint64_t)v135, v29, v30, v31, a3);
      goto LABEL_66;
    case 2:
      _KR00_8 = v136;
      uint64_t v11 = (unint64_t *)v137;
      uint64_t v10 = v138;
      uint64_t v12 = v139;
      sub_25748D7A4((uint64_t)v140, (uint64_t)v135);
      unint64_t v13 = *(void *)(v12 + 8);
      (*(void (**)(uint64_t *__return_ptr, unint64_t *, unint64_t))(v13 + 32))(&v141, v10, v13);
      OUTLINED_FUNCTION_23_1();
      switch(v14)
      {
        case 0:
          sub_2576A7810();
          if (v11)
          {
            swift_retain();
            sub_2574ED018();
            OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          __asm
          {
            FCVT            H9, S9
            FCVT            H8, S8
          }
          sub_25747B47C((uint64_t)v135, (uint64_t)&v132);
          v70.n128_f32[0] = OUTLINED_FUNCTION_2_8();
          sub_257489868(v71, v72, v73, v74, v75, v70, v76);
          goto LABEL_66;
        case 1:
          sub_2576A7810();
          if (v11)
          {
            swift_retain();
            uint64_t v10 = v11;
            sub_2574ED018();
            uint64_t v50 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v50);
          uint64_t v77 = OUTLINED_FUNCTION_19_2();
          sub_257489DEC(v77, SWORD1(_KR00_8), SHIWORD(_KR00_8), (unint64_t)v10, (char)v11, v78, v79);
          goto LABEL_66;
        case 2:
          sub_2576A7810();
          if (v11)
          {
            swift_retain();
            sub_2574ED018();
            uint64_t v49 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v49);
          float v54 = OUTLINED_FUNCTION_2_8();
          sub_25748A36C(v55, v56, v57, v58, v59, v54, v60);
          goto LABEL_66;
        case 3:
          sub_2576A7810();
          if (v11)
          {
            swift_retain();
            sub_2574ED018();
            OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          sub_25747B47C((uint64_t)v135, (uint64_t)&v132);
          OUTLINED_FUNCTION_12_3();
          sub_25748A8F0(v61, v62, v63, v64, v65, v66, v67);
          goto LABEL_66;
        default:
          goto LABEL_73;
      }
    case 3:
      int v15 = v136;
      unint64_t v16 = BYTE1(v136);
      float v17 = *((float *)&v136 + 1);
      char v18 = (unint64_t *)v137;
      unint64_t v13 = (unint64_t)v138;
      sub_25748D7A4((uint64_t)v140, (uint64_t)v135);
      unint64_t v132 = a2;
      uint64_t v10 = &v132;
      uint64_t v19 = sub_25748C664();
      float v21 = (float)v19;
      if (!v15) {
        float v21 = (float)((float)v19 + (float)v20) * 0.5;
      }
      float v22 = v17 / v21;
      if (v16)
      {
        if (v16 == 1)
        {
          uint64_t v23 = OUTLINED_FUNCTION_4_6();
          v24(v23);
          OUTLINED_FUNCTION_23_1();
          _S8 = sqrtf(v22);
          switch(v26)
          {
            case 0:
              goto LABEL_19;
            case 1:
              goto LABEL_31;
            case 2:
              goto LABEL_27;
            case 3:
              goto LABEL_29;
            default:
              goto LABEL_75;
          }
        }
        uint64_t v43 = OUTLINED_FUNCTION_4_6();
        v44(v43);
        OUTLINED_FUNCTION_23_1();
        float v45 = sqrtf(v22);
        _S8 = (float)(v45 + v45) / 0.87963;
        switch(v46)
        {
          case 0:
LABEL_19:
            __asm { FCVT            H8, S8; jumptable 0000000257487690 case 0 }
            sub_2576A7810();
            if (v18)
            {
              swift_retain();
              sub_2574ED018();
              uint64_t v48 = OUTLINED_FUNCTION_6_5();
            }
            else
            {
              OUTLINED_FUNCTION_7_4();
            }
            OUTLINED_FUNCTION_0_11(v48);
            OUTLINED_FUNCTION_12_3();
            sub_25748AE74(v97, v98, v99, v100, v101, v102, v103);
            goto LABEL_66;
          case 1:
LABEL_31:
            sub_2576A7810();
            if (v18)
            {
              swift_retain();
              uint64_t v10 = v18;
              sub_2574ED018();
              uint64_t v53 = OUTLINED_FUNCTION_6_5();
            }
            else
            {
              OUTLINED_FUNCTION_7_4();
            }
            OUTLINED_FUNCTION_0_11(v53);
            uint64_t v104 = OUTLINED_FUNCTION_19_2();
            sub_25748B404(v104, 0, SHIWORD(_S8), (unint64_t)v10, (char)v18, v105, v106);
            goto LABEL_66;
          case 2:
LABEL_27:
            sub_2576A7810();
            if (v18)
            {
              swift_retain();
              sub_2574ED018();
              uint64_t v51 = OUTLINED_FUNCTION_6_5();
            }
            else
            {
              OUTLINED_FUNCTION_7_4();
            }
            OUTLINED_FUNCTION_0_11(v51);
            OUTLINED_FUNCTION_12_3();
            sub_25748B990(v83, v84, v85, v86, v87, v88, v89);
            goto LABEL_66;
          case 3:
LABEL_29:
            sub_2576A7810();
            if (v18)
            {
              swift_retain();
              sub_2574ED018();
              uint64_t v52 = OUTLINED_FUNCTION_6_5();
            }
            else
            {
              OUTLINED_FUNCTION_7_4();
            }
            OUTLINED_FUNCTION_0_11(v52);
            OUTLINED_FUNCTION_19_2();
            OUTLINED_FUNCTION_12_3();
            sub_25748BF20(v90, v91, v92, v93, v94, v95, v96);
            goto LABEL_66;
          default:
            goto LABEL_75;
        }
      }
      uint64_t v32 = OUTLINED_FUNCTION_4_6();
      v33(v32);
      OUTLINED_FUNCTION_23_1();
      _S8 = sqrtf(v22 * 3.0);
      switch(v35)
      {
        case 0:
          __asm
          {
            FCVT            H8, S8; jumptable 0000000257487738 case 0
            FCMP            H8, #0
          }
          if (_NF != _VF)
          {
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            static ScalarType.floatingPointTypes.getter();
            unint64_t v132 = (unint64_t)v10;
            unint64_t v133 = v13;
            OUTLINED_FUNCTION_1_10();
            OUTLINED_FUNCTION_3_6();
LABEL_76:
            sub_25746BF88();
          }
          sub_2576A7810();
          if (v18)
          {
            swift_retain();
            sub_2574ED018();
            uint64_t v42 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v42);
          v114.n128_f32[0] = OUTLINED_FUNCTION_2_8();
          sub_257488260(v115, v116, v117, v118, v119, v114, v120);
          break;
        case 1:
          if ((LODWORD(_S8) ^ 0x80000000) >> 16 > HIWORD(LODWORD(_S8))) {
            goto LABEL_72;
          }
          sub_2576A7810();
          if (v18)
          {
            swift_retain();
            uint64_t v10 = v18;
            sub_2574ED018();
            uint64_t v82 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v82);
          uint64_t v128 = OUTLINED_FUNCTION_19_2();
          sub_2574887E4(v128, v129, (unint64_t)v10, (char)v18, v130, v131);
          break;
        case 2:
          if (_S8 < 0.0) {
            goto LABEL_70;
          }
          sub_2576A7810();
          if (v18)
          {
            swift_retain();
            sub_2574ED018();
            uint64_t v80 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v80);
          float v107 = OUTLINED_FUNCTION_2_8();
          sub_257488D60(v108, v109, v110, v111, v112, v107, v113);
          break;
        case 3:
          if (_S8 < 0.0) {
            goto LABEL_71;
          }
          sub_2576A7810();
          if (v18)
          {
            swift_retain();
            sub_2574ED018();
            uint64_t v81 = OUTLINED_FUNCTION_6_5();
          }
          else
          {
            OUTLINED_FUNCTION_7_4();
          }
          OUTLINED_FUNCTION_0_11(v81);
          OUTLINED_FUNCTION_12_3();
          sub_2574892E4(v121, v122, v123, v124, v125, v126, v127);
          break;
        default:
LABEL_75:
          static ScalarType.floatingPointTypes.getter();
          unint64_t v132 = v13;
          unint64_t v133 = v16;
          OUTLINED_FUNCTION_1_10();
          OUTLINED_FUNCTION_3_6();
          goto LABEL_76;
      }
LABEL_66:
      swift_release();
      uint64_t v7 = (unint64_t *)v135;
      return sub_25747B4E4((uint64_t)v7);
    case 4:
      unint64_t v132 = a2;
      v136(&v132);
      return swift_release();
    default:
      uint64_t v5 = v137;
      uint64_t v6 = (uint64_t)v138;
      sub_25748D7A4((uint64_t)&v139, (uint64_t)&v132);
      sub_257487D08(v5, a2, (uint64_t)&v132, v5, v6);
      uint64_t v7 = &v132;
      return sub_25747B4E4((uint64_t)v7);
  }
}

void sub_257487D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MEMORY[0x270FA5388](a1);
  v13[0] = v9;
  uint64_t v11 = *(void (**)(_DWORD *, void, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(v10 + 16);
  unint64_t v12 = sub_25748E5B0();
  v11(v13, MEMORY[0x263F8D5C8], &protocol witness table for Float, v12, a4, a5);
  uint64_t v14 = a2;
  sub_25747B47C(a3, (uint64_t)v13);
  sub_2576A7810();
  Tensor.init<A>(repeating:shape:scalarType:on:)();
}

void sub_257487E14(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v49 = a8;
  uint64_t v50 = a6;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  float v17 = (char *)&v41 - v16;
  char v18 = *(void **)(a5 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v15);
  float v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v41 - v22;
  uint64_t v24 = *(void *)(*(void *)(*(void *)(a7 + 16) + 24) + 8);
  uint64_t v25 = sub_2576A7980();
  uint64_t v44 = *(void *)(v25 - 8);
  uint64_t v45 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v43 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v42 = (char *)&v41 - v28;
  uint64_t v53 = a2;
  sub_2576A7810();
  sub_2576A7780();
  sub_2576A7780();
  uint64_t v46 = v24;
  if (sub_2576A7940())
  {
    uint64_t v41 = a1;
    uint64_t v29 = v14;
    uint64_t v30 = v21;
    uint64_t v31 = TupleTypeMetadata2;
    uint64_t v32 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v33 = (void (*)(char *, char *, uint64_t))v18[4];
    v33(v17, v23, a5);
    uint64_t v34 = v32;
    v33(v32, v30, a5);
    int v35 = &v29[*(int *)(v31 + 48)];
    int v36 = (void (*)(char *, char *, uint64_t))v18[2];
    v36(v29, v17, a5);
    v36(v35, v34, a5);
    uint64_t v37 = v43;
    v33(v43, v29, a5);
    uint64_t v38 = (void (*)(char *, uint64_t))v18[1];
    v38(v35, a5);
    uint64_t v39 = &v29[*(int *)(TupleTypeMetadata2 + 48)];
    v33(v29, v17, a5);
    v33(v39, v34, a5);
    uint64_t v40 = v45;
    v33(&v37[*(int *)(v45 + 36)], v39, a5);
    v38(v29, a5);
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v42, v37, v40);
    if (v47) {
      sub_2574ED018();
    }
    sub_25747B47C(v48, (uint64_t)v52);
    Tensor.init<A>(randomUniform:in:seed:scalarType:on:)();
  }
  else
  {
    __break(1u);
  }
}

void sub_257488260(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10 = a7.n128_u16[0];
  unsigned __int16 v11 = a6.n128_u16[0];
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    uint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)uint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8E9F8];
  *(void *)&long long v46 = &protocol witness table for Float16;
  LOWORD(v44) = v11;
  uint64_t v48 = MEMORY[0x263F8E9F8];
  uint64_t v49 = &protocol witness table for Float16;
  WORD4(v46) = v10;
  __int16 v51 = 2050;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)float v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_2574887E4(uint64_t a1@<X0>, int a2@<W1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_25747B47C(a5, (uint64_t)v52);
  if (!*(void *)&v52[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v42);
    swift_release();
    sub_25747B47C((uint64_t)&v42, (uint64_t)v50);
    sub_2574718B0((uint64_t)&v42);
    sub_25747B4E4((uint64_t)v52);
    if ((a4 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    uint64_t v12 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v13 = *(void *)(*(void *)v12 + 16);
    swift_beginAccess();
    uint64_t v14 = *(void *)v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v12 = v14;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v13) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v14 = v36;
      *(void *)uint64_t v12 = v36;
      if (v13)
      {
LABEL_7:
        if (v13 <= *(void *)(v14 + 16))
        {
          a3 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v50[0] = *(_OWORD *)v52;
  v50[1] = *(_OWORD *)&v52[16];
  v50[2] = *(_OWORD *)&v52[32];
  int v51 = v53;
  if (a4) {
    goto LABEL_5;
  }
LABEL_9:
  char v16 = sub_257576A04(a3);
  long long v42 = v17;
  *(void *)&long long v43 = v18;
  BYTE8(v43) = v16 & 1;
  *(void *)&long long v44 = v19;
  sub_2574EDD68(&v37);
  uint64_t v20 = *(void *)(v37 + 16);
  swift_retain();
  swift_release();
  v41[0] = a1;
  *((void *)&v43 + 1) = &type metadata for BFloat16;
  *(void *)&long long v44 = sub_25748E668();
  LOWORD(v42) = a2;
  long long v46 = &type metadata for BFloat16;
  uint64_t v47 = v44;
  WORD4(v44) = HIWORD(a2);
  __int16 v49 = 2306;
  *(_OWORD *)&v52[8] = xmmword_2576ACB10;
  *(_OWORD *)&v52[24] = xmmword_2576ACB20;
  *(void *)uint64_t v52 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v52[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v53 = 47;
  __int16 v54 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v21 = sub_2575D41E4(0, 0, 0, v20, v41, &v42, (uint64_t)v52);
  sub_25747B47C((uint64_t)v50, (uint64_t)&v37);
  if (!*((void *)&v38 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v37);
LABEL_16:
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    int v40 = 0;
    goto LABEL_17;
  }
  long long v42 = v37;
  long long v43 = v38;
  long long v44 = v39;
  int v45 = v40;
  sub_25748E5FC();
  uint64_t v22 = qword_26A000940;
  uint64_t v23 = swift_retain();
  if (v22 != -1) {
    uint64_t v23 = swift_once();
  }
  uint64_t v24 = qword_26A005AF8;
  MEMORY[0x270FA5388](v23);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
  sub_25748E908((uint64_t *)(v24 + 16), &v37);
  os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
  int v25 = v37;
  swift_release();
  if ((v45 & ~v25) != 0)
  {
    sub_257486674((uint64_t)&v42);
    goto LABEL_16;
  }
  long long v37 = v42;
  long long v38 = v43;
  long long v39 = v44;
  int v40 = v45;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v42);
  swift_release();
  uint64_t v26 = v48;
  swift_retain();
  sub_2574718B0((uint64_t)&v42);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v42);
  swift_release();
  uint64_t v27 = v47;
  swift_retain();
  sub_2574718B0((uint64_t)&v42);
  type metadata accessor for TensorRepresentation();
  uint64_t v28 = swift_allocObject();
  LOBYTE(v42) = 1;
  sub_257583694(v21, 0, (uint64_t)&v37, 0x100000000, v26, v27, v28);
  uint64_t v30 = v29;
  type metadata accessor for TensorHandle();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v50, (uint64_t)&v37);
  if (*((void *)&v38 + 1))
  {
    long long v42 = v37;
    long long v43 = v38;
    long long v44 = v39;
    int v45 = v40;
    *(void *)&long long v37 = v31;
    uint64_t v32 = Tensor.scalarType.getter();
    char v34 = sub_2575365A0((uint64_t)v32, v33);
    if (v34 != 2) {
      sub_257671054((uint64_t)&v42, v34 & 1);
    }
    *(void *)&long long v37 = v31;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v42);
    sub_257486674((uint64_t)&v42);
    swift_release();
    swift_release();
    uint64_t v35 = v37;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v37);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v35 = v31;
  }
  sub_25747B4E4(a5);
  swift_release();
  sub_25747B4E4((uint64_t)v50);
  *a6 = v35;
}

void sub_257488D60(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    uint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)uint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D5C8];
  *(void *)&long long v46 = &protocol witness table for Float;
  *(float *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D5C8];
  __int16 v49 = &protocol witness table for Float;
  *((float *)&v46 + 2) = a7;
  __int16 v51 = 2562;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    char v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_2574892E4(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    uint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)uint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D538];
  *(void *)&long long v46 = &protocol witness table for Double;
  *(double *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D538];
  __int16 v49 = &protocol witness table for Double;
  *((double *)&v46 + 1) = a7;
  __int16 v51 = 2818;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    char v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_257489868(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10 = a7.n128_u16[0];
  unsigned __int16 v11 = a6.n128_u16[0];
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    uint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)uint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8E9F8];
  *(void *)&long long v46 = &protocol witness table for Float16;
  LOWORD(v44) = v11;
  uint64_t v48 = MEMORY[0x263F8E9F8];
  __int16 v49 = &protocol witness table for Float16;
  WORD4(v46) = v10;
  __int16 v51 = 2048;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E64C((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    char v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_257489DEC(uint64_t a1@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_25747B47C(a6, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a5 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v13 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v14 = *(void *)(*(void *)v13 + 16);
    swift_beginAccess();
    uint64_t v15 = *(void *)v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v13 = v15;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v15 = v37;
      *(void *)unint64_t v13 = v37;
      if (v14)
      {
LABEL_7:
        if (v14 <= *(void *)(v15 + 16))
        {
          a4 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a5) {
    goto LABEL_5;
  }
LABEL_9:
  char v17 = sub_257576A04(a4);
  long long v44 = v18;
  *(void *)&long long v45 = v19;
  BYTE8(v45) = v17 & 1;
  *(void *)&long long v46 = v20;
  sub_2574EDD68(&v39);
  uint64_t v21 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = &type metadata for BFloat16;
  *(void *)&long long v46 = sub_25748E668();
  LOWORD(v44) = a2;
  uint64_t v48 = &type metadata for BFloat16;
  uint64_t v49 = v46;
  WORD4(v46) = a3;
  __int16 v51 = 2304;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v22 = sub_2575D41E4(0, 0, 0, v21, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v23 = qword_26A000940;
  uint64_t v24 = swift_retain();
  if (v23 != -1) {
    uint64_t v24 = swift_once();
  }
  uint64_t v25 = qword_26A005AF8;
  MEMORY[0x270FA5388](v24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  sub_25748E908((uint64_t *)(v25 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  int v26 = v39;
  swift_release();
  if ((v47 & ~v26) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v27 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v29 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v22, 0, (uint64_t)&v39, 0x100000000, v27, v28, v29);
  uint64_t v31 = v30;
  type metadata accessor for TensorHandle();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v32;
    uint64_t v33 = Tensor.scalarType.getter();
    char v35 = sub_2575365A0((uint64_t)v33, v34);
    if (v35 != 2) {
      sub_257671054((uint64_t)&v44, v35 & 1);
    }
    *(void *)&long long v39 = v32;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v36 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v36 = v32;
  }
  sub_25747B4E4(a6);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a7 = v36;
}

void sub_25748A36C(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)unint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D5C8];
  *(void *)&long long v46 = &protocol witness table for Float;
  *(float *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D5C8];
  uint64_t v49 = &protocol witness table for Float;
  *((float *)&v46 + 2) = a7;
  __int16 v51 = 2560;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_25748A8F0(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  sub_25747B47C(a4, (uint64_t)v54);
  if (!*(void *)&v54[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v52);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v54);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)unint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v52[0] = *(_OWORD *)v54;
  v52[1] = *(_OWORD *)&v54[16];
  v52[2] = *(_OWORD *)&v54[32];
  int v53 = v55;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D538];
  *(void *)&long long v46 = &protocol witness table for Double;
  *(double *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D538];
  uint64_t v49 = &protocol witness table for Double;
  *((double *)&v46 + 1) = a7;
  __int16 v51 = 2816;
  *(_OWORD *)&v54[8] = xmmword_2576ACB10;
  *(_OWORD *)&v54[24] = xmmword_2576ACB20;
  *(void *)__int16 v54 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v54[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v55 = 47;
  __int16 v56 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v54);
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v52, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  *a5 = v37;
}

void sub_25748AE74(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, __n128 a6@<Q0>, __n128 a7@<Q1>)
{
  unsigned __int16 v10 = a7.n128_u16[0];
  unsigned __int16 v11 = a6.n128_u16[0];
  sub_25747B47C(a4, (uint64_t)v56);
  if (!*(void *)&v56[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v54);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v56);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)unint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v54[0] = *(_OWORD *)v56;
  v54[1] = *(_OWORD *)&v56[16];
  v54[2] = *(_OWORD *)&v56[32];
  int v55 = v57;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8E9F8];
  *(void *)&long long v46 = &protocol witness table for Float16;
  LOWORD(v44) = v11;
  uint64_t v48 = MEMORY[0x263F8E9F8];
  uint64_t v49 = &protocol witness table for Float16;
  WORD4(v46) = v10;
  uint64_t v51 = MEMORY[0x263F8E9F8];
  uint64_t v52 = &protocol witness table for Float16;
  LOWORD(v50) = COERCE_UNSIGNED_INT(2.0);
  __int16 v53 = 2049;
  *(_OWORD *)&v56[8] = xmmword_2576ACB10;
  *(_OWORD *)&v56[24] = xmmword_2576ACB20;
  *(void *)__int16 v56 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v56[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v57 = 47;
  __int16 v58 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v56);
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v54);
  *a5 = v37;
}

void sub_25748B404(uint64_t a1@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, unint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_25747B47C(a6, (uint64_t)v56);
  if (!*(void *)&v56[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v54);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v56);
    if ((a5 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v13 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v14 = *(void *)(*(void *)v13 + 16);
    swift_beginAccess();
    uint64_t v15 = *(void *)v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v13 = v15;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v14) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v15 = v37;
      *(void *)unint64_t v13 = v37;
      if (v14)
      {
LABEL_7:
        if (v14 <= *(void *)(v15 + 16))
        {
          a4 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v54[0] = *(_OWORD *)v56;
  v54[1] = *(_OWORD *)&v56[16];
  v54[2] = *(_OWORD *)&v56[32];
  int v55 = v57;
  if (a5) {
    goto LABEL_5;
  }
LABEL_9:
  char v17 = sub_257576A04(a4);
  long long v44 = v18;
  *(void *)&long long v45 = v19;
  BYTE8(v45) = v17 & 1;
  *(void *)&long long v46 = v20;
  sub_2574EDD68(&v39);
  uint64_t v21 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = &type metadata for BFloat16;
  *(void *)&long long v46 = sub_25748E668();
  LOWORD(v44) = a2;
  uint64_t v48 = &type metadata for BFloat16;
  uint64_t v49 = v46;
  WORD4(v46) = a3;
  uint64_t v51 = &type metadata for BFloat16;
  uint64_t v52 = v46;
  LOWORD(v50) = 0x4000;
  __int16 v53 = 2305;
  *(_OWORD *)&v56[8] = xmmword_2576ACB10;
  *(_OWORD *)&v56[24] = xmmword_2576ACB20;
  *(void *)__int16 v56 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v56[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v57 = 47;
  __int16 v58 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v22 = sub_2575D41E4(0, 0, 0, v21, v43, &v44, (uint64_t)v56);
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v23 = qword_26A000940;
  uint64_t v24 = swift_retain();
  if (v23 != -1) {
    uint64_t v24 = swift_once();
  }
  uint64_t v25 = qword_26A005AF8;
  MEMORY[0x270FA5388](v24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  sub_25748E908((uint64_t *)(v25 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  int v26 = v39;
  swift_release();
  if ((v47 & ~v26) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v27 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v29 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v22, 0, (uint64_t)&v39, 0x100000000, v27, v28, v29);
  uint64_t v31 = v30;
  type metadata accessor for TensorHandle();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v32;
    uint64_t v33 = Tensor.scalarType.getter();
    char v35 = sub_2575365A0((uint64_t)v33, v34);
    if (v35 != 2) {
      sub_257671054((uint64_t)&v44, v35 & 1);
    }
    *(void *)&long long v39 = v32;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v36 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v36 = v32;
  }
  sub_25747B4E4(a6);
  swift_release();
  sub_25747B4E4((uint64_t)v54);
  *a7 = v36;
}

void sub_25748B990(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  sub_25747B47C(a4, (uint64_t)v56);
  if (!*(void *)&v56[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v54);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v56);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)unint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v54[0] = *(_OWORD *)v56;
  v54[1] = *(_OWORD *)&v56[16];
  v54[2] = *(_OWORD *)&v56[32];
  int v55 = v57;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D5C8];
  *(void *)&long long v46 = &protocol witness table for Float;
  *(float *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D5C8];
  uint64_t v49 = &protocol witness table for Float;
  *((float *)&v46 + 2) = a7;
  uint64_t v51 = MEMORY[0x263F8D5C8];
  uint64_t v52 = &protocol witness table for Float;
  LODWORD(v50) = 0x40000000;
  __int16 v53 = 2561;
  *(_OWORD *)&v56[8] = xmmword_2576ACB10;
  *(_OWORD *)&v56[24] = xmmword_2576ACB20;
  *(void *)__int16 v56 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v56[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v57 = 47;
  __int16 v58 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v56);
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v54);
  *a5 = v37;
}

void sub_25748BF20(uint64_t a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  sub_25747B47C(a4, (uint64_t)v56);
  if (!*(void *)&v56[24])
  {
    type metadata accessor for ContextManager();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)&v44);
    swift_release();
    sub_25747B47C((uint64_t)&v44, (uint64_t)v54);
    sub_2574718B0((uint64_t)&v44);
    sub_25747B4E4((uint64_t)v56);
    if ((a3 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_5:
    type metadata accessor for ContextManager();
    unint64_t v14 = (char *)sub_2575D60A8() + 16;
    swift_beginAccess();
    unint64_t v15 = *(void *)(*(void *)v14 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)v14;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v14 = v16;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v15) {
        goto LABEL_7;
      }
    }
    else
    {
      sub_257582B64();
      uint64_t v16 = v38;
      *(void *)unint64_t v14 = v38;
      if (v15)
      {
LABEL_7:
        if (v15 <= *(void *)(v16 + 16))
        {
          a2 = sub_2575D5D80();
          swift_endAccess();
          swift_release();
          goto LABEL_9;
        }
LABEL_25:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  v54[0] = *(_OWORD *)v56;
  v54[1] = *(_OWORD *)&v56[16];
  v54[2] = *(_OWORD *)&v56[32];
  int v55 = v57;
  if (a3) {
    goto LABEL_5;
  }
LABEL_9:
  char v18 = sub_257576A04(a2);
  long long v44 = v19;
  *(void *)&long long v45 = v20;
  BYTE8(v45) = v18 & 1;
  *(void *)&long long v46 = v21;
  sub_2574EDD68(&v39);
  uint64_t v22 = *(void *)(v39 + 16);
  swift_retain();
  swift_release();
  v43[0] = a1;
  *((void *)&v45 + 1) = MEMORY[0x263F8D538];
  *(void *)&long long v46 = &protocol witness table for Double;
  *(double *)&long long v44 = a6;
  uint64_t v48 = MEMORY[0x263F8D538];
  uint64_t v49 = &protocol witness table for Double;
  *((double *)&v46 + 1) = a7;
  uint64_t v51 = MEMORY[0x263F8D538];
  uint64_t v52 = &protocol witness table for Double;
  uint64_t v50 = 0x4000000000000000;
  __int16 v53 = 2817;
  *(_OWORD *)&v56[8] = xmmword_2576ACB10;
  *(_OWORD *)&v56[24] = xmmword_2576ACB20;
  *(void *)__int16 v56 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/RandomOp.swift";
  *(void *)&v56[40] = "init(id:state:shape:distribution:creationSite:)";
  uint64_t v57 = 47;
  __int16 v58 = 2;
  type metadata accessor for RandomOperation();
  swift_allocObject();
  uint64_t v23 = sub_2575D41E4(0, 0, 0, v22, v43, &v44, (uint64_t)v56);
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
    swift_retain();
    sub_25747B4E4((uint64_t)&v39);
LABEL_16:
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    int v42 = 0;
    goto LABEL_17;
  }
  long long v44 = v39;
  long long v45 = v40;
  long long v46 = v41;
  int v47 = v42;
  sub_25748E5FC();
  uint64_t v24 = qword_26A000940;
  uint64_t v25 = swift_retain();
  if (v24 != -1) {
    uint64_t v25 = swift_once();
  }
  uint64_t v26 = qword_26A005AF8;
  MEMORY[0x270FA5388](v25);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  sub_25748E908((uint64_t *)(v26 + 16), &v39);
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  int v27 = v39;
  swift_release();
  if ((v47 & ~v27) != 0)
  {
    sub_257486674((uint64_t)&v44);
    goto LABEL_16;
  }
  long long v39 = v44;
  long long v40 = v45;
  long long v41 = v46;
  int v42 = v47;
LABEL_17:
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v28 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)&v44);
  swift_release();
  uint64_t v29 = (uint64_t)v49;
  swift_retain();
  sub_2574718B0((uint64_t)&v44);
  type metadata accessor for TensorRepresentation();
  uint64_t v30 = swift_allocObject();
  LOBYTE(v44) = 1;
  sub_257583694(v23, 0, (uint64_t)&v39, 0x100000000, v28, v29, v30);
  uint64_t v32 = v31;
  type metadata accessor for TensorHandle();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  swift_retain();
  sub_2576139A8();
  sub_25747B47C((uint64_t)v54, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    long long v44 = v39;
    long long v45 = v40;
    long long v46 = v41;
    int v47 = v42;
    *(void *)&long long v39 = v33;
    uint64_t v34 = Tensor.scalarType.getter();
    char v36 = sub_2575365A0((uint64_t)v34, v35);
    if (v36 != 2) {
      sub_257671054((uint64_t)&v44, v36 & 1);
    }
    *(void *)&long long v39 = v33;
    swift_retain();
    Tensor.place(on:)((uint64_t)&v44);
    sub_257486674((uint64_t)&v44);
    swift_release();
    swift_release();
    uint64_t v37 = v39;
  }
  else
  {
    sub_25747B4E4((uint64_t)&v39);
    swift_retain();
    swift_release();
    swift_release();
    uint64_t v37 = v33;
  }
  sub_25747B4E4(a4);
  swift_release();
  sub_25747B4E4((uint64_t)v54);
  *a5 = v37;
}

uint64_t ParameterInitializer.deinit()
{
  sub_25748D73C(v0 + 16);
  return v0;
}

uint64_t ParameterInitializer.__deallocating_deinit()
{
  sub_25748D73C(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_25748C508(char a1)
{
  if (!a1) {
    return 0x6D726F66696E75;
  }
  if (a1 == 1) {
    return 0x6C616D726F6ELL;
  }
  return 0xD000000000000010;
}

BOOL sub_25748C560(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_25748C570(char *a1, char *a2)
{
  return sub_25748C560(*a1, *a2);
}

uint64_t sub_25748C57C()
{
  return sub_25748C614();
}

uint64_t sub_25748C598()
{
  return sub_257470320();
}

uint64_t sub_25748C5A4()
{
  return sub_25748C508(*v0);
}

uint64_t sub_25748C5AC(char a1)
{
  if (!a1) {
    return 0x2820746F726F6C47;
  }
  if (a1 == 1) {
    return 0x6D69614B28206548;
  }
  return 0x6E7543654CLL;
}

uint64_t sub_25748C614()
{
  return sub_2576A9100();
}

uint64_t sub_25748C65C()
{
  return sub_25748C5AC(*v0);
}

uint64_t sub_25748C664()
{
  unint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (v1 < 2) {
LABEL_17:
  }
    sub_25746BF88();
  if (v1 == 2) {
    return *(void *)(*(void *)v0 + 32);
  }
  sub_2576A7810();
  sub_25746EC14();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 32);
    uint64_t v6 = 1;
    while (1)
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = v6 * v7;
      if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63) {
        break;
      }
      uint64_t v6 = v8;
      if (!--v4) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = 1;
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v9 = TensorShape.subscript.getter(v1 - 2);
  uint64_t v2 = v9 * v8;
  if ((unsigned __int128)(v9 * (__int128)v8) >> 64 != (v9 * v8) >> 63) {
    goto LABEL_15;
  }
  uint64_t v10 = TensorShape.subscript.getter(v1 - 1);
  if ((unsigned __int128)(v10 * (__int128)v8) >> 64 != (v10 * v8) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return v2;
}

uint64_t sub_25748C7C0(unint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  char v2 = sub_257576A04(a1);
  long long v12 = v3;
  uint64_t v5 = v4;
  char v6 = v2;
  uint64_t v8 = v7;
  unint64_t v14 = &type metadata for PhiloxRandomNumberGenerator;
  unint64_t v15 = sub_25748E4CC();
  uint64_t v9 = swift_allocObject();
  *(void *)&long long v13 = v9;
  *(_OWORD *)(v9 + 16) = v12;
  *(void *)(v9 + 32) = v5;
  *(unsigned char *)(v9 + 40) = v6 & 1;
  *(void *)(v9 + 48) = v8;
  type metadata accessor for AnyRandomNumberGenerator();
  uint64_t v10 = swift_allocObject();
  sub_257479260(&v13, v10 + 16);
  return v10;
}

uint64_t static ParameterInitializer.zeros.getter()
{
  return sub_25748C950(0.0);
}

uint64_t sub_25748C880()
{
  return sub_25748C9C0(0.0);
}

uint64_t ParameterInitializer.computeDevice.getter@<X0>(uint64_t a1@<X8>)
{
  sub_25748D76C(v1 + 16, (uint64_t)v8);
  sub_25748D76C((uint64_t)v8, (uint64_t)&v5);
  switch(v7[52])
  {
    case 1:
    case 2:
    case 3:
      swift_release();
      long long v3 = (uint64_t *)v7;
      goto LABEL_5;
    case 4:
      sub_25748D73C((uint64_t)&v5);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_DWORD *)(a1 + 48) = 0;
      break;
    default:
      long long v3 = &v6;
LABEL_5:
      sub_25748D7A4((uint64_t)v3, a1);
      break;
  }
  return sub_25748D73C((uint64_t)v8);
}

uint64_t static ParameterInitializer.ones.getter()
{
  return sub_25748C950(1.0);
}

uint64_t sub_25748C950(float a1)
{
  float v3 = a1;
  uint64_t v4 = MEMORY[0x263F8D5C8];
  uint64_t v5 = &protocol witness table for Float;
  char v10 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v1 = OUTLINED_FUNCTION_8_3();
  return OUTLINED_FUNCTION_16_2((uint64_t)&v3, v1 + 16);
}

uint64_t sub_25748C9B8()
{
  return sub_25748C9C0(1.0);
}

uint64_t sub_25748C9C0(float a1)
{
  float v7 = a1;
  uint64_t v1 = sub_25748739C();
  uint64_t v3 = MEMORY[0x263F8D5C8];
  uint64_t v4 = &protocol witness table for Float;
  if (v1)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
  }
  uint64_t v8 = v3;
  int v9 = v4;
  ParameterInitializer.computeDevice.getter((uint64_t)v10);
  v10[60] = 0;
  uint64_t v5 = OUTLINED_FUNCTION_8_3();
  return OUTLINED_FUNCTION_16_2((uint64_t)&v7, v5 + 16);
}

uint64_t static ParameterInitializer.repeating(_:scalarType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  float v6 = a4;
  uint64_t v7 = a1;
  uint64_t v8 = a2;
  sub_25747B47C(a3, (uint64_t)v9);
  v9[60] = 0;
  uint64_t v4 = OUTLINED_FUNCTION_8_3();
  return OUTLINED_FUNCTION_16_2((uint64_t)&v6, v4 + 16);
}

uint64_t static ParameterInitializer.randomUniform(in:seed:scalarType:on:)(unint64_t a1, char a2)
{
  OUTLINED_FUNCTION_15_3(a1, a2);
  OUTLINED_FUNCTION_11_3();
  uint64_t v2 = OUTLINED_FUNCTION_5_4();
  return OUTLINED_FUNCTION_16_2((uint64_t)v4, v2 + 16);
}

uint64_t static ParameterInitializer.randomNormal(mean:standardDeviation:seed:scalarType:on:)(unint64_t a1, char a2)
{
  OUTLINED_FUNCTION_15_3(a1, a2);
  OUTLINED_FUNCTION_11_3();
  uint64_t v2 = OUTLINED_FUNCTION_5_4();
  return OUTLINED_FUNCTION_16_2((uint64_t)v4, v2 + 16);
}

uint64_t static ParameterInitializer.glorotUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_10_2(a1, a2, a3, a4, a5, 0);
}

uint64_t static ParameterInitializer.glorotNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_9_4(a1, a2, a3, a4, a5, 0);
}

uint64_t static ParameterInitializer.heUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_10_2(a1, a2, a3, a4, a5, 1);
}

uint64_t static ParameterInitializer.heNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_9_4(a1, a2, a3, a4, a5, 1);
}

uint64_t static ParameterInitializer.heUniform(scale:seed:scalarType:on:)(unint64_t a1, char a2)
{
  v4[0] = 1;
  OUTLINED_FUNCTION_21_1(a1, a2);
  OUTLINED_FUNCTION_11_3();
  uint64_t v2 = OUTLINED_FUNCTION_5_4();
  return OUTLINED_FUNCTION_16_2((uint64_t)v4, v2 + 16);
}

uint64_t static ParameterInitializer.leCunUniform(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_10_2(a1, a2, a3, a4, a5, 2);
}

uint64_t static ParameterInitializer.leCunNormal(seed:scalarType:on:)(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return OUTLINED_FUNCTION_9_4(a1, a2, a3, a4, a5, 2);
}

uint64_t sub_25748CBF0(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  v9[0] = a6;
  v9[1] = a7;
  OUTLINED_FUNCTION_21_1(a1, a2);
  OUTLINED_FUNCTION_11_3();
  uint64_t v7 = OUTLINED_FUNCTION_5_4();
  return OUTLINED_FUNCTION_16_2((uint64_t)v9, v7 + 16);
}

uint64_t ParameterInitializer.description.getter()
{
  sub_25748D76C(v0 + 16, (uint64_t)&v6);
  switch(v8[52])
  {
    case 1:
      swift_release();
      uint64_t v1 = (uint64_t *)v8;
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000012;
      sub_25748D80C();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
      swift_release();
      uint64_t v1 = (uint64_t *)v8;
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576A8040();
      sub_2576A7B00();
      sub_2576A8040();
      goto LABEL_6;
    case 3:
      swift_release();
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A92D0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      unint64_t v2 = v5;
      uint64_t v3 = (uint64_t *)v8;
      goto LABEL_8;
    case 4:
      swift_release();
      return 0x6D6F74737563;
    default:
      uint64_t v1 = &v7;
      OUTLINED_FUNCTION_13_3();
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576A8040();
LABEL_6:
      sub_2576A7B00();
      sub_2576A92D0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      unint64_t v2 = v5;
      uint64_t v3 = v1;
LABEL_8:
      sub_25747B4E4((uint64_t)v3);
      return v2;
  }
}

uint64_t sub_25748D038()
{
  sub_2576A92D0();
  sub_2576A7B00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25748D078()
{
  return ParameterInitializer.description.getter();
}

uint64_t sub_25748D09C@<X0>(uint64_t a1@<X8>)
{
  sub_25748D76C(v1, (uint64_t)v5);
  switch(v7[52])
  {
    case 1:
    case 2:
    case 3:
      swift_release();
      uint64_t v3 = (uint64_t *)v7;
      goto LABEL_5;
    case 4:
      uint64_t result = sub_25748D73C((uint64_t)v5);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_DWORD *)(a1 + 48) = 0;
      break;
    default:
      uint64_t v3 = &v6;
LABEL_5:
      uint64_t result = sub_25748D7A4((uint64_t)v3, a1);
      break;
  }
  return result;
}

uint64_t ParameterInitializer.place(on:)(uint64_t a1)
{
  return sub_25748D16C(a1);
}

uint64_t sub_25748D16C(uint64_t a1)
{
  sub_25748D76C(v1, (uint64_t)&v10);
  switch(v12[52])
  {
    case 1:
      sub_25748D73C(v1);
      uint64_t v4 = *(void *)v11;
      uint64_t v3 = v12;
      *(void *)uint64_t v1 = v10;
      *(void *)(v1 + 8) = v4;
      *(_OWORD *)(v1 + 16) = *(_OWORD *)&v11[8];
      sub_2574866D0(a1, v1 + 32);
      char v5 = 1;
      goto LABEL_6;
    case 2:
      sub_25748D73C(v1);
      uint64_t v6 = *(void *)v11;
      uint64_t v3 = v12;
      *(void *)uint64_t v1 = v10;
      *(void *)(v1 + 8) = v6;
      *(_OWORD *)(v1 + 16) = *(_OWORD *)&v11[8];
      sub_2574866D0(a1, v1 + 32);
      char v5 = 2;
      goto LABEL_6;
    case 3:
      sub_25748D73C(v1);
      int v7 = HIDWORD(v10);
      uint64_t v8 = *(void *)v11;
      uint64_t v3 = v12;
      *(_WORD *)uint64_t v1 = v10;
      *(_DWORD *)(v1 + 4) = v7;
      *(void *)(v1 + 8) = v8;
      *(_OWORD *)(v1 + 16) = *(_OWORD *)&v11[8];
      sub_2574866D0(a1, v1 + 32);
      char v5 = 3;
LABEL_6:
      *(unsigned char *)(v1 + 84) = v5;
      return sub_25747B4E4((uint64_t)v3);
    case 4:
      return sub_25748D73C((uint64_t)&v10);
    default:
      sub_25748D73C(v1);
      uint64_t v3 = &v11[16];
      *(_DWORD *)uint64_t v1 = v10;
      *(_OWORD *)(v1 + 8) = *(_OWORD *)v11;
      sub_2574866D0(a1, v1 + 24);
      *(unsigned char *)(v1 + 84) = 0;
      return sub_25747B4E4((uint64_t)v3);
  }
}

uint64_t ParameterInitializer.placed(on:)(uint64_t a1)
{
  if (sub_25748739C())
  {
    (*(void (**)(void *__return_ptr))(*(void *)(v3 + 8) + 32))(v7);
    if (LOBYTE(v7[0]) - 8 < 3) {
      sub_257671054(a1, (v7[0] & 7) == 2);
    }
  }
  sub_25748D76C(v1 + 16, (uint64_t)v6);
  sub_25748D76C((uint64_t)v6, (uint64_t)v7);
  sub_25748D16C(a1);
  sub_25748D73C((uint64_t)v6);
  uint64_t v4 = OUTLINED_FUNCTION_8_3();
  return OUTLINED_FUNCTION_16_2((uint64_t)v7, v4 + 16);
}

uint64_t sub_25748D3F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25748D76C(v2, a2);
  return sub_25748D16C(a1);
}

uint64_t sub_25748D43C(uint64_t a1)
{
  return ParameterInitializer.place(on:)(a1);
}

uint64_t sub_25748D460@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = ParameterInitializer.placed(on:)(a1);
  *a2 = result;
  return result;
}

uint64_t ParameterInitializer.cast(to:)(uint64_t a1, uint64_t a2)
{
  sub_25748D76C(v2 + 16, (uint64_t)v7);
  sub_25748D530(a1, a2, (uint64_t)v8);
  sub_25748D73C((uint64_t)v7);
  uint64_t v5 = OUTLINED_FUNCTION_8_3();
  return OUTLINED_FUNCTION_16_2((uint64_t)v8, v5 + 16);
}

uint64_t sub_25748D530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_25748D76C(v3, (uint64_t)v30);
  switch(v31[60])
  {
    case 1:
      OUTLINED_FUNCTION_14_3();
      if (v17) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_17_2(v9, v10, v11, v12, v13, v14, v15, v16, v29, v30[0]);
      char v18 = 1;
      goto LABEL_10;
    case 2:
      OUTLINED_FUNCTION_14_3();
      if (v17) {
        goto LABEL_11;
      }
      OUTLINED_FUNCTION_17_2(v19, v20, v21, v22, v23, v24, v25, v26, v29, v30[0]);
      char v18 = 2;
      goto LABEL_10;
    case 3:
      OUTLINED_FUNCTION_14_3();
      if (v17)
      {
LABEL_11:
        sub_25748D76C(v3, a3);
        swift_release();
      }
      else
      {
        int v27 = HIDWORD(v30[0]);
        *(_WORD *)a3 = v30[0];
        *(_DWORD *)(a3 + 4) = v27;
        *(void *)(a3 + 8) = v5;
        *(void *)(a3 + 16) = a1;
        *(void *)(a3 + 24) = a2;
        sub_25748D09C(a3 + 32);
        char v18 = 3;
LABEL_10:
        *(unsigned char *)(a3 + 84) = v18;
      }
      return sub_25747B4E4((uint64_t)v4);
    case 4:
      sub_25748D73C((uint64_t)v30);
      return sub_25748D76C(v3, a3);
    default:
      uint64_t v4 = v31;
      if (v30[1] == a1)
      {
        sub_25748D76C(v3, a3);
      }
      else
      {
        *(_DWORD *)a3 = v30[0];
        *(void *)(a3 + 8) = a1;
        *(void *)(a3 + 16) = a2;
        sub_25748D09C(a3 + 24);
        *(unsigned char *)(a3 + 84) = 0;
      }
      return sub_25747B4E4((uint64_t)v4);
  }
}

void sub_25748D684(void (*a1)(uint64_t *__return_ptr))
{
  id v2 = sub_257614628();
  objc_msgSend(v2, sel_lock);

  a1(&v4);
  id v3 = sub_257614628();
  objc_msgSend(v3, sel_unlock);
}

uint64_t sub_25748D73C(uint64_t a1)
{
  return a1;
}

uint64_t sub_25748D76C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25748D7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25748D80C()
{
  return 0;
}

uint64_t type metadata accessor for ParameterInitializer()
{
  return self;
}

uint64_t method lookup function for ParameterInitializer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ParameterInitializer);
}

uint64_t destroy for ParameterInitializer.Kind(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unsigned int v2 = *(unsigned __int8 *)(result + 84);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)result + 5;
  }
  switch(v2)
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t result = swift_release();
      if (v1[7])
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(v1 + 4));
        uint64_t result = v1[9];
        goto LABEL_8;
      }
      break;
    case 4u:
      uint64_t result = swift_release();
      break;
    default:
      if (*(void *)(result + 48))
      {
        __swift_destroy_boxed_opaque_existential_1(result + 24);
        uint64_t result = v1[8];
LABEL_8:
        if ((unint64_t)(result - 1) >= 2)
        {
          uint64_t result = swift_unknownObjectRelease();
        }
      }
      break;
  }
  return result;
}

uint64_t initializeWithCopy for ParameterInitializer.Kind(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 84);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = (_OWORD *)(a1 + 32);
      uint64_t v12 = (_OWORD *)(a2 + 32);
      uint64_t v13 = *(void *)(a2 + 56);
      swift_retain();
      if (v13)
      {
        uint64_t v14 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v13;
        *(void *)(a1 + 64) = v14;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 32, a2 + 32, v13);
        uint64_t v15 = *(void *)(a2 + 72);
        if ((unint64_t)(v15 - 1) >= 2) {
          uint64_t v15 = swift_unknownObjectRetain();
        }
        *(void *)(a1 + 72) = v15;
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      else
      {
        long long v30 = *(_OWORD *)(a2 + 48);
        _OWORD *v11 = *v12;
        *(_OWORD *)(a1 + 48) = v30;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      char v31 = 1;
      goto LABEL_29;
    case 2u:
      *(void *)a1 = *(void *)a2;
      uint64_t v16 = *(void *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v16;
      char v17 = (_OWORD *)(a1 + 32);
      char v18 = (_OWORD *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 56);
      swift_retain();
      if (v19)
      {
        uint64_t v20 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v19;
        *(void *)(a1 + 64) = v20;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 32, a2 + 32, v19);
        uint64_t v21 = *(void *)(a2 + 72);
        if ((unint64_t)(v21 - 1) >= 2) {
          uint64_t v21 = swift_unknownObjectRetain();
        }
        *(void *)(a1 + 72) = v21;
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      else
      {
        long long v32 = *(_OWORD *)(a2 + 48);
        _OWORD *v17 = *v18;
        *(_OWORD *)(a1 + 48) = v32;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      char v31 = 2;
      goto LABEL_29;
    case 3u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      uint64_t v22 = *(void *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(void *)(a1 + 24) = v22;
      uint64_t v23 = (_OWORD *)(a1 + 32);
      uint64_t v24 = (_OWORD *)(a2 + 32);
      uint64_t v25 = *(void *)(a2 + 56);
      swift_retain();
      if (v25)
      {
        uint64_t v26 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v25;
        *(void *)(a1 + 64) = v26;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 32, a2 + 32, v25);
        uint64_t v27 = *(void *)(a2 + 72);
        if ((unint64_t)(v27 - 1) >= 2) {
          uint64_t v27 = swift_unknownObjectRetain();
        }
        *(void *)(a1 + 72) = v27;
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      else
      {
        long long v33 = *(_OWORD *)(a2 + 48);
        *uint64_t v23 = *v24;
        *(_OWORD *)(a1 + 48) = v33;
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      }
      char v31 = 3;
LABEL_29:
      *(unsigned char *)(a1 + 84) = v31;
      break;
    case 4u:
      uint64_t v28 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v28;
      *(unsigned char *)(a1 + 84) = 4;
      swift_retain();
      break;
    default:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v5 = (_OWORD *)(a1 + 24);
      uint64_t v6 = (_OWORD *)(a2 + 24);
      uint64_t v7 = *(void *)(a2 + 48);
      if (v7)
      {
        uint64_t v8 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = v7;
        *(void *)(a1 + 56) = v8;
        (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
        uint64_t v9 = *(void *)(a2 + 64);
        if ((unint64_t)(v9 - 1) >= 2) {
          uint64_t v9 = swift_unknownObjectRetain();
        }
        *(void *)(a1 + 64) = v9;
        *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      }
      else
      {
        long long v29 = *(_OWORD *)(a2 + 40);
        _OWORD *v5 = *v6;
        *(_OWORD *)(a1 + 40) = v29;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      }
      *(unsigned char *)(a1 + 84) = 0;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for ParameterInitializer.Kind(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 84);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 1u:
      case 2u:
      case 3u:
        swift_release();
        if (*(void *)(a1 + 56))
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          uint64_t v5 = *(void *)(a1 + 72);
          goto LABEL_9;
        }
        break;
      case 4u:
        swift_release();
        break;
      default:
        if (*(void *)(a1 + 48))
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + 24);
          uint64_t v5 = *(void *)(a1 + 64);
LABEL_9:
          if ((unint64_t)(v5 - 1) >= 2) {
            swift_unknownObjectRelease();
          }
        }
        break;
    }
    unsigned int v6 = *(unsigned __int8 *)(a2 + 84);
    if (v6 >= 5) {
      unsigned int v6 = *(_DWORD *)a2 + 5;
    }
    switch(v6)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        uint64_t v11 = *(void *)(a2 + 56);
        swift_retain();
        if (v11)
        {
          *(void *)(a1 + 56) = v11;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 32, a2 + 32, v11);
          uint64_t v12 = *(void *)(a2 + 72);
          if ((unint64_t)(v12 - 1) >= 2) {
            uint64_t v12 = swift_unknownObjectRetain();
          }
          *(void *)(a1 + 72) = v12;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          long long v21 = *(_OWORD *)(a2 + 32);
          long long v22 = *(_OWORD *)(a2 + 48);
          long long v23 = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 48) = v22;
          *(_OWORD *)(a1 + 64) = v23;
          *(_OWORD *)(a1 + 32) = v21;
        }
        char v24 = 1;
        goto LABEL_40;
      case 2u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        uint64_t v13 = *(void *)(a2 + 56);
        swift_retain();
        if (v13)
        {
          *(void *)(a1 + 56) = v13;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8))(a1 + 32, a2 + 32, v13);
          uint64_t v14 = *(void *)(a2 + 72);
          if ((unint64_t)(v14 - 1) >= 2) {
            uint64_t v14 = swift_unknownObjectRetain();
          }
          *(void *)(a1 + 72) = v14;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          long long v25 = *(_OWORD *)(a2 + 32);
          long long v26 = *(_OWORD *)(a2 + 48);
          long long v27 = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 48) = v26;
          *(_OWORD *)(a1 + 64) = v27;
          *(_OWORD *)(a1 + 32) = v25;
        }
        char v24 = 2;
        goto LABEL_40;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
        *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        uint64_t v15 = *(void *)(a2 + 56);
        swift_retain();
        if (v15)
        {
          *(void *)(a1 + 56) = v15;
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(a1 + 32, a2 + 32, v15);
          uint64_t v16 = *(void *)(a2 + 72);
          if ((unint64_t)(v16 - 1) >= 2) {
            uint64_t v16 = swift_unknownObjectRetain();
          }
          *(void *)(a1 + 72) = v16;
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        }
        else
        {
          long long v28 = *(_OWORD *)(a2 + 32);
          long long v29 = *(_OWORD *)(a2 + 48);
          long long v30 = *(_OWORD *)(a2 + 64);
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 48) = v29;
          *(_OWORD *)(a1 + 64) = v30;
          *(_OWORD *)(a1 + 32) = v28;
        }
        char v24 = 3;
LABEL_40:
        *(unsigned char *)(a1 + 84) = v24;
        break;
      case 4u:
        uint64_t v17 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v17;
        *(unsigned char *)(a1 + 84) = 4;
        swift_retain();
        break;
      default:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        uint64_t v7 = (_OWORD *)(a1 + 24);
        uint64_t v8 = (long long *)(a2 + 24);
        uint64_t v9 = *(void *)(a2 + 48);
        if (v9)
        {
          *(void *)(a1 + 48) = v9;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          (**(void (***)(_OWORD *, long long *))(v9 - 8))(v7, v8);
          uint64_t v10 = *(void *)(a2 + 64);
          if ((unint64_t)(v10 - 1) >= 2) {
            uint64_t v10 = swift_unknownObjectRetain();
          }
          *(void *)(a1 + 64) = v10;
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
        }
        else
        {
          long long v18 = *v8;
          long long v19 = *(_OWORD *)(a2 + 40);
          long long v20 = *(_OWORD *)(a2 + 56);
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 40) = v19;
          *(_OWORD *)(a1 + 56) = v20;
          *uint64_t v7 = v18;
        }
        *(unsigned char *)(a1 + 84) = 0;
        break;
    }
  }
  return a1;
}

void *__swift_memcpy85_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x55uLL);
}

unsigned __int8 *assignWithTake for ParameterInitializer.Kind(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = a1[84];
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 1u:
      case 2u:
      case 3u:
        swift_release();
        if (*((void *)a1 + 7))
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 32));
          uint64_t v5 = *((void *)a1 + 9);
          goto LABEL_9;
        }
        break;
      case 4u:
        swift_release();
        break;
      default:
        if (*((void *)a1 + 6))
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 24));
          uint64_t v5 = *((void *)a1 + 8);
LABEL_9:
          if ((unint64_t)(v5 - 1) >= 2) {
            swift_unknownObjectRelease();
          }
        }
        break;
    }
    unsigned int v6 = a2[84];
    if (v6 >= 5) {
      unsigned int v6 = *(_DWORD *)a2 + 5;
    }
    switch(v6)
    {
      case 1u:
        memcpy(a1, a2, 0x54uLL);
        char v7 = 1;
        break;
      case 2u:
        memcpy(a1, a2, 0x54uLL);
        char v7 = 2;
        break;
      case 3u:
        memcpy(a1, a2, 0x54uLL);
        char v7 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v7 = 4;
        break;
      default:
        memcpy(a1, a2, 0x4CuLL);
        char v7 = 0;
        break;
    }
    a1[84] = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ParameterInitializer.Kind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 85)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 84);
  if (v3 >= 5) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ParameterInitializer.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 77) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 85) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 85) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 84) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25748E330(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 84);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_25748E34C(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    unsigned int v2 = a2 - 5;
    *(_DWORD *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 5;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 84) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.Kind()
{
  return &type metadata for ParameterInitializer.Kind;
}

uint64_t sub_25748E38C()
{
  return 0;
}

unint64_t sub_25748E404()
{
  unint64_t result = qword_26A0012F0;
  if (!qword_26A0012F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012F0);
  }
  return result;
}

uint64_t sub_25748E450(uint64_t a1)
{
  return a1;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

unint64_t sub_25748E4CC()
{
  unint64_t result = qword_26A0012F8;
  if (!qword_26A0012F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012F8);
  }
  return result;
}

uint64_t sub_25748E518()
{
  return MEMORY[0x270FA0238](v0, 64, 15);
}

uint64_t dynamic_cast_existential_2_conditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result)
  {
    if (swift_conformsToProtocol2()) {
      return a1;
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_25748E5B0()
{
  unint64_t result = qword_26A001300;
  if (!qword_26A001300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001300);
  }
  return result;
}

unint64_t sub_25748E5FC()
{
  unint64_t result = qword_26A001308;
  if (!qword_26A001308)
  {
    type metadata accessor for RandomOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001308);
  }
  return result;
}

uint64_t sub_25748E64C@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_257654138(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_25748E668()
{
  unint64_t result = qword_26A001310;
  if (!qword_26A001310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001310);
  }
  return result;
}

unsigned char *sub_25748E6BC(unsigned char *result, char a2)
{
  void *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.Distribution()
{
  return &type metadata for ParameterInitializer.Distribution;
}

uint64_t getEnumTagSinglePayload for Upsample1D.Size.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14NeuralNetworks20ParameterInitializerC15VarianceScalingOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25748E828);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParameterInitializer.VarianceScaling()
{
  return &type metadata for ParameterInitializer.VarianceScaling;
}

unint64_t sub_25748E864()
{
  unint64_t result = qword_26A001318;
  if (!qword_26A001318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001318);
  }
  return result;
}

unint64_t sub_25748E8B4()
{
  unint64_t result = qword_26A001320;
  if (!qword_26A001320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001320);
  }
  return result;
}

uint64_t sub_25748E908@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_25748E64C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  return sub_25747B47C((uint64_t)va1, (uint64_t)va);
}

float OUTLINED_FUNCTION_2_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_9_4(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25748CBF0(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t OUTLINED_FUNCTION_10_2(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return sub_25748CBF0(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return sub_25747B47C(v0, v1);
}

uint64_t OUTLINED_FUNCTION_15_3(unint64_t a1, char a2)
{
  char v3 = a2 & 1;
  return sub_25748C7C0(a1, v3);
}

uint64_t OUTLINED_FUNCTION_16_2(uint64_t a1, uint64_t a2)
{
  sub_257486C14(a1, a2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_17_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v10 = a10;
  v10[1] = v13;
  v10[2] = v12;
  _OWORD v10[3] = v11;
  return sub_25748D09C((uint64_t)(v10 + 4));
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return sub_2576A8A30();
}

uint64_t OUTLINED_FUNCTION_21_1(unint64_t a1, char a2)
{
  char v3 = a2 & 1;
  return sub_25748C7C0(a1, v3);
}

char *OUTLINED_FUNCTION_22_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

uint64_t sub_25748EB74(uint64_t a1)
{
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  void v59[2];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;

  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v3 - 8);
  OUTLINED_FUNCTION_6_2();
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v59 - v6;
  uint64_t v8 = sub_2576A6DD0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_6_2();
  uint64_t v78 = v10;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v59 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v77 = (uint64_t)v59 - v16;
  MEMORY[0x270FA5388](v15);
  __n128 v76 = (uint64_t)v59 - v17;
  uint64_t v18 = sub_2575CA350();
  uint64_t v19 = sub_2574BAF20(v18, a1);
  if (!v19) {
    goto LABEL_9;
  }
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  uint64_t v23 = sub_2575CA350();
  uint64_t v24 = sub_2574BAF20(v23, a1);
  if (!v24)
  {
LABEL_8:
    swift_unknownObjectRelease();
LABEL_9:
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v35 = xmmword_2576ACD10;
    *(unsigned char *)(v35 + 16) = 2;
    swift_willThrow();
    return a1;
  }
  uint64_t v65 = v8;
  uint64_t v71 = v25;
  char v73 = v24;
  __n128 v70 = v1;
  uint64_t v26 = sub_2575CA350();
  uint64_t v27 = sub_2574BAF20(v26, a1);
  if (!v27)
  {
    swift_unknownObjectRelease();
    goto LABEL_8;
  }
  uint64_t v29 = v27;
  uint64_t v30 = v28;
  char v68 = v9;
  double v66 = v22;
  uint64_t ObjectType = swift_getObjectType();
  long long v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 16);
  v32(v79, ObjectType, v30);
  long long v33 = *(void *)(v79[0] + 16);
  swift_bridgeObjectRelease();
  uint64_t v69 = v29;
  double v67 = v30;
  uint64_t v64 = v7;
  unint64_t v72 = v14;
  unint64_t v62 = ObjectType;
  uint64_t v61 = v30 + 16;
  if (v33 <= 1)
  {
    char v63 = 1;
    uint64_t v34 = v66;
  }
  else
  {
    v32(&v86, ObjectType, v30);
    uint64_t v34 = v66;
    if (!*(void *)(v86 + 16))
    {
      memset(v79, 0, sizeof(v79));
      uint64_t v80 = -1;
      uint64_t v82 = 0;
      uint64_t v83 = 0;
      uint64_t v81 = 0;
      unint64_t v84 = -1;
      char v85 = 4;
      sub_25746BF88();
    }
    char v63 = *(void *)(v86 + 32);
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = v74;
  type metadata accessor for NativeTensorStorage();
  v79[0] = *(void *)(v70 + 80);
  LOBYTE(v86) = *(unsigned char *)(v70 + 88);
  sub_2576A7810();
  sub_25754DDC0(v79, (uint64_t)&v86, 0);
  long long v39 = v38;
  uint64_t v74 = v37;
  v79[0] = *(void *)(v38 + 16);
  sub_2576A7810();
  long long v40 = v76;
  OUTLINED_FUNCTION_3_7(v79, v76);
  v59[1] = v21;
  float v60 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v34 + 16))(v79, v60, v34);
  long long v41 = v77;
  OUTLINED_FUNCTION_3_7(v79, v77);
  int v42 = v73;
  long long v43 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v71 + 16))(v79, v43);
  OUTLINED_FUNCTION_3_7(v79, (uint64_t)v72);
  v32(v79, v62, v67);
  long long v44 = v78;
  OUTLINED_FUNCTION_3_7(v79, v78);
  long long v45 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  long long v46 = (uint64_t)v64;
  int v47 = v40;
  uint64_t v48 = v65;
  v45(v64, v47, v65);
  __swift_storeEnumTagSinglePayload(v46, 0, 1, v48);
  swift_retain();
  unint64_t v62 = v39;
  uint64_t v49 = sub_2576482F0(v46);
  sub_257480BC8(v46);
  uint64_t v50 = v75;
  v45((char *)v75, v41, v48);
  uint64_t v51 = __swift_storeEnumTagSinglePayload(v50, 0, 1, v48);
  MEMORY[0x270FA5388](v51);
  v59[-10] = v42;
  uint64_t v52 = v69;
  __int16 v53 = (uint64_t)v72;
  v59[-9] = v71;
  v59[-8] = v53;
  __int16 v54 = v67;
  v59[-7] = v52;
  v59[-6] = v54;
  int v55 = v63;
  v59[-5] = v44;
  v59[-4] = v55;
  __int16 v56 = v70;
  v59[-3] = v49;
  v59[-2] = v56;
  uint64_t v57 = v74;
  sub_257648508((uint64_t)sub_25748F7B0, (uint64_t)&v59[-12], MEMORY[0x263F8EE60] + 8, (uint64_t)&v87);
  if (v57)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v50);
    a1 = v68 + 8;
    __int16 v58 = *(void (**)(void))(v68 + 8);
    OUTLINED_FUNCTION_0_12();
    v58();
    OUTLINED_FUNCTION_0_12();
    v58();
    swift_release();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_12();
    v58();
    OUTLINED_FUNCTION_0_12();
  }
  else
  {
    sub_257480BC8(v50);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    a1 = swift_allocObject();
    *(_OWORD *)(a1 + 16) = xmmword_2576ABB10;
    swift_retain();
    *(void *)(a1 + 32) = sub_25748F6E0();
    *(void *)(a1 + 40) = &off_270667760;
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __int16 v58 = *(void (**)(void))(v68 + 8);
    OUTLINED_FUNCTION_1_11();
    v58();
    OUTLINED_FUNCTION_1_11();
    v58();
    OUTLINED_FUNCTION_1_11();
    v58();
    OUTLINED_FUNCTION_1_11();
  }
  v58();
  return a1;
}

uint64_t sub_25748F298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v19 = a5;
  uint64_t v22 = a8;
  uint64_t v23 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v16 = sub_2576A6DD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a3, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  uint64_t v25 = a4;
  uint64_t v26 = v19;
  uint64_t v27 = v20;
  uint64_t v28 = v21;
  uint64_t v29 = a1;
  uint64_t v30 = a9;
  uint64_t v31 = a10;
  sub_257648508((uint64_t)sub_25748F8B0, (uint64_t)v24, MEMORY[0x263F8EE60] + 8, v22);
  return sub_257480BC8((uint64_t)v15);
}

uint64_t sub_25748F40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  uint64_t v21 = a2;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  uint64_t v16 = sub_2576A6DD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a3, v16);
  __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v16);
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a1;
  uint64_t v26 = a6;
  uint64_t v27 = v19;
  sub_257648508((uint64_t)sub_25748F8D8, (uint64_t)v22, MEMORY[0x263F8EE60] + 8, v20);
  return sub_257480BC8((uint64_t)v15);
}

void sub_25748F574(const void *a1, size_t a2, const void *a3, const void *a4)
{
  sub_25748F690(v14);
  sub_2576A8470();
  unsigned int v9 = sub_2576A83D0();
  sub_25758A890(a2, a3, a4, a1, v14, v9, v10, v11, v12);
  if (v4)
  {
    sub_2576A8730();
    swift_bridgeObjectRelease();
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000024;
    *(void *)(v13 + 8) = 0x80000002576C52F0;
    *(unsigned char *)(v13 + 16) = 1;
    swift_willThrow();
  }
}

void *sub_25748F690@<X0>(void *a1@<X8>)
{
  sub_25748F7F0(v1 + 16, (uint64_t)v4);
  sub_25748F7F0((uint64_t)v4, (uint64_t)__src);
  return memcpy(a1, __src, 0xB0uLL);
}

uint64_t sub_25748F6E0()
{
  uint64_t v1 = sub_25748F764();
  sub_25748F7E8(v3);
  sub_25748F7F0(v0 + 16, (uint64_t)v4);
  sub_25748F7F0((uint64_t)v3, v0 + 16);
  sub_25748F858((uint64_t)v4);
  swift_release();
  return v1;
}

uint64_t sub_25748F74C(uint64_t a1)
{
  return sub_25748EB74(a1);
}

uint64_t sub_25748F764()
{
  sub_25748F7F0(v0 + 16, (uint64_t)v3);
  sub_25748F7F0((uint64_t)v3, (uint64_t)v4);
  uint64_t v1 = v5;
  sub_25748F884((uint64_t)v4);
  return v1;
}

uint64_t sub_25748F7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25748F298(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2, v2[9], v2[10]);
}

void sub_25748F7E8(void *a1)
{
}

uint64_t sub_25748F7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001328);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25748F858(uint64_t a1)
{
  return a1;
}

uint64_t sub_25748F884(uint64_t a1)
{
  return a1;
}

uint64_t sub_25748F8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25748F40C(a1, v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], a2);
}

void sub_25748F8D8(const void *a1)
{
  sub_25748F574(a1, *(void *)(v1 + 16), *(const void **)(v1 + 24), *(const void **)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_3_7@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25758A634(a1, 0, 0, a2);
}

uint64_t dispatch thunk of LayerVariable.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LayerVariable.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LayerVariable.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of LayerVariable.isInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_25748F984(uint64_t *a1)
{
  uint64_t v5 = *a1;
  uint64_t v2 = v5;
  sub_25748F9D0(&v5);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_257486C8C(v3);
}

uint64_t sub_25748F9D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      if ((v2 & 0xF000000000000007) == 0xF000000000000007 || (v2 & 0x8000000000000000) == 0) {
        goto LABEL_12;
      }
    }
    else if ((v2 & 0xF000000000000007) == 0xF000000000000007)
    {
      goto LABEL_12;
    }
  }
  else if ((~v2 & 0xF000000000000007) != 0)
  {
    sub_257486C84();
    sub_257486C8C(v3);
    sub_257486C8C(v2);
LABEL_12:
    uint64_t result = sub_2576A8B60();
    __break(1u);
    return result;
  }
  sub_257486C70(*a1);
  sub_257486C70(v3);
  sub_257486C8C(v3);
  return sub_257486C8C(v2);
}

uint64_t sub_25748FB04()
{
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0xF000000000000007;
  type metadata accessor for VariableIdentityGenerator();
  *(_DWORD *)(v0 + 16) = sub_257687270();
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 32) = 0xF000000000000007;
  sub_257486C8C(v1);
  return v0;
}

uint64_t sub_25748FB58(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *(_OWORD *)(v2 + 24) = xmmword_2576ACD40;
  if ((a2 & 0x100000000) != 0)
  {
    type metadata accessor for VariableIdentityGenerator();
    LODWORD(a2) = sub_257687270();
    uint64_t v4 = *(void *)(v2 + 32);
  }
  else
  {
    uint64_t v4 = 0xF000000000000007;
  }
  *(_DWORD *)(v2 + 16) = a2;
  *(void *)(v2 + 32) = v3 | 0x8000000000000000;
  sub_257486C8C(v4);
  return v2;
}

uint64_t sub_25748FBC8(uint64_t a1)
{
  *(_OWORD *)(v1 + 24) = xmmword_2576ACD40;
  type metadata accessor for VariableIdentityGenerator();
  *(_DWORD *)(v1 + 16) = sub_257687270();
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  sub_257486C8C(v3);
  return v1;
}

uint64_t sub_25748FC24(unint64_t a1)
{
  *(_OWORD *)(v1 + 24) = xmmword_2576ACD40;
  type metadata accessor for VariableIdentityGenerator();
  *(_DWORD *)(v1 + 16) = sub_257687270();
  uint64_t v3 = *(void *)(v1 + 32);
  unint64_t v4 = 0xF000000000000007;
  if (a1) {
    unint64_t v4 = a1;
  }
  *(void *)(v1 + 32) = v4;
  sub_257486C8C(v3);
  return v1;
}

uint64_t *sub_25748FC8C(uint64_t *result)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    LOBYTE(v8[0]) = 1;
    uint64_t v4 = MEMORY[0x263F8EE78];
    v8[1] = MEMORY[0x263F8EE78];
    sub_257486C84();
    sub_25748749C(v2, v3, (uint64_t)&v7);
    uint64_t v5 = v7;
    uint64_t v6 = sub_25748721C(v4);
    MEMORY[0x270FA5388](v6);
    swift_retain();
    sub_25748D684((void (*)(uint64_t *__return_ptr))sub_257486CA8);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    v8[0] = v5 | 0x8000000000000000;
    sub_25748F984(v8);
    return (uint64_t *)sub_257486C8C(v2);
  }
  return result;
}

uint64_t sub_25748FDB4()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_25748FE0C(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 25705;
  }
}

uint64_t sub_25748FE34(char *a1, char *a2)
{
  return sub_257574BE0(*a1, *a2);
}

uint64_t sub_25748FE40()
{
  return sub_2576A3610();
}

uint64_t sub_25748FE48()
{
  return sub_25746FF20();
}

uint64_t sub_25748FE50()
{
  return sub_2575EEDE0();
}

uint64_t sub_25748FE58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25748FDB4();
  *a1 = result;
  return result;
}

uint64_t sub_25748FE88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25748FE0C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_25748FEB4()
{
  return sub_25748FE0C(*v0);
}

uint64_t sub_25748FEBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25748FE08();
  *a1 = result;
  return result;
}

void sub_25748FEE4(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_25748FEF0(uint64_t a1)
{
  unint64_t v2 = sub_257490AB4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25748FF2C(uint64_t a1)
{
  unint64_t v2 = sub_257490AB4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_25748FF68(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_25748FFB8(a1);
  return v2;
}

uint64_t sub_25748FFB8(void *a1)
{
  OUTLINED_FUNCTION_2_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001350);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_8_0();
  *(_OWORD *)(v1 + 24) = xmmword_2576ACD40;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_257490AB4();
  sub_2576A91F0();
  if (v2)
  {
    sub_257486C8C(*(void *)(v1 + 32));
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_DWORD *)(v1 + 16) = sub_2576A8D80();
    sub_257490B4C();
    sub_2576A8D00();
    uint64_t v6 = OUTLINED_FUNCTION_4_7();
    v7(v6);
    unint64_t v8 = 0xF000000000000007;
    if (v10) {
      unint64_t v8 = v10 | 0x8000000000000000;
    }
    uint64_t v9 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = v8;
    sub_257486C8C(v9);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_257490194(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v25 = (uint64_t *)*v3;
  uint64_t v5 = sub_2576A8820();
  OUTLINED_FUNCTION_0_8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001330);
  OUTLINED_FUNCTION_0_8();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_8_0();
  uint64_t v18 = v17 - v16;
  if ((v3[4] & 0x8000000000000000) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2576A9200();
    sub_2576A87F0();
    uint64_t v19 = sub_2576A8830();
    swift_allocError();
    uint64_t v21 = v20;
    uint64_t v22 = (char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A001348) + 48);
    v21[3] = v25;
    *uint64_t v21 = v3;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v22, v11, v5);
    (*(void (**)(uint64_t **, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCE0], v19);
    swift_retain();
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_257490AB4();
  sub_2576A9230();
  sub_2576A8E60();
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  }
  uint64_t v24 = v3[4];
  if ((~v24 & 0xF000000000000007) != 0 && v24 < 0)
  {
    sub_257490B00();
    sub_2576A8DE0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
  }
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_257490520()
{
  sub_257486C8C(*(void *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayerVariableReference()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for LayerVariableReference.InitializationState(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_257486C84();
  *a1 = v3;
  return a1;
}

uint64_t destroy for LayerVariableReference.InitializationState()
{
  return sub_25748681C();
}

void *assignWithCopy for LayerVariableReference.InitializationState(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_257486C84();
  *a1 = v3;
  sub_25748681C();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  void *result = *a2;
  return result;
}

void *assignWithTake for LayerVariableReference.InitializationState(void *a1, void *a2)
{
  *a1 = *a2;
  sub_25748681C();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerVariableReference.InitializationState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7F && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for LayerVariableReference.InitializationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2574906D8(void *a1)
{
  return *a1 >> 63;
}

void *sub_2574906E4(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_2574906F4(uint64_t *result, uint64_t a2)
{
  void *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for LayerVariableReference.InitializationState()
{
  return &type metadata for LayerVariableReference.InitializationState;
}

void sub_257490718(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(*(void *)v1 + 16);
}

uint64_t sub_257490728@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_25748FF68(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_257490754(void *a1)
{
  return sub_257490194(a1);
}

void sub_257490778(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      uint64_t v4 = *(void *)((v3 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 168;
      sub_25747B47C(v4, a1);
    }
    else
    {
      sub_257486C84();
      ParameterInitializer.computeDevice.getter(a1);
      sub_257486C8C(v3);
    }
  }
  else
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

uint64_t sub_257490818(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v3 = result;
    if (v2 < 0)
    {
      uint64_t v10 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v5 = Tensor.scalarType.getter();
      uint64_t v7 = v6;
      swift_retain();
      uint64_t v8 = sub_2575365A0((uint64_t)v5, v7);
      if (v8 != 2) {
        OUTLINED_FUNCTION_5_5(v8, v8 & 1);
      }
      uint64_t v10 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      Tensor.place(on:)(v3);
      unint64_t v9 = v2 & 0x7FFFFFFFFFFFFFFFLL | 0x8000000000000000;
      uint64_t v4 = (uint64_t *)&v9;
    }
    else
    {
      sub_257486C84();
      uint64_t v10 = ParameterInitializer.placed(on:)(v3);
      uint64_t v4 = &v10;
    }
    sub_25748F984(v4);
    return sub_257486C8C(v2);
  }
  return result;
}

uint64_t sub_257490918()
{
  OUTLINED_FUNCTION_2_9();
  uint64_t v2 = *(void *)(v0 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v4 = v1;
    if (v2 < 0)
    {
      uint64_t v6 = v0;
      uint64_t v14 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v7 = Tensor.scalarType.getter();
      uint64_t v9 = v8;
      swift_retain();
      uint64_t v10 = sub_2575365A0((uint64_t)v7, v9);
      if (v10 != 2) {
        OUTLINED_FUNCTION_5_5(v10, v10 & 1);
      }
      uint64_t v14 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      swift_retain();
      Tensor.place(on:)(v4);
      uint64_t v13 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(unsigned int *)(v6 + 16);
      uint64_t v3 = OUTLINED_FUNCTION_1_12();
      sub_25748FB58(&v13, v11);
    }
    else
    {
      sub_257486C84();
      uint64_t v5 = ParameterInitializer.placed(on:)(v4);
      uint64_t v3 = OUTLINED_FUNCTION_1_12();
      sub_25748FBC8(v5);
    }
    sub_257486C8C(v2);
  }
  else
  {
    uint64_t v3 = OUTLINED_FUNCTION_1_12();
    sub_25748FB04();
  }
  return v3;
}

uint64_t sub_257490A58(uint64_t a1)
{
  return sub_257490818(a1);
}

uint64_t sub_257490A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_257490918();
  *a1 = result;
  return result;
}

uint64_t sub_257490AA8()
{
  return MEMORY[0x263F8E908];
}

unint64_t sub_257490AB4()
{
  unint64_t result = qword_26A001338;
  if (!qword_26A001338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001338);
  }
  return result;
}

unint64_t sub_257490B00()
{
  unint64_t result = qword_26A001340;
  if (!qword_26A001340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001340);
  }
  return result;
}

unint64_t sub_257490B4C()
{
  unint64_t result = qword_26A001358;
  if (!qword_26A001358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001358);
  }
  return result;
}

uint64_t sub_257490B98(unsigned char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = *(void *)(v2 + 32);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    if (v11 < 0)
    {
      v20[0] = v11 & 0x7FFFFFFFFFFFFFFFLL;
      (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v10, *MEMORY[0x263F8E1F8], v4);
      sub_257486C84();
      Tensor.cast(to:roundingRule:)();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
      v20[0] = v21[0];
      uint64_t v18 = *(unsigned int *)(v2 + 16);
      uint64_t v12 = OUTLINED_FUNCTION_1_12();
      sub_25748FB58(v20, v18);
    }
    else
    {
      LOBYTE(v21[0]) = *a1;
      uint64_t v13 = sub_25767AC64();
      uint64_t v14 = dynamic_cast_existential_1_unconditional((uint64_t)v13);
      uint64_t v16 = v15;
      sub_25748D76C(v11 + 16, (uint64_t)v20);
      sub_257486C84();
      sub_25748D530(v14, v16, (uint64_t)v21);
      sub_25748D73C((uint64_t)v20);
      type metadata accessor for ParameterInitializer();
      uint64_t v17 = swift_allocObject();
      sub_257486C14((uint64_t)v21, v17 + 16);
      uint64_t v12 = OUTLINED_FUNCTION_1_12();
      sub_25748FBC8(v17);
    }
    sub_257486C8C(v11);
  }
  else
  {
    uint64_t v12 = OUTLINED_FUNCTION_1_12();
    sub_25748FB04();
  }
  return v12;
}

uint64_t dynamic_cast_existential_1_unconditional(uint64_t a1)
{
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    return a1;
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for LayerVariableReference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257490EB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayerVariableReference.CodingKeys()
{
  return &type metadata for LayerVariableReference.CodingKeys;
}

unint64_t sub_257490EEC()
{
  unint64_t result = qword_26A001360;
  if (!qword_26A001360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001360);
  }
  return result;
}

unint64_t sub_257490F3C()
{
  unint64_t result = qword_26A001368;
  if (!qword_26A001368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001368);
  }
  return result;
}

unint64_t sub_257490F8C()
{
  unint64_t result = qword_26A001370;
  if (!qword_26A001370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001370);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_5(uint64_t a1, char a2)
{
  return sub_257671054(v2, a2);
}

void sub_257491048(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  int64_t v6 = a1;
  uint64_t v7 = sub_2575A95A0(a1, a2, a3);
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_2574E7134();
  if (v7 < 0)
  {
LABEL_45:
    __break(1u);
    return;
  }
  if (v7)
  {
    while (1)
    {
      BOOL v8 = v6 <= a2;
      if (a3 > 0) {
        BOOL v8 = v6 >= a2;
      }
      if (v8) {
        break;
      }
      if (__OFADD__(v6, a3)) {
        int64_t v9 = ((v6 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v9 = v6 + a3;
      }
      if (__OFADD__(v6, a4)) {
        goto LABEL_39;
      }
      uint64_t v10 = *a5;
      if (*(void *)(*a5 + 16) >= v6 + a4) {
        int64_t v11 = v6 + a4;
      }
      else {
        int64_t v11 = *(void *)(*a5 + 16);
      }
      if (v11 < v6) {
        goto LABEL_40;
      }
      if (v6 < 0) {
        goto LABEL_41;
      }
      unint64_t v13 = *(void *)(v26 + 16);
      unint64_t v12 = *(void *)(v26 + 24);
      sub_2576A7810();
      if (v13 >= v12 >> 1) {
        sub_2574E7134();
      }
      *(void *)(v26 + 16) = v13 + 1;
      uint64_t v14 = (void *)(v26 + 32 * v13);
      v14[4] = v10;
      v14[5] = v10 + 32;
      v14[6] = v6;
      v14[7] = (2 * v11) | 1;
      int64_t v6 = v9;
      if (!--v7) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  int64_t v9 = v6;
LABEL_20:
  BOOL v15 = v9 <= a2;
  if (a3 > 0) {
    BOOL v15 = v9 >= a2;
  }
  if (!v15)
  {
    while (1)
    {
      int64_t v16 = __OFADD__(v9, a3) ? ((v9 + a3) >> 63) ^ 0x8000000000000000 : v9 + a3;
      if (__OFADD__(v9, a4)) {
        break;
      }
      uint64_t v17 = *a5;
      if (*(void *)(*a5 + 16) >= v9 + a4) {
        int64_t v18 = v9 + a4;
      }
      else {
        int64_t v18 = *(void *)(*a5 + 16);
      }
      if (v18 < v9) {
        goto LABEL_43;
      }
      if (v9 < 0) {
        goto LABEL_44;
      }
      unint64_t v20 = *(void *)(v26 + 16);
      unint64_t v19 = *(void *)(v26 + 24);
      sub_2576A7810();
      if (v20 >= v19 >> 1) {
        sub_2574E7134();
      }
      *(void *)(v26 + 16) = v20 + 1;
      uint64_t v21 = (void *)(v26 + 32 * v20);
      v21[4] = v17;
      v21[5] = v17 + 32;
      v21[6] = v9;
      v21[7] = (2 * v18) | 1;
      BOOL v22 = v16 <= a2;
      if (a3 > 0) {
        BOOL v22 = v16 >= a2;
      }
      int64_t v9 = v16;
      if (v22) {
        return;
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
}

void Tensor.description.getter()
{
  uint64_t v1 = *v0;
  if (*(void *)(*(void *)(*(void *)(*v0 + 16) + 152) + 16))
  {
    do
    {
      OUTLINED_FUNCTION_0_13();
      if (!v4)
      {
        __break(1u);
        return;
      }
    }
    while (v2 != 1);
    BOOL v5 = v3 > 1000;
  }
  else
  {
    BOOL v5 = 0;
  }
  int64_t v6 = Tensor.scalarType.getter();
  sub_257491340((uint64_t)v6, v1, 80, 3, v5, (uint64_t)v6, v7);
}

uint64_t sub_257491340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void *)(a6 - 8);
  uint64_t result = MEMORY[0x270FA5388](a1);
  int64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v11 + 16);
  uint64_t v18 = *(void *)(v17 + 152);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    unint64_t v20 = (uint64_t *)(v18 + 32);
    uint64_t v21 = 1;
    while (1)
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63) {
        break;
      }
      uint64_t v21 = v23;
      if (!--v19)
      {
        if (v23 == 1) {
          goto LABEL_6;
        }
        uint64_t v34 = v13;
        uint64_t v35 = v12;
        int v33 = v14;
        *(void *)&long long v39 = v11;
        uint64_t v25 = Tensor.scalars<A>(as:)(result, a6, a7);
        *(void *)&long long v39 = v25;
        uint64_t v26 = sub_2576A7F50();
        uint64_t WitnessTable = swift_getWitnessTable();
        MEMORY[0x25A2B82A0](&v37, v26, WitnessTable);
        uint64_t v41 = v37;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = a6;
        *(void *)(v28 + 24) = a7;
        sub_2576A8760();
        swift_getWitnessTable();
        sub_2576A8CA0();
        swift_release();
        swift_bridgeObjectRelease();
        long long v36 = v39;
        long long v37 = v39;
        uint64_t v38 = v40;
        sub_2576A89C0();
        swift_getWitnessTable();
        sub_2576A7D40();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        if (v42) {
          uint64_t v29 = 3;
        }
        else {
          uint64_t v29 = v41;
        }
        if (v29)
        {
          if (v35 != 0x8000000000000000 || v29 != -1)
          {
            if (v35 / v29 <= 1) {
              uint64_t v31 = 1;
            }
            else {
              uint64_t v31 = v35 / v29;
            }
            *(void *)&long long v39 = *(void *)(v17 + 152);
            sub_2576A7810();
            uint64_t v24 = sub_25749177C(0, v34, v29, v31, v33 & 1, (uint64_t)&v39, v25, a6, a7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v24;
          }
LABEL_22:
          __break(1u);
          return result;
        }
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_6:
  *(void *)&long long v39 = 0;
  *((void *)&v39 + 1) = 0xE000000000000000;
  *(void *)&long long v37 = v11;
  Tensor.scalar<A>(as:)(result, a6, a7, (uint64_t)v16);
  sub_2576A8F00();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v16, a6);
  return v39;
}

uint64_t sub_2574916A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2576A7A30();
  uint64_t v5 = sub_2576A7AB0();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_25749177C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v16 = *v15;
  sub_2576A7F50();
  swift_getWitnessTable();
  if (sub_2576A81E0()) {
    return 0;
  }
  if (MEMORY[0x25A2B84C0](a7, a8) == 1)
  {
    sub_2576A7F90();
    return sub_2576A7A30();
  }
  uint64_t v18 = *(void *)(v16 + 16);
  uint64_t v19 = v18 - 1;
  if (v18 == 1) {
    return sub_257491ED0(a1, a2, a3, a4, a5 & 1, a7, a8, a9);
  }
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (!v18)
  {
LABEL_20:
    sub_2576A7810();
    sub_25746BF88();
  }
  uint64_t v20 = *(void *)(v16 + 32);
  if (v20 < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_257492648(0, v20, &v25, v16, a7, a5 & 1, a2, a1, a3, a4, a8);
  MEMORY[0x25A2B81A0](10, 0xE100000000000000, v19);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  if (__OFADD__(a1, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  MEMORY[0x25A2B81A0](32, 0xE100000000000000, a1 + 1);
  sub_2576A7810();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v25;
  uint64_t v22 = *(void *)(v25 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v23 = v21 + 40;
    do
    {
      sub_2576A7810();
      sub_2576A7B00();
      if (v22 != 1) {
        sub_2576A7810();
      }
      v23 += 16;
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_2576A7810();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 91;
}

void Tensor.playgroundDescription.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*(void *)(*v1 + 16) + 152);
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1;
    int64_t v6 = (uint64_t *)(v4 + 32);
    uint64_t v7 = *(void *)(v4 + 16);
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = v5 * v8;
      if ((unsigned __int128)(v5 * (__int128)v8) >> 64 != (v5 * v8) >> 63)
      {
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v5 = v9;
      --v7;
    }
    while (v7);
    if (v9 == 1) {
      goto LABEL_6;
    }
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v13) {
        break;
      }
      if (v12 == 1)
      {
        v21[0] = v3;
        Tensor.scalarType.getter();
        swift_retain();
        uint64_t v14 = OUTLINED_FUNCTION_1_13();
        uint64_t v16 = v15;
        swift_release();
        *(void *)(a1 + 24) = MEMORY[0x263F8D310];
        *(void *)a1 = v14;
        *(void *)(a1 + 8) = v16;
        return;
      }
    }
LABEL_18:
    __break(1u);
  }
  else
  {
LABEL_6:
    v21[0] = *v1;
    uint64_t v10 = Tensor.scalarType.getter();
    sub_257491C9C((uint64_t)v10, v11, v21);
    if (v22)
    {
      sub_257491D58(v21, (_OWORD *)a1);
      return;
    }
    if (!*(void *)(v4 + 16))
    {
LABEL_16:
      Tensor.scalarType.getter();
      swift_retain();
      uint64_t v18 = OUTLINED_FUNCTION_1_13();
      uint64_t v20 = v19;
      swift_release();
      *(void *)(a1 + 24) = MEMORY[0x263F8D310];
      *(void *)a1 = v18;
      *(void *)(a1 + 8) = v20;
      sub_257491CF8((uint64_t)v21);
      return;
    }
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v13) {
        break;
      }
      if (v17 == 1) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
}

uint64_t sub_257491C9C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a3);
  return Tensor.scalar<A>(as:)(a1, a1, a2, (uint64_t)boxed_opaque_existential_0);
}

uint64_t sub_257491CF8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_257491D58(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_257491DD0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_257491DE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2574916A0(a1, a2);
}

uint64_t sub_257491DE8(uint64_t a1)
{
  uint64_t v2 = sub_2576A7AB0();
  BOOL v3 = __OFADD__(v2, a1);
  uint64_t result = v2 + a1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x25A2B8050](result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001388);
    sub_257492AF8(&qword_26A001390, &qword_26A001388);
    sub_2576A7AE0();
    sub_2576A7AE0();
    return 0;
  }
  return result;
}

uint64_t sub_257491ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = a7;
  uint64_t v13 = a1;
  uint64_t v61 = MEMORY[0x263F8EE78];
  if ((a5 & 1) == 0) {
    goto LABEL_8;
  }
  a1 = MEMORY[0x25A2B84C0](a6, a7);
  if (a2 + 0x4000000000000000 < 0) {
    goto LABEL_21;
  }
  if (a1 <= 2 * a2)
  {
LABEL_8:
    *(void *)&long long v59 = a6;
    uint64_t v29 = MEMORY[0x270FA5388](a1);
    uint64_t v49 = v9;
    uint64_t v50 = a8;
    uint64_t v51 = a3;
    MEMORY[0x270FA5388](v29);
    uint64_t v45 = v9;
    uint64_t v46 = a8;
    int v47 = sub_257492A94;
    uint64_t v48 = v30;
    uint64_t v31 = sub_2576A7F50();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_257495BE0((void (*)(char *, uint64_t))sub_257492AA0, (uint64_t)v44, v31, MEMORY[0x263F8D310], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v33);
    goto LABEL_9;
  }
  uint64_t v15 = sub_2576A7F50();
  sub_2576A7810();
  swift_getWitnessTable();
  uint64_t v55 = v15;
  uint64_t v16 = sub_2576A81D0();
  v52[1] = v52;
  long long v57 = v59;
  long long v58 = v60;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v49 = v9;
  uint64_t v50 = a8;
  uint64_t v51 = a3;
  MEMORY[0x270FA5388](v17);
  uint64_t v45 = v9;
  uint64_t v46 = a8;
  int v47 = sub_257492B3C;
  uint64_t v48 = v18;
  uint64_t v19 = sub_2576A8640();
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v19;
  sub_257495BE0((void (*)(char *, uint64_t))sub_257492AA0, (uint64_t)v44, v19, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v53, MEMORY[0x263F8E658], v20);
  swift_unknownObjectRelease();
  sub_2575A0370();
  uint64_t v21 = v61;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_22;
  }
  while (1)
  {
    unint64_t v23 = *(void *)(v21 + 16);
    if (v23 >= *(void *)(v21 + 24) >> 1)
    {
      sub_257471F40();
      uint64_t v21 = v43;
    }
    *(void *)(v21 + 16) = v23 + 1;
    uint64_t v24 = v21 + 16 * v23;
    *(void *)(v24 + 32) = 3026478;
    *(void *)(v24 + 40) = 0xE300000000000000;
    uint64_t v61 = v21;
    *(void *)&long long v57 = a6;
    sub_2576A7810();
    swift_getWitnessTable();
    uint64_t v25 = sub_2576A78F0();
    long long v57 = v59;
    long long v58 = v60;
    uint64_t v26 = MEMORY[0x270FA5388](v25);
    uint64_t v49 = v9;
    uint64_t v50 = a8;
    uint64_t v51 = a3;
    MEMORY[0x270FA5388](v26);
    uint64_t v45 = v9;
    uint64_t v46 = a8;
    int v47 = sub_257492B3C;
    uint64_t v48 = v27;
    sub_257495BE0((void (*)(char *, uint64_t))sub_257492AA0, (uint64_t)v44, v54, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v53, MEMORY[0x263F8E658], v28);
    swift_unknownObjectRelease();
    uint64_t v13 = v56;
LABEL_9:
    sub_2575A0370();
    if (!a4)
    {
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v9 = v61;
    sub_257491048(0, *(void *)(v61 + 16), a4, a4, &v61);
    if (!__OFADD__(v13, 1)) {
      break;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    sub_257471F40();
    uint64_t v21 = v42;
  }
  uint64_t v35 = v34;
  MEMORY[0x25A2B81A0](32, 0xE100000000000000, v13 + 1);
  *(void *)&long long v59 = 2604;
  *((void *)&v59 + 1) = 0xE200000000000000;
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  *(void *)&long long v57 = 91;
  *((void *)&v57 + 1) = 0xE100000000000000;
  uint64_t v36 = *(void *)(v35 + 16);
  if (v36)
  {
    uint64_t v56 = v9;
    swift_bridgeObjectRetain_n();
    long long v37 = (long long *)(v35 + 48);
    do
    {
      long long v38 = *v37;
      long long v59 = *(v37 - 1);
      long long v60 = v38;
      swift_unknownObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EB8);
      sub_257492AF8(&qword_26A001380, &qword_26A000EB8);
      sub_2576A7900();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      if (v36 != 1) {
        sub_2576A7810();
      }
      sub_2576A7B00();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v37 += 2;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v40 = *((void *)&v57 + 1);
    uint64_t v39 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v40 = 0xE100000000000000;
    uint64_t v39 = 91;
  }
  *(void *)&long long v59 = v39;
  *((void *)&v59 + 1) = v40;
  sub_2576A7810();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v59;
}

uint64_t sub_2574924E4(uint64_t a1, uint64_t a2)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2576A7A30();
  uint64_t result = sub_2576A7AB0();
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = sub_257491DE8((a2 - result) & ~((a2 - result) >> 63));
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_2574925EC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = a3 + 1;
  if (__OFADD__(a3, 1))
  {
    __break(1u);
  }
  else
  {
    v11[1] = v7;
    void v11[2] = v8;
    v11[0] = *a2;
    return sub_25749177C(result, a4, a5, a6, a7 & 1, v11, a1);
  }
  return result;
}

uint64_t sub_257492648(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v16 = *(void *)(a4 + 16);
  if (!v16) {
    goto LABEL_61;
  }
  uint64_t v11 = a7;
  int v15 = a6;
  uint64_t v14 = a4;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v57 = a11;
  uint64_t v53 = a10;
  uint64_t v52 = a9;
  sub_2576A8FA0();
  sub_2576A7810();
  swift_unknownObjectRetain_n();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = *(void *)(v17 + 16);
  swift_release();
  if (v18 == v16 - 1)
  {
    uint64_t v59 = swift_dynamicCastClass();
    if (!v59)
    {
      swift_bridgeObjectRelease();
      uint64_t v59 = MEMORY[0x263F8EE78];
    }
  }
  else
  {
LABEL_62:
    swift_bridgeObjectRelease();
    sub_257694574(v14, v14 + 32, 1, (2 * v16) | 1);
    uint64_t v59 = v49;
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v13 != v12)
  {
    if (v12 < v13)
    {
      __break(1u);
      return result;
    }
    uint64_t v20 = *(void *)(v59 + 16);
    uint64_t v14 = MEMORY[0x25A2B84C0](a5, v57);
    uint64_t v50 = v12 - v11;
    BOOL v21 = __OFSUB__(v12, v11);
    BOOL v51 = v21;
    uint64_t v56 = v11;
    int v55 = v15;
    while (1)
    {
      if (v13 >= v12)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      if (v20)
      {
        uint64_t v22 = (uint64_t *)(v59 + 32);
        uint64_t v23 = v20;
        uint64_t v24 = 1;
        while (1)
        {
          uint64_t v25 = *v22++;
          uint64_t v26 = v24 * v25;
          if ((unsigned __int128)(v24 * (__int128)v25) >> 64 != (v24 * v25) >> 63) {
            break;
          }
          uint64_t v24 = v26;
          if (!--v23) {
            goto LABEL_23;
          }
        }
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v26 = 1;
LABEL_23:
      uint64_t v27 = v13 * v26;
      if ((unsigned __int128)(v13 * (__int128)v26) >> 64 != (v13 * v26) >> 63) {
        goto LABEL_57;
      }
      if (v27 < v14)
      {
        if (v20)
        {
          uint64_t v28 = (uint64_t *)(v59 + 32);
          uint64_t v29 = v20;
          uint64_t v30 = 1;
          while (1)
          {
            uint64_t v31 = *v28++;
            uint64_t v32 = v30 * v31;
            if ((unsigned __int128)(v30 * (__int128)v31) >> 64 != (v30 * v31) >> 63) {
              break;
            }
            uint64_t v30 = v32;
            if (!--v29) {
              goto LABEL_31;
            }
          }
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        uint64_t v32 = 1;
LABEL_31:
        if (__OFADD__(v27, v32)) {
          goto LABEL_58;
        }
        if (v14 >= v27 + v32) {
          uint64_t v33 = v27 + v32;
        }
        else {
          uint64_t v33 = v14;
        }
        if ((v15 & 1) == 0 || v13 < v11) {
          goto LABEL_45;
        }
        if (v51) {
          goto LABEL_60;
        }
        if (v13 >= v50)
        {
LABEL_45:
          if (v33 < v27) {
            goto LABEL_59;
          }
          v61[0] = sub_2576A7F70();
          v61[1] = v38;
          v61[2] = v39;
          v61[3] = v40;
          sub_2576A8640();
          swift_getWitnessTable();
          uint64_t v41 = sub_2576A7F60();
          v61[0] = v59;
          uint64_t v42 = sub_2574925EC(v41, v61, a8, v11, v52, v53, v15 & 1);
          unint64_t v37 = v43;
          swift_bridgeObjectRelease();
          uint64_t v34 = *a3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_257471F40();
            uint64_t v34 = v45;
          }
          unint64_t v16 = *(void *)(v34 + 16);
          if (v16 >= *(void *)(v34 + 24) >> 1)
          {
            sub_257471F40();
            uint64_t v34 = v46;
          }
          *(void *)(v34 + 16) = v16 + 1;
          uint64_t v44 = v34 + 16 * v16;
          *(void *)(v44 + 32) = v42;
          uint64_t v36 = v44 + 32;
          goto LABEL_51;
        }
        if (v13 == v11)
        {
          uint64_t v34 = *a3;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_257471F40();
            uint64_t v34 = v47;
          }
          unint64_t v16 = *(void *)(v34 + 16);
          if (v16 >= *(void *)(v34 + 24) >> 1)
          {
            sub_257471F40();
            uint64_t v34 = v48;
          }
          *(void *)(v34 + 16) = v16 + 1;
          uint64_t v35 = v34 + 16 * v16;
          *(void *)(v35 + 32) = 3026478;
          uint64_t v36 = v35 + 32;
          unint64_t v37 = 0xE300000000000000;
LABEL_51:
          *(void *)(v36 + 8) = v37;
          *a3 = v34;
          uint64_t v11 = v56;
          int v15 = v55;
        }
      }
      if (++v13 == v12) {
        return swift_release();
      }
    }
  }
  return swift_release();
}

uint64_t sub_257492A94(uint64_t a1)
{
  return sub_2574924E4(a1, *(void *)(v1 + 32));
}

uint64_t sub_257492AA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_257492AB8(a1);
}

uint64_t sub_257492AB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_257492AF8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  return sub_257491340(v0, v1, 80, 3, v2, v0, v3);
}

uint64_t Upsample1D.Size.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_257492B8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Upsample1D.Size.init(integerLiteral:)(*a1, a2);
}

void Upsample1D.size.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
}

void Upsample1D.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

uint64_t Upsample1D.init(size:mode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(result + 8);
  char v4 = *a2;
  *(void *)a3 = *(void *)result;
  *(unsigned char *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 9) = v4;
  return result;
}

uint64_t Upsample1D.forward(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*(void *)(*a1 + 16) + 152);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4 != 3)
  {
LABEL_17:
    uint64_t v16 = v4;
    long long v17 = xmmword_2576AD000;
    char v18 = 0;
    long long v19 = xmmword_2576AD010;
    char v20 = 0;
    char v21 = 7;
    OUTLINED_FUNCTION_9_5();
    sub_25746BF88();
  }
  uint64_t v5 = *(void *)v1;
  char v6 = *(unsigned char *)(v1 + 9);
  if (*(unsigned char *)(v1 + 8) == 1)
  {
    float v7 = OUTLINED_FUNCTION_13_4(*(float *)&v5);
    if (v8)
    {
      __break(1u);
    }
    else if (v7 > -9.2234e18)
    {
      if (v7 < 9.2234e18)
      {
        uint64_t v5 = (uint64_t)v7;
        goto LABEL_11;
      }
      goto LABEL_16;
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)(v3 + 48);
  if (v9 != -1)
  {
    uint64_t v10 = *(void *)v1;
    if (v9) {
      uint64_t v10 = v5 % v9;
    }
    if (v10)
    {
      sub_2576A8730();
      OUTLINED_FUNCTION_8_4();
      uint64_t v12 = sub_2576A7810();
      MEMORY[0x25A2B83F0](v12, MEMORY[0x263F8D6C8]);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      uint64_t result = OUTLINED_FUNCTION_20_3();
      __break(1u);
      return result;
    }
  }
LABEL_11:
  uint64_t v16 = v2;
  Tensor.expandingShape(at:)();
  uint64_t v14 = v15;
  char v13 = v6;
  resize(images:size:mode:)(&v14, v5, 1, &v13, &v16);
  swift_release();
  uint64_t v15 = v16;
  Tensor.squeezingShape(at:)();
  return swift_release();
}

uint64_t sub_257492DF4(char a1)
{
  if (a1) {
    return 1701080941;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_257492E14()
{
  return sub_25747A7E4();
}

uint64_t sub_257492E30()
{
  return sub_257492DF4(*v0);
}

uint64_t sub_257492E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257493668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257492E60(uint64_t a1)
{
  unint64_t v2 = sub_257494A18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257492E9C(uint64_t a1)
{
  unint64_t v2 = sub_257494A18();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Upsample1D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001398);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_257494A18();
  OUTLINED_FUNCTION_18_3();
  sub_257494A64();
  sub_2576A8E40();
  if (!v0)
  {
    sub_257494AB0();
    OUTLINED_FUNCTION_10_3();
  }
  uint64_t v4 = OUTLINED_FUNCTION_21_2();
  v5(v4);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_7_1();
}

void Upsample1D.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_15_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013B8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_4_8();
  sub_257494A18();
  OUTLINED_FUNCTION_5_6();
  if (!v13)
  {
    sub_257494AFC();
    OUTLINED_FUNCTION_2_10();
    sub_257494B48();
    OUTLINED_FUNCTION_2_10();
    uint64_t v16 = OUTLINED_FUNCTION_1_14();
    v17(v16);
    *(void *)uint64_t v14 = v18;
    *(unsigned char *)(v14 + 8) = v19;
    *(unsigned char *)(v14 + 9) = a12;
  }
  __swift_destroy_boxed_opaque_existential_1(v12);
  OUTLINED_FUNCTION_7_1();
}

void sub_25749314C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  Upsample1D.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_257493164()
{
}

uint64_t Upsample2D.Size.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(void *)(a2 + 8) = result;
  *(unsigned char *)(a2 + 16) = 0;
  return result;
}

uint64_t Upsample2D.Size.init(arrayLiteral:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1[2] == 2)
  {
    uint64_t v3 = a1[4];
    uint64_t v4 = a1[5];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = v4;
    *(unsigned char *)(a2 + 16) = 0;
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t sub_257493220@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return Upsample2D.Size.init(integerLiteral:)(*a1, a2);
}

__n128 Upsample2D.size.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[1].n128_u8[0];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

void Upsample2D.mode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t Upsample2D.init(size:mode:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *(void *)(result + 8);
  int v5 = *(unsigned __int8 *)(result + 16);
  char v6 = *a2;
  if (v5 != 1)
  {
    if (v3 < 1 || v4 <= 0) {
      goto LABEL_8;
    }
LABEL_7:
    *(void *)a3 = v3;
    *(void *)(a3 + 8) = v4;
    *(unsigned char *)(a3 + 16) = v5;
    *(unsigned char *)(a3 + 17) = v6;
    return result;
  }
  if (*(float *)&v3 > 0.0 && *((float *)&v3 + 1) > 0.0) {
    goto LABEL_7;
  }
LABEL_8:
  __n128 result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t Upsample2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v6 = *(void *)v2;
  uint64_t v5 = *(void *)(v2 + 8);
  int v7 = *(unsigned __int8 *)(v2 + 16);
  char v8 = *(unsigned char *)(v2 + 17);
  unsigned __int8 v9 = *(unsigned char *)(*(void *)(*a1 + 16) + 160);
  uint64_t v10 = static ScalarType.floatingPointTypes.getter();
  BOOL v11 = sub_2575A0094(v9, (uint64_t)v10);
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_26;
  }
  uint64_t v12 = *(void **)(*(void *)(v4 + 16) + 152);
  if (v12[2] != 4)
  {
    uint64_t v25 = (ValueMetadata *)v12[2];
    *(_OWORD *)uint64_t v26 = xmmword_2576AD000;
    v26[16] = 0;
    long long v27 = xmmword_2576AD020;
    char v28 = 0;
    char v29 = 7;
    OUTLINED_FUNCTION_9_5();
LABEL_28:
    sub_25746BF88();
  }
  if (v7)
  {
    float v14 = OUTLINED_FUNCTION_13_4(*(float *)&v6);
    if (v15)
    {
      __break(1u);
    }
    else if (v14 > -9.2234e18)
    {
      if (v14 < 9.2234e18)
      {
        float v16 = *((float *)&v6 + 1) * (float)*(uint64_t *)(v13 + 56);
        if ((~LODWORD(v16) & 0x7F800000) != 0)
        {
          if (v16 > -9.2234e18)
          {
            if (v16 < 9.2234e18)
            {
              uint64_t v6 = (uint64_t)v14;
              uint64_t v5 = (uint64_t)v16;
LABEL_19:
              uint64_t v25 = (ValueMetadata *)v4;
              char v24 = v8;
              return resize(images:size:mode:)((uint64_t *)&v25, v6, v5, &v24, a2);
            }
            goto LABEL_25;
          }
LABEL_24:
          __break(1u);
LABEL_25:
          __break(1u);
LABEL_26:
          uint64_t v25 = sub_25767AC64();
          *(void *)uint64_t v26 = v22;
          *(_OWORD *)&v26[8] = xmmword_2576AD000;
          LOBYTE(v27) = 0;
          *((void *)&v27 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
          char v28 = 2;
          char v29 = 3;
          OUTLINED_FUNCTION_9_5();
          goto LABEL_28;
        }
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v17 = v12[6];
  if (v17 == -1) {
    goto LABEL_18;
  }
  uint64_t v18 = v6;
  if (v17) {
    uint64_t v18 = v6 % v17;
  }
  if (!v18)
  {
LABEL_18:
    uint64_t v19 = v12[7];
    if (v19 == -1) {
      goto LABEL_19;
    }
    uint64_t v20 = v5;
    if (v19) {
      uint64_t v20 = v5 % v19;
    }
    if (!v20) {
      goto LABEL_19;
    }
  }
  sub_2576A8730();
  OUTLINED_FUNCTION_8_4();
  uint64_t v23 = sub_2576A7810();
  MEMORY[0x25A2B83F0](v23, MEMORY[0x263F8D6C8]);
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  uint64_t result = OUTLINED_FUNCTION_20_3();
  __break(1u);
  return result;
}

uint64_t sub_257493668(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (OUTLINED_FUNCTION_19_3() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = OUTLINED_FUNCTION_19_3();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_257493720(uint64_t a1)
{
  unint64_t v2 = sub_257494B94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25749375C(uint64_t a1)
{
  unint64_t v2 = sub_257494B94();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Upsample2D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_257494B94();
  OUTLINED_FUNCTION_18_3();
  sub_257494BE0();
  sub_2576A8E40();
  if (!v0)
  {
    sub_257494AB0();
    OUTLINED_FUNCTION_10_3();
  }
  uint64_t v4 = OUTLINED_FUNCTION_21_2();
  v5(v4);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_7_1();
}

void Upsample2D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_15_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013F0);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_8();
  sub_257494B94();
  OUTLINED_FUNCTION_5_6();
  if (!v1)
  {
    sub_257494C2C();
    OUTLINED_FUNCTION_2_10();
    sub_257494B48();
    OUTLINED_FUNCTION_2_10();
    uint64_t v4 = OUTLINED_FUNCTION_1_14();
    v5(v4);
    *(void *)uint64_t v2 = v6;
    *(void *)(v2 + 8) = v7;
    *(unsigned char *)(v2 + 16) = v8;
    *(unsigned char *)(v2 + 17) = v6;
  }
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257493A14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6176247463617865 && a2 == 0xEB0000000065756CLL;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x794264656C616373 && a2 == 0xEE00656C61637324)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_2576A8F60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_257493BC4()
{
  return 3;
}

uint64_t sub_257493BCC(char a1)
{
  if (!a1) {
    return 0x696D697263736964;
  }
  if (a1 == 1) {
    return 0x6176247463617865;
  }
  return 0x794264656C616373;
}

void sub_257493C48()
{
}

void sub_257493C60()
{
}

uint64_t sub_257493C78()
{
  return sub_2576A7DC0();
}

uint64_t sub_257493CD8()
{
  return sub_2576A7D80();
}

uint64_t sub_257493D28()
{
  return sub_257493BCC(*v0);
}

uint64_t sub_257493D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257493A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257493D58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257493BC4();
  *a1 = result;
  return result;
}

uint64_t sub_257493D80(uint64_t a1)
{
  unint64_t v2 = sub_257494C78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257493DBC(uint64_t a1)
{
  unint64_t v2 = sub_257494C78();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Upsample1D.Size.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001400);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_8();
  int v5 = *(unsigned __int8 *)(v0 + 8);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_257494C78();
  sub_2576A9230();
  if (v5 == 1)
  {
    sub_257494CC4();
    OUTLINED_FUNCTION_10_3();
    if (!v1) {
      OUTLINED_FUNCTION_16_3();
    }
  }
  else
  {
    sub_257494CC4();
    OUTLINED_FUNCTION_10_3();
    if (!v1) {
      OUTLINED_FUNCTION_17_3();
    }
  }
  uint64_t v6 = OUTLINED_FUNCTION_21_2();
  v7(v6);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_7_1();
}

uint64_t Upsample1D.Size.init(from:)()
{
  OUTLINED_FUNCTION_15_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001418);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_4_8();
  sub_257494C78();
  OUTLINED_FUNCTION_5_6();
  if (!v1)
  {
    sub_257494D10();
    OUTLINED_FUNCTION_2_10();
    if (v12)
    {
      sub_2576A8D30();
      unsigned int v6 = v5;
      uint64_t v7 = OUTLINED_FUNCTION_11_4();
      v8(v7);
      uint64_t v9 = v6;
    }
    else
    {
      uint64_t v9 = sub_2576A8D40();
      uint64_t v10 = OUTLINED_FUNCTION_11_4();
      v11(v10);
    }
    *(void *)uint64_t v2 = v9;
    *(unsigned char *)(v2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_2574940EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6568247463617865 && a2 == 0xEC00000074686769;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6977247463617865 && a2 == 0xEB00000000687464;
      if (v7 || (sub_2576A8F60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x794264656C616373 && a2 == 0xEF74686769656824;
        if (v8 || (sub_2576A8F60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x794264656C616373 && a2 == 0xEE00687464697724)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = sub_2576A8F60();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_257494390()
{
  return 5;
}

uint64_t sub_257494398(char a1)
{
  uint64_t result = 0x696D697263736964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6568247463617865;
      break;
    case 2:
      uint64_t result = 0x6977247463617865;
      break;
    case 3:
    case 4:
      uint64_t result = 0x794264656C616373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25749446C()
{
  return Upsample1D.Size.init(from:)();
}

void sub_257494484()
{
}

uint64_t sub_25749449C()
{
  return sub_2576A7DC0();
}

uint64_t sub_2574944FC()
{
  return sub_2576A7D80();
}

uint64_t sub_25749454C()
{
  return sub_257494398(*v0);
}

uint64_t sub_257494554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2574940EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_25749457C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257494390();
  *a1 = result;
  return result;
}

uint64_t sub_2574945A4(uint64_t a1)
{
  unint64_t v2 = sub_257494D5C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574945E0(uint64_t a1)
{
  unint64_t v2 = sub_257494D5C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void Upsample2D.Size.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001428);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_3_8();
  int v5 = *(unsigned __int8 *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_257494D5C();
  sub_2576A9230();
  if (v5 == 1)
  {
    sub_257494DA8();
    sub_2576A8E40();
    if (!v1)
    {
      OUTLINED_FUNCTION_16_3();
      OUTLINED_FUNCTION_16_3();
    }
  }
  else
  {
    sub_257494DA8();
    sub_2576A8E40();
    if (!v1)
    {
      OUTLINED_FUNCTION_17_3();
      OUTLINED_FUNCTION_17_3();
    }
  }
  uint64_t v6 = OUTLINED_FUNCTION_21_2();
  v7(v6);
  OUTLINED_FUNCTION_22_2();
  OUTLINED_FUNCTION_7_1();
}

uint64_t Upsample2D.Size.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001440);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_4_8();
  sub_257494D5C();
  sub_2576A91F0();
  if (!v2)
  {
    sub_257494DF4();
    sub_2576A8D50();
    if (v17)
    {
      sub_2576A8D30();
      unsigned int v8 = v7;
      sub_2576A8D30();
      unsigned int v10 = v9;
      uint64_t v11 = OUTLINED_FUNCTION_12_4();
      v12(v11);
      uint64_t v13 = 0;
      unint64_t v14 = v8 | ((unint64_t)v10 << 32);
    }
    else
    {
      unint64_t v14 = sub_2576A8D40();
      uint64_t v13 = sub_2576A8D40();
      uint64_t v15 = OUTLINED_FUNCTION_12_4();
      v16(v15);
    }
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v13;
    *(unsigned char *)(a2 + 16) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_2574949E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Upsample2D.Size.init(from:)(a1, a2);
}

void sub_257494A00()
{
}

unint64_t sub_257494A18()
{
  unint64_t result = qword_26A0013A0;
  if (!qword_26A0013A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013A0);
  }
  return result;
}

unint64_t sub_257494A64()
{
  unint64_t result = qword_26A0013A8;
  if (!qword_26A0013A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013A8);
  }
  return result;
}

unint64_t sub_257494AB0()
{
  unint64_t result = qword_26A0013B0;
  if (!qword_26A0013B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013B0);
  }
  return result;
}

unint64_t sub_257494AFC()
{
  unint64_t result = qword_26A0013C0;
  if (!qword_26A0013C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013C0);
  }
  return result;
}

unint64_t sub_257494B48()
{
  unint64_t result = qword_26A0013C8;
  if (!qword_26A0013C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013C8);
  }
  return result;
}

unint64_t sub_257494B94()
{
  unint64_t result = qword_26A0013E0;
  if (!qword_26A0013E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013E0);
  }
  return result;
}

unint64_t sub_257494BE0()
{
  unint64_t result = qword_26A0013E8;
  if (!qword_26A0013E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013E8);
  }
  return result;
}

unint64_t sub_257494C2C()
{
  unint64_t result = qword_26A0013F8;
  if (!qword_26A0013F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0013F8);
  }
  return result;
}

unint64_t sub_257494C78()
{
  unint64_t result = qword_26A001408;
  if (!qword_26A001408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001408);
  }
  return result;
}

unint64_t sub_257494CC4()
{
  unint64_t result = qword_26A001410;
  if (!qword_26A001410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001410);
  }
  return result;
}

unint64_t sub_257494D10()
{
  unint64_t result = qword_26A001420;
  if (!qword_26A001420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001420);
  }
  return result;
}

unint64_t sub_257494D5C()
{
  unint64_t result = qword_26A001430;
  if (!qword_26A001430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001430);
  }
  return result;
}

unint64_t sub_257494DA8()
{
  unint64_t result = qword_26A001438;
  if (!qword_26A001438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001438);
  }
  return result;
}

unint64_t sub_257494DF4()
{
  unint64_t result = qword_26A001448;
  if (!qword_26A001448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001448);
  }
  return result;
}

uint64_t sub_257494E40()
{
  return MEMORY[0x263F8D748];
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample1D(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 10))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample1D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for Upsample1D()
{
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample1D.Size(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample1D.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_257494F88(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_257494F90(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for Upsample1D.Size()
{
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Upsample2D(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 18))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample2D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for Upsample2D()
{
}

uint64_t getEnumTagSinglePayload for Upsample2D.Size(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Upsample2D.Size(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2574950D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2574950D8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

void type metadata accessor for Upsample2D.Size()
{
}

ValueMetadata *type metadata accessor for Upsample2D.Size.Discriminator()
{
  return &type metadata for Upsample2D.Size.Discriminator;
}

uint64_t getEnumTagSinglePayload for Upsample2D.Size.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Upsample2D.Size.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    void *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257495258);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Upsample2D.Size.CodingKeys()
{
  return &type metadata for Upsample2D.Size.CodingKeys;
}

ValueMetadata *type metadata accessor for Upsample1D.Size.Discriminator()
{
  return &type metadata for Upsample1D.Size.Discriminator;
}

unsigned char *storeEnumTagSinglePayload for Upsample1D.Size.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25749536CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Upsample1D.Size.CodingKeys()
{
  return &type metadata for Upsample1D.Size.CodingKeys;
}

ValueMetadata *type metadata accessor for Upsample2D.CodingKeys()
{
  return &type metadata for Upsample2D.CodingKeys;
}

unsigned char *_s14NeuralNetworks10Upsample2DV4SizeO13DiscriminatorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257495480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Upsample1D.CodingKeys()
{
  return &type metadata for Upsample1D.CodingKeys;
}

unint64_t sub_2574954BC()
{
  unint64_t result = qword_26A001450;
  if (!qword_26A001450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001450);
  }
  return result;
}

unint64_t sub_25749550C()
{
  unint64_t result = qword_26A001458;
  if (!qword_26A001458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001458);
  }
  return result;
}

unint64_t sub_25749555C()
{
  unint64_t result = qword_26A001460;
  if (!qword_26A001460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001460);
  }
  return result;
}

unint64_t sub_2574955AC()
{
  unint64_t result = qword_26A001468;
  if (!qword_26A001468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001468);
  }
  return result;
}

unint64_t sub_2574955FC()
{
  unint64_t result = qword_26A001470;
  if (!qword_26A001470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001470);
  }
  return result;
}

unint64_t sub_25749564C()
{
  unint64_t result = qword_26A001478;
  if (!qword_26A001478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001478);
  }
  return result;
}

unint64_t sub_25749569C()
{
  unint64_t result = qword_26A001480;
  if (!qword_26A001480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001480);
  }
  return result;
}

unint64_t sub_2574956EC()
{
  unint64_t result = qword_26A001488;
  if (!qword_26A001488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001488);
  }
  return result;
}

unint64_t sub_25749573C()
{
  unint64_t result = qword_26A001490;
  if (!qword_26A001490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001490);
  }
  return result;
}

unint64_t sub_25749578C()
{
  unint64_t result = qword_26A001498;
  if (!qword_26A001498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001498);
  }
  return result;
}

unint64_t sub_2574957DC()
{
  unint64_t result = qword_26A0014A0;
  if (!qword_26A0014A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014A0);
  }
  return result;
}

unint64_t sub_25749582C()
{
  unint64_t result = qword_26A0014A8;
  if (!qword_26A0014A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014A8);
  }
  return result;
}

unint64_t sub_25749587C()
{
  unint64_t result = qword_26A0014B0;
  if (!qword_26A0014B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014B0);
  }
  return result;
}

unint64_t sub_2574958CC()
{
  unint64_t result = qword_26A0014B8;
  if (!qword_26A0014B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014B8);
  }
  return result;
}

unint64_t sub_257495918()
{
  unint64_t result = qword_26A0014C0;
  if (!qword_26A0014C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014C0);
  }
  return result;
}

unint64_t sub_257495964()
{
  unint64_t result = qword_26A0014C8;
  if (!qword_26A0014C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014C8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return sub_2576A8D50();
}

void *OUTLINED_FUNCTION_4_8()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return sub_2576A91F0();
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  return v0;
}

float OUTLINED_FUNCTION_13_4(float a1)
{
  return a1 * (float)v1;
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return sub_2576A8E20();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return sub_2576A8E30();
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return sub_2576A9230();
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return sub_2576A8F60();
}

uint64_t OUTLINED_FUNCTION_20_3()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return v0;
}

uint64_t sub_257495BE0(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a5;
  uint64_t v42 = a8;
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  OUTLINED_FUNCTION_0_10();
  uint64_t v40 = v9;
  ((void (*)(void))MEMORY[0x270FA5388])();
  OUTLINED_FUNCTION_3_3();
  uint64_t v50 = v10;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v51 = v11;
  OUTLINED_FUNCTION_44_0();
  uint64_t v12 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v44 = (char *)&v36 - v13;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_3();
  uint64_t v45 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v43 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_6_2();
  uint64_t v39 = v18;
  MEMORY[0x270FA5388](v19);
  char v21 = (char *)&v36 - v20;
  uint64_t v22 = sub_2576A8130();
  if (!v22) {
    return sub_2576A7E90();
  }
  uint64_t v23 = v22;
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v54 = sub_2576A76E0();
  uint64_t v46 = sub_2576A8990();
  sub_2576A88D0();
  uint64_t v38 = v21;
  uint64_t result = sub_2576A8120();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v25 = (void (**)(char *))(v51 + 16);
    uint64_t v47 = v51 + 8;
    uint64_t v51 = a6;
    uint64_t v26 = v44;
    long long v27 = v38;
    while (1)
    {
      char v28 = (void (*)(char *, void))sub_2576A8200();
      (*v25)(v26);
      v28(v53, 0);
      uint64_t v29 = v52;
      v48(v26, v50);
      if (v29) {
        break;
      }
      uint64_t v52 = 0;
      OUTLINED_FUNCTION_14_0();
      v30();
      sub_2576A8960();
      sub_2576A8160();
      if (!--v23)
      {
        uint64_t v31 = v43;
        uint64_t v32 = v39;
        uint64_t v33 = v37;
        (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v39, v27, v37);
        sub_2576A86B0();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
        return v54;
      }
    }
    OUTLINED_FUNCTION_14_0();
    v34();
    OUTLINED_FUNCTION_14_0();
    v35();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v42, v50, v41);
  }
  return result;
}

uint64_t (*RMSProp.learningRate.modify())(void)
{
  return nullsub_1;
}

void RMSProp.gradientClippingMode.getter(uint64_t a1@<X8>)
{
}

void RMSProp.regularizationKind.getter(uint64_t a1@<X8>)
{
}

float RMSProp.gradientScale.getter()
{
  return *(float *)(v0 + 36);
}

uint64_t RMSProp.step.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t result = v1 + 1;
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_257496014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = RMSProp.step.getter();
  *a1 = result;
  return result;
}

void sub_257496090(uint64_t *a1)
{
}

void RMSProp.step.setter(uint64_t a1)
{
  if (__OFSUB__(a1, 1)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_102_0(a1 - 1);
  }
}

uint64_t (*RMSProp.step.modify(uint64_t (*result)()))()
{
  *((void *)result + 1) = v1;
  uint64_t v2 = *(void *)(v1 + 40);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)uint64_t result = v4;
    return sub_257496100;
  }
  return result;
}

uint64_t RMSProp.alpha.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 48), a1);
}

uint64_t RMSProp.alpha.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*RMSProp.alpha.modify())(void)
{
  return nullsub_1;
}

uint64_t RMSProp.init(for:learningRate:rho:epsilon:gradientClippingMode:regularizationKind:gradientScale:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>, float a6@<S2>, float a7@<S3>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v21 < 0.0)
  {
    OUTLINED_FUNCTION_18_4();
    uint64_t v27 = 51;
LABEL_9:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_10:
    sub_2576A8B60();
    OUTLINED_FUNCTION_45_0();
  }
  if (a5 < 0.0)
  {
    OUTLINED_FUNCTION_18_4();
    uint64_t v27 = 52;
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  uint64_t v22 = *v15;
  unint64_t v23 = *(unsigned int *)v16 | ((unint64_t)*((unsigned __int8 *)v16 + 4) << 32);
  if (BYTE4(v23) != 255 && *v16 <= 0.0)
  {
    OUTLINED_FUNCTION_18_4();
    uint64_t v27 = 54;
    goto LABEL_9;
  }
  unint64_t v24 = *((unsigned int *)v15 + 2) | ((unint64_t)*((unsigned __int8 *)v15 + 12) << 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v17, a1);
  uint64_t result = OptimizerStateDictionary.init(_:)((void (*)(void, void))v20, a1, a2, &v28);
  uint64_t v26 = v28;
  *(float *)a3 = a4;
  *(float *)(a3 + 4) = a5;
  *(float *)(a3 + 8) = a6;
  *(void *)(a3 + 12) = v22;
  *(unsigned char *)(a3 + 24) = BYTE4(v24);
  *(_DWORD *)(a3 + 20) = v24;
  *(unsigned char *)(a3 + 32) = BYTE4(v23);
  *(_DWORD *)(a3 + 28) = v23;
  *(float *)(a3 + 36) = a7;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = v26;
  return result;
}

uint64_t (*RMSProp.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3))(unsigned char *, void)
{
  uint64_t v166 = a1;
  v183[7] = *MEMORY[0x263EF8340];
  uint64_t v146 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v171 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_3_3();
  uint64_t v145 = v9;
  sub_2576A75E0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v143 = v11;
  uint64_t v144 = v10;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_3();
  uint64_t v142 = v12;
  uint64_t v151 = sub_2576A75A0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_49_0(v16, v139[0]);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_88_0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v172 = v3;
  nullsub_1(a3);
  uint64_t v170 = a3;
  uint64_t v165 = *(void *)(a3 + 16);
  sub_2576A89D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v168 = a2;
  uint64_t v19 = MEMORY[0x25A2B84C0](a2);
  sub_2574729F0(0, v19 & ~(v19 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v173 = v20;
  if (qword_26A0008F8 != -1) {
    goto LABEL_66;
  }
  while (1)
  {
    uint64_t v21 = sub_2576A75D0();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_26A001FD0);
    sub_2576A7590();
    uint64_t v147 = v22;
    unint64_t v23 = sub_2576A75C0();
    os_signpost_type_t v24 = sub_2576A83C0();
    if (sub_2576A8480())
    {
      uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_57_0();
      os_signpost_id_t v26 = OUTLINED_FUNCTION_89_0(v25);
      _os_signpost_emit_with_name_impl(&dword_257455000, v23, v24, v26, "Optimizing", "", (uint8_t *)v4, 2u);
      OUTLINED_FUNCTION_56_0();
    }

    OUTLINED_FUNCTION_94_0();
    v27();
    sub_2576A7610();
    swift_allocObject();
    uint64_t v150 = sub_2576A7600();
    uint64_t v28 = *(void *)(v14 + 8);
    v14 += 8;
    OUTLINED_FUNCTION_115(v28);
    v29();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_19_4();
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)&unk_27065D768, (uint64_t)v183, v182);
    sub_25747B4E4((uint64_t)v180);
    uint64_t v178 = v182[0];
    OUTLINED_FUNCTION_76_0();
    if (!v34 & v33) {
      BOOL v34 = 0;
    }
    else {
      BOOL v34 = v32 == 0x200000000;
    }
    if (v34)
    {
      uint64_t v14 = WitnessTable;
      if ((*(void *)(v172 + 12) & 0x100000000) != 0)
      {
        uint64_t v4 = (uint64_t)v139;
        *(void *)uint64_t v180 = v168;
        MEMORY[0x270FA5388](v31);
        v139[-2] = v170;
        v139[-1] = v14;
        uint64_t v38 = sub_2576A7F50();
        uint64_t v39 = swift_getWitnessTable();
        uint64_t v14 = WitnessTable;
        sub_257495BE0((void (*)(char *, uint64_t))sub_25749F688, (uint64_t)&v139[-4], v38, (uint64_t)&type metadata for Tensor, MEMORY[0x263F8E628], v39, MEMORY[0x263F8E658], v40);
        uint64_t v164 = 0;
        v180[0] = 13;
        Tensor.init(stacking:alongAxis:scalarType:)();
        v182[0] = v183[0];
        Tensor.sum()();
        swift_release();
        uint64_t v41 = *(void *)v180;
        OUTLINED_FUNCTION_23_2();
        char v42 = *(unsigned char *)(*(void *)(v41 + 16) + 160);
        OUTLINED_FUNCTION_19_4();
        uint64_t v177 = v30;
        LOBYTE(v179) = v42;
        OUTLINED_FUNCTION_26_1();
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        sub_25747B4E4((uint64_t)v183);
        uint64_t v43 = v182[7];
        sub_25747B4E4((uint64_t)v180);
        *(void *)uint64_t v180 = v41;
        v182[0] = v43;
        static Tensor.* infix(_:_:)();
        v182[0] = v183[0];
        sqrt(_:)();
        uint64_t v35 = v14;
        swift_release();
        swift_release();
        swift_release();
        uint64_t v44 = *(void *)v180;
        swift_release();
        uint64_t v178 = v44;
      }
      else
      {
        OUTLINED_FUNCTION_23_2();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
        uint64_t v36 = (__n128 *)OUTLINED_FUNCTION_2_11();
        OUTLINED_FUNCTION_110_0(v36, (__n128)xmmword_2576ABB10);
        OUTLINED_FUNCTION_19_4();
        sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)v36, (uint64_t)v183, v182);
        sub_25747B4E4((uint64_t)v180);
        uint64_t v37 = v182[0];
        swift_release();
        uint64_t v164 = 0;
        uint64_t v178 = v37;
        uint64_t v35 = v14;
      }
    }
    else
    {
      uint64_t v164 = 0;
      uint64_t v35 = WitnessTable;
    }
    sub_2574720D8();
    uint64_t v177 = v45;
    if (v19 < 0) {
      __break(1u);
    }
    if (!v19) {
      break;
    }
    uint64_t v46 = 0;
    unsigned int v141 = *MEMORY[0x263F8E1F8];
    v139[1] = v171 + 8;
    uint64_t v140 = (void (**)(uint64_t, void, uint64_t))(v171 + 104);
    uint64_t v152 = v172 + 48;
    uint64_t v159 = MEMORY[0x263F8EE60] + 8;
    __n128 v169 = (__n128)xmmword_2576ABB10;
    uint64_t v162 = v19;
    while (v19 != v46)
    {
      sub_2576A7F90();
      long long v47 = *(_OWORD *)v180;
      swift_retain();
      uint64_t v48 = swift_retain();
      MEMORY[0x270FA5388](v48);
      uint64_t v49 = (uint64_t)&v139[-10];
      v139[-8] = v170;
      v139[-7] = v35;
      uint64_t v171 = *((void *)&v47 + 1);
      uint64_t v50 = v172;
      v139[-6] = *((void *)&v47 + 1);
      v139[-5] = v50;
      v139[-4] = (uint64_t)&v178;
      v139[-3] = v47;
      v139[-2] = (uint64_t)&v177;
      swift_retain();
      uint64_t v51 = sub_2576A8600();
      if (v52)
      {
        uint64_t v56 = swift_modifyAtWritableKeyPath();
        uint64_t v58 = v171;
        if ((*(unsigned char *)(v57 + 8) & 1) == 0)
        {
          uint64_t v59 = v57;
          uint64_t v157 = v56;
          float v60 = *(float *)(v172 + 36);
          uint64_t v160 = v57;
          if (v60 == 1.0)
          {
            swift_retain();
            uint64_t v61 = v58;
          }
          else
          {
            OUTLINED_FUNCTION_23_2();
            char v62 = *(unsigned char *)(*(void *)(v58 + 16) + 160);
            OUTLINED_FUNCTION_19_4();
            uint64_t v176 = MEMORY[0x263F8EE78];
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
            char v63 = (__n128 *)OUTLINED_FUNCTION_2_11();
            v63[1] = v169;
            v63[2].n128_f32[0] = v60;
            LOBYTE(v175) = v62;
            OUTLINED_FUNCTION_26_1();
            swift_retain();
            OUTLINED_FUNCTION_15_5();
            sub_25747B4E4((uint64_t)v183);
            uint64_t v64 = v179;
            sub_25747B4E4((uint64_t)v180);
            v183[0] = v58;
            v182[0] = v64;
            static Tensor.* infix(_:_:)();
            uint64_t v59 = v160;
            swift_release();
            swift_release();
            uint64_t v61 = *(void *)v180;
          }
          uint64_t v65 = v173;
          OUTLINED_FUNCTION_59_0();
          if (!v34 & v33)
          {
            *(void *)uint64_t v180 = v61;
          }
          else
          {
            uint64_t v67 = *(void *)(v172 + 12);
            unint64_t v68 = *(unsigned int *)(v172 + 20) | ((unint64_t)v66 << 32);
            if (v66)
            {
              uint64_t v69 = v178;
              OUTLINED_FUNCTION_81_0();
              if (HIDWORD(v68) == 1)
              {
                char v71 = *(unsigned char *)(v70 + 160);
                OUTLINED_FUNCTION_19_4();
                uint64_t v176 = MEMORY[0x263F8EE78];
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
                unint64_t v72 = (__n128 *)OUTLINED_FUNCTION_2_11();
                v72[1] = v169;
                v72[2].n128_u32[0] = v67;
                LOBYTE(v175) = v71;
                OUTLINED_FUNCTION_26_1();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_15_5();
                sub_25747B4E4((uint64_t)v183);
                uint64_t v73 = v179;
                sub_25747B4E4((uint64_t)v180);
                v183[0] = v61;
                Tensor.squared()();
                v182[0] = *(void *)v180;
                Tensor.sum()();
                swift_release();
                v182[0] = v183[0];
                sqrt(_:)();
                swift_release();
                uint64_t v74 = *(void *)v180;
                v183[0] = v61;
                *(void *)uint64_t v180 = v73;
                v182[0] = v74;
                uint64_t v176 = v73;
                max(_:_:)();
                uint64_t v176 = v179;
                static Tensor./ infix(_:_:)();
                swift_release();
                uint64_t v179 = v182[0];
                static Tensor.* infix(_:_:)();
              }
              else
              {
                char v75 = *(unsigned char *)(v70 + 160);
                OUTLINED_FUNCTION_19_4();
                uint64_t v176 = MEMORY[0x263F8EE78];
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
                __n128 v76 = (__n128 *)OUTLINED_FUNCTION_2_11();
                v76[1] = v169;
                v76[2].n128_u32[0] = v68;
                LOBYTE(v175) = v75;
                OUTLINED_FUNCTION_26_1();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_15_5();
                sub_25747B4E4((uint64_t)v183);
                uint64_t v77 = v179;
                uint64_t v161 = v179;
                sub_25747B4E4((uint64_t)v180);
                *(void *)uint64_t v180 = v61;
                v182[0] = v77;
                static Tensor.* infix(_:_:)();
                v182[0] = v183[0];
                *(void *)uint64_t v180 = v69;
                LOBYTE(v176) = *(unsigned char *)(*(void *)(v61 + 16) + 160);
                (*v140)(v145, v141, v146);
                Tensor.cast(to:roundingRule:)();
                OUTLINED_FUNCTION_14_0();
                v78();
                uint64_t v176 = v179;
                static Tensor./ infix(_:_:)();
              }
              OUTLINED_FUNCTION_83_0();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v65 = v173;
              uint64_t v59 = v160;
            }
            else
            {
              v183[0] = v61;
              Tensor.clamped(to:)((uint64_t)v180, *(float *)&v67, *((float *)&v67 + 1));
              uint64_t v59 = v160;
              swift_release();
              uint64_t v65 = v173;
            }
          }
          uint64_t v79 = *(void *)(*(void *)v59 + 32);
          if ((~v79 & 0xF000000000000007) == 0)
          {
            OUTLINED_FUNCTION_36_0();
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_50_0();
            goto LABEL_74;
          }
          if ((v79 & 0x8000000000000000) == 0)
          {
            OUTLINED_FUNCTION_13_5();
            goto LABEL_72;
          }
          uint64_t v158 = v139;
          uint64_t v80 = *(void *)v180;
          OUTLINED_FUNCTION_59_0();
          if (!v34 & v33)
          {
            uint64_t v84 = v82;
            swift_retain_n();
            sub_257486C70(v79);
            uint64_t v85 = v80;
          }
          else
          {
            unint64_t v83 = *(unsigned int *)(v172 + 28) | ((unint64_t)v81 << 32);
            LODWORD(v179) = *(_DWORD *)(v172 + 28);
            BYTE4(v179) = BYTE4(v83) & 1;
            v183[0] = v80;
            uint64_t v84 = v82;
            v182[0] = v82;
            swift_retain();
            sub_257486C70(v79);
            sub_25747B240((uint64_t)v183, v182);
            uint64_t v85 = *(void *)v180;
          }
          uint64_t v86 = *(void *)(v172 + 40);
          uint64_t v87 = *(void *)(v172 + 48);
          uint64_t v173 = v65;
          uint64_t v161 = v80;
          uint64_t v155 = v84;
          uint64_t v156 = v79;
          if (v86)
          {
            v183[0] = v87;
            OUTLINED_FUNCTION_40_0();
            OptimizerStateDictionary.subscript.getter(v47);
            if (!*(void *)v180)
            {
              memset(v180, 0, sizeof(v180));
              char v181 = 22;
              OUTLINED_FUNCTION_46_0();
              sub_25746BF88();
            }
            uint64_t v88 = *(void *)v180;
          }
          else
          {
            v183[0] = v87;
            LOBYTE(v80) = OUTLINED_FUNCTION_40_0();
            sub_2576A7810();
            OptimizerStateDictionary.subscript.getter(v47, (uint64_t (*)(uint64_t))sub_25749F654, v180);
            swift_bridgeObjectRelease();
            uint64_t v88 = *(void *)v180;
          }
          OUTLINED_FUNCTION_82_0();
          char v90 = *(unsigned char *)(v89 + 160);
          OUTLINED_FUNCTION_19_4();
          uint64_t v176 = MEMORY[0x263F8EE78];
          uint64_t v91 = MEMORY[0x263F8EE78];
          LOBYTE(v175) = v90;
          OUTLINED_FUNCTION_26_1();
          OUTLINED_FUNCTION_125();
          Tensor.init(shape:coercingScalars:scalarType:on:)();
          sub_25747B4E4((uint64_t)v183);
          uint64_t v92 = v179;
          uint64_t v154 = v179;
          sub_25747B4E4((uint64_t)v180);
          uint64_t v4 = v172;
          OUTLINED_FUNCTION_9_7();
          uint64_t v176 = v91;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v93 = (__n128 *)OUTLINED_FUNCTION_2_11();
          OUTLINED_FUNCTION_75_0(v93, v169);
          LOBYTE(v175) = v80;
          OUTLINED_FUNCTION_26_1();
          OUTLINED_FUNCTION_125();
          Tensor.init(shape:coercingScalars:scalarType:on:)();
          sub_25747B4E4((uint64_t)v183);
          uint64_t v94 = v179;
          sub_25747B4E4((uint64_t)v180);
          *(void *)uint64_t v180 = v94;
          uint64_t v153 = v88;
          v183[0] = v88;
          static Tensor.* infix(_:_:)();
          swift_release();
          float v95 = 1.0 - *(float *)(v4 + 4);
          OUTLINED_FUNCTION_9_7();
          uint64_t v175 = MEMORY[0x263F8EE78];
          double v96 = (__n128 *)OUTLINED_FUNCTION_2_11();
          v96[1] = v169;
          v96[2].n128_f32[0] = v95;
          char v174 = v80;
          OUTLINED_FUNCTION_26_1();
          OUTLINED_FUNCTION_69_0();
          sub_25747B4E4((uint64_t)v183);
          uint64_t v97 = v176;
          sub_25747B4E4((uint64_t)v180);
          *(void *)uint64_t v180 = v97;
          v183[0] = v85;
          uint64_t v176 = v92;
          pow(_:_:)();
          char v98 = v182[0];
          uint64_t v176 = v182[0];
          static Tensor.* infix(_:_:)();
          swift_release();
          swift_release();
          v182[0] = v183[0];
          static Tensor.+ infix(_:_:)();
          swift_release();
          swift_release();
          uint64_t v99 = *(void *)v180;
          sqrt(_:)();
          unsigned __int32 v100 = *(_DWORD *)(v4 + 8);
          OUTLINED_FUNCTION_9_7();
          uint64_t v175 = MEMORY[0x263F8EE78];
          uint64_t v101 = (__n128 *)OUTLINED_FUNCTION_2_11();
          v101[1] = v169;
          v101[2].n128_u32[0] = v100;
          char v174 = v98;
          OUTLINED_FUNCTION_26_1();
          OUTLINED_FUNCTION_69_0();
          sub_25747B4E4((uint64_t)v183);
          uint64_t v102 = v176;
          sub_25747B4E4((uint64_t)v180);
          v183[0] = v102;
          static Tensor.+ infix(_:_:)();
          swift_release();
          swift_release();
          uint64_t v103 = *(void *)v180;
          unsigned __int32 v104 = *(_DWORD *)v4;
          OUTLINED_FUNCTION_82_0();
          LOBYTE(v102) = *(unsigned char *)(v105 + 160);
          OUTLINED_FUNCTION_19_4();
          uint64_t v176 = MEMORY[0x263F8EE78];
          uint64_t v106 = (__n128 *)OUTLINED_FUNCTION_2_11();
          v106[1] = v169;
          v106[2].n128_u32[0] = v104;
          LOBYTE(v175) = v102;
          OUTLINED_FUNCTION_26_1();
          OUTLINED_FUNCTION_15_5();
          sub_25747B4E4((uint64_t)v183);
          uint64_t v107 = v179;
          sub_25747B4E4((uint64_t)v180);
          v183[0] = v155;
          v182[0] = v107;
          uint64_t v179 = v85;
          static Tensor.* infix(_:_:)();
          uint64_t v179 = *(void *)v180;
          uint64_t v176 = v103;
          static Tensor./ infix(_:_:)();
          swift_release();
          uint64_t v179 = v182[0];
          static Tensor.- infix(_:_:)();
          swift_release();
          uint64_t v108 = *(void *)v180;
          *(void *)uint64_t v180 = v99;
          OUTLINED_FUNCTION_40_0();
          swift_retain();
          swift_retain();
          OptimizerStateDictionary.subscript.setter(v180);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v109 = v177;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_27_1();
            uint64_t v109 = v118;
          }
          uint64_t v19 = v162;
          uint64_t v110 = *(void *)(v109 + 16);
          OUTLINED_FUNCTION_99_0();
          if (v33)
          {
            OUTLINED_FUNCTION_92_0();
            uint64_t v109 = v119;
          }
          *(void *)(v109 + 16) = v107;
          *(void *)(v109 + 8 * v110 + 32) = v108;
          uint64_t v177 = v109;
          uint64_t v49 = v160;
          if ((*(unsigned char *)(v160 + 8) & 1) == 0)
          {
            if (swift_isUniquelyReferenced_nonNull_native())
            {
              uint64_t v49 = *(void *)(*(void *)v49 + 32);
              if ((~v49 & 0xF000000000000007) == 0)
              {
                OUTLINED_FUNCTION_14_5();
LABEL_72:
                OUTLINED_FUNCTION_17_0();
LABEL_73:
                OUTLINED_FUNCTION_35_1();
LABEL_74:
                sub_2576A8B60();
                OUTLINED_FUNCTION_45_0();
              }
              if (v49 < 0)
              {
                if ((sub_257654B3C(*(void *)(*(void *)(v108 + 16) + 152), *(void *)(*(void *)((v49 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)) & 1) == 0)
                {
                  *(void *)uint64_t v180 = 0;
                  *(void *)&v180[8] = 0xE000000000000000;
                  swift_retain();
                  sub_257486C70(v49);
                  sub_2576A8730();
                  OUTLINED_FUNCTION_87_0();
                  OUTLINED_FUNCTION_129();
                  sub_2576A7B00();
                  uint64_t v136 = sub_2576A7810();
                  uint64_t v137 = MEMORY[0x263F8D6C8];
                  MEMORY[0x25A2B83F0](v136, MEMORY[0x263F8D6C8]);
                  sub_2576A7B00();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  OUTLINED_FUNCTION_10_4();
                  uint64_t v138 = sub_2576A7810();
                  MEMORY[0x25A2B83F0](v138, v137);
                  sub_2576A7B00();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_2576A7B00();
                  OUTLINED_FUNCTION_37_0();
                  goto LABEL_73;
                }
                *(void *)uint64_t v180 = v108 | 0x8000000000000000;
                swift_retain();
                sub_257486C70(v49);
                sub_25748F984((uint64_t *)v180);
                sub_257486C8C(v49);
              }
              else
              {
                *(void *)uint64_t v180 = v108 | 0x8000000000000000;
                swift_retain();
                sub_25748F984((uint64_t *)v180);
              }
            }
            else
            {
              *(void *)uint64_t v180 = v108;
              uint64_t v4 = *(unsigned int *)(*(void *)v49 + 16);
              type metadata accessor for LayerVariableReference();
              OUTLINED_FUNCTION_1_4();
              swift_retain();
              LOBYTE(v183[0]) = 0;
              *(void *)uint64_t v49 = sub_25748FB58((uint64_t *)v180, v4);
              swift_release();
            }
          }
          swift_release();
          sub_257486C8C(v156);
          swift_release();
          uint64_t v35 = WitnessTable;
        }
        uint64_t v111 = OUTLINED_FUNCTION_91_0();
        v112(v111);
        swift_release();
      }
      else
      {
        uint64_t v4 = (uint64_t)v139;
        MEMORY[0x270FA5388](v51);
        OUTLINED_FUNCTION_121();
        *(void *)(v53 - 48) = v165;
        *(void *)(v53 - 40) = v54;
        *(void *)(v53 - 32) = v55;
        *(void *)(v53 - 24) = sub_25749F63C;
        *(void *)(v53 - 16) = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
        uint64_t v19 = v162;
        uint64_t v49 = v164;
        sub_2575E6708();
        uint64_t v164 = v49;
        swift_release();
        uint64_t v35 = WitnessTable;
      }
      sub_2575CA350();
      uint64_t v14 = *(void *)(v173 + 16);
      OUTLINED_FUNCTION_99_0();
      if (v33)
      {
        OUTLINED_FUNCTION_130(v116, v117);
        uint64_t v116 = v113;
      }
      ++v46;
      *(void *)(v116 + 16) = v49;
      uint64_t v173 = v116;
      OUTLINED_FUNCTION_131(v113, v114, v115, v116);
      swift_release_n();
      if (v19 == v46) {
        goto LABEL_58;
      }
    }
    __break(1u);
LABEL_66:
    swift_once();
  }
LABEL_58:
  __n128 v120 = (void *)sub_2576A75C0();
  uint64_t v121 = v149;
  sub_2576A75F0();
  os_signpost_type_t v122 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    sub_2576A7620();
    swift_release();
    uint64_t v123 = OUTLINED_FUNCTION_20_4();
    int v125 = v124(v123);
    double v126 = v148;
    if (v125 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_31_1();
      v128();
    }
    *(_WORD *)OUTLINED_FUNCTION_57_0() = 0;
    os_signpost_id_t v129 = sub_2576A7580();
    OUTLINED_FUNCTION_51_0(&dword_257455000, v130, v122, v129, "Optimizing");
    OUTLINED_FUNCTION_56_0();

    swift_release();
    uint64_t v127 = v173;
    v126(v121, v151);
  }
  else
  {
    swift_release();

    uint64_t v127 = v173;
    v148(v121, v151);
  }
  uint64_t v131 = v177;
  swift_release();
  uint64_t v132 = sub_25748721C(v127);
  *(void *)uint64_t v180 = 1;
  *(void *)&v180[8] = v132;
  Array<A>.resolve(descriptor:)((long long *)v180, v131);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v133 = v170;
  uint64_t v134 = v172;
  j_nullsub_1(v170);
  return sub_2576866A4(v134, v133, v35);
}

float OUTLINED_FUNCTION_109_0()
{
  return *(float *)v0;
}

void OUTLINED_FUNCTION_9_6(float a1)
{
  float *v1 = a1;
}

uint64_t (*sub_2574977A4())(void)
{
  return nullsub_1;
}

uint64_t (*sub_2574977C8())(void)
{
  return nullsub_1;
}

void sub_2574977E8(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 20);
  char v3 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 12);
  *(unsigned char *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

float sub_257497804()
{
  return *(float *)(v0 + 36);
}

uint64_t sub_25749780C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = *a3;
  int v9 = *(_DWORD *)(v4 + 28);
  BYTE4(v17) = *(unsigned char *)(v4 + 32);
  LODWORD(v17) = v9;
  uint64_t v25 = v7;
  v26[0] = v8;
  sub_25747B3F4(v26, &v25, &v18);
  uint64_t v10 = v18;
  uint64_t v15 = a4;
  if (*(void *)(v4 + 40))
  {
    v26[0] = *(void *)(v4 + 48);
    type metadata accessor for OptimizerStateDictionary();
    OptimizerStateDictionary.subscript.getter(a1);
    if (!(void)v18)
    {
      long long v22 = 0u;
      memset(v23, 0, sizeof(v23));
      long long v20 = 0u;
      long long v21 = 0u;
      long long v18 = 0u;
      long long v19 = 0u;
      char v24 = 22;
      sub_25746BF88();
    }
  }
  else
  {
    v26[0] = *(void *)(v4 + 48);
    type metadata accessor for OptimizerStateDictionary();
    sub_2576A7810();
    OptimizerStateDictionary.subscript.getter(a1, (uint64_t (*)(uint64_t))sub_25749F654, &v18);
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = v10;
  LODWORD(v21) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v25, (uint64_t)&v18);
  v26[0] = v10;
  LODWORD(v21) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)v26, (uint64_t)&v18);
  *(void *)&long long v18 = v25;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v25 = v26[0];
  uint64_t v17 = v10;
  LODWORD(v21) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v17, (uint64_t)&v18);
  uint64_t v17 = v10;
  *(void *)&long long v18 = v16;
  pow(_:_:)();
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  uint64_t v11 = v18;
  sqrt(_:)();
  uint64_t v25 = v26[0];
  uint64_t v16 = v10;
  LODWORD(v21) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v16, (uint64_t)&v18);
  uint64_t v16 = v17;
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  uint64_t v12 = v18;
  uint64_t v25 = v10;
  LODWORD(v21) = 0;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v18 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v25, (uint64_t)&v18);
  uint64_t v25 = v26[0];
  v26[0] = v7;
  uint64_t v17 = v10;
  static Tensor.* infix(_:_:)();
  uint64_t v16 = v12;
  uint64_t v17 = v18;
  static Tensor./ infix(_:_:)();
  swift_release();
  uint64_t v17 = v25;
  static Tensor.- infix(_:_:)();
  swift_release();
  uint64_t v13 = v18;
  *(void *)&long long v18 = v11;
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v18);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  void *v15 = v13;
  return result;
}

uint64_t sub_257497C34()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_257497C84()
{
  return 8;
}

unint64_t sub_257497C8C(char a1)
{
  unint64_t result = 0x676E696E7261656CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 7301234;
      break;
    case 2:
      unint64_t result = 0x6E6F6C69737065;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x746E656964617267;
      break;
    case 6:
      unint64_t result = 0x6F69746172657469;
      break;
    case 7:
      unint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257497DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_257497E20(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_257497E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_257497EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_257497F6C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257497C34();
  *a1 = result;
  return result;
}

uint64_t sub_257497FA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25749E980(a1, (uint64_t (*)(void, void, void))sub_257497C8C, a2);
}

unint64_t sub_257497FBC()
{
  return sub_257497DA8(*v0);
}

uint64_t sub_257497FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_257497C80(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_257497FF8(uint64_t a1, uint64_t a2)
{
  return sub_25749E9F4(a1, a2, (uint64_t (*)(void, void, void))sub_2574A0674);
}

uint64_t sub_257498010@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257497C84();
  *a1 = result;
  return result;
}

uint64_t sub_257498040(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_257498094(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t RMSProp.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for RMSProp.CodingKeys();
  swift_getWitnessTable();
  sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v6);
  uint64_t v21 = (uint64_t)a1;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2576A91F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_3_9();
  int v9 = v8;
  LOBYTE(v22) = 6;
  uint64_t v10 = sub_2576A8D40();
  OUTLINED_FUNCTION_39_0(1);
  int v12 = v11;
  OUTLINED_FUNCTION_39_0(2);
  int v14 = v13;
  OUTLINED_FUNCTION_39_0(5);
  int v16 = v15;
  OUTLINED_FUNCTION_105_0();
  sub_25749F6C0();
  OUTLINED_FUNCTION_70_0();
  sub_25749F70C();
  OUTLINED_FUNCTION_70_0();
  type metadata accessor for OptimizerStateDictionary();
  swift_getWitnessTable();
  sub_2576A8D50();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v7, v20);
  *(_DWORD *)a2 = v9;
  *(_DWORD *)(a2 + 4) = v12;
  *(_DWORD *)(a2 + 8) = v14;
  *(void *)(a2 + 12) = v22;
  *(unsigned char *)(a2 + 24) = v24;
  *(_DWORD *)(a2 + 20) = v23;
  *(unsigned char *)(a2 + 32) = BYTE4(v22);
  *(_DWORD *)(a2 + 28) = v22;
  *(_DWORD *)(a2 + 36) = v16;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v22;
  sub_2576A7810();
  __swift_destroy_boxed_opaque_existential_1(v21);
  return swift_bridgeObjectRelease();
}

uint64_t RMSProp.encode(to:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_66_0(a1, a2);
  type metadata accessor for RMSProp.CodingKeys();
  swift_getWitnessTable();
  sub_2576A8E70();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v3);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2576A9230();
  OUTLINED_FUNCTION_114();
  sub_2576A8E20();
  if (!v6)
  {
    sub_2576A8E30();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_105_0();
    sub_25749F758();
    OUTLINED_FUNCTION_77_0();
    sub_25749F7A4();
    OUTLINED_FUNCTION_77_0();
    type metadata accessor for OptimizerStateDictionary();
    swift_getWitnessTable();
    sub_2576A8E40();
  }
  OUTLINED_FUNCTION_31_1();
  return v4();
}

uint64_t sub_2574986EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RMSProp.init(from:)(a1, a2);
}

uint64_t sub_25749870C(uint64_t a1, uint64_t a2)
{
  return RMSProp.encode(to:)(a1, a2);
}

uint64_t (*Adam.learningRate.modify())(void)
{
  return nullsub_1;
}

float Adam.epsilon.getter()
{
  return *(float *)(v0 + 12);
}

void Adam.gradientClippingMode.getter(uint64_t a1@<X8>)
{
}

void Adam.regularizationKind.getter(uint64_t a1@<X8>)
{
}

float Adam.gradientScale.getter()
{
  return *(float *)(v0 + 40);
}

uint64_t Adam.step.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t result = v1 + 1;
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_257498794@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Adam.step.getter();
  *a1 = result;
  return result;
}

uint64_t sub_257498818(uint64_t *a1)
{
  return Adam.step.setter(*a1);
}

uint64_t Adam.step.setter(uint64_t result)
{
  if (__OFSUB__(result, 1)) {
    __break(1u);
  }
  else {
    *(void *)(v1 + 48) = (result - 1) & ~((result - 1) >> 63);
  }
  return result;
}

void *Adam.step.modify(void *result)
{
  result[1] = v1;
  uint64_t v2 = *(void *)(v1 + 48);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    void *result = v4;
    return sub_257498890;
  }
  return result;
}

void *sub_257498890(void *result, char a2)
{
  uint64_t v2 = *result - 1;
  BOOL v3 = __OFSUB__(*result, 1);
  if (a2)
  {
    if (!v3)
    {
LABEL_8:
      *(void *)(result[1] + 48) = v2 & ~(v2 >> 63);
      return result;
    }
    __break(1u);
  }
  if (!v3) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t Adam.firstMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 56), a1);
}

uint64_t Adam.firstMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  return result;
}

uint64_t (*Adam.firstMoments.modify())(void)
{
  return nullsub_1;
}

uint64_t Adam.secondMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 64), a1);
}

uint64_t Adam.secondMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t (*Adam.secondMoments.modify())(void)
{
  return nullsub_1;
}

uint64_t Adam.maximumSecondMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 72), a1);
}

uint64_t Adam.maximumSecondMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = v2;
  return result;
}

uint64_t (*Adam.maximumSecondMoments.modify())(void)
{
  return nullsub_1;
}

BOOL Adam.usesAMSGrad.getter()
{
  return *(void *)(v0 + 72) != 0;
}

void Adam.init(for:learningRate:beta1:beta2:usesAMSGrad:epsilon:gradientClippingMode:regularizationKind:gradientScale:)()
{
  OUTLINED_FUNCTION_122();
  int v1 = v0;
  int v3 = v2;
  float v5 = v4;
  float v7 = v6;
  int v9 = v8;
  uint64_t v11 = v10;
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_61_0();
  if (v18 != v19) {
    goto LABEL_18;
  }
  BOOL v20 = v7 < 0.0 || v7 > 1.0;
  if (v20 || (v5 >= 0.0 ? (BOOL v21 = v5 > 1.0) : (BOOL v21 = 1), v21))
  {
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_128();
    goto LABEL_19;
  }
  char v30 = v15;
  uint64_t v29 = *v16;
  unint64_t v22 = *(unsigned int *)v17 | ((unint64_t)*((unsigned __int8 *)v17 + 4) << 32);
  if (BYTE4(v22) != 255 && *v17 <= 0.0)
  {
LABEL_18:
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_19:
    sub_2576A8B60();
    OUTLINED_FUNCTION_45_0();
  }
  unint64_t v23 = *((unsigned int *)v16 + 2) | ((unint64_t)*((unsigned __int8 *)v16 + 12) << 32);
  char v24 = *(void (**)(uint64_t))(v13 + 16);
  uint64_t v25 = OUTLINED_FUNCTION_4_9();
  v24(v25);
  OUTLINED_FUNCTION_7_5();
  uint64_t v26 = OUTLINED_FUNCTION_4_9();
  v24(v26);
  OUTLINED_FUNCTION_7_5();
  if (v30)
  {
    uint64_t v27 = OUTLINED_FUNCTION_4_9();
    v24(v27);
    OUTLINED_FUNCTION_7_5();
    uint64_t v28 = v31;
  }
  else
  {
    uint64_t v28 = 0;
  }
  *(_DWORD *)uint64_t v11 = v9;
  *(float *)(v11 + 4) = v7;
  *(float *)(v11 + 8) = v5;
  *(_DWORD *)(v11 + 12) = v3;
  *(void *)(v11 + 16) = v29;
  *(_DWORD *)(v11 + 24) = v23;
  *(unsigned char *)(v11 + 28) = BYTE4(v23);
  *(_DWORD *)(v11 + 32) = v22;
  *(unsigned char *)(v11 + 36) = BYTE4(v22);
  *(_DWORD *)(v11 + 40) = v1;
  *(void *)(v11 + 48) = 0;
  *(void *)(v11 + 56) = v31;
  *(void *)(v11 + 64) = v31;
  *(void *)(v11 + 72) = v28;
  OUTLINED_FUNCTION_117();
}

uint64_t (*Adam.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3))(unsigned char *, void)
{
  uint64_t v191 = a1;
  uint64_t v215 = *MEMORY[0x263EF8340];
  uint64_t v170 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v199 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_48_0(v9, v164);
  OUTLINED_FUNCTION_0_10();
  uint64_t v167 = v11;
  uint64_t v168 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v175 = OUTLINED_FUNCTION_47_0(v12, v164);
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_49_0(v16, v164);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  BOOL v20 = (char *)&v164 - v19;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_88_0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v197 = v3;
  nullsub_1(a3);
  BOOL v21 = *(uint8_t **)(a3 + 16);
  sub_2576A89D0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v192 = a2;
  v194 = (char *)TupleTypeMetadata2;
  uint64_t v193 = MEMORY[0x25A2B84C0](a2);
  sub_2574729F0(0, v193 & ~(v193 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v198 = v23;
  if (qword_26A0008F8 != -1) {
    goto LABEL_94;
  }
  while (1)
  {
    uint64_t v24 = sub_2576A75D0();
    uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_26A001FD0);
    sub_2576A7590();
    uint64_t v171 = v25;
    uint64_t v26 = sub_2576A75C0();
    os_signpost_type_t v27 = sub_2576A83C0();
    char v28 = sub_2576A8480();
    uint64_t v195 = a3;
    v190 = v21;
    if (v28)
    {
      uint64_t v29 = (_WORD *)OUTLINED_FUNCTION_57_0();
      os_signpost_id_t v30 = OUTLINED_FUNCTION_89_0(v29);
      _os_signpost_emit_with_name_impl(&dword_257455000, v26, v27, v30, "Optimizing", "", v21, 2u);
      OUTLINED_FUNCTION_56_0();
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v20, v4, v175);
    sub_2576A7610();
    swift_allocObject();
    uint64_t v172 = sub_2576A7600();
    uint64_t v31 = *(void *)(v14 + 8);
    v14 += 8;
    OUTLINED_FUNCTION_115(v31);
    v32();
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_33_1();
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)&unk_27065D8C0, (uint64_t)&v211, v210);
    sub_25747B4E4((uint64_t)&v205);
    uint64_t v203 = v210[0];
    OUTLINED_FUNCTION_76_0();
    if (!v38 & v37) {
      BOOL v38 = 0;
    }
    else {
      BOOL v38 = v35 == 0x200000000;
    }
    if (v38)
    {
      BOOL v20 = v194;
      if ((*(void *)(v36 + 16) & 0x100000000) != 0)
      {
        BOOL v21 = (uint8_t *)&v164;
        *(void *)&long long v205 = v192;
        MEMORY[0x270FA5388](v34);
        uint64_t v41 = WitnessTable;
        *(&v164 - 2) = v195;
        *(&v164 - 1) = v41;
        uint64_t v42 = sub_2576A7F50();
        uint64_t v43 = swift_getWitnessTable();
        uint64_t v44 = v42;
        BOOL v20 = v194;
        uint64_t v4 = 0;
        sub_257495BE0((void (*)(char *, uint64_t))sub_2574A0678, (uint64_t)(&v164 - 4), v44, (uint64_t)&type metadata for Tensor, MEMORY[0x263F8E628], v43, MEMORY[0x263F8E658], v45);
        LOBYTE(v205) = 13;
        Tensor.init(stacking:alongAxis:scalarType:)();
        v210[0] = v211;
        Tensor.sum()();
        swift_release();
        uint64_t v46 = v205;
        OUTLINED_FUNCTION_5_7();
        char v47 = *(unsigned char *)(*(void *)(v46 + 16) + 160);
        OUTLINED_FUNCTION_33_1();
        uint64_t v209 = v33;
        LOBYTE(v202) = v47;
        OUTLINED_FUNCTION_100_0();
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        sub_25747B4E4((uint64_t)&v211);
        uint64_t v14 = v210[7];
        sub_25747B4E4((uint64_t)&v205);
        *(void *)&long long v205 = v46;
        v210[0] = v14;
        static Tensor.* infix(_:_:)();
        v210[0] = v211;
        sqrt(_:)();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v40 = v205;
        swift_release();
      }
      else
      {
        OUTLINED_FUNCTION_5_7();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
        uint64_t v39 = (__n128 *)OUTLINED_FUNCTION_2_11();
        OUTLINED_FUNCTION_110_0(v39, (__n128)xmmword_2576ABB10);
        OUTLINED_FUNCTION_33_1();
        sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)v39, (uint64_t)&v211, v210);
        sub_25747B4E4((uint64_t)&v205);
        uint64_t v40 = v210[0];
        swift_release();
        uint64_t v4 = 0;
      }
      uint64_t v203 = v40;
    }
    else
    {
      uint64_t v4 = 0;
      BOOL v20 = v194;
    }
    sub_2574720D8();
    uint64_t v202 = v48;
    uint64_t v49 = v193;
    if (v193 < 0) {
      __break(1u);
    }
    if (!v193) {
      break;
    }
    uint64_t v196 = 0;
    a3 = 0;
    uint64_t v166 = (void (**)(uint64_t, void, uint64_t))(v199 + 104);
    unsigned int v165 = *MEMORY[0x263F8E1F8];
    uint64_t v164 = v199 + 8;
    uint64_t v187 = MEMORY[0x263F8EE60] + 8;
    long long v176 = xmmword_2576ABB30;
    uint64_t v50 = WitnessTable;
    __n128 v188 = (__n128)xmmword_2576ABB10;
    while (a3 != v49)
    {
      sub_2576A7F90();
      long long v51 = v205;
      swift_retain();
      uint64_t v52 = swift_retain();
      MEMORY[0x270FA5388](v52);
      uint64_t v4 = (uint64_t)(&v164 - 10);
      *(&v164 - 8) = v195;
      *(&v164 - 7) = v50;
      uint64_t v199 = *((void *)&v51 + 1);
      uint64_t v53 = v197;
      *(&v164 - 6) = *((void *)&v51 + 1);
      *(&v164 - 5) = v53;
      *(&v164 - 4) = (uint64_t)&v203;
      *(&v164 - 3) = v51;
      *(&v164 - 2) = (uint64_t)&v202;
      swift_retain();
      uint64_t v54 = sub_2576A8600();
      if (v55)
      {
        uint64_t v59 = swift_modifyAtWritableKeyPath();
        if ((v60[8] & 1) == 0)
        {
          BOOL v21 = v60;
          uint64_t v184 = v59;
          uint64_t v185 = &v164;
          uint64_t v61 = v197;
          uint64_t v62 = v199;
          if (*(float *)(v197 + 40) == 1.0)
          {
            swift_retain();
          }
          else
          {
            int v208 = 0;
            long long v206 = 0u;
            long long v207 = 0u;
            long long v205 = 0u;
            OUTLINED_FUNCTION_33_1();
            uint64_t v201 = MEMORY[0x263F8EE78];
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
            char v63 = (__n128 *)OUTLINED_FUNCTION_2_11();
            OUTLINED_FUNCTION_84_0(v63);
            uint64_t v61 = v197;
            OUTLINED_FUNCTION_100_0();
            swift_retain();
            OUTLINED_FUNCTION_11_5();
            sub_25747B4E4((uint64_t)&v211);
            uint64_t v64 = v204;
            sub_25747B4E4((uint64_t)&v205);
            *(void *)&long long v211 = v62;
            v210[0] = v64;
            static Tensor.* infix(_:_:)();
            swift_release();
            swift_release();
            uint64_t v62 = v205;
          }
          OUTLINED_FUNCTION_59_0();
          if (!v38 & v37)
          {
            *(void *)&long long v205 = v62;
          }
          else
          {
            uint64_t v66 = v61;
            uint64_t v67 = *(void *)(v61 + 16);
            unint64_t v68 = *(unsigned int *)(v66 + 24) | ((unint64_t)v65 << 32);
            if (v65)
            {
              uint64_t v69 = v203;
              int v208 = 0;
              long long v206 = 0u;
              long long v207 = 0u;
              long long v205 = 0u;
              if (HIDWORD(v68) == 1)
              {
                char v70 = *(unsigned char *)(*(void *)(v62 + 16) + 160);
                OUTLINED_FUNCTION_33_1();
                uint64_t v201 = MEMORY[0x263F8EE78];
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
                char v71 = (__n128 *)OUTLINED_FUNCTION_2_11();
                OUTLINED_FUNCTION_110_0(v71, v188);
                char v200 = v70;
                OUTLINED_FUNCTION_100_0();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_11_5();
                sub_25747B4E4((uint64_t)&v211);
                uint64_t v72 = v204;
                sub_25747B4E4((uint64_t)&v205);
                *(void *)&long long v211 = v62;
                Tensor.squared()();
                v210[0] = v205;
                Tensor.sum()();
                swift_release();
                v210[0] = v211;
                sqrt(_:)();
                swift_release();
                uint64_t v73 = v205;
                *(void *)&long long v211 = v62;
                *(void *)&long long v205 = v72;
                v210[0] = v73;
                uint64_t v201 = v72;
                max(_:_:)();
                uint64_t v201 = v204;
                static Tensor./ infix(_:_:)();
                swift_release();
                uint64_t v204 = v210[0];
                static Tensor.* infix(_:_:)();
              }
              else
              {
                char v74 = *(unsigned char *)(*(void *)(v62 + 16) + 160);
                OUTLINED_FUNCTION_33_1();
                uint64_t v201 = MEMORY[0x263F8EE78];
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
                char v75 = (__n128 *)OUTLINED_FUNCTION_2_11();
                v75[1] = v188;
                v75[2].n128_u32[0] = v68;
                char v200 = v74;
                OUTLINED_FUNCTION_100_0();
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_11_5();
                sub_25747B4E4((uint64_t)&v211);
                uint64_t v76 = v204;
                id v189 = (char *)v204;
                sub_25747B4E4((uint64_t)&v205);
                *(void *)&long long v205 = v62;
                v210[0] = v76;
                static Tensor.* infix(_:_:)();
                v210[0] = v211;
                *(void *)&long long v205 = v69;
                LOBYTE(v201) = *(unsigned char *)(*(void *)(v62 + 16) + 160);
                (*v166)(v169, v165, v170);
                Tensor.cast(to:roundingRule:)();
                OUTLINED_FUNCTION_14_0();
                v77();
                uint64_t v201 = v204;
                static Tensor./ infix(_:_:)();
              }
              swift_release_n();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v61 = v197;
            }
            else
            {
              *(void *)&long long v211 = v62;
              Tensor.clamped(to:)((uint64_t)&v205, *(float *)&v67, *((float *)&v67 + 1));
              swift_release();
              uint64_t v61 = v66;
            }
          }
          uint64_t v14 = *(void *)(*(void *)v21 + 32);
          if ((~v14 & 0xF000000000000007) == 0)
          {
            OUTLINED_FUNCTION_36_0();
            OUTLINED_FUNCTION_17_0();
            OUTLINED_FUNCTION_50_0();
            goto LABEL_102;
          }
          if ((v14 & 0x8000000000000000) == 0)
          {
            OUTLINED_FUNCTION_13_5();
            goto LABEL_100;
          }
          BOOL v20 = (char *)v205;
          swift_retain();
          sub_257486C70(v14);
          if (qword_26A0008A0 != -1) {
            swift_once();
          }
          uint64_t v78 = v14 & 0x7FFFFFFFFFFFFFFFLL;
          swift_beginAccess();
          uint64_t v182 = v21;
          uint64_t v183 = v14;
          id v189 = v20;
          if (byte_26A000DE8 == 1)
          {
            OUTLINED_FUNCTION_59_0();
            if (!v38 & v37)
            {
              swift_retain();
              uint64_t v186 = (uint64_t)v20;
            }
            else
            {
              OUTLINED_FUNCTION_60_0(v79);
              OUTLINED_FUNCTION_67_0();
              uint64_t v186 = v205;
            }
            uint64_t v81 = v61;
            char v82 = *(unsigned char *)(*(void *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 160);
            OUTLINED_FUNCTION_5_7();
            BOOL v21 = (uint8_t *)MEMORY[0x263F8EE78];
            uint64_t v204 = MEMORY[0x263F8EE78];
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
            unint64_t v83 = (__n128 *)OUTLINED_FUNCTION_2_11();
            OUTLINED_FUNCTION_75_0(v83, v188);
            LOBYTE(v201) = v82;
            OUTLINED_FUNCTION_33_1();
            OUTLINED_FUNCTION_71_0();
            Tensor.init(shape:coercingScalars:scalarType:on:)();
            sub_25747B4E4((uint64_t)&v205);
            uint64_t v84 = *(void *)(v81 + 48);
            uint64_t v4 = v84 + 1;
            if (__OFADD__(v84, 1)) {
              goto LABEL_92;
            }
            uint64_t v85 = v210[0];
            char v86 = *(unsigned char *)(*(void *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 160);
            OUTLINED_FUNCTION_5_7();
            uint64_t v204 = (uint64_t)v21;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
            uint64_t v87 = (__n128 *)OUTLINED_FUNCTION_1_4();
            OUTLINED_FUNCTION_119(v87);
            LOBYTE(v201) = v86;
            OUTLINED_FUNCTION_33_1();
            OUTLINED_FUNCTION_71_0();
            Tensor.init(shape:coercingScalars:scalarType:on:)();
            sub_25747B4E4((uint64_t)&v205);
            uint64_t v179 = v210[0];
            uint64_t v180 = v85;
            if (*(void *)(v81 + 48))
            {
              *(void *)&long long v211 = *(void *)(v81 + 56);
              OUTLINED_FUNCTION_80_0();
              OptimizerStateDictionary.subscript.getter(v51);
              if (!(void)v205) {
                goto LABEL_98;
              }
              uint64_t v178 = v205;
            }
            else
            {
              *(void *)&long long v211 = *(void *)(v81 + 56);
              OUTLINED_FUNCTION_55_0();
              sub_2576A7810();
              OUTLINED_FUNCTION_30_1((uint64_t (*)(uint64_t))sub_25749F654, &v205);
              swift_bridgeObjectRelease();
              uint64_t v178 = v205;
            }
            uint64_t v102 = v197;
            *(void *)&long long v211 = *(void *)(v197 + 64);
            type metadata accessor for OptimizerStateDictionary();
            sub_2576A7810();
            OUTLINED_FUNCTION_30_1((uint64_t (*)(uint64_t))sub_25749F654, &v205);
            uint64_t v103 = swift_bridgeObjectRelease();
            uint64_t v177 = v205;
            if (*(void *)(v102 + 72))
            {
              *(void *)&long long v211 = *(void *)(v102 + 72);
              sub_2576A7810();
              OUTLINED_FUNCTION_30_1((uint64_t (*)(uint64_t))sub_25749F654, &v205);
              uint64_t v103 = swift_bridgeObjectRelease();
            }
            OUTLINED_FUNCTION_97_0(v103, v104, v105, v106, v107, v108, v109, v110, v164);
            MEMORY[0x270FA5388](v120);
            *(&v164 - 10) = (uint64_t)v21;
            *(&v164 - 9) = v78;
            uint64_t v121 = v177;
            uint64_t v122 = v178;
            *(&v164 - 8) = v186;
            *(&v164 - 7) = v122;
            *(&v164 - 6) = v121;
            *(&v164 - 5) = v123;
            uint64_t v124 = v179;
            *(&v164 - 4) = v180;
            *(&v164 - 3) = v124;
            uint64_t v125 = v196;
            *(&v164 - 2) = v197;
            *(&v164 - 1) = v51;
            sub_25749AB00((void (*)(uint64_t))sub_25749F808);
            uint64_t v196 = v125;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
          else
          {
            uint64_t v186 = v14 & 0x7FFFFFFFFFFFFFFFLL;
            OUTLINED_FUNCTION_59_0();
            uint64_t v88 = v61;
            if (!v38 & v37)
            {
              swift_retain();
              uint64_t v89 = v186;
            }
            else
            {
              OUTLINED_FUNCTION_60_0(v80);
              uint64_t v89 = v186;
              OUTLINED_FUNCTION_67_0();
              BOOL v20 = (char *)v205;
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
            uint64_t v90 = swift_allocObject();
            *(_OWORD *)(v90 + 16) = v176;
            *(void *)(v90 + 32) = v89;
            uint64_t v91 = v90 + 32;
            *(void *)(v90 + 40) = v20;
            sub_257486C70(v14);
            swift_retain();
            sub_2576A7810();
            char v92 = 0;
            uint64_t v93 = 0;
            while (1)
            {
              char v94 = v92;
              sub_25747B47C(*(void *)(*(void *)(v91 + 8 * v93) + 16) + 168, (uint64_t)&v205);
              if (*((void *)&v206 + 1)) {
                break;
              }
              sub_25747B4E4((uint64_t)&v205);
              char v92 = 1;
              uint64_t v93 = 1;
              if (v94)
              {
                swift_bridgeObjectRelease();
                int v214 = 0;
                long long v212 = 0u;
                long long v213 = 0u;
                long long v211 = 0u;
                goto LABEL_52;
              }
            }
            swift_bridgeObjectRelease();
            long long v211 = v205;
            long long v212 = v206;
            long long v213 = v207;
            int v214 = v208;
LABEL_52:
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_5_7();
            uint64_t v14 = MEMORY[0x263F8EE78];
            uint64_t v201 = MEMORY[0x263F8EE78];
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
            float v95 = (__n128 *)OUTLINED_FUNCTION_2_11();
            OUTLINED_FUNCTION_84_0(v95);
            sub_25747B47C((uint64_t)&v205, (uint64_t)v210);
            OUTLINED_FUNCTION_11_5();
            sub_25747B4E4((uint64_t)&v205);
            uint64_t v96 = *(void *)(v88 + 48);
            uint64_t v4 = v96 + 1;
            if (__OFADD__(v96, 1)) {
              goto LABEL_93;
            }
            uint64_t v97 = v204;
            OUTLINED_FUNCTION_5_7();
            uint64_t v201 = v14;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
            char v98 = (__n128 *)OUTLINED_FUNCTION_1_4();
            OUTLINED_FUNCTION_119(v98);
            char v200 = 2;
            sub_25747B47C((uint64_t)&v205, (uint64_t)v210);
            Tensor.init(shape:coercingScalars:scalarType:on:)();
            sub_25747B4E4((uint64_t)&v205);
            uint64_t v178 = v204;
            uint64_t v179 = v97;
            uint64_t v99 = *(void *)(v88 + 48);
            uint64_t v100 = *(void *)(v88 + 56);
            uint64_t v180 = (uint64_t)v20;
            if (v99)
            {
              v210[0] = v100;
              OUTLINED_FUNCTION_80_0();
              OptimizerStateDictionary.subscript.getter(v51);
              if (!(void)v205)
              {
LABEL_98:
                OUTLINED_FUNCTION_34_1();
                OUTLINED_FUNCTION_46_0();
                sub_25746BF88();
              }
              uint64_t v177 = v205;
              uint64_t v101 = v186;
            }
            else
            {
              v210[0] = v100;
              OUTLINED_FUNCTION_55_0();
              sub_2576A7810();
              uint64_t v101 = v186;
              OptimizerStateDictionary.subscript.getter(v51, (uint64_t (*)(uint64_t))sub_25749F654, &v205);
              swift_bridgeObjectRelease();
              uint64_t v177 = v205;
            }
            uint64_t v111 = v197;
            v210[0] = *(void *)(v197 + 64);
            type metadata accessor for OptimizerStateDictionary();
            sub_2576A7810();
            OUTLINED_FUNCTION_30_1((uint64_t (*)(uint64_t))sub_25749F654, &v205);
            uint64_t v112 = swift_bridgeObjectRelease();
            uint64_t v186 = v205;
            if (*(void *)(v111 + 72))
            {
              v210[0] = *(void *)(v111 + 72);
              sub_2576A7810();
              OUTLINED_FUNCTION_30_1((uint64_t (*)(uint64_t))sub_25749F654, &v205);
              uint64_t v112 = swift_bridgeObjectRelease();
            }
            OUTLINED_FUNCTION_97_0(v112, v113, v114, v115, v116, v117, v118, v119, v164);
            MEMORY[0x270FA5388](v126);
            *(&v164 - 12) = (uint64_t)v21;
            *(&v164 - 11) = v101;
            uint64_t v127 = v179;
            uint64_t v129 = v177;
            uint64_t v128 = v178;
            *(&v164 - 10) = v180;
            *(&v164 - 9) = v129;
            *(&v164 - 8) = v186;
            *(&v164 - 7) = v130;
            *(&v164 - 6) = v127;
            *(&v164 - 5) = v128;
            uint64_t v131 = v196;
            *(&v164 - 4) = v197;
            *(&v164 - 3) = (uint64_t)&v211;
            *(&v164 - 2) = v51;
            sub_25749AB00((void (*)(uint64_t))sub_25749F7F0);
            uint64_t v196 = v131;
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            sub_25747B4E4((uint64_t)&v211);
            swift_release();
          }
          uint64_t v132 = v205;
          uint64_t v133 = v202;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          BOOL v21 = v182;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_27_1();
            uint64_t v133 = v144;
          }
          unint64_t v135 = *(void *)(v133 + 16);
          uint64_t v4 = v135 + 1;
          if (v135 >= *(void *)(v133 + 24) >> 1)
          {
            OUTLINED_FUNCTION_92_0();
            uint64_t v133 = v145;
          }
          *(void *)(v133 + 16) = v4;
          *(void *)(v133 + 8 * v135 + 32) = v132;
          uint64_t v202 = v133;
          if (v21[8]) {
            goto LABEL_69;
          }
          int v136 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v50 = WitnessTable;
          if (v136)
          {
            uint64_t v4 = *(void *)(*(void *)v21 + 32);
            if ((~v4 & 0xF000000000000007) == 0)
            {
              OUTLINED_FUNCTION_14_5();
LABEL_100:
              OUTLINED_FUNCTION_17_0();
LABEL_101:
              OUTLINED_FUNCTION_35_1();
LABEL_102:
              sub_2576A8B60();
              OUTLINED_FUNCTION_45_0();
            }
            if ((v4 & 0x8000000000000000) == 0)
            {
              *(void *)&long long v205 = v132 | 0x8000000000000000;
              swift_retain();
              sub_25748F984((uint64_t *)&v205);
              goto LABEL_75;
            }
            if ((sub_257654B3C(*(void *)(*(void *)(v132 + 16) + 152), *(void *)(*(void *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)) & 1) == 0)
            {
              *(void *)&long long v205 = 0;
              *((void *)&v205 + 1) = 0xE000000000000000;
              swift_retain();
              sub_257486C70(v4);
              sub_2576A8730();
              OUTLINED_FUNCTION_87_0();
              OUTLINED_FUNCTION_129();
              sub_2576A7B00();
              uint64_t v161 = sub_2576A7810();
              uint64_t v162 = MEMORY[0x263F8D6C8];
              MEMORY[0x25A2B83F0](v161, MEMORY[0x263F8D6C8]);
              sub_2576A7B00();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              OUTLINED_FUNCTION_10_4();
              uint64_t v163 = sub_2576A7810();
              MEMORY[0x25A2B83F0](v163, v162);
              sub_2576A7B00();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_2576A7B00();
              OUTLINED_FUNCTION_37_0();
              goto LABEL_101;
            }
            *(void *)&long long v205 = v132 | 0x8000000000000000;
            swift_retain();
            sub_257486C70(v4);
            sub_25748F984((uint64_t *)&v205);
            sub_257486C8C(v4);
LABEL_69:
            swift_release();
            sub_257486C8C(v183);
            swift_release();
            uint64_t v50 = WitnessTable;
          }
          else
          {
            *(void *)&long long v205 = v132;
            uint64_t v4 = *(unsigned int *)(*(void *)v21 + 16);
            type metadata accessor for LayerVariableReference();
            OUTLINED_FUNCTION_1_4();
            swift_retain();
            LOBYTE(v211) = 0;
            *(void *)BOOL v21 = sub_25748FB58((uint64_t *)&v205, v4);
            swift_release();
LABEL_75:
            swift_release();
            sub_257486C8C(v183);
            swift_release();
          }
        }
        uint64_t v137 = OUTLINED_FUNCTION_91_0();
        v138(v137);
        swift_release();
        goto LABEL_77;
      }
      BOOL v21 = (uint8_t *)&v164;
      MEMORY[0x270FA5388](v54);
      OUTLINED_FUNCTION_121();
      *(void *)(v56 - 48) = v190;
      *(void *)(v56 - 40) = v57;
      *(void *)(v56 - 32) = v58;
      *(void *)(v56 - 24) = sub_25749F63C;
      *(void *)(v56 - 16) = v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
      uint64_t v4 = v196;
      sub_2575E6708();
      uint64_t v196 = v4;
      swift_release();
LABEL_77:
      sub_2575CA350();
      uint64_t v14 = *(void *)(v198 + 16);
      OUTLINED_FUNCTION_99_0();
      if (v37)
      {
        OUTLINED_FUNCTION_130(v142, v143);
        uint64_t v142 = v139;
      }
      ++a3;
      *(void *)(v142 + 16) = v4;
      uint64_t v198 = v142;
      OUTLINED_FUNCTION_131(v139, v140, v141, v142);
      swift_release_n();
      uint64_t v49 = v193;
      BOOL v20 = v194;
      if (a3 == v193) {
        goto LABEL_84;
      }
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    swift_once();
  }
  uint64_t v50 = WitnessTable;
LABEL_84:
  uint64_t v146 = (void *)sub_2576A75C0();
  uint64_t v147 = v174;
  sub_2576A75F0();
  os_signpost_type_t v148 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    sub_2576A7620();
    swift_release();
    uint64_t v149 = OUTLINED_FUNCTION_20_4();
    int v151 = v150(v149);
    uint64_t v152 = v173;
    if (v151 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_31_1();
      v153();
    }
    *(_WORD *)OUTLINED_FUNCTION_57_0() = 0;
    os_signpost_id_t v154 = sub_2576A7580();
    OUTLINED_FUNCTION_51_0(&dword_257455000, v155, v148, v154, "Optimizing");
    OUTLINED_FUNCTION_56_0();

    swift_release();
    uint64_t v50 = WitnessTable;
    v152(v147, v175);
  }
  else
  {
    swift_release();

    v173(v147, v175);
  }
  uint64_t v156 = v202;
  swift_release();
  uint64_t v157 = sub_25748721C(v198);
  *(void *)&long long v205 = 1;
  *((void *)&v205 + 1) = v157;
  Array<A>.resolve(descriptor:)(&v205, v156);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v158 = v195;
  uint64_t v159 = v197;
  j_nullsub_1(v195);
  return sub_2576866A4(v159, v158, v50);
}

uint64_t sub_25749A298@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(a4 + 16);
  if (a5)
  {
    uint64_t v44 = *(void *)(a5 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v16 = *(void *)(a6 + 16);
  uint64_t v17 = *(void *)(a7 + 16);
  uint64_t v18 = *(void *)(a9 + 72);
  float v19 = *(float *)(a9 + 4);
  float v20 = *(float *)(a9 + 8);
  float v21 = *(float *)(a9 + 12);
  long long v54 = xmmword_2576AD930;
  long long v55 = xmmword_2576AD940;
  uint64_t v53 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/OptimizerOps.swift";
  uint64_t v56 = "init(id:parameter:gradient:momentum:velocity:maximumVelocity:learningRate:step:beta1:beta2:epsilon:usesAMSGrad:creationSite:)";
  uint64_t v57 = 125;
  __int16 v58 = 2;
  type metadata accessor for AdamOperation();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_257468A14(0, 0, 0, v19, v20, v21, v12, v13, v14, v15, v44, v16, v17, v18 != 0);
  sub_25747B47C(a10, (uint64_t)v52);
  sub_25747B47C((uint64_t)v52, (uint64_t)v51);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v23 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v24 = v49;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  type metadata accessor for TensorRepresentation();
  uint64_t v25 = swift_allocObject();
  LOBYTE(v48[0]) = 1;
  uint64_t v26 = sub_257583960(v22, 0, v51, 0x100000000, v23, v24, v25);
  type metadata accessor for TensorHandle();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v26;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  sub_25747B47C(a10, (uint64_t)v52);
  sub_25747B47C((uint64_t)v52, (uint64_t)v51);
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v27 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v28 = v49;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  uint64_t v29 = swift_allocObject();
  LOBYTE(v48[0]) = 1;
  uint64_t v30 = sub_257583960(v22, 1, v51, 0x100000000, v27, v28, v29);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v30;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  v48[0] = v31;
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  uint64_t v46 = v31;
  swift_retain();
  OptimizerStateDictionary.subscript.setter(v48);
  sub_2574A0560();
  sub_25747B47C(a10, (uint64_t)v52);
  sub_25747B47C((uint64_t)v52, (uint64_t)v51);
  swift_retain_n();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v32 = v50;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v48);
  swift_release();
  uint64_t v33 = v49;
  swift_retain();
  sub_2574718B0((uint64_t)v48);
  uint64_t v34 = swift_allocObject();
  LOBYTE(v48[0]) = 1;
  uint64_t v35 = sub_257583960(v22, 2, v51, 0x100000000, v32, v33, v34);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v35;
  swift_retain();
  sub_2576139A8();
  swift_release();
  swift_release();
  sub_25747B4E4((uint64_t)v52);
  v48[0] = v36;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(v48);
  if (*(void *)(a9 + 72))
  {
    sub_25747B47C(a10, (uint64_t)v52);
    sub_25747B47C((uint64_t)v52, (uint64_t)v51);
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v48);
    swift_release();
    uint64_t v37 = v50;
    swift_retain();
    sub_2574718B0((uint64_t)v48);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v48);
    swift_release();
    uint64_t v38 = v49;
    swift_retain();
    sub_2574718B0((uint64_t)v48);
    uint64_t v39 = swift_allocObject();
    LOBYTE(v48[0]) = 1;
    uint64_t v40 = sub_257583960(v22, 3, v51, 0x100000000, v37, v38, v39);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v40;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v52);
    if (*(void *)(a9 + 72))
    {
      v48[0] = v41;
      swift_retain();
      swift_retain();
      OptimizerStateDictionary.subscript.setter(v48);
    }
  }
  else
  {
    uint64_t v41 = 0;
  }
  v48[0] = v45;
  sub_2575CA114();
  v48[0] = v41;
  sub_2575CA188(v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_2576ABB30;
  *(void *)(v42 + 32) = v36;
  *(void *)(v42 + 40) = v46;
  swift_retain();
  swift_retain();
  sub_2575CA228(v42);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  uint64_t result = sub_2575AEC4C();
  *a8 = v45;
  return result;
}

uint64_t sub_25749A9CC(void (*a1)(uint64_t *__return_ptr, uint64_t))
{
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v6);
  swift_release();
  type metadata accessor for ResolutionDependencies();
  uint64_t v3 = swift_allocObject();
  uint64_t v4 = MEMORY[0x263F8EE78];
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v4;
  swift_retain();
  swift_release();
  v6[9] = v3;
  sub_2575D60A8();
  sub_2575D635C((uint64_t)v6);
  swift_release();
  a1(&v7, v3);
  sub_2575D60A8();
  sub_2575D63D0();
  swift_release();
  swift_release();
  if (v1) {
    return sub_2574718B0((uint64_t)v6);
  }
  sub_2574718B0((uint64_t)v6);
  return v7;
}

uint64_t sub_25749AB00(void (*a1)(uint64_t))
{
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v5);
  swift_release();
  type metadata accessor for ResolutionDependencies();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v3;
  swift_retain();
  swift_release();
  v5[9] = v2;
  sub_2575D60A8();
  sub_2575D635C((uint64_t)v5);
  swift_release();
  a1(v2);
  sub_2575D60A8();
  sub_2575D63D0();
  swift_release();
  swift_release();
  return sub_2574718B0((uint64_t)v5);
}

uint64_t sub_25749AC10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9)
{
  uint64_t v21 = a2;
  uint64_t v22 = a1;
  uint64_t v19 = a4;
  uint64_t v20 = a3;
  uint64_t v17 = a6;
  uint64_t v18 = a5;
  uint64_t v16 = a7;
  basicAdam(parameter:gradient:momentum:velocity:maximumVelocity:learningRate:step:beta1:beta2:epsilon:)(&v26, &v25, &v24, &v23, &v22, &v21, &v20, &v19, *(float *)(a9 + 4), *(float *)(a9 + 8), *(float *)(a9 + 12), &v18, &v17, &v16);
  uint64_t v14 = v26;
  uint64_t v10 = v24;
  uint64_t v9 = v25;
  uint64_t v11 = v23;
  uint64_t v26 = v25;
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v26);
  uint64_t v26 = v10;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v26);
  if (v11 && *(void *)(a9 + 72))
  {
    uint64_t v26 = v11;
    swift_retain();
    swift_retain();
    OptimizerStateDictionary.subscript.setter(&v26);
  }
  uint64_t v26 = v14;
  sub_2575CA114();
  uint64_t v26 = v11;
  sub_2575CA188(&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v9;
  swift_retain();
  swift_retain();
  sub_2575CA228(inited);
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  uint64_t result = sub_2575AEC4C();
  *a8 = v14;
  return result;
}

uint64_t sub_25749AE20()
{
  return sub_25749DF34();
}

uint64_t sub_25749AE40()
{
  return 11;
}

unint64_t sub_25749AE48(char a1)
{
  unint64_t result = 0x676E696E7261656CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x3161746562;
      break;
    case 2:
      unint64_t result = 0x3261746562;
      break;
    case 3:
      unint64_t result = 0x6E6F6C69737065;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x746E656964617267;
      break;
    case 7:
      unint64_t result = 0x6D6F4D7473726966;
      break;
    case 8:
      unint64_t result = 0x6F4D646E6F636573;
      break;
    case 10:
      unint64_t result = 0x6F69746172657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t (*sub_25749AFCC())(void)
{
  return nullsub_1;
}

void sub_25749AFEC(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  char v3 = *(unsigned char *)(v1 + 28);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

float sub_25749B008()
{
  return *(float *)(v0 + 40);
}

uint64_t sub_25749B010(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = sub_25746A92C();
  swift_beginAccess();
  uint64_t v41 = a1;
  if (*v8 == 1)
  {
    int v9 = v4[8];
    char v50 = *((unsigned char *)v4 + 36);
    char v10 = v50;
    int v49 = v9;
    v47[0] = v7;
    uint64_t v48 = v6;
    sub_25747B3F4(v47, &v48, &v42);
    *(void *)&long long v42 = v6;
    int v39 = *v4;
    Tensor.elementType.getter(&v48);
    *(_DWORD *)uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v42 = 0u;
    Tensor.init(coercing:scalarType:on:)((char *)&v48, (uint64_t)&v42, v47);
    uint64_t v11 = *((void *)v4 + 2);
    int v12 = v4[6];
    char v13 = *((unsigned char *)v4 + 28);
    int v14 = v4[10];
    uint64_t v15 = *((void *)v4 + 6);
    LODWORD(v16) = v39;
    DWORD1(v16) = v4[1];
    *((void *)&v16 + 1) = *((void *)v4 + 1);
    uint64_t v17 = *((void *)v4 + 9);
    long long v42 = v16;
    *(void *)&long long v43 = v11;
    BYTE12(v43) = v13;
    DWORD2(v43) = v12;
    BYTE4(v44) = v10;
    LODWORD(v44) = v9;
    DWORD2(v44) = v14;
    *(void *)uint64_t v45 = v15;
    long long v37 = *(_OWORD *)(v4 + 14);
    *(_OWORD *)&v45[8] = v37;
    *(void *)&v45[24] = v17;
    uint64_t v18 = Adam.step.getter();
    *(void *)&long long v42 = v6;
    Tensor.elementType.getter(&v48);
    *(_DWORD *)uint64_t v45 = 0;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v42 = 0u;
    Tensor.init(coercing:scalarType:on:)(v18, (uint64_t)&v48, (uint64_t)&v42);
    if (!v15)
    {
      v47[0] = v37;
      type metadata accessor for OptimizerStateDictionary();
      sub_2576A7810();
      uint64_t v19 = v41;
      OptimizerStateDictionary.subscript.getter(v41, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    v47[0] = v37;
    type metadata accessor for OptimizerStateDictionary();
    OptimizerStateDictionary.subscript.getter(v41);
    if ((void)v42)
    {
      uint64_t v19 = v41;
LABEL_9:
      v47[0] = *((void *)v4 + 8);
      type metadata accessor for OptimizerStateDictionary();
      sub_2576A7810();
      OptimizerStateDictionary.subscript.getter(v19, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
      uint64_t v34 = swift_bridgeObjectRelease();
      if (*((void *)v4 + 9))
      {
        v47[0] = *((void *)v4 + 9);
        sub_2576A7810();
        OptimizerStateDictionary.subscript.getter(v19, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
        uint64_t v34 = swift_bridgeObjectRelease();
      }
      MEMORY[0x270FA5388](v34);
      sub_25749AB00((void (*)(uint64_t))sub_25749F808);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
LABEL_16:
    long long v44 = 0u;
    memset(v45, 0, sizeof(v45));
    long long v42 = 0u;
    long long v43 = 0u;
    char v46 = 22;
    sub_25746BF88();
  }
  int v20 = v4[8];
  char v50 = *((unsigned char *)v4 + 36);
  char v21 = v50;
  int v49 = v20;
  v47[0] = v7;
  uint64_t v48 = v6;
  sub_25747B3F4(v47, &v48, &v42);
  uint64_t v22 = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v22;
  uint64_t v24 = nullsub_1(inited);
  swift_retain();
  swift_retain();
  sub_2575B5190(v24, (uint64_t)v47);
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v6;
  int v40 = *v4;
  Tensor.elementType.getter(&v49);
  *(_DWORD *)uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  Tensor.init(coercing:scalarType:on:)((char *)&v49, (uint64_t)&v42, &v48);
  uint64_t v25 = *((void *)v4 + 2);
  int v26 = v4[6];
  char v27 = *((unsigned char *)v4 + 28);
  int v28 = v4[10];
  uint64_t v29 = *((void *)v4 + 6);
  LODWORD(v30) = v40;
  DWORD1(v30) = v4[1];
  *((void *)&v30 + 1) = *((void *)v4 + 1);
  uint64_t v31 = *((void *)v4 + 9);
  long long v42 = v30;
  *(void *)&long long v43 = v25;
  BYTE12(v43) = v27;
  DWORD2(v43) = v26;
  BYTE4(v44) = v21;
  LODWORD(v44) = v20;
  DWORD2(v44) = v28;
  *(void *)uint64_t v45 = v29;
  long long v38 = *(_OWORD *)(v4 + 14);
  *(_OWORD *)&v45[8] = v38;
  *(void *)&v45[24] = v31;
  uint64_t v32 = Adam.step.getter();
  LOBYTE(v49) = 2;
  *(_DWORD *)uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  long long v42 = 0u;
  Tensor.init(coercing:scalarType:on:)(v32, (uint64_t)&v49, (uint64_t)&v42);
  if (v29)
  {
    uint64_t v48 = v38;
    type metadata accessor for OptimizerStateDictionary();
    OptimizerStateDictionary.subscript.getter(v41);
    if (!(void)v42) {
      goto LABEL_16;
    }
    uint64_t v33 = v41;
  }
  else
  {
    uint64_t v48 = v38;
    type metadata accessor for OptimizerStateDictionary();
    sub_2576A7810();
    uint64_t v33 = v41;
    OptimizerStateDictionary.subscript.getter(v41, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = *((void *)v4 + 8);
  type metadata accessor for OptimizerStateDictionary();
  sub_2576A7810();
  OptimizerStateDictionary.subscript.getter(v33, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
  uint64_t v35 = swift_bridgeObjectRelease();
  if (*((void *)v4 + 9))
  {
    uint64_t v48 = *((void *)v4 + 9);
    sub_2576A7810();
    OptimizerStateDictionary.subscript.getter(v33, (uint64_t (*)(uint64_t))sub_25749F654, &v42);
    uint64_t v35 = swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](v35);
  sub_25749AB00((void (*)(uint64_t))sub_25749F7F0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_25747B4E4((uint64_t)v47);
}

uint64_t sub_25749B788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749B7FC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25749B868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749B8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749B948@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25749DF34();
  *a1 = result;
  return result;
}

uint64_t sub_25749B988@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25749E980(a1, (uint64_t (*)(void, void, void))sub_25749AE48, a2);
}

unint64_t sub_25749B9A0()
{
  return sub_25749AFC4(*v0);
}

uint64_t sub_25749B9AC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25749AE20();
  *a1 = result;
  return result;
}

uint64_t sub_25749B9DC(uint64_t a1, uint64_t a2)
{
  return sub_25749E9F4(a1, a2, (uint64_t (*)(void, void, void))sub_25747A82C);
}

uint64_t sub_25749B9F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25749AE40();
  *a1 = result;
  return result;
}

uint64_t sub_25749BA24(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25749BA78(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void Adam.init(from:)()
{
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_116();
  uint64_t v16 = v2;
  type metadata accessor for Adam.CodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_21_3();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v1);
  }
  else
  {
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_3_9();
    int v5 = v4;
    uint64_t v6 = sub_2576A8D40();
    OUTLINED_FUNCTION_3_9();
    int v8 = v7;
    OUTLINED_FUNCTION_3_9();
    int v10 = v9;
    OUTLINED_FUNCTION_3_9();
    int v12 = v11;
    LOBYTE(v17) = 6;
    OUTLINED_FUNCTION_3_9();
    int v14 = v13;
    sub_25749F6C0();
    OUTLINED_FUNCTION_43_0();
    sub_25749F70C();
    OUTLINED_FUNCTION_43_0();
    type metadata accessor for OptimizerStateDictionary();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_132(8);
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_132(9);
    sub_2576A8D00();
    OUTLINED_FUNCTION_31_1();
    v15();
    swift_bridgeObjectRelease();
    *(_DWORD *)uint64_t v16 = v5;
    *(_DWORD *)(v16 + 4) = v8;
    *(_DWORD *)(v16 + 8) = v10;
    *(_DWORD *)(v16 + 12) = v12;
    *(void *)(v16 + 16) = v17;
    *(unsigned char *)(v16 + 28) = v19;
    *(_DWORD *)(v16 + 24) = v18;
    *(unsigned char *)(v16 + 36) = BYTE4(v17);
    *(_DWORD *)(v16 + 32) = v17;
    *(_DWORD *)(v16 + 40) = v14;
    *(void *)(v16 + 48) = v6;
    *(void *)(v16 + 56) = v17;
    *(void *)(v16 + 64) = v17;
    *(void *)(v16 + 72) = v17;
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    __swift_destroy_boxed_opaque_existential_1(v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111();
}

void Adam.encode(to:)()
{
  OUTLINED_FUNCTION_96_0();
  uint64_t v29 = v1;
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v21 = *(void *)(v2 + 16);
  uint64_t v22 = v3;
  type metadata accessor for Adam.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v26 = *(unsigned __int8 *)(v0 + 28);
  uint64_t v27 = v10;
  uint64_t v25 = *(unsigned int *)(v0 + 24);
  uint64_t v24 = *(unsigned __int8 *)(v0 + 36);
  uint64_t v23 = *(unsigned int *)(v0 + 32);
  uint64_t v28 = *(void *)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 56);
  uint64_t v19 = *(void *)(v0 + 64);
  uint64_t v20 = v11;
  uint64_t v18 = *(void *)(v0 + 72);
  OUTLINED_FUNCTION_62_0();
  sub_2576A9230();
  OUTLINED_FUNCTION_114();
  uint64_t v12 = v29;
  sub_2576A8E20();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  }
  else
  {
    uint64_t v14 = v25;
    uint64_t v13 = v26;
    uint64_t v15 = v27;
    uint64_t v16 = v24;
    LOBYTE(v31) = 10;
    sub_2576A8E30();
    LOBYTE(v31) = 1;
    OUTLINED_FUNCTION_41_0();
    uint64_t v29 = v6;
    LOBYTE(v31) = 2;
    OUTLINED_FUNCTION_41_0();
    LOBYTE(v31) = 3;
    OUTLINED_FUNCTION_41_0();
    uint64_t v31 = v15;
    int v32 = v14;
    char v33 = (v14 | (unint64_t)(v13 << 32)) >> 32;
    char v30 = 4;
    sub_25749F7A4();
    OUTLINED_FUNCTION_79_0();
    BYTE4(v31) = (v23 | (unint64_t)(v16 << 32)) >> 32;
    LODWORD(v31) = v23;
    char v30 = 5;
    sub_25749F758();
    OUTLINED_FUNCTION_79_0();
    LOBYTE(v31) = 6;
    OUTLINED_FUNCTION_41_0();
    uint64_t v31 = v20;
    char v30 = 7;
    type metadata accessor for OptimizerStateDictionary();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_78_0();
    sub_2576A8E40();
    uint64_t v31 = v19;
    char v30 = 8;
    OUTLINED_FUNCTION_78_0();
    sub_2576A8E40();
    uint64_t v31 = v18;
    char v30 = 9;
    sub_2576A8DE0();
    (*(void (**)(char *, void))(v6 + 8))(v9, 0);
  }
  OUTLINED_FUNCTION_111();
}

void sub_25749C1F4()
{
}

void sub_25749C214()
{
}

uint64_t (*AdamW.learningRate.modify())(void)
{
  return nullsub_1;
}

float AdamW.epsilon.getter()
{
  return *(float *)(v0 + 12);
}

void AdamW.gradientClippingMode.getter(uint64_t a1@<X8>)
{
}

float AdamW.weightDecay.getter()
{
  return *(float *)(v0 + 32);
}

float AdamW.gradientScale.getter()
{
  return *(float *)(v0 + 36);
}

uint64_t AdamW.step.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t result = v1 + 1;
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_25749C298@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AdamW.step.getter();
  *a1 = result;
  return result;
}

void sub_25749C314(uint64_t *a1)
{
}

void AdamW.step.setter(uint64_t a1)
{
  if (__OFSUB__(a1, 1)) {
    __break(1u);
  }
  else {
    OUTLINED_FUNCTION_102_0(a1 - 1);
  }
}

uint64_t (*AdamW.step.modify(uint64_t (*result)()))()
{
  *((void *)result + 1) = v1;
  uint64_t v2 = *(void *)(v1 + 40);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)uint64_t result = v4;
    return sub_257496100;
  }
  return result;
}

void *sub_25749C384(void *result, char a2)
{
  uint64_t v2 = *result - 1;
  BOOL v3 = __OFSUB__(*result, 1);
  if (a2)
  {
    if (!v3)
    {
LABEL_8:
      *(void *)(result[1] + 40) = v2 & ~(v2 >> 63);
      return result;
    }
    __break(1u);
  }
  if (!v3) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t AdamW.firstMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 48), a1);
}

uint64_t AdamW.firstMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = v2;
  return result;
}

uint64_t (*AdamW.firstMoments.modify())(void)
{
  return nullsub_1;
}

uint64_t AdamW.secondMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 56), a1);
}

uint64_t AdamW.secondMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = v2;
  return result;
}

uint64_t (*AdamW.secondMoments.modify())(void)
{
  return nullsub_1;
}

uint64_t AdamW.maximumSecondMoments.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_1_15(*(void *)(v1 + 64), a1);
}

uint64_t AdamW.maximumSecondMoments.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t (*AdamW.maximumSecondMoments.modify())(void)
{
  return nullsub_1;
}

BOOL AdamW.usesAMSGrad.getter()
{
  return *(void *)(v0 + 64) != 0;
}

void AdamW.init(for:learningRate:beta1:beta2:usesAMSGrad:epsilon:gradientClippingMode:weightDecay:gradientScale:)()
{
  OUTLINED_FUNCTION_122();
  int v1 = v0;
  int v3 = v2;
  int v5 = v4;
  float v7 = v6;
  float v9 = v8;
  int v11 = v10;
  uint64_t v13 = v12;
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_61_0();
  if (v19 != v20)
  {
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_16;
  }
  BOOL v21 = v9 < 0.0 || v9 > 1.0;
  if (v21 || (v7 >= 0.0 ? (BOOL v22 = v7 > 1.0) : (BOOL v22 = 1), v22))
  {
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_128();
LABEL_16:
    sub_2576A8B60();
    OUTLINED_FUNCTION_45_0();
  }
  char v23 = v17;
  uint64_t v30 = *v18;
  unint64_t v24 = *((unsigned int *)v18 + 2) | ((unint64_t)*((unsigned __int8 *)v18 + 12) << 32);
  uint64_t v25 = *(void (**)(uint64_t))(v15 + 16);
  uint64_t v26 = OUTLINED_FUNCTION_4_9();
  v25(v26);
  OUTLINED_FUNCTION_7_5();
  uint64_t v27 = OUTLINED_FUNCTION_4_9();
  v25(v27);
  OUTLINED_FUNCTION_7_5();
  if (v23)
  {
    uint64_t v28 = OUTLINED_FUNCTION_4_9();
    v25(v28);
    OUTLINED_FUNCTION_7_5();
    uint64_t v29 = v31;
  }
  else
  {
    uint64_t v29 = 0;
  }
  *(_DWORD *)uint64_t v13 = v11;
  *(float *)(v13 + 4) = v9;
  *(float *)(v13 + 8) = v7;
  *(_DWORD *)(v13 + 12) = v5;
  *(void *)(v13 + 16) = v30;
  *(_DWORD *)(v13 + 24) = v24;
  *(unsigned char *)(v13 + 28) = BYTE4(v24);
  *(_DWORD *)(v13 + 32) = v3;
  *(_DWORD *)(v13 + 36) = v1;
  *(void *)(v13 + 40) = 0;
  *(void *)(v13 + 48) = v31;
  *(void *)(v13 + 56) = v31;
  *(void *)(v13 + 64) = v29;
  *(_DWORD *)(v13 + 72) = 0;
  OUTLINED_FUNCTION_117();
}

void sub_25749C684()
{
  uint64_t v1 = *(void *)(v0 + 40);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    float v4 = *(float *)(v0 + 4);
    float v5 = (float)v3;
    float v6 = *(float *)v0 * sqrtf(1.0 - powf(*(float *)(v0 + 8), (float)v3));
    *(float *)(v0 + 72) = v6 / (float)(1.0 - powf(v4, v5));
  }
}

uint64_t (*AdamW.update(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3))(unsigned char *, void)
{
  uint64_t v186 = a1;
  v205[7] = *MEMORY[0x263EF8340];
  uint64_t v160 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_48_0(v11, v154);
  OUTLINED_FUNCTION_0_10();
  uint64_t v157 = v13;
  uint64_t v158 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v167 = OUTLINED_FUNCTION_47_0(v14, v154);
  OUTLINED_FUNCTION_0_10();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_6_2();
  uint64_t v163 = v18;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_88_0();
  uint64_t v190 = v3;
  sub_25749C684();
  uint64_t v191 = a3;
  uint64_t v184 = *(void *)(a3 + 16);
  sub_2576A89D0();
  uint64_t v170 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v183 = MEMORY[0x25A2B84C0](a2);
  sub_2574729F0(0, v183 & ~(v183 >> 63), 0, MEMORY[0x263F8EE78]);
  uint64_t v180 = v21;
  if (qword_26A0008F8 != -1) {
LABEL_76:
  }
    swift_once();
  uint64_t v22 = sub_2576A75D0();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_26A001FD0);
  sub_2576A7590();
  uint64_t v161 = v23;
  unint64_t v24 = sub_2576A75C0();
  os_signpost_type_t v25 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_57_0();
    os_signpost_id_t v27 = OUTLINED_FUNCTION_89_0(v26);
    _os_signpost_emit_with_name_impl(&dword_257455000, v24, v25, v27, "Optimizing", "", v5, 2u);
    OUTLINED_FUNCTION_56_0();
  }

  OUTLINED_FUNCTION_94_0();
  v29(v28);
  sub_2576A7610();
  swift_allocObject();
  uint64_t v165 = sub_2576A7600();
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v16 += 8;
  uint64_t v164 = v16;
  uint64_t v162 = v30;
  v30(v4, (uint64_t)v24);
  OUTLINED_FUNCTION_12_5();
  OUTLINED_FUNCTION_16_4();
  uint64_t v31 = MEMORY[0x263F8EE78];
  sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)&unk_27065DAD8, (uint64_t)v205, v203);
  sub_25747B4E4((uint64_t)v201);
  uint64_t v200 = v203[0];
  OUTLINED_FUNCTION_76_0();
  if (!v36 & v35) {
    BOOL v36 = 0;
  }
  else {
    BOOL v36 = v33 == 0x200000000;
  }
  if (v36)
  {
    uint64_t v4 = *(void *)(v34 + 16);
    if ((v4 & 0x100000000) != 0)
    {
      *(void *)uint64_t v201 = v170;
      MEMORY[0x270FA5388](v32);
      *(&v154 - 2) = v191;
      *(&v154 - 1) = swift_getWitnessTable();
      uint64_t v39 = sub_2576A7F50();
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_257495BE0((void (*)(char *, uint64_t))sub_2574A0678, (uint64_t)(&v154 - 4), v39, (uint64_t)&type metadata for Tensor, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v41);
      uint64_t v185 = 0;
      v201[0] = 13;
      Tensor.init(stacking:alongAxis:scalarType:)();
      v203[0] = v205[0];
      Tensor.sum()();
      swift_release();
      uint64_t v42 = *(void *)v201;
      OUTLINED_FUNCTION_12_5();
      char v43 = *(unsigned char *)(*(void *)(v42 + 16) + 160);
      OUTLINED_FUNCTION_16_4();
      uint64_t v199 = v31;
      LOBYTE(v198) = v43;
      OUTLINED_FUNCTION_22_3();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v205);
      uint64_t v4 = v204[0];
      sub_25747B4E4((uint64_t)v201);
      *(void *)uint64_t v201 = v42;
      v203[0] = v4;
      OUTLINED_FUNCTION_38_0();
      v203[0] = v205[0];
      sqrt(_:)();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v38 = *(void *)v201;
      swift_release();
    }
    else
    {
      OUTLINED_FUNCTION_12_5();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      long long v37 = (__n128 *)OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_110_0(v37, (__n128)xmmword_2576ABB10);
      OUTLINED_FUNCTION_16_4();
      sub_25749F194(MEMORY[0x263F8EE78], (uint64_t)v37, (uint64_t)v205, v203);
      sub_25747B4E4((uint64_t)v201);
      uint64_t v38 = v203[0];
      swift_release();
      uint64_t v185 = 0;
    }
    uint64_t v200 = v38;
  }
  else
  {
    uint64_t v185 = 0;
  }
  uint64_t v44 = v180;
  sub_2574720D8();
  uint64_t v199 = v45;
  if (v183 < 0) {
    __break(1u);
  }
  if (v183)
  {
    char v46 = 0;
    unsigned int v156 = *MEMORY[0x263F8E1F8];
    uint64_t v154 = v9 + 8;
    uint64_t v155 = (void (**)(uint64_t, void, uint64_t))(v9 + 104);
    uint64_t v9 = v190;
    uint64_t v168 = v190 + 56;
    uint64_t v169 = v190 + 48;
    uint64_t v166 = v190 + 64;
    uint64_t v179 = MEMORY[0x263F8EE60] + 8;
    float v5 = (uint8_t *)v183;
    __n128 v189 = (__n128)xmmword_2576ABB10;
    while (1)
    {
      if (v5 == v46)
      {
        __break(1u);
        goto LABEL_76;
      }
      sub_2576A7F90();
      long long v47 = *(_OWORD *)v201;
      swift_retain();
      uint64_t v48 = swift_retain();
      uint64_t v192 = &v154;
      MEMORY[0x270FA5388](v48);
      uint64_t v4 = (uint64_t)(&v154 - 10);
      *(&v154 - 8) = v191;
      *(&v154 - 7) = swift_getWitnessTable();
      *(&v154 - 6) = *((void *)&v47 + 1);
      uint64_t v193 = *((void *)&v47 + 1);
      *(&v154 - 5) = v9;
      *(&v154 - 4) = (uint64_t)&v200;
      *(&v154 - 3) = v47;
      *(&v154 - 2) = (uint64_t)&v199;
      swift_retain();
      uint64_t v49 = sub_2576A8600();
      if (v50) {
        break;
      }
      uint64_t v51 = MEMORY[0x270FA5388](v49);
      uint64_t v52 = *(void *)(v191 + 24);
      *(&v154 - 6) = v184;
      *(&v154 - 5) = v52;
      *(&v154 - 4) = v51;
      *(&v154 - 3) = (uint64_t)sub_25749F63C;
      *(&v154 - 2) = v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
      uint64_t v4 = v185;
      float v5 = (uint8_t *)v183;
      sub_2575E6708();
      uint64_t v185 = v4;
      swift_release();
LABEL_61:
      uint64_t v129 = sub_2575CA350();
      uint64_t v16 = *(void *)(v44 + 16);
      OUTLINED_FUNCTION_99_0();
      if (v35)
      {
        sub_2574729F0(v130 > 1, v4, 1, v44);
        uint64_t v44 = v131;
      }
      ++v46;
      *(void *)(v44 + 16) = v4;
      *(void *)(v44 + 8 * v16 + 32) = v129;
      swift_release_n();
      swift_release_n();
      if (v5 == v46) {
        goto LABEL_68;
      }
    }
    uint64_t v53 = swift_modifyAtWritableKeyPath();
    long long v55 = (void (*)(void *, void))v53;
    if (*(unsigned char *)(v54 + 8)) {
      goto LABEL_59;
    }
    uint64_t v56 = v54;
    uint64_t v178 = (void (*)(void *, void))v53;
    float v57 = *(float *)(v9 + 36);
    uint64_t v181 = v54;
    if (v57 == 1.0)
    {
      uint64_t v58 = v193;
      swift_retain();
    }
    else
    {
      OUTLINED_FUNCTION_12_5();
      uint64_t v59 = v193;
      char v60 = *(unsigned char *)(*(void *)(v193 + 16) + 160);
      OUTLINED_FUNCTION_16_4();
      uint64_t v197 = MEMORY[0x263F8EE78];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
      uint64_t v61 = (__n128 *)OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_75_0(v61, v189);
      LOBYTE(v196) = v60;
      OUTLINED_FUNCTION_22_3();
      swift_retain();
      OUTLINED_FUNCTION_25_1();
      sub_25747B4E4((uint64_t)v205);
      uint64_t v62 = v198;
      sub_25747B4E4((uint64_t)v201);
      v205[0] = v59;
      v203[0] = v62;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v56 = v181;
      swift_release();
      uint64_t v58 = *(void *)v201;
    }
    OUTLINED_FUNCTION_59_0();
    if (!v36 & v35)
    {
      *(void *)uint64_t v201 = v58;
    }
    else
    {
      uint64_t v64 = *(void *)(v9 + 16);
      unint64_t v65 = *(unsigned int *)(v9 + 24) | ((unint64_t)v63 << 32);
      if (v63)
      {
        uint64_t v66 = v200;
        OUTLINED_FUNCTION_74_0();
        if (HIDWORD(v65) == 1)
        {
          char v68 = *(unsigned char *)(v67 + 160);
          OUTLINED_FUNCTION_16_4();
          uint64_t v197 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v69 = (__n128 *)OUTLINED_FUNCTION_2_11();
          v69[1] = v189;
          v69[2].n128_u32[0] = v64;
          LOBYTE(v196) = v68;
          OUTLINED_FUNCTION_22_3();
          swift_retain();
          swift_retain();
          OUTLINED_FUNCTION_25_1();
          sub_25747B4E4((uint64_t)v205);
          uint64_t v70 = v198;
          sub_25747B4E4((uint64_t)v201);
          v205[0] = v58;
          Tensor.squared()();
          v203[0] = *(void *)v201;
          Tensor.sum()();
          swift_release();
          v203[0] = v205[0];
          sqrt(_:)();
          swift_release();
          uint64_t v71 = *(void *)v201;
          v205[0] = v58;
          *(void *)uint64_t v201 = v70;
          v203[0] = v71;
          uint64_t v197 = v70;
          max(_:_:)();
          uint64_t v197 = v198;
          static Tensor./ infix(_:_:)();
          swift_release();
          uint64_t v198 = v203[0];
          static Tensor.* infix(_:_:)();
        }
        else
        {
          char v72 = *(unsigned char *)(v67 + 160);
          OUTLINED_FUNCTION_16_4();
          uint64_t v197 = MEMORY[0x263F8EE78];
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
          uint64_t v73 = (__n128 *)OUTLINED_FUNCTION_2_11();
          v73[1] = v189;
          v73[2].n128_u32[0] = v65;
          LOBYTE(v196) = v72;
          OUTLINED_FUNCTION_22_3();
          swift_retain();
          swift_retain();
          OUTLINED_FUNCTION_25_1();
          sub_25747B4E4((uint64_t)v205);
          uint64_t v74 = v198;
          uint64_t v188 = v198;
          sub_25747B4E4((uint64_t)v201);
          *(void *)uint64_t v201 = v58;
          v203[0] = v74;
          OUTLINED_FUNCTION_38_0();
          v203[0] = v205[0];
          *(void *)uint64_t v201 = v66;
          LOBYTE(v197) = *(unsigned char *)(*(void *)(v58 + 16) + 160);
          (*v155)(v159, v156, v160);
          Tensor.cast(to:roundingRule:)();
          uint64_t v56 = v181;
          OUTLINED_FUNCTION_14_0();
          v76(v75);
          uint64_t v197 = v198;
          static Tensor./ infix(_:_:)();
        }
        OUTLINED_FUNCTION_83_0();
        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        v205[0] = v58;
        Tensor.clamped(to:)((uint64_t)v201, *(float *)&v64, *((float *)&v64 + 1));
      }
      swift_release();
      uint64_t v9 = v190;
    }
    uint64_t v77 = *(void *)(*(void *)v56 + 32);
    if ((~v77 & 0xF000000000000007) == 0)
    {
      OUTLINED_FUNCTION_36_0();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_50_0();
      goto LABEL_84;
    }
    if ((v77 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_13_5();
      goto LABEL_82;
    }
    uint64_t v78 = *(void *)(v9 + 40);
    uint64_t v79 = *(void *)(v9 + 48);
    uint64_t v188 = *(void *)v201;
    uint64_t v180 = v44;
    uint64_t v177 = v77;
    if (v78)
    {
      v205[0] = v79;
      swift_retain();
      OUTLINED_FUNCTION_65_0();
      uint64_t v80 = OUTLINED_FUNCTION_68_0();
      uint64_t v82 = v81;
      OptimizerStateDictionary.subscript.getter(v80);
      uint64_t v83 = *(void *)v201;
      if (!*(void *)v201)
      {
        memset(v201, 0, sizeof(v201));
        char v202 = 22;
        OUTLINED_FUNCTION_46_0();
        sub_25746BF88();
      }
      uint64_t v182 = v82;
    }
    else
    {
      v205[0] = v79;
      swift_retain();
      uint64_t v84 = OUTLINED_FUNCTION_65_0();
      sub_2576A7810();
      uint64_t v85 = OUTLINED_FUNCTION_68_0();
      uint64_t v182 = v84;
      OptimizerStateDictionary.subscript.getter(v85, v86, v87);
      swift_bridgeObjectRelease();
      uint64_t v83 = *(void *)v201;
    }
    uint64_t v88 = v190;
    *(void *)uint64_t v201 = *(void *)(v190 + 56);
    type metadata accessor for OptimizerStateDictionary();
    swift_retain();
    sub_2576A7810();
    uint64_t v176 = v77 & 0x7FFFFFFFFFFFFFFFLL;
    OptimizerStateDictionary.subscript.getter(v47, (uint64_t (*)(uint64_t))sub_25749F654, &v198);
    swift_bridgeObjectRelease();
    float v89 = *(float *)(v88 + 4);
    OUTLINED_FUNCTION_12_5();
    uint64_t v90 = v188;
    char v91 = *(unsigned char *)(*(void *)(v188 + 16) + 160);
    OUTLINED_FUNCTION_16_4();
    uint64_t v92 = MEMORY[0x263F8EE78];
    uint64_t v196 = MEMORY[0x263F8EE78];
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    char v94 = (__n128 *)OUTLINED_FUNCTION_2_11();
    v94[1] = v189;
    v94[2].n128_f32[0] = 1.0 - v89;
    LOBYTE(v195) = v91;
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_6_6();
    sub_25747B4E4((uint64_t)v205);
    uint64_t v95 = v197;
    sub_25747B4E4((uint64_t)v201);
    OUTLINED_FUNCTION_8_5();
    uint64_t v196 = v92;
    uint64_t v96 = (__n128 *)OUTLINED_FUNCTION_2_11();
    v96[1] = v189;
    v96[2].n128_f32[0] = v89;
    LOBYTE(v195) = v91;
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_6_6();
    sub_25747B4E4((uint64_t)v205);
    uint64_t v97 = v197;
    sub_25747B4E4((uint64_t)v201);
    uint64_t v174 = v97;
    *(void *)uint64_t v201 = v97;
    v203[0] = v83;
    OUTLINED_FUNCTION_38_0();
    swift_release();
    v203[0] = v205[0];
    uint64_t v175 = v95;
    *(void *)uint64_t v201 = v95;
    uint64_t v196 = v90;
    static Tensor.* infix(_:_:)();
    char v98 = v197;
    uint64_t v196 = v197;
    static Tensor.+ infix(_:_:)();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v99 = *(void *)v201;
    float v100 = *(float *)(v190 + 8);
    OUTLINED_FUNCTION_8_5();
    uint64_t v101 = v92;
    uint64_t v196 = v92;
    uint64_t v102 = (__n128 *)OUTLINED_FUNCTION_2_11();
    v102[1] = v189;
    v102[2].n128_f32[0] = 1.0 - v100;
    LOBYTE(v195) = v98;
    OUTLINED_FUNCTION_22_3();
    swift_retain();
    OUTLINED_FUNCTION_6_6();
    sub_25747B4E4((uint64_t)v205);
    uint64_t v103 = v197;
    sub_25747B4E4((uint64_t)v201);
    OUTLINED_FUNCTION_8_5();
    uint64_t v196 = v101;
    uint64_t v171 = v93;
    uint64_t v104 = (__n128 *)OUTLINED_FUNCTION_2_11();
    v104[1] = v189;
    v104[2].n128_f32[0] = v100;
    LOBYTE(v195) = v98;
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_6_6();
    sub_25747B4E4((uint64_t)v205);
    uint64_t v105 = v197;
    sub_25747B4E4((uint64_t)v201);
    uint64_t v172 = v105;
    *(void *)uint64_t v201 = v105;
    v203[0] = v198;
    OUTLINED_FUNCTION_38_0();
    v203[0] = v205[0];
    uint64_t v173 = v103;
    *(void *)uint64_t v201 = v103;
    uint64_t v197 = v90;
    Tensor.squared()();
    uint64_t v195 = v196;
    static Tensor.* infix(_:_:)();
    swift_release();
    uint64_t v196 = v197;
    static Tensor.+ infix(_:_:)();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v106 = *(void *)v201;
    uint64_t v198 = *(void *)v201;
    if (*(void *)(v190 + 64))
    {
      v205[0] = *(void *)(v190 + 64);
      swift_retain();
      uint64_t v107 = OUTLINED_FUNCTION_68_0();
      OptimizerStateDictionary.subscript.getter(v107);
      if (*(void *)v201)
      {
        v205[0] = *(void *)v201;
        v203[0] = v106;
        max(_:_:)();
        swift_release_n();
        uint64_t v106 = *(void *)v201;
        uint64_t v198 = *(void *)v201;
        swift_retain();
        swift_retain();
        uint64_t v108 = (void *)OUTLINED_FUNCTION_72_0();
        OptimizerStateDictionary.subscript.setter(v108);
      }
      swift_release();
    }
    *(void *)uint64_t v201 = v99;
    swift_retain();
    swift_retain();
    uint64_t v109 = (void *)OUTLINED_FUNCTION_72_0();
    OptimizerStateDictionary.subscript.setter(v109);
    *(void *)uint64_t v201 = v106;
    swift_retain_n();
    swift_retain();
    uint64_t v110 = (void *)OUTLINED_FUNCTION_72_0();
    OptimizerStateDictionary.subscript.setter(v110);
    uint64_t v111 = v190;
    OUTLINED_FUNCTION_54_0();
    char v113 = *(unsigned char *)(v112 + 160);
    OUTLINED_FUNCTION_16_4();
    uint64_t v196 = MEMORY[0x263F8EE78];
    uint64_t v114 = (__n128 *)OUTLINED_FUNCTION_2_11();
    OUTLINED_FUNCTION_75_0(v114, v189);
    LOBYTE(v195) = v113;
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_6_6();
    sub_25747B4E4((uint64_t)v205);
    uint64_t v115 = v197;
    sub_25747B4E4((uint64_t)v201);
    sub_25749DDA8(v99, *(float *)(v111 + 72));
    swift_release();
    v205[0] = *(void *)v201;
    v203[0] = v106;
    sqrt(_:)();
    swift_release();
    uint64_t v195 = v115;
    uint64_t v196 = v197;
    static Tensor.+ infix(_:_:)();
    swift_release();
    uint64_t v196 = v203[0];
    static Tensor./ infix(_:_:)();
    swift_release();
    swift_release();
    float v5 = (uint8_t *)v183;
    if (*(float *)(v111 + 32) == 0.0)
    {
      uint64_t v116 = v197;
      uint64_t v44 = v180;
      uint64_t v117 = v176;
    }
    else
    {
      OUTLINED_FUNCTION_54_0();
      char v119 = *(unsigned char *)(v118 + 160);
      OUTLINED_FUNCTION_16_4();
      uint64_t v195 = MEMORY[0x263F8EE78];
      uint64_t v120 = (__n128 *)OUTLINED_FUNCTION_2_11();
      OUTLINED_FUNCTION_75_0(v120, v189);
      char v194 = v119;
      OUTLINED_FUNCTION_22_3();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v205);
      uint64_t v121 = v196;
      sub_25747B4E4((uint64_t)v201);
      v205[0] = v121;
      uint64_t v122 = v176;
      v203[0] = v176;
      static Tensor.* infix(_:_:)();
      v203[0] = v197;
      uint64_t v196 = *(void *)v201;
      static Tensor.+ infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v117 = v122;
      swift_release();
      uint64_t v116 = v205[0];
      uint64_t v44 = v180;
    }
    v205[0] = v117;
    v203[0] = v116;
    swift_retain();
    static Tensor.- infix(_:_:)();
    OUTLINED_FUNCTION_83_0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = *(void *)v201;
    uint64_t v123 = v199;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_27_1();
      uint64_t v123 = v132;
    }
    unint64_t v124 = *(void *)(v123 + 16);
    if (v124 >= *(void *)(v123 + 24) >> 1)
    {
      sub_2574720D8();
      uint64_t v123 = v133;
    }
    *(void *)(v123 + 16) = v124 + 1;
    *(void *)(v123 + 8 * v124 + 32) = v4;
    uint64_t v199 = v123;
    uint64_t v125 = v181;
    if ((*(unsigned char *)(v181 + 8) & 1) == 0)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = v190;
      if (!isUniquelyReferenced_nonNull_native)
      {
        *(void *)uint64_t v201 = v4;
        uint64_t v128 = *(unsigned int *)(*(void *)v125 + 16);
        type metadata accessor for LayerVariableReference();
        OUTLINED_FUNCTION_1_4();
        swift_retain();
        LOBYTE(v205[0]) = 0;
        *(void *)uint64_t v125 = sub_25748FB58((uint64_t *)v201, v128);
        swift_release();
        swift_release();
        sub_257486C8C(v177);
        swift_release();
        goto LABEL_58;
      }
      uint64_t v127 = *(void *)(*(void *)v125 + 32);
      if ((~v127 & 0xF000000000000007) == 0)
      {
        OUTLINED_FUNCTION_14_5();
LABEL_82:
        OUTLINED_FUNCTION_17_0();
LABEL_83:
        OUTLINED_FUNCTION_35_1();
LABEL_84:
        sub_2576A8B60();
        OUTLINED_FUNCTION_45_0();
      }
      if ((v127 & 0x8000000000000000) == 0)
      {
        *(void *)uint64_t v201 = v4 | 0x8000000000000000;
        swift_retain();
        sub_25748F984((uint64_t *)v201);
        swift_release();
        sub_257486C8C(v177);
        swift_release();
        v178(v204, 0);
LABEL_60:
        swift_release();
        goto LABEL_61;
      }
      if ((sub_257654B3C(*(void *)(*(void *)(v4 + 16) + 152), *(void *)(*(void *)((v127 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152)) & 1) == 0)
      {
        *(void *)uint64_t v201 = 0;
        *(void *)&v201[8] = 0xE000000000000000;
        swift_retain();
        sub_257486C70(v127);
        sub_2576A8730();
        OUTLINED_FUNCTION_87_0();
        OUTLINED_FUNCTION_129();
        sub_2576A7B00();
        uint64_t v151 = sub_2576A7810();
        uint64_t v152 = MEMORY[0x263F8D6C8];
        MEMORY[0x25A2B83F0](v151, MEMORY[0x263F8D6C8]);
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_10_4();
        uint64_t v153 = sub_2576A7810();
        MEMORY[0x25A2B83F0](v153, v152);
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        OUTLINED_FUNCTION_37_0();
        goto LABEL_83;
      }
      *(void *)uint64_t v201 = v4 | 0x8000000000000000;
      swift_retain();
      sub_257486C70(v127);
      sub_25748F984((uint64_t *)v201);
      sub_257486C8C(v127);
    }
    swift_release();
    sub_257486C8C(v177);
    swift_release();
    uint64_t v9 = v190;
LABEL_58:
    long long v55 = v178;
LABEL_59:
    v55(v204, 0);
    goto LABEL_60;
  }
  uint64_t v9 = v190;
LABEL_68:
  uint64_t v134 = v44;
  unint64_t v135 = (void *)sub_2576A75C0();
  uint64_t v136 = v163;
  sub_2576A75F0();
  os_signpost_type_t v137 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    sub_2576A7620();
    swift_release();
    uint64_t v138 = OUTLINED_FUNCTION_20_4();
    int v140 = v139(v138);
    uint64_t v141 = v162;
    if (v140 != *MEMORY[0x263F90238])
    {
      OUTLINED_FUNCTION_31_1();
      v143(v142);
    }
    *(_WORD *)OUTLINED_FUNCTION_57_0() = 0;
    os_signpost_id_t v144 = sub_2576A7580();
    OUTLINED_FUNCTION_51_0(&dword_257455000, v145, v137, v144, "Optimizing");
    OUTLINED_FUNCTION_56_0();

    swift_release();
    uint64_t v9 = v190;
    v141(v136, v167);
  }
  else
  {
    swift_release();

    v162(v136, v167);
  }
  uint64_t v146 = v199;
  swift_release();
  uint64_t v147 = sub_25748721C(v134);
  *(void *)uint64_t v201 = 1;
  *(void *)&v201[8] = v147;
  Array<A>.resolve(descriptor:)((long long *)v201, v146);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v148 = v191;
  uint64_t v149 = swift_getWitnessTable();
  j_nullsub_1(v148);
  return sub_2576866A4(v9, v148, v149);
}

uint64_t sub_25749DD6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1;
  swift_retain();
  return Tensor.init(zerosLike:)(&v4, a2);
}

uint64_t sub_25749DDA8(uint64_t a1, float a2)
{
  *(void *)uint64_t v13 = a1;
  Tensor.scalarType.getter();
  (*(void (**)(unsigned __int8 *__return_ptr))(v4 + 32))(v13);
  int v5 = v13[0];
  float v6 = static ScalarType.floatingPointTypes.getter();
  BOOL v7 = sub_2575A0094(0xAu, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v7
    && (uint64_t v8 = static ScalarType.integerTypes.getter(),
        BOOL v9 = sub_2575A0094(v5, (uint64_t)v8),
        swift_bridgeObjectRelease(),
        v9)
    || v5 == 12)
  {
    OUTLINED_FUNCTION_101_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(float *)(inited + 32) = a2;
    sub_25747B47C((uint64_t)v13, (uint64_t)v12);
    sub_25765FB48(MEMORY[0x263F8EE78], inited, (uint64_t)v12, &v14);
    sub_25747B4E4((uint64_t)v13);
  }
  else
  {
    void v12[3] = MEMORY[0x263F8D5C8];
    _DWORD v12[4] = &protocol witness table for Float;
    *(float *)uint64_t v12 = a2;
    *(void *)uint64_t v13 = a1;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_101_0();
    Tensor.init(coercing:scalarType:on:)();
  }
  *(void *)uint64_t v13 = v14;
  v12[0] = a1;
  static Tensor.* infix(_:_:)();
  return swift_release();
}

uint64_t sub_25749DF34()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB) {
    return 11;
  }
  else {
    return v0;
  }
}

uint64_t sub_25749DF7C()
{
  return sub_25749DF34();
}

unint64_t sub_25749DF9C(char a1)
{
  unint64_t result = 0x676E696E7261656CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x3161746562;
      break;
    case 2:
      unint64_t result = 0x3261746562;
      break;
    case 3:
      unint64_t result = 0x6E6F6C69737065;
      break;
    case 4:
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x6544746867696577;
      break;
    case 6:
      unint64_t result = 0x746E656964617267;
      break;
    case 7:
      unint64_t result = 0x6D6F4D7473726966;
      break;
    case 8:
      unint64_t result = 0x6F4D646E6F636573;
      break;
    case 10:
      unint64_t result = 0x6F69746172657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_25749E120(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *a2;
  uint64_t v7 = *a3;
  if (*((void *)v3 + 5))
  {
    uint64_t v24 = *((void *)v3 + 6);
    type metadata accessor for OptimizerStateDictionary();
    OptimizerStateDictionary.subscript.getter(a1);
    uint64_t v8 = v17;
    if (!(void)v17)
    {
      long long v21 = 0u;
      memset(v22, 0, sizeof(v22));
      long long v19 = 0u;
      long long v20 = 0u;
      long long v17 = 0u;
      long long v18 = 0u;
      char v23 = 22;
      sub_25746BF88();
    }
  }
  else
  {
    uint64_t v24 = *((void *)v3 + 6);
    type metadata accessor for OptimizerStateDictionary();
    sub_2576A7810();
    OptimizerStateDictionary.subscript.getter(a1, (uint64_t (*)(uint64_t))sub_25749F654, &v17);
    swift_bridgeObjectRelease();
    uint64_t v8 = v17;
  }
  *(void *)&long long v17 = *((void *)v3 + 7);
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  sub_2576A7810();
  OptimizerStateDictionary.subscript.getter(a1, (uint64_t (*)(uint64_t))sub_25749F654, &v24);
  swift_bridgeObjectRelease();
  uint64_t v15 = v7;
  LODWORD(v20) = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v15, (uint64_t)&v17);
  uint64_t v9 = v16;
  uint64_t v15 = v7;
  LODWORD(v20) = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v15, (uint64_t)&v17);
  *(void *)&long long v17 = v16;
  uint64_t v15 = v8;
  static Tensor.* infix(_:_:)();
  swift_release();
  uint64_t v15 = v16;
  *(void *)&long long v17 = v9;
  static Tensor.* infix(_:_:)();
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v10 = v17;
  uint64_t v15 = v7;
  LODWORD(v20) = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  swift_retain();
  swift_retain();
  sub_25759FB0C((uint64_t)&v15, (uint64_t)&v17);
  uint64_t v11 = v16;
  uint64_t v15 = v7;
  LODWORD(v20) = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v15, (uint64_t)&v17);
  *(void *)&long long v17 = v16;
  uint64_t v15 = v24;
  static Tensor.* infix(_:_:)();
  uint64_t v14 = v7;
  uint64_t v15 = v16;
  *(void *)&long long v17 = v11;
  Tensor.squared()();
  static Tensor.* infix(_:_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v17;
  if (*((void *)v4 + 8))
  {
    uint64_t v16 = *((void *)v4 + 8);
    swift_retain();
    OptimizerStateDictionary.subscript.getter(a1);
    if ((void)v17)
    {
      uint64_t v15 = v12;
      uint64_t v16 = v17;
      max(_:_:)();
      swift_release_n();
      uint64_t v12 = v17;
      swift_retain();
      swift_retain();
      OptimizerStateDictionary.subscript.setter(&v17);
    }
    swift_release();
  }
  *(void *)&long long v17 = v10;
  swift_retain();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v17);
  *(void *)&long long v17 = v12;
  swift_retain_n();
  swift_retain();
  OptimizerStateDictionary.subscript.setter(&v17);
  uint64_t v15 = v7;
  LODWORD(v20) = 0;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v17 = 0u;
  swift_retain();
  sub_25759FB0C((uint64_t)&v15, (uint64_t)&v17);
  sub_25749DDA8(v10, v4[18]);
  swift_release();
  uint64_t v14 = v12;
  uint64_t v15 = v17;
  sqrt(_:)();
  swift_release();
  static Tensor.+ infix(_:_:)();
  swift_release();
  static Tensor./ infix(_:_:)();
  swift_release();
  swift_release();
  if (v4[8] != 0.0)
  {
    uint64_t v14 = v7;
    LODWORD(v20) = 0;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v17 = 0u;
    swift_retain();
    sub_25759FB0C((uint64_t)&v14, (uint64_t)&v17);
    uint64_t v14 = v6;
    static Tensor.* infix(_:_:)();
    uint64_t v15 = v17;
    static Tensor.+= infix(_:_:)(&v16, &v15);
    swift_release();
    swift_release();
  }
  *(void *)&long long v17 = v6;
  uint64_t v15 = v16;
  swift_retain();
  static Tensor.- infix(_:_:)();
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_25749E768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749E7DC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_25749E848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749E8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_25749E928@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25749DF34();
  *a1 = result;
  return result;
}

uint64_t sub_25749E968@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25749E980(a1, (uint64_t (*)(void, void, void))sub_25749DF9C, a2);
}

uint64_t sub_25749E980@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void, void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
  *a3 = result;
  a3[1] = v6;
  return result;
}

unint64_t sub_25749E9B8()
{
  return sub_25749E118(*v0);
}

uint64_t sub_25749E9C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25749DF7C();
  *a1 = result;
  return result;
}

uint64_t sub_25749E9F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void))
{
  return a3(*v3, *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t sub_25749EA20(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25749EA74(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void AdamW.init(from:)()
{
  OUTLINED_FUNCTION_123();
  OUTLINED_FUNCTION_116();
  uint64_t v19 = v2;
  type metadata accessor for AdamW.CodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_98_0();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_21_3();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v1);
  }
  else
  {
    OUTLINED_FUNCTION_3_9();
    int v5 = v4;
    uint64_t v6 = sub_2576A8D40();
    OUTLINED_FUNCTION_3_9();
    int v8 = v7;
    OUTLINED_FUNCTION_3_9();
    int v10 = v9;
    OUTLINED_FUNCTION_3_9();
    int v12 = v11;
    OUTLINED_FUNCTION_3_9();
    int v14 = v13;
    LOBYTE(v20) = 5;
    OUTLINED_FUNCTION_3_9();
    int v16 = v15;
    OUTLINED_FUNCTION_105_0();
    sub_25749F70C();
    OUTLINED_FUNCTION_43_0();
    type metadata accessor for OptimizerStateDictionary();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_104_0(8);
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_104_0(9);
    sub_2576A8D00();
    uint64_t v17 = OUTLINED_FUNCTION_28_1();
    v18(v17);
    swift_bridgeObjectRelease();
    *(_DWORD *)uint64_t v19 = v5;
    *(_DWORD *)(v19 + 4) = v8;
    *(_DWORD *)(v19 + 8) = v10;
    *(_DWORD *)(v19 + 12) = v12;
    *(void *)(v19 + 16) = v20;
    *(unsigned char *)(v19 + 28) = v22;
    *(_DWORD *)(v19 + 24) = v21;
    *(_DWORD *)(v19 + 32) = v16;
    *(_DWORD *)(v19 + 36) = v14;
    *(void *)(v19 + 40) = v6;
    *(void *)(v19 + 48) = v20;
    *(void *)(v19 + 56) = v20;
    *(void *)(v19 + 64) = v20;
    *(_DWORD *)(v19 + 72) = 0;
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    __swift_destroy_boxed_opaque_existential_1(v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_118();
}

void AdamW.encode(to:)()
{
  OUTLINED_FUNCTION_123();
  uint64_t v23 = v1;
  OUTLINED_FUNCTION_66_0(v2, v3);
  type metadata accessor for AdamW.CodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_124();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v6);
  int v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v20 = *(unsigned __int8 *)(v0 + 28);
  uint64_t v21 = v9;
  uint64_t v19 = *(unsigned int *)(v0 + 24);
  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v17 = *(void *)(v0 + 56);
  uint64_t v18 = v10;
  uint64_t v16 = *(void *)(v0 + 64);
  OUTLINED_FUNCTION_62_0();
  sub_2576A9230();
  LOBYTE(v24) = 0;
  uint64_t v11 = v23;
  sub_2576A8E20();
  if (v11)
  {
    OUTLINED_FUNCTION_31_1();
    v12();
  }
  else
  {
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    LOBYTE(v24) = 10;
    sub_2576A8E30();
    OUTLINED_FUNCTION_93_0(1);
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_93_0(2);
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_93_0(3);
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_93_0(6);
    OUTLINED_FUNCTION_29_1();
    OUTLINED_FUNCTION_93_0(5);
    OUTLINED_FUNCTION_29_1();
    uint64_t v24 = v15;
    int v25 = v13;
    char v26 = (v13 | (unint64_t)(v14 << 32)) >> 32;
    OUTLINED_FUNCTION_105_0();
    sub_25749F7A4();
    sub_2576A8DE0();
    uint64_t v24 = v18;
    type metadata accessor for OptimizerStateDictionary();
    swift_getWitnessTable();
    sub_2576A8E40();
    uint64_t v24 = v17;
    OUTLINED_FUNCTION_85_0();
    sub_2576A8E40();
    uint64_t v24 = v16;
    OUTLINED_FUNCTION_85_0();
    sub_2576A8DE0();
    (*(void (**)(char *, void))(v5 + 8))(v8, 0);
  }
  OUTLINED_FUNCTION_118();
}

void sub_25749F15C()
{
}

void sub_25749F17C()
{
}

uint64_t sub_25749F194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v19 = a2;
  if (*(void *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v8) {
        break;
      }
      if (v6 == 1) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_9:
    uint64_t v11 = a2;
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    uint64_t v12 = a1;
    sub_2576A8730();
    OUTLINED_FUNCTION_129();
    sub_2576A7B00();
    if (*(void *)(v12 + 16))
    {
      while (1)
      {
        OUTLINED_FUNCTION_0_13();
        if (!v8) {
          break;
        }
        if (v13 == 1) {
          goto LABEL_15;
        }
      }
      __break(1u);
    }
    uint64_t v14 = 1;
LABEL_15:
    uint64_t v18 = v14;
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v18 = *(void *)(v11 + 16);
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_35_1();
    sub_2576A8B60();
    OUTLINED_FUNCTION_45_0();
  }
  uint64_t v7 = 1;
LABEL_7:
  if (v7 != *(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  uint64_t v17 = a1;
  char v16 = 10;
  uint64_t v9 = sub_25747B47C(a3, (uint64_t)v15);
  MEMORY[0x270FA5388](v9);
  Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)&v17, (uint64_t)&v16, (uint64_t)v15, (uint64_t)sub_2574A0628);
  sub_25747B4E4(a3);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v18;
  return result;
}

void *sub_25749F3EC(void *result, uint64_t a2, uint64_t a3)
{
  if (result) {
    uint64_t v3 = (a2 - (uint64_t)result) / 4;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return result;
  }
  if (v3 < v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!result) {
    return result;
  }
  if (a3 + 32 < (unint64_t)result + 4 * v4 && a3 + 32 + 4 * v4 > (unint64_t)result)
  {
LABEL_16:
    uint64_t result = (void *)sub_2576A8C60();
    __break(1u);
    return result;
  }
  return memcpy(result, (const void *)(a3 + 32), 4 * v4);
}

uint64_t sub_25749F4B8(uint64_t a1)
{
  return sub_25749F500(a1);
}

uint64_t sub_25749F4C4(uint64_t a1)
{
  return sub_25749F500(a1);
}

uint64_t sub_25749F4D0(uint64_t a1)
{
  return sub_25749F500(a1);
}

uint64_t sub_25749F4DC(uint64_t a1)
{
  return sub_25749F500(a1);
}

uint64_t sub_25749F4E8(uint64_t a1)
{
  return sub_25749F588(a1, &qword_26A000F18);
}

uint64_t sub_25749F4F4(uint64_t a1)
{
  return sub_25749F500(a1);
}

uint64_t sub_25749F500(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_73_0();
    uint64_t result = OUTLINED_FUNCTION_90_0();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_2576A7EA0();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_25749F570(uint64_t a1)
{
  return sub_25749F588(a1, &qword_26A0017F0);
}

uint64_t sub_25749F57C(uint64_t a1)
{
  return sub_25749F588(a1, &qword_26A0017F8);
}

uint64_t sub_25749F588(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_73_0();
    uint64_t result = OUTLINED_FUNCTION_90_0();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t result = sub_2576A7EA0();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_25749F63C(uint64_t a1)
{
  return sub_25749F838(a1);
}

uint64_t sub_25749F654@<X0>(void *a1@<X8>)
{
  return sub_25749DD6C(v1, a1);
}

uint64_t sub_25749F670(uint64_t a1, void *a2)
{
  return sub_25749F860(a1, a2);
}

uint64_t sub_25749F688(uint64_t a1)
{
  return sub_257686714(a1);
}

uint64_t type metadata accessor for RMSProp.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_25749F6C0()
{
  unint64_t result = qword_26A0014D0;
  if (!qword_26A0014D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014D0);
  }
  return result;
}

unint64_t sub_25749F70C()
{
  unint64_t result = qword_26A0014D8;
  if (!qword_26A0014D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014D8);
  }
  return result;
}

unint64_t sub_25749F758()
{
  unint64_t result = qword_26A0014E0;
  if (!qword_26A0014E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0014E0);
  }
  return result;
}

unint64_t sub_25749F7A4()
{
  unint64_t result = qword_26A0014E8[0];
  if (!qword_26A0014E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0014E8);
  }
  return result;
}

uint64_t sub_25749F7F0()
{
  return sub_2574A05B0();
}

uint64_t sub_25749F808()
{
  return sub_2574A05E0();
}

uint64_t type metadata accessor for Adam.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25749F838(uint64_t a1)
{
  return sub_257686830(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (***)(char *, uint64_t, uint64_t))(v1 + 48), *(void *)(v1 + 56), *(uint64_t **)(v1 + 64), *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_25749F860(uint64_t a1, void *a2)
{
  return sub_2575E7D2C(a1, *(void *)(v2 + 32), *(uint64_t (**)(uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), (uint64_t)&type metadata for Parameter, MEMORY[0x263F8EE60] + 8, *(void *)(v2 + 24), (uint64_t)&protocol witness table for Parameter, a2);
}

uint64_t type metadata accessor for AdamW.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25749F8C8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25749F904(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_25749F90C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25749F948(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25749F9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_25749F9BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25749F9C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(void *)(a1 + 17) = *(void *)(a2 + 17);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  sub_2576A7810();
  return a1;
}

uint64_t sub_25749FA2C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 12);
  *(void *)(a1 + 17) = *(void *)(a2 + 17);
  *(void *)(a1 + 12) = v3;
  LODWORD(v3) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = v3;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_25749FACC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 12) = *(void *)(a2 + 12);
  *(void *)(a1 + 17) = *(void *)(a2 + 17);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25749FB38(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25749FB78(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for RMSProp()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25749FBDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25749FC20(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  sub_2576A7810();
  sub_2576A7810();
  sub_2576A7810();
  return a1;
}

uint64_t sub_25749FCA0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(void *)(a1 + 16) = v4;
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy80_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_25749FD70(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25749FDF8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 56);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25749FE38(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Adam()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25749FEA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25749FEE8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  sub_2576A7810();
  sub_2576A7810();
  sub_2576A7810();
  return a1;
}

uint64_t sub_25749FF60(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(void *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void *__swift_memcpy76_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4CuLL);
}

uint64_t sub_2574A0030(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 21) = *(void *)(a2 + 21);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_2574A00B0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 76))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 48);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2574A00F0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 76) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 76) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AdamW()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574A015C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_2574A016C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 10) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v5 = v6 - 11;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_2574A01F4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    void *result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574A02C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 10;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DotNodeShape(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 7) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v5 = v6 - 8;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *sub_2574A0370(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    void *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574A043CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_2574A0464()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A0480()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A049C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A04B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A04D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A04F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A050C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A0528()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A0544()
{
  return swift_getWitnessTable();
}

unint64_t sub_2574A0560()
{
  unint64_t result = qword_26A001800;
  if (!qword_26A001800)
  {
    type metadata accessor for AdamOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001800);
  }
  return result;
}

uint64_t sub_2574A05B0()
{
  __n128 v0 = OUTLINED_FUNCTION_64_0();
  return sub_25749A298(v1, v2, v3, v4, v5, v6, v7, v8, v0.n128_i64[0], v0.n128_i64[1]);
}

uint64_t sub_2574A05E0()
{
  uint64_t v0 = OUTLINED_FUNCTION_64_0().n128_u64[0];
  return sub_25749AC10(v1, v2, v3, v4, v5, v6, v7, v8, v0);
}

void *sub_2574A060C(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_25749F3EC(a1, a2, *a3);
}

void *sub_2574A0628(void *a1, uint64_t a2)
{
  return sub_2574A060C(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2574A0678(uint64_t a1)
{
  return sub_25749F688(a1);
}

uint64_t OUTLINED_FUNCTION_1_15@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return sub_2576A8D30();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return v0;
}

double OUTLINED_FUNCTION_5_7()
{
  *(_DWORD *)(v0 + 432) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  return result;
}

void OUTLINED_FUNCTION_6_6()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return OptimizerStateDictionary.init(_:)(v2, v1, v0, (uint64_t *)(v3 - 136));
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  *(_DWORD *)(v0 + 448) = 0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return sub_25747B47C(v0 + 400, v1 - 184);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  *(_DWORD *)(v0 + 416) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  return sub_25747B47C(v0 + 368, v1 - 176);
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return sub_2576A7B00();
}

void OUTLINED_FUNCTION_11_5()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

double OUTLINED_FUNCTION_12_5()
{
  *(_DWORD *)(v0 + 448) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

void OUTLINED_FUNCTION_15_5()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_25747B47C(v0 + 400, v1 - 184);
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  return sub_25747B47C(v0 + 368, v1 - 176);
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  __swift_project_boxed_opaque_existential_1(v1, v0);
  return sub_2576A91F0();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return sub_25747B47C(v1 - 184, v0 + 512);
}

double OUTLINED_FUNCTION_23_2()
{
  *(_DWORD *)(v0 + 416) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  return result;
}

void OUTLINED_FUNCTION_25_1()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_26_1()
{
  return sub_25747B47C(v1 - 176, v0 + 488);
}

void OUTLINED_FUNCTION_27_1()
{
  sub_2574720D8();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return sub_2576A8E20();
}

uint64_t OUTLINED_FUNCTION_30_1@<X0>(uint64_t (*a1)(uint64_t)@<X1>, void *a2@<X8>)
{
  return OptimizerStateDictionary.subscript.getter(v2, a1, a2);
}

void OUTLINED_FUNCTION_32_1(uint64_t a1@<X8>)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 12) = v3;
  *(_DWORD *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return sub_25747B47C(v0 + 384, v1 - 176);
}

double OUTLINED_FUNCTION_34_1()
{
  double result = 0.0;
  *(_OWORD *)(v0 + 476) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(_OWORD *)(v0 + 464) = 0u;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(unsigned char *)(v0 + 492) = 22;
  return result;
}

void OUTLINED_FUNCTION_38_0()
{
  static Tensor.* infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_39_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 128) = a1;
  return sub_2576A8D30();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return type metadata accessor for OptimizerStateDictionary();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return sub_2576A8E20();
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return sub_2576A8D00();
}

void OUTLINED_FUNCTION_45_0()
{
}

uint64_t OUTLINED_FUNCTION_47_0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 24) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_2576A75A0();
}

uint64_t OUTLINED_FUNCTION_48_0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 48) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_2576A75E0();
}

void OUTLINED_FUNCTION_49_0(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_51_0(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v5, a3, a4, a5, v6, v7, 2u);
}

__n128 OUTLINED_FUNCTION_52_0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return 16;
}

double OUTLINED_FUNCTION_54_0()
{
  *(_DWORD *)(v0 + 448) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return type metadata accessor for OptimizerStateDictionary();
}

void OUTLINED_FUNCTION_56_0()
{
  JUMPOUT(0x25A2BAC80);
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return sub_2576A8D50();
}

void OUTLINED_FUNCTION_60_0(unsigned __int8 a1@<W8>)
{
  unint64_t v5 = *(unsigned int *)(v2 + 32) | ((unint64_t)a1 << 32);
  *(_DWORD *)(v1 + 376) = *(_DWORD *)(v2 + 32);
  *(unsigned char *)(v1 + 380) = BYTE4(v5) & 1;
  *(void *)(v4 - 176) = v3;
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return v1;
}

__n128 OUTLINED_FUNCTION_64_0()
{
  return v0[5];
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  sub_257486C70(v0);
  return type metadata accessor for OptimizerStateDictionary();
}

uint64_t OUTLINED_FUNCTION_66_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t result = 255;
  *(void *)(v2 - 200) = *(void *)(a2 + 16);
  *(void *)(v2 - 192) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  *(void *)(v0 + 520) = v1;
  return sub_25747B240(v2 - 176, (uint64_t *)(v0 + 520));
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return v0;
}

void OUTLINED_FUNCTION_69_0()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  return sub_2576A8D00();
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return v0 + 376;
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return v0 + 400;
}

double OUTLINED_FUNCTION_74_0()
{
  *(_DWORD *)(v0 + 448) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 416) = 0u;
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  return result;
}

__n128 *OUTLINED_FUNCTION_75_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u32[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return sub_2576A8DE0();
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return v0 - 128;
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return sub_2576A8DE0();
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return type metadata accessor for OptimizerStateDictionary();
}

double OUTLINED_FUNCTION_81_0()
{
  *(_DWORD *)(v0 + 416) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  return result;
}

double OUTLINED_FUNCTION_82_0()
{
  *(_DWORD *)(v0 + 416) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_OWORD *)(v0 + 400) = 0u;
  *(_OWORD *)(v0 + 368) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_release_n();
}

__n128 OUTLINED_FUNCTION_84_0(__n128 *a1)
{
  __n128 result = v1[14];
  a1[1] = result;
  a1[2].n128_u32[0] = v3;
  v1[21].n128_u8[15] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return sub_2576A8E20();
}

unint64_t OUTLINED_FUNCTION_87_0()
{
  return 0xD00000000000003DLL;
}

uint64_t OUTLINED_FUNCTION_89_0(_WORD *a1)
{
  *a1 = 0;
  return sub_2576A7580();
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return sub_2576A8B50();
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return v0 - 208;
}

void OUTLINED_FUNCTION_92_0()
{
  sub_2574720D8();
}

uint64_t OUTLINED_FUNCTION_93_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_95_0()
{
  return sub_2576A8D50();
}

void OUTLINED_FUNCTION_97_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 128) = v9;
  *(void *)(v10 + 328) = &a9;
}

uint64_t OUTLINED_FUNCTION_98_0()
{
  return sub_2576A8DA0();
}

uint64_t OUTLINED_FUNCTION_100_0()
{
  return sub_25747B47C(v1 - 176, v0 + 520);
}

double OUTLINED_FUNCTION_101_0()
{
  return 0.0;
}

void OUTLINED_FUNCTION_102_0(uint64_t a1@<X8>)
{
  *(void *)(v1 + 40) = a1 & ~(a1 >> 63);
}

void OUTLINED_FUNCTION_103_0(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 4) = v2;
  *(_DWORD *)a1 = v1;
}

uint64_t OUTLINED_FUNCTION_104_0@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 65) = a1;
  return v1;
}

void OUTLINED_FUNCTION_105_0()
{
  *(unsigned char *)(v0 - 65) = 4;
}

float OUTLINED_FUNCTION_106_0()
{
  return *(float *)(v0 + 8);
}

float OUTLINED_FUNCTION_107_0()
{
  return *(float *)(v0 + 4);
}

__n128 *OUTLINED_FUNCTION_110_0(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u32[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_112()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_113()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_114()
{
  *(unsigned char *)(v0 - 128) = 0;
  return v0 - 128;
}

void OUTLINED_FUNCTION_115(uint64_t a1@<X8>)
{
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 80) = a1;
}

__n128 OUTLINED_FUNCTION_119(__n128 *a1)
{
  __n128 result = v1[14];
  a1[1] = result;
  a1[2].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_124()
{
  return sub_2576A8E70();
}

uint64_t OUTLINED_FUNCTION_125()
{
  return v0 + 336;
}

void OUTLINED_FUNCTION_130(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  sub_2574729F0(a2 > 1, v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_131(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8 * v5 + 32) = v4;
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_132@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 113) = a1;
  return v1;
}

uint64_t sub_2574A1344()
{
  OUTLINED_FUNCTION_27_2();
  unint64_t v4 = v3 & 0xC000000000000001;
  OUTLINED_FUNCTION_3_10();
  if (v4) {
    OUTLINED_FUNCTION_15_6();
  }
  else {
    id v5 = *(id *)(v0 + 32);
  }
  id v6 = v5;
  OUTLINED_FUNCTION_7_6();
  if (v4) {
    OUTLINED_FUNCTION_23_3();
  }
  else {
    id v7 = *(id *)(v0 + 40);
  }
  id v8 = v7;
  if (*(unsigned char *)(v2 + 56) == 1)
  {
    id v9 = v6;
    sub_2576A8730();
    uint64_t v11 = *(void *)(v2 + 24);
    uint64_t v10 = *(void *)(v2 + 32);
    sub_2576A7810();
    swift_bridgeObjectRelease();
    uint64_t v12 = OUTLINED_FUNCTION_32_2();
    id v6 = OUTLINED_FUNCTION_30_2(v12, v13, v14, v11, v10, v15, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
  }
  if (*(unsigned char *)(v2 + 57) == 1)
  {
    id v16 = v8;
    sub_2576A8730();
    uint64_t v18 = *(void *)(v2 + 24);
    uint64_t v17 = *(void *)(v2 + 32);
    sub_2576A7810();
    swift_bridgeObjectRelease();
    uint64_t v19 = OUTLINED_FUNCTION_32_2();
    id v8 = OUTLINED_FUNCTION_30_2(v19, v20, v21, v18, v17, v22, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v23 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v23 + 16) = xmmword_2576AC2A0;
  uint64_t v24 = *(void *)(v2 + 24);
  uint64_t v25 = *(void *)(v2 + 32);
  sub_2576A7810();
  *(void *)(v23 + 32) = sub_257479CB4((uint64_t)v6, (uint64_t)v8, v24, v25, v1, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
  sub_2576A7E20();

  return v23;
}

uint64_t sub_2574A1528()
{
  return sub_2574A1344();
}

unint64_t sub_2574A1540()
{
  sub_2574A4668(v0, (uint64_t)v2);
  if (v3 < 3) {
    return v3 + 1;
  }
  sub_2574A46C4((uint64_t)v2);
  return 0;
}

double sub_2574A1588()
{
  sub_2574A4668(v0, (uint64_t)&v6);
  if (v7 >= 3)
  {
    sub_257479260(&v6, (uint64_t)v5);
    sub_25746B3D0((uint64_t)v5, (uint64_t)v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
    if (swift_dynamicCast())
    {
      double v1 = *(float *)&v3;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_2576A8730();
        sub_2576A7B00();
        sub_2576A8A30();
        sub_2576A7B00();
        sub_25746BE6C();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      double v1 = v3;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_2574A46C4((uint64_t)&v6);
    return 0.0;
  }
  return v1;
}

uint64_t sub_2574A1720()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A7810();
    sub_2576A88E0();
    uint64_t v3 = 32;
    do
    {
      sub_2576A80E0();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2574A17E0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A7810();
    sub_2576A88E0();
    uint64_t v3 = 40;
    do
    {
      sub_2576A80E0();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      v3 += 16;
      --v1;
    }
    while (v1);
    uint64_t v2 = v5;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_2574A18A0()
{
  OUTLINED_FUNCTION_27_2();
  unint64_t v4 = v3 & 0xC000000000000001;
  OUTLINED_FUNCTION_3_10();
  if (v4) {
    OUTLINED_FUNCTION_15_6();
  }
  else {
    id v5 = *(id *)(v0 + 32);
  }
  long long v6 = v5;
  unint64_t v7 = sub_2574A1540();
  sub_2574A1720();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v8 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  sub_2574A17E0();
  id v9 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  double v10 = sub_2574A1588();
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  sub_2576A7810();
  sub_2574A45BC((uint64_t)v6, v7, (uint64_t)v8, (uint64_t)v9, v10, v12, v11, v1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_14(v13, (__n128)xmmword_2576AC2A0);
  return v15;
}

uint64_t sub_2574A19F0()
{
  return sub_2574A18A0();
}

uint64_t sub_2574A1A08(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v6 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_3_10();
  if (v6) {
    OUTLINED_FUNCTION_15_6();
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  id v8 = v7;
  OUTLINED_FUNCTION_7_6();
  if (v6) {
    OUTLINED_FUNCTION_23_3();
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  double v10 = v9;
  unint64_t v11 = sub_2574A1540();
  sub_2574A1720();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v12 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  sub_2574A17E0();
  uint64_t v13 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v3 + 24);
  uint64_t v14 = *(void *)(v3 + 32);
  sub_2576A7810();
  sub_2574A47EC((uint64_t)v8, (uint64_t)v10, v11, (uint64_t)v12, (uint64_t)v13, v15, v14, a1);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  id v16 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_14(v16, (__n128)xmmword_2576AC2A0);

  return v18;
}

uint64_t sub_2574A1B6C(void *a1, uint64_t a2)
{
  return sub_2574A1A08(a1, a2);
}

void *sub_2574A1B84()
{
  id v1 = objc_msgSend(self, sel_descriptorWithKernelWidth_kernelHeight_strideInX_strideInY_dilationRateInX_dilationRateInY_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_, *(void *)(v0 + 56), *(void *)(v0 + 48), *(void *)(v0 + 72), *(void *)(v0 + 64), 1, 1, *(void *)(v0 + 88), *(void *)(v0 + 88), *(void *)(v0 + 80), *(void *)(v0 + 80), 0, 0);
  if (!v1) {
    sub_2574A1D34();
  }
  uint64_t v2 = v1;
  if (*(__objc2_class **)v0 == _TtC14NeuralNetworks22Average2DPoolOperation)
  {
    uint64_t v3 = (unsigned __int8 *)(v0 + 192);
    goto LABEL_6;
  }
  if (*(__objc2_class **)v0 == _TtC14NeuralNetworks30Average2DPoolGradientOperation)
  {
    uint64_t v3 = (unsigned __int8 *)(v0 + 184);
LABEL_6:
    objc_msgSend(v1, sel_setIncludeZeroPadToAverage_, *v3);
  }
  objc_msgSend(v2, sel_setReturnIndicesMode_, 0);
  return v2;
}

void sub_2574A1D34()
{
  sub_257477068(v0, (uint64_t)v1);
  sub_2576A8730();
  sub_2576A7B00();
  sub_2576A7B00();
  sub_2574A4394();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  sub_2576A8B60();
  __break(1u);
}

void sub_2574A1E74(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
}

uint64_t sub_2574A1FD0(void *a1, uint64_t a2)
{
  return sub_2574A2010(a1, a2, (SEL *)&selRef_avgPooling2DWithSourceTensor_descriptor_name_);
}

uint64_t sub_2574A1FF0(void *a1, uint64_t a2)
{
  return sub_2574A2108(a1, a2, (SEL *)&selRef_avgPooling2DGradientWithGradientTensor_sourceTensor_descriptor_name_);
}

uint64_t sub_2574A2010(void *a1, uint64_t a2, SEL *a3)
{
  unint64_t v7 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v7) {
    id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  id v9 = v8;
  double v10 = sub_2574A1B84();
  uint64_t v12 = *(void *)(v3 + 24);
  uint64_t v11 = *(void *)(v3 + 32);
  sub_2576A7810();
  sub_257479CB4((uint64_t)v9, (uint64_t)v10, v12, v11, a1, a3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v13 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_14(v13, (__n128)xmmword_2576AC2A0);
  return v15;
}

uint64_t sub_2574A20E8(void *a1, uint64_t a2)
{
  return sub_2574A2010(a1, a2, (SEL *)&selRef_maxPooling2DWithSourceTensor_descriptor_name_);
}

uint64_t sub_2574A2108(void *a1, uint64_t a2, SEL *a3)
{
  unint64_t v7 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v7) {
    id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  id v9 = v8;
  OUTLINED_FUNCTION_16_5();
  if (v7) {
    id v10 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v10 = *(id *)(a2 + 40);
  }
  uint64_t v11 = v10;
  uint64_t v12 = sub_2574A1B84();
  uint64_t v14 = *(void *)(v3 + 24);
  uint64_t v13 = *(void *)(v3 + 32);
  sub_2576A7810();
  sub_2574A4890((uint64_t)v9, (uint64_t)v11, (uint64_t)v12, v14, v13, a1, a3);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_14(v15, (__n128)xmmword_2576AC2A0);
  return v17;
}

uint64_t sub_2574A2210(void *a1, uint64_t a2)
{
  return sub_2574A2108(a1, a2, (SEL *)&selRef_maxPooling2DGradientWithGradientTensor_sourceTensor_descriptor_name_);
}

void sub_2574A2230()
{
  OUTLINED_FUNCTION_6_7();
  uint64_t v2 = v1;
  unint64_t v4 = v3;
  unint64_t v5 = (unint64_t)v1 & 0xC000000000000001;
  sub_257582858(0, ((unint64_t)v1 & 0xC000000000000001) == 0, v1);
  if (v5) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, v2);
  }
  else {
    id v6 = v2[4];
  }
  unint64_t v7 = v6;
  sub_257582858(1, v5 == 0, v2);
  if (v5) {
    id v8 = (id)MEMORY[0x25A2B8DB0](1, v2);
  }
  else {
    id v8 = v2[5];
  }
  id v9 = v8;
  if (v0[7])
  {
    sub_257582858(2, v5 == 0, v2);
    if (v5) {
      id v10 = (id)MEMORY[0x25A2B8DB0](2, v2);
    }
    else {
      id v10 = v2[6];
    }
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_2574A25D0();
  OUTLINED_FUNCTION_9_8();
  id v18 = OUTLINED_FUNCTION_22_4(v12, v13, v14, v15, v16, v17, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
  if (!v11)
  {
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_1_16();
    id v41 = sub_257479CB4((uint64_t)v7, (uint64_t)v18, v39, v40, v4, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v42 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v42 + 16) = xmmword_2576AC2A0;
    *(void *)(v42 + 32) = v41;
    OUTLINED_FUNCTION_14_6();

    goto LABEL_24;
  }
  uint64_t v19 = *(void **)(v0[5] + 152);
  uint64_t v45 = v9;
  char v46 = v7;
  if (v19[2] < 3uLL || (uint64_t)v19[4] <= 1)
  {
    id v27 = v11;
    id v22 = v7;
    goto LABEL_18;
  }
  unint64_t v20 = v19[5] - 33;
  id v21 = v11;
  id v22 = v7;
  if (v20 < 0xFFFFFFFFFFFFFFE0)
  {
LABEL_18:
    int v26 = 0;
    goto LABEL_19;
  }
  sub_2574A25D0();
  OUTLINED_FUNCTION_1_16();
  id v25 = sub_257479CB4((uint64_t)v22, -1, v23, v24, v4, (SEL *)&selRef_flatten2DTensor_axis_name_);

  int v26 = 1;
  id v22 = v25;
LABEL_19:
  sub_2574A25D0();
  OUTLINED_FUNCTION_1_16();
  uint64_t v44 = v22;
  id v30 = sub_257479CB4((uint64_t)v22, (uint64_t)v18, v28, v29, v4, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
  uint64_t v31 = sub_2574A25D0();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  id v34 = sub_257479CB4((uint64_t)v30, (uint64_t)v11, v31, v33, v4, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);
  sub_25746D770(v0[8]);
  if (v26)
  {
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    char v35 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_1_16();
    id v38 = sub_257479CB4((uint64_t)v34, (uint64_t)v35, v36, v37, v4, (SEL *)&selRef_reshapeTensor_withShape_name_);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v38 = v34;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v43 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v43 + 16) = xmmword_2576AC2A0;
  *(void *)(v43 + 32) = v38;
  OUTLINED_FUNCTION_14_6();

LABEL_24:
  OUTLINED_FUNCTION_5_8();
}

uint64_t sub_2574A25D0()
{
  uint64_t v2 = *(void *)(v0 + 24);
  sub_2576A7810();
  sub_2576A7B00();
  sub_2576A7B00();
  return v2;
}

void sub_2574A2634()
{
}

void sub_2574A264C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_6_7();
  a23 = v25;
  a24 = v26;
  id v27 = v24;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  unint64_t v32 = (unint64_t)v28 & 0xC000000000000001;
  sub_257582858(0, ((unint64_t)v28 & 0xC000000000000001) == 0, v28);
  if (v32) {
    id v33 = (id)MEMORY[0x25A2B8DB0](0, v29);
  }
  else {
    id v33 = v29[4];
  }
  id v34 = v33;
  sub_257582858(1, v32 == 0, v29);
  if (v32) {
    id v35 = (id)MEMORY[0x25A2B8DB0](1, v29);
  }
  else {
    id v35 = v29[5];
  }
  unint64_t v65 = v35;
  sub_257582858(2, v32 == 0, v29);
  if (v32) {
    id v36 = (id)MEMORY[0x25A2B8DB0](2, v29);
  }
  else {
    id v36 = v29[6];
  }
  uint64_t v37 = v36;
  sub_2574A25D0();
  OUTLINED_FUNCTION_1_16();
  id v64 = sub_257479CB4((uint64_t)v34, (uint64_t)v37, v38, v39, v31, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
  uint64_t v40 = *(void *)(v27[5] + 152);
  if (*(void *)(v40 + 16) == 2)
  {
    id v41 = v34;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v42 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v42 + 16) = xmmword_2576ABB00;
    *(void *)(v42 + 32) = sub_2576A80E0();
    sub_25768B660(v40);
    if (v43)
    {
      __break(1u);
      goto LABEL_23;
    }
    *(void *)(v42 + 40) = sub_2576A80E0();
    a14 = v42;
    sub_2576A7E20();
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    OUTLINED_FUNCTION_26_2();
    uint64_t v44 = OUTLINED_FUNCTION_18_2();
    id v41 = OUTLINED_FUNCTION_24_1(v44, sel_reshapeTensor_withShape_name_);
  }
  uint64_t v45 = *(void *)(v27[6] + 152);
  if (*(void *)(v45 + 16) != 2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v47 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v47 + 16) = xmmword_2576ABB00;
    *(void *)(v47 + 32) = sub_2576A80E0();
    sub_25768B660(v45);
    if ((v48 & 1) == 0)
    {
      *(void *)(v47 + 40) = sub_2576A80E0();
      a14 = v47;
      sub_2576A7E20();
      sub_2574A4924(0, (unint64_t *)&qword_26A001870);
      OUTLINED_FUNCTION_26_2();
      OUTLINED_FUNCTION_18_2();
      id v46 = objc_msgSend(v31, sel_reshapeTensor_withShape_name_, v65, &a14, 0);

      goto LABEL_17;
    }
LABEL_23:
    __break(1u);
    return;
  }
  id v46 = v65;
LABEL_17:
  sub_2574A25D0();
  OUTLINED_FUNCTION_9_8();
  id v55 = OUTLINED_FUNCTION_22_4(v49, v50, v51, v52, v53, v54, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
  sub_2574A25D0();
  OUTLINED_FUNCTION_1_16();
  id v58 = sub_257479CB4((uint64_t)v55, (uint64_t)v46, v56, v57, v31, (SEL *)&selRef_matrixMultiplicationWithPrimaryTensor_secondaryTensor_name_);
  if (v27[8])
  {
    OUTLINED_FUNCTION_13_6();
    OUTLINED_FUNCTION_1_16();
    id v61 = sub_257479CB4((uint64_t)v41, 0, v59, v60, v31, (SEL *)&selRef_reductionSumWithTensor_axis_name_);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_2576ABB20;
    *(void *)(v62 + 32) = v64;
    *(void *)(v62 + 40) = v58;
    *(void *)(v62 + 48) = v61;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v63 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v63 + 16) = xmmword_2576ABB00;
    *(void *)(v63 + 32) = v64;
    *(void *)(v63 + 40) = v58;
  }
  OUTLINED_FUNCTION_14_6();

  OUTLINED_FUNCTION_5_8();
}

#error "2574A29E4: call analysis failed (funcsize=6)"

id sub_2574A29F0()
{
  id result = objc_msgSend(self, sel_descriptorWithStrideInX_strideInY_dilationRateInX_dilationRateInY_groups_paddingLeft_paddingRight_paddingTop_paddingBottom_paddingStyle_dataLayout_weightsLayout_, v0[9], v0[8], v0[13], v0[12], v0[14], v0[11], v0[11], v0[10], v0[10], 0, 0, 2);
  if (!result) {
    sub_2574A1D34();
  }
  return result;
}

id sub_2574A2B30()
{
  sub_2574A4924(0, &qword_26A001880);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2576ABB20;
  *(void *)(v0 + 32) = sub_2576A80E0();
  *(void *)(v0 + 40) = sub_2576A80E0();
  *(void *)(v0 + 48) = sub_2576A80E0();
  sub_2576A7E20();
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2576ABB20;
  *(void *)(v2 + 32) = sub_2576A80E0();
  *(void *)(v2 + 40) = sub_2576A80E0();
  *(void *)(v2 + 48) = sub_2576A80E0();
  sub_2576A7E20();
  uint64_t v3 = v2;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_2576ABB40;
  *(void *)(v4 + 32) = sub_2576A80E0();
  *(void *)(v4 + 40) = sub_2576A80E0();
  *(void *)(v4 + 48) = sub_2576A80E0();
  *(void *)(v4 + 56) = sub_2576A80E0();
  *(void *)(v4 + 64) = sub_2576A80E0();
  *(void *)(v4 + 72) = sub_2576A80E0();
  sub_2576A7E20();
  id v5 = sub_2574A2D88(v1, v3, v4, 0);
  if (!v5) {
    sub_2574A1D34();
  }
  id v6 = v5;
  objc_msgSend(v5, sel_setChannelDimensionIndex_, -3);
  return v6;
}

id sub_2574A2D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v5 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v6 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  unint64_t v7 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_descriptorWithStrides_dilationRates_paddingValues_paddingStyle_, v5, v6, v7, a4);

  return v8;
}

BOOL sub_2574A2E70()
{
  if ((uint64_t)v0[14] < 2) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0[6] + 152);
  unint64_t v2 = *(void *)(v1 + 16);
  if (v2 <= 1)
  {
    sub_2576A7810();
    sub_25746BF88();
  }
  if (*(void *)(v1 + 40) != 1) {
    return 0;
  }
  return v2 > 3 && *(void *)(*(void *)(v0[5] + 152) + 16) > 3uLL;
}

void sub_2574A2F3C(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_12_6(a1, a2);
  if (v2) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, v5);
  }
  else {
    id v7 = v5[4];
  }
  id v8 = v7;
  OUTLINED_FUNCTION_16_5();
  if (v2) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, v5);
  }
  else {
    id v9 = v5[5];
  }
  id v10 = v9;
  if (*(void *)(v3 + 56))
  {
    OUTLINED_FUNCTION_20_5();
    if (v2) {
      id v11 = (id)MEMORY[0x25A2B8DB0](2, v5);
    }
    else {
      id v11 = v5[6];
    }
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (sub_2574A2E70())
  {
    sub_2574A25D0();
    OUTLINED_FUNCTION_9_8();
    id v15 = sub_2574A4890((uint64_t)v10, -3, -4, v13, v14, v4, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
    sub_2574A2B30();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_9_8();
    id v18 = sub_2574A4890((uint64_t)v8, (uint64_t)v15, (uint64_t)v6, v16, v17, v4, (SEL *)&selRef_depthwiseConvolution3DWithSourceTensor_weightsTensor_descriptor_name_);
  }
  else
  {
    sub_2574A29F0();
    OUTLINED_FUNCTION_31_2();
    OUTLINED_FUNCTION_9_8();
    id v18 = sub_2574A4890((uint64_t)v8, (uint64_t)v10, (uint64_t)v6, v19, v20, v4, (SEL *)&selRef_convolution2DWithSourceTensor_weightsTensor_descriptor_name_);
  }

  if (!v12)
  {
LABEL_21:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v31 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v31 + 16) = xmmword_2576AC2A0;
    if (v18)
    {
      *(void *)(v31 + 32) = v18;
      sub_2576A7E20();

      return;
    }
    goto LABEL_25;
  }
  id v33 = v10;
  uint64_t v21 = *(void *)(*(void *)(v3 + 192) + 16);
  id v22 = v12;
  uint64_t v23 = sub_257608D64(1, v21);
  uint64_t v24 = sub_25752E84C();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582A78();
    uint64_t v23 = v32;
  }
  if (*(void *)(v23 + 16) < 2uLL)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = sub_2576A7810();
  sub_25746D770(v25);
  swift_bridgeObjectRelease();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v26 = (void *)OUTLINED_FUNCTION_26_2();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v4, sel_reshapeTensor_withShape_name_, v22, v26, 0);

  if (v18)
  {
    id v28 = v18;
    swift_bridgeObjectRelease();
    sub_2574A25D0();
    OUTLINED_FUNCTION_1_16();
    id v18 = sub_257479CB4((uint64_t)v28, (uint64_t)v27, v29, v30, v4, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);

    id v10 = v33;
    goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

void sub_2574A3224(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_2574A323C(void *a1, unint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v7 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_3_10();
  if (v7) {
    OUTLINED_FUNCTION_15_6();
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  id v9 = v8;
  OUTLINED_FUNCTION_7_6();
  if (v7) {
    OUTLINED_FUNCTION_23_3();
  }
  else {
    id v10 = *(id *)(a2 + 40);
  }
  id v11 = v10;
  OUTLINED_FUNCTION_19_5();
  if (v7) {
    id v12 = (id)MEMORY[0x25A2B8DB0](2, a2);
  }
  else {
    id v12 = *(id *)(a2 + 48);
  }
  uint64_t v13 = (uint64_t)v12;
  uint64_t v57 = MEMORY[0x263F8EE78];
  sub_2574FD024(2, 0);
  sub_2576A7E20();
  uint64_t v56 = (void *)v13;
  if (sub_2574A2E70())
  {
    sub_2574A25D0();
    OUTLINED_FUNCTION_9_8();
    id v3 = sub_2574A4890(v13, -3, -4, v14, v15, a1, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
    uint64_t v16 = sub_25752DDC8();
    if (*(void *)(v16 + 16))
    {
      uint64_t v17 = *(void *)(v16 + 32);
      sub_2576A7810();
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_25746D770(v17);
      swift_bridgeObjectRelease();
      id v19 = sub_2574A2B30();
      sub_2574A25D0();
      OUTLINED_FUNCTION_10_5();
      id v55 = v3;
      id v22 = sub_2574A4960((uint64_t)v9, (uint64_t)v3, v18, (uint64_t)v19, v20, v21, a1);

      id v3 = v22;
      MEMORY[0x25A2B83B0]();
      OUTLINED_FUNCTION_21_4();
      if (!v23)
      {
LABEL_12:
        sub_2576A7ED0();
        sub_2576A7E20();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2576AE070;
        *(void *)(inited + 32) = 1;
        uint64_t v25 = *(void **)(v4[6] + 152);
        if (!v25[2]
          || (*(void *)(inited + 40) = v25[4], v25[2] <= 2uLL)
          || (*(void *)(inited + 48) = v25[6], v25[2] <= 3uLL))
        {
          sub_2576A7810();
          sub_25746BF88();
        }
        *(void *)(inited + 56) = v25[7];
        sub_25746D770(inited);
        swift_setDeallocating();
        sub_2574A4924(0, (unint64_t *)&qword_26A001870);
        uint64_t v26 = (void *)sub_2576A7DE0();
        swift_bridgeObjectRelease();
        id v27 = sub_2574A2B30();
        sub_2574A25D0();
        OUTLINED_FUNCTION_10_5();
        uint64_t v30 = sub_2574A4A34((uint64_t)v9, (uint64_t)v11, (uint64_t)v26, (uint64_t)v27, v28, v29, a1, (SEL *)&selRef_depthwiseConvolution3DWeightsGradientWithIncomingGradientTensor_sourceTensor_outputShape_descriptor_name_);

        id v31 = sub_2574A4890((uint64_t)v30, -3, -4, 30564, 0xE200000000000000, a1, (SEL *)&selRef_transposeTensor_dimension_withDimension_name_);
        uint64_t v32 = &v57;
        MEMORY[0x25A2B83B0]();
        if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_16;
        }
        goto LABEL_35;
      }
LABEL_33:
      OUTLINED_FUNCTION_2_12();
      goto LABEL_12;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v33 = sub_25752DDC8();
  if (!*(void *)(v33 + 16)) {
    goto LABEL_32;
  }
  uint64_t v34 = v13;
  uint64_t v35 = *(void *)(v33 + 32);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  sub_25746D770(v35);
  OUTLINED_FUNCTION_18_2();
  id v3 = (id)sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v30 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v31 = sub_2574A29F0();
  sub_2574A25D0();
  OUTLINED_FUNCTION_10_5();
  id v38 = sub_2574A4A34((uint64_t)v9, v34, (uint64_t)v30, (uint64_t)v31, v36, v37, a1, (SEL *)&selRef_convolution2DDataGradientWithIncomingGradientTensor_weightsTensor_outputShape_forwardConvolutionDescriptor_name_);

  id v39 = v38;
  MEMORY[0x25A2B83B0]();
  OUTLINED_FUNCTION_21_4();
  if (v23) {
    OUTLINED_FUNCTION_2_12();
  }
  sub_2576A7ED0();
  sub_2576A7E20();
  uint64_t v32 = v4;
  uint64_t v40 = sub_25752DDC8();
  if (*(void *)(v40 + 16) < 2uLL)
  {
    __break(1u);
LABEL_35:
    OUTLINED_FUNCTION_2_12();
LABEL_16:
    sub_2576A7ED0();
    sub_2576A7E20();

    goto LABEL_24;
  }
  uint64_t v41 = *(void *)(v40 + 48);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  sub_25746D770(v41);
  OUTLINED_FUNCTION_18_2();
  uint64_t v42 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v43 = sub_2574A29F0();
  sub_2574A25D0();
  OUTLINED_FUNCTION_10_5();
  id v46 = sub_2574A4A34((uint64_t)v9, (uint64_t)v11, (uint64_t)v42, (uint64_t)v43, v44, v45, a1, (SEL *)&selRef_convolution2DWeightsGradientWithIncomingGradientTensor_sourceTensor_outputShape_forwardConvolutionDescriptor_name_);

  id v47 = v46;
  uint64_t v32 = &v57;
  MEMORY[0x25A2B83B0]();
  if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    OUTLINED_FUNCTION_2_12();
  }
  sub_2576A7ED0();
  sub_2576A7E20();

LABEL_24:
  if (v4[7])
  {
    sub_25746D770((uint64_t)&unk_27065D330);
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    OUTLINED_FUNCTION_26_2();
    uint64_t v48 = OUTLINED_FUNCTION_18_2();
    id v49 = OUTLINED_FUNCTION_24_1(v48, sel_reductionSumWithTensor_axes_name_);

    id v50 = v49;
    OUTLINED_FUNCTION_13_6();
    uint64_t v51 = (void *)sub_2576A79C0();
    swift_bridgeObjectRelease();
    id v52 = objc_msgSend(a1, sel_squeezeTensor_name_, v50, v51);

    id v53 = v52;
    MEMORY[0x25A2B83B0]();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      OUTLINED_FUNCTION_2_12();
    }
    sub_2576A7ED0();
    sub_2576A7E20();

    id v11 = v56;
  }
  else
  {
    id v53 = v56;
  }

  return v57;
}

uint64_t sub_2574A38E4(void *a1, unint64_t a2)
{
  return sub_2574A323C(a1, a2);
}

void sub_2574A38FC()
{
  OUTLINED_FUNCTION_6_7();
  OUTLINED_FUNCTION_12_6(v4, v5);
  if (v0) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, v3);
  }
  else {
    id v6 = v3[4];
  }
  id v27 = v6;
  OUTLINED_FUNCTION_16_5();
  if (v0) {
    id v7 = (id)MEMORY[0x25A2B8DB0](1, v3);
  }
  else {
    id v7 = v3[5];
  }
  uint64_t v26 = v7;
  if (*(void *)(v1 + 56))
  {
    OUTLINED_FUNCTION_20_5();
    if (v0) {
      id v8 = (id)MEMORY[0x25A2B8DB0](2, v3);
    }
    else {
      id v8 = v3[6];
    }
    id v9 = v8;
  }
  else
  {
    id v9 = 0;
  }
  uint64_t v10 = *(void *)(v1 + 192);
  sub_25746D770(v10);
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v11 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v12 = sub_2574A29F0();
  sub_2574A25D0();
  uint64_t v13 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v2, sel_convolutionTranspose2DWithSourceTensor_weightsTensor_outputShape_descriptor_name_, v27, v26, v11, v12, v13);

  if (!v9) {
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)(v10 + 16);
  id v16 = v14;
  id v17 = v9;
  uint64_t v18 = sub_257608D64(1, v15);
  uint64_t v19 = sub_25752DE44();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582A78();
    uint64_t v18 = v25;
  }
  if (*(void *)(v18 + 16) >= 2uLL)
  {
    *(void *)(v18 + 40) = v19;
    sub_25746D770(v18);
    swift_bridgeObjectRelease();
    uint64_t v20 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v2, sel_reshapeTensor_withShape_name_, v17, v20, 0);

    sub_2574A25D0();
    OUTLINED_FUNCTION_1_16();
    id v14 = sub_257479CB4((uint64_t)v16, (uint64_t)v21, v22, v23, v2, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);

LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v24 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v24 + 16) = xmmword_2576AC2A0;
    *(void *)(v24 + 32) = v14;
    OUTLINED_FUNCTION_14_6();

    OUTLINED_FUNCTION_5_8();
    return;
  }
  __break(1u);
}

void sub_2574A3BA4()
{
}

void sub_2574A3BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_6_7();
  uint64_t v17 = v14;
  uint64_t v19 = v18;
  id v21 = v20;
  unint64_t v22 = (unint64_t)v18 & 0xC000000000000001;
  OUTLINED_FUNCTION_3_10();
  if (v22) {
    OUTLINED_FUNCTION_15_6();
  }
  else {
    id v23 = v19[4];
  }
  uint64_t v24 = v23;
  OUTLINED_FUNCTION_7_6();
  if (v22) {
    OUTLINED_FUNCTION_23_3();
  }
  else {
    id v25 = v19[5];
  }
  uint64_t v26 = v25;
  OUTLINED_FUNCTION_19_5();
  if (v22) {
    id v27 = (id)MEMORY[0x25A2B8DB0](2, v19);
  }
  else {
    id v27 = v19[6];
  }
  uint64_t v45 = v27;
  uint64_t v28 = sub_25752DDC8();
  if (!*(void *)(v28 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  a11 = v26;
  uint64_t v29 = *(void *)(v28 + 32);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  sub_25746D770(v29);
  swift_bridgeObjectRelease();
  id v16 = (id)sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v30 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v31 = sub_2574A29F0();
  sub_2574A25D0();
  OUTLINED_FUNCTION_10_5();
  id v15 = sub_2574A4A34((uint64_t)v24, (uint64_t)v45, (uint64_t)v30, (uint64_t)v31, v32, v33, v21, (SEL *)&selRef_convolutionTranspose2DDataGradientWithIncomingGradientTensor_weightsTensor_outputShape_forwardConvolutionDescriptor_name_);

  uint64_t v34 = sub_25752DDC8();
  if (*(void *)(v34 + 16) < 2uLL)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    sub_2576A7E70();
    goto LABEL_13;
  }
  uint64_t v35 = *(void *)(v34 + 48);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  sub_25746D770(v35);
  OUTLINED_FUNCTION_18_2();
  uint64_t v36 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v37 = sub_2574A29F0();
  sub_2574A25D0();
  OUTLINED_FUNCTION_10_5();
  id v40 = sub_2574A4A34((uint64_t)v24, (uint64_t)v26, (uint64_t)v36, (uint64_t)v37, v38, v39, v21, (SEL *)&selRef_convolutionTranspose2DWeightsGradientWithIncomingGradientTensor_sourceTensor_outputShape_forwardConvolutionDescriptor_name_);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v41 = OUTLINED_FUNCTION_29_2();
  *(_OWORD *)(v41 + 16) = xmmword_2576ABB00;
  *(void *)(v41 + 32) = v15;
  *(void *)(v41 + 40) = v40;
  OUTLINED_FUNCTION_14_6();
  if (!*(void *)(v17 + 56))
  {

    goto LABEL_15;
  }
  id v15 = v15;
  id v16 = v40;
  uint64_t v42 = sub_25746D770((uint64_t)&unk_27065D368);
  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_1_16();
  id v21 = sub_2574A4730((uint64_t)v24, v42, v43, v44, v21);
  MEMORY[0x25A2B83B0]();
  if (*(void *)((a14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_19;
  }
LABEL_13:
  sub_2576A7ED0();
  sub_2576A7E20();

LABEL_15:
  OUTLINED_FUNCTION_5_8();
}

#error "2574A3EC8: call analysis failed (funcsize=6)"

uint64_t sub_2574A3ED4(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001808, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A3F2C(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001810, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A3F84(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001818, (void (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A3FDC(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001820, (void (*)(uint64_t))type metadata accessor for Convolution2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A4034(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001828, (void (*)(uint64_t))type metadata accessor for LinearGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A408C(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001830, (void (*)(uint64_t))type metadata accessor for LinearOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A40E4(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001838, (void (*)(uint64_t))type metadata accessor for Max2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A413C(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001840, (void (*)(uint64_t))type metadata accessor for Max2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A4194(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001848, (void (*)(uint64_t))type metadata accessor for Average2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A41EC(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001850, (void (*)(uint64_t))type metadata accessor for Average2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A4244(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001858, (void (*)(uint64_t))type metadata accessor for PadGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A429C(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001860, (void (*)(uint64_t))type metadata accessor for PadOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A42F4(uint64_t a1)
{
  uint64_t result = sub_2574A434C(&qword_26A001868, (void (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A434C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574A4394()
{
  return 96;
}

uint64_t sub_2574A4404()
{
  OUTLINED_FUNCTION_17_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001888);
  sub_2576A7A30();
  OUTLINED_FUNCTION_28_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_6();
  return v1;
}

uint64_t sub_2574A4458()
{
  OUTLINED_FUNCTION_18_5();
  sub_2576A7A30();
  OUTLINED_FUNCTION_28_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_6();
  return v1;
}

uint64_t sub_2574A44A4()
{
  OUTLINED_FUNCTION_17_4();
  sub_2576A7810();
  sub_2576A7A30();
  OUTLINED_FUNCTION_28_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_6();
  return v1;
}

uint64_t sub_2574A44F8()
{
  OUTLINED_FUNCTION_18_5();
  sub_2576A7810();
  sub_2576A7A30();
  OUTLINED_FUNCTION_28_2();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_6();
  return v1;
}

uint64_t sub_2574A4548(uint64_t a1)
{
  uint64_t v3 = 96;
  unint64_t v4 = 0xE100000000000000;
  sub_2574A4AE8(a1, (uint64_t)&v2);
  sub_2576A7A30();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  return v3;
}

id sub_2574A45BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a8, sel_padTensor_withPaddingMode_leftPadding_rightPadding_constantValue_name_, a1, a2, a3, a4, v14, a5);

  return v15;
}

uint64_t sub_2574A4668(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2574A46C4(uint64_t a1)
{
  return a1;
}

id sub_2574A4718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_257479CB4(a1, a2, a3, a4, a5, (SEL *)&selRef_additionWithPrimaryTensor_secondaryTensor_name_);
}

id sub_2574A4724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_257479CB4(a1, a2, a3, a4, a5, (SEL *)&selRef_reshapeTensor_withShape_name_);
}

id sub_2574A4730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v7 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_reductionSumWithTensor_axes_name_, a1, v7, v8);

  return v9;
}

id sub_2574A47EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a8, sel_padGradientWithIncomingGradientTensor_sourceTensor_paddingMode_leftPadding_rightPadding_name_, a1, a2, a3, a4, a5, v14);

  return v15;
}

id sub_2574A4890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, SEL *a7)
{
  id v12 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a6, *a7, a1, a2, a3, v12);

  return v13;
}

uint64_t sub_2574A4924(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_2574A4960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v11 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v12 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a7, sel_depthwiseConvolution3DDataGradientWithIncomingGradientTensor_weightsTensor_outputShape_descriptor_name_, a1, a2, v11, a4, v12);

  return v13;
}

id sub_2574A4A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, SEL *a8)
{
  uint64_t v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a7, *a8, a1, a2, a3, a4, v14);

  return v15;
}

uint64_t sub_2574A4AD0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return sub_2576A7810();
  }
  return result;
}

uint64_t sub_2574A4AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_14(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return sub_2576A7E20();
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return sub_2576A7E70();
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_257582858(0, v3, v1);
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_257582858(1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_8_6()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t a1, uint64_t a2)
{
  BOOL v4 = (a2 & 0xC000000000000001) == 0;
  return sub_257582858(0, v4, a2);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return sub_2574A25D0();
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return sub_2576A7E20();
}

void OUTLINED_FUNCTION_15_6()
{
  JUMPOUT(0x25A2B8DB0);
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_257582858(1, v3, v1);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  return sub_257582858(2, v0 == 0, v1);
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return sub_257582858(2, v0 == 0, v1);
}

id OUTLINED_FUNCTION_22_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  return sub_2574A4890(v8, -1, -2, a4, a5, v7, a7);
}

void OUTLINED_FUNCTION_23_3()
{
  JUMPOUT(0x25A2B8DB0);
}

id OUTLINED_FUNCTION_24_1(uint64_t a1, const char *a2)
{
  return objc_msgSend(v4, a2, v3, v2, 0);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_2574A25D0();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return sub_2576A7DE0();
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_30_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, SEL *a7)
{
  return sub_2574A4890(v8, -1, -2, a4, a5, v7, a7);
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return sub_2574A25D0();
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return sub_2576A7B00();
}

BOOL LearningPhase.isTraining.getter()
{
  if (*v0) {
    return *v0 == 1;
  }
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v3);
  swift_release();
  if (v4) {
    uint64_t v1 = *(unsigned __int8 *)(v4 + 24);
  }
  else {
    uint64_t v1 = 0;
  }
  sub_2574718B0((uint64_t)v3);
  return v1;
}

uint64_t LearningPhase.description.getter()
{
  uint64_t v1 = 0x676E696E69617274;
  if (*v0 != 1) {
    uint64_t v1 = 0x636E657265666E69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6974616D6F747561;
  }
}

NeuralNetworks::LearningPhase_optional __swiftcall LearningPhase.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  char *v1 = v2;
  return (NeuralNetworks::LearningPhase_optional)rawValue;
}

uint64_t LearningPhase.rawValue.getter()
{
  return *v0;
}

uint64_t sub_2574A4F6C()
{
  return sub_2576A361C(*v0);
}

uint64_t sub_2574A4F74(uint64_t a1)
{
  return sub_2575EEAC4(a1, *v1);
}

NeuralNetworks::LearningPhase_optional sub_2574A4F7C(Swift::Int *a1)
{
  return LearningPhase.init(rawValue:)(*a1);
}

uint64_t sub_2574A4F84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LearningPhase.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_2574A4FAC()
{
  return sub_2576A7DC0();
}

uint64_t sub_2574A500C()
{
  return sub_2576A7D80();
}

unint64_t sub_2574A5064()
{
  unint64_t result = qword_26A001890;
  if (!qword_26A001890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001890);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LearningPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    void *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574A517CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LearningPhase()
{
  return &type metadata for LearningPhase;
}

unint64_t sub_2574A51B4()
{
  unint64_t result = qword_26A001898;
  if (!qword_26A001898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001898);
  }
  return result;
}

id sub_2574A5200()
{
  uint64_t v1 = v0;
  sub_2575D3B18((uint64_t)&v33);
  char v2 = v34;
  swift_bridgeObjectRelease();
  LOBYTE(v29[0]) = v2;
  uint64_t v3 = sub_25764701C();
  sub_2574A59E4(v1 + 48, (uint64_t)&v33);
  sub_2574A5A40((uint64_t)&v33, (uint64_t)v29);
  if (v32)
  {
    if (v32 == 1)
    {
      sub_257479260(v29, (uint64_t)v27);
      sub_257479260(v30, (uint64_t)v25);
      sub_257479260(&v31, (uint64_t)v23);
      id v4 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 2, v3);
      if (v4)
      {
        uint64_t v5 = v28;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        *(float *)&double v6 = sub_2575D3B2C(v5);
        objc_msgSend(v4, sel_setMean_, v6);
        uint64_t v7 = v26;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        *(float *)&double v8 = sub_2575D3B2C(v7);
        objc_msgSend(v4, sel_setStandardDeviation_, v8);
        uint64_t v9 = v24;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        *(float *)&double v10 = -sub_2575D3B2C(v9);
        objc_msgSend(v4, sel_setMin_, v10);
        uint64_t v11 = v24;
        __swift_project_boxed_opaque_existential_1(v23, v24);
        *(float *)&double v12 = sub_2575D3B2C(v11);
        objc_msgSend(v4, sel_setMax_, v12);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }
    else
    {
      sub_257479260(v29, (uint64_t)v27);
      sub_257479260(v30, (uint64_t)v25);
      id v4 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 0, v3);
      if (v4)
      {
        uint64_t v17 = v28;
        __swift_project_boxed_opaque_existential_1(v27, v28);
        if (v3 == 536870944)
        {
          objc_msgSend(v4, sel_setMinInteger_, sub_2575D3C78(v17));
          uint64_t v18 = v26;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          objc_msgSend(v4, sel_setMaxInteger_, sub_2575D3C78(v18));
        }
        else
        {
          *(float *)&double v19 = sub_2575D3B2C(v17);
          objc_msgSend(v4, sel_setMin_, v19);
          uint64_t v20 = v26;
          __swift_project_boxed_opaque_existential_1(v25, v26);
          *(float *)&double v21 = sub_2575D3B2C(v20);
          objc_msgSend(v4, sel_setMax_, v21);
        }
      }
    }
  }
  else
  {
    sub_257479260(v29, (uint64_t)v27);
    sub_257479260(v30, (uint64_t)v25);
    id v4 = objc_msgSend(self, sel_descriptorWithDistribution_dataType_, 1, v3);
    if (v4)
    {
      uint64_t v13 = v28;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      *(float *)&double v14 = sub_2575D3B2C(v13);
      objc_msgSend(v4, sel_setMean_, v14);
      uint64_t v15 = v26;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      *(float *)&double v16 = sub_2575D3B2C(v15);
      objc_msgSend(v4, sel_setStandardDeviation_, v16);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v4;
}

uint64_t sub_2574A55A4(void *a1, uint64_t a2)
{
  id v5 = sub_2574A5200();
  if (!v5)
  {
    v23[0] = 0xD00000000000002ELL;
    v23[1] = 0x80000002576C5D00;
    char v24 = 3;
    if (*(unsigned char *)(v2 + 241))
    {
      int64x2_t v18 = vdupq_n_s64(0x12uLL);
      v18.i64[0] = (uint64_t)"encode(to:inputs:)";
      int64x2_t v19 = vdupq_n_s64(0x6FuLL);
      v19.i64[0] = (uint64_t)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Backends/MPSGrap"
                            "h/MPSRandomOp.swift";
      long long v20 = xmmword_2576AE330;
      char v21 = 2;
      char v22 = 2;
    }
    else
    {
      char v22 = *(unsigned char *)(v2 + 240);
      long long v20 = *(_OWORD *)(v2 + 208);
      int64x2_t v18 = *(int64x2_t *)(v2 + 224);
      int64x2_t v19 = *(int64x2_t *)(v2 + 184);
      char v21 = *(unsigned char *)(v2 + 200);
    }
    int64x2_t v25 = v19;
    char v26 = v21;
    long long v27 = v20;
    int64x2_t v28 = v18;
    char v29 = v22;
    sub_2574A1D34();
  }
  double v6 = v5;
  sub_2575D3B18((uint64_t)v23);
  sub_25746D770(v23[0]);
  swift_bridgeObjectRelease();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v7 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  uint64_t v9 = v8;
  sub_2576A7810();
  double v10 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(a1, sel_randomTensorWithShape_descriptor_stateTensor_name_, v7, v6, v9, v10);

  sub_2574A4924(0, (unint64_t *)&qword_26A000E80);
  uint64_t v12 = sub_2576A7DF0();

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2576AC2A0;
  sub_257582858(0, (v12 & 0xC000000000000001) == 0, v12);
  if ((v12 & 0xC000000000000001) != 0) {
    id v14 = (id)MEMORY[0x25A2B8DB0](0, v12);
  }
  else {
    id v14 = *(id *)(v12 + 32);
  }
  id v15 = v14;
  swift_bridgeObjectRelease();
  *(void *)(v13 + 32) = v15;
  v23[0] = v13;
  sub_2576A7E20();
  uint64_t v16 = v23[0];

  return v16;
}

uint64_t sub_2574A5824(void *a1, uint64_t a2)
{
  return sub_2574A55A4(a1, a2);
}

uint64_t sub_2574A583C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2576AC2A0;
  uint64_t v4 = v1[7];
  uint64_t v6 = v1[3];
  uint64_t v5 = v1[4];
  sub_2576A7810();
  *(void *)(v3 + 32) = sub_2574A5A9C(v4, v6, v5, a1);
  sub_2576A7E20();
  return v3;
}

uint64_t sub_2574A58D4(void *a1)
{
  return sub_2574A583C(a1);
}

uint64_t sub_2574A58EC(uint64_t a1)
{
  uint64_t result = sub_2574A599C(&qword_26A0018A0, (void (*)(uint64_t))type metadata accessor for RandomStateOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A5944(uint64_t a1)
{
  uint64_t result = sub_2574A599C((unint64_t *)&qword_26A001308, (void (*)(uint64_t))type metadata accessor for RandomOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A599C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574A59E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2574A5A40(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_2574A5A9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a4, sel_randomPhiloxStateTensorWithSeed_name_, a1, v6);

  return v7;
}

NeuralNetworks::ReductionKind_optional __swiftcall ReductionKind.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_2576A8CC0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ReductionKind.allCases.getter()
{
  return &unk_27065DD18;
}

uint64_t ReductionKind.rawValue.getter()
{
  return qword_2576AE488[*v0];
}

uint64_t sub_2574A5B90(char *a1, char *a2)
{
  return sub_2575751F8(*a1, *a2);
}

unint64_t sub_2574A5BA0()
{
  unint64_t result = qword_26A0018A8;
  if (!qword_26A0018A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0018A8);
  }
  return result;
}

uint64_t sub_2574A5BEC()
{
  return sub_2576A3620(*v0);
}

uint64_t sub_2574A5BF4()
{
  return sub_2574702E0();
}

uint64_t sub_2574A5BFC(uint64_t a1)
{
  return sub_2575EF064(a1, *v1);
}

NeuralNetworks::ReductionKind_optional sub_2574A5C04(Swift::String *a1)
{
  return ReductionKind.init(rawValue:)(*a1);
}

uint64_t sub_2574A5C10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ReductionKind.rawValue.getter();
  *a1 = result;
  a1[1] = 0xE300000000000000;
  return result;
}

unint64_t sub_2574A5C40()
{
  unint64_t result = qword_26A0018B0;
  if (!qword_26A0018B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0018B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0018B0);
  }
  return result;
}

void sub_2574A5C94(void *a1@<X8>)
{
  *a1 = &unk_27065DD18;
}

uint64_t getEnumTagSinglePayload for ReductionKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ReductionKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    void *result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574A5DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReductionKind()
{
  return &type metadata for ReductionKind;
}

uint64_t sub_2574A5E30(uint64_t a1)
{
  void (*v5)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void v10[3];
  uint64_t v11;
  uint64_t v12;

  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  v10[2] = a1;
  id v11 = v1;
  uint64_t v5 = *(void (**)(uint64_t *__return_ptr, void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  unsigned int v6 = sub_2574A4924(0, (unint64_t *)&qword_26A000E80);
  v5(&v12, sub_2574A62D8, v10, v6, ObjectType, v3);
  BOOL v7 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  id v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2576AC2A0;
  *(void *)(v8 + 32) = v7;
  uint64_t v12 = v8;
  sub_2576A7E20();
  return v12;
}

void sub_2574A5F24(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  if (a1)
  {
    uint64_t v8 = MEMORY[0x25A2B7760](a1, a2 - a1);
    unint64_t v10 = v9;
    id v11 = (void *)sub_2576A7150();
    sub_25747F154(v8, v10);
    uint64_t v12 = *(void *)(a4 + 64);
    uint64_t ObjectType = swift_getObjectType();
    if (sub_257611DF8())
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 16))(&v17, ObjectType, v12);
      sub_25746D770(v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_2576AC2A0;
      sub_2574A4924(0, (unint64_t *)&qword_26A001870);
      *(void *)(v14 + 32) = sub_2576A8440();
      uint64_t v17 = v14;
      sub_2576A7E20();
    }
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    id v15 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v17, ObjectType, v12);
    id v16 = objc_msgSend(a3, sel_constantWithData_shape_dataType_, v11, v15, sub_25764701C());

    *a5 = v16;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2574A60F0(uint64_t a1)
{
  return sub_2574A5E30(a1);
}

uint64_t sub_2574A6108(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_25746D770(*(void *)(v1 + 40));
  uint64_t v5 = sub_25764701C();
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  sub_2576A7810();
  id v8 = sub_2574A62F4(v4, v5, v6, v7, a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2576AC2A0;
  *(void *)(v9 + 32) = v8;
  uint64_t v11 = v9;
  sub_2576A7E20();
  return v11;
}

uint64_t sub_2574A61C8(void *a1)
{
  return sub_2574A6108(a1);
}

uint64_t sub_2574A61E0(uint64_t a1)
{
  uint64_t result = sub_2574A6290(&qword_26A0018C0, (void (*)(uint64_t))type metadata accessor for InputOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A6238(uint64_t a1)
{
  uint64_t result = sub_2574A6290(&qword_26A0018C8, (void (*)(uint64_t))type metadata accessor for ConstantOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A6290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2574A62D8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_2574A5F24(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), a3);
}

id sub_2574A62F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v7 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_placeholderWithShape_dataType_name_, v7, a2, v8);

  return v9;
}

uint64_t sub_2574A63B0(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      if (a2)
      {
        sub_2576A7810();
      }
      else
      {
        OUTLINED_FUNCTION_1_17();
        return v8 + 1;
      }
      return a1;
    case 2:
      OUTLINED_FUNCTION_0_15();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_17();
      uint64_t v5 = v4 | 4;
      goto LABEL_8;
    case 3:
      OUTLINED_FUNCTION_0_15();
      sub_2576A8730();
      OUTLINED_FUNCTION_1_17();
      sub_2576A7B00();
      goto LABEL_9;
    case 4:
      OUTLINED_FUNCTION_0_15();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_17();
      uint64_t v5 = v6 + 18;
LABEL_8:
      uint64_t v9 = v5;
LABEL_9:
      sub_2576A7B00();
      break;
    default:
      OUTLINED_FUNCTION_0_15();
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576A7B00();
      break;
  }
  sub_2576A7B00();
  return v9;
}

uint64_t sub_2574A656C()
{
  return sub_2574A63B0(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_2574A6578(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x25A2BA130]();
  sub_25747C54C(a1, (uint64_t)v4);
  type metadata accessor for BNNSExecutor();
  swift_initStackObject();
  sub_2574A6658((uint64_t)v4);
  sub_2574A66F4();
  sub_2574A6AD8();
  if (!v1) {
    sub_2574A727C();
  }
  swift_release();
}

uint64_t type metadata accessor for BNNSBackend()
{
  return self;
}

void sub_2574A6630(uint64_t a1)
{
}

uint64_t sub_2574A6648@<X0>(uint64_t a1@<X8>)
{
  return sub_25747C54C(*(void *)(v1 + 16) + 24, a1);
}

uint64_t sub_2574A6658(uint64_t a1)
{
  sub_25747C54C(a1, (uint64_t)v5);
  type metadata accessor for BNNSExecutor.Context();
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EC8);
  *(void *)(v3 + 16) = sub_2576A77E0();
  memcpy((void *)(v3 + 24), v5, 0xECuLL);
  sub_25747F1AC(a1);
  *(void *)(v1 + 16) = v3;
  return v1;
}

uint64_t sub_2574A66F4()
{
  sub_2574A6648((uint64_t)v43);
  unint64_t v0 = (unint64_t)v44;
  sub_2576A7810();
  sub_25747F1AC((uint64_t)v43);
  if (v0 >> 62)
  {
LABEL_36:
    sub_2576A7810();
    uint64_t v1 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v1) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  id v40 = (void *)(*(void *)(v39 + 16) + 16);
  id v37 = (void *)v0;
  unint64_t v38 = v0 & 0xC000000000000001;
  uint64_t v2 = 4;
  uint64_t v36 = v1;
  while (1)
  {
    if (v38)
    {
      uint64_t v3 = MEMORY[0x25A2B8DB0](v2 - 4, v0);
    }
    else
    {
      uint64_t v3 = *(void *)(v0 + 8 * v2);
      swift_retain();
    }
    if (__OFADD__(v2 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    sub_2574A6648((uint64_t)v43);
    uint64_t v6 = v45;
    uint64_t v5 = v46;
    uint64_t v7 = sub_2576136DC();
    uint64_t v4 = v2 - 3;
    if (v5[2])
    {
      unint64_t v0 = (unint64_t)v5;
      unint64_t v9 = sub_25747588C(v7, v8);
      if (v10)
      {
        unint64_t v11 = *(void *)(v5[7] + 8 * v9);
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_32;
        }
        if (v11 >= *(void *)(v6 + 16)) {
          goto LABEL_33;
        }
LABEL_17:
        uint64_t v17 = v6 + 16 * v11;
        uint64_t v18 = *(void *)(v17 + 32);
        uint64_t v19 = *(void *)(v17 + 40);
        sub_2576A7810();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v47;
    uint64_t v12 = v48;
    uint64_t v13 = sub_2576136DC();
    if (v12[2])
    {
      unint64_t v0 = (unint64_t)v12;
      unint64_t v15 = sub_25747588C(v13, v14);
      if (v16)
      {
        unint64_t v11 = *(void *)(v12[7] + 8 * v15);
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_34;
        }
        if (v11 >= *(void *)(v6 + 16)) {
          goto LABEL_35;
        }
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_2576136DC();
    uint64_t v19 = v20;
LABEL_19:
    sub_25747F1AC((uint64_t)v43);
    swift_retain();
    id v21 = sub_257614628();
    objc_msgSend(v21, sel_lock);

    sub_25761594C(v3, 0, 0, (uint64_t)v43);
    id v22 = sub_257614628();
    objc_msgSend(v22, sel_unlock);
    swift_release();

    long long v41 = v43[0];
    swift_beginAccess();
    swift_unknownObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v42 = (void *)*v40;
    unint64_t v0 = (unint64_t)v42;
    *id v40 = 0x8000000000000000;
    uint64_t v23 = v18;
    unint64_t v24 = sub_25747588C(v18, v19);
    if (__OFADD__(*(void *)(v0 + 16), (v25 & 1) == 0)) {
      goto LABEL_30;
    }
    unint64_t v26 = v24;
    char v27 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0018D8);
    unint64_t v0 = (unint64_t)&v42;
    if (sub_2576A8AD0()) {
      break;
    }
LABEL_23:
    uint64_t v30 = v42;
    if (v27)
    {
      *(_OWORD *)(v42[7] + 16 * v26) = v41;
    }
    else
    {
      v42[(v26 >> 6) + 8] |= 1 << v26;
      long long v31 = (uint64_t *)(v30[6] + 16 * v26);
      *long long v31 = v23;
      v31[1] = v19;
      *(_OWORD *)(v30[7] + 16 * v26) = v41;
      uint64_t v32 = v30[2];
      BOOL v33 = __OFADD__(v32, 1);
      uint64_t v34 = v32 + 1;
      if (v33) {
        goto LABEL_31;
      }
      long long v30[2] = v34;
      sub_2576A7810();
    }
    *id v40 = v30;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    ++v2;
    unint64_t v0 = (unint64_t)v37;
    if (v4 == v36) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v0 = (unint64_t)v42;
  unint64_t v28 = sub_25747588C(v23, v19);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v26 = v28;
    goto LABEL_23;
  }
  uint64_t result = sub_2576A9020();
  __break(1u);
  return result;
}

uint64_t sub_2574A6AD8()
{
  uint64_t v1 = v0;
  sub_2574A6648((uint64_t)v83);
  uint64_t v2 = v83[15];
  sub_2576A7810();
  sub_25747F1AC((uint64_t)v83);
  uint64_t v66 = *(void *)(v2 + 16);
  if (!v66) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v3 = 0;
  uint64_t v67 = v2;
  uint64_t v68 = v2 + 32;
  while (v3 < *(void *)(v2 + 16))
  {
    uint64_t v4 = (uint64_t *)(v68 + 16 * v3);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v5))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
      uint64_t v64 = v63;
      sub_257480520();
      swift_allocError();
      *(void *)uint64_t v65 = v62;
      *(void *)(v65 + 8) = v64;
      *(unsigned char *)(v65 + 16) = 0;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    uint64_t v70 = v7;
    unint64_t v69 = v3;
    uint64_t v8 = swift_getObjectType();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 32);
    swift_unknownObjectRetain_n();
    uint64_t v74 = v8;
    unint64_t v10 = v9(v8, v6);
    unint64_t v11 = v10;
    if (v10 >> 62)
    {
      sub_2576A7810();
      uint64_t v12 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v75 = v6;
    uint64_t v72 = v1;
    if (v12)
    {
      uint64_t v13 = 4;
      uint64_t v14 = (void *)MEMORY[0x263F8EE80];
      while (1)
      {
        if ((v11 & 0xC000000000000001) != 0) {
          MEMORY[0x25A2B8DB0](v13 - 4, v11);
        }
        else {
          swift_retain();
        }
        if (__OFADD__(v13 - 4, 1)) {
          goto LABEL_52;
        }
        uint64_t v15 = sub_2574A75E4();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v83[0] = 0;
          v83[1] = 0xE000000000000000;
          sub_2576A8730();
          swift_bridgeObjectRelease();
          sub_2574A6648((uint64_t)v83);
          sub_25761B124();
          sub_25747F1AC((uint64_t)v83);
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          sub_257480520();
          swift_allocError();
          *(void *)uint64_t v59 = 0xD000000000000027;
          *(void *)(v59 + 8) = 0x80000002576C5F50;
          *(unsigned char *)(v59 + 16) = 1;
          swift_willThrow();
          swift_release();
          return swift_unknownObjectRelease_n();
        }
        uint64_t v85 = v15;
        uint64_t v78 = v13;
        uint64_t v80 = v16;
        uint64_t v77 = v13 - 3;
        uint64_t v17 = sub_2575CA350();
        swift_isUniquelyReferenced_nonNull_native();
        v83[0] = v14;
        unint64_t v18 = sub_2574759B8(v17);
        if (__OFADD__(v14[2], (v19 & 1) == 0)) {
          goto LABEL_53;
        }
        unint64_t v20 = v18;
        char v21 = v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A0018D0);
        if (sub_2576A8AD0())
        {
          unint64_t v22 = sub_2574759B8(v17);
          if ((v21 & 1) != (v23 & 1)) {
            goto LABEL_59;
          }
          unint64_t v20 = v22;
        }
        uint64_t v14 = (void *)v83[0];
        if (v21)
        {
          unint64_t v24 = (void *)(*(void *)(v83[0] + 56) + 16 * v20);
          swift_unknownObjectRelease();
          void *v24 = v85;
          v24[1] = v80;
        }
        else
        {
          *(void *)(v83[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
          *(void *)(v14[6] + 8 * v20) = v17;
          char v25 = (void *)(v14[7] + 16 * v20);
          void *v25 = v85;
          v25[1] = v80;
          uint64_t v26 = v14[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27) {
            goto LABEL_55;
          }
          v14[2] = v28;
        }
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v13 = v78 + 1;
        if (v77 == v12) {
          goto LABEL_25;
        }
      }
    }
    uint64_t v14 = (void *)MEMORY[0x263F8EE80];
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v29 = swift_getObjectType();
    uint64_t v30 = (*(uint64_t (**)(void *, uint64_t))(v70 + 16))(v14, v29);
    if (v72)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v71 = v31;
    uint64_t v32 = *(void *)(v31 + 16);
    uint64_t v33 = v75;
    uint64_t v79 = v32;
    if (v32)
    {
      uint64_t v34 = 0;
      uint64_t v35 = (void *)(*(void *)(v76 + 16) + 16);
      uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 72);
      while (1)
      {
        long long v81 = *(_OWORD *)(v71 + 32 + 16 * v34);
        sub_2574A6648((uint64_t)v83);
        swift_unknownObjectRetain();
        uint64_t v36 = v73(v34, v74, v33);
        uint64_t v37 = v36;
        uint64_t v39 = v38;
        uint64_t v40 = v84;
        if (*(void *)(v84 + 16))
        {
          uint64_t v41 = v83[17];
          sub_2576A7810();
          unint64_t v42 = sub_25747588C(v37, v39);
          uint64_t v43 = v39;
          if (v44)
          {
            unint64_t v45 = *(void *)(*(void *)(v40 + 56) + 8 * v42);
            if ((v45 & 0x8000000000000000) != 0) {
              goto LABEL_56;
            }
            if (v45 >= *(void *)(v41 + 16)) {
              goto LABEL_57;
            }
            uint64_t v46 = v41 + 16 * v45;
            uint64_t v37 = *(void *)(v46 + 32);
            uint64_t v43 = *(void *)(v46 + 40);
            sub_2576A7810();
            swift_bridgeObjectRelease();
          }
          uint64_t v85 = v37;
          swift_bridgeObjectRelease();
          uint64_t v39 = v43;
        }
        else
        {
          uint64_t v85 = v36;
        }
        sub_25747F1AC((uint64_t)v83);
        swift_beginAccess();
        swift_unknownObjectRetain();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v47 = (void *)*v35;
        uint64_t v82 = (void *)*v35;
        *uint64_t v35 = 0x8000000000000000;
        unint64_t v48 = sub_25747588C(v85, v39);
        if (__OFADD__(v47[2], (v49 & 1) == 0)) {
          break;
        }
        unint64_t v50 = v48;
        char v51 = v49;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A0018D8);
        char v52 = sub_2576A8AD0();
        uint64_t v53 = v85;
        if (v52)
        {
          unint64_t v54 = sub_25747588C(v85, v39);
          if ((v51 & 1) != (v55 & 1)) {
            goto LABEL_59;
          }
          unint64_t v50 = v54;
        }
        if (v51)
        {
          *(_OWORD *)(v82[7] + 16 * v50) = v81;
        }
        else
        {
          v82[(v50 >> 6) + 8] |= 1 << v50;
          uint64_t v56 = (uint64_t *)(v82[6] + 16 * v50);
          *uint64_t v56 = v53;
          v56[1] = v39;
          *(_OWORD *)(v82[7] + 16 * v50) = v81;
          uint64_t v57 = v82[2];
          BOOL v27 = __OFADD__(v57, 1);
          uint64_t v58 = v57 + 1;
          if (v27) {
            goto LABEL_54;
          }
          v82[2] = v58;
          sub_2576A7810();
        }
        ++v34;
        *uint64_t v35 = v82;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v75;
        if (v79 == v34) {
          goto LABEL_44;
        }
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
      break;
    }
LABEL_44:
    unint64_t v3 = v69 + 1;
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    uint64_t v2 = v67;
    uint64_t v1 = 0;
    if (v69 + 1 == v66) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_59:
  uint64_t result = sub_2576A9020();
  __break(1u);
  return result;
}

uint64_t sub_2574A727C()
{
  sub_2574A6648((uint64_t)v28);
  unint64_t v0 = v29;
  sub_2576A7810();
  sub_25747F1AC((uint64_t)v28);
  if (v0 >> 62) {
    goto LABEL_19;
  }
  uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v1)
  {
    unint64_t v30 = v0 & 0xC000000000000001;
    uint64_t v2 = 4;
    unint64_t v17 = v0;
    while (1)
    {
      if (v30)
      {
        uint64_t v3 = MEMORY[0x25A2B8DB0](v2 - 4, v0);
      }
      else
      {
        uint64_t v3 = *(void *)(v0 + 8 * v2);
        swift_retain();
      }
      uint64_t v4 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      uint64_t v5 = sub_2574A75E4();
      if (!v5)
      {
        swift_bridgeObjectRelease();
        sub_257480520();
        swift_allocError();
        *(void *)uint64_t v16 = 0xD000000000000034;
        *(void *)(v16 + 8) = 0x80000002576C5E60;
        *(unsigned char *)(v16 + 16) = 1;
        swift_willThrow();
        return swift_release();
      }
      uint64_t v7 = v5;
      uint64_t v8 = v6;
      swift_retain();
      swift_unknownObjectRetain();
      id v9 = sub_257614628();
      objc_msgSend(v9, sel_lock);

      swift_beginAccess();
      sub_257486824(v3 + 40, (uint64_t)v28);
      if (!v28[105])
      {
        uint64_t v10 = v1;
        sub_257486824(v3 + 40, (uint64_t)v22);
        sub_257486824((uint64_t)v22, (uint64_t)v21);
        if (v21[105])
        {
          v19[0] = 0xD00000000000002BLL;
          v19[1] = 0x80000002576C5EA0;
          char v20 = 9;
          sub_25746BE6C();
        }
        sub_2574A794C((uint64_t)v21, (uint64_t)v19);
        uint64_t v11 = v19[7];
        uint64_t v18 = v19[6];
        uint64_t Strong = swift_weakLoadStrong();
        swift_unknownObjectRetain();
        sub_2576A7810();
        swift_release();
        if (Strong)
        {
          uint64_t v23 = v7;
          uint64_t v24 = v8;
          uint64_t v25 = v18;
          uint64_t v26 = v11;
          sub_2574A794C((uint64_t)v19, (uint64_t)v27);
          char v13 = 1;
        }
        else
        {
          sub_25748692C((uint64_t)v19);
          uint64_t v23 = v7;
          uint64_t v24 = v8;
          char v13 = 2;
          uint64_t v25 = v18;
          uint64_t v26 = v11;
        }
        uint64_t v1 = v10;
        v27[73] = v13;
        sub_257486880((uint64_t)v22);
        swift_beginAccess();
        sub_2574A79A8((uint64_t)&v23, v3 + 40);
        swift_endAccess();
        unint64_t v0 = v17;
      }
      sub_257486880((uint64_t)v28);
      id v14 = sub_257614628();
      objc_msgSend(v14, sel_unlock);
      swift_unknownObjectRelease_n();
      swift_release_n();

      ++v2;
      if (v4 == v1) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_19:
    sub_2576A7810();
    uint64_t v1 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574A75E4()
{
  sub_25747C54C(v0 + 24, (uint64_t)v16);
  uint64_t v1 = v16[13];
  uint64_t v2 = v16[14];
  uint64_t v3 = sub_2576136DC();
  unint64_t v5 = sub_2574A779C(v3, v4, v1, v2);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  if (!v7)
  {
    uint64_t v8 = v16[17];
    uint64_t v9 = v16[18];
    uint64_t v10 = sub_2576136DC();
    unint64_t v5 = sub_2574A779C(v10, v11, v8, v9);
    uint64_t v7 = v12;
    swift_bridgeObjectRelease();
    if (!v7)
    {
      unint64_t v5 = sub_2576136DC();
      uint64_t v7 = v13;
    }
  }
  sub_25747F1AC((uint64_t)v16);
  swift_beginAccess();
  uint64_t v14 = sub_2574BAFF0(v5, v7, *(void *)(v0 + 16));
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t _s14NeuralNetworks14ShuffleSamplerCfD_0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSExecutor()
{
  return self;
}

uint64_t sub_2574A7738()
{
  swift_bridgeObjectRelease();
  sub_25747F1AC(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BNNSExecutor.Context()
{
  return self;
}

unint64_t sub_2574A779C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  unint64_t result = sub_25747588C(a1, a2);
  if ((v7 & 1) == 0) {
    return 0;
  }
  unint64_t v8 = *(void *)(*(void *)(a4 + 56) + 8 * result);
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v8 < *(void *)(a3 + 16))
  {
    uint64_t v9 = *(void *)(a3 + 16 * v8 + 32);
    sub_2576A7810();
    return v9;
  }
  __break(1u);
  return result;
}

void (*sub_2574A7814(uint64_t **a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_2574A78C4(v6, a2, a3);
  return sub_2574A787C;
}

void sub_2574A787C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_2574A78C4(uint64_t *a1, uint64_t a2, uint64_t a3))()
{
  unint64_t v6 = a3 & 0xC000000000000001;
  sub_257582858(a2, (a3 & 0xC000000000000001) == 0, a3);
  if (v6) {
    uint64_t v7 = MEMORY[0x25A2B8DB0](a2, a3);
  }
  else {
    uint64_t v7 = swift_retain();
  }
  *a1 = v7;
  return destroy for OptionalParameter;
}

uint64_t destroy for OptionalParameter()
{
  return swift_release();
}

uint64_t sub_2574A794C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2574A79A8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2574A7A08(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return sub_2576A7810();
  }
  return result;
}

uint64_t destroy for BNNSDispatchError(uint64_t a1)
{
  return sub_2574A7A30(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_2574A7A30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 4u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s14NeuralNetworks17BNNSDispatchErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2574A7A08(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for BNNSDispatchError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2574A7A08(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_2574A7A30(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for BNNSDispatchError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_2574A7A30(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BNNSDispatchError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BNNSDispatchError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2574A7BB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BNNSDispatchError()
{
  return &type metadata for BNNSDispatchError;
}

uint64_t Tensor.cumulativeSum(alongAxis:exclusive:reverse:)()
{
  OUTLINED_FUNCTION_19_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0018E0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  uint64_t result = (uint64_t)OUTLINED_FUNCTION_14_7(v5, (__n128)xmmword_2576ABB30);
  if (!v7)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_8_7(result, v7);
  uint64_t v8 = 0;
  while ((OUTLINED_FUNCTION_1_18() & 1) == 0)
  {
    sub_2574A88B4(v2, v3, v4);
    v8 += 24;
    if (v8 == 48)
    {
      OUTLINED_FUNCTION_24_2();
      v20[0] = v1;
      OUTLINED_FUNCTION_4_10();
      OUTLINED_FUNCTION_5_9();
      sub_25746BF88();
    }
  }
  OUTLINED_FUNCTION_24_2();
  sub_2574A88B4(v2, v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v0;
  if (v1 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_10;
  }
  if (v1 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_20_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001078);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_25_3(inited, (__n128)xmmword_2576ABB10, v10, v11, v12, v13, v14, v15, v16, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9],
      v17[10],
      v17[11],
      v18,
      v19,
      v20[0]);
    sub_2574A8638(MEMORY[0x263F8EE78], (uint64_t)inited, (uint64_t)v17, &v18);
    sub_25747B4E4((uint64_t)v20);
    OUTLINED_FUNCTION_6_8();
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

{
  char v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_18_6();
  if (!v0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_5_9();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_23_4();
  uint64_t v1 = swift_allocObject();
  OUTLINED_FUNCTION_12_7(v1);
  swift_retain();
  sub_25761BED4((uint64_t)sub_2574A88CC);
  swift_release();
  OUTLINED_FUNCTION_13_7();
  swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_22_5(v2, v3, v4, 0, v5, v6, v7, v8, v16, v17, v18);
  uint64_t v9 = sub_2574A88E8(&qword_26A0018E8, (void (*)(uint64_t))type metadata accessor for CumulativeOperation);
  uint64_t v12 = OUTLINED_FUNCTION_21_5(v9, v10, v11);
  return OUTLINED_FUNCTION_16_6(v12, v13, v14);
}

uint64_t sub_2574A7EC4(uint64_t result, uint64_t a2, char a3, char a4)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    uint64_t v7 = *(void *)(result + 32);
    v12[0] = *(void *)(a2 + 40);
    v12[1] = v7;
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)(&v13, v12, a3 & 1, (a4 & 1) == 0);
    uint64_t v8 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_2576ABB10;
    swift_retain();
    swift_retain();
    uint64_t v10 = sub_2574E8C6C();
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = v10;
    *(void *)(v9 + 48) = v11;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v9;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)()
{
  OUTLINED_FUNCTION_19_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0018E0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  uint64_t result = (uint64_t)OUTLINED_FUNCTION_14_7(v5, (__n128)xmmword_2576ABB30);
  if (!v7)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_8_7(result, v7);
  uint64_t v8 = 0;
  while ((OUTLINED_FUNCTION_1_18() & 1) == 0)
  {
    sub_2574A88B4(v2, v3, v4);
    v8 += 24;
    if (v8 == 48)
    {
      OUTLINED_FUNCTION_24_2();
      v20[0] = v1;
      OUTLINED_FUNCTION_4_10();
      OUTLINED_FUNCTION_5_9();
      sub_25746BF88();
    }
  }
  OUTLINED_FUNCTION_24_2();
  sub_2574A88B4(v2, v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v19 = v0;
  if (v1 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_10;
  }
  if (v1 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_20_6();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001078);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_25_3(inited, (__n128)xmmword_2576ABB10, v10, v11, v12, v13, v14, v15, v16, v17[0], v17[1], v17[2], v17[3], v17[4], v17[5], v17[6], v17[7], v17[8], v17[9],
      v17[10],
      v17[11],
      v18,
      v19,
      v20[0]);
    sub_2574A8638(MEMORY[0x263F8EE78], (uint64_t)inited, (uint64_t)v17, &v18);
    sub_25747B4E4((uint64_t)v20);
    OUTLINED_FUNCTION_6_8();
    Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)();
    return swift_release();
  }
LABEL_11:
  __break(1u);
  return result;
}

{
  char v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_18_6();
  if (!v0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_7_7();
    OUTLINED_FUNCTION_5_9();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_23_4();
  uint64_t v1 = swift_allocObject();
  OUTLINED_FUNCTION_12_7(v1);
  swift_retain();
  sub_25761BED4((uint64_t)sub_2574A88DC);
  swift_release();
  OUTLINED_FUNCTION_13_7();
  swift_allocObject();
  uint64_t v2 = OUTLINED_FUNCTION_9_9();
  OUTLINED_FUNCTION_22_5(v2, v3, v4, 1, v5, v6, v7, v8, v16, v17, v18);
  uint64_t v9 = sub_2574A88E8(&qword_26A0018E8, (void (*)(uint64_t))type metadata accessor for CumulativeOperation);
  uint64_t v12 = OUTLINED_FUNCTION_21_5(v9, v10, v11);
  return OUTLINED_FUNCTION_16_6(v12, v13, v14);
}

uint64_t sub_2574A82AC(uint64_t result, void *a2, char a3, char a4)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = a2[2];
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v4 != 1)
  {
    uint64_t v7 = *(void *)(result + 32);
    uint64_t v8 = a2[4];
    uint64_t v13 = a2[5];
    uint64_t v14 = v8;
    swift_retain();
    swift_retain();
    swift_retain();
    Tensor.cumulativeProduct(alongAxis:exclusive:reverse:)(&v15, &v13, a3 & 1, a4 & 1);
    uint64_t v13 = v7;
    uint64_t v14 = v15;
    static Tensor.* infix(_:_:)();
    uint64_t v13 = v15;
    Tensor.cumulativeSum(alongAxis:exclusive:reverse:)();
    swift_release();
    uint64_t v13 = v14;
    static Tensor./ infix(_:_:)();
    swift_release();
    uint64_t v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_2576ABB10;
    swift_retain();
    swift_retain();
    uint64_t v11 = sub_2574E8C6C();
    *(void *)(v10 + 32) = v9;
    *(void *)(v10 + 40) = v11;
    *(void *)(v10 + 48) = v12;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return v10;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t Tensor.argsort(alongAxis:descendingOrder:)()
{
  OUTLINED_FUNCTION_10_6();
  if (v4 ^ v5 | v3) {
    BOOL v6 = v2 <= v1;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_11_6();
  }
  uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SortingOps.swift";
  long long v11 = xmmword_2576AE600;
  OUTLINED_FUNCTION_15_7();
  type metadata accessor for ArgumentSortOperation();
  swift_allocObject();
  swift_retain();
  OUTLINED_FUNCTION_3_11();
  sub_2574E128C();
  sub_2574A88E8(&qword_26A0018F0, (void (*)(uint64_t))type metadata accessor for ArgumentSortOperation);
  uint64_t v7 = sub_25747B47C(v0 + 168, (uint64_t)v9);
  return OUTLINED_FUNCTION_17_5(v7);
}

uint64_t Tensor.sorted(alongAxis:descendingOrder:)()
{
  OUTLINED_FUNCTION_10_6();
  if (v4 ^ v5 | v3) {
    BOOL v6 = v2 <= v1;
  }
  else {
    BOOL v6 = 1;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_0_16();
    OUTLINED_FUNCTION_11_6();
  }
  uint64_t v10 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SortingOps.swift";
  long long v11 = xmmword_2576AE600;
  OUTLINED_FUNCTION_15_7();
  type metadata accessor for SortOperation();
  swift_allocObject();
  swift_retain();
  OUTLINED_FUNCTION_3_11();
  sub_2574E140C();
  sub_2574A88E8(&qword_26A0018F8, (void (*)(uint64_t))type metadata accessor for SortOperation);
  uint64_t v7 = sub_25747B47C(v0 + 168, (uint64_t)v9);
  return OUTLINED_FUNCTION_17_5(v7);
}

uint64_t sub_2574A8638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  v15[2] = a2;
  if (*(void *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v8) {
        break;
      }
      if (v6 == 1) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = 1;
LABEL_7:
    if (v7 == *(void *)(a2 + 16))
    {
      v15[0] = a1;
      char v14 = 2;
      uint64_t v9 = sub_25747B47C(a3, (uint64_t)v13);
      MEMORY[0x270FA5388](v9);
      Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v15, (uint64_t)&v14, (uint64_t)v13, (uint64_t)sub_2574A0628);
      sub_25747B4E4(a3);
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v15[1];
      return result;
    }
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  uint64_t v11 = a1;
  sub_2576A8730();
  sub_2576A7B00();
  if (*(void *)(v11 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v8) {
        break;
      }
      if (v12 == 1) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
LABEL_13:
  sub_2576A8EA0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8EA0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_2574A88A0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return sub_2576A7810();
  }
  return result;
}

uint64_t sub_2574A88B4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2574A88CC(uint64_t a1, uint64_t a2)
{
  return sub_2574A7EC4(a1, a2, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17));
}

uint64_t sub_2574A88DC(uint64_t a1, void *a2)
{
  return sub_2574A82AC(a1, a2, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17));
}

uint64_t sub_2574A88E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  uint64_t v3 = *(void *)(v1 + v2 + 32);
  uint64_t v4 = *(void *)(v1 + v2 + 40);
  char v5 = *(unsigned char *)(v1 + v2 + 48);
  sub_2574A88A0(v3, v4, v5);
  return sub_257671D74(v0, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return MEMORY[0x270FA0238](v0, 18, 7);
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_8_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a1 + 56) = -a2;
  *(void *)(a1 + 64) = a2 - 1;
  *(unsigned char *)(a1 + 72) = 1;
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  return 0;
}

void OUTLINED_FUNCTION_11_6()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_12_7(uint64_t a1)
{
  *(unsigned char *)(a1 + 16) = v1 & 1;
  *(unsigned char *)(a1 + 17) = v2 & 1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  return type metadata accessor for CumulativeOperation();
}

__n128 *OUTLINED_FUNCTION_14_7(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0;
  result[2].n128_u64[1] = 0;
  result[3].n128_u8[0] = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_6(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  return sub_257613838(v4, v5, 0, (uint64_t)va, v3);
}

uint64_t OUTLINED_FUNCTION_17_5(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_257613838(v1, v3, 0, (uint64_t)va, v2);
}

double OUTLINED_FUNCTION_20_6()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_21_5(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  uint64_t v5 = *(void *)(v3 + 16) + 168;
  return sub_25747B47C(v5, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_22_5(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_25765F558(a1, a2, a3, a4, v11, v14, v12, v13, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_25_3(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  a1[1] = a2;
  a1[2].n128_u32[0] = v24;
  return sub_25747B47C((uint64_t)&a24, (uint64_t)&a10);
}

uint64_t sub_2574A8C9C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB20;
  uint64_t v2 = v0[6];
  *(void *)(v1 + 32) = v0[5];
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v0[7];
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_2574A8D28()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 56);
  *(void *)(v1 + 32) = *(void *)(v0 + 48);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_2574A8DA4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 88);
  *(void *)(v1 + 32) = *(void *)(v0 + 80);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574A8E00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *a7;
  char v16 = *((unsigned char *)a7 + 8);
  if (!a3) {
    a1 = sub_25761B148(0x7463656C6573, 0xE600000000000000);
  }
  *(_DWORD *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  *(void *)(v10 + 80) = v15;
  *(unsigned char *)(v10 + 88) = v16;
  sub_257469238(a8, v10 + 96);
  *(void *)(v10 + 64) = a9;
  *(void *)(v10 + 72) = a10;
  return v10;
}

uint64_t sub_2574A8E9C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_25747A4E0(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574A8EE4()
{
  sub_2574A8E9C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SelectOperation()
{
  return self;
}

uint64_t sub_2574A8F3C()
{
  return 0x7463656C6573;
}

__n128 sub_2574A8F58@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 144);
  char v3 = *(unsigned char *)(v1 + 152);
  char v4 = *(unsigned char *)(v1 + 153);
  long long v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_2574A8F84()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_2574A8FBC()
{
  return sub_25746A6B8();
}

uint64_t sub_2574A8FE0()
{
  return sub_2576A78E0();
}

uint64_t sub_2574A8FF4()
{
  return sub_2574A8FE0();
}

uint64_t sub_2574A900C(uint64_t a1)
{
  uint64_t result = sub_2574A9094((unint64_t *)&qword_26A000DD0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A9050(uint64_t a1)
{
  uint64_t result = sub_2574A9094(qword_26A001900);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574A9094(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SelectOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574A90DC()
{
  return swift_initClassMetadata2();
}

void *sub_2574A9128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2574A917C(a1, a2, a3);
}

void *sub_2574A917C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = 0;
  v3[2] = a1;
  swift_bridgeObjectRelease();
  v3[4] = a3;
  swift_release();
  return v3;
}

uint64_t sub_2574A91BC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 32) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 32);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_2574A9228()
{
  sub_2574A91BC();
  return swift_deallocClassInstance();
}

uint64_t _s17RecursiveChildrenV9LabelPathCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574A9274(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8))
  {
    return swift_release();
  }
  return result;
}

void *sub_2574A92C4(void *a1, void *a2)
{
  *a1 = *a2;
  long long v5 = a2 + 1;
  uint64_t v4 = a2[1];
  sub_2576A7810();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

void *sub_2574A9330(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2576A7810();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *sub_2574A93E4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InputGradient(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InputGradient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t _s17RecursiveChildrenVMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574A9508()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574A9524()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  uint64_t v2 = v0[3];
  *(void *)(v1 + 32) = v0[2];
  *(void *)(v1 + 40) = v2;
  char v3 = (void *)v0[4];
  sub_2576A7810();
  swift_retain();
  for (; v3; char v3 = (void *)v3[4])
  {
    uint64_t v5 = v3[2];
    uint64_t v4 = v3[3];
    unint64_t v7 = *(void *)(v1 + 16);
    unint64_t v6 = *(void *)(v1 + 24);
    swift_retain();
    sub_2576A7810();
    if (v7 >= v6 >> 1)
    {
      sub_257471CC4();
      uint64_t v1 = v9;
    }
    *(void *)(v1 + 16) = v7 + 1;
    uint64_t v8 = v1 + 16 * v7;
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v4;
    swift_release();
  }
  uint64_t v10 = swift_allocObject();
  swift_release();
  *(void *)(v10 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A18);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_2574AA208;
  *(void *)(result + 24) = v10;
  return result;
}

uint64_t sub_2574A965C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    sub_2574AA744();
    if (v6 == 1) {
      sub_2574AA29C(*(void *)(*(void *)v4 + 16) - 1);
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 1;
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_endAccess();
}

uint64_t sub_2574A96E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2574A9524();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_2574A972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A28);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2576A9170();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A9120();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8) == 1)
  {
    sub_2574AA7A0((uint64_t)v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_2574A972C(v11, a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_2576A9160();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A30);
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A40);
    swift_allocObject();
    uint64_t v14 = (uint64_t)sub_2574AA55C(v13);
    uint64_t v15 = (void *)v14;
  }
  else
  {
    swift_retain();
    sub_257532B98();
    uint64_t v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A38);
    swift_allocObject();
    uint64_t v15 = sub_2574AA630(v17);
    uint64_t v14 = swift_release();
  }
  uint64_t v18 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = *(void *)(a3 + 16);
  v26[-2] = v19;
  v26[-1] = a2;
  MEMORY[0x270FA5388](v18);
  v26[-4] = v19;
  v26[-3] = sub_2574AA800;
  v26[-2] = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E38);
  _s17RecursiveChildrenV9LabelPathCMa();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = sub_2574A9B20((uint64_t)sub_2574AA808, (uint64_t)&v26[-6], (uint64_t)v15, v21, TupleTypeMetadata2, MEMORY[0x263F8E628], MEMORY[0x263F8E658], v23);
  swift_release();
  v26[0] = v24;
  sub_2576A7F50();
  swift_getWitnessTable();
  return sub_2576A7F00();
}

void *sub_2574A9A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _s17RecursiveChildrenV9LabelPathCMa();
  swift_retain();
  sub_2576A7810();
  uint64_t v10 = sub_2574A9128(a2, a3, a5);
  sub_2574A4AE8(a4, a1);
  return v10;
}

uint64_t sub_2574A9B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = v15;
  uint64_t v24 = v16;
  uint64_t v25 = v17;
  uint64_t v26 = v18;
  uint64_t v27 = v12;
  uint64_t v28 = v19;
  uint64_t v20 = sub_2576A8A10();
  if (v8)
  {
    uint64_t v29 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
    swift_dynamicCast();
    swift_willThrowTypedImpl();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a8, v14, a6);
  }
  return v20;
}

uint64_t sub_2574A9C60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v38 = a2;
  uint64_t v46 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v47 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - v8;
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_3_3();
  uint64_t v41 = v13;
  uint64_t v45 = sub_2576A9170();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_3();
  uint64_t v44 = v17;
  uint64_t v18 = _s17RecursiveChildrenV9LabelPathCMa();
  uint64_t v43 = (void (**)(uint64_t, uint64_t))(v15 + 8);
  uint64_t v40 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v42 = (void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  uint64_t v39 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v19 = v18;
  uint64_t v48 = MEMORY[0x263F8EE58] + 8;
  while (1)
  {
    while (1)
    {
      swift_getTupleTypeMetadata2();
      uint64_t v20 = sub_2576A7F50();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v22 = swift_getWitnessTable();
      MEMORY[0x25A2B8820](&v49, v20, WitnessTable, v22);
      if (!v49)
      {
        uint64_t v29 = sub_2576A84C0();
        (*(void (**)(uint64_t *, uint64_t))(*(void *)(v29 - 8) + 8))(&v49, v29);
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001A20);
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v31 = (uint64_t)v38;
        uint64_t v32 = 1;
        return __swift_storeEnumTagSinglePayload(v31, v32, 1, TupleTypeMetadata2);
      }
      uint64_t v51 = v49;
      sub_257491D58(&v50, v52);
      uint64_t v23 = v51;
      sub_257491D58(v52, &v53);
      uint64_t v24 = *(uint64_t (**)(void))(v3 + 8);
      if (!v24 || (v24(&v53) & 1) != 0)
      {
        sub_2574A4AE8((uint64_t)&v53, (uint64_t)&v51);
        uint64_t v25 = v44;
        sub_2576A9130();
        swift_retain();
        sub_2574A972C(v25, v23, v46);
        swift_release();
        (*v43)(v25, v45);
      }
      sub_2574A4AE8((uint64_t)&v53, (uint64_t)&v51);
      if (swift_dynamicCast()) {
        break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v4);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
      (*v40)(v9, v47);
    }
    uint64_t v26 = v19;
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v4);
    uint64_t v27 = *v42;
    uint64_t v28 = v41;
    (*v42)((uint64_t)v41, v9, v4);
    __swift_project_boxed_opaque_existential_1(&v53, v54);
    if (swift_getDynamicType() != v47) {
      break;
    }
    swift_release();
    (*v39)((uint64_t)v28, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    uint64_t v19 = v26;
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001A20);
  uint64_t v33 = swift_getTupleTypeMetadata2();
  uint64_t v34 = v38;
  uint64_t v35 = (char *)v38 + *(int *)(v33 + 48);
  uint64_t v51 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E28);
  swift_getWitnessTable();
  uint64_t v36 = sub_2576A7F60();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  uint64_t *v34 = v36;
  v27((uint64_t)v35, v28, v4);
  uint64_t v31 = (uint64_t)v34;
  uint64_t v32 = 0;
  TupleTypeMetadata2 = v33;
  return __swift_storeEnumTagSinglePayload(v31, v32, 1, TupleTypeMetadata2);
}

uint64_t sub_2574AA178()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574AA194()
{
  return sub_257492AF8(&qword_26A001A08, &qword_26A001A10);
}

uint64_t sub_2574AA1D0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2574AA208@<X0>(void *a1@<X8>)
{
  return sub_2574A965C(v1, a1);
}

void sub_2574AA210(unint64_t a1)
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582B64();
    uint64_t v1 = v8;
  }
  unint64_t v5 = *(void *)(v1 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = (void *)OUTLINED_FUNCTION_3_12();
    memcpy(v6, v7, 0x88uLL);
    sub_25760A434((char *)(v3 + 176), v5 - 1 - a1, v2);
    OUTLINED_FUNCTION_2_14();
  }
}

void sub_2574AA29C(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582B74();
    uint64_t v3 = v6;
  }
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    sub_257609FC4((char *)(v3 + 16 * a1 + 48), v4 - 1 - a1, (char *)(v3 + 16 * a1 + 32));
    *(void *)(v3 + 16) = v5;
    uint64_t *v1 = v3;
  }
}

void sub_2574AA328(unint64_t a1)
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582BA4();
    uint64_t v1 = v8;
  }
  unint64_t v5 = *(void *)(v1 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = (void *)OUTLINED_FUNCTION_3_12();
    memcpy(v6, v7, 0xECuLL);
    sub_25760A2B8((char *)(v3 + 272), v5 - 1 - a1, v2);
    OUTLINED_FUNCTION_2_14();
  }
}

void sub_2574AA3B4(unint64_t a1)
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582BB4();
    uint64_t v1 = v4;
  }
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 <= a1)
  {
    __break(1u);
  }
  else
  {
    sub_25760A020(v1 + 8 * a1 + 40, v3 - 1 - a1, v1 + 8 * a1 + 32);
    OUTLINED_FUNCTION_2_14();
  }
}

uint64_t sub_2574AA424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a6 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v19 - v13;
  uint64_t result = v15(v12, (char *)v19 - v13);
  if (v6)
  {
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v17(v11, v14, a6);
    swift_allocError();
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v17)(v18, v11, a6);
  }
  return result;
}

void *sub_2574AA55C(uint64_t a1)
{
  v1[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A48);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a1 + 32);
  uint64_t v4 = sub_257492AF8(&qword_26A001A50, &qword_26A001A48);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(a1 + 16);
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v5;
  v1[5] = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return v1;
}

void *sub_2574AA630(uint64_t a1)
{
  v1[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A58);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  uint64_t v4 = sub_257492AF8(&qword_26A001A60, &qword_26A001A58);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  v1[2] = v3;
  v1[3] = v4;
  v1[4] = v6;
  v1[5] = v4;
  return v1;
}

void sub_2574AA6D8(void *a1@<X8>)
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582B64();
    uint64_t v1 = v4;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    memcpy(a1, (const void *)(v1 + 144 * (v3 - 1) + 32), 0x88uLL);
    OUTLINED_FUNCTION_2_14();
  }
  else
  {
    __break(1u);
  }
}

void sub_2574AA744()
{
  uint64_t v1 = *v0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582B74();
    uint64_t v1 = v3;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    *(void *)(v1 + 16) = v2 - 1;
    *uint64_t v0 = v1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2574AA7A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_2574AA800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2574A9A98(a1, a2, a3, a4, *(void *)(v4 + 24));
}

uint64_t sub_2574AA808@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *, void, void, void *))(v2 + 24))(a2 + 1, *a1, a1[1], a1 + 2);
  *a2 = result;
  return result;
}

uint64_t sub_2574AA854(uint64_t a1)
{
  return sub_2574AA424(a1, v1[6], v1[7], v1[2], v1[3], v1[4]);
}

void sub_2574AA878(void *a1@<X8>)
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582BA4();
    uint64_t v1 = v4;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    memcpy(a1, (const void *)(v1 + 240 * (v3 - 1) + 32), 0xECuLL);
    OUTLINED_FUNCTION_2_14();
  }
  else
  {
    __break(1u);
  }
}

void sub_2574AA8E4()
{
  if ((OUTLINED_FUNCTION_1_19() & 1) == 0)
  {
    sub_257582BB4();
    uint64_t v0 = v3;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    *(void *)(v0 + 16) = v2 - 1;
    void *v1 = v0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t OUTLINED_FUNCTION_1_19()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_2_14()
{
  *(void *)(v0 + 16) = v2;
  void *v1 = v0;
}

uint64_t OUTLINED_FUNCTION_3_12()
{
  return v0;
}

uint64_t sub_2574AA970()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0();
}

uint64_t sub_2574AA9AC()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0();
}

uint64_t sub_2574AA9E8()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0();
}

uint64_t sub_2574AAA24()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getObjectType();
  if (!dynamic_cast_existential_1_conditional(v1)) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
}

uint64_t sub_2574AAA94()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0() & 1;
}

uint64_t sub_2574AAAD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 48))(v6, ObjectType, v3);
  return sub_257469238((uint64_t)v6, a1);
}

uint64_t sub_2574AAB3C()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0();
}

uint64_t sub_2574AAB78()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getObjectType();
  uint64_t result = dynamic_cast_existential_1_conditional(v1);
  if (result)
  {
    uint64_t v4 = v3;
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  }
  return result;
}

uint64_t sub_2574AABE4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_getObjectType();
  uint64_t result = dynamic_cast_existential_1_conditional(v3);
  if (result)
  {
    uint64_t v6 = v5;
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, ObjectType, v6) & 1;
  }
  return result;
}

uint64_t sub_2574AAC60()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PassthroughOperation()
{
  return self;
}

uint64_t sub_2574AACCC@<X0>(uint64_t a1@<X8>)
{
  sub_2574AAAD4((uint64_t)v3);
  return sub_257469238((uint64_t)v3, a1);
}

uint64_t sub_2574AAD10()
{
  OUTLINED_FUNCTION_1_20();
  OUTLINED_FUNCTION_0_17();
  return v0();
}

uint64_t sub_2574AAD50(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 88))(a1, ObjectType, v3) & 1;
}

uint64_t sub_2574AADB8()
{
  return sub_25761B124();
}

uint64_t sub_2574AAE04(uint64_t a1)
{
  long long v12 = *(_OWORD *)(v1 + 16);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0047E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A78);
  if (!swift_dynamicCast())
  {
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    sub_2574AB0B0((uint64_t)v10);
    v6[0] = 0;
    v6[1] = 0xE000000000000000;
    sub_2576A8730();
    sub_2576A7B00();
    swift_getObjectType();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    char v9 = 9;
    sub_25746BE6C();
  }
  sub_257479260(v10, (uint64_t)v6);
  uint64_t v3 = v7;
  uint64_t v4 = v8;
  __swift_project_boxed_opaque_existential_1(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_2574AAFA0(uint64_t a1)
{
  return sub_2574AAE04(a1);
}

uint64_t type metadata accessor for TrackedOperation()
{
  return self;
}

uint64_t sub_2574AAFE8(uint64_t a1)
{
  uint64_t result = sub_2574AB070((unint64_t *)&qword_26A001A68);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574AB02C(uint64_t a1)
{
  uint64_t result = sub_2574AB070(&qword_26A001A70);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574AB070(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for PassthroughOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574AB0B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0047F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  return swift_getObjectType();
}

uint64_t sub_2574AB138(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AB0);
  MEMORY[0x270FA5388](v63);
  uint64_t v62 = (uint64_t *)&v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = &v46[-v7];
  MEMORY[0x270FA5388](v8);
  long long v53 = &v46[-v9];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AA8);
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v64 = (uint64_t *)&v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    return v13;
  }
  uint64_t v67 = MEMORY[0x263F8EE78];
  sub_2574E79B4();
  uint64_t result = sub_25756F584(a1);
  if ((result & 0x8000000000000000) == 0 && result < 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v16 = a1 + 64;
    uint64_t v17 = 1;
    uint64_t v49 = a1;
    long long v50 = a2;
    uint64_t v47 = v12;
    uint64_t v48 = a1 + 64;
    while ((*(void *)(v16 + 8 * ((unint64_t)result >> 6)) & (1 << result)) != 0)
    {
      if (*(_DWORD *)(a1 + 36) != v15) {
        goto LABEL_27;
      }
      uint64_t v57 = 1 << result;
      unint64_t v58 = (unint64_t)result >> 6;
      uint64_t v55 = v17;
      uint64_t v56 = v15;
      uint64_t v18 = v53;
      uint64_t v19 = &v53[*(int *)(v63 + 48)];
      uint64_t v20 = *(void *)(a1 + 56);
      uint64_t v21 = (uint64_t *)(*(void *)(a1 + 48) + 16 * result);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = result;
      uint64_t v25 = sub_2576A73C0();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16);
      uint64_t v28 = *(void *)(v26 + 72);
      uint64_t v61 = v24;
      v27(v19, v20 + v28 * v24, v25);
      void *v18 = v23;
      v18[1] = v22;
      uint64_t v29 = (uint64_t)v54;
      *uint64_t v54 = v23;
      *(void *)(v29 + 8) = v22;
      uint64_t v30 = v63;
      v27((unsigned char *)(v29 + *(int *)(v63 + 48)), (uint64_t)v19, v25);
      uint64_t v31 = v62;
      sub_2574ADC38(v29, (uint64_t)v62, &qword_26A001AB0);
      swift_bridgeObjectRetain_n();
      uint64_t v32 = (uint64_t)v18;
      uint64_t v33 = v50;
      sub_2574ADBE4(v32, &qword_26A001AB0);
      uint64_t v60 = *v31;
      uint64_t v59 = v31[1];
      v27((unsigned char *)v64 + *(int *)(v52 + 48), (uint64_t)v31 + *(int *)(v30 + 48), v25);
      uint64_t v34 = *(void *)(sub_2576A73B0() + 16);
      swift_bridgeObjectRelease();
      if (v34)
      {
        unint64_t v35 = 0;
        while (1)
        {
          uint64_t v36 = (void (*)(char *, void))sub_2576A73A0();
          uint64_t v38 = v37;
          uint64_t v39 = *v37;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v38 = v39;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_257582B84();
            uint64_t v39 = result;
            *uint64_t v38 = result;
          }
          if (v35 >= *(void *)(v39 + 16)) {
            break;
          }
          sub_2576A7510();
          uint64_t v40 = sub_2576A74F0();
          v33(3, v40, v41);
          swift_bridgeObjectRelease();
          sub_2576A7500();
          v36(v66, 0);
          if (v34 == ++v35) {
            goto LABEL_13;
          }
        }
        __break(1u);
        break;
      }
LABEL_13:
      uint64_t v42 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v33)(1, v60, v59);
      uint64_t v43 = v64;
      *uint64_t v64 = v42;
      v43[1] = v44;
      sub_2574ADBE4((uint64_t)v62, &qword_26A001AB0);
      uint64_t v13 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2574E79B4();
        uint64_t v13 = v67;
      }
      a1 = v49;
      unint64_t v45 = *(void *)(v13 + 16);
      if (v45 >= *(void *)(v13 + 24) >> 1)
      {
        sub_2574E79B4();
        uint64_t v13 = v67;
      }
      *(void *)(v13 + 16) = v45 + 1;
      sub_2574ADC38((uint64_t)v64, v13+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v45, &qword_26A001AA8);
      uint64_t result = v61;
      if (v61 >= -(-1 << *(unsigned char *)(a1 + 32))) {
        goto LABEL_28;
      }
      uint64_t v16 = v48;
      if ((*(void *)(v48 + 8 * v58) & v57) == 0) {
        goto LABEL_29;
      }
      if (*(_DWORD *)(a1 + 36) != v56) {
        goto LABEL_30;
      }
      uint64_t result = sub_2576A8680();
      if (v55 == v47) {
        return v13;
      }
      if ((result & 0x8000000000000000) == 0)
      {
        uint64_t v15 = *(unsigned int *)(a1 + 36);
        uint64_t v17 = v55 + 1;
        if (result < 1 << *(unsigned char *)(a1 + 32)) {
          continue;
        }
      }
      goto LABEL_31;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2574AB6DC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v85 = a3;
  uint64_t v78 = a2;
  id v79 = a1;
  uint64_t v5 = sub_2576A7380();
  OUTLINED_FUNCTION_0_8();
  uint64_t v83 = v6;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v82 = (char *)v68 - v11;
  sub_2576A72B0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v86 = v12;
  uint64_t v87 = v13;
  MEMORY[0x270FA5388](v12);
  long long v81 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)v68 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A80);
  MEMORY[0x270FA5388](v17 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v74 = v19 - v18;
  sub_2576A74C0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v75 = v21;
  uint64_t v76 = v20;
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_8_0();
  uint64_t v24 = (void (**)(char *, uint64_t))(v23 - v22);
  sub_2576A7560();
  OUTLINED_FUNCTION_0_8();
  uint64_t v72 = v26;
  uint64_t v73 = v25;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_8_0();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = sub_2576A7550();
  OUTLINED_FUNCTION_0_8();
  uint64_t v77 = v31;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_8_0();
  uint64_t v35 = v34 - v33;
  sub_2576A7360();
  uint64_t v36 = a4;
  sub_2576A72D0();
  id v37 = v79;
  uint64_t v38 = v84;
  sub_2574ABDB0(v37, v35);
  if (v38)
  {

    swift_bridgeObjectRelease();
    sub_2576A7370();
    OUTLINED_FUNCTION_16_1();
    return (*(uint64_t (**)(uint64_t))(v39 + 8))(v36);
  }
  else
  {
    id v69 = v37;
    uint64_t v70 = 0;
    uint64_t v71 = v24;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16))(v29, v35, v30);
    (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))(v29, *MEMORY[0x263F53478], v73);
    uint64_t v41 = v36;
    sub_2576A72E0();
    uint64_t v42 = sub_2576A7540();
    uint64_t v43 = v74;
    sub_2574BAFF4(v78, v85, v42, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v76;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, v76);
    uint64_t v46 = v77;
    if (EnumTagSinglePayload == 1)
    {

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v35, v30);
      return sub_2574ADBE4(v43, &qword_26A001A80);
    }
    else
    {
      uint64_t v72 = v35;
      uint64_t v73 = v30;
      uint64_t v47 = v75;
      uint64_t v48 = v71;
      (*((void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))v75 + 4))(v71, v43, v44);
      uint64_t v49 = sub_2576A74A0();
      uint64_t v50 = *(void *)(v49 + 16);
      uint64_t v84 = v9;
      uint64_t v85 = v5;
      v68[1] = v41;
      if (v50)
      {
        uint64_t v88 = MEMORY[0x263F8EE78];
        sub_2574E79D4();
        uint64_t v47 = (char *)(v83 + 16);
        uint64_t v46 = *(void *)(v83 + 16);
        unint64_t v51 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
        uint64_t v74 = v49;
        unint64_t v52 = v49 + v51;
        long long v53 = *(void **)(v83 + 72);
        uint64_t v48 = (void (**)(char *, uint64_t))(v83 + 8);
        uint64_t v78 = v87 + 32;
        id v79 = v53;
        do
        {
          uint64_t v54 = v82;
          ((void (*)(char *, unint64_t, uint64_t))v46)(v82, v52, v5);
          ((void (*)(char *, char *, uint64_t))v46)(v9, v54, v5);
          sub_2576A72C0();
          (*v48)(v54, v5);
          uint64_t v55 = v88;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_4_11();
            uint64_t v55 = v88;
          }
          OUTLINED_FUNCTION_7_8();
          uint64_t v56 = v80;
          if (v57)
          {
            OUTLINED_FUNCTION_5_10();
            uint64_t v56 = v80;
            uint64_t v55 = v88;
          }
          unint64_t v58 = OUTLINED_FUNCTION_2_15();
          v59(v58, v56);
          uint64_t v88 = v55;
          v52 += (unint64_t)v79;
          --v50;
          uint64_t v9 = v84;
          uint64_t v5 = v85;
        }
        while (v50);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_6_9();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_2576A7320();
      uint64_t v60 = sub_2576A74B0();
      uint64_t v61 = *(void *)(v60 + 16);
      uint64_t v62 = v82;
      if (v61)
      {
        uint64_t v88 = MEMORY[0x263F8EE78];
        uint64_t v63 = v60;
        sub_2574E79D4();
        uint64_t v46 = *(void *)(v83 + 16);
        unint64_t v64 = v63 + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80));
        uint64_t v80 = *(char **)(v83 + 72);
        v83 += 16;
        uint64_t v48 = (void (**)(char *, uint64_t))(v83 - 8);
        uint64_t v78 = v63;
        id v79 = (id)(v87 + 32);
        do
        {
          ((void (*)(char *, unint64_t, uint64_t))v46)(v62, v64, v5);
          ((void (*)(char *, char *, uint64_t))v46)(v9, v62, v5);
          sub_2576A72C0();
          (*v48)(v62, v5);
          uint64_t v65 = v88;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_4_11();
            uint64_t v65 = v88;
          }
          OUTLINED_FUNCTION_7_8();
          uint64_t v47 = v81;
          if (v57)
          {
            OUTLINED_FUNCTION_5_10();
            uint64_t v47 = v81;
            uint64_t v65 = v88;
          }
          unint64_t v66 = OUTLINED_FUNCTION_2_15();
          v67(v66, v47);
          uint64_t v88 = v65;
          v64 += (unint64_t)v80;
          --v61;
          uint64_t v9 = v84;
          uint64_t v5 = v85;
        }
        while (v61);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_6_9();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_2576A7350();

      (*((void (**)(void, uint64_t))v47 + 1))(v48, v76);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v72, v73);
    }
  }
}

void sub_2574ABDB0(void *a1@<X0>, uint64_t a2@<X8>)
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_2576A7550();
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = v9 - v8;
  v18[0] = 0;
  id v11 = objc_msgSend(a1, sel_serializeToProtobufWithError_, v18);
  id v12 = v18[0];
  uint64_t v13 = sub_2576A7170();
  unint64_t v15 = v14;

  if (v12)
  {
    id v16 = v12;
    swift_willThrow();

    sub_25747F154(v13, v15);
  }
  else
  {
    sub_2574ADB28(v13, v15);
    sub_2576A7390();
    if (!v17)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, v10, v4);
      sub_2574ABF54();
      sub_2574ABFA0();
    }

    sub_25747F154(v13, v15);
  }
}

uint64_t sub_2574ABF54()
{
  uint64_t v1 = sub_2576A77E0();
  return sub_2574AC48C(v0, v1);
}

uint64_t sub_2574ABFA0()
{
  uint64_t result = sub_2576A7540();
  int64_t v1 = 0;
  uint64_t v2 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  for (v5 &= v5 - 1; ; uint64_t v5 = (v8 - 1) & v8)
  {
    sub_2576A7810();
    uint64_t v10 = (uint64_t (*)(unsigned char *, void))sub_2576A7530();
    id v11 = sub_2574B58F4();
    uint64_t v13 = v12;
    uint64_t v14 = sub_2576A74C0();
    if (!__swift_getEnumTagSinglePayload(v13, 1, v14)) {
      sub_2574AC81C();
    }
    ((void (*)(uint64_t *, void))v11)(&v15, 0);
    swift_bridgeObjectRelease();
    uint64_t result = v10(v16, 0);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v7 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v7 >= v6) {
      return swift_release();
    }
    uint64_t v8 = *(void *)(v2 + 8 * v7);
    ++v1;
    if (!v8)
    {
      int64_t v1 = v7 + 1;
      if (v7 + 1 >= v6) {
        return swift_release();
      }
      uint64_t v8 = *(void *)(v2 + 8 * v1);
      if (!v8)
      {
        int64_t v1 = v7 + 2;
        if (v7 + 2 >= v6) {
          return swift_release();
        }
        uint64_t v8 = *(void *)(v2 + 8 * v1);
        if (!v8)
        {
          int64_t v1 = v7 + 3;
          if (v7 + 3 >= v6) {
            return swift_release();
          }
          uint64_t v8 = *(void *)(v2 + 8 * v1);
          if (!v8)
          {
            int64_t v1 = v7 + 4;
            if (v7 + 4 >= v6) {
              return swift_release();
            }
            uint64_t v8 = *(void *)(v2 + 8 * v1);
            if (!v8) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v9 = v7 + 5;
  if (v9 >= v6) {
    return swift_release();
  }
  uint64_t v8 = *(void *)(v2 + 8 * v9);
  if (v8)
  {
    int64_t v1 = v9;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v1 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v1 >= v6) {
      return swift_release();
    }
    uint64_t v8 = *(void *)(v2 + 8 * v1);
    ++v9;
    if (v8) {
      goto LABEL_22;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_2574AC1A8(char a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a1 != 3)
  {
    if (*(void *)(a4 + 16))
    {
      sub_2576A7810();
      unint64_t v22 = sub_25747588C(a2, a3);
      if (v23)
      {
        a2 = *(void *)(*(void *)(a4 + 56) + 16 * v22);
        sub_2576A7810();
        swift_bridgeObjectRelease();
        return (void *)a2;
      }
      swift_bridgeObjectRelease();
    }
LABEL_33:
    sub_2576A7810();
    return (void *)a2;
  }
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  uint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = (void *)sub_2576A7810();
  int64_t v13 = 0;
  while (v10)
  {
    v10 &= v10 - 1;
LABEL_25:
    sub_2576A7810();
    char v17 = sub_2576A7BA0();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v17)
    {
      v25[0] = 46;
      v25[1] = 0xE100000000000000;
      MEMORY[0x270FA5388](result);
      v24[2] = v25;
      sub_2576A7810();
      uint64_t result = (void *)sub_25753F260(0x7FFFFFFFFFFFFFFFLL, 1u, sub_2574ADCC0, (uint64_t)v24, a2, a3);
      if (result[2] >= 2uLL)
      {
        uint64_t v18 = result[8];
        uint64_t v19 = result[9];
        uint64_t v20 = result[10];
        uint64_t v21 = result[11];
        sub_2576A7810();
        swift_bridgeObjectRelease();
        a2 = MEMORY[0x25A2B8040](v18, v19, v20, v21);
        swift_release();
        swift_bridgeObjectRelease();
        return (void *)a2;
      }
      goto LABEL_36;
    }
  }
  int64_t v14 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v11) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v14);
  ++v13;
  if (v15) {
    goto LABEL_24;
  }
  int64_t v13 = v14 + 1;
  if (v14 + 1 >= v11) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v13);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v13 = v14 + 2;
  if (v14 + 2 >= v11) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v13);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v13 = v14 + 3;
  if (v14 + 3 >= v11) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v13);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v13 = v14 + 4;
  if (v14 + 4 >= v11) {
    goto LABEL_31;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v13);
  if (v15)
  {
LABEL_24:
    uint64_t v10 = (v15 - 1) & v15;
    goto LABEL_25;
  }
  int64_t v16 = v14 + 5;
  if (v16 >= v11)
  {
LABEL_31:
    swift_release();
    goto LABEL_33;
  }
  uint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    int64_t v13 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_31;
    }
    uint64_t v15 = *(void *)(v7 + 8 * v13);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2574AC48C(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v2 = sub_2576A7540();
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v25 = v2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v6 & v4;
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  if ((v6 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  for (v7 &= v7 - 1; ; uint64_t v7 = (v9 - 1) & v9)
  {
    sub_2576A7810();
    int64_t v11 = (void (*)(char *, void))sub_2576A7530();
    uint64_t v12 = sub_2574B58F4();
    uint64_t v14 = v13;
    uint64_t v15 = sub_2576A74C0();
    if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
    {
      uint64_t v16 = sub_2576A7480();
      uint64_t v18 = v17;
      if (*(void *)(a2 + 16))
      {
        sub_2576A7810();
        sub_25747588C(v16, v18);
        if (v19)
        {
          sub_2576A7810();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      sub_2576A7490();
      uint64_t v20 = sub_2576A7460();
      uint64_t v21 = sub_2574AB138(v20, (void (*)(uint64_t, uint64_t, uint64_t))sub_2574ADB80, (uint64_t)v28);
      swift_bridgeObjectRelease();
      if (*(void *)(v21 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AA0);
        uint64_t v22 = sub_2576A8C50();
      }
      else
      {
        uint64_t v22 = MEMORY[0x263F8EE80];
      }
      uint64_t v30 = v22;
      uint64_t v23 = sub_2576A7810();
      sub_2574AD6CC(v23, 1, &v30);
      swift_bridgeObjectRelease();
      sub_2576A7470();
    }
    ((void (*)(char *, void))v12)(v31, 0);
    swift_bridgeObjectRelease();
    v11(v32, 0);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v3 >= v26) {
      goto LABEL_35;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    if (!v9) {
      break;
    }
LABEL_19:
    ;
  }
  int64_t v10 = v3 + 1;
  if (v3 + 1 >= v26) {
    goto LABEL_35;
  }
  uint64_t v9 = *(void *)(v25 + 8 * v10);
  if (v9) {
    goto LABEL_18;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v26) {
    goto LABEL_35;
  }
  uint64_t v9 = *(void *)(v25 + 8 * v10);
  if (v9) {
    goto LABEL_18;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v26) {
    goto LABEL_35;
  }
  uint64_t v9 = *(void *)(v25 + 8 * v10);
  if (v9) {
    goto LABEL_18;
  }
  int64_t v10 = v3 + 4;
  if (v3 + 4 >= v26) {
    goto LABEL_35;
  }
  uint64_t v9 = *(void *)(v25 + 8 * v10);
  if (v9) {
    goto LABEL_18;
  }
  int64_t v10 = v3 + 5;
  if (v3 + 5 >= v26)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v9 = *(void *)(v25 + 8 * v10);
  if (v9)
  {
LABEL_18:
    int64_t v3 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v3 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v3 >= v26) {
      goto LABEL_35;
    }
    uint64_t v9 = *(void *)(v25 + 8 * v3);
    ++v10;
    if (v9) {
      goto LABEL_19;
    }
  }
LABEL_37:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_2574AC81C()
{
  uint64_t v107 = sub_2576A7520();
  uint64_t v1 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v106 = (char *)v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_2576A73F0();
  uint64_t v3 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A88);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v123 = (char *)v94 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v105 = (char *)v94 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v124 = (uint64_t)v94 - v16;
  uint64_t v126 = sub_2576A7440();
  uint64_t v17 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v102 = (char *)v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v121 = (char *)v94 - v20;
  uint64_t v21 = sub_2576A7460();
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(v21 + 64);
  uint64_t v97 = v21 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v98 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v114 = v17 + 16;
  uint64_t v120 = (void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  int v113 = *MEMORY[0x263F53330];
  uint64_t v118 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v104 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v103 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v117 = v17;
  v94[1] = v17 + 40;
  uint64_t v101 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v27 = v21;
  uint64_t v96 = v0;
  float v100 = v7;
  uint64_t v95 = v21;
  if (!v26) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v115 = (v26 - 1) & v26;
  int64_t v116 = v22;
  for (unint64_t i = __clz(__rbit64(v26)) | (v22 << 6); ; unint64_t i = __clz(__rbit64(v30)) + (v31 << 6))
  {
    uint64_t v33 = *(void *)(*(void *)(v27 + 48) + 16 * i + 8);
    sub_2576A7810();
    uint64_t v34 = (void (*)(char *, void))sub_2576A7450();
    uint64_t v35 = v33;
    uint64_t v36 = sub_2574B5950();
    uint64_t v38 = v37;
    uint64_t v39 = sub_2576A73C0();
    if (__swift_getEnumTagSinglePayload(v38, 1, v39))
    {
      ((void (*)(char *, void))v36)(v130, 0);
      swift_bridgeObjectRelease();
      v34(v131, 0);
      goto LABEL_66;
    }
    uint64_t v108 = v36;
    uint64_t v109 = v35;
    uint64_t v40 = *(void *)(sub_2576A73B0() + 16);
    swift_bridgeObjectRelease();
    uint64_t v125 = v40;
    if (v40) {
      break;
    }
LABEL_65:
    ((void (*)(char *, void))v108)(v130, 0);
    swift_bridgeObjectRelease();
    v34(v131, 0);
    uint64_t v27 = v95;
LABEL_66:
    int64_t v22 = v116;
    unint64_t v26 = v115;
    if (v115) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v29 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      goto LABEL_70;
    }
    if (v29 >= v98) {
      return swift_release();
    }
    unint64_t v30 = *(void *)(v97 + 8 * v29);
    int64_t v31 = v22 + 1;
    if (!v30)
    {
      int64_t v31 = v22 + 2;
      if (v22 + 2 >= v98) {
        return swift_release();
      }
      unint64_t v30 = *(void *)(v97 + 8 * v31);
      if (!v30)
      {
        int64_t v31 = v22 + 3;
        if (v22 + 3 >= v98) {
          return swift_release();
        }
        unint64_t v30 = *(void *)(v97 + 8 * v31);
        if (!v30)
        {
          int64_t v31 = v22 + 4;
          if (v22 + 4 >= v98) {
            return swift_release();
          }
          unint64_t v30 = *(void *)(v97 + 8 * v31);
          if (!v30)
          {
            int64_t v31 = v22 + 5;
            if (v22 + 5 >= v98) {
              return swift_release();
            }
            unint64_t v30 = *(void *)(v97 + 8 * v31);
            if (!v30)
            {
              uint64_t v32 = v22 + 6;
              if (v22 + 6 >= v98) {
                return swift_release();
              }
              unint64_t v30 = *(void *)(v97 + 8 * v32);
              if (!v30)
              {
                while (1)
                {
                  int64_t v31 = v32 + 1;
                  if (__OFADD__(v32, 1)) {
                    goto LABEL_73;
                  }
                  if (v31 >= v98) {
                    return swift_release();
                  }
                  unint64_t v30 = *(void *)(v97 + 8 * v31);
                  ++v32;
                  if (v30) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v31 = v22 + 6;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v115 = (v30 - 1) & v30;
    int64_t v116 = v31;
  }
  unint64_t v41 = 0;
  uint64_t v122 = v38;
  while (1)
  {
    uint64_t v42 = (void (*)(char *, void))sub_2576A73A0();
    uint64_t v44 = v43;
    uint64_t v45 = *v43;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v44 = v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v45 = sub_257582B84();
      *uint64_t v44 = v45;
    }
    if (v41 >= *(void *)(v45 + 16)) {
      break;
    }
    sub_2576A7510();
    if (sub_2576A74F0() == 0x74736E6F63 && v47 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v49 = sub_2576A8F60();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0) {
        goto LABEL_64;
      }
    }
    uint64_t v50 = v34;
    uint64_t v51 = sub_2576A74E0();
    if (*(void *)(v51 + 16) && (unint64_t v52 = sub_25747588C(7102838, 0xE300000000000000), (v53 & 1) != 0))
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v117 + 16))(v124, *(void *)(v51 + 56) + *(void *)(v117 + 72) * v52, v126);
      uint64_t v54 = 0;
    }
    else
    {
      uint64_t v54 = 1;
    }
    uint64_t v56 = (uint64_t)v123;
    uint64_t v55 = v124;
    uint64_t v57 = v126;
    __swift_storeEnumTagSinglePayload(v124, v54, 1, v126);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload(v55, 1, v57) != 1)
    {
      unint64_t v58 = v121;
      char v119 = *v120;
      v119(v121, v55, v57);
      sub_2576A7410();
      uint64_t v59 = sub_2576A7400();
      if (__swift_getEnumTagSinglePayload(v56, 1, v59) == 1)
      {
        (*v118)(v58, v57);
        goto LABEL_50;
      }
      sub_2574ADB88(v56, (uint64_t)v7, &qword_26A001A88);
      uint64_t v60 = *(void *)(v59 - 8);
      int v61 = (*(uint64_t (**)(char *, uint64_t))(v60 + 88))(v7, v59);
      if (v61 == v113)
      {
        (*(void (**)(char *, uint64_t))(v60 + 96))(v7, v59);
        (*v104)(v111, v7, v112);
        strcpy((char *)v128, "@model_path/");
        HIBYTE(v128[6]) = 0;
        v128[7] = -5120;
        sub_2576A73E0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        uint64_t v62 = v106;
        sub_2576A7430();
        sub_2576A73D0();
        uint64_t v63 = (uint64_t)v105;
        sub_2576A7420();
        swift_bridgeObjectRelease();
        (*v103)(v62, v107);
        uint64_t v64 = v126;
        __swift_storeEnumTagSinglePayload(v63, 0, 1, v126);
        uint64_t v65 = sub_2576A74D0();
        uint64_t v67 = v66;
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v63, 1, v64);
        uint64_t v110 = (void (*)(_WORD *, void))v65;
        if (EnumTagSinglePayload == 1)
        {
          sub_2574ADBE4(v63, &qword_26A001A90);
          sub_2576A7810();
          unint64_t v69 = sub_25747588C(7102838, 0xE300000000000000);
          char v71 = v70;
          swift_bridgeObjectRelease();
          if (v71)
          {
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v127 = (void *)*v67;
            *uint64_t v67 = 0x8000000000000000;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A98);
            sub_2576A8AD0();
            uint64_t v72 = v127;
            swift_bridgeObjectRelease();
            uint64_t v73 = (uint64_t)v12;
            uint64_t v74 = v67;
            uint64_t v75 = v126;
            v119(v12, v72[7] + *(void *)(v117 + 72) * v69, v126);
            sub_2576A8B00();
            *uint64_t v74 = v72;
            swift_bridgeObjectRelease();
            uint64_t v76 = 0;
            uint64_t v7 = v100;
            uint64_t v56 = (uint64_t)v123;
            uint64_t v77 = v121;
            uint64_t v34 = v50;
          }
          else
          {
            uint64_t v76 = 1;
            uint64_t v7 = v100;
            uint64_t v56 = (uint64_t)v123;
            uint64_t v73 = (uint64_t)v12;
            uint64_t v77 = v121;
            uint64_t v34 = v50;
            uint64_t v75 = v126;
          }
          __swift_storeEnumTagSinglePayload(v73, v76, 1, v75);
          sub_2574ADBE4(v73, &qword_26A001A90);
        }
        else
        {
          uint64_t v78 = v63;
          id v79 = (void (*)(unint64_t, char *, uint64_t))v119;
          v119(v102, v78, v64);
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v127 = (void *)*v67;
          uint64_t v80 = v127;
          uint64_t v99 = v67;
          *uint64_t v67 = 0x8000000000000000;
          unint64_t v81 = sub_25747588C(7102838, 0xE300000000000000);
          if (__OFADD__(v80[2], (v82 & 1) == 0)) {
            goto LABEL_71;
          }
          unint64_t v83 = v81;
          char v84 = v82;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A98);
          char v85 = sub_2576A8AD0();
          uint64_t v56 = (uint64_t)v123;
          uint64_t v34 = v50;
          if (v85)
          {
            unint64_t v86 = sub_25747588C(7102838, 0xE300000000000000);
            if ((v84 & 1) != (v87 & 1)) {
              goto LABEL_74;
            }
            unint64_t v83 = v86;
          }
          uint64_t v88 = v127;
          if (v84)
          {
            (*(void (**)(unint64_t, char *, uint64_t))(v117 + 40))(v127[7] + *(void *)(v117 + 72) * v83, v102, v126);
          }
          else
          {
            v127[(v83 >> 6) + 8] |= 1 << v83;
            float v89 = (void *)(v88[6] + 16 * v83);
            *float v89 = 7102838;
            v89[1] = 0xE300000000000000;
            v79(v88[7] + *(void *)(v117 + 72) * v83, v102, v126);
            uint64_t v90 = v88[2];
            BOOL v91 = __OFADD__(v90, 1);
            uint64_t v92 = v90 + 1;
            if (v91) {
              goto LABEL_72;
            }
            v88[2] = v92;
          }
          *uint64_t v99 = v127;
          swift_bridgeObjectRelease();
          uint64_t v7 = v100;
          uint64_t v77 = v121;
          uint64_t v75 = v126;
        }
        v110(v128, 0);
        (*v101)(v111, v112);
        (*v118)(v77, v75);
      }
      else
      {
        (*v118)(v121, v126);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v59);
        uint64_t v56 = (uint64_t)v123;
LABEL_50:
        uint64_t v34 = v50;
      }
      sub_2574ADBE4(v56, &qword_26A001A88);
      goto LABEL_64;
    }
    sub_2574ADBE4(v55, &qword_26A001A90);
    uint64_t v34 = v50;
LABEL_64:
    ++v41;
    v42(v129, 0);
    if (v125 == v41) {
      goto LABEL_65;
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = sub_2576A9020();
  __break(1u);
  return result;
}

void sub_2574AD6CC(uint64_t a1, char a2, void *a3)
{
  uint64_t v45 = a3;
  uint64_t v6 = sub_2576A73C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v44 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AA8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (void *)((char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v37[0] = v3;
  v37[1] = a1;
  uint64_t v42 = (char *)v13 + *(int *)(v10 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v39 = *(void *)(v11 + 72);
  uint64_t v43 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  sub_2576A7810();
  uint64_t v40 = v7;
  uint64_t v41 = v6;
  uint64_t v38 = v13;
  while (1)
  {
    sub_2574ADB88(v15, (uint64_t)v13, &qword_26A001AA8);
    uint64_t v17 = v13[1];
    uint64_t v48 = *v13;
    uint64_t v16 = v48;
    uint64_t v49 = v17;
    uint64_t v18 = *v43;
    (*v43)(v44, v42, v6);
    uint64_t v19 = (void *)*v45;
    unint64_t v21 = sub_25747588C(v16, v17);
    uint64_t v22 = v19[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_2576A9020();
      __break(1u);
      goto LABEL_20;
    }
    char v25 = v20;
    if (v19[3] < v24) {
      break;
    }
    if (a2)
    {
      if (v20) {
        goto LABEL_14;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A001BF0);
      sub_2576A8AF0();
      if (v25) {
        goto LABEL_14;
      }
    }
LABEL_10:
    uint64_t v28 = v44;
    int64_t v29 = (void *)*v45;
    *(void *)(*v45 + 8 * (v21 >> 6) + 64) |= 1 << v21;
    unint64_t v30 = (uint64_t *)(v29[6] + 16 * v21);
    *unint64_t v30 = v16;
    v30[1] = v17;
    unint64_t v31 = v29[7] + *(void *)(v40 + 72) * v21;
    uint64_t v6 = v41;
    v18((char *)v31, v28, v41);
    uint64_t v32 = v29[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_18;
    }
    long long v29[2] = v34;
    uint64_t v13 = v38;
    v15 += v39;
    a2 = 1;
    if (!--v14)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_257547380(v24, a2 & 1);
  unint64_t v26 = sub_25747588C(v16, v17);
  if ((v25 & 1) != (v27 & 1)) {
    goto LABEL_19;
  }
  unint64_t v21 = v26;
  if ((v25 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_14:
  uint64_t v35 = (void *)swift_allocError();
  swift_willThrow();
  id v50 = v35;
  id v36 = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_2576A8730();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
  sub_2576A8B60();
  __break(1u);
}

uint64_t sub_2574ADB28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

void *sub_2574ADB80(char a1, uint64_t a2, unint64_t a3)
{
  return sub_2574AC1A8(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_2574ADB88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_16_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_2574ADBE4(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_16_1();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_2574ADC38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_16_1();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_2574ADC94(uint64_t *a1, uint64_t *a2)
{
  return sub_25753F21C(*a1, a1[1], *a2, a2[1]) & 1;
}

uint64_t sub_2574ADCC0(uint64_t *a1)
{
  return sub_2574ADC94(a1, *(uint64_t **)(v1 + 16)) & 1;
}

unint64_t OUTLINED_FUNCTION_2_15()
{
  *(void *)(v1 + 16) = v3;
  return v1
       + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))
       + *(void *)(v0 + 72) * v2;
}

void OUTLINED_FUNCTION_4_11()
{
  sub_2574E79D4();
}

void OUTLINED_FUNCTION_5_10()
{
  sub_2574E79D4();
}

uint64_t (*Conv1D.weight.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2574ADE28;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t (*Conv1D.bias.modify(void *a1))()
{
  a1[1] = v1;
  OUTLINED_FUNCTION_33_2();
  if (!v3)
  {
    *a1 = 0;
    return sub_2574ADEF8;
  }
  uint64_t v4 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
      return sub_2574ADEF8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

#error "2574AE074: call analysis failed (funcsize=222)"

void Conv1D.init(weight:bias:stride:padding:dilation:groupCount:)()
{
  OUTLINED_FUNCTION_48_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v46 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = *v9;
  uint64_t v12 = *v11;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AB8);
  uint64_t v13 = OUTLINED_FUNCTION_27_3();
  uint64_t v14 = OUTLINED_FUNCTION_117_0(v13);
  if (v16 != 3)
  {
    OUTLINED_FUNCTION_62_1();
    goto LABEL_27;
  }
  uint64_t v17 = v14;
  uint64_t v18 = *(void *)(v15 + 32);
  if (v1 != -1)
  {
    uint64_t v19 = v18;
    if (v1) {
      uint64_t v19 = v18 % v1;
    }
    if (v19)
    {
      OUTLINED_FUNCTION_34_2();
      OUTLINED_FUNCTION_17_0();
LABEL_23:
      OUTLINED_FUNCTION_35_1();
      goto LABEL_24;
    }
  }
  uint64_t v47 = v5;
  if (v12)
  {
    OUTLINED_FUNCTION_47_1();
    if (!v20)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_38_1();
LABEL_24:
      OUTLINED_FUNCTION_26_3();
      __break(1u);
LABEL_25:
      OUTLINED_FUNCTION_40_1();
      sub_2576A7810();
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_112_0();
    if (!v20)
    {
      OUTLINED_FUNCTION_52_1();
      OUTLINED_FUNCTION_101_1();
      OUTLINED_FUNCTION_59_1(34);
      OUTLINED_FUNCTION_65_1();
      uint64_t v44 = sub_2576A7810();
      MEMORY[0x25A2B83F0](v44, MEMORY[0x263F8D6C8]);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_7();
      OUTLINED_FUNCTION_67_1();
      if (!v45) {
        goto LABEL_25;
      }
      sub_2576A8EA0();
      OUTLINED_FUNCTION_97_1();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_1();
      OUTLINED_FUNCTION_96_1();
      goto LABEL_23;
    }
  }
  uint64_t v48 = v3;
  OUTLINED_FUNCTION_1_4();
  uint64_t v21 = OUTLINED_FUNCTION_90_1();
  uint64_t v29 = OUTLINED_FUNCTION_39_1(v21, v22, v23, v24, v25, v26, v27, v28);
  swift_release();
  if (v12)
  {
    uint64_t v30 = OUTLINED_FUNCTION_1_4();
    uint64_t v38 = OUTLINED_FUNCTION_39_1(v30, v31, v32, v33, v34, v35, v36, v37);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    uint64_t v38 = OUTLINED_FUNCTION_20_7();
  }
  uint64_t v39 = v38;
  uint64_t v40 = *(void **)(*(void *)(v10 + 16) + 152);
  if (!v40[2]) {
    goto LABEL_25;
  }
  uint64_t v41 = v40[4];
  sub_2576A7810();
  swift_release();
  if (v40[2] <= 2uLL)
  {
    OUTLINED_FUNCTION_8_8();
LABEL_26:
    OUTLINED_FUNCTION_70_1();
LABEL_27:
    sub_25746BF88();
  }
  BOOL v42 = v12 != 0;
  uint64_t v43 = v40[6];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v8 = v29;
  *(_WORD *)(v8 + 8) = 256;
  *(void *)(v8 + 16) = v39;
  *(_WORD *)(v8 + 24) = 256;
  *(unsigned char *)(v8 + 26) = v42;
  *(void *)(v8 + 32) = v41;
  *(void *)(v8 + 40) = v43;
  *(void *)(v8 + 48) = v46;
  *(void *)(v8 + 56) = v47;
  *(void *)(v8 + 64) = v48;
  *(void *)(v8 + 72) = v1;
  *(void *)(v8 + 80) = v17;
  OUTLINED_FUNCTION_46_1();
}

void Conv1D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)()
{
  OUTLINED_FUNCTION_123_0();
  uint64_t v12 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_122_0();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AB8);
  uint64_t v9 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v9 + 16) = 0;
  if (v0 != -1)
  {
    uint64_t v10 = v8;
    if (v0) {
      uint64_t v10 = v8 % v0;
    }
    if (v10)
    {
      OUTLINED_FUNCTION_60_1();
      goto LABEL_14;
    }
  }
  if (v8 <= 0)
  {
    OUTLINED_FUNCTION_113_0();
LABEL_14:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_15;
  }
  if (v14 <= 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_133();
LABEL_15:
    OUTLINED_FUNCTION_26_3();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_1_4();
  swift_retain();
  uint64_t v11 = swift_retain();
  sub_25748FBC8(v11);
  OUTLINED_FUNCTION_108_0();
  swift_allocObject();
  OUTLINED_FUNCTION_58_1();
  if (v3) {
    sub_25748FBC8(v3);
  }
  else {
    sub_25748FC24(0);
  }
  OUTLINED_FUNCTION_118_0();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_74_1();
  v2[4] = v8;
  v2[5] = v14;
  v2[6] = v12;
  v2[7] = v13;
  v2[8] = v1;
  v2[9] = v0;
  v2[10] = v9;
}

void Conv1D.initializeParameters(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  OUTLINED_FUNCTION_87_1();
  a35 = v40;
  a36 = v41;
  OUTLINED_FUNCTION_12_8(*v42);
  if (!(!v48 & v43))
  {
LABEL_13:
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_6_10();
  }
  OUTLINED_FUNCTION_110_1();
  uint64_t v44 = *(void *)(v36 + 72);
  uint64_t v46 = *(void *)(v45 + 40);
  if (v44 != -1 && v46 % v44)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_21_6();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_2576ABB50;
    *(void *)(v47 + 32) = v37;
    BOOL v48 = v46 == 0x8000000000000000 && v44 == -1;
    if (v48)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(void *)(v47 + 40) = v46 / v44;
    *(void *)(v47 + 48) = v39;
    a11 = v47;
    swift_retain();
    sub_25748FC8C(&a11);
    swift_release();
    swift_bridgeObjectRelease();
    if (v38)
    {
      uint64_t v49 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_107_1(v49, (__n128)xmmword_2576ABB10);
      sub_25748FC8C(&a11);
      swift_release();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_83_1();
  }
}

uint64_t Conv1D.forward(_:)()
{
  OUTLINED_FUNCTION_71_1();
  if (!v5)
  {
LABEL_15:
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_102_1();
  uint64_t v6 = *v0;
  Tensor.expandingShape(at:)();
  uint64_t v7 = *(void *)(v6 + 32);
  if ((~v7 & 0xF000000000000007) == 0) {
    goto LABEL_12;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
LABEL_13:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_14;
  }
  sub_257486C84();
  Tensor.expandingShape(at:)();
  sub_257486C8C(v7);
  if ((v4 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(v3 + 32);
  if ((~v8 & 0xF000000000000007) == 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_14:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_15;
  }
  if ((v8 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
  sub_257486C84();
LABEL_9:
  OUTLINED_FUNCTION_99_1();
  conv2D(_:weight:bias:stride:padding:dilation:groupCount:)(v9, v10, v11, v12, v13, v14, v15, 1, v16, v1, v2);
  swift_release();
  swift_release();
  swift_release();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

void sub_2574AEB54()
{
}

void Conv1D.init(from:)()
{
}

void sub_2574AEBBC()
{
}

void Conv1D.encode(to:)()
{
}

uint64_t sub_2574AEC10()
{
  return sub_2574B331C();
}

uint64_t sub_2574AEC30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2575744BC(*a1, *a2);
}

uint64_t sub_2574AEC3C()
{
  return sub_2576A3638(*v0);
}

uint64_t sub_2574AEC44(uint64_t a1)
{
  return sub_25746FA70(a1, *v1);
}

uint64_t sub_2574AEC4C(uint64_t a1)
{
  return sub_2575EEB80(a1, *v1);
}

uint64_t sub_2574AEC54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B331C();
  *a1 = result;
  return result;
}

uint64_t sub_2574AEC8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574AEC10();
  *a1 = result;
  return result;
}

uint64_t sub_2574AECB4(uint64_t a1)
{
  unint64_t v2 = sub_2574B38F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574AECF0(uint64_t a1)
{
  unint64_t v2 = sub_2574B38F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Conv2D.weight.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t sub_2574AEDC0@<X0>(void *a1@<X8>)
{
  uint64_t result = Conv2D.weight.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2574AEE54(uint64_t *a1)
{
  uint64_t v9 = *a1;
  swift_retain();
  return Conv2D.weight.setter(&v9, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t Conv2D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_86_1(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*Conv2D.weight.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2574ADE28;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

void Conv2D.bias.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 26) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_68_1(v2, v3);
  sub_257486C84();
}

void sub_2574AF014(void *a1@<X8>)
{
  Conv2D.bias.getter(&v2);
  *a1 = v2;
}

void sub_2574AF0A8()
{
}

void Conv2D.bias.setter()
{
  OUTLINED_FUNCTION_33_2();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_92_1(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
      return;
    }
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_9;
  }
  if (v0)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_9:
    OUTLINED_FUNCTION_131_0();
    __break(1u);
  }
}

uint64_t (*Conv2D.bias.modify(void *a1))()
{
  a1[1] = v1;
  OUTLINED_FUNCTION_33_2();
  if (!v3)
  {
    *a1 = 0;
    return sub_2574ADEF8;
  }
  uint64_t v4 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
      return sub_2574ADEF8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t Conv2D.$bias.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_33_2();
  if (v2)
  {
    OUTLINED_FUNCTION_43_1();
    if (v2) {
      __int16 v3 = 0;
    }
    __int16 v6 = v3 | v4;
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v6 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v6;
  return result;
}

uint64_t Conv2D.isEveryParameterInitialized.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(unsigned char *)(v1 + 16)) {
    return OUTLINED_FUNCTION_15_2();
  }
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  BOOL v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  int v5 = !v4;
  uint64_t v6 = v5 ^ 1u;
  if (v4 && *(unsigned char *)(v0 + 26))
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + 32);
    uint64_t v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_125_0(v6, v1);
}

uint64_t Conv2D.kernelSize.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Conv2D.stride.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Conv2D.padding.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t Conv2D.dilation.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t Conv2D.groupCount.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t sub_2574AF304@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13 = *a1;
  char v41 = *((unsigned char *)a1 + 9);
  char v42 = *((unsigned char *)a1 + 8);
  uint64_t v14 = *(void *)a2;
  unsigned int v15 = *(unsigned __int16 *)(a2 + 8);
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AE8);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_17_6();
  if (v37) {
    goto LABEL_32;
  }
  if ((v16 & 0x8000000000000000) == 0) {
    goto LABEL_23;
  }
  uint64_t v47 = a7;
  OUTLINED_FUNCTION_115_0();
  if (v19 != 4)
  {
LABEL_28:
    OUTLINED_FUNCTION_17_0();
    while (1)
    {
      OUTLINED_FUNCTION_63_0();
LABEL_33:
      while (1)
      {
        sub_2576A8B60();
        __break(1u);
LABEL_34:
        if (v38 < 0) {
          break;
        }
LABEL_24:
        OUTLINED_FUNCTION_4_12();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_35_1();
      }
      OUTLINED_FUNCTION_32_3(v38);
      if (!v39) {
        break;
      }
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_1();
    }
    goto LABEL_37;
  }
  uint64_t v20 = v17;
  uint64_t v21 = *(void *)(v18 + 32);
  if (a10 != -1)
  {
    uint64_t v22 = v21;
    if (a10) {
      uint64_t v22 = v21 % a10;
    }
    if (v22)
    {
      OUTLINED_FUNCTION_36_1();
      goto LABEL_28;
    }
  }
  if (!v14)
  {
    OUTLINED_FUNCTION_1_4();
    swift_retain();
    swift_retain();
    uint64_t v26 = sub_25748FC24(0);
    char v24 = 0;
    LOBYTE(v25) = 1;
    goto LABEL_17;
  }
  uint64_t v23 = *(void *)(v14 + 32);
  OUTLINED_FUNCTION_116_0();
  if (v37)
  {
LABEL_32:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
    goto LABEL_33;
  }
  if ((v23 & 0x8000000000000000) == 0)
  {
LABEL_23:
    OUTLINED_FUNCTION_61_1();
    goto LABEL_24;
  }
  OUTLINED_FUNCTION_47_1();
  if (!v37)
  {
    OUTLINED_FUNCTION_35_2();
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_112_0();
  if (!v37)
  {
    swift_retain();
    sub_257486C70(v23);
    sub_2576A8730();
    sub_2576A7B00();
    uint64_t v36 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v36, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_82_1();
    OUTLINED_FUNCTION_17_6();
    if (!v37) {
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  char v24 = v15 & 1;
  int v25 = (v15 >> 8) & 1;
  swift_retain();
  swift_retain();
  uint64_t v26 = v14;
LABEL_17:
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_17_6();
  if (v37) {
    goto LABEL_32;
  }
  if ((v27 & 0x8000000000000000) == 0) {
    goto LABEL_23;
  }
  uint64_t v28 = (void *)OUTLINED_FUNCTION_32_3(v27);
  if (!v29)
  {
LABEL_37:
    OUTLINED_FUNCTION_57_1();
LABEL_38:
    OUTLINED_FUNCTION_95_1();
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  if (v29 <= 2 || (uint64_t v40 = a8, v29 == 3))
  {
    OUTLINED_FUNCTION_73_1();
    goto LABEL_38;
  }
  char v30 = v24;
  uint64_t v31 = v13;
  uint64_t v32 = v28[4];
  uint64_t v34 = v28[6];
  uint64_t v33 = v28[7];
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a9 = v31;
  *(unsigned char *)(a9 + 8) = v42;
  *(unsigned char *)(a9 + 9) = v41;
  *(void *)(a9 + 16) = v26;
  *(unsigned char *)(a9 + 24) = v30;
  *(unsigned char *)(a9 + 25) = v25;
  *(unsigned char *)(a9 + 26) = v14 != 0;
  *(void *)(a9 + 32) = v32;
  *(void *)(a9 + 40) = v34;
  *(void *)(a9 + 48) = v33;
  *(void *)(a9 + 56) = a3;
  *(void *)(a9 + 64) = a4;
  *(void *)(a9 + 72) = a5;
  *(void *)(a9 + 80) = a6;
  *(void *)(a9 + 88) = v47;
  *(void *)(a9 + 96) = v40;
  *(void *)(a9 + 104) = a10;
  *(void *)(a9 + 112) = v20;
  return result;
}

void Conv2D.init(weight:bias:stride:padding:dilation:groupCount:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13 = *a1;
  uint64_t v14 = *a2;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AE8);
  uint64_t v15 = OUTLINED_FUNCTION_27_3();
  uint64_t v16 = OUTLINED_FUNCTION_117_0(v15);
  if (v18 != 4) {
    goto LABEL_25;
  }
  uint64_t v19 = v16;
  uint64_t v20 = *(void *)(v17 + 32);
  if (a10 != -1)
  {
    uint64_t v21 = v20;
    if (a10) {
      uint64_t v21 = v20 % a10;
    }
    if (v21)
    {
      OUTLINED_FUNCTION_34_2();
LABEL_25:
      OUTLINED_FUNCTION_17_0();
      goto LABEL_26;
    }
  }
  uint64_t v56 = a7;
  if (v14)
  {
    OUTLINED_FUNCTION_47_1();
    if (!v22)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_38_1();
      while (1)
      {
        OUTLINED_FUNCTION_26_3();
        __break(1u);
LABEL_28:
        swift_retain();
        sub_2576A8730();
        OUTLINED_FUNCTION_59_1(38);
        sub_2576A7B00();
        uint64_t v46 = sub_2576A7810();
        MEMORY[0x25A2B83F0](v46, MEMORY[0x263F8D6C8]);
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_82_1();
        OUTLINED_FUNCTION_67_1();
        if (!v47) {
          break;
        }
        sub_2576A8EA0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_44_1();
LABEL_26:
        OUTLINED_FUNCTION_35_1();
      }
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_112_0();
    if (!v22) {
      goto LABEL_28;
    }
  }
  uint64_t v57 = a8;
  OUTLINED_FUNCTION_1_4();
  uint64_t v23 = OUTLINED_FUNCTION_90_1();
  uint64_t v31 = OUTLINED_FUNCTION_100_1(v23, v24, v25, v26, v27, v28, v29, v30, v48, v50);
  swift_release();
  if (v14)
  {
    uint64_t v32 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_100_1(v32, v33, v34, v35, v36, v37, v38, v39, v49, v51);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_20_7();
  }
  uint64_t v40 = *(void **)(*(void *)(v13 + 16) + 152);
  unint64_t v41 = v40[2];
  if (!v41)
  {
LABEL_30:
    OUTLINED_FUNCTION_51_1();
    goto LABEL_21;
  }
  if (v41 <= 2)
  {
    OUTLINED_FUNCTION_50_1();
LABEL_21:
    sub_2576A7810();
    goto LABEL_23;
  }
  uint64_t v42 = v40[4];
  uint64_t v43 = v40[6];
  sub_2576A7810();
  swift_release();
  if (v40[2] <= 3uLL)
  {
    OUTLINED_FUNCTION_50_1();
LABEL_23:
    OUTLINED_FUNCTION_6_10();
  }
  BOOL v44 = v14 != 0;
  uint64_t v45 = v40[7];
  swift_bridgeObjectRelease();
  *(void *)a9 = v31;
  OUTLINED_FUNCTION_134();
  *(unsigned char *)(a9 + 26) = v44;
  *(void *)(a9 + 32) = v42;
  *(void *)(a9 + 40) = v43;
  *(void *)(a9 + 48) = v45;
  *(void *)(a9 + 56) = a3;
  *(void *)(a9 + 64) = a4;
  *(void *)(a9 + 72) = a5;
  *(void *)(a9 + 80) = a6;
  *(void *)(a9 + 88) = v56;
  *(void *)(a9 + 96) = v57;
  *(void *)(a9 + 104) = a10;
  *(void *)(a9 + 112) = v19;
}

void Conv2D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  OUTLINED_FUNCTION_87_1();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v60 = v48;
  uint64_t v61 = v49;
  uint64_t v63 = v50;
  uint64_t v64 = v51;
  uint64_t v53 = v52;
  char v54 = OUTLINED_FUNCTION_122_0();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AE8);
  uint64_t v55 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v55 + 16) = 0;
  if (v53 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_128();
LABEL_17:
    OUTLINED_FUNCTION_26_3();
    __break(1u);
    return;
  }
  uint64_t v56 = v55;
  if (a38 != -1 && (!a38 || v53 % a38))
  {
    OUTLINED_FUNCTION_135();
LABEL_16:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  uint64_t v62 = v43;
  if (v63 < 1 || v64 <= 0)
  {
    OUTLINED_FUNCTION_60_1();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_90_1();
  uint64_t v58 = swift_retain();
  uint64_t v59 = sub_25748FBC8(v58);
  OUTLINED_FUNCTION_108_0();
  swift_allocObject();
  OUTLINED_FUNCTION_58_1();
  if (a40) {
    sub_25748FBC8(a40);
  }
  else {
    sub_25748FC24(0);
  }
  OUTLINED_FUNCTION_119_0();
  swift_release();
  swift_release();
  swift_release();
  *(void *)uint64_t v41 = v59;
  *(_WORD *)(v41 + 8) = 256;
  *(void *)(v41 + 16) = v40;
  *(_WORD *)(v41 + 24) = 256;
  *(unsigned char *)(v41 + 26) = v54;
  *(void *)(v41 + 32) = v53;
  *(void *)(v41 + 40) = v63;
  *(void *)(v41 + 48) = v64;
  *(void *)(v41 + 56) = v60;
  *(void *)(v41 + 64) = v61;
  *(void *)(v41 + 72) = v47;
  *(void *)(v41 + 80) = v45;
  *(void *)(v41 + 88) = v62;
  *(void *)(v41 + 96) = a37;
  *(void *)(v41 + 104) = a38;
  *(void *)(v41 + 112) = v56;
  OUTLINED_FUNCTION_83_1();
}

uint64_t Conv2D.initializeParameters(for:)(uint64_t *a1)
{
  OUTLINED_FUNCTION_12_8(*a1);
  if (!(!v17 & v4))
  {
LABEL_13:
    OUTLINED_FUNCTION_30_3();
    OUTLINED_FUNCTION_6_10();
  }
  long long v5 = (__int128)OUTLINED_FUNCTION_85_1();
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v7 + 40);
  if (v6 != -1 && v8 % v6)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_21_6();
    __break(1u);
  }
  else
  {
    long long v22 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_2576AE070;
    *(void *)(v9 + 32) = v2;
    BOOL v17 = v8 == 0x8000000000000000 && v6 == -1;
    if (v17)
    {
      __break(1u);
      goto LABEL_13;
    }
    *(void *)(v9 + 40) = v8 / v6;
    OUTLINED_FUNCTION_129_0(v9, v10, v11, v12, v13, v14, v15, v16, v20, v21, v22);
    sub_25748FC8C(v23);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      uint64_t v19 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_106_1(v19, (__n128)xmmword_2576ABB10);
      sub_25748FC8C(v23);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t Conv2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[2];
  char v6 = *((unsigned char *)v2 + 26);
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  uint64_t v9 = v2[9];
  uint64_t v10 = v2[10];
  uint64_t v11 = v2[11];
  uint64_t v12 = v2[12];
  uint64_t v13 = v2[13];
  uint64_t v21 = *a1;
  uint64_t v14 = *(void *)(v4 + 32);
  if ((~v14 & 0xF000000000000007) == 0) {
    goto LABEL_11;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_13;
  }
  uint64_t v20 = v14 & 0x7FFFFFFFFFFFFFFFLL;
  if ((v6 & 1) == 0)
  {
    BOOL v17 = 0;
    goto LABEL_8;
  }
  uint64_t v15 = OUTLINED_FUNCTION_18_7(v5);
  if (v16)
  {
LABEL_11:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_13:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v15 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
  BOOL v17 = (long long *)(v15 & 0x7FFFFFFFFFFFFFFFLL);
  sub_257486C84();
LABEL_8:
  uint64_t v19 = v17;
  sub_257486C84();
  conv2D(_:weight:bias:stride:padding:dilation:groupCount:)(&v21, &v20, &v19, v7, v8, v9, v10, v11, a2, v12, v13);
  swift_release();
  return sub_257486C8C(v14);
}

void sub_2574AFF78()
{
}

void Conv2D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AF0);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2574B39DC();
  OUTLINED_FUNCTION_109_1();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
    sub_2574B3A28(&qword_26A001B08);
    OUTLINED_FUNCTION_23_5();
    long long v15 = v26[0];
    OUTLINED_FUNCTION_23_5();
    long long v14 = v26[0];
    LOBYTE(v23) = 4;
    OUTLINED_FUNCTION_23_5();
    long long v13 = v26[0];
    sub_2574B3944();
    OUTLINED_FUNCTION_84_1();
    sub_2576A8D50();
    uint64_t v20 = v23;
    char v21 = v24;
    char v22 = v25;
    OUTLINED_FUNCTION_84_1();
    sub_2576A8D00();
    uint64_t v16 = v18;
    __int16 v17 = v19;
    uint64_t v6 = sub_2576A8D40();
    sub_2574AF304(&v20, (uint64_t)&v16, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), (uint64_t)v26, v6);
    uint64_t v7 = OUTLINED_FUNCTION_103_1();
    v8(v7);
    OUTLINED_FUNCTION_45_1(*(unint64_t *)&v26[0], (__n128)v26[2], (__n128)v26[3]);
    *(_OWORD *)(v4 + 64) = v9;
    *(_OWORD *)(v4 + 80) = v10;
    *(_OWORD *)(v4 + 96) = v11;
    *(void *)(v4 + 112) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_7_1();
}

void sub_2574B026C()
{
}

void Conv2D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B10);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_15_8();
  sub_2574B39DC();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_137();
  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    uint64_t v2 = OUTLINED_FUNCTION_76_1();
    v3(v2);
  }
  else
  {
    OUTLINED_FUNCTION_91_1();
    if (v6)
    {
      if (v4) {
        int v7 = 256;
      }
      else {
        int v7 = 0;
      }
      uint64_t v8 = v7 | v5;
      swift_retain();
    }
    else
    {
      uint64_t v8 = 0;
    }
    OUTLINED_FUNCTION_64_1();
    OUTLINED_FUNCTION_77_1();
    if (v8)
    {
      swift_release();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_130_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
      sub_2574B3A28(&qword_26A001B18);
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_56_1();
    }
    uint64_t v9 = OUTLINED_FUNCTION_126_0();
    v10(v9);
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574B043C()
{
  return sub_2574B331C();
}

uint64_t sub_2574B045C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B331C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B0494@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B043C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B04BC(uint64_t a1)
{
  unint64_t v2 = sub_2574B39DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574B04F8(uint64_t a1)
{
  unint64_t v2 = sub_2574B39DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t _s14NeuralNetworks6Conv1DV6weightAA6TensorVvg_0()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t sub_2574B05CC(__n128 *a1)
{
  __n128 v2 = OUTLINED_FUNCTION_11_7(a1);
  uint64_t result = v3(v2);
  void *v1 = v5;
  return result;
}

uint64_t sub_2574B0604()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

uint64_t TransposedConv1D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_86_1(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*TransposedConv1D.weight.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2574ADE28;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

void _s14NeuralNetworks6Conv1DV4biasAA6TensorVSgvg_0(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 26) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_68_1(v2, v3);
  sub_257486C84();
}

uint64_t sub_2574B07C4(__n128 *a1)
{
  __n128 v2 = OUTLINED_FUNCTION_11_7(a1);
  uint64_t result = v3(v2);
  void *v1 = v5;
  return result;
}

uint64_t sub_2574B07FC()
{
  OUTLINED_FUNCTION_120();
  return v0(v2);
}

void _s14NeuralNetworks6Conv1DV4biasAA6TensorVSgvs_0()
{
  OUTLINED_FUNCTION_33_2();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_92_1(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
      return;
    }
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_9;
  }
  if (v0)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_9:
    OUTLINED_FUNCTION_131_0();
    __break(1u);
  }
}

uint64_t (*TransposedConv1D.bias.modify(void *a1))()
{
  a1[1] = v1;
  OUTLINED_FUNCTION_33_2();
  if (!v3)
  {
    *a1 = 0;
    return sub_2574ADEF8;
  }
  uint64_t v4 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
      return sub_2574ADEF8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t _s14NeuralNetworks6Conv1DV5_biasAA9ParameterVSgvg_0@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_33_2();
  if (v2)
  {
    OUTLINED_FUNCTION_43_1();
    if (v2) {
      __int16 v3 = 0;
    }
    __int16 v6 = v3 | v4;
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v6 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v6;
  return result;
}

uint64_t _s14NeuralNetworks6Conv1DV27isEveryParameterInitializedSbvg_0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (*(unsigned char *)(v1 + 16)) {
    return OUTLINED_FUNCTION_15_2();
  }
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  BOOL v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  int v5 = !v4;
  uint64_t v6 = v5 ^ 1u;
  if (v4 && *(unsigned char *)(v0 + 26))
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + 32);
    uint64_t v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_125_0(v6, v1);
}

uint64_t TransposedConv1D.kernelSize.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t TransposedConv1D.stride.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t TransposedConv1D.padding.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TransposedConv1D.dilation.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t TransposedConv1D.groupCount.getter()
{
  return *(void *)(v0 + 72);
}

#error "2574B0BE0: call analysis failed (funcsize=214)"

void TransposedConv1D.init(weight:bias:stride:padding:dilation:groupCount:)()
{
  OUTLINED_FUNCTION_48_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v41 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = *v10;
  uint64_t v13 = *v12;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B20);
  uint64_t v14 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v15 = OUTLINED_FUNCTION_13_8(*(void *)(v11 + 16));
  if (!(!v17 & v16))
  {
LABEL_25:
    OUTLINED_FUNCTION_8_8();
    sub_2576A7810();
    goto LABEL_27;
  }
  if (v2 != -1)
  {
    uint64_t v18 = *(void *)(v15 + 40);
    if (v2) {
      uint64_t v18 = *(void *)(v15 + 40) % v2;
    }
    if (v18)
    {
      OUTLINED_FUNCTION_34_2();
      OUTLINED_FUNCTION_17_0();
      goto LABEL_29;
    }
  }
  uint64_t v42 = v6;
  if (v13)
  {
    OUTLINED_FUNCTION_47_1();
    if (!v17)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_38_1();
      while (1)
      {
        OUTLINED_FUNCTION_26_3();
        __break(1u);
LABEL_31:
        sub_2576A8EA0();
        OUTLINED_FUNCTION_97_1();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_44_1();
        OUTLINED_FUNCTION_96_1();
LABEL_29:
        OUTLINED_FUNCTION_35_1();
      }
    }
    if ((unsigned __int128)(v19 * (__int128)v2) >> 64 != (v19 * v2) >> 63)
    {
      __break(1u);
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_114_0();
    if (!v17)
    {
LABEL_21:
      OUTLINED_FUNCTION_52_1();
      OUTLINED_FUNCTION_101_1();
      OUTLINED_FUNCTION_59_1(34);
      OUTLINED_FUNCTION_65_1();
      uint64_t v39 = sub_2576A7810();
      MEMORY[0x25A2B83F0](v39, MEMORY[0x263F8D6C8]);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_7();
      OUTLINED_FUNCTION_13_8(*(void *)(v11 + 16));
      if (!v17 & v16)
      {
        OUTLINED_FUNCTION_111_0();
        if (v17) {
          goto LABEL_31;
        }
        __break(1u);
      }
      goto LABEL_25;
    }
  }
  uint64_t v40 = v4;
  OUTLINED_FUNCTION_1_4();
  uint64_t v20 = OUTLINED_FUNCTION_58_1();
  uint64_t v28 = OUTLINED_FUNCTION_39_1(v20, v21, v22, v23, v24, v25, v26, v27);
  swift_release();
  if (v13)
  {
    uint64_t v0 = (void *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_39_1((uint64_t)v0, v29, v30, v31, v32, v33, v34, v35);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_20_7();
  }
  OUTLINED_FUNCTION_54_1();
  if (!(!v17 & v16)) {
    goto LABEL_25;
  }
  uint64_t v36 = v0[5];
  sub_2576A7810();
  swift_release();
  if (v0[2] <= 2uLL)
  {
    OUTLINED_FUNCTION_8_8();
LABEL_27:
    OUTLINED_FUNCTION_6_10();
  }
  BOOL v37 = v13 != 0;
  uint64_t v38 = v0[6];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v9 = v28;
  OUTLINED_FUNCTION_134();
  *(unsigned char *)(v9 + 26) = v37;
  *(void *)(v9 + 32) = v36;
  *(void *)(v9 + 40) = v38;
  *(void *)(v9 + 48) = v41;
  *(void *)(v9 + 56) = v42;
  *(void *)(v9 + 64) = v40;
  *(void *)(v9 + 72) = v2;
  *(void *)(v9 + 80) = v14;
  OUTLINED_FUNCTION_46_1();
}

void TransposedConv1D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)()
{
  OUTLINED_FUNCTION_123_0();
  uint64_t v13 = v4;
  uint64_t v14 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_122_0();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B20);
  uint64_t v10 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v10 + 16) = 0;
  if (v9 < 1)
  {
    OUTLINED_FUNCTION_113_0();
LABEL_13:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_14;
  }
  if (v7 <= 0)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_133();
LABEL_14:
    OUTLINED_FUNCTION_26_3();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  if (v0 != -1 && (!v0 || v9 % v0))
  {
    OUTLINED_FUNCTION_60_1();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_1_4();
  swift_retain();
  uint64_t v12 = swift_retain();
  sub_25748FBC8(v12);
  OUTLINED_FUNCTION_108_0();
  swift_allocObject();
  OUTLINED_FUNCTION_58_1();
  if (v3) {
    sub_25748FBC8(v3);
  }
  else {
    sub_25748FC24(0);
  }
  OUTLINED_FUNCTION_118_0();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_74_1();
  v2[4] = v9;
  v2[5] = v7;
  v2[6] = v13;
  v2[7] = v14;
  unsigned char v2[8] = v1;
  v2[9] = v0;
  v2[10] = v11;
}

void TransposedConv1D.initializeParameters(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  OUTLINED_FUNCTION_87_1();
  a35 = v40;
  a36 = v41;
  OUTLINED_FUNCTION_12_8(*v42);
  if (!(!v49 & v43))
  {
LABEL_17:
    OUTLINED_FUNCTION_31_3();
    OUTLINED_FUNCTION_6_10();
  }
  OUTLINED_FUNCTION_110_1();
  uint64_t v44 = *(void *)(v36 + 72);
  uint64_t v46 = *(void *)(v45 + 40);
  uint64_t v47 = v46;
  if (v44)
  {
    if (v44 == -1) {
      goto LABEL_7;
    }
    uint64_t v47 = v46 % v44;
  }
  if (v47)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_21_6();
    __break(1u);
    return;
  }
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2576ABB50;
  *(void *)(v48 + 32) = v46;
  if (!v44)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v49 = v37 == 0x8000000000000000 && v44 == -1;
  if (v49) {
    goto LABEL_16;
  }
  *(void *)(v48 + 40) = v37 / v44;
  *(void *)(v48 + 48) = v39;
  a11 = v48;
  swift_retain();
  sub_25748FC8C(&a11);
  swift_release();
  swift_bridgeObjectRelease();
  if (v38)
  {
    uint64_t v50 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_107_1(v50, (__n128)xmmword_2576ABB10);
    sub_25748FC8C(&a11);
    swift_release();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_83_1();
}

uint64_t TransposedConv1D.forward(_:)()
{
  OUTLINED_FUNCTION_71_1();
  if (!v5)
  {
LABEL_15:
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_102_1();
  uint64_t v6 = *v0;
  Tensor.expandingShape(at:)();
  uint64_t v7 = *(void *)(v6 + 32);
  if ((~v7 & 0xF000000000000007) == 0) {
    goto LABEL_12;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
LABEL_13:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_14;
  }
  sub_257486C84();
  Tensor.expandingShape(at:)();
  sub_257486C8C(v7);
  if ((v4 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(v3 + 32);
  if ((~v8 & 0xF000000000000007) == 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_14:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_15;
  }
  if ((v8 & 0x8000000000000000) == 0) {
    goto LABEL_13;
  }
  sub_257486C84();
LABEL_9:
  OUTLINED_FUNCTION_99_1();
  transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)(v9, v10, v11, v12, v13, v14, v15, 0, v16, 0, 1, v1, v2);
  swift_release();
  swift_release();
  swift_release();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

void sub_2574B160C()
{
}

void TransposedConv1D.init(from:)()
{
}

void sub_2574B1674()
{
  void (*v1)(unint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v2)(void);
  void (*v3)(void);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  long long v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(unint64_t *__return_ptr, uint64_t *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  char v27;
  char v28;
  unint64_t v29;
  __n128 v30;
  __n128 v31;

  OUTLINED_FUNCTION_9_1();
  uint64_t v18 = v1;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(v8);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_88_1();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  sub_2576A91F0();
  if (!v0)
  {
    sub_2574B3944();
    sub_2576A8D50();
    uint64_t v23 = v26;
    uint64_t v24 = v27;
    uint64_t v25 = v28;
    sub_2576A8D00();
    uint64_t v19 = v21;
    uint64_t v20 = v22;
    uint64_t v10 = OUTLINED_FUNCTION_29_3(2);
    char v17 = OUTLINED_FUNCTION_29_3(3);
    char v16 = OUTLINED_FUNCTION_29_3(4);
    uint64_t v11 = OUTLINED_FUNCTION_29_3(5);
    v18(&v29, &v23, &v19, v10, v17, v16, v11);
    uint64_t v12 = OUTLINED_FUNCTION_94_1();
    v13(v12);
    OUTLINED_FUNCTION_45_1(v29, v30, v31);
    *(_OWORD *)(v7 + 64) = v14;
    *(void *)(v7 + 80) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  OUTLINED_FUNCTION_7_1();
}

void sub_2574B18F0()
{
}

void TransposedConv1D.encode(to:)()
{
}

void sub_2574B1944()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v11 = v3;
  char v5 = v4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_0_8();
  uint64_t v12 = v8;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_88_1();
  int v10 = *(unsigned __int8 *)(v1 + 26);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v11();
  sub_2576A9230();
  sub_2574B3990();
  OUTLINED_FUNCTION_136();
  sub_2576A8E40();
  if (!v2)
  {
    if (v10) {
      swift_retain();
    }
    OUTLINED_FUNCTION_64_1();
    OUTLINED_FUNCTION_136();
    sub_2576A8DE0();
    swift_release();
    OUTLINED_FUNCTION_128_0(2);
    OUTLINED_FUNCTION_93_1();
    OUTLINED_FUNCTION_128_0(3);
    OUTLINED_FUNCTION_93_1();
    OUTLINED_FUNCTION_128_0(4);
    OUTLINED_FUNCTION_93_1();
    OUTLINED_FUNCTION_128_0(5);
    OUTLINED_FUNCTION_93_1();
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0, v7);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574B1B7C()
{
  return sub_2574B331C();
}

uint64_t sub_2574B1B9C()
{
  return 6;
}

uint64_t sub_2574B1BA4(char a1)
{
  uint64_t result = 0x746867696577;
  switch(a1)
  {
    case 1:
      uint64_t result = 1935763810;
      break;
    case 2:
      uint64_t result = 0x656469727473;
      break;
    case 3:
      uint64_t result = 0x676E6964646170;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6964;
      break;
    case 5:
      uint64_t result = 0x756F4370756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2574B1C60(char a1)
{
  uint64_t result = 0x746867696577;
  switch(a1)
  {
    case 1:
      uint64_t result = 1935763810;
      break;
    case 2:
      uint64_t result = 0x656469727473;
      break;
    case 3:
      uint64_t result = 0x676E6964646170;
      break;
    case 4:
      uint64_t result = 0x6E6F6974616C6964;
      break;
    case 5:
      uint64_t result = 0x756F4370756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2574B1D1C()
{
  return sub_2576A3650(*v0);
}

uint64_t sub_2574B1D24(uint64_t a1)
{
  return sub_2575EEF78(a1, *v1);
}

uint64_t sub_2574B1D2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B331C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B1D64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574B1BA4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2574B1D90()
{
  return sub_2574B1C60(*v0);
}

uint64_t sub_2574B1D98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B1B7C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B1DC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B1B9C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B1DE8(uint64_t a1)
{
  unint64_t v2 = sub_2574B3A70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574B1E24(uint64_t a1)
{
  unint64_t v2 = sub_2574B3A70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TransposedConv2D.weight.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  OUTLINED_FUNCTION_68_1(v0, v1);
  return sub_257486C84();
}

uint64_t sub_2574B1EF4@<X0>(void *a1@<X8>)
{
  uint64_t result = TransposedConv2D.weight.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2574B1F30(uint64_t *a1)
{
  uint64_t v9 = *a1;
  swift_retain();
  return TransposedConv2D.weight.setter(&v9, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t TransposedConv2D.weight.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return OUTLINED_FUNCTION_86_1(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
}

uint64_t (*TransposedConv2D.weight.modify(uint64_t a1))()
{
  *(void *)(a1 + 8) = v1;
  uint64_t v2 = OUTLINED_FUNCTION_18_7(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_49_1(v2);
      return sub_2574ADE28;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_2574B203C(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = *a1;
    swift_retain();
    Parameter.wrappedValue.setter(&v3);
    return swift_release();
  }
  else
  {
    uint64_t v3 = *a1;
    return Parameter.wrappedValue.setter(&v3);
  }
}

void TransposedConv2D.bias.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 26) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_68_1(v2, v3);
  sub_257486C84();
}

void sub_2574B2160(void *a1@<X8>)
{
  TransposedConv2D.bias.getter(&v2);
  *a1 = v2;
}

void sub_2574B219C()
{
}

void TransposedConv2D.bias.setter()
{
  OUTLINED_FUNCTION_33_2();
  if (v8)
  {
    if (v0)
    {
      OUTLINED_FUNCTION_92_1(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v12);
      return;
    }
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_9;
  }
  if (v0)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_9:
    OUTLINED_FUNCTION_131_0();
    __break(1u);
  }
}

uint64_t (*TransposedConv2D.bias.modify(void *a1))()
{
  a1[1] = v1;
  OUTLINED_FUNCTION_33_2();
  if (!v3)
  {
    *a1 = 0;
    return sub_2574ADEF8;
  }
  uint64_t v4 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_49_1(v4);
      return sub_2574ADEF8;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)())OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t *sub_2574B2330(uint64_t *result, char a2)
{
  uint64_t v2 = *result;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(result[1] + 26))
    {
      if (v2)
      {
        uint64_t v3 = *result;
        return (uint64_t *)Parameter.wrappedValue.setter(&v3);
      }
      goto LABEL_14;
    }
    if (!v2) {
      return result;
    }
    swift_release();
LABEL_16:
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  if (!*(unsigned char *)(result[1] + 26))
  {
    if (!v2) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!v2)
  {
LABEL_14:
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
LABEL_17:
    uint64_t result = (uint64_t *)OUTLINED_FUNCTION_131_0();
    __break(1u);
    return result;
  }
  uint64_t v3 = *result;
  swift_retain();
  Parameter.wrappedValue.setter(&v3);
LABEL_9:
  return (uint64_t *)swift_release();
}

uint64_t TransposedConv2D.$bias.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_33_2();
  if (v2)
  {
    OUTLINED_FUNCTION_43_1();
    if (v2) {
      __int16 v3 = 0;
    }
    __int16 v6 = v3 | v4;
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v6 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v6;
  return result;
}

uint64_t TransposedConv2D.isEveryParameterInitialized.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  if (*(unsigned char *)(v1 + 16)) {
    return OUTLINED_FUNCTION_15_2();
  }
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  BOOL v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  int v5 = !v4;
  uint64_t v6 = v5 ^ 1u;
  if (v4 && *(unsigned char *)(v0 + 26))
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + 32);
    uint64_t v6 = (~v7 & 0xF000000000000007) != 0 && v7 < 0;
  }
  return OUTLINED_FUNCTION_125_0(v6, v1);
}

uint64_t TransposedConv2D.kernelSize.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t TransposedConv2D.stride.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t TransposedConv2D.padding.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t TransposedConv2D.dilation.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t TransposedConv2D.groupCount.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t TransposedConv2D.outputPadding.getter()
{
  return *(void *)(v0 + 112);
}

void *sub_2574B24F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = *a1;
  char v42 = *((unsigned char *)a1 + 9);
  char v43 = *((unsigned char *)a1 + 8);
  uint64_t v17 = *(void *)a2;
  unsigned int v18 = *(unsigned __int16 *)(a2 + 8);
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B40);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  OUTLINED_FUNCTION_17_6();
  if (v21) {
    goto LABEL_33;
  }
  if ((v20 & 0x8000000000000000) == 0) {
    goto LABEL_34;
  }
  uint64_t v22 = v19;
  OUTLINED_FUNCTION_54_1();
  if (!(!v21 & v23)) {
    goto LABEL_37;
  }
  if (a12 != -1)
  {
    uint64_t v24 = *(void *)(v12 + 40);
    if (a12) {
      uint64_t v24 = *(void *)(v12 + 40) % a12;
    }
    if (v24)
    {
      OUTLINED_FUNCTION_36_1();
      goto LABEL_45;
    }
  }
  if (v17)
  {
    uint64_t v25 = *(void *)(v17 + 32);
    OUTLINED_FUNCTION_116_0();
    if (v21) {
      goto LABEL_33;
    }
    if ((v25 & 0x8000000000000000) == 0)
    {
LABEL_34:
      OUTLINED_FUNCTION_61_1();
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_47_1();
    if (!v21)
    {
      OUTLINED_FUNCTION_35_2();
LABEL_45:
      OUTLINED_FUNCTION_17_0();
LABEL_46:
      OUTLINED_FUNCTION_63_0();
      goto LABEL_36;
    }
    if ((unsigned __int128)(v26 * (__int128)a12) >> 64 != (v26 * a12) >> 63)
    {
      __break(1u);
      goto LABEL_27;
    }
    OUTLINED_FUNCTION_114_0();
    if (!v21)
    {
LABEL_27:
      __src[0] = 0;
      __src[1] = 0xE000000000000000;
      swift_retain();
      sub_257486C70(v25);
      sub_2576A8730();
      sub_2576A7B00();
      uint64_t v37 = sub_2576A7810();
      MEMORY[0x25A2B83F0](v37, MEMORY[0x263F8D6C8]);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_7();
      OUTLINED_FUNCTION_17_6();
      if (!v21)
      {
        if (v38 < 0)
        {
          uint64_t v39 = OUTLINED_FUNCTION_12_8(v38 & 0x7FFFFFFFFFFFFFFFLL);
          if (!(!v21 & v23)) {
            goto LABEL_38;
          }
          uint64_t v40 = *(void *)(v39 + 40);
          if ((unsigned __int128)(v40 * (__int128)a12) >> 64 == (v40 * a12) >> 63)
          {
            __src[0] = v40 * a12;
            sub_2576A8EA0();
            sub_2576A7B00();
            swift_bridgeObjectRelease();
            OUTLINED_FUNCTION_44_1();
            goto LABEL_46;
          }
          __break(1u);
          goto LABEL_33;
        }
LABEL_35:
        OUTLINED_FUNCTION_4_12();
        OUTLINED_FUNCTION_17_0();
        OUTLINED_FUNCTION_35_1();
        goto LABEL_36;
      }
LABEL_33:
      OUTLINED_FUNCTION_5_11();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_50_0();
LABEL_36:
      sub_2576A8B60();
      __break(1u);
LABEL_37:
      __src[1] = 0;
      __src[2] = 0;
      __src[0] = 1;
      OUTLINED_FUNCTION_55_1();
      swift_retain();
      goto LABEL_43;
    }
    char v27 = v18 & 1;
    int v28 = (v18 >> 8) & 1;
    swift_retain();
    swift_retain();
    uint64_t v29 = v17;
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    swift_retain();
    swift_retain();
    uint64_t v29 = sub_25748FC24(0);
    char v27 = 0;
    LOBYTE(v28) = 1;
  }
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_17_6();
  if (v21) {
    goto LABEL_33;
  }
  if ((v30 & 0x8000000000000000) == 0) {
    goto LABEL_34;
  }
  uint64_t v31 = (void *)OUTLINED_FUNCTION_12_8(v30 & 0x7FFFFFFFFFFFFFFFLL);
  if (!(!v21 & v23))
  {
LABEL_38:
    uint64_t v41 = 1;
LABEL_41:
    __src[2] = 0;
    __src[0] = v41;
    goto LABEL_42;
  }
  if (v32 == 2)
  {
    __src[2] = 0;
    __src[0] = 2;
LABEL_42:
    __src[1] = 0;
    OUTLINED_FUNCTION_55_1();
LABEL_43:
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  if (v32 <= 3)
  {
    uint64_t v41 = 3;
    goto LABEL_41;
  }
  uint64_t v33 = v31[5];
  uint64_t v34 = v31[6];
  uint64_t v35 = v31[7];
  __src[0] = v16;
  LOBYTE(__src[1]) = v43;
  BYTE1(__src[1]) = v42;
  __src[2] = v29;
  LOBYTE(__src[3]) = v27;
  BYTE1(__src[3]) = v28;
  BYTE2(__src[3]) = v17 != 0;
  __src[4] = v33;
  __src[5] = v34;
  __src[6] = v35;
  __src[7] = a3;
  __src[8] = a4;
  __src[9] = a5;
  __src[10] = a6;
  __src[11] = a10;
  __src[12] = a11;
  __src[13] = a12;
  __src[14] = a7;
  __src[15] = a8;
  __src[16] = v22;
  sub_2574B3ABC((uint64_t)__src);
  swift_release();
  swift_release();
  swift_release();
  sub_2574B3B08((uint64_t)__src);
  return memcpy(a9, __src, 0x88uLL);
}

void *TransposedConv2D.init(weight:bias:stride:padding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  uint64_t v11 = *a1;
  uint64_t v13 = *a2;
  uint64_t v14 = v11;
  TransposedConv2D.init(weight:bias:stride:padding:outputPadding:dilation:groupCount:)(&v14, &v13, a3, a4, a5, a6, 0, 0, (uint64_t)__src, a7, a8, a10);
  return memcpy(a9, __src, 0x88uLL);
}

uint64_t TransposedConv2D.init(weight:bias:stride:padding:outputPadding:dilation:groupCount:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = *a1;
  uint64_t v18 = *a2;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B40);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = 0;
  uint64_t v19 = OUTLINED_FUNCTION_13_8(*(void *)(v17 + 16));
  if (!(!v22 & v21)) {
    goto LABEL_25;
  }
  if (a12 != -1)
  {
    uint64_t v23 = *(void *)(v19 + 40);
    if (a12) {
      uint64_t v23 = *(void *)(v19 + 40) % a12;
    }
    if (v23)
    {
      OUTLINED_FUNCTION_34_2();
      OUTLINED_FUNCTION_17_0();
LABEL_32:
      OUTLINED_FUNCTION_35_1();
      goto LABEL_33;
    }
  }
  uint64_t v67 = a6;
  if (v18)
  {
    OUTLINED_FUNCTION_47_1();
    if (!v22)
    {
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_38_1();
LABEL_33:
      OUTLINED_FUNCTION_26_3();
      __break(1u);
      goto LABEL_34;
    }
    if ((unsigned __int128)(v24 * (__int128)a12) >> 64 != (v24 * a12) >> 63)
    {
      __break(1u);
LABEL_22:
      swift_retain();
      sub_2576A8730();
      OUTLINED_FUNCTION_59_1(34);
      sub_2576A7B00();
      uint64_t v50 = sub_2576A7810();
      MEMORY[0x25A2B83F0](v50, MEMORY[0x263F8D6C8]);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_19_7();
      uint64_t v51 = OUTLINED_FUNCTION_67_1();
      if (!v52)
      {
LABEL_34:
        OUTLINED_FUNCTION_57_1();
        goto LABEL_26;
      }
      if ((unsigned __int128)(*(uint64_t *)(v51 + 32) * (__int128)a12) >> 64 != (*(void *)(v51 + 32) * a12) >> 63)
      {
        __break(1u);
LABEL_25:
        OUTLINED_FUNCTION_53_1();
LABEL_26:
        OUTLINED_FUNCTION_95_1();
LABEL_28:
        sub_2576A7810();
        goto LABEL_30;
      }
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_1();
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_114_0();
    if (!v22) {
      goto LABEL_22;
    }
  }
  uint64_t v62 = v20;
  uint64_t v63 = a7;
  OUTLINED_FUNCTION_1_4();
  uint64_t v25 = OUTLINED_FUNCTION_90_1();
  uint64_t v33 = OUTLINED_FUNCTION_98_1(v25, v26, v27, v28, v29, v30, v31, v32, v53, v55, v57, v60);
  swift_release();
  if (v18)
  {
    uint64_t v12 = (void *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_98_1((uint64_t)v12, v34, v35, v36, v37, v38, v39, v40, v54, v56, v58, v61);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_20_7();
  }
  OUTLINED_FUNCTION_54_1();
  if (!(!v22 & v21) || v42 == 2)
  {
    OUTLINED_FUNCTION_73_1();
    OUTLINED_FUNCTION_95_1();
    goto LABEL_28;
  }
  uint64_t v43 = a8;
  uint64_t v44 = v41;
  uint64_t v45 = v33;
  uint64_t v59 = v43;
  uint64_t v47 = v12[5];
  uint64_t v46 = v12[6];
  sub_2576A7810();
  swift_release();
  if (v12[2] <= 3uLL)
  {
    OUTLINED_FUNCTION_53_1();
    OUTLINED_FUNCTION_95_1();
LABEL_30:
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v48 = v12[7];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a9 = v45;
  *(_WORD *)(a9 + 8) = 256;
  *(void *)(a9 + 16) = v44;
  *(_WORD *)(a9 + 24) = 256;
  *(unsigned char *)(a9 + 26) = v18 != 0;
  *(void *)(a9 + 32) = v47;
  *(void *)(a9 + 40) = v46;
  *(void *)(a9 + 48) = v48;
  *(void *)(a9 + 56) = a3;
  *(void *)(a9 + 64) = a4;
  *(void *)(a9 + 72) = a5;
  *(void *)(a9 + 80) = v67;
  *(void *)(a9 + 88) = a10;
  *(void *)(a9 + 96) = a11;
  *(void *)(a9 + 104) = a12;
  *(void *)(a9 + 112) = v63;
  *(void *)(a9 + 120) = v59;
  *(void *)(a9 + 128) = v62;
  return result;
}

void *TransposedConv2D.init(filterCount:kernelSize:stride:padding:dilation:groupCount:weightInitializer:biasInitializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  TransposedConv2D.init(filterCount:kernelSize:stride:padding:outputPadding:dilation:groupCount:weightInitializer:biasInitializer:)(a1, a2, a3, a4, a5, a6, a7, 0, 0, a8, a10, a11, a12, a13);
  return memcpy(a9, __src, 0x88uLL);
}

void *TransposedConv2D.init(filterCount:kernelSize:stride:padding:outputPadding:dilation:groupCount:weightInitializer:biasInitializer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_79_1();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B40);
  uint64_t v20 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v20 + 16) = 0;
  if (a1 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_128();
LABEL_17:
    uint64_t result = (void *)OUTLINED_FUNCTION_26_3();
    __break(1u);
    return result;
  }
  uint64_t v21 = v20;
  if (a12 != -1 && (!a12 || a1 % a12))
  {
    OUTLINED_FUNCTION_135();
LABEL_16:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  __dst = v15;
  if (a2 < 1 || a3 <= 0)
  {
    OUTLINED_FUNCTION_60_1();
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_90_1();
  uint64_t v23 = swift_retain();
  uint64_t v24 = sub_25748FBC8(v23);
  OUTLINED_FUNCTION_108_0();
  uint64_t v25 = swift_allocObject();
  swift_retain();
  if (a14) {
    sub_25748FBC8(a14);
  }
  else {
    sub_25748FC24(0);
  }
  OUTLINED_FUNCTION_119_0();
  swift_retain();
  swift_release();
  __src[0] = v24;
  LOWORD(__src[1]) = 256;
  __src[2] = v25;
  LOWORD(__src[3]) = 256;
  BYTE2(__src[3]) = v14;
  __src[4] = a1;
  __src[5] = a2;
  __src[6] = a3;
  __src[7] = a4;
  __src[8] = a5;
  __src[9] = a6;
  __src[10] = a7;
  __src[11] = a10;
  __src[12] = a11;
  __src[13] = a12;
  __src[14] = a8;
  __src[15] = a9;
  __src[16] = v21;
  sub_2574B3ABC((uint64_t)__src);
  swift_release();
  swift_release();
  swift_release();
  sub_2574B3B08((uint64_t)__src);
  return memcpy(__dst, __src, 0x88uLL);
}

uint64_t TransposedConv2D.initializeParameters(for:)(uint64_t *a1)
{
  OUTLINED_FUNCTION_12_8(*a1);
  if (!(!v18 & v4))
  {
LABEL_17:
    OUTLINED_FUNCTION_30_3();
    OUTLINED_FUNCTION_6_10();
  }
  long long v5 = (__int128)OUTLINED_FUNCTION_85_1();
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = v8;
  if (v6)
  {
    if (v6 == -1) {
      goto LABEL_7;
    }
    uint64_t v9 = v8 % v6;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_17_0();
    uint64_t result = OUTLINED_FUNCTION_21_6();
    __break(1u);
    return result;
  }
LABEL_7:
  long long v23 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2576AE070;
  *(void *)(v10 + 32) = v8;
  if (!v6)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  BOOL v18 = v2 == 0x8000000000000000 && v6 == -1;
  if (v18) {
    goto LABEL_16;
  }
  *(void *)(v10 + 40) = v2 / v6;
  OUTLINED_FUNCTION_129_0(v10, v11, v12, v13, v14, v15, v16, v17, v21, v22, v23);
  sub_25748FC8C(v24);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v20 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_106_1(v20, (__n128)xmmword_2576ABB10);
    sub_25748FC8C(v24);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t TransposedConv2D.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v4 = v2[2];
  char v5 = *((unsigned char *)v2 + 26);
  uint64_t v6 = v2[7];
  uint64_t v7 = v2[8];
  uint64_t v8 = v2[9];
  uint64_t v9 = v2[10];
  uint64_t v11 = v2[11];
  uint64_t v10 = v2[12];
  uint64_t v12 = v2[13];
  uint64_t v13 = v2[14];
  uint64_t v14 = v2[15];
  uint64_t v24 = *a1;
  uint64_t v15 = *(void *)(v3 + 32);
  if ((~v15 & 0xF000000000000007) == 0) {
    goto LABEL_11;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
LABEL_12:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_13;
  }
  uint64_t v23 = v15 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v20 = v13;
  uint64_t v21 = v10;
  if ((v5 & 1) == 0)
  {
    uint64_t v17 = a2;
    BOOL v18 = 0;
    goto LABEL_8;
  }
  uint64_t v16 = *(void *)(v4 + 32);
  if ((~v16 & 0xF000000000000007) == 0)
  {
LABEL_11:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_13:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v16 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
  uint64_t v17 = a2;
  BOOL v18 = (long long *)(v16 & 0x7FFFFFFFFFFFFFFFLL);
  sub_257486C84();
LABEL_8:
  uint64_t v22 = v18;
  sub_257486C84();
  transposedConv2D(_:weight:bias:stride:padding:outputPadding:dilation:groupCount:)(&v24, &v23, &v22, v6, v7, v8, v9, v20, v17, v14, v11, v21, v12);
  swift_release();
  return sub_257486C8C(v15);
}

uint64_t sub_2574B331C()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_2574B3364()
{
  return sub_2574B331C();
}

uint64_t sub_2574B3390@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B331C();
  *a1 = result;
  return result;
}

uint64_t sub_2574B33C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574B3364();
  *a1 = result;
  return result;
}

uint64_t sub_2574B33F0(uint64_t a1)
{
  unint64_t v2 = sub_2574B3B54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574B342C(uint64_t a1)
{
  unint64_t v2 = sub_2574B3B54();
  return MEMORY[0x270FA00B8](a1, v2);
}

void TransposedConv2D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B48);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2574B3B54();
  OUTLINED_FUNCTION_109_1();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
    sub_2574B3A28(&qword_26A001B08);
    OUTLINED_FUNCTION_24_3();
    long long v11 = *(_OWORD *)v12;
    OUTLINED_FUNCTION_24_3();
    long long v10 = *(_OWORD *)v12;
    LOBYTE(v20) = 4;
    OUTLINED_FUNCTION_24_3();
    long long v9 = *(_OWORD *)v12;
    sub_2574B3944();
    OUTLINED_FUNCTION_72_1();
    sub_2576A8D50();
    uint64_t v17 = v20;
    char v18 = v21;
    char v19 = v22;
    v12[0] = 1;
    OUTLINED_FUNCTION_72_1();
    sub_2576A8D00();
    uint64_t v13 = v15;
    __int16 v14 = v16;
    uint64_t v6 = sub_2576A8D40();
    sub_2574B24F8(&v17, (uint64_t)&v13, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), 0, 0, v12, v9, *((uint64_t *)&v9 + 1), v6);
    uint64_t v7 = OUTLINED_FUNCTION_104_1();
    v8(v7);
    memcpy(v4, v12, 0x88uLL);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  OUTLINED_FUNCTION_7_1();
}

void TransposedConv2D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B58);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_15_8();
  sub_2574B3B54();
  OUTLINED_FUNCTION_80_1();
  OUTLINED_FUNCTION_137();
  OUTLINED_FUNCTION_78_1();
  if (v0)
  {
    uint64_t v2 = OUTLINED_FUNCTION_76_1();
    v3(v2);
  }
  else
  {
    OUTLINED_FUNCTION_91_1();
    if (v6)
    {
      if (v4) {
        int v7 = 256;
      }
      else {
        int v7 = 0;
      }
      uint64_t v8 = v7 | v5;
      swift_retain();
    }
    else
    {
      uint64_t v8 = 0;
    }
    OUTLINED_FUNCTION_64_1();
    OUTLINED_FUNCTION_77_1();
    if (v8)
    {
      swift_release();
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_130_0();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
      sub_2574B3A28(&qword_26A001B18);
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_9_10();
      OUTLINED_FUNCTION_56_1();
    }
    uint64_t v9 = OUTLINED_FUNCTION_126_0();
    v10(v9);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_2574B38C8()
{
}

void sub_2574B38E0()
{
}

unint64_t sub_2574B38F8()
{
  unint64_t result = qword_26A001AC8;
  if (!qword_26A001AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001AC8);
  }
  return result;
}

unint64_t sub_2574B3944()
{
  unint64_t result = qword_26A001AD0;
  if (!qword_26A001AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001AD0);
  }
  return result;
}

unint64_t sub_2574B3990()
{
  unint64_t result = qword_26A001AE0;
  if (!qword_26A001AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001AE0);
  }
  return result;
}

unint64_t sub_2574B39DC()
{
  unint64_t result = qword_26A001AF8;
  if (!qword_26A001AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001AF8);
  }
  return result;
}

uint64_t sub_2574B3A28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001B00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2574B3A70()
{
  unint64_t result = qword_26A001B30;
  if (!qword_26A001B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B30);
  }
  return result;
}

uint64_t sub_2574B3ABC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2574B3B08(uint64_t a1)
{
  return a1;
}

unint64_t sub_2574B3B54()
{
  unint64_t result = qword_26A001B50;
  if (!qword_26A001B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B50);
  }
  return result;
}

uint64_t sub_2574B3BA0(__n128 *a1)
{
  return sub_2574B05CC(a1);
}

uint64_t sub_2574B3BCC()
{
  return sub_2574B0604();
}

uint64_t sub_2574B3BF8(__n128 *a1)
{
  return sub_2574B07C4(a1);
}

uint64_t sub_2574B3C24()
{
  return sub_2574B07FC();
}

uint64_t sub_2574B3C60(__n128 *a1)
{
  return sub_2574B05CC(a1);
}

uint64_t sub_2574B3C8C()
{
  return sub_2574B0604();
}

uint64_t sub_2574B3CB8(__n128 *a1)
{
  return sub_2574B07C4(a1);
}

uint64_t sub_2574B3CE4()
{
  return sub_2574B07FC();
}

void *__swift_memcpy88_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

void type metadata accessor for Conv1D()
{
}

uint64_t destroy for Conv2D()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Conv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v3 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Conv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for Conv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Conv2D(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Conv2D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for Conv2D()
{
}

uint64_t _s14NeuralNetworks6Conv1DVwxx_0()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t _s14NeuralNetworks6Conv1DVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s14NeuralNetworks6Conv1DVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_105_1();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_69_1();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14NeuralNetworks6Conv1DVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  OUTLINED_FUNCTION_105_1();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  OUTLINED_FUNCTION_69_1();
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunction.Key(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunction.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TransposedConv1D()
{
}

uint64_t destroy for TransposedConv2D()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy136_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for TransposedConv2D(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransposedConv2D(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransposedConv2D(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for TransposedConv2D()
{
}

ValueMetadata *type metadata accessor for TransposedConv2D.CodingKeys()
{
  return &type metadata for TransposedConv2D.CodingKeys;
}

ValueMetadata *type metadata accessor for TransposedConv1D.CodingKeys()
{
  return &type metadata for TransposedConv1D.CodingKeys;
}

ValueMetadata *type metadata accessor for Conv2D.CodingKeys()
{
  return &type metadata for Conv2D.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LSTM.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s14NeuralNetworks16TransposedConv2DV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    void *result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574B47A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Conv1D.CodingKeys()
{
  return &type metadata for Conv1D.CodingKeys;
}

unint64_t sub_2574B47E4()
{
  unint64_t result = qword_26A001B60;
  if (!qword_26A001B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B60);
  }
  return result;
}

unint64_t sub_2574B4834()
{
  unint64_t result = qword_26A001B68;
  if (!qword_26A001B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B68);
  }
  return result;
}

unint64_t sub_2574B4884()
{
  unint64_t result = qword_26A001B70;
  if (!qword_26A001B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B70);
  }
  return result;
}

unint64_t sub_2574B48D4()
{
  unint64_t result = qword_26A001B78;
  if (!qword_26A001B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B78);
  }
  return result;
}

unint64_t sub_2574B4924()
{
  unint64_t result = qword_26A001B80;
  if (!qword_26A001B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B80);
  }
  return result;
}

unint64_t sub_2574B4974()
{
  unint64_t result = qword_26A001B88;
  if (!qword_26A001B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B88);
  }
  return result;
}

unint64_t sub_2574B49C4()
{
  unint64_t result = qword_26A001B90;
  if (!qword_26A001B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B90);
  }
  return result;
}

unint64_t sub_2574B4A14()
{
  unint64_t result = qword_26A001B98;
  if (!qword_26A001B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001B98);
  }
  return result;
}

unint64_t sub_2574B4A64()
{
  unint64_t result = qword_26A001BA0;
  if (!qword_26A001BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001BA0);
  }
  return result;
}

unint64_t sub_2574B4AB4()
{
  unint64_t result = qword_26A001BA8;
  if (!qword_26A001BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001BA8);
  }
  return result;
}

unint64_t sub_2574B4B04()
{
  unint64_t result = qword_26A001BB0;
  if (!qword_26A001BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001BB0);
  }
  return result;
}

unint64_t sub_2574B4B54()
{
  unint64_t result = qword_26A001BB8;
  if (!qword_26A001BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001BB8);
  }
  return result;
}

void OUTLINED_FUNCTION_6_10()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return sub_2576A8E40();
}

__n128 OUTLINED_FUNCTION_11_7(__n128 *a1)
{
  return a1[4];
}

uint64_t OUTLINED_FUNCTION_12_8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(*(void *)(a1 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_13_8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 + 152);
}

uint64_t OUTLINED_FUNCTION_14_8@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 9);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_retain();
}

void *OUTLINED_FUNCTION_15_8()
{
  *(void *)(v2 - 120) = *(void *)(v0 + 16);
  *(_DWORD *)(v2 - 72) = *(unsigned __int8 *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 26);
  *(_DWORD *)(v2 - 128) = *(unsigned __int8 *)(v0 + 25);
  *(_DWORD *)(v2 - 124) = v3;
  long long v4 = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v2 - 176) = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v2 - 160) = v4;
  *(_OWORD *)(v2 - 192) = *(_OWORD *)(v0 + 88);
  *(void *)(v2 - 136) = *(void *)(v0 + 104);
  return __swift_project_boxed_opaque_existential_1(v1, v1[3]);
}

uint64_t OUTLINED_FUNCTION_16_7()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_18_7@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return sub_25748FC24(0);
}

uint64_t OUTLINED_FUNCTION_21_6()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return sub_2576A8D50();
}

void OUTLINED_FUNCTION_25_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, __int16 a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18)
{
  *(void *)uint64_t v21 = v24;
  *(unsigned char *)(v21 + 8) = a16;
  *(unsigned char *)(v21 + 9) = a14;
  *(void *)(v21 + 16) = v18;
  *(unsigned char *)(v21 + 24) = a12;
  *(unsigned char *)(v21 + 25) = v19;
  *(unsigned char *)(v21 + 26) = v22;
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v20;
  *(void *)(v21 + 48) = a17;
  *(void *)(v21 + 56) = a18;
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return *(void *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_29_3@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 241) = a1;
  return sub_2576A8D40();
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_32_3@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(*(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
}

uint64_t OUTLINED_FUNCTION_39_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  return sub_25748FB58((uint64_t *)va, (unint64_t)v8 << 32);
}

uint64_t OUTLINED_FUNCTION_43_1()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return sub_2576A7B00();
}

void OUTLINED_FUNCTION_45_1(unint64_t a1@<X8>, __n128 a2@<Q0>, __n128 a3@<Q1>)
{
  v9->n128_u64[0] = a1;
  v9->n128_u8[8] = v3;
  v9->n128_u8[9] = v4;
  v9[1].n128_u64[0] = v5;
  v9[1].n128_u8[8] = v6;
  v9[1].n128_u8[9] = v7;
  v9[1].n128_u8[10] = v8;
  v9[2] = a2;
  _OWORD v9[3] = a3;
}

uint64_t OUTLINED_FUNCTION_49_1(uint64_t a1)
{
  uint64_t *v1 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_257486C84();
}

uint64_t OUTLINED_FUNCTION_52_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  *(unsigned char *)(v0 - 96) = 5;
  return sub_2576A8E30();
}

uint64_t OUTLINED_FUNCTION_58_1()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_59_1@<X0>(uint64_t a1@<X8>)
{
  return a1 | 0xD000000000000019;
}

void OUTLINED_FUNCTION_64_1()
{
  *(void *)(v2 - 96) = v1;
  *(_WORD *)(v2 - 88) = v0;
  *(unsigned char *)(v2 - 65) = 1;
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return *(void *)(*(void *)(v0 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_68_1@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = result & 0x7FFFFFFFFFFFFFFFLL;
  return result;
}

void OUTLINED_FUNCTION_69_1()
{
  v1[24] = v0[24];
  v1[25] = v0[25];
  v1[26] = v0[26];
}

void OUTLINED_FUNCTION_74_1()
{
  *(void *)uint64_t v2 = v1;
  *(_WORD *)(v2 + 8) = 256;
  *(void *)(v2 + 16) = v0;
  *(_WORD *)(v2 + 24) = 256;
  *(unsigned char *)(v2 + 26) = v3;
}

uint64_t OUTLINED_FUNCTION_75_1()
{
  return type metadata accessor for LayerVariableReference();
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return sub_2576A8DE0();
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return sub_2576A9230();
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_2576A7B00();
}

__n128 OUTLINED_FUNCTION_85_1()
{
  return *(__n128 *)(v0 + 40);
}

uint64_t OUTLINED_FUNCTION_86_1(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a10 = *a1;
  return Parameter.wrappedValue.setter(&a10);
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_92_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a12 = a1;
  return Parameter.wrappedValue.setter(&a12);
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  return sub_2576A8E30();
}

uint64_t OUTLINED_FUNCTION_94_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_97_1()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_98_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  return sub_25748FB58((uint64_t *)va, (unint64_t)v12 << 32);
}

uint64_t OUTLINED_FUNCTION_100_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_25748FB58((uint64_t *)va, (unint64_t)v10 << 32);
}

uint64_t OUTLINED_FUNCTION_101_1()
{
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_103_1()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  return v0;
}

void OUTLINED_FUNCTION_105_1()
{
  *(unsigned char *)(v1 + 8) = *(unsigned char *)(v0 + 8);
  *(unsigned char *)(v1 + 9) = *(unsigned char *)(v0 + 9);
}

uint64_t OUTLINED_FUNCTION_106_1(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_107_1(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return sub_2576A91F0();
}

uint64_t OUTLINED_FUNCTION_117_0(uint64_t result)
{
  *(unsigned char *)(result + 16) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_118_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_120()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return swift_initStackObject();
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return type metadata accessor for LayerVariableReference();
}

uint64_t OUTLINED_FUNCTION_124_0()
{
  return *(void *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_125_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return v0;
}

void OUTLINED_FUNCTION_128_0(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
}

uint64_t OUTLINED_FUNCTION_129_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long a11)
{
  *(_OWORD *)(a1 + 48) = a11;
  return swift_retain();
}

__n128 OUTLINED_FUNCTION_130_0()
{
  __n128 result = *(__n128 *)(v0 - 160);
  *(__n128 *)(v0 - 96) = result;
  *(unsigned char *)(v0 - 65) = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return sub_2576A8B60();
}

void OUTLINED_FUNCTION_134()
{
  *(_WORD *)(v1 + 8) = 256;
  *(void *)(v1 + 16) = v0;
  *(_WORD *)(v1 + 24) = 256;
}

uint64_t OUTLINED_FUNCTION_136()
{
  return v0 - 96;
}

unint64_t OUTLINED_FUNCTION_137()
{
  *(void *)(v3 - 96) = v0;
  *(unsigned char *)(v3 - 88) = v2;
  *(unsigned char *)(v3 - 87) = v1;
  *(unsigned char *)(v3 - 65) = 0;
  return sub_2574B3990();
}

void (*sub_2574B58F4())(void **)
{
  char v1 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_3_13((uint64_t)v1);
  char v2 = (void *)OUTLINED_FUNCTION_16_8();
  *(void *)(v0 + 40) = sub_2574B8090(v2, v3, v4);
  return sub_2574B594C;
}

void (*sub_2574B5950())(void **)
{
  char v1 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_3_13((uint64_t)v1);
  char v2 = (void *)OUTLINED_FUNCTION_16_8();
  *(void *)(v0 + 40) = sub_2574B8140(v2, v3, v4);
  return sub_2574B594C;
}

void (*sub_2574B59A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void **a1)
{
  unsigned __int8 v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = sub_2574B81EC(v8, a2, a3, a4);
  return sub_2574B5A20;
}

void sub_2574B5A20(void **a1)
{
  char v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_0_19();
  v3(v2);
  free(v1);
}

void (*sub_2574B5A60())(void **)
{
  char v1 = OUTLINED_FUNCTION_4_13();
  OUTLINED_FUNCTION_3_13((uint64_t)v1);
  uint64_t v2 = (void *)OUTLINED_FUNCTION_16_8();
  *(void *)(v0 + 40) = sub_2574B82E8(v2, v3, v4);
  return sub_2574B594C;
}

void sub_2574B5AB8(void **a1)
{
  char v1 = *a1;
  uint64_t v2 = OUTLINED_FUNCTION_0_19();
  v3(v2);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_2574B5B00(SEL *a1)
{
  OUTLINED_FUNCTION_30_4();
  sub_2574B8058(*(void *)(v1 + 24), v22);
  uint64_t v21 = v22[3];
  uint64_t v4 = v22[4];
  uint64_t v19 = v22[1];
  int64_t v20 = (unint64_t)(v22[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_27_4();
    }
    else
    {
      int64_t v7 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_46;
      }
      if (v7 >= v20) {
        goto LABEL_43;
      }
      uint64_t v8 = *(void *)(v19 + 8 * v7);
      uint64_t v9 = v21 + 1;
      if (!v8)
      {
        OUTLINED_FUNCTION_24_4();
        if (v10 == v11) {
          goto LABEL_43;
        }
        OUTLINED_FUNCTION_22_7();
        if (!v8)
        {
          OUTLINED_FUNCTION_24_4();
          if (v10 == v11) {
            goto LABEL_43;
          }
          OUTLINED_FUNCTION_22_7();
          if (!v8)
          {
            OUTLINED_FUNCTION_24_4();
            if (v10 == v11) {
              goto LABEL_43;
            }
            OUTLINED_FUNCTION_22_7();
            if (!v8)
            {
              OUTLINED_FUNCTION_24_4();
              if (v10 == v11) {
                goto LABEL_43;
              }
              OUTLINED_FUNCTION_22_7();
              if (!v8)
              {
                OUTLINED_FUNCTION_19_8();
                if (v10 == v11) {
                  goto LABEL_43;
                }
                uint64_t v8 = *(void *)(v19 + 8 * v9);
                if (!v8)
                {
                  while (1)
                  {
                    OUTLINED_FUNCTION_19_8();
                    if (v10 == v11) {
                      goto LABEL_43;
                    }
                    uint64_t v8 = *(void *)(v19 + 8 * v12);
                    uint64_t v13 = v12 + 1;
                    if (v8)
                    {
                      uint64_t v9 = v13 - 1;
                      break;
                    }
                  }
                }
              }
            }
          }
        }
      }
      uint64_t v4 = (v8 - 1) & v8;
      uint64_t v21 = v9;
    }
    OUTLINED_FUNCTION_34_3();
    if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0)
    {
      uint64_t v14 = *(void *)(v2 + 16);
      uint64_t result = OUTLINED_FUNCTION_32_4();
      if (v14) {
        break;
      }
      goto LABEL_39;
    }
    OUTLINED_FUNCTION_32_4();
    uint64_t result = sub_2576A8BF0();
    uint64_t v14 = result;
    if (result) {
      break;
    }
LABEL_39:
    uint64_t v16 = 0;
LABEL_40:
    uint64_t result = swift_release_n();
    BOOL v11 = __OFADD__(v6, v16);
    v6 += v16;
    if (v11)
    {
      __break(1u);
LABEL_43:
      swift_bridgeObjectRelease();
      swift_release();
      return v6;
    }
  }
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        uint64_t v17 = MEMORY[0x25A2B8DB0](v15, v2);
      }
      else
      {
        uint64_t v17 = *(void *)(v2 + 8 * v15 + 32);
        swift_retain();
      }
      id v18 = [*(id *)(v17 + 16) *a1];
      uint64_t result = swift_release();
      BOOL v11 = __OFADD__(v16, v18);
      v16 += (uint64_t)v18;
      if (v11) {
        break;
      }
      if (v14 == ++v15) {
        goto LABEL_40;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_2574B5D4C()
{
  OUTLINED_FUNCTION_30_4();
  sub_2574B8058(*(void *)(v0 + 24), v19);
  uint64_t v17 = v19[1];
  int64_t v2 = v19[3];
  uint64_t v3 = v19[4];
  int64_t v18 = (unint64_t)(v19[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  uint64_t v5 = 0;
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
    }
    else
    {
      int64_t v6 = v2 + 1;
      if (__OFADD__(v2, 1)) {
        goto LABEL_45;
      }
      if (v6 >= v18) {
        goto LABEL_42;
      }
      uint64_t v7 = *(void *)(v17 + 8 * v6);
      int64_t v8 = v2 + 1;
      if (!v7)
      {
        OUTLINED_FUNCTION_23_6();
        if (v9 == v10) {
          goto LABEL_42;
        }
        OUTLINED_FUNCTION_29_4();
        if (!v7)
        {
          OUTLINED_FUNCTION_23_6();
          if (v9 == v10) {
            goto LABEL_42;
          }
          OUTLINED_FUNCTION_29_4();
          if (!v7)
          {
            OUTLINED_FUNCTION_23_6();
            if (v9 == v10) {
              goto LABEL_42;
            }
            OUTLINED_FUNCTION_29_4();
            if (!v7)
            {
              OUTLINED_FUNCTION_23_6();
              if (v9 == v10) {
                goto LABEL_42;
              }
              OUTLINED_FUNCTION_29_4();
              if (!v7)
              {
                int64_t v8 = v11 + 5;
                if (v11 + 5 >= v18) {
                  goto LABEL_42;
                }
                uint64_t v7 = *(void *)(v17 + 8 * v8);
                if (!v7)
                {
                  int64_t v12 = v2 + 7;
                  while (v12 < v18)
                  {
                    uint64_t v7 = *(void *)(v17 + 8 * v12++);
                    if (v7)
                    {
                      int64_t v8 = v12 - 1;
                      goto LABEL_25;
                    }
                  }
                  goto LABEL_42;
                }
              }
            }
          }
        }
      }
LABEL_25:
      uint64_t v3 = (v7 - 1) & v7;
      int64_t v2 = v8;
    }
    OUTLINED_FUNCTION_34_3();
    if ((v1 & 0x8000000000000000) == 0 && (v1 & 0x4000000000000000) == 0)
    {
      uint64_t v13 = *(void *)(v1 + 16);
      uint64_t result = OUTLINED_FUNCTION_32_4();
      if (v13) {
        break;
      }
      goto LABEL_38;
    }
    OUTLINED_FUNCTION_32_4();
    uint64_t result = sub_2576A8BF0();
    uint64_t v13 = result;
    if (result) {
      break;
    }
LABEL_38:
    uint64_t v15 = 0;
LABEL_39:
    uint64_t result = swift_release_n();
    BOOL v10 = __OFADD__(v5, v15);
    v5 += v15;
    if (v10)
    {
      __break(1u);
LABEL_42:
      swift_bridgeObjectRelease();
      swift_release();
      return v5;
    }
  }
  if (v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v14, v1);
      }
      else {
        swift_retain();
      }
      int64_t v16 = sub_2576A3088();
      uint64_t result = swift_release();
      BOOL v10 = __OFADD__(v15, v16);
      v15 += v16;
      if (v10) {
        break;
      }
      if (v13 == ++v14) {
        goto LABEL_39;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_2574B5F90()
{
  if ((*(unsigned char *)(v0 + 41) & 1) == 0) {
    return *(void *)(v0 + 32);
  }
  uint64_t v1 = MEMORY[0x25A2BA6C0]();
  BOOL v2 = v1 < 1;
  if (v1 >= 1) {
    uint64_t result = v1 - 0x10000000;
  }
  else {
    uint64_t result = 0;
  }
  *(void *)(v0 + 32) = result;
  char v4 = v2;
  *(unsigned char *)(v0 + 40) = v4;
  *(unsigned char *)(v0 + 41) = 0;
  return result;
}

uint64_t sub_2574B5FE0()
{
  if ((*(unsigned char *)(v0 + 57) & 1) == 0) {
    return *(void *)(v0 + 48);
  }
  uint64_t v1 = MEMORY[0x25A2BA6C0]();
  BOOL v2 = v1 < 1;
  uint64_t result = v1 & ~(v1 >> 63);
  *(void *)(v0 + 48) = result;
  char v4 = v2;
  *(unsigned char *)(v0 + 56) = v4;
  *(unsigned char *)(v0 + 57) = 0;
  return result;
}

uint64_t sub_2574B6028(uint64_t a1)
{
  *(void *)(v1 + 32) = 0;
  *(_WORD *)(v1 + 40) = 256;
  *(void *)(v1 + 48) = 0;
  *(_WORD *)(v1 + 56) = 256;
  *(void *)(v1 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC8);
  sub_2574B9148();
  *(void *)(v1 + 24) = sub_2576A77E0();
  return v1;
}

uint64_t sub_2574B6094()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574B60BC()
{
  sub_2574B6094();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSAllocator()
{
  return self;
}

unint64_t sub_2574B6114(NSUInteger a1, int a2)
{
  int64_t v4 = NSRoundUpToMultipleOfPageSize(a1);
  uint64_t v136 = v2;
  unint64_t v5 = *(void *)(v2 + 16);
  if (v4 >= (uint64_t)objc_msgSend((id)v5, sel_maxBufferLength)) {
    goto LABEL_143;
  }
  uint64_t v132 = v4;
  uint64_t v6 = sub_2576A2FEC(v4, (char)objc_msgSend((id)v5, sel_hasUnifiedMemory));
  uint64_t v7 = v6;
  char v138 = v8;
  HIDWORD(v126) = a2;
  uint64_t v9 = 3;
  if ((a2 & 0xFE) == 0) {
    uint64_t v9 = 0;
  }
  uint64_t v133 = v6;
  uint64_t v135 = v9;
  if (v6 > 0x800000)
  {
    uint64_t v10 = sub_2574B5F90();
    uint64_t v9 = v135;
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = v10;
      id v13 = objc_msgSend((id)v5, sel_currentAllocatedSize);
      uint64_t v9 = v135;
      if ((uint64_t)v13 >= v12)
      {
        unint64_t v120 = v5;
        unint64_t v5 = MEMORY[0x263F8EE78];
        uint64_t v134 = v2 + 24;
        OUTLINED_FUNCTION_30_4();
        uint64_t v14 = *(void *)(v2 + 24);
        uint64_t v124 = v14 + 64;
        OUTLINED_FUNCTION_12_9();
        uint64_t v17 = v16 & v15;
        unint64_t v125 = (unint64_t)(v18 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        uint64_t v19 = 0;
        uint64_t v123 = v14;
        if (!v17) {
          goto LABEL_9;
        }
LABEL_8:
        OUTLINED_FUNCTION_27_4();
        uint64_t v139 = v17;
        uint64_t v140 = v20;
        for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v27 << 6))
        {
          uint64_t v30 = *(void *)(v14 + 48) + 24 * i;
          uint64_t v31 = *(void *)v30;
          uint64_t v32 = *(unsigned __int8 *)(v30 + 8);
          uint64_t v33 = *(void *)(v30 + 16);
          swift_beginAccess();
          uint64_t v34 = *(void *)v134;
          if (!*(void *)(*(void *)v134 + 16) || (unint64_t v35 = sub_257475A88(v31, v32, v33), (v36 & 1) == 0))
          {
            swift_endAccess();
            goto LABEL_93;
          }
          uint64_t v128 = v33;
          HIDWORD(v129) = v32;
          uint64_t v37 = *(void *)(v34 + 56) + 24 * v35;
          unint64_t v38 = *(void *)v37;
          uint64_t v130 = v31;
          uint64_t v131 = *(void *)(v37 + 16);
          swift_endAccess();
          unint64_t v146 = v5;
          if ((v38 & 0x8000000000000000) != 0 || (v38 & 0x4000000000000000) != 0)
          {
            swift_retain_n();
            swift_retain();
            uint64_t v39 = sub_2576A8BF0();
            if (v39)
            {
LABEL_42:
              if (v39 < 1) {
                goto LABEL_137;
              }
              for (uint64_t j = 0; j != v39; ++j)
              {
                if ((v38 & 0xC000000000000001) != 0)
                {
                  uint64_t v41 = MEMORY[0x25A2B8DB0](j, v38);
                }
                else
                {
                  uint64_t v41 = *(void *)(v38 + 8 * j + 32);
                  swift_retain();
                }
                if (objc_msgSend(*(id *)(v41 + 16), sel_usedSize, v120) || !sub_2576A30D8())
                {
                  uint64_t v42 = swift_retain();
                  MEMORY[0x25A2B83B0](v42);
                  if (*(void *)((v146 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v146 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_2576A7E70();
                  sub_2576A7ED0();
                  sub_2576A7E20();
                }
                swift_release();
              }
              swift_release();
              unint64_t v43 = v146;
              unint64_t v5 = MEMORY[0x263F8EE78];
              goto LABEL_57;
            }
          }
          else
          {
            uint64_t v39 = *(void *)(v38 + 16);
            swift_retain_n();
            swift_retain();
            if (v39) {
              goto LABEL_42;
            }
          }
          swift_release();
          unint64_t v43 = v5;
LABEL_57:
          v147[0] = v5;
          if (v43 >> 62)
          {
            sub_2576A7810();
            uint64_t v44 = sub_2576A8BF0();
            if (v44)
            {
LABEL_59:
              if (v44 < 1) {
                goto LABEL_138;
              }
              unint64_t v45 = v43;
              uint64_t v46 = 0;
              unint64_t v143 = (void *)v38;
              unint64_t v144 = v45 & 0xC000000000000001;
              unint64_t v141 = v45;
              uint64_t v142 = v44;
              while (1)
              {
                if (v144) {
                  MEMORY[0x25A2B8DB0](v46, v141);
                }
                else {
                  swift_retain();
                }
                swift_retain();
                sub_2576A88A0();
                sub_2576A88F0();
                sub_2576A8900();
                sub_2576A88C0();
                uint64_t v47 = v147[0];
                unint64_t v48 = *(void *)(v147[0] + 16);
                if (!v48) {
                  goto LABEL_131;
                }
                unint64_t v49 = v48 - 1;
                uint64_t v50 = *(void *)(v147[0] + 32 + 8 * (v48 - 1));
                if (v48 == 1)
                {
                  swift_retain();
LABEL_67:
                  uint64_t v51 = 0;
                }
                else
                {
                  unint64_t v5 = (uint64_t)(v48 - 2) / 2;
                  if (v5 >= v48) {
                    goto LABEL_133;
                  }
                  swift_retain();
                  int64_t v52 = sub_2576A3088();
                  uint64_t v51 = v49;
                  if (sub_2576A3088() < v52)
                  {
                    while (v5 < *(void *)(v47 + 16))
                    {
                      uint64_t v51 = v5;
                      uint64_t v53 = *(void *)(v47 + 8 * v5 + 32);
                      swift_retain();
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        sub_25763E48C();
                      }
                      if (v49 >= *(void *)(v47 + 16)) {
                        goto LABEL_129;
                      }
                      unint64_t v5 = v47 + 8 * v49;
                      swift_release();
                      *(void *)(v5 + 32) = v53;
                      sub_2576A88C0();
                      uint64_t v47 = v147[0];
                      unint64_t v54 = v51 - 1;
                      if (v51 < 1) {
                        goto LABEL_67;
                      }
                      unint64_t v5 = v54 >> 1;
                      if (v54 >> 1 >= *(void *)(v147[0] + 16)) {
                        goto LABEL_130;
                      }
                      int64_t v55 = sub_2576A3088();
                      unint64_t v49 = v51;
                      if (sub_2576A3088() >= v55) {
                        goto LABEL_77;
                      }
                    }
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
LABEL_132:
                    __break(1u);
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
LABEL_136:
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    OUTLINED_FUNCTION_20_8();
                    OUTLINED_FUNCTION_9_12();
                    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0039A0);
                    sub_2576A8A30();
                    OUTLINED_FUNCTION_18_8();
                    objc_msgSend((id)v5, sel_maxBufferLength);
                    sub_2576A8EA0();
                    sub_2576A7B00();
                    swift_bridgeObjectRelease();
                    sub_2576A7B00();
                    OUTLINED_FUNCTION_2_16();
                    OUTLINED_FUNCTION_6_11();
LABEL_147:
                    sub_25746BE6C();
                  }
                }
LABEL_77:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_25763E48C();
                }
                if ((unint64_t)v51 >= *(void *)(v47 + 16)) {
                  goto LABEL_132;
                }
                ++v46;
                unint64_t v5 = v47 + 8 * v51;
                swift_retain();
                swift_release();
                *(void *)(v5 + 32) = v50;
                sub_2576A88C0();
                swift_release();
                swift_release();
                unint64_t v38 = (unint64_t)v143;
                if (v46 == v142)
                {
                  swift_bridgeObjectRelease_n();
                  unint64_t v56 = v147[0];
                  goto LABEL_84;
                }
              }
            }
          }
          else
          {
            uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
            sub_2576A7810();
            if (v44) {
              goto LABEL_59;
            }
          }
          swift_bridgeObjectRelease_n();
          unint64_t v56 = v5;
LABEL_84:
          swift_beginAccess();
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v145 = *(void **)v134;
          *(void *)uint64_t v134 = 0x8000000000000000;
          unint64_t v57 = sub_257475A88(v130, HIDWORD(v129), v128);
          if (__OFADD__(v145[2], (v58 & 1) == 0)) {
            goto LABEL_136;
          }
          unint64_t v59 = v57;
          unint64_t v5 = v58;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC0);
          if (sub_2576A8AD0())
          {
            unint64_t v60 = sub_257475A88(v130, HIDWORD(v129), v128);
            if ((v5 & 1) != (v61 & 1)) {
              goto LABEL_145;
            }
            unint64_t v59 = v60;
          }
          if (v5)
          {
            uint64_t v62 = (unint64_t *)(v145[7] + 24 * v59);
            swift_release();
            swift_release();
            *uint64_t v62 = v56;
            v62[1] = (unint64_t)sub_2574B701C;
            v62[2] = 0;
          }
          else
          {
            v145[(v59 >> 6) + 8] |= 1 << v59;
            uint64_t v63 = v145[6] + 24 * v59;
            *(void *)uint64_t v63 = v130;
            *(unsigned char *)(v63 + 8) = BYTE4(v129);
            *(void *)(v63 + 16) = v128;
            uint64_t v64 = (unint64_t *)(v145[7] + 24 * v59);
            *uint64_t v64 = v56;
            v64[1] = (unint64_t)sub_2574B701C;
            v64[2] = 0;
            uint64_t v65 = v145[2];
            BOOL v25 = __OFADD__(v65, 1);
            uint64_t v66 = v65 + 1;
            if (v25) {
              goto LABEL_140;
            }
            v145[2] = v66;
          }
          *(void *)uint64_t v134 = v145;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_release();
          swift_release();
          uint64_t v7 = v133;
          uint64_t v14 = v123;
          unint64_t v5 = MEMORY[0x263F8EE78];
LABEL_93:
          uint64_t v17 = v139;
          uint64_t v19 = v140;
          if (v139) {
            goto LABEL_8;
          }
LABEL_9:
          if (__OFADD__(v19, 1)) {
            goto LABEL_134;
          }
          OUTLINED_FUNCTION_19_8();
          if (v24 == v25)
          {
LABEL_95:
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v9 = v135;
            unint64_t v5 = v120;
            break;
          }
          unint64_t v26 = *(void *)(v124 + 8 * v23);
          uint64_t v27 = v23;
          if (!v26)
          {
            OUTLINED_FUNCTION_11_8();
            if (v24 == v25) {
              goto LABEL_95;
            }
            OUTLINED_FUNCTION_10_7();
            if (!v26)
            {
              OUTLINED_FUNCTION_11_8();
              if (v24 == v25) {
                goto LABEL_95;
              }
              OUTLINED_FUNCTION_10_7();
              if (!v26)
              {
                OUTLINED_FUNCTION_11_8();
                if (v24 == v25) {
                  goto LABEL_95;
                }
                OUTLINED_FUNCTION_10_7();
                if (!v26)
                {
                  OUTLINED_FUNCTION_11_8();
                  if (v24 == v25) {
                    goto LABEL_95;
                  }
                  OUTLINED_FUNCTION_10_7();
                  if (!v26)
                  {
                    OUTLINED_FUNCTION_11_8();
                    if (v24 == v25) {
                      goto LABEL_95;
                    }
                    OUTLINED_FUNCTION_10_7();
                    if (!v26)
                    {
                      OUTLINED_FUNCTION_19_8();
                      if (v24 == v25) {
                        goto LABEL_95;
                      }
                      unint64_t v26 = *(void *)(v124 + 8 * v28);
                      if (!v26)
                      {
                        while (!__OFADD__(v28, 1))
                        {
                          OUTLINED_FUNCTION_11_8();
                          if (v24 == v25) {
                            goto LABEL_95;
                          }
                          OUTLINED_FUNCTION_10_7();
                          uint64_t v28 = v29 + 1;
                          if (v26) {
                            goto LABEL_36;
                          }
                        }
                        goto LABEL_142;
                      }
                      uint64_t v27 = v28;
                    }
                  }
                }
              }
            }
          }
LABEL_36:
          uint64_t v139 = (v26 - 1) & v26;
          uint64_t v140 = v27;
        }
      }
    }
  }
  uint64_t v67 = v9;
  unint64_t v38 = v5;
  objc_msgSend((id)v5, sel_heapBufferSizeAndAlignWithLength_options_, v132, sub_25768AD80(v9));
  uint64_t v69 = v68;
  unint64_t v5 = v136;
  char v70 = (unint64_t *)(v136 + 24);
  swift_beginAccess();
  uint64_t v71 = sub_2574BB0B4(v7, v138 & 1, v67, *(void *)(v136 + 24));
  if (v71)
  {
    unint64_t v5 = v71;
    swift_endAccess();
    uint64_t v72 = sub_2574B7A64(v5);
    swift_release();
    swift_release();
    if (v72)
    {
      if ((uint64_t)objc_msgSend(*(id *)(v72 + 16), sel_maxAvailableSizeWithAlignment_, v69) >= v132)
      {
        OUTLINED_FUNCTION_15_9();
        unint64_t v5 = (unint64_t)sub_2574B59A8(v147, v7, v138 & 1, v135);
        if (*v100)
        {
          uint64_t v101 = sub_2574B7238();
          uint64_t v102 = OUTLINED_FUNCTION_26_4();
          ((void (*)(uint64_t))v5)(v102);
          swift_endAccess();
          swift_release();
          uint64_t v7 = v133;
          if (v101)
          {
            if ((v126 & 0xFE00000000) != 0) {
              uint64_t v103 = 48;
            }
            else {
              uint64_t v103 = 0;
            }
            unint64_t v5 = (unint64_t)objc_msgSend(*(id *)(v101 + 16), sel_newBufferWithLength_options_, a1, v103, v120);
            OUTLINED_FUNCTION_15_9();
            swift_isUniquelyReferenced_nonNull_native();
            uint64_t v104 = OUTLINED_FUNCTION_1_21();
            sub_257475A88(v104, v105, v135);
            OUTLINED_FUNCTION_28_4();
            if (v25) {
              goto LABEL_141;
            }
            unint64_t v84 = v106;
            char v108 = v107;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC0);
            uint64_t v109 = OUTLINED_FUNCTION_25_5();
            if (v109)
            {
              unint64_t v117 = OUTLINED_FUNCTION_31_4(v109, v110, v111, v112, v113, v114, v115, v116, v122, v123, v124, v125, v126, a1, v128, v129, v130, v131, v132,
                       v133,
                       v134,
                       v135,
                       v136,
                       v137,
                       v138);
              if ((v108 & 1) != (v118 & 1))
              {
LABEL_145:
                sub_2576A9020();
                __break(1u);
LABEL_146:
                OUTLINED_FUNCTION_20_8();
                OUTLINED_FUNCTION_9_12();
                __swift_instantiateConcreteTypeFromMangledName(&qword_26A0039A0);
                sub_2576A8A30();
                OUTLINED_FUNCTION_18_8();
                objc_msgSend((id)v38, sel_maxBufferLength);
                sub_2576A8EA0();
                sub_2576A7B00();
                swift_bridgeObjectRelease();
                sub_2576A7B00();
                OUTLINED_FUNCTION_2_16();
                OUTLINED_FUNCTION_6_11();
                goto LABEL_147;
              }
              unint64_t v84 = v117;
            }
            *char v70 = v146;
            swift_bridgeObjectRelease();
            uint64_t v96 = (void *)*v70;
            sub_2576A7810();
            if (v108) {
              goto LABEL_115;
            }
            char v97 = v138 & 1;
            uint64_t v98 = MEMORY[0x263F8EE78];
            goto LABEL_114;
          }
        }
        else
        {
          uint64_t v119 = OUTLINED_FUNCTION_26_4();
          ((void (*)(uint64_t))v5)(v119);
          swift_endAccess();
          swift_release();
          uint64_t v7 = v133;
        }
      }
      else
      {
        swift_release();
      }
    }
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v73 = sub_2574B5FE0();
  if ((v74 & 1) == 0)
  {
    uint64_t v75 = v73;
    uint64_t v76 = sub_2574B5B00((SEL *)&selRef_size);
    if (__OFADD__(v76, v7)) {
      goto LABEL_139;
    }
    if (v76 + v7 >= v75) {
      goto LABEL_146;
    }
  }
  id v77 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F128F0]), sel_init);
  objc_msgSend(v77, sel_setType_, 0);
  objc_msgSend(v77, sel_setCpuCacheMode_, 0);
  objc_msgSend(v77, sel_setStorageMode_, v135);
  objc_msgSend(v77, sel_setHazardTrackingMode_, 2);
  objc_msgSend(v77, sel_setSize_, v7);
  id v78 = objc_msgSend((id)v38, sel_newHeapWithDescriptor_, v77);

  if (!v78)
  {
    v147[0] = 0;
    v147[1] = 0xE000000000000000;
    sub_2576A8730();
    OUTLINED_FUNCTION_18_8();
    sub_2574B5B00((SEL *)&selRef_size);
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2574B5B00((SEL *)&selRef_usedSize);
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_2_16();
    OUTLINED_FUNCTION_6_11();
    goto LABEL_147;
  }
  type metadata accessor for MPSHeap();
  *(void *)(swift_allocObject() + 16) = v78;
  if ((v126 & 0xFE00000000) != 0) {
    uint64_t v79 = 48;
  }
  else {
    uint64_t v79 = 0;
  }
  unint64_t v5 = (unint64_t)objc_msgSend(v78, sel_newBufferWithLength_options_, a1, v79, v120);
  OUTLINED_FUNCTION_15_9();
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v80 = OUTLINED_FUNCTION_1_21();
  sub_257475A88(v80, v81, v135);
  OUTLINED_FUNCTION_28_4();
  if (v25) {
    goto LABEL_135;
  }
  unint64_t v84 = v82;
  char v85 = v83;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC0);
  uint64_t v86 = OUTLINED_FUNCTION_25_5();
  if (v86)
  {
    unint64_t v94 = OUTLINED_FUNCTION_31_4(v86, v87, v88, v89, v90, v91, v92, v93, v121, v123, v124, v125, v126, a1, v128, v129, v130, v131, v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138);
    if ((v85 & 1) == (v95 & 1))
    {
      unint64_t v84 = v94;
      goto LABEL_112;
    }
    goto LABEL_145;
  }
LABEL_112:
  *char v70 = v146;
  swift_bridgeObjectRelease();
  uint64_t v96 = (void *)*v70;
  sub_2576A7810();
  if ((v85 & 1) == 0)
  {
    char v97 = v138 & 1;
    uint64_t v98 = MEMORY[0x263F8EE78];
LABEL_114:
    sub_2575D015C(v84, v133, v97, v135, v98, (uint64_t)sub_2574B701C, 0, v96);
  }
LABEL_115:
  swift_bridgeObjectRelease();
  sub_2574B7020();
  swift_endAccess();
  swift_release();
  return v5;
}

uint64_t sub_2574B7020()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_2576A88A0();
  sub_2576A88F0();
  sub_2576A8900();
  sub_2576A88C0();
  uint64_t v2 = *v0;
  unint64_t v3 = *(void *)(*v0 + 16);
  unint64_t v4 = v3 - 1;
  uint64_t result = sub_2574B7C14(v3 - 1, v2);
  uint64_t v6 = result;
  uint64_t v15 = result;
  uint64_t v7 = v3 - 2;
  if (v3 >= 2)
  {
    while (v7 >= -1)
    {
      uint64_t v8 = v7 / 2;
      if (v7 / 2 >= *(void *)(*v1 + 16)) {
        goto LABEL_21;
      }
      uint64_t v9 = (uint64_t (*)(uint64_t *, uint64_t *))v1[1];
      uint64_t v14 = *(void *)(*v1 + 8 * v8 + 32);
      swift_retain();
      swift_retain();
      swift_retain();
      LOBYTE(v9) = v9(&v15, &v14);
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      if ((v9 & 1) == 0) {
        goto LABEL_12;
      }
      uint64_t v10 = *v1;
      if (v8 >= *(void *)(*v1 + 16)) {
        goto LABEL_22;
      }
      uint64_t v11 = *(void *)(v10 + 8 * v8 + 32);
      swift_retain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      void *v1 = v10;
      if ((result & 1) == 0) {
        sub_25763E48C();
      }
      if (v4 >= *(void *)(v10 + 16)) {
        goto LABEL_23;
      }
      swift_release();
      *(void *)(v10 + 8 * v4 + 32) = v11;
      uint64_t result = sub_2576A88C0();
      uint64_t v15 = v6;
      unint64_t v4 = v7 / 2;
      BOOL v12 = v7 <= 1;
      uint64_t v7 = v8 - 1;
      if (v12) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_12:
  uint64_t v8 = v4;
LABEL_13:
  uint64_t v13 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  void *v1 = v13;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  if (v8 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if ((unint64_t)v8 >= *(void *)(v13 + 16))
  {
LABEL_25:
    __break(1u);
    return result;
  }
  swift_retain();
  swift_release();
  *(void *)(v13 + 8 * v8 + 32) = v6;
  sub_2576A88C0();
  return swift_release();
}

uint64_t sub_2574B7238()
{
  unint64_t v1 = *(void *)(*v0 + 16);
  if (v1 == 1) {
    return (uint64_t)sub_2574B7B34(sub_2574B905C, (uint64_t (*)(uint64_t))sub_2574B8FD8);
  }
  if (!v1) {
    return v1;
  }
  unint64_t v1 = sub_2574B7C14(0, *v0);
  uint64_t v2 = sub_2574B7B34(sub_2574B905C, (uint64_t (*)(uint64_t))sub_2574B8FD8);
  uint64_t v3 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v3;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  if (*(void *)(v3 + 16))
  {
    swift_release();
    *(void *)(v3 + 32) = v2;
    sub_2576A88C0();
    sub_2574B7C38(0, *(void *)(*v0 + 16));
    return v1;
  }
  __break(1u);
  return result;
}

BOOL sub_2574B7334()
{
  int64_t v0 = sub_2576A3088();
  return sub_2576A3088() < v0;
}

uint64_t sub_2574B7378()
{
  strcpy((char *)v28, "MPSAllocator");
  BYTE5(v28[1]) = 0;
  HIWORD(v28[1]) = -5120;
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_2576A8730();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_4();
  uint64_t result = sub_2574B8058(*(void *)(v0 + 24), &v29);
  uint64_t v2 = 0;
  int64_t v3 = v32;
  unint64_t v4 = v33;
  int64_t v5 = (unint64_t)(v31 + 64) >> 6;
  while (v4)
  {
    unint64_t v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v7 = v6 | (v3 << 6);
LABEL_22:
    uint64_t v12 = *(void *)(*(void *)(*(void *)(v29 + 56) + 24 * v7) + 16);
    BOOL v13 = __OFADD__(v2, v12);
    v2 += v12;
    if (v13)
    {
      __break(1u);
      goto LABEL_25;
    }
  }
  int64_t v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v8 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v8);
  int64_t v10 = v3 + 1;
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 2;
  if (v3 + 2 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 3;
  if (v3 + 3 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 4;
  if (v3 + 4 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 5;
  if (v3 + 5 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v10);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v10 = v3 + 6;
  if (v3 + 6 >= v5) {
    goto LABEL_25;
  }
  unint64_t v9 = *(void *)(v30 + 8 * v10);
  if (v9)
  {
LABEL_21:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
    int64_t v3 = v10;
    goto LABEL_22;
  }
  int64_t v11 = v3 + 7;
  while (v11 < v5)
  {
    unint64_t v9 = *(void *)(v30 + 8 * v11++);
    if (v9)
    {
      int64_t v10 = v11 - 1;
      goto LABEL_21;
    }
  }
LABEL_25:
  sub_2576A7810();
  swift_release();
  OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_33_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRelease();
  sub_2576A8730();
  swift_bridgeObjectRelease();
  sub_2574B5B00((SEL *)&selRef_size);
  OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_33_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRelease();
  sub_2576A8730();
  swift_bridgeObjectRelease();
  sub_2574B5B00((SEL *)&selRef_usedSize);
  OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_33_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRelease();
  sub_2576A8730();
  swift_bridgeObjectRelease();
  sub_2574B5D4C();
  OUTLINED_FUNCTION_8_9();
  OUTLINED_FUNCTION_33_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_5_12();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  uint64_t v14 = *(void *)(v0 + 24);
  uint64_t v26 = v14 + 64;
  OUTLINED_FUNCTION_12_9();
  unint64_t v17 = v16 & v15;
  int64_t v27 = (unint64_t)(v18 + 63) >> 6;
  uint64_t result = sub_2576A7810();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_27;
  }
  while (2)
  {
    unint64_t v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v21 = v20 | (v19 << 6);
LABEL_41:
    uint64_t v25 = *(void *)(*(void *)(v14 + 48) + 24 * v21 + 16);
    swift_retain();
    swift_retain();
    sub_2576A8730();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_25768AE58(v25);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    swift_release();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      continue;
    }
    break;
  }
LABEL_27:
  int64_t v22 = v19 + 1;
  if (__OFADD__(v19, 1)) {
    goto LABEL_45;
  }
  if (v22 >= v27)
  {
LABEL_43:
    swift_release();
    return v28[0];
  }
  unint64_t v23 = *(void *)(v26 + 8 * v22);
  ++v19;
  if (v23) {
    goto LABEL_40;
  }
  int64_t v19 = v22 + 1;
  if (v22 + 1 >= v27) {
    goto LABEL_43;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v19);
  if (v23) {
    goto LABEL_40;
  }
  int64_t v19 = v22 + 2;
  if (v22 + 2 >= v27) {
    goto LABEL_43;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v19);
  if (v23)
  {
LABEL_40:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    goto LABEL_41;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v27) {
    goto LABEL_43;
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v27) {
      goto LABEL_43;
    }
    unint64_t v23 = *(void *)(v26 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_40;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_2574B7988()
{
  return sub_2574B7378();
}

uint64_t sub_2574B79AC(uint64_t a1)
{
  uint64_t result = sub_2574B9264(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_21_7();
  if (v7) {
    return 2;
  }
  else {
    return sub_2574B9194(v5, v6, 0, a1) & 1;
  }
}

uint64_t sub_2574B7A08(uint64_t a1)
{
  uint64_t result = sub_2574B9264(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_21_7();
  if (v7) {
    return 0;
  }
  else {
    return sub_2574B91E4(v5, v6, 0, a1);
  }
}

uint64_t sub_2574B7A64(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

void sub_2574B7A90(void *a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_2574AA6D8(v4);
    if (v4[3] == 1)
    {
      sub_2574B92D8((uint64_t)v4, &qword_26A001BE0);
      unint64_t v3 = OUTLINED_FUNCTION_17_7();
      sub_2574AA210(v3);
    }
    else
    {
      memcpy(a1, v4, 0x88uLL);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_2574B7B08())(void)
{
  return sub_2574B7B34((uint64_t (*)(void))sub_2574AA8E4, (uint64_t (*)(uint64_t))sub_2574AA3B4);
}

uint64_t (*sub_2574B7B34(uint64_t (*result)(void), uint64_t (*a2)(uint64_t)))(void)
{
  if (*(void *)(*(void *)v2 + 16))
  {
    uint64_t result = (uint64_t (*)(void))result();
    if (!result)
    {
      uint64_t v3 = *(void *)(*(void *)v2 + 16) - 1;
      return (uint64_t (*)(void))a2(v3);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2574B7BA0(void *a1@<X8>)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_2574AA878(__src);
    if (__src[0])
    {
      memcpy(a1, __src, 0xECuLL);
    }
    else
    {
      sub_2574B92D8((uint64_t)__src, &qword_26A001BD8);
      unint64_t v3 = OUTLINED_FUNCTION_17_7();
      sub_2574AA328(v3);
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_2574B7C14(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a2 + 16) > result)
  {
    return swift_retain();
  }
  __break(1u);
  return result;
}

unint64_t sub_2574B7C38(unint64_t result, uint64_t a2)
{
  if ((uint64_t)(result + 0x4000000000000000) < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    unint64_t v3 = v2;
    unint64_t v5 = result;
    while (1)
    {
      uint64_t v6 = (2 * v5) | 1;
      int64_t v7 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      unint64_t v8 = v5;
      if (v6 < a2)
      {
        unint64_t v9 = (uint64_t (*)(unint64_t *, unint64_t *))v3[1];
        uint64_t v10 = *v3;
        unint64_t v16 = sub_2574B7C14((2 * v5) | 1, *v3);
        unint64_t v15 = sub_2574B7C14(v5, v10);
        char v11 = v9(&v16, &v15);
        swift_release();
        uint64_t result = swift_release();
        if (v11) {
          unint64_t v8 = (2 * v5) | 1;
        }
        else {
          unint64_t v8 = v5;
        }
      }
      if (v7 < a2)
      {
        uint64_t v12 = (uint64_t (*)(unint64_t *, unint64_t *))v3[1];
        uint64_t v13 = *v3;
        unint64_t v16 = sub_2574B7C14(v7, *v3);
        unint64_t v15 = sub_2574B7C14(v8, v13);
        char v14 = v12(&v16, &v15);
        swift_release();
        uint64_t result = swift_release();
        if (v14) {
          unint64_t v8 = v7;
        }
      }
      if (v8 == v5) {
        return result;
      }
      uint64_t result = sub_2574B7E14(v5, v8);
      unint64_t v5 = v8;
      if ((uint64_t)(v8 + 0x4000000000000000) < 0) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_2574B7DA0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = TensorShape.subscript.getter(a1);
    uint64_t v5 = TensorShape.subscript.getter(a2);
    TensorShape.subscript.setter(v5, a1);
    TensorShape.subscript.setter(v4, a2);
  }
}

unint64_t sub_2574B7E14(unint64_t result, unint64_t a2)
{
  if (result == a2) {
    return result;
  }
  unint64_t v3 = result;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = *v2;
  unint64_t v5 = *(void *)(*v2 + 16);
  if (v5 <= result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 <= a2)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(v4 + 32 + 8 * result);
  uint64_t v8 = *(void *)(v4 + 32 + 8 * a2);
  swift_retain();
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v4;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  if (*(void *)(v4 + 16) <= v3) {
    goto LABEL_17;
  }
  *(void *)(v4 + 8 * v3 + 32) = v8;
  swift_release();
  sub_2576A88C0();
  uint64_t v9 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v9;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  if (*(void *)(v9 + 16) <= a2) {
    goto LABEL_18;
  }
  *(void *)(v9 + 8 * a2 + 32) = v7;
  swift_release();
  return sub_2576A88C0();
}

unint64_t sub_2574B7F40(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    unint64_t v6 = result;
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = *v3;
      unint64_t v8 = *(void *)(*v3 + 16);
      if (v8 > result)
      {
        unint64_t v2 = a2;
        if (v8 > a2)
        {
          uint64_t v4 = *(void *)(v7 + 32 + 8 * result);
          uint64_t v5 = *(void *)(v7 + 32 + 8 * a2);
          swift_retain();
          swift_retain();
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_6;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        sub_257582BD4();
        uint64_t v7 = v9;
LABEL_6:
        *(void *)(v7 + 32 + 8 * v6) = v5;
        uint64_t result = swift_release();
        if (*(void *)(v7 + 16) <= v2)
        {
          __break(1u);
        }
        else
        {
          *(void *)(v7 + 32 + 8 * v2) = v4;
          uint64_t result = swift_release();
          *unint64_t v3 = v7;
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  return 0;
}

BOOL sub_2574B801C(_DWORD *a1, int a2)
{
  int v3 = *v2 & a2;
  if (v3 != a2) {
    *v2 |= a2;
  }
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_2574B8048(uint64_t result)
{
  *v1 |= result;
  return result;
}

uint64_t sub_2574B8058@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  *a2 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v5 = v6;
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void (*sub_2574B8090(void *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  void v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_2576A7810();
  v6[9] = sub_2574B8C54(v6);
  v6[10] = sub_2574B83FC(v6 + 4, a2, a3);
  return sub_2574B813C;
}

void (*sub_2574B8140(void *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  void v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_2576A7810();
  v6[9] = sub_2574B8C54(v6);
  v6[10] = sub_2574B85EC(v6 + 4, a2, a3);
  return sub_2574B813C;
}

void (*sub_2574B81EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  unint64_t v8 = malloc(0x50uLL);
  *a1 = v8;
  swift_isUniquelyReferenced_nonNull_native();
  v8[8] = sub_2574B8C84(v8);
  v8[9] = sub_2574B8860(v8 + 4, a2, a3, a4);
  return sub_2574B8294;
}

void sub_2574B8294(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  uint64_t v3 = OUTLINED_FUNCTION_0_19();
  v2(v3);
  free(v1);
}

void (*sub_2574B82E8(void *a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  void v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  sub_2576A7810();
  v6[9] = sub_2574B8C54(v6);
  v6[10] = sub_2574B8AB8(v6 + 4, a2, a3);
  return sub_2574B813C;
}

void sub_2574B8394(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(uint64_t))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  uint64_t v3 = OUTLINED_FUNCTION_0_19();
  v2(v3);
  free(v1);
}

void (*sub_2574B83FC(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  unint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[1] = a3;
  uint64_t v8[2] = v3;
  void *v8 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001A80);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[3] = v10;
  uint64_t v11 = *v3;
  unint64_t v12 = sub_25747588C(a2, a3);
  *((unsigned char *)v8 + 40) = v13 & 1;
  if (__OFADD__(*(void *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C00);
  if (sub_2576A8AD0())
  {
    unint64_t v16 = sub_25747588C(a2, a3);
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **, uint64_t))sub_2576A9020();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v14;
  if (v15)
  {
    uint64_t v18 = *(void *)(*v4 + 56);
    uint64_t v19 = sub_2576A74C0();
    (*(void (**)(void *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v10, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v19 = sub_2576A74C0();
    uint64_t v20 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v20, 1, v19);
  return sub_2574B85B8;
}

void sub_2574B85B8(uint64_t **a1, uint64_t a2)
{
}

void (*sub_2574B85EC(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  unint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[1] = a3;
  uint64_t v8[2] = v3;
  void *v8 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BE8);
  uint64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  v8[3] = v10;
  uint64_t v11 = *v3;
  unint64_t v12 = sub_25747588C(a2, a3);
  *((unsigned char *)v8 + 40) = v13 & 1;
  if (__OFADD__(*(void *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A001BF0);
  if (sub_2576A8AD0())
  {
    unint64_t v16 = sub_25747588C(a2, a3);
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **, uint64_t))sub_2576A9020();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v14;
  if (v15)
  {
    uint64_t v18 = *(void *)(*v4 + 56);
    uint64_t v19 = sub_2576A73C0();
    (*(void (**)(void *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v10, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, v19);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v19 = sub_2576A73C0();
    uint64_t v20 = 1;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, v20, 1, v19);
  return sub_2574B87A8;
}

void sub_2574B87A8(uint64_t **a1, uint64_t a2)
{
}

void sub_2574B87DC(uint64_t **a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void, __n128), void (*a5)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = (void *)(*a1)[3];
  sub_2574B8CC0((uint64_t)v7, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1], a3, a4, a5);
  sub_2574B92D8((uint64_t)v7, a3);
  free(v7);
  free(v6);
}

void (*sub_2574B8860(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x40uLL);
  *a1 = v10;
  v10[4] = a4;
  v10[5] = v4;
  *((unsigned char *)v10 + 56) = a3;
  _OWORD v10[3] = a2;
  uint64_t v11 = *v4;
  unint64_t v12 = sub_257475A88(a2, a3, a4);
  *((unsigned char *)v10 + 57) = v13 & 1;
  if (__OFADD__(*(void *)(v11 + 16), (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v14 = v12;
  char v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC0);
  if (sub_2576A8AD0())
  {
    unint64_t v16 = sub_257475A88(a2, a3 & 1, a4);
    if ((v15 & 1) == (v17 & 1))
    {
      unint64_t v14 = v16;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **))sub_2576A9020();
    __break(1u);
    return result;
  }
LABEL_5:
  v10[6] = v14;
  if (v15)
  {
    uint64_t v18 = *(void *)(*v5 + 56) + 24 * v14;
    long long v19 = *(_OWORD *)v18;
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v20 = 0;
    long long v19 = 0uLL;
  }
  *(_OWORD *)uint64_t v10 = v19;
  long long v10[2] = v20;
  return sub_2574B89B8;
}

void sub_2574B89B8(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[1];
  uint64_t v4 = (*a1)[2];
  char v5 = *((unsigned char *)*a1 + 57);
  if (v2)
  {
    unint64_t v6 = v1[6];
    uint64_t v7 = *(void **)v1[5];
    if (v5)
    {
      unint64_t v8 = (uint64_t *)(v7[7] + 24 * v6);
      uint64_t *v8 = v2;
      v8[1] = v3;
      uint64_t v8[2] = v4;
    }
    else
    {
      sub_2575D015C(v6, v1[3], *((unsigned char *)v1 + 56), v1[4], v2, v3, v4, v7);
    }
  }
  else if (*((unsigned char *)*a1 + 57))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BC8);
    sub_2574B9148();
    sub_2576A8B00();
  }
  uint64_t v9 = *v1;
  sub_2574B90C8(v2);
  sub_2574B9108(v9);
  free(v1);
}

void (*sub_2574B8AB8(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  unint64_t v8 = (char *)malloc(0x40uLL);
  *a1 = v8;
  *((void *)v8 + 4) = a3;
  *((void *)v8 + 5) = v3;
  *((void *)v8 + 3) = a2;
  uint64_t v9 = *v3;
  unint64_t v10 = sub_25747588C(a2, a3);
  unsigned char v8[56] = v11 & 1;
  if (__OFADD__(*(void *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v12 = v10;
  char v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C08);
  if (sub_2576A8AD0())
  {
    unint64_t v14 = sub_25747588C(a2, a3);
    if ((v13 & 1) == (v15 & 1))
    {
      unint64_t v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (void (*)(uint64_t **))sub_2576A9020();
    __break(1u);
    return result;
  }
LABEL_5:
  *((void *)v8 + 6) = v12;
  if (v13)
  {
    uint64_t v16 = *(void *)(*v4 + 56) + 24 * v12;
    uint64_t v17 = *(void *)v16;
    long long v18 = *(_OWORD *)(v16 + 8);
  }
  else
  {
    uint64_t v17 = 0;
    long long v18 = 0uLL;
  }
  *(void *)unint64_t v8 = v17;
  *(_OWORD *)(v8 + 8) = v18;
  return sub_2574B8C00;
}

void sub_2574B8C00(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_2574B8EEC(*a1, *((unsigned char *)*a1 + 56), (uint64_t *)(*a1)[5], (*a1)[6], (*a1)[3], (*a1)[4]);
  sub_2574B9334(*v1, v1[1]);
  free(v1);
}

uint64_t (*sub_2574B8C54(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_2574B93BC;
}

uint64_t (*sub_2574B8C84(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_2574B8CB4;
}

uint64_t sub_2574B8CB4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_2574B8CC0(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(void, __n128), void (*a9)(uint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  __n128 v16 = MEMORY[0x270FA5388](v15 - 8);
  long long v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a8(0, v16);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  int64_t v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  sub_257476E94(a1, (uint64_t)v18, a7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19) == 1)
  {
    uint64_t result = sub_2574B92D8((uint64_t)v18, a7);
    if (a2)
    {
      swift_arrayDestroy();
      return sub_2576A8B00();
    }
  }
  else
  {
    uint64_t v25 = *(void (**)(void))(v20 + 32);
    OUTLINED_FUNCTION_14_9();
    v25();
    uint64_t v26 = *a3;
    OUTLINED_FUNCTION_14_9();
    if (a2)
    {
      return ((uint64_t (*)(void))v25)();
    }
    else
    {
      v25();
      a9(a4, v27, v28, v22, v26);
      return sub_2576A7810();
    }
  }
  return result;
}

uint64_t sub_2574B8EEC(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  if (v6)
  {
    uint64_t v9 = *a3;
    if (a2)
    {
      unint64_t v10 = (uint64_t *)(*(void *)(v9 + 56) + 24 * a4);
      uint64_t *v10 = v7;
      v10[1] = v6;
      long long v10[2] = v8;
    }
    else
    {
      sub_2575D0390(a4, a5, a6, v7, v6, v8, v9);
      sub_2576A7810();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_2576A8B00();
  }
  return sub_2574B9378(v7, v6);
}

uint64_t sub_2574B8FD8(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = v5 - 1 - a1;
    uint64_t v8 = v3 + 8 * a1;
    uint64_t v9 = *(void *)(v8 + 32);
    sub_25760A1A0((char *)(v8 + 40), v7, (char *)(v8 + 32));
    *(void *)(*v1 + 16) = v6;
    sub_2576A88C0();
    return v9;
  }
  return result;
}

uint64_t sub_2574B905C()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0) {
    sub_25763E48C();
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v3 - 1;
    uint64_t v5 = *(void *)(v1 + 8 * v4 + 32);
    *(void *)(v1 + 16) = v4;
    sub_2576A88C0();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574B90C8(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2574B9108(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_2574B9148()
{
  unint64_t result = qword_26A001BD0;
  if (!qword_26A001BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001BD0);
  }
  return result;
}

uint64_t sub_2574B9194(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(unsigned __int8 *)(*(void *)(a4 + 48) + result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2574B91E4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    uint64_t v4 = *(void *)(*(void *)(a4 + 48) + 16 * result);
    sub_2576A7810();
    return v4;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_2574B9264(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
LABEL_3:
    uint64_t v3 = __clz(__rbit64(v1)) + v2;
    return OUTLINED_FUNCTION_13_9(v3);
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return OUTLINED_FUNCTION_13_9(v3);
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    goto LABEL_3;
  }
  uint64_t v2 = 64;
  uint64_t v7 = 9;
  while (v7 - 7 < (unint64_t)(v3 + 63) >> 6)
  {
    unint64_t v1 = *(void *)(a1 + 8 * v7);
    v2 += 64;
    ++v7;
    if (v1) {
      goto LABEL_3;
    }
  }
  return OUTLINED_FUNCTION_13_9(v3);
}

uint64_t sub_2574B92D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2574B9334(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2574B9378(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_2576A7810();
    return sub_2576A7810();
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  *(void *)(v2 - 200) = *v0;
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

void OUTLINED_FUNCTION_2_16()
{
  uint64_t v1 = *(void *)(v0 - 168);
  *(void *)(v0 - 176) = *(void *)(v0 - 176);
  *(void *)(v0 - 168) = v1;
  *(unsigned char *)(v0 - 92) = 3;
}

uint64_t OUTLINED_FUNCTION_3_13(uint64_t a1)
{
  *uint64_t v2 = a1;
  *(void *)(a1 + 32) = v1;
  return sub_2576A7810();
}

void *OUTLINED_FUNCTION_4_13()
{
  return malloc(0x30uLL);
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return sub_2576A8EA0();
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_13_9@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return *(void *)(*(void *)v0 + 16) - 1;
}

uint64_t OUTLINED_FUNCTION_18_8()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  *(void *)(v0 - 176) = 0;
  *(void *)(v0 - 168) = 0xE000000000000000;
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_25_5()
{
  return sub_2576A8AD0();
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return v0 - 176;
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return swift_beginAccess();
}

unint64_t OUTLINED_FUNCTION_31_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return sub_257475A88(a20, a25 & 1, a22);
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return sub_2576A7B00();
}

id sub_2574B96D0(char a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, a1 & 1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 0);

  return v2;
}

id sub_2574B973C()
{
  return sub_2574B96D0(*v0);
}

id sub_2574B9744(unsigned __int8 a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedChar_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 9);

  return v2;
}

id sub_2574B97B0()
{
  return sub_2574B9744(*v0);
}

id sub_2574B97B8(unsigned __int16 a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedShort_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 10);

  return v2;
}

id sub_2574B9824()
{
  return sub_2574B97B8(*v0);
}

id sub_2574B982C()
{
  return sub_2574B995C(*v0, (SEL *)&selRef_initWithUnsignedInt_, 11);
}

id sub_2574B9854()
{
  return sub_2574B99FC(*v0, 11);
}

id sub_2574B9874(char a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithChar_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 5);

  return v2;
}

id sub_2574B98E0()
{
  return sub_2574B9874(*v0);
}

id sub_2574B98E8(__int16 a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithShort_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 6);

  return v2;
}

id sub_2574B9954()
{
  return sub_2574B98E8(*v0);
}

id sub_2574B995C(uint64_t a1, SEL *a2, uint64_t a3)
{
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), *a2, a1);
  id v5 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v4, a3);

  return v5;
}

id sub_2574B99D4()
{
  return sub_2574B995C(*v0, (SEL *)&selRef_initWithInt_, 7);
}

id sub_2574B99FC(uint64_t a1, uint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInt_, a1);
  id v4 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v3, a2);

  return v4;
}

id sub_2574B9A6C()
{
  return sub_2574B99FC(*v0, 7);
}

id sub_2574B9A8C(uint64_t a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v1, 7);

  return v2;
}

id sub_2574B9AF8()
{
  return sub_2574B9A8C(*v0);
}

id sub_2574B9B00(__n128 _Q0)
{
  __asm { FCVT            S8, H0 }
  id v6 = objc_allocWithZone(NSNumber);
  LODWORD(v7) = _S8;
  id v8 = objc_msgSend(v6, sel_initWithFloat_, v7);
  id v9 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v8, 2);

  return v9;
}

id sub_2574B9B74(__n128 a1)
{
  a1.n128_u16[0] = *v1;
  return sub_2574B9B00(a1);
}

id sub_2574B9B7C(float a1)
{
  id v2 = objc_allocWithZone(NSNumber);
  *(float *)&double v3 = a1;
  id v4 = objc_msgSend(v2, sel_initWithFloat_, v3);
  id v5 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v4, 3);

  return v5;
}

id sub_2574B9BF0()
{
  return sub_2574B9B7C(*v0);
}

id sub_2574B9BF8()
{
  return sub_2574B9C58();
}

id sub_2574B9C58()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v1 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithStringScalar_, v1);

  return v2;
}

id sub_2574B9CCC()
{
  return sub_2574B9BF8();
}

uint64_t sub_2574B9CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32))(&v4, a2, a3);
  return sub_2575285B0();
}

id sub_2574B9D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_2576AC2A0;
  MEMORY[0x25A2B84C0](a1, a2);
  *(void *)(v6 + 32) = sub_2576A80E0();
  sub_2576A7E20();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v7 = sub_2576A8A20();
  uint64_t v8 = sub_2574B9CD4(v7, a2, a3);
  id v9 = objc_allocWithZone((Class)SNNMILDataValue);
  return sub_2574BAB88(v6, v7, v8);
}

id sub_2574B9E00(uint64_t a1, uint64_t a2)
{
  return sub_2574B9D24(*v2, *(void *)(a1 + 16), *(void *)(a2 - 8));
}

id sub_2574B9E14()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v2 + 16) = xmmword_2576AC2A0;
  *(void *)(v2 + 32) = sub_2576A80E0();
  sub_2576A7E20();
  sub_25746D770(v1);
  id v3 = objc_allocWithZone((Class)SNNMILDataValue);
  uint64_t v4 = OUTLINED_FUNCTION_2_17();
  return sub_2574BAB88(v4, v5, v6);
}

uint64_t sub_2574B9EA0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v3);
  return sub_2575285B0();
}

uint64_t sub_2574B9EE4(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void v7[4];
  uint64_t v8;

  v7[2] = a1;
  void v7[3] = a2;
  uint64_t v4 = *(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void *, uint64_t, uint64_t, uint64_t))(a2 + 64);
  uint64_t v5 = sub_2574A4924(0, &qword_26A001C10);
  v4(&v8, sub_2574BA904, v7, v5, a1, a2);
  return v8;
}

id sub_2574B9F84(uint64_t a1)
{
  uint64_t v2 = sub_2576A7810();
  uint64_t v3 = sub_25746D770(v2);
  id result = (id)swift_bridgeObjectRelease();
  if (a1)
  {
    sub_2574A4924(0, &qword_26A001C10);
    uint64_t v5 = sub_25754DF08();
    return sub_25754E1EC(v3, a1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_2574BA018(uint64_t a1)
{
  uint64_t v2 = sub_2576A7810();
  uint64_t v3 = sub_25746D770(v2);
  id result = (id)swift_bridgeObjectRelease();
  if (a1)
  {
    sub_2574A4924(0, &qword_26A001C10);
    uint64_t v5 = sub_25754DFFC();
    return sub_25754E1EC(v3, a1, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574BA0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16))(&v11, a2, a3);
  uint64_t v8 = sub_25746D770(v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    sub_2574A4924(0, &qword_26A001C10);
    uint64_t v10 = sub_2574B9EA0(a2, a3);
    uint64_t result = (uint64_t)sub_25754E1EC(v8, a1, v10);
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574BA184()
{
  uint64_t v0 = swift_retain();
  return sub_25754E390(v0);
}

uint64_t sub_2574BA1BC()
{
  return sub_2574BA184();
}

uint64_t sub_2574BA1E0()
{
  return sub_2574BA924((uint64_t)sub_2574BAD14, v0);
}

uint64_t sub_2574BA224()
{
  return sub_2574BA1E0();
}

uint64_t sub_2574BA248()
{
  return sub_2574BAA8C((uint64_t)sub_2574BADA4, v0);
}

uint64_t sub_2574BA28C()
{
  return sub_2574BA248();
}

uint64_t sub_2574BA2B0()
{
  swift_retain();
  sub_257522760(0);
  BaseAddress = IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_2574BA884();
  uint64_t v2 = sub_2576A7810();
  uint64_t v3 = sub_25746D770(v2);
  uint64_t result = swift_bridgeObjectRelease();
  if (BaseAddress)
  {
    sub_2574A4924(0, &qword_26A001C10);
    uint64_t v5 = sub_25754DFFC();
    id v6 = sub_25754E1EC(v3, (uint64_t)BaseAddress, v5);
    sub_257522858(0);
    swift_release();
    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574BA378()
{
  return sub_2574BA2B0();
}

id sub_2574BA39C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) == 1)
  {
    uint64_t v1 = sub_2576A70A0();
    uint64_t v3 = v2;
    uint64_t v4 = sub_2576A7810();
    uint64_t v5 = sub_25746D770(v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_25754E0F0();
    uint64_t v7 = (void *)sub_2576A91B0();
    id v8 = objc_allocWithZone((Class)SNNMILBlobValue);
    return sub_2574BAC38(v1, v3, v5, v6, v7);
  }
  else
  {
    uint64_t v10 = (uint64_t *)swift_retain();
    return sub_257523804(v10);
  }
}

id sub_2574BA49C()
{
  return sub_2574BA39C();
}

id sub_2574BA4C0()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v1);
      id v4 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v3, 7);
      goto LABEL_6;
    case 2:
      _H0 = *(void *)v0;
      __asm { FCVT            S8, H0 }
      id v11 = objc_allocWithZone(NSNumber);
      LODWORD(v12) = _S8;
      id v3 = objc_msgSend(v11, sel_initWithFloat_, v12);
      id v4 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v3, 2);
      goto LABEL_6;
    case 3:
      id v13 = objc_allocWithZone(NSNumber);
      LODWORD(v14) = v1;
      id v3 = objc_msgSend(v13, sel_initWithFloat_, v14);
      id v4 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v3, 3);
      goto LABEL_6;
    case 4:
      sub_2574A4924(0, &qword_26A001C10);
      sub_2576A7810();
      return sub_2574B9C58();
    case 5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_2576AC2A0;
      uint64_t v17 = sub_2576A80E0();
      OUTLINED_FUNCTION_0_20(v17);
      sub_25746D770(v1);
      id v18 = objc_allocWithZone((Class)SNNMILDataValue);
      uint64_t v19 = OUTLINED_FUNCTION_2_17();
      return sub_2574BAB88(v19, v20, v21);
    case 6:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_2576AC2A0;
      uint64_t v22 = sub_2576A80E0();
      OUTLINED_FUNCTION_0_20(v22);
      uint64_t v23 = sub_25746DE64(v1);
      objc_allocWithZone((Class)SNNMILDataValue);
      uint64_t v19 = v31;
      uint64_t v20 = v23;
      uint64_t v21 = 3;
      return sub_2574BAB88(v19, v20, v21);
    case 7:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(OUTLINED_FUNCTION_1_4() + 16) = xmmword_2576AC2A0;
      sub_2576A7810();
      uint64_t v24 = sub_2576A80E0();
      OUTLINED_FUNCTION_0_20(v24);
      uint64_t v25 = sub_25746D770(v1);
      id v26 = objc_allocWithZone((Class)SNNMILDataValue);
      id v15 = sub_2574BAB88(v31, v25, 7);
      sub_257476E0C(v1, v2, 7);
      return v15;
    case 8:
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EC8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C18);
      if (swift_dynamicCast())
      {
        uint64_t v27 = *((void *)&v32 + 1);
        uint64_t v28 = v33;
        __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
        uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      }
      else
      {
        uint64_t v33 = 0;
        long long v31 = 0u;
        long long v32 = 0u;
        sub_2574BADC0((uint64_t)&v31);
        uint64_t ObjectType = swift_getObjectType();
        return (id)sub_2574B9EE4(ObjectType, v2);
      }
      return (id)v29;
    default:
      id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *(void *)v0 & 1);
      id v4 = objc_msgSend(objc_allocWithZone((Class)SNNMILDataValue), sel_initWithScalar_dataType_, v3, 0);
LABEL_6:
      id v15 = v4;

      return v15;
  }
}

uint64_t sub_2574BA884()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    id v3 = (uint64_t *)(v1 + 32);
    uint64_t v4 = 1;
    while (1)
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = v4 * v5;
      if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63) {
        break;
      }
      uint64_t v4 = v6;
      if (!--v2) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v6 = 1;
LABEL_7:
  unsigned int v7 = *(unsigned __int8 *)(v0 + 32) - 1;
  if (v7 > 0xA) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = qword_2576AF460[(char)v7];
  }
  uint64_t result = v6 * v8;
  if ((unsigned __int128)(v6 * (__int128)v8) >> 64 != (v6 * v8) >> 63) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_2574BA904@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2574BA0AC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_2574BA924(uint64_t a1, uint64_t a2)
{
  void (*v12)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  void v15[5];
  uint64_t v16;

  swift_retain();
  id v6 = sub_25765D36C();
  objc_msgSend(v6, sel_lock);

  uint64_t v7 = *(void *)(v2 + 40);
  if (v7 < 0)
  {
    uint64_t v9 = v7 & 0x7FFFFFFFFFFFFFFFLL;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_25765D88C();
    uint64_t v9 = v8;
  }
  id v10 = sub_25765D36C();
  objc_msgSend(v10, sel_unlock);
  swift_release();

  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x270FA5388](ObjectType);
  v15[2] = a1;
  void v15[3] = a2;
  double v12 = *(void (**)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v9 + 64);
  id v13 = sub_2574A4924(0, &qword_26A001C10);
  v12(&v16, sub_2574BAD5C, v15, v13, ObjectType, v9);
  if (v3) {
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_2574BAA8C(uint64_t a1, uint64_t a2)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v11;

  sub_2575C91A8();
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64);
  uint64_t v9 = sub_2574A4924(0, &qword_26A001C10);
  v8(&v11, a1, a2, v9, ObjectType, v6);
  if (v2) {
    return swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  return v11;
}

void *sub_2574BAB50(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  uint64_t result = a3(&v5);
  if (!v3) {
    return (void *)v5;
  }
  return result;
}

id sub_2574BAB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v5 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithShape_scalars_dataType_, v5, v6, a3);

  return v7;
}

id sub_2574BAC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v9 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v5, sel_initWithFilename_shape_dataType_offset_, v8, v9, a4, a5);

  return v10;
}

id sub_2574BACE8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_2574B9F84(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id sub_2574BAD14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2574BACE8(a1, a2);
}

void *sub_2574BAD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *(*a3)(uint64_t *__return_ptr)@<X2>, void *a4@<X8>)
{
  id result = sub_2574BAB50(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

void *sub_2574BAD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_2574BAD30(a1, a2, *(void *(**)(uint64_t *__return_ptr))(v3 + 16), a3);
}

id sub_2574BAD78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_2574BA018(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

id sub_2574BADA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2574BAD78(a1, a2);
}

uint64_t sub_2574BADC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_20(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return sub_2576A7E20();
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return v0;
}

uint64_t sub_2574BAE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_25747588C(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BAE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_25747588C(a1, a2);
  if ((v4 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_25_6();
  return v3;
}

uint64_t sub_2574BAED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (unint64_t v4 = sub_25747588C(a1, a2), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BAF20(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_2574759B8(a1), (v2 & 1) != 0)) {
    return OUTLINED_FUNCTION_15_10();
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BAF64(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16) && (unint64_t v5 = sub_257475934(a1, a2, a3), (v6 & 1) != 0)) {
    return *(void *)(*(void *)(a4 + 56) + 16 * v5);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BAFB0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (unint64_t v3 = sub_2574759B8(a1), (v4 & 1) != 0)) {
    return *(unsigned __int8 *)(*(void *)(a2 + 56) + v3);
  }
  else {
    return 2;
  }
}

uint64_t sub_2574BAFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_25747588C(a1, a2), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(a3 + 56);
    uint64_t v10 = sub_2576A74C0();
    OUTLINED_FUNCTION_9_13();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a4, v9 + *(void *)(v11 + 72) * v8, v10);
    uint64_t v12 = a4;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v14 = sub_2576A74C0();
    uint64_t v12 = a4;
    uint64_t v13 = 1;
  }
  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

uint64_t sub_2574BB0B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  sub_257475A88(a1, a2 & 1, a3);
  if ((v5 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_14_10();
  swift_retain();
  swift_retain();
  return v4;
}

double sub_2574BB120@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_257475B10(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_2574A4AE8(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_2574BB184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a4 + 16)) {
    return 0;
  }
  sub_257475B74();
  if ((v5 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_25_6();
  return v4;
}

uint64_t sub_2574BB1CC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_2574759B8(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BB210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_25747588C(a1, a2), (v3 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BB254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_25747588C(a1, a2);
  if ((v4 & 1) == 0) {
    return 0;
  }
  OUTLINED_FUNCTION_14_10();
  sub_2576A7810();
  sub_2576A7810();
  return v3;
}

unint64_t sub_2574BB2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    goto LABEL_5;
  }
  unint64_t v5 = sub_25747588C(a1, a2);
  if ((v6 & 1) == 0)
  {
    uint64_t v3 = 0;
LABEL_5:
    unsigned __int8 v7 = 1;
    return v3 | ((unint64_t)v7 << 32);
  }
  unsigned __int8 v7 = 0;
  uint64_t v3 = *(unsigned int *)(*(void *)(a3 + 56) + 4 * v5);
  return v3 | ((unint64_t)v7 << 32);
}

uint64_t sub_2574BB318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_25747588C(a1, a2), (v3 & 1) != 0)) {
    return OUTLINED_FUNCTION_15_10();
  }
  else {
    return 0;
  }
}

uint64_t sub_2574BB35C()
{
  return swift_retain();
}

uint64_t Tensor.shape.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(*(void *)v1 + 16) + 152);
  return sub_2576A7810();
}

void Tensor.elementType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)(*(void *)v1 + 16) + 160);
}

uint64_t Array<A>.resolve(descriptor:)(long long *a1, uint64_t a2)
{
  long long v3 = *a1;
  unint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_7_10((uint64_t)a1, a2);
    sub_2576A7810();
    for (uint64_t i = 0; i != v5; ++i)
    {
      OUTLINED_FUNCTION_17_8();
      swift_retain();
      id v7 = sub_257614628();
      objc_msgSend(v7, sel_lock);

      OUTLINED_FUNCTION_13_10();
      sub_257486824((uint64_t)v7, (uint64_t)v15);
      if (v16)
      {
        if (v16 == 1)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_25748692C(v4);
        }
        else
        {
          sub_257486880((uint64_t)v15);
        }
        id v10 = sub_257614628();
        OUTLINED_FUNCTION_20_9(v10);
        swift_release();
        swift_release_n();
      }
      else
      {
        sub_257486880((uint64_t)v15);
        id v8 = sub_257614628();
        OUTLINED_FUNCTION_20_9(v8);
        swift_release();
        swift_release();

        MEMORY[0x25A2B83B0]();
        OUTLINED_FUNCTION_21_8();
        if (v9) {
          OUTLINED_FUNCTION_19_9();
        }
        sub_2576A7ED0();
        sub_2576A7E20();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v4 = v17;
    long long v3 = v13;
  }
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_6_12();
    uint64_t v12 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    long long v3 = v13;
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
  }
  else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return swift_bridgeObjectRelease();
  }
  if (qword_26A000948 != -1)
  {
    long long v14 = v3;
    swift_once();
    long long v3 = v14;
  }
  *(_OWORD *)id v15 = v3;
  sub_2576593B0(v4, v15);
  return swift_bridgeObjectRelease();
}

ValueMetadata *Tensor.scalarType.getter()
{
  uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E498];
  switch(*(unsigned char *)(*(void *)(*(void *)v0 + 16) + 160))
  {
    case 1:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E4F0];
      break;
    case 2:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E548];
      break;
    case 3:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D6C8];
      break;
    case 4:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E778];
      break;
    case 5:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E888];
      break;
    case 6:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E8F8];
      break;
    case 7:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E970];
      break;
    case 8:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8E9F8];
      break;
    case 9:
      uint64_t v1 = &type metadata for BFloat16;
      sub_25748E668();
      break;
    case 0xA:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D5C8];
      break;
    case 0xB:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D538];
      break;
    case 0xC:
      uint64_t v1 = (ValueMetadata *)MEMORY[0x263F8D4F8];
      break;
    default:
      return v1;
  }
  return v1;
}

uint64_t Tensor.rank.getter()
{
  return *(void *)(*(void *)(*(void *)(*(void *)v0 + 16) + 152) + 16);
}

uint64_t Tensor.computeDevice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_25747B47C(*(void *)(*(void *)v1 + 16) + 168, a1);
}

uint64_t Tensor.placed(on:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  char v6 = Tensor.scalarType.getter();
  char v8 = sub_2575365A0((uint64_t)v6, v7);
  if (v8 != 2) {
    sub_257671054(a1, v8 & 1);
  }
  *a2 = v5;
  swift_retain();
  return Tensor.place(on:)(a1);
}

uint64_t Tensor.scalarCount.getter()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)v0 + 16) + 152);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 1;
  }
  long long v3 = (uint64_t *)(v1 + 32);
  uint64_t v4 = 1;
  while (1)
  {
    uint64_t v5 = *v3++;
    uint64_t result = v4 * v5;
    if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63) {
      break;
    }
    uint64_t v4 = result;
    if (!--v2) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void Tensor.isScalar.getter()
{
  if (*(void *)(*(void *)(*(void *)(*(void *)v0 + 16) + 152) + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_0_13();
      if (!v2) {
        break;
      }
      if (v1 == 1) {
        return;
      }
    }
    __break(1u);
  }
}

uint64_t Tensor.scalar<A>(as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = *v4;
  uint64_t v16 = *(void *)(*v4 + 16);
  if (*(void *)(*(void *)(v16 + 152) + 16))
  {
    do
    {
      OUTLINED_FUNCTION_0_13();
      if (!v19)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    while (v17 != 1);
    if (v18 == 1) {
      goto LABEL_6;
    }
LABEL_9:
    sub_2576A8730();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v27, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  else
  {
LABEL_6:
    uint64_t v29 = v11;
    uint64_t v30 = v10;
    uint64_t v31 = a4;
    uint64_t v20 = *(void (**)(uint64_t))(a3 + 32);
    uint64_t v21 = OUTLINED_FUNCTION_11_9();
    v20(v21);
    uint64_t v33 = v15;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_10_8();
    uint64_t v23 = v22();
    if (v32 == v15)
    {
      MEMORY[0x270FA5388](v23);
      *(&v29 - 4) = a2;
      *(&v29 - 3) = a3;
      uint64_t v28 = a1;
      swift_retain();
      sub_257613A58((uint64_t)sub_2574BDB04, (uint64_t)(&v29 - 6), a2);
      return swift_release();
    }
    else
    {
      uint64_t v25 = swift_retain_n();
      OUTLINED_FUNCTION_12_10(v25, v16);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v32 = v15;
      uint64_t v26 = OUTLINED_FUNCTION_11_9();
      v20(v26);
      (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v14, *MEMORY[0x263F8E1F8], v30);
      Tensor.cast(to:roundingRule:)();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v14, v30);
      uint64_t v32 = v33;
      Tensor.scalar<A>(as:)(a1, a2, a3);
      return swift_release();
    }
  }
  return result;
}

uint64_t Tensor.scalars<A>(as:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_8_0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *v3;
  uint64_t v15 = *(void (**)(uint64_t))(a3 + 32);
  uint64_t v26 = a1;
  uint64_t v16 = OUTLINED_FUNCTION_24_5();
  v15(v16);
  uint64_t v28 = v14;
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_10_8();
  uint64_t v18 = v17();
  if (v27 == v14)
  {
    MEMORY[0x270FA5388](v18);
    *(&v25 - 4) = a2;
    *(&v25 - 3) = a3;
    *(&v25 - 2) = v14;
    uint64_t v19 = sub_2576A7F50();
    swift_retain();
    sub_257613A58((uint64_t)sub_2574BDB40, (uint64_t)(&v25 - 6), v19);
    swift_release();
    return v28;
  }
  else
  {
    uint64_t v21 = *(void *)(v14 + 16);
    uint64_t v22 = swift_retain_n();
    OUTLINED_FUNCTION_12_10(v22, v21);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v27 = v14;
    uint64_t v23 = OUTLINED_FUNCTION_24_5();
    v15(v23);
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x263F8E1F8], v7);
    Tensor.cast(to:roundingRule:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
    uint64_t v27 = v28;
    uint64_t v20 = Tensor.scalars<A>(as:)(v26, a2, a3);
    swift_release();
  }
  return v20;
}

uint64_t sub_2574BBDA0()
{
  sub_257613A00();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Tensor.place(on:)(uint64_t a1)
{
  char v2 = v1;
  sub_25747B47C(*(void *)(*v1 + 16) + 168, (uint64_t)v28);
  if (v29)
  {
    char v4 = sub_2575B5EF4(v30, *(void *)(a1 + 40));
    sub_2574866D0((uint64_t)v28, (uint64_t)v25);
    sub_2574866D0(a1, (uint64_t)v24);
    if (v4)
    {
      uint64_t v5 = v26;
      uint64_t v6 = v27;
      __swift_project_boxed_opaque_existential_1(v25, v26);
      char v7 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v6 + 24))(v24, v5, v6);
      sub_257486674((uint64_t)v24);
      sub_257486674((uint64_t)v25);
      uint64_t result = sub_257486674((uint64_t)v28);
      if (v7) {
        return result;
      }
    }
    else
    {
      sub_257486674((uint64_t)v24);
      sub_257486674((uint64_t)v25);
      sub_257486674((uint64_t)v28);
    }
  }
  else
  {
    sub_2574BDD68((uint64_t)v28, (uint64_t *)&unk_26A004250);
  }
  uint64_t v9 = *v2;
  uint64_t v10 = *(void *)(*v2 + 16);
  uint64_t v11 = swift_retain_n();
  id v12 = OUTLINED_FUNCTION_12_10(v11, v10);
  uint64_t v14 = v13;
  swift_release();
  if (qword_26A000948 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_26A030AB0;
  uint64_t v16 = *(void *)(v9 + 16);
  v25[0] = *(void *)(v16 + 152);
  v24[0] = *(unsigned char *)(v16 + 160);
  sub_2574866D0(a1, (uint64_t)v28);
  swift_unknownObjectRetain();
  sub_2576A7810();
  sub_257657C50(v25, v24, v28, v15, v12, v14);
  uint64_t v18 = v17;
  sub_2574BDD68((uint64_t)v28, (uint64_t *)&unk_26A004250);
  swift_bridgeObjectRelease();
  uint64_t v19 = type metadata accessor for TensorRepresentation();
  sub_2574866D0(a1, (uint64_t)v28);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = swift_unknownObjectRetain();
  LOBYTE(v25[0]) = 1;
  uint64_t v22 = sub_25761627C(v21, (uint64_t)v28, 0x100000000uLL, v19, ObjectType, v18);
  type metadata accessor for TensorHandle();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  swift_retain();
  sub_2576139A8();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  *char v2 = v23;
  return result;
}

uint64_t sub_2574BC074()
{
  uint64_t v0 = swift_retain();
  OUTLINED_FUNCTION_3_14(v0);
  swift_unknownObjectRetain();
  char v1 = sub_25761402C();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_2574BC0F0()
{
  uint64_t v0 = OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_3_14(v0);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_5_13();
  sub_25761428C();
  return swift_unknownObjectRelease();
}

uint64_t sub_2574BC148(uint64_t a1, uint64_t a2)
{
  return sub_2574BC1F8(a1, a2, (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))sub_257614328);
}

uint64_t sub_2574BC174()
{
  uint64_t v0 = OUTLINED_FUNCTION_18_9();
  OUTLINED_FUNCTION_3_14(v0);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_5_13();
  sub_257614430();
  return swift_unknownObjectRelease();
}

uint64_t sub_2574BC1CC(uint64_t a1, uint64_t a2)
{
  return sub_2574BC1F8(a1, a2, (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))sub_2576144C8);
}

uint64_t sub_2574BC1F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, id, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = swift_retain();
  id v8 = OUTLINED_FUNCTION_3_14(v7);
  uint64_t v10 = v9;
  swift_unknownObjectRetain();
  uint64_t v11 = a3(v3, v8, v10, a1, a2);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t Tensor.resolve(descriptor:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(void *)(*(void *)v1 + 16);
  sub_2576A7810();
  uint64_t v5 = swift_retain_n();
  sub_2576140FC(v5, v4, v2, v3);
  swift_release();
  return swift_unknownObjectRelease();
}

void TensorScalar.init(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(*(void *)(*(void *)(*(void *)a1 + 16) + 152) + 16)) {
    goto LABEL_6;
  }
  do
  {
    OUTLINED_FUNCTION_0_13();
    if (!v8)
    {
      __break(1u);
      return;
    }
  }
  while (v6 != 1);
  if (v7 != 1)
  {
    swift_release();
    uint64_t v9 = 1;
  }
  else
  {
LABEL_6:
    Tensor.scalar<A>(as:)(a2, a2, a3, a4);
    swift_release();
    uint64_t v9 = 0;
  }
  __swift_storeEnumTagSinglePayload(a4, v9, 1, a2);
}

uint64_t sub_2574BC3BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  if (!result) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 152);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(v5 + 32);
    uint64_t v8 = 1;
    uint64_t v9 = *(void *)(v5 + 16);
    while (1)
    {
      uint64_t v10 = *v7++;
      uint64_t v11 = v8 * v10;
      if ((unsigned __int128)(v8 * (__int128)v10) >> 64 != (v8 * v10) >> 63) {
        break;
      }
      uint64_t v8 = v11;
      if (!--v9) {
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v11 = 1;
LABEL_8:
    if ((unsigned __int128)(*(uint64_t *)(*(void *)(a3 - 8) + 72) * (__int128)v11) >> 64 != (*(void *)(*(void *)(a3 - 8) + 72)
                                                                                               * v11) >> 63)
      goto LABEL_16;
    if (!v6)
    {
LABEL_13:
      sub_2576A79A0();
      sub_2576A79B0();
      swift_getWitnessTable();
      uint64_t result = sub_2576A7F60();
      *a4 = result;
      return result;
    }
    id v12 = (uint64_t *)(v5 + 32);
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63) {
        break;
      }
      uint64_t v13 = v15;
      if (!--v6) {
        goto LABEL_13;
      }
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t Tensor.withUnsafeBytes<A>(_:)()
{
  OUTLINED_FUNCTION_23_7();
  swift_retain();
  uint64_t v0 = OUTLINED_FUNCTION_26_5();
  sub_257613A58(v0, v1, v2);
  return swift_release();
}

uint64_t Tensor.withUnsafeMutableBytes<A>(_:)()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_23_7();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v2 = *(void *)(*(void *)v0 + 16);
    uint64_t v3 = swift_retain_n();
    id v4 = sub_2576140FC(v3, v2, 0, 0);
    uint64_t v6 = v5;
    swift_release();
    if (qword_26A000948 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_26A030AB0;
    uint64_t v8 = *(void *)(*(void *)v1 + 16);
    v21[0] = *(void *)(v8 + 152);
    v22[0] = *(unsigned char *)(v8 + 160);
    uint64_t v9 = v8 + 168;
    swift_unknownObjectRetain();
    sub_2576A7810();
    sub_257657C50(v21, v22, v9, v7, v4, v6);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = type metadata accessor for TensorRepresentation();
    sub_25747B47C(*(void *)(*(void *)v1 + 16) + 168, (uint64_t)v21);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = swift_unknownObjectRetain();
    v22[0] = 1;
    uint64_t v15 = sub_25761627C(v14, (uint64_t)v21, 0x100000000uLL, v12, ObjectType, v11);
    type metadata accessor for TensorHandle();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v15;
    swift_retain();
    sub_2576139A8();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    *(void *)uint64_t v1 = v16;
    swift_release();
  }
  swift_retain();
  uint64_t v17 = OUTLINED_FUNCTION_26_5();
  sub_257613A84(v17, v18, v19);
  return swift_release();
}

uint64_t ContiguousArray<A>.resolve(descriptor:)(long long *a1, uint64_t a2)
{
  long long v3 = *a1;
  unint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_7_10((uint64_t)a1, a2);
    swift_retain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      OUTLINED_FUNCTION_17_8();
      swift_retain();
      id v7 = sub_257614628();
      objc_msgSend(v7, sel_lock);

      OUTLINED_FUNCTION_13_10();
      sub_257486824((uint64_t)v7, (uint64_t)v15);
      if (v16)
      {
        if (v16 == 1)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_25748692C(v4);
        }
        else
        {
          sub_257486880((uint64_t)v15);
        }
        id v10 = sub_257614628();
        OUTLINED_FUNCTION_20_9(v10);
        swift_release();
        swift_release_n();
      }
      else
      {
        sub_257486880((uint64_t)v15);
        id v8 = sub_257614628();
        OUTLINED_FUNCTION_20_9(v8);
        swift_release();
        swift_release();

        MEMORY[0x25A2B83B0]();
        OUTLINED_FUNCTION_21_8();
        if (v9) {
          OUTLINED_FUNCTION_19_9();
        }
        sub_2576A7ED0();
        sub_2576A7E20();
      }
    }
    swift_release();
    unint64_t v4 = v17;
    long long v3 = v13;
  }
  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_6_12();
    uint64_t v12 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    long long v3 = v13;
    if (!v12) {
      return swift_bridgeObjectRelease();
    }
  }
  else if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return swift_bridgeObjectRelease();
  }
  if (qword_26A000948 != -1)
  {
    long long v14 = v3;
    swift_once();
    long long v3 = v14;
  }
  *(_OWORD *)uint64_t v15 = v3;
  sub_2576593B0(v4, v15);
  return swift_bridgeObjectRelease();
}

uint64_t Tensor.customMirror.getter()
{
  uint64_t v1 = sub_2576A9150();
  OUTLINED_FUNCTION_0_8();
  uint64_t v3 = v2;
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_8_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v8 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F60);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2576ABB30;
  *(void *)(v13 + 32) = 0x6570616873;
  *(void *)(v13 + 40) = 0xE500000000000000;
  *(void *)(v13 + 72) = &type metadata for TensorShape;
  *(void *)(v13 + 48) = *(void *)(*(void *)(v12 + 16) + 152);
  *(void *)(v13 + 80) = 0x795472616C616373;
  *(void *)(v13 + 88) = 0xEA00000000006570;
  long long v14 = Tensor.scalarType.getter();
  *(void *)(v13 + 120) = swift_getMetatypeMetadata();
  *(void *)(v13 + 96) = v14;
  uint64_t v15 = *MEMORY[0x263F8E808];
  uint64_t v16 = sub_2576A9140();
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(v11, v15, v16);
  __swift_storeEnumTagSinglePayload(v11, 0, 1, v16);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v7, *MEMORY[0x263F8E830], v1);
  swift_retain();
  sub_2576A7810();
  return sub_2576A91A0();
}

unint64_t sub_2574BCB78(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_2574BCB88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x795472616C616373 && a2 == 0xEA00000000006570;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1635017060 && a2 == 0xE400000000000000;
      if (v7 || (sub_2576A8F60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000002576C6D90)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_2576A8F60();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_2574BCD2C(uint64_t result)
{
  return result;
}

uint64_t sub_2574BCD38(uint64_t result)
{
  return result;
}

unint64_t sub_2574BCD40(char a1)
{
  unint64_t result = 0x6570616873;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x795472616C616373;
      break;
    case 2:
      unint64_t result = 1635017060;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2574BCDD4(uint64_t a1)
{
  return sub_2574770C8(a1, *v1);
}

unint64_t sub_2574BCDDC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2574BCB78(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2574BCE08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574BCD38(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_2574BCE34()
{
  return sub_2574BCD40(*v0);
}

uint64_t sub_2574BCE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2574BCB88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2574BCE64()
{
  return sub_2574BCD2C(*v0);
}

unint64_t sub_2574BCE84@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_2574BCB78(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2574BCEAC(uint64_t a1)
{
  unint64_t v2 = sub_2574BDB84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574BCEE8(uint64_t a1)
{
  unint64_t v2 = sub_2574BDB84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2574BCF24(uint64_t a1)
{
  return sub_2574BCF5C(a1, qword_26A001C28);
}

uint64_t sub_2574BCF40(uint64_t a1)
{
  return sub_2574BCF5C(a1, qword_26A001C40);
}

uint64_t sub_2574BCF5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CE0);
  MEMORY[0x270FA5388](v3 - 8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_2576A8A80();
  __swift_allocate_value_buffer(v7, a2);
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  sub_2576A8A60();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_9_13();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, v6, v7);
  }
  return result;
}

uint64_t Tensor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C60);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574BDB84();
  sub_2576A9230();
  v26[0] = *(void *)(*(void *)(v11 + 16) + 152);
  LOBYTE(v23) = 0;
  sub_2574BDBD0();
  OUTLINED_FUNCTION_8_10();
  if (!v2)
  {
    v26[0] = v11;
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_10_8();
    v12();
    LOBYTE(v23) = 1;
    sub_2574BDC1C();
    OUTLINED_FUNCTION_8_10();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v13 = sub_2576A9220();
    if (qword_26A0008D0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_2576A8A80();
    uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_26A001C28);
    sub_2574BB120(v15, v13, &v21);
    swift_bridgeObjectRelease();
    if (v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C88);
      if (swift_dynamicCast())
      {
        if (*((void *)&v24 + 1))
        {
          sub_257479260(&v23, (uint64_t)v26);
          uint64_t v16 = v27;
          uint64_t v17 = v28;
          __swift_project_boxed_opaque_existential_1(v26, v27);
          *(void *)&long long v23 = v11;
          uint64_t v18 = sub_2576A8DC0();
          (*(void (**)(long long *, uint64_t, uint64_t, uint64_t))(v17 + 8))(&v23, v18, v16, v17);
          swift_bridgeObjectRelease();
          LOBYTE(v23) = 3;
          sub_2576A8E00();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
          return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
        }
      }
      else
      {
        uint64_t v25 = 0;
        long long v23 = 0u;
        long long v24 = 0u;
      }
    }
    else
    {
      sub_2574BDD68((uint64_t)&v21, &qword_26A001378);
      long long v23 = 0u;
      long long v24 = 0u;
      uint64_t v25 = 0;
    }
    uint64_t v19 = sub_2574BDD68((uint64_t)&v23, &qword_26A001C80);
    MEMORY[0x270FA5388](v19);
    *((void *)&v21 - 2) = v10;
    swift_retain();
    sub_2574BC0F0();
    swift_release();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
}

uint64_t sub_2574BD3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2576A7110();
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    (*(void (**)(char *, void))(v6 + 104))(v8, *MEMORY[0x263F06F00]);
    uint64_t v9 = MEMORY[0x25A2B7710](a1, a2 - a1, v8);
    unint64_t v11 = v10;
    v12[0] = v9;
    v12[1] = v10;
    char v13 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C60);
    sub_2574BE100();
    sub_2576A8E40();
    return sub_25747F154(v9, v11);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *Tensor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C90);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574BDB84();
  sub_2576A91F0();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_2574BDC84();
  OUTLINED_FUNCTION_4_14();
  uint64_t v8 = v42;
  sub_2574BDCD0();
  OUTLINED_FUNCTION_4_14();
  int v9 = v42;
  LOBYTE(v48[0]) = 2;
  sub_2574BDD1C();
  sub_2576A8D00();
  if (*((void *)&v42 + 1) >> 60 != 15)
  {
    *(void *)&long long v46 = v42;
    LOBYTE(v51) = v42;
    OUTLINED_FUNCTION_22_8();
    Tensor.init(shape:data:scalarType:on:)((uint64_t *)&v46, v22, v23, (unsigned __int8 *)&v51, (uint64_t)&v42);
    uint64_t v24 = OUTLINED_FUNCTION_1_22();
    v25(v24);
    uint64_t v26 = v48[0];
    goto LABEL_15;
  }
  LOBYTE(v42) = 3;
  uint64_t v38 = sub_2576A8D10();
  int v39 = v9;
  uint64_t v41 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = sub_2576A91E0();
  if (qword_26A0008D8 != -1) {
    goto LABEL_26;
  }
  while (1)
  {
    uint64_t v13 = sub_2576A8A80();
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_26A001C40);
    sub_2574BB120(v14, v12, &v46);
    swift_bridgeObjectRelease();
    if (!v47)
    {
      sub_2574BDD68((uint64_t)&v46, &qword_26A001378);
      long long v42 = 0u;
      long long v43 = 0u;
      uint64_t v44 = 0;
LABEL_18:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2574BDD68((uint64_t)&v42, &qword_26A001CB0);
      sub_2576A8800();
      swift_allocError();
      uint64_t v28 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CB8);
      uint64_t *v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CC0);
      sub_2576A8CE0();
      *(void *)&long long v42 = 0;
      *((void *)&v42 + 1) = 0xE000000000000000;
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576A8A70();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A87F0();
      OUTLINED_FUNCTION_9_13();
      (*(void (**)(uint64_t *))(v29 + 104))(v28);
      swift_willThrow();
      uint64_t v6 = OUTLINED_FUNCTION_1_22();
      v7(v6);
      return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CC0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v44 = 0;
      long long v42 = 0u;
      long long v43 = 0u;
      goto LABEL_18;
    }
    if (!*((void *)&v43 + 1)) {
      goto LABEL_18;
    }
    sub_257479260(&v42, (uint64_t)v48);
    uint64_t v12 = v49;
    uint64_t v15 = v50;
    uint64_t result = __swift_project_boxed_opaque_existential_1(v48, v49);
    uint64_t v16 = *(void *)(v8 + 16);
    if (!v16) {
      break;
    }
    uint64_t v17 = (uint64_t *)(v8 + 32);
    uint64_t v18 = 1;
    int v19 = v39;
    while (1)
    {
      uint64_t v20 = *v17++;
      uint64_t v21 = v18 * v20;
      if ((unsigned __int128)(v18 * (__int128)v20) >> 64 != (v18 * v20) >> 63) {
        break;
      }
      uint64_t v18 = v21;
      if (!--v16) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_26:
    swift_once();
  }
  uint64_t v21 = 1;
  int v19 = v39;
LABEL_20:
  uint64_t v37 = v15;
  if ((v19 - 1) > 0xA) {
    uint64_t v30 = 1;
  }
  else {
    uint64_t v30 = qword_2576AF728[(char)(v19 - 1)];
  }
  uint64_t v31 = v30 * v21;
  if ((unsigned __int128)(v30 * (__int128)v21) >> 64 == (v30 * v21) >> 63)
  {
    sub_2576A8CE0();
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 8))(v38, v41, v31);
    unint64_t v34 = v33;
    uint64_t v40 = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v8;
    unsigned __int8 v45 = v39;
    OUTLINED_FUNCTION_22_8();
    Tensor.init(shape:data:scalarType:on:)(&v51, v40, v34, &v45, (uint64_t)&v42);
    uint64_t v35 = OUTLINED_FUNCTION_1_22();
    v36(v35);
    uint64_t v26 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
LABEL_15:
    *a2 = v26;
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_2574BDAD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Tensor.init(from:)(a1, a2);
}

uint64_t sub_2574BDAEC(void *a1)
{
  return Tensor.encode(to:)(a1);
}

uint64_t sub_2574BDB04()
{
  return sub_2576A7D60();
}

uint64_t sub_2574BDB40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2574BC3BC(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for TensorHandle()
{
  return self;
}

unint64_t sub_2574BDB84()
{
  unint64_t result = qword_26A001C68;
  if (!qword_26A001C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001C68);
  }
  return result;
}

unint64_t sub_2574BDBD0()
{
  unint64_t result = qword_26A001C70;
  if (!qword_26A001C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001C70);
  }
  return result;
}

unint64_t sub_2574BDC1C()
{
  unint64_t result = qword_26A001C78;
  if (!qword_26A001C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001C78);
  }
  return result;
}

uint64_t sub_2574BDC68(uint64_t a1, uint64_t a2)
{
  return sub_2574BD3C0(a1, a2);
}

unint64_t sub_2574BDC84()
{
  unint64_t result = qword_26A001C98;
  if (!qword_26A001C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001C98);
  }
  return result;
}

unint64_t sub_2574BDCD0()
{
  unint64_t result = qword_26A001CA0;
  if (!qword_26A001CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CA0);
  }
  return result;
}

unint64_t sub_2574BDD1C()
{
  unint64_t result = qword_26A001CA8;
  if (!qword_26A001CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CA8);
  }
  return result;
}

uint64_t sub_2574BDD68(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for Tensor()
{
  return &type metadata for Tensor;
}

uint64_t dispatch thunk of CustomTensorDataEncodingContainer.encode(_:atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of CustomTensorDataDecodingContainer.decode(forKey:byteCount:atPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t getEnumTagSinglePayload for Tensor.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for Tensor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    void *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574BDF74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tensor.CodingKeys()
{
  return &type metadata for Tensor.CodingKeys;
}

unint64_t sub_2574BDFB0()
{
  unint64_t result = qword_26A001CC8;
  if (!qword_26A001CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CC8);
  }
  return result;
}

unint64_t sub_2574BE000()
{
  unint64_t result = qword_26A001CD0;
  if (!qword_26A001CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CD0);
  }
  return result;
}

unint64_t sub_2574BE050()
{
  unint64_t result = qword_26A001CD8;
  if (!qword_26A001CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CD8);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_2574BE100()
{
  unint64_t result = qword_26A001CE8;
  if (!qword_26A001CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_22()
{
  return v0;
}

id OUTLINED_FUNCTION_3_14(uint64_t a1)
{
  return sub_2576140FC(a1, v1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_5_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_7_10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  return v0;
}

id OUTLINED_FUNCTION_12_10(uint64_t a1, uint64_t a2)
{
  return sub_2576140FC(a1, a2, 0, 0);
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_15_10()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_18_9()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  return sub_2576A7E70();
}

id OUTLINED_FUNCTION_20_9(void *a1)
{
  return [a1 (SEL)(v1 + 3181)];
}

double OUTLINED_FUNCTION_22_8()
{
  *(_DWORD *)(v0 - 176) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 208) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  *(_OWORD *)(v0 - 224) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  return v0;
}

uint64_t sub_2574BE3CC(uint64_t a1)
{
  void (*v11)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void v24[4];
  uint64_t v25;

  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = sub_2575CA350();
  uint64_t v6 = sub_2574BAF20(v5, a1);
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    v24[2] = v8;
    void v24[3] = v9;
    uint64_t v11 = *(void (**)(uint64_t *__return_ptr, void *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CF8);
    v11(&v25, sub_2574BED88, v24, v12, ObjectType, v9);
    uint64_t v13 = v25;
    LOBYTE(v25) = *(unsigned char *)(v2 + 144);
    uint64_t v14 = sub_25767AC64();
    sub_2574BE6F8((uint64_t)v14, v2, v13, (uint64_t)v14, v15, (uint64_t)&v25);
    swift_bridgeObjectRelease();
    uint64_t v16 = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_2576ABB10;
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v18 = swift_retain_n();
    int v19 = sub_2576140FC(v18, v17, 0, 0);
    uint64_t v21 = v20;
    swift_release();
    *(void *)(v4 + 32) = v19;
    *(void *)(v4 + 40) = v21;
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v22 = xmmword_2576AF780;
    *(unsigned char *)(v22 + 16) = 2;
    swift_willThrow();
  }
  return v4;
}

void *sub_2574BE5B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  void (*v9)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v10;
  void *result;
  unint64_t v12;
  unint64_t v13;
  char v14;

  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 8);
  v9(&v12, ObjectType, a3);
  if (v12 != 2)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0xE000000000000000;
    sub_2576A8730();
    swift_bridgeObjectRelease();
    v9(&v12, ObjectType, a3);
    uint64_t v12 = 0xD00000000000002CLL;
    uint64_t v13 = 0x80000002576C6E70;
    uint64_t v14 = 9;
    sub_25746BE6C();
  }
  if (a1) {
    unint64_t v10 = (a2 - a1) / 4;
  }
  else {
    unint64_t v10 = 0;
  }
  double result = sub_257694B38(a1, v10);
  *a4 = result;
  return result;
}

uint64_t sub_2574BE6F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = a5;
  uint64_t v28 = a3;
  uint64_t v29 = a6;
  uint64_t v26 = sub_2576A84C0();
  uint64_t v25 = *(void *)(v26 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v26);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v11);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  int v19 = (char *)&v24 - v18;
  uint64_t v27 = (uint64_t *)(a2 + 56);
  sub_25746B3D0(a2 + 56, (uint64_t)&v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
    goto LABEL_6;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, a4);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v20(v19, v13, a4);
  sub_25746B3D0(a2 + 96, (uint64_t)&v34);
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, a4);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v26);
LABEL_6:
    *(void *)&long long v34 = 0;
    *((void *)&v34 + 1) = 0xE000000000000000;
    sub_2576A8730();
    long long v33 = v34;
    sub_2576A7B00();
    swift_getMetatypeMetadata();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_25746B3D0((uint64_t)v27, (uint64_t)&v34);
    __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
    swift_getDynamicType();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    long long v34 = v33;
    char v38 = 9;
    sub_25746BE6C();
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, a4);
  v20(v17, v10, a4);
  uint64_t v27 = &v24;
  *(void *)&long long v33 = *(void *)(a2 + 136);
  *(void *)&long long v34 = v28;
  MEMORY[0x270FA5388](v33);
  uint64_t v21 = v31;
  *(&v24 - 6) = a4;
  *(&v24 - 5) = v21;
  *(&v24 - 4) = a2;
  *(&v24 - 3) = (uint64_t)v19;
  *(&v24 - 2) = (uint64_t)v17;
  sub_2576A7810();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CF8);
  sub_2576A7F50();
  sub_2574BEDC8();
  swift_getWitnessTable();
  uint64_t v32 = sub_2576A7D00();
  int v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v34 = 0u;
  swift_getWitnessTable();
  Tensor.init<A>(shape:scalars:scalarType:on:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v17, a4);
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, a4);
}

uint64_t sub_2574BEC10@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 48);
  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v20 = v5;
    MEMORY[0x270FA5388](result);
    v15[2] = v7;
    uint64_t v15[3] = v8;
    int v16 = v9;
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
    unint64_t v13 = sub_2574BEE8C();
    double result = sub_257495BE0((void (*)(char *, uint64_t))sub_2574BEE1C, (uint64_t)v15, v12, a3, MEMORY[0x263F8E628], v13, MEMORY[0x263F8E658], v14);
    *a4 = result;
  }
  return result;
}

uint64_t sub_2574BECF8(uint64_t a1)
{
  return sub_2574BE3CC(a1);
}

unint64_t sub_2574BED10(uint64_t a1)
{
  unint64_t result = sub_2574BED38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2574BED38()
{
  unint64_t result = qword_26A001CF0;
  if (!qword_26A001CF0)
  {
    type metadata accessor for OneHotOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001CF0);
  }
  return result;
}

void *sub_2574BED88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_2574BE5B0(a1, a2, *(void *)(v3 + 24), a3);
}

uint64_t sub_2574BEDA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2574BEC10(a1, *(void *)(v2 + 32), *(void *)(v2 + 16), a2);
}

unint64_t sub_2574BEDC8()
{
  unint64_t result = qword_26A001D00;
  if (!qword_26A001D00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001D00);
  }
  return result;
}

uint64_t sub_2574BEE1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (*a1 == *(_DWORD *)(v2 + 32)) {
    uint64_t v3 = (void *)(v2 + 40);
  }
  else {
    uint64_t v3 = (void *)(v2 + 48);
  }
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, *v3);
}

unint64_t sub_2574BEE8C()
{
  unint64_t result = qword_26A001D10;
  if (!qword_26A001D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001D08);
    sub_2574BEF08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001D10);
  }
  return result;
}

unint64_t sub_2574BEF08()
{
  unint64_t result = qword_26A001D18;
  if (!qword_26A001D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001D18);
  }
  return result;
}

uint64_t sub_2574BEF54(uint64_t a1)
{
  void (*v50)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 *v65;
  __n128 *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 *v69;
  __n128 *v70;
  void (*v71)(void);
  char v72;
  void (*v73)(void, void);
  uint64_t v74;
  void (*v75)(void);
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  void (*v99)(void);
  void (*v100)(void);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  int v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(void, void);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _DWORD *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131[3];
  char v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  char v137;
  char v138;
  uint64_t v139;
  uint64_t v140;

  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_6_2();
  unint64_t v117 = v5;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_7_11();
  uint64_t v116 = v7;
  OUTLINED_FUNCTION_13_1();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v104 - v10;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_10_9();
  char v118 = v12;
  uint64_t v119 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v121 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_6_2();
  unint64_t v120 = v15;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_7_11();
  uint64_t v124 = v17;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_10_9();
  uint64_t v123 = v19;
  uint64_t v20 = sub_2576A6AF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v127 = v21;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_10_9();
  uint64_t v126 = v26;
  uint64_t v27 = sub_2576A6A10();
  OUTLINED_FUNCTION_0_8();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  unint64_t v125 = (_DWORD *)((char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = *(void *)(v1 + 40);
  uint64_t v33 = sub_2575CA350();
  uint64_t v34 = sub_2574BAF20(v33, a1);
  uint64_t v130 = v35;
  if (!v34) {
    goto LABEL_6;
  }
  unint64_t v36 = v34;
  uint64_t v111 = (void (*)(void, void))v25;
  uint64_t v32 = *(void *)(v2 + 48);
  uint64_t v37 = sub_2575CA350();
  uint64_t v122 = sub_2574BAF20(v37, a1);
  if (!v122)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_9_14(v44, 0xD000000000000015);
    return v32;
  }
  uint64_t v39 = v38;
  *unint64_t v125 = 0;
  OUTLINED_FUNCTION_12_11();
  v40();
  uint64_t v41 = *(void *)(v2 + 152);
  int v42 = *(unsigned __int8 *)(v2 + 160);
  uint64_t v110 = v27;
  uint64_t v109 = v29;
  if (v42 == 2)
  {
    char v108 = *(uint64_t **)(v127 + 104);
    OUTLINED_FUNCTION_12_11();
    v43();
  }
  else
  {
    unsigned __int8 v45 = *(uint64_t **)(v127 + 104);
    char v108 = v45;
    if (v42) {
      long long v46 = (unsigned int *)MEMORY[0x263F8CA68];
    }
    else {
      long long v46 = (unsigned int *)MEMORY[0x263F8CA60];
    }
    ((void (*)(uint64_t, void, uint64_t))v45)(v126, *v46, v20);
  }
  uint64_t v47 = *(void *)(v2 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v49 = v130;
  uint64_t v50 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v130 + 8);
  uint64_t v114 = v47;
  sub_2576A7810();
  uint64_t v129 = ObjectType;
  v50(v131, ObjectType, v49);
  if (LOBYTE(v131[0]) > 0xCu || (OUTLINED_FUNCTION_26_6(), v51))
  {
    char v97 = v125;
    uint64_t v32 = sub_25758AEA0();
    uint64_t v102 = v101;
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *(void *)uint64_t v103 = v32;
    *(void *)(v103 + 8) = v102;
    *(unsigned char *)(v103 + 16) = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v126, v20);
  }
  else
  {
    uint64_t v113 = v39;
    uint64_t v105 = v11;
    int64_t v52 = v129;
    v50(v131, v129, v49);
    char v107 = LOBYTE(v131[0]);
    uint64_t v53 = v49;
    unint64_t v54 = v49;
    int64_t v55 = v36;
    unint64_t v56 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v53 + 16);
    v56(v131, v52, v54);
    uint64_t v139 = v131[0];
    unint64_t v106 = TensorShape.subscript.getter(v41);
    swift_bridgeObjectRelease();
    unint64_t v57 = sub_257611DF8();
    uint64_t v128 = v55;
    uint64_t v112 = v20;
    if (v57 <= 1)
    {
      char v61 = 1;
    }
    else
    {
      unint64_t v58 = sub_257611DF8();
      if (v58 < 0) {
        goto LABEL_43;
      }
      unint64_t v60 = v58;
      unint64_t v59 = (unint64_t)&v138;
      if (v58)
      {
        int64_t v55 = 0;
        char v61 = 1;
        while (v60 != v55)
        {
          if (v41 != v55)
          {
            v56(&v139, v129, v130);
            unint64_t v59 = *(void *)(v139 + 16);
            if (v55 >= v59) {
              goto LABEL_44;
            }
            uint64_t v62 = *(void *)(v139 + 8 * v55 + 32);
            swift_bridgeObjectRelease();
            unint64_t v59 = v61 * v62;
            if ((unsigned __int128)(v61 * (__int128)v62) >> 64 != (v61 * v62) >> 63) {
              goto LABEL_42;
            }
            v61 *= v62;
          }
          if (v60 == ++v55) {
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        v131[1] = 0;
        v131[2] = 0;
        v131[0] = v55;
        uint64_t v132 = -1;
        uint64_t v134 = 0;
        uint64_t v135 = 0;
        uint64_t v133 = v59;
        uint64_t v136 = -1;
        int v137 = 4;
        OUTLINED_FUNCTION_6_10();
      }
      char v61 = 1;
    }
LABEL_26:
    uint64_t v64 = v129;
    uint64_t v63 = v130;
    if (sub_257611DF8() < 2)
    {
      v56(v131, v64, v63);
      uint64_t v66 = (__n128 *)v131[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v65 = (__n128 *)OUTLINED_FUNCTION_29_2();
      uint64_t v66 = OUTLINED_FUNCTION_27_5(v65, (__n128)xmmword_2576ABB30);
    }
    uint64_t v67 = v127;
    uint64_t v68 = v124;
    v131[0] = (uint64_t)v66;
    OUTLINED_FUNCTION_8_1(v131, v123);
    swift_getObjectType();
    if (sub_257611DF8() < 2)
    {
      OUTLINED_FUNCTION_11_10();
      v71();
      char v70 = (__n128 *)v131[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v69 = (__n128 *)OUTLINED_FUNCTION_29_2();
      char v70 = OUTLINED_FUNCTION_27_5(v69, (__n128)xmmword_2576ABB30);
    }
    uint64_t v72 = v107;
    v131[0] = (uint64_t)v70;
    OUTLINED_FUNCTION_8_1(v131, v68);
    uint64_t v73 = v111;
    char v74 = v112;
    OUTLINED_FUNCTION_12_11();
    v75();
    uint64_t v76 = sub_2576A6AE0();
    uint64_t v111 = *(void (**)(void, void))(v67 + 8);
    v111(v73, v74);
    uint64_t v127 = v67 + 8;
    if (v76)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      id v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_2576ABB10;
      *(void *)(v77 + 32) = v61;
    }
    else
    {
      id v77 = MEMORY[0x263F8EE78];
    }
    id v78 = v119;
    uint64_t v79 = v121;
    uint64_t v80 = v114;
    uint64_t v81 = v115;
    v131[0] = v77;
    OUTLINED_FUNCTION_8_1(v131, v120);
    type metadata accessor for NativeTensorStorage();
    v131[0] = v80;
    LOBYTE(v139) = v72;
    sub_2576A7810();
    sub_25754DDC0(v131, (uint64_t)&v139, 0);
    uint64_t v115 = v82;
    uint64_t v119 = v81;
    char v83 = *(void (**)(void))(v79 + 16);
    unint64_t v84 = v118;
    OUTLINED_FUNCTION_19_10();
    v83();
    OUTLINED_FUNCTION_18_10(v84);
    char v85 = (uint64_t)v105;
    OUTLINED_FUNCTION_19_10();
    v83();
    OUTLINED_FUNCTION_18_10(v85);
    uint64_t v86 = v116;
    OUTLINED_FUNCTION_19_10();
    v83();
    OUTLINED_FUNCTION_18_10(v86);
    uint64_t v87 = v117;
    uint64_t v88 = __swift_storeEnumTagSinglePayload(v117, 1, 1, v78);
    char v108 = &v104;
    uint64_t v89 = MEMORY[0x270FA5388](v88);
    uint64_t v90 = v126;
    *(&v104 - 4) = (uint64_t)v125;
    *(&v104 - 3) = v90;
    *(&v104 - 2) = v61;
    MEMORY[0x270FA5388](v89);
    uint64_t v91 = v113;
    *(&v104 - 12) = v122;
    *(&v104 - 11) = v91;
    uint64_t v92 = v85;
    uint64_t v93 = v115;
    *(&v104 - 10) = v85;
    *(&v104 - 9) = v93;
    *(&v104 - 8) = (uint64_t)&off_270667760;
    *(&v104 - 7) = v86;
    *(&v104 - 6) = 0;
    *(&v104 - 5) = 0;
    *(&v104 - 4) = v87;
    *(&v104 - 3) = (uint64_t)sub_2574C1420;
    *(&v104 - 2) = v94;
    char v95 = v93;
    swift_retain();
    uint64_t v96 = v119;
    sub_257648508((uint64_t)sub_2574C1440, (uint64_t)(&v104 - 14), MEMORY[0x263F8EE60] + 8, (uint64_t)&v140);
    if (!v96)
    {
      swift_release();
      OUTLINED_FUNCTION_29_5();
      sub_257480BC8(v86);
      sub_257480BC8(v92);
      sub_257480BC8(v84);
      uint64_t v99 = *(void (**)(void))(v121 + 8);
      OUTLINED_FUNCTION_4_15();
      v99();
      OUTLINED_FUNCTION_4_15();
      v99();
      OUTLINED_FUNCTION_4_15();
      v99();
      swift_bridgeObjectRelease();
      v111(v90, v112);
      OUTLINED_FUNCTION_14_0();
      v100();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v32 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v32 + 16) = xmmword_2576ABB10;
      *(void *)(v32 + 32) = v95;
      *(void *)(v32 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v32;
    }
    swift_release_n();
    OUTLINED_FUNCTION_29_5();
    sub_257480BC8(v86);
    sub_257480BC8(v92);
    sub_257480BC8(v84);
    uint64_t v32 = *(void *)(v121 + 8);
    OUTLINED_FUNCTION_4_15();
    ((void (*)(void))v32)();
    OUTLINED_FUNCTION_4_15();
    ((void (*)(void))v32)();
    OUTLINED_FUNCTION_4_15();
    ((void (*)(void))v32)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    char v97 = v125;
    v111(v126, v112);
  }
  (*(void (**)(_DWORD *, uint64_t))(v109 + 8))(v97, v110);
  return v32;
}

uint64_t sub_2574BFA94(uint64_t a1)
{
  return sub_2574BEF54(a1);
}

uint64_t sub_2574BFAAC(uint64_t a1)
{
  void (*v121)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _DWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149[3];
  char v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  char v155;
  uint64_t v156;

  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_6_2();
  uint64_t v130 = v5;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_7_11();
  uint64_t v131 = v7;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_7_11();
  uint64_t v136 = v9;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_7_11();
  int v137 = v11;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_10_9();
  uint64_t v135 = v13;
  uint64_t v134 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v140 = v14;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_6_2();
  uint64_t v133 = v16;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_7_11();
  unint64_t v143 = v18;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_7_11();
  unint64_t v144 = v20;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_10_9();
  unint64_t v146 = v22;
  unint64_t v23 = sub_2576A6AF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v145 = v24;
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_6_2();
  uint64_t v139 = v26;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_10_9();
  uint64_t v147 = v28;
  uint64_t v29 = sub_2576A6A10();
  OUTLINED_FUNCTION_0_8();
  uint64_t v31 = v30;
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_6_2();
  uint64_t v132 = v33;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v34);
  unint64_t v36 = (char *)v111 - v35;
  uint64_t v37 = sub_2575CA350();
  uint64_t v38 = sub_2574BAF20(v37, a1);
  if (!v38) {
    goto LABEL_8;
  }
  unint64_t v125 = v39;
  char v138 = v38;
  uint64_t v128 = v36;
  uint64_t v40 = sub_2575CA350();
  uint64_t v41 = sub_2574BAF20(v40, a1);
  uint64_t v148 = v42;
  if (!v41)
  {
LABEL_7:
    swift_unknownObjectRelease();
LABEL_8:
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_9_14(v50, 0xD00000000000001ALL);
    return v2;
  }
  uint64_t v43 = v41;
  uint64_t v44 = sub_2575CA350();
  uint64_t v45 = sub_2574BAF20(v44, a1);
  uint64_t v124 = v46;
  uint64_t v127 = v45;
  if (!v45)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  *uint64_t v128 = 0;
  uint64_t v47 = *(void (**)(void))(v31 + 104);
  int v116 = *MEMORY[0x263F8CA28];
  uint64_t v115 = v47;
  v47();
  uint64_t v48 = *(void *)(v1 + 136);
  uint64_t v117 = v31 + 104;
  uint64_t v49 = *(void (**)(void))(v145 + 104);
  OUTLINED_FUNCTION_12_11();
  v49();
  uint64_t v118 = v31;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v52 = v148;
  uint64_t v121 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v148 + 8);
  uint64_t v122 = v148 + 8;
  v121(v149, ObjectType, v148);
  if (LOBYTE(v149[0]) > 0xCu || (OUTLINED_FUNCTION_26_6(), v53))
  {
    uint64_t v99 = v128;
    uint64_t v2 = sub_25758AEA0();
    uint64_t v109 = v108;
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *(void *)uint64_t v110 = v2;
    *(void *)(v110 + 8) = v109;
    *(unsigned char *)(v110 + 16) = 3;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, unint64_t))(v145 + 8))(v147, v23);
  }
  else
  {
    uint64_t v113 = (uint64_t)v49;
    uint64_t v54 = OUTLINED_FUNCTION_24_6();
    ((void (*)(uint64_t))v121)(v54);
    int v55 = LOBYTE(v149[0]);
    unint64_t v141 = *(void *)(v52 + 16);
    uint64_t v142 = v52 + 16;
    OUTLINED_FUNCTION_11_10();
    v56();
    unsigned int v156 = v149[0];
    uint64_t v114 = (void (*)(void, void))TensorShape.subscript.getter(v48);
    swift_bridgeObjectRelease();
    uint64_t v57 = sub_257611DF8();
    uint64_t v126 = v23;
    uint64_t v123 = v29;
    if (v57 > 1)
    {
      uint64_t v58 = sub_257611DF8();
      if (v58 < 0) {
        goto LABEL_43;
      }
      uint64_t v60 = v58;
      if (v58)
      {
        unint64_t v23 = 0;
        uint64_t v61 = 1;
        while (v60 != v23)
        {
          if (v48 != v23)
          {
            OUTLINED_FUNCTION_11_10();
            v62();
            unint64_t v59 = *(void *)(v156 + 16);
            if (v23 >= v59) {
              goto LABEL_44;
            }
            uint64_t v63 = *(void *)(v156 + 8 * v23 + 32);
            swift_bridgeObjectRelease();
            unint64_t v59 = v61 * v63;
            if ((unsigned __int128)(v61 * (__int128)v63) >> 64 != (v61 * v63) >> 63) {
              goto LABEL_42;
            }
            v61 *= v63;
          }
          if (v60 == ++v23) {
            goto LABEL_23;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        v149[1] = 0;
        v149[2] = 0;
        v149[0] = v23;
        uint64_t v150 = -1;
        uint64_t v152 = 0;
        uint64_t v153 = 0;
        uint64_t v151 = v59;
        uint64_t v154 = -1;
        uint64_t v155 = 4;
        OUTLINED_FUNCTION_6_10();
      }
    }
    uint64_t v61 = 1;
LABEL_23:
    if (sub_257611DF8() < 2)
    {
      OUTLINED_FUNCTION_24_6();
      OUTLINED_FUNCTION_11_10();
      v66();
      uint64_t v64 = v149[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v64 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v64 + 16) = xmmword_2576ABB30;
      uint64_t v65 = v114;
      *(void *)(v64 + 32) = v61;
      *(void *)(v64 + 40) = v65;
    }
    int v112 = v55;
    uint64_t v120 = v43;
    v149[0] = v64;
    OUTLINED_FUNCTION_8_1(v149, v146);
    swift_getObjectType();
    if (sub_257611DF8() < 2)
    {
      OUTLINED_FUNCTION_11_10();
      v69();
      uint64_t v67 = v149[0];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v67 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v67 + 16) = xmmword_2576ABB30;
      uint64_t v68 = v114;
      *(void *)(v67 + 32) = v61;
      *(void *)(v67 + 40) = v68;
    }
    uint64_t v70 = v140;
    v149[0] = v67;
    OUTLINED_FUNCTION_8_1(v149, v144);
    uint64_t v71 = v145;
    OUTLINED_FUNCTION_12_11();
    v72();
    char v73 = sub_2576A6AE0();
    uint64_t v74 = v71 + 8;
    uint64_t v75 = *(void (**)(void))(v71 + 8);
    v111[0] = v74;
    v111[1] = v74 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    OUTLINED_FUNCTION_14_0();
    v75();
    uint64_t v119 = ObjectType;
    uint64_t v114 = (void (*)(void, void))v75;
    if (v73)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = xmmword_2576ABB10;
      *(void *)(v76 + 32) = v61;
    }
    else
    {
      uint64_t v76 = MEMORY[0x263F8EE78];
    }
    v149[0] = v76;
    OUTLINED_FUNCTION_8_1(v149, v143);
    uint64_t v113 = sub_2576A6E30();
    char v77 = v112;
    LOBYTE(v149[0]) = v112;
    sub_25758B4C0();
    id v78 = *(void (**)(void))(v70 + 16);
    uint64_t v79 = v134;
    OUTLINED_FUNCTION_3_15();
    v78();
    sub_2576A83F0();
    LOBYTE(v149[0]) = v77;
    sub_25758B4C0();
    OUTLINED_FUNCTION_3_15();
    v78();
    sub_2576A83F0();
    *uint64_t v132 = 0;
    OUTLINED_FUNCTION_12_11();
    v80();
    unint64_t v81 = v126;
    (*(void (**)(void *, uint64_t, unint64_t))(v145 + 16))(v139, v147, v126);
    sub_2576A8470();
    sub_2576A83D0();
    uint64_t v145 = sub_2576A6E20();
    if (v145)
    {
      type metadata accessor for NativeTensorStorage();
      uint64_t v82 = v119;
      uint64_t v83 = v148;
      OUTLINED_FUNCTION_11_10();
      v84();
      v121(&v156, v82, v83);
      uint64_t v85 = v129;
      sub_25754DDC0(v149, (uint64_t)&v156, 0);
      unint64_t v141 = v85;
      uint64_t v142 = v86;
      uint64_t v87 = v135;
      OUTLINED_FUNCTION_3_15();
      v78();
      OUTLINED_FUNCTION_8_11(v87);
      uint64_t v88 = v137;
      OUTLINED_FUNCTION_3_15();
      v78();
      OUTLINED_FUNCTION_8_11(v88);
      uint64_t v89 = v136;
      OUTLINED_FUNCTION_3_15();
      v78();
      OUTLINED_FUNCTION_8_11(v89);
      uint64_t v90 = v131;
      OUTLINED_FUNCTION_3_15();
      v78();
      OUTLINED_FUNCTION_8_11(v90);
      uint64_t v91 = v130;
      uint64_t v92 = __swift_storeEnumTagSinglePayload(v130, 1, 1, v79);
      uint64_t v139 = v111;
      uint64_t v93 = MEMORY[0x270FA5388](v92);
      v111[-2] = v145;
      v111[-1] = v61;
      MEMORY[0x270FA5388](v93);
      uint64_t v94 = v124;
      v111[-14] = v127;
      v111[-13] = v94;
      uint64_t v95 = v138;
      v111[-12] = v88;
      v111[-11] = v95;
      v111[-10] = v125;
      v111[-9] = v89;
      v111[-8] = v142;
      v111[-7] = &off_270667760;
      v111[-6] = v90;
      v111[-5] = 0;
      v111[-4] = 0;
      v111[-3] = v91;
      v111[-2] = sub_2574C1550;
      v111[-1] = v96;
      swift_retain();
      uint64_t v97 = v135;
      uint64_t v98 = v141;
      sub_257648508((uint64_t)sub_2574C156C, (uint64_t)&v111[-16], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
      if (!v98)
      {
        swift_release();
        sub_257480BC8(v91);
        sub_257480BC8(v90);
        sub_257480BC8(v136);
        sub_257480BC8(v137);
        sub_257480BC8(v97);
        uint64_t v105 = *(void (**)(void))(v140 + 8);
        OUTLINED_FUNCTION_22_9();
        v105();
        OUTLINED_FUNCTION_22_9();
        v105();
        OUTLINED_FUNCTION_22_9();
        v105();
        swift_release();
        OUTLINED_FUNCTION_14_0();
        v106();
        OUTLINED_FUNCTION_14_0();
        v107();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
        uint64_t v2 = OUTLINED_FUNCTION_29_2();
        *(_OWORD *)(v2 + 16) = xmmword_2576ABB10;
        *(void *)(v2 + 32) = v142;
        *(void *)(v2 + 40) = &off_270667760;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return v2;
      }
      swift_release_n();
      sub_257480BC8(v91);
      sub_257480BC8(v90);
      sub_257480BC8(v136);
      sub_257480BC8(v137);
      sub_257480BC8(v97);
      uint64_t v2 = *(void *)(v140 + 8);
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
      unint64_t v81 = v126;
      uint64_t v29 = v123;
      uint64_t v99 = v128;
    }
    else
    {
      uint64_t v99 = v128;
      uint64_t v100 = sub_25758AEA0();
      uint64_t v102 = v101;
      sub_257480520();
      OUTLINED_FUNCTION_33_0();
      *(void *)uint64_t v103 = v100;
      *(void *)(v103 + 8) = v102;
      *(unsigned char *)(v103 + 16) = 4;
      swift_willThrow();
      uint64_t v2 = *(void *)(v140 + 8);
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      OUTLINED_FUNCTION_5_14();
      ((void (*)(void))v2)();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v29 = v123;
    }
    v114(v147, v81);
  }
  (*(void (**)(_DWORD *, uint64_t))(v118 + 8))(v99, v29);
  return v2;
}

uint64_t sub_2574C0720(uint64_t a1)
{
  return sub_2574BFAAC(a1);
}

uint64_t sub_2574C0738(uint64_t a1)
{
  uint64_t result = sub_2574C16C8(&qword_26A001D20, (void (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C0790(uint64_t a1)
{
  uint64_t result = sub_2574C16C8(&qword_26A001D28, (void (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C07E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int64_t a7)
{
  int64_t v29 = a7;
  uint64_t v31 = a6;
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v30 = a3;
  uint64_t v9 = sub_2576A6AF0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2576A6A10();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A6E30();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v26 = a5;
  v17(v16, a5, v13);
  uint64_t v18 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v31, v9);
  sub_2576A8470();
  sub_2576A83D0();
  uint64_t v19 = sub_2576A6E20();
  if (v19)
  {
    LOBYTE(v25) = 1;
    sub_25758B120(v19, v29, a1, 0, 1, v28, 0, 1, v18, 0, v25, v27);
    return swift_release();
  }
  else
  {
    uint64_t v21 = sub_25758AEA0();
    uint64_t v23 = v22;
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v24 = v21;
    *(void *)(v24 + 8) = v23;
    *(unsigned char *)(v24 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_2574C0A54(uint64_t a1, uint64_t a2, const void *a3, const void *a4, uint64_t a5, uint64_t a6, size_t a7)
{
  size_t v22 = a7;
  v28[1] = *(const void **)MEMORY[0x263EF8340];
  sub_2574C1664(a1 + 136, (uint64_t)v26, &qword_26A001D38);
  sub_2574C1664((uint64_t)v26, (uint64_t)&v27, &qword_26A001D38);
  uint64_t v14 = v27;
  if (!v27
    || (sub_2574C1664(a2 + 136, (uint64_t)v25, &qword_26A001D38),
        sub_2574C1664((uint64_t)v25, (uint64_t)v28, &qword_26A001D38),
        !v28[0]))
  {
    uint64_t v16 = sub_2576A6D60();
    sub_2574C16C8((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    uint64_t v18 = v20;
    uint64_t v19 = (unsigned int *)MEMORY[0x263F8CCC8];
    goto LABEL_7;
  }
  memcpy(&__dst, a3, sizeof(__dst));
  v21[10] = v21;
  memcpy(&v23, a4, sizeof(v23));
  v21[8] = a3;
  uint64_t result = sub_25758DDE0(&v23, &__dst, a6, v22, v14, 0, 1, a1, (uint64_t)a4, v28[0], 0, 1, a2, a5, 0, 1);
  if (!v7 && result)
  {
    uint64_t v16 = sub_2576A6D60();
    sub_2574C16C8((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    uint64_t v18 = v17;
    uint64_t v19 = (unsigned int *)MEMORY[0x263F8CCB8];
LABEL_7:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *v19, v16);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2574C0CD0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_6_13(a1, a2, a3, a4, a5, a6, a7, a8, v19[0], v19[1], v19[2], v19[3], v19[4], v19[5], v19[6], v19[7], v19[8], v19[9], v19[10],
    v19[11],
    v19[12],
    v19[13],
    v19[14],
    v19[15],
    v19[16],
    v19[17],
    v19[18],
    v19[19],
    v19[20],
    v19[21],
    v19[22],
    v20[0]);
  sub_2574C1548((uint64_t)v20);
  uint64_t v9 = sub_2574C1664((uint64_t)v20, (uint64_t)v19, &qword_26A001D30);
  uint64_t v17 = OUTLINED_FUNCTION_23_8(v9, v10, v11, v12, v13, v14, v15, v16, v19[0]);
  return v8(v17);
}

uint64_t sub_2574C0D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  OUTLINED_FUNCTION_21_9();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_getObjectType();
  uint64_t v21 = v14;
  uint64_t v22 = v13;
  uint64_t v23 = v12;
  uint64_t v24 = v11;
  long long v25 = a9;
  uint64_t v26 = a10;
  uint64_t v27 = a11;
  uint64_t v28 = v16;
  return sub_257648508((uint64_t)sub_2574C1470, (uint64_t)v20, MEMORY[0x263F8EE60] + 8, v18);
}

uint64_t sub_2574C0DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8)
{
  swift_getObjectType();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  uint64_t v20 = a7;
  uint64_t v21 = a8;
  uint64_t v22 = a1;
  return sub_257648508((uint64_t)sub_2574C149C, (uint64_t)v15, MEMORY[0x263F8EE60] + 8, a6);
}

uint64_t sub_2574C0EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, unsigned char *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  v15[2] = a3;
  uint64_t v15[3] = a4;
  void v15[4] = a5;
  v15[5] = a6;
  void v15[6] = a1;
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    v14[2] = sub_2574C14C4;
    void v14[3] = v15;
    swift_unknownObjectRetain();
    sub_257648508((uint64_t)sub_2574C152C, (uint64_t)v14, MEMORY[0x263F8EE60] + 8, a7);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_2574C14FC(v16);
    sub_2574C1664((uint64_t)v16, (uint64_t)v17, &qword_26A001D30);
    return a3(a5, a6, a1, v17);
  }
}

uint64_t sub_2574C1018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21_9();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_getObjectType();
  uint64_t v22 = v15;
  uint64_t v23 = v14;
  uint64_t v24 = v13;
  uint64_t v25 = v12;
  long long v26 = a9;
  long long v27 = a10;
  long long v28 = a11;
  uint64_t v29 = a12;
  uint64_t v30 = v17;
  return sub_257648508((uint64_t)sub_2574C15A4, (uint64_t)v21, MEMORY[0x263F8EE60] + 8, v19);
}

uint64_t sub_2574C10F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, long long a7, long long a8, uint64_t a9)
{
  swift_getObjectType();
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  long long v21 = a7;
  long long v22 = a8;
  uint64_t v23 = a9;
  uint64_t v24 = a1;
  return sub_257648508((uint64_t)sub_2574C15D4, (uint64_t)v16, MEMORY[0x263F8EE60] + 8, a6);
}

uint64_t sub_2574C11D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, long long a7, uint64_t a8)
{
  swift_getObjectType();
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  long long v20 = a7;
  uint64_t v21 = a8;
  uint64_t v22 = a1;
  return sub_257648508((uint64_t)sub_2574C1604, (uint64_t)v15, MEMORY[0x263F8EE60] + 8, a6);
}

uint64_t sub_2574C12AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8)
{
  uint64_t v15 = a7;
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = a8;
  v16[7] = a1;
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    v14[2] = sub_2574C162C;
    void v14[3] = v16;
    swift_unknownObjectRetain();
    sub_257648508((uint64_t)sub_2574C1710, (uint64_t)v14, MEMORY[0x263F8EE60] + 8, v15);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_2574C14FC(v17);
    sub_2574C1664((uint64_t)v17, (uint64_t)v18, &qword_26A001D30);
    return a3(a5, a6, a8, a1, v18);
  }
}

uint64_t sub_2574C1420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2574C07E8(a1, a2, a3, a4, v4[2], v4[3], v4[4]);
}

uint64_t sub_2574C1440()
{
  __n128 v1 = OUTLINED_FUNCTION_20_10();
  return sub_2574C0D2C(v2, v3, v4, v5, v6, v7, v8, v9, *(_OWORD *)&v1, *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_2574C1470()
{
  OUTLINED_FUNCTION_28_5();
  return sub_2574C0DEC(v1, v2, v3, v4, v5, v6, v7, *(void *)(v0 + 80));
}

uint64_t sub_2574C149C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2574C0EAC(a1, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unsigned char *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_2574C14C4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(v1 + 16))(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

void sub_2574C14FC(unsigned char *a1)
{
  a1[176] = 1;
}

uint64_t sub_2574C152C(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  return sub_2574C0CD0(a1, *(void *)(v8 + 16), *(void *)(v8 + 24), a4, a5, a6, a7, a8);
}

uint64_t sub_2574C1548(uint64_t result)
{
  *(unsigned char *)(result + 176) = 0;
  return result;
}

uint64_t sub_2574C1550(uint64_t a1, uint64_t a2, const void *a3, const void *a4, uint64_t a5)
{
  return sub_2574C0A54(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24));
}

uint64_t sub_2574C156C()
{
  __n128 v1 = OUTLINED_FUNCTION_14_11();
  return sub_2574C1018(v2, v3, v4, v5, v6, v7, v8, v9, *(_OWORD *)&v1, v10, *(_OWORD *)(v0 + 104), *(void *)(v0 + 120));
}

uint64_t sub_2574C15A4()
{
  __n128 v1 = OUTLINED_FUNCTION_14_11();
  return sub_2574C10F8(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, v8, *(void *)(v0 + 104));
}

uint64_t sub_2574C15D4()
{
  __n128 v1 = OUTLINED_FUNCTION_20_10();
  return sub_2574C11D8(v2, v3, v4, v5, v6, v7, *(_OWORD *)&v1, *(void *)(v0 + 88));
}

uint64_t sub_2574C1604()
{
  OUTLINED_FUNCTION_28_5();
  return sub_2574C12AC(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2574C162C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, uint64_t))(v1 + 16))(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), a1);
}

uint64_t sub_2574C1664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2574C16C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C1710(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  return sub_2574C152C(a1, a2, a3, a4, a5, a6, a7, a8);
}

void *OUTLINED_FUNCTION_6_13(void *__src, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char __dst)
{
  return memcpy(&__dst, __src, 0xB0uLL);
}

uint64_t OUTLINED_FUNCTION_8_11(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_9_14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 2;
  return swift_willThrow();
}

__n128 OUTLINED_FUNCTION_14_11()
{
  return *(__n128 *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_18_10(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

__n128 OUTLINED_FUNCTION_20_10()
{
  return *(__n128 *)(v0 + 72);
}

void OUTLINED_FUNCTION_21_9()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t *OUTLINED_FUNCTION_23_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  return v0;
}

__n128 *OUTLINED_FUNCTION_27_5(__n128 *result, __n128 a2)
{
  result[1] = a2;
  unint64_t v4 = *(void *)(v3 - 400);
  result[2].n128_u64[0] = v2;
  result[2].n128_u64[1] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  return sub_257480BC8(v0);
}

uint64_t sub_2574C1904()
{
  return sub_2576A6C30();
}

char *sub_2574C1918(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  long long v10 = (char *)&v51 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v51 - v11;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_21();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_5_15(v15, v51);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v64 = (uint64_t)&v51 - v18;
  MEMORY[0x270FA5388](v17);
  long long v20 = (char *)&v51 - v19;
  uint64_t v21 = sub_2575CA350();
  uint64_t v22 = sub_2574BAF20(v21, a1);
  if (!v22) {
    goto LABEL_7;
  }
  uint64_t v24 = v22;
  uint64_t v63 = v13;
  uint64_t v25 = v23;
  uint64_t v60 = v10;
  uint64_t v26 = sub_2575CA350();
  uint64_t v27 = sub_2574BAF20(v26, a1);
  if (!v27)
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_257663F84();
    sub_257480520();
    uint64_t v48 = swift_allocError();
    OUTLINED_FUNCTION_8_12(v48, v49);
    return v20;
  }
  uint64_t v29 = v27;
  unint64_t v59 = v7;
  uint64_t v30 = v28;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v57 = v25;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 16))(&v67, ObjectType, v25);
  uint64_t v31 = v20;
  sub_25758A634(&v67, 0, 0, (uint64_t)v20);
  uint64_t v32 = swift_getObjectType();
  uint64_t v55 = v30;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v30 + 16))(&v67, v32, v30);
  sub_25758A634(&v67, 0, 0, v64);
  uint64_t v67 = *(void *)(v1 + 56);
  uint64_t v33 = v67;
  sub_2576A7810();
  uint64_t v58 = v24;
  sub_25758A634(&v67, 0, 0, v65);
  type metadata accessor for NativeTensorStorage();
  uint64_t v67 = v33;
  char v66 = *(unsigned char *)(v2 + 64);
  sub_2576A7810();
  uint64_t v34 = (uint64_t *)OUTLINED_FUNCTION_7_12();
  uint64_t v35 = v61;
  sub_25754DDC0(v34, v36, v37);
  uint64_t v52 = v38;
  uint64_t v54 = v35;
  long long v20 = v62;
  uint64_t v39 = *(void (**)(void))(v63 + 16);
  uint64_t v61 = v31;
  uint64_t v40 = v29;
  OUTLINED_FUNCTION_3_4();
  v39();
  OUTLINED_FUNCTION_2_6((uint64_t)v20);
  uint64_t v41 = (uint64_t)v60;
  uint64_t v42 = (uint64_t)v59;
  OUTLINED_FUNCTION_3_4();
  v39();
  OUTLINED_FUNCTION_2_6(v41);
  OUTLINED_FUNCTION_3_4();
  v39();
  uint64_t v43 = v52;
  uint64_t v44 = OUTLINED_FUNCTION_2_6(v42);
  char v53 = &v51;
  MEMORY[0x270FA5388](v44);
  uint64_t v45 = v55;
  *(&v51 - 8) = v40;
  *(&v51 - 7) = v45;
  *(&v51 - 6) = v41;
  *(&v51 - 5) = v43;
  *(&v51 - 4) = (uint64_t)&off_270667760;
  *(&v51 - 3) = v42;
  *(&v51 - 2) = (uint64_t)sub_2574C2518;
  *(&v51 - 1) = v2;
  uint64_t v46 = v54;
  sub_257648508((uint64_t)sub_2574C2548, (uint64_t)(&v51 - 10), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v46)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v42);
    sub_257480BC8(v41);
    sub_257480BC8((uint64_t)v20);
  }
  else
  {
    sub_257480BC8(v42);
    sub_257480BC8(v41);
    sub_257480BC8((uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    long long v20 = (char *)swift_allocObject();
    *((_OWORD *)v20 + 1) = xmmword_2576ABB10;
    *((void *)v20 + 4) = v43;
    *((void *)v20 + 5) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v47 = *(void (**)(void))(v63 + 8);
  OUTLINED_FUNCTION_1_8();
  v47();
  OUTLINED_FUNCTION_1_8();
  v47();
  OUTLINED_FUNCTION_1_8();
  v47();
  return v20;
}

char *sub_2574C1DD8(uint64_t a1)
{
  return sub_2574C1918(a1);
}

uint64_t sub_2574C1DF0()
{
  return sub_2576A6C30();
}

char *sub_2574C1E04(uint64_t a1)
{
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v64)(uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;

  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v76 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v77 = (char *)&v68 - v9;
  MEMORY[0x270FA5388](v8);
  id v78 = (char *)&v68 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  MEMORY[0x270FA5388](v11 - 8);
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_21();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_5_15(v15, v68);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v68 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t v22 = sub_2575CA350();
  uint64_t v23 = sub_2574BAF20(v22, a1);
  if (!v23) {
    goto LABEL_6;
  }
  uint64_t v25 = v23;
  uint64_t v80 = v24;
  uint64_t v26 = sub_2575CA350();
  uint64_t v27 = sub_2574BAF20(v26, a1);
  uint64_t v79 = v28;
  if (!v27)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257663FC4();
    sub_257480520();
    uint64_t v34 = swift_allocError();
    OUTLINED_FUNCTION_8_12(v34, v35);
    return v19;
  }
  uint64_t v71 = v13;
  uint64_t v69 = v1;
  char v73 = v27;
  unint64_t v81 = v19;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v30 = v25;
  uint64_t v31 = v80;
  uint64_t v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v80 + 16);
  v32(&v83, ObjectType, v80);
  uint64_t v33 = *(void *)(v83 + 16);
  swift_bridgeObjectRelease();
  uint64_t v72 = v3;
  uint64_t v70 = v30;
  uint64_t v68 = ObjectType;
  if (v33) {
    v32(&v83, ObjectType, v31);
  }
  sub_2576A6990();
  OUTLINED_FUNCTION_6_14();
  uint64_t v74 = v21;
  sub_2576A6DE0();
  uint64_t v36 = swift_getObjectType();
  uint64_t v37 = v79;
  uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v79 + 16);
  v38(&v83, v36, v79);
  uint64_t v39 = *(void *)(v83 + 16);
  swift_bridgeObjectRelease();
  uint64_t v40 = v69;
  if (v39) {
    v38(&v83, v36, v37);
  }
  uint64_t v41 = v71;
  OUTLINED_FUNCTION_6_14();
  sub_2576A6DE0();
  uint64_t v42 = v72;
  uint64_t v43 = *(void *)(v72 + 56);
  if (*(void *)(v43 + 16)) {
    sub_2576A7810();
  }
  OUTLINED_FUNCTION_6_14();
  sub_2576A6DE0();
  type metadata accessor for NativeTensorStorage();
  uint64_t v83 = v43;
  uint64_t v82 = *(unsigned char *)(v42 + 64);
  sub_2576A7810();
  uint64_t v44 = (uint64_t *)OUTLINED_FUNCTION_7_12();
  uint64_t v45 = v75;
  sub_25754DDC0(v44, v46, v47);
  uint64_t v49 = v48;
  uint64_t v75 = v45;
  uint64_t v50 = *(void (**)(uint64_t))(v41 + 16);
  uint64_t v51 = (uint64_t)v78;
  OUTLINED_FUNCTION_3_4();
  v50(v52);
  OUTLINED_FUNCTION_2_6(v51);
  uint64_t v19 = v77;
  OUTLINED_FUNCTION_3_4();
  v50(v53);
  OUTLINED_FUNCTION_2_6((uint64_t)v19);
  uint64_t v54 = (uint64_t)v76;
  OUTLINED_FUNCTION_3_4();
  v50(v55);
  unint64_t v56 = OUTLINED_FUNCTION_2_6(v54);
  MEMORY[0x270FA5388](v56);
  uint64_t v57 = v79;
  *(&v68 - 8) = v73;
  *(&v68 - 7) = v57;
  *(&v68 - 6) = (uint64_t)v19;
  *(&v68 - 5) = v49;
  uint64_t v79 = v49;
  *(&v68 - 4) = (uint64_t)&off_270667760;
  *(&v68 - 3) = v54;
  uint64_t v58 = v72;
  *(&v68 - 2) = (uint64_t)sub_2574C2560;
  *(&v68 - 1) = v58;
  unint64_t v59 = v75;
  sub_257648508((uint64_t)sub_2574C2548, (uint64_t)(&v68 - 10), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v59)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v54);
    sub_257480BC8((uint64_t)v19);
    sub_257480BC8(v51);
    uint64_t v60 = *(void (**)(uint64_t))(v41 + 8);
    OUTLINED_FUNCTION_4_16();
    v60(v61);
    OUTLINED_FUNCTION_4_16();
    v60(v62);
    ((void (*)(char *, uint64_t))v60)(v74, v40);
  }
  else
  {
    sub_257480BC8(v54);
    sub_257480BC8((uint64_t)v19);
    sub_257480BC8(v51);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v19 = (char *)swift_allocObject();
    *((_OWORD *)v19 + 1) = xmmword_2576ABB10;
    *((void *)v19 + 4) = v79;
    *((void *)v19 + 5) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v64 = *(void (**)(uint64_t))(v41 + 8);
    OUTLINED_FUNCTION_4_16();
    v64(v65);
    OUTLINED_FUNCTION_4_16();
    v64(v66);
    OUTLINED_FUNCTION_4_16();
    v64(v67);
  }
  return v19;
}

uint64_t sub_2574C23C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return sub_2576A6E00();
}

char *sub_2574C2424(uint64_t a1)
{
  return sub_2574C1E04(a1);
}

uint64_t sub_2574C243C(uint64_t a1)
{
  uint64_t result = sub_2574C24C4((unint64_t *)&qword_26A001D48, (void (*)(uint64_t))type metadata accessor for BinaryComparisonOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C2480(uint64_t a1)
{
  uint64_t result = sub_2574C24C4(&qword_26A001D50, (void (*)(uint64_t))type metadata accessor for BinaryLogicalOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C24C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C2518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2574C23C4(a1, a2, a3, v3, (void (*)(void))sub_2574C1904);
}

uint64_t sub_2574C2548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257480E80(a1, a2);
}

uint64_t sub_2574C2560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2574C23C4(a1, a2, a3, v3, (void (*)(void))sub_2574C1DF0);
}

void OUTLINED_FUNCTION_5_15(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_6_14()
{
  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return v0 - 72;
}

uint64_t OUTLINED_FUNCTION_8_12(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 2;
  return swift_willThrow();
}

uint64_t KeyTensorPairsRepresentable.tensors.getter(uint64_t a1, uint64_t a2)
{
  v9[9] = (*(uint64_t (**)(void))(a2 + 32))();
  void v9[6] = a1;
  void v9[7] = a2;
  v9[2] = a1;
  _OWORD v9[3] = a2;
  v9[4] = swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v4 = sub_2576A7F50();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_257495BE0((void (*)(char *, uint64_t))sub_2574C2944, (uint64_t)v9, v4, (uint64_t)&type metadata for Tensor, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v6);
  swift_release();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2574C2770(uint64_t a1, uint64_t a2)
{
  v17[1] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = *(int *)(v9 + 48);
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v17 - v10, a1, AssociatedTypeWitness);
  uint64_t v14 = *(void *)(a1 + v12);
  uint64_t v15 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v11, AssociatedTypeWitness);
  *(void *)&v8[v15] = v14;
  swift_retain();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, TupleTypeMetadata2);
}

uint64_t sub_2574C2944(uint64_t a1)
{
  return sub_2574C2770(a1, *(void *)(v1 + 32));
}

uint64_t dispatch thunk of KeyTensorPairsRepresentable.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of KeyTensorPairsRepresentable.keyTensorPairs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void sub_2574C2990()
{
}

uint64_t sub_2574C29F0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (v1)
  {
    if (*(void *)(v0 + 88))
    {
      swift_retain();
      swift_retain();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_2574C2A44()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_10_10(v2, (__n128)xmmword_2576ABB00);
  OUTLINED_FUNCTION_7_13();
  if (v1)
  {
    OUTLINED_FUNCTION_6_15();
    swift_retain();
    uint64_t v3 = swift_retain();
    MEMORY[0x25A2B83B0](v3);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
  }
  if (*(void *)(v0 + 72))
  {
    uint64_t v5 = OUTLINED_FUNCTION_6_15();
    MEMORY[0x25A2B83B0](v5);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  if (sub_2574C29F0())
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x25A2B83B0](v6);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_8_13();
    sub_2576A7E20();
    uint64_t v7 = swift_retain();
    MEMORY[0x25A2B83B0](v7);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
    swift_release();
  }
  return v9;
}

uint64_t sub_2574C2BB0()
{
  if (v0[21])
  {
    uint64_t v1 = v0[21];
  }
  else
  {
    uint64_t v1 = (*(uint64_t (**)(void))(*v0 + 368))();
    v0[21] = v1;
    sub_2576A7810();
    swift_bridgeObjectRelease();
  }
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574C2C34(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11)
{
  *(_OWORD *)(v11 + 104) = 0u;
  *(unsigned char *)(v11 + 40) = 0;
  *(void *)(v11 + 80) = 0;
  *(void *)(v11 + 88) = 0;
  *(_OWORD *)(v11 + 120) = 0u;
  *(_OWORD *)(v11 + 136) = 0u;
  *(_OWORD *)(v11 + 145) = 0u;
  *(unsigned char *)(v11 + 161) = 1;
  *(void *)(v11 + 168) = 0;
  *(_DWORD *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 48) = a4;
  *(void *)(v11 + 56) = a5;
  *(void *)(v11 + 64) = a6;
  *(void *)(v11 + 72) = a7;
  swift_release();
  if (a8)
  {
    *(void *)(v11 + 80) = a8;
    swift_retain();
    swift_release();
    swift_retain();
    sub_2574C3AC0(a8);
    *(void *)(v11 + 88) = a9;
    swift_release();
  }
  *(unsigned char *)(v11 + 96) = a10 & 1;
  sub_257469238(a11, v11 + 104);
  return v11;
}

void sub_2574C2D0C()
{
}

uint64_t sub_2574C2D6C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574C2DC4()
{
  sub_2574C2D6C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseLSTMLayerOperation()
{
  return self;
}

uint64_t sub_2574C2E1C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t sub_2574C2E40()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

__n128 sub_2574C2E70@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 152);
  char v3 = *(unsigned char *)(v1 + 160);
  char v4 = *(unsigned char *)(v1 + 161);
  long long v5 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 136);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_2574C2EA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_2574C2EE8(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *v1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 40) = v2;
  return result;
}

uint64_t (*sub_2574C2F2C())()
{
  return j__swift_endAccess;
}

uint64_t sub_2574C2F84()
{
  return sub_25761B124();
}

uint64_t sub_2574C2FD0()
{
  (*(void (**)(void))(*(void *)v0 + 168))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_2576A90B0();
  swift_beginAccess();
  return sub_2576A90A0();
}

uint64_t sub_2574C3070()
{
  return sub_2574C2FD0();
}

uint64_t sub_2574C3094()
{
  return 1836348268;
}

uint64_t sub_2574C30A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  v15[23] = a15;
  v15[24] = a12;
  v15[22] = a14;
  if (a3)
  {
    uint64_t v16 = a3;
    sub_25747A4D0(a14);
  }
  else
  {
    sub_25747A4D0(a14);
    a1 = sub_25761B148(1836348268, 0xE400000000000000);
    a2 = v19;
    uint64_t v16 = v20;
  }
  uint64_t v21 = sub_2574C2C34(a1, a2, v16, a4, a5, a6, a7, a9, a10, a11 & 1, a13);
  sub_25747A4E0(a14);
  swift_release();
  return v21;
}

uint64_t sub_2574C319C()
{
  return sub_2576A7810();
}

uint64_t sub_2574C31A4()
{
  sub_25747A4E0(*(void *)(v0 + 176));
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574C31D4()
{
  sub_2574C2D6C();
  sub_25747A4E0(*(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574C3200()
{
  sub_2574C31D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerOperation()
{
  return self;
}

uint64_t sub_2574C3258()
{
  uint64_t v1 = *(void *)(v0 + 176);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_2574C328C()
{
  return OUTLINED_FUNCTION_11_11();
}

uint64_t sub_2574C329C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_2576AF890;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[24];
  *(void *)(v2 + 32) = v0[22];
  *(void *)(v2 + 40) = v4;
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v6;
  *(void *)(v2 + 64) = v5;
  uint64_t v13 = v2;
  sub_2576A7E20();
  OUTLINED_FUNCTION_7_13();
  if (v1)
  {
    OUTLINED_FUNCTION_6_15();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v7 = swift_retain();
    MEMORY[0x25A2B83B0](v7);
    OUTLINED_FUNCTION_1_23();
    if (v8) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  if (v0[9])
  {
    uint64_t v9 = OUTLINED_FUNCTION_6_15();
    MEMORY[0x25A2B83B0](v9);
    OUTLINED_FUNCTION_1_23();
    if (v8) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  if (sub_2574C29F0())
  {
    uint64_t v10 = swift_retain();
    MEMORY[0x25A2B83B0](v10);
    OUTLINED_FUNCTION_1_23();
    if (v8) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_8_13();
    sub_2576A7E20();
    uint64_t v11 = swift_retain();
    MEMORY[0x25A2B83B0](v11);
    OUTLINED_FUNCTION_1_23();
    if (v8) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
    swift_release();
  }
  return v13;
}

uint64_t sub_2574C3464(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  v14[22] = a11;
  v14[23] = a12;
  v14[24] = a13;
  if (a3)
  {
    uint64_t v15 = a3;
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v18 = OUTLINED_FUNCTION_11_11();
    a1 = sub_25761B148(v18, v19);
    a2 = v20;
    uint64_t v15 = v21;
  }
  uint64_t v22 = sub_2574C2C34(a1, a2, v15, a4, a5, a6, a7, a8, a9, a10 & 1, a14);
  swift_release();
  swift_release();
  swift_release();
  return v22;
}

void sub_2574C3570()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v2 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_10_10(v2, (__n128)xmmword_2576ABB00);
  OUTLINED_FUNCTION_7_13();
  if (v1)
  {
    OUTLINED_FUNCTION_6_15();
    swift_retain();
    uint64_t v3 = swift_retain();
    MEMORY[0x25A2B83B0](v3);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
  }
  if (*(void *)(v0 + 72))
  {
    uint64_t v5 = OUTLINED_FUNCTION_6_15();
    MEMORY[0x25A2B83B0](v5);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
  }
  if (sub_2574C29F0())
  {
    uint64_t v6 = swift_retain();
    MEMORY[0x25A2B83B0](v6);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_8_13();
    sub_2576A7E20();
    uint64_t v7 = swift_retain();
    MEMORY[0x25A2B83B0](v7);
    OUTLINED_FUNCTION_1_23();
    if (v4) {
      OUTLINED_FUNCTION_0_22();
    }
    OUTLINED_FUNCTION_3_16();
    sub_2576A7E20();
    swift_release();
    swift_release();
  }
  if (!(v16 >> 62))
  {
    uint64_t v8 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_2576A7810();
    if (v8) {
      goto LABEL_18;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  sub_2576A7810();
  uint64_t v8 = sub_2576A8BF0();
  if (!v8) {
    goto LABEL_28;
  }
LABEL_18:
  uint64_t v15 = MEMORY[0x263F8EE78];
  sub_2574E7174();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v16 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x25A2B8DB0](v9);
      }
      else
      {
        uint64_t v10 = *(void *)(v16 + 8 * v9 + 32);
        swift_retain();
      }
      uint64_t v11 = *(void *)(v10 + 152);
      char v12 = *(unsigned char *)(v10 + 160);
      sub_2576A7810();
      swift_release();
      unint64_t v13 = *(void *)(v15 + 16);
      if (v13 >= *(void *)(v15 + 24) >> 1) {
        sub_2574E7174();
      }
      ++v9;
      *(void *)(v15 + 16) = v13 + 1;
      uint64_t v14 = v15 + 16 * v13;
      *(void *)(v14 + 32) = v11;
      *(unsigned char *)(v14 + 40) = v12;
    }
    while (v8 != v9);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_2574C381C()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2574C3854()
{
  sub_2574C2D6C();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_2574C3888()
{
  sub_2574C3854();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerGradientOperation()
{
  return self;
}

uint64_t sub_2574C38E0(uint64_t a1)
{
  uint64_t result = sub_2574C39E8((unint64_t *)&qword_26A001D60, (void (*)(void))type metadata accessor for LSTMLayerGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C3938(uint64_t a1)
{
  uint64_t result = sub_2574C39E8(&qword_26A001D68, (void (*)(void))type metadata accessor for LSTMLayerOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C3990(uint64_t a1)
{
  uint64_t result = sub_2574C39E8(qword_26A001D70, (void (*)(void))type metadata accessor for BaseLSTMLayerOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C39E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C3A2C()
{
  return 2 * (*(void *)(v0 + 64) != 0);
}

uint64_t sub_2574C3A44()
{
  if (!*(void *)(v0 + 72)) {
    return 0;
  }
  if (*(void *)(v0 + 64)) {
    return 3;
  }
  return 2;
}

uint64_t sub_2574C3A70()
{
  uint64_t result = sub_2574C29F0();
  if (result)
  {
    sub_2574C3AC0(result);
    uint64_t v2 = 2;
    if (*(void *)(v0 + 64)) {
      uint64_t v2 = 3;
    }
    if (*(void *)(v0 + 72)) {
      return v2 + 1;
    }
    else {
      return v2;
    }
  }
  return result;
}

uint64_t sub_2574C3AC0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2574C3B00()
{
  uint64_t result = sub_2574C3A70();
  if ((v1 & 1) == 0) {
    ++result;
  }
  return result;
}

uint64_t sub_2574C3B20()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_15();
  if (!v1)
  {
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v0 + 32);
}

uint64_t sub_2574C3B6C()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_15();
  if (v1 <= 2)
  {
    sub_2576A7810();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v0 + 48);
}

uint64_t sub_2574C3BE4()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_15();
  if (v1 <= 1)
  {
    OUTLINED_FUNCTION_4_17();
    sub_2576A7810();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v0 + 40);
}

uint64_t sub_2574C3C38()
{
  uint64_t v0 = sub_2574C2A44();
  uint64_t v1 = sub_2574C3A70();
  if (v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v1;
  sub_257582858(v1, (v0 & 0xC000000000000001) == 0, v0);
  if ((v0 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x25A2B8DB0](v3, v0);
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 8 * v3 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 152);
  sub_2576A7810();
  swift_release();
  if (*(void *)(v5 + 16) <= 1uLL)
  {
LABEL_8:
    OUTLINED_FUNCTION_4_17();
    OUTLINED_FUNCTION_2_18();
  }
  uint64_t v6 = *(void *)(v5 + 40);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2574C3D08()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 152);
  if (!*(void *)(v1 + 16))
  {
    OUTLINED_FUNCTION_5_16();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v1 + 32) / 4;
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return sub_2576A7E70();
}

void OUTLINED_FUNCTION_2_18()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return sub_2576A7ED0();
}

uint64_t OUTLINED_FUNCTION_5_16()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return sub_2576A7ED0();
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  return *(void *)(*(void *)(v0 + 48) + 152);
}

uint64_t OUTLINED_FUNCTION_10_10(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  unint64_t v4 = *(void *)(v2 + 56);
  a1[2].n128_u64[0] = *(void *)(v2 + 48);
  a1[2].n128_u64[1] = v4;
  return sub_2576A7E20();
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  return 0x6172675F6D74736CLL;
}

uint64_t destroy for PReLU()
{
  swift_release();
  return swift_release();
}

uint64_t sub_2574C3F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_2574C3F5C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2574C3FBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Heap()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574C401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9EBB8](a1, a4);
}

uint64_t sub_2574C4024(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2574C402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9EC20](a1, a2, a5);
}

void sub_2574C4034()
{
}

void sub_2574C403C()
{
}

uint64_t sub_2574C4044()
{
  return sub_2576A7EF0();
}

uint64_t sub_2574C4064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_2574C401C(*v4, a2, a3, *(void *)(a1 + 16));
  *a4 = result;
  return result;
}

uint64_t sub_2574C4098@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574C4024(*v1);
  *a1 = result;
  return result;
}

void (*sub_2574C40C4(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[4] = sub_2574C413C(v7, *a2, *v3, v3[1], v3[2], *(void *)(a3 + 16));
  return sub_2574A787C;
}

void (*sub_2574C413C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(void *a1)
{
  uint64_t v6 = *(void *)(a6 - 8);
  *a1 = a6;
  a1[1] = v6;
  a1[2] = malloc(*(void *)(v6 + 64));
  sub_2576A89A0();
  return sub_2574C41F8;
}

void sub_2574C41F8(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_2574C4248()
{
  swift_getWitnessTable();
  return sub_2576A8110();
}

uint64_t sub_2574C42B4()
{
  return sub_2576A81E0() & 1;
}

uint64_t sub_2574C4320()
{
  return sub_2576A8910();
}

void sub_2574C4330(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_2574C4350@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_2574C402C(*a1, *v5, a3, a4, *(void *)(a2 + 16));
  *a5 = result;
  return result;
}

uint64_t sub_2574C4388(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_2574C402C(*a1, *v4, a3, a4, *(void *)(a2 + 16));
  *a1 = result;
  return result;
}

__n128 sub_2574C43C0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v4 = v2[1].n128_u64[0];
  uint64_t v5 = *(void *)(a1 + 16);
  __n128 v11 = *v2;
  uint64_t v6 = v2->n128_u64[0];
  swift_retain();
  swift_retain();
  uint64_t v9 = sub_2574C401C(v6, v7, v8, v5);
  swift_release();
  swift_release();
  __n128 result = v11;
  *a2 = v11;
  a2[1].n128_u64[0] = v4;
  a2[1].n128_u64[1] = v9;
  return result;
}

uint64_t sub_2574C4440(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2574C4494(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F9E128](a1, WitnessTable);
}

uint64_t sub_2574C44E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9EC28](a1, a2, a5);
}

uint64_t sub_2574C44F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_2574C44E8(*a1, *v5, a3, a4, *(void *)(a2 + 16));
  *a5 = result;
  return result;
}

uint64_t sub_2574C4528(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_2574C44E8(*a1, *v4, a3, a4, *(void *)(a2 + 16));
  *a1 = result;
  return result;
}

void sub_2574C4560()
{
}

uint64_t sub_2574C4588(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t sub_2574C4598@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_2574C4044();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_2574C45DC()
{
}

uint64_t sub_2574C45F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = sub_2576A8910();
  if (v14 != sub_2576A8910()) {
    return 0;
  }
  uint64_t result = sub_2576A8910();
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v16 = result;
    if (!result) {
      return 1;
    }
    uint64_t v17 = 0;
    while (v16 != v17)
    {
      uint64_t v18 = v17;
      uint64_t result = sub_2574C46F4((uint64_t)&v18, a1, a2, a3, a4, a5, a6, a7);
      if ((result & 1) == 0) {
        return 0;
      }
      if (v16 == ++v17) {
        return 1;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2574C46F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = *(void *)(a8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  char v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - v13;
  sub_2576A89A0();
  sub_2576A89A0();
  char v15 = sub_2576A7990();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, a8);
  v16(v14, a8);
  return v15 & 1;
}

uint64_t sub_2574C483C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_2574C45F4(*a1, a1[1], a1[2], *a2, a2[1], a2[2], *(void *)(a3 + 16));
}

uint64_t sub_2574C4864()
{
  return swift_release();
}

uint64_t sub_2574C4908()
{
  return sub_2576A9100();
}

uint64_t sub_2574C4968()
{
  return sub_2574C4908();
}

uint64_t sub_2574C497C()
{
  return sub_2574C4864();
}

uint64_t sub_2574C4990()
{
  return sub_2576A9100();
}

uint64_t sub_2574C49E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2576A9150();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C58);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15[3] = a1;
  void v15[4] = a2;
  v15[5] = a3;
  v15[0] = a1;
  v15[1] = a2;
  v15[2] = a3;
  uint64_t v12 = *MEMORY[0x263F8E7F0];
  uint64_t v13 = sub_2576A9140();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  type metadata accessor for Heap();
  swift_getWitnessTable();
  sub_2574C4BB4((uint64_t)v8);
  swift_retain_n();
  swift_retain_n();
  return sub_2576A9180();
}

uint64_t sub_2574C4BB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F8E830];
  uint64_t v3 = sub_2576A9150();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  return v4(a1, v2, v3);
}

uint64_t sub_2574C4C28()
{
  return sub_2574C49E8(*v0, v0[1], v0[2]);
}

uint64_t sub_2574C4C3C()
{
  return 0;
}

uint64_t sub_2574C4CB0()
{
  return sub_2574C4C3C();
}

uint64_t sub_2574C4CC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4D08()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4D24()
{
  return sub_2574C4E94();
}

uint64_t sub_2574C4D3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4DA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4DBC()
{
  return sub_2574C4E94();
}

uint64_t sub_2574C4DD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4E38()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4E54()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4E70()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_2574C4E7C()
{
  return sub_2574C4E94();
}

uint64_t sub_2574C4E94()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4EE0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C4EFC()
{
  return sub_2576A78D0();
}

uint64_t sub_2574C4F40@<X0>(uint64_t a1@<X8>)
{
  switch(*(unsigned char *)(v1 + 130))
  {
    case 1:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAD8];
      break;
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAE8];
      break;
    case 3:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CB08];
      break;
    case 4:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAE0];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8CAD0];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_2576A6BD0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

#error "2574C5440: call analysis failed (funcsize=273)"

uint64_t sub_2574C5488()
{
  return sub_2574C501C();
}

#error "2574C58D4: call analysis failed (funcsize=277)"

uint64_t sub_2574C591C()
{
  return sub_2574C54A0();
}

uint64_t sub_2574C5934@<X0>(unsigned int *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  int v7 = *(unsigned __int8 *)(v3 + 130);
  uint64_t v8 = sub_2576A6BD0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);
  if (v7) {
    uint64_t v10 = a1;
  }
  else {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *v10;
  return v9(a3, v11, v8);
}

#error "2574C5DEC: call analysis failed (funcsize=277)"

uint64_t sub_2574C5E34()
{
  return sub_2574C59B8();
}

uint64_t sub_2574C5E4C(uint64_t a1)
{
  uint64_t result = sub_2574C6188(&qword_26A001DF8, (void (*)(uint64_t))type metadata accessor for LogicalReductionOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C5EA4(uint64_t a1)
{
  uint64_t result = sub_2574C6188(&qword_26A001E00, (void (*)(uint64_t))type metadata accessor for ArgumentReductionOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C5EFC(uint64_t a1)
{
  uint64_t result = sub_2574C6188((unint64_t *)&qword_26A001E08, (void (*)(uint64_t))type metadata accessor for ReductionOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574C5F54(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4, uint64_t a5, uint64_t a6)
{
  size_t v10 = sub_25758BA90(a5, 0);
  size_t v11 = sub_25758BA90(a6, 0);
  sub_2574C1664(a1 + 136, (uint64_t)v22, &qword_26A001D38);
  sub_2574C1664((uint64_t)v22, (uint64_t)&v23, &qword_26A001D38);
  uint64_t v12 = v23;
  if (v23
    && (sub_2574C1664(a2 + 136, (uint64_t)v21, &qword_26A001D38),
        sub_2574C1664((uint64_t)v21, (uint64_t)&v24, &qword_26A001D38),
        (uint64_t v13 = v24) != 0))
  {
    uint64_t v14 = (void *)sub_2576A6D70();
    uint64_t result = BNNSFilterApplyBatch(v14, a4, v12, v10, v13, v11);
    if (!result) {
      return result;
    }
    uint64_t v16 = sub_2576A6D60();
    sub_2574C6188((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    uint64_t v18 = v17;
    uint64_t v19 = (unsigned int *)MEMORY[0x263F8CCB8];
  }
  else
  {
    uint64_t v16 = sub_2576A6D60();
    sub_2574C6188((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    uint64_t v18 = v20;
    uint64_t v19 = (unsigned int *)MEMORY[0x263F8CCC8];
  }
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *v19, v16);
  return swift_willThrow();
}

uint64_t sub_2574C6150(uint64_t a1, uint64_t a2)
{
  return sub_2574C5F54(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_2574C6170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257480BA4(a1, a2);
}

uint64_t sub_2574C6188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C61D0(uint64_t a1, uint64_t a2)
{
  return sub_2574C6150(a1, a2);
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  *(void *)(v0 + 96) = v1;
  return *(void *)(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_2_19()
{
  *(void *)(v0 + 72) = v1;
  return *(void *)(v0 + 88);
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  return *(void *)(v0 + 80);
}

uint64_t OUTLINED_FUNCTION_4_18(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(v4 + 104);
  return MEMORY[0x270F9CA28](v7, v4 + 368, v4 + 544, v4 + 720, v6, a2, a3, a4);
}

void OUTLINED_FUNCTION_5_17()
{
  *(void *)(v0 + 104) = v1;
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return v0;
}

void OUTLINED_FUNCTION_7_14(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 80) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return *(void *)(v0 + 160);
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  uint64_t result = v1;
  *(void *)(v0 + 8) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_12(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return *(void *)(v1 + 104);
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return *(void *)(v0 + 160);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  *(void *)(v0 + 128) = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  *(void *)(v1 - 72) = *(void *)(v0 + 96);
  *(unsigned char *)(v0 + 183) = *(_DWORD *)(v0 + 20);
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  *(void *)(v0 + 24) = v1;
  uint64_t v4 = *(void *)(v0 + 160);
  return sub_25758A634((uint64_t *)(v2 - 72), 0, 0, v4);
}

uint64_t OUTLINED_FUNCTION_18_11()
{
  *(void *)(v0 + 32) = v1;
  uint64_t v4 = *(void *)(v0 + 168);
  return sub_25758A634((uint64_t *)(v2 - 72), 0, 0, v4);
}

void OUTLINED_FUNCTION_22_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 160) = (char *)&a9 - v9;
}

unint64_t OUTLINED_FUNCTION_23_9()
{
  return sub_257480520();
}

void OUTLINED_FUNCTION_24_7()
{
  sub_25754DDC0((uint64_t *)(v1 - 72), v0 + 183, 0);
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return *(void *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_6(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 3;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_28_6(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 4;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_29_6(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 16) = 2;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_30_5()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_32_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 88) = (char *)&a9 - v9;
  return sub_2576A6DD0();
}

uint64_t OUTLINED_FUNCTION_33_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 168) = (char *)&a9 - v9;
  return sub_2576A6BD0();
}

uint64_t OUTLINED_FUNCTION_34_4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return sub_257648508(a1, v3, a2, a3);
}

void OUTLINED_FUNCTION_35_3()
{
  v0[7] = v1;
  v0[13] = v2;
  v0[14] = v3;
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return sub_2575CA350();
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return sub_2576A83F0();
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return sub_25758B6D8();
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_257480BC8(v0);
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  *(_DWORD *)(v0 + 20) = v1;
  *(unsigned char *)(v2 - 72) = v1;
  return sub_25758B4C0();
}

uint64_t OUTLINED_FUNCTION_42_0@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 16) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_43_2()
{
  return sub_2576A83D0();
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return v0;
}

void OUTLINED_FUNCTION_45_2()
{
  *(void *)(v0 + 72) = v1;
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  *(void *)(*(void *)(v0 + 64) + 16) = 0;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return swift_getObjectType();
}

uint64_t OptimizerStateDictionary.init(_:)@<X0>(void (*a1)(void, void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_2576A89D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_6_2();
  uint64_t v44 = v13;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = type metadata accessor for AnyLayerVariablePathCache();
  if (sub_2575E788C(a2, (uint64_t)&type metadata for Parameter, 1, a2))
  {
    uint64_t v21 = v47;
  }
  else
  {
    uint64_t v39 = v20;
    uint64_t v22 = sub_2576A76E0();
    uint64_t v53 = MEMORY[0x263F8EE88];
    uint64_t v54 = v22;
    uint64_t v52 = MEMORY[0x263F8EE88];
    uint64_t v41 = v7;
    OUTLINED_FUNCTION_5_18();
    v23();
    uint64_t v24 = swift_allocObject();
    uint64_t v42 = a2;
    *(void *)(v24 + 16) = a2;
    *(void *)(v24 + 24) = a3;
    uint64_t v40 = a3;
    *(unsigned char *)(v24 + 32) = 1;
    *(_DWORD *)(v24 + 36) = 4;
    sub_2574FE820();
    uint64_t WitnessTable = (uint64_t)v19;
    OUTLINED_FUNCTION_5_18();
    v25();
    swift_getWitnessTable();
    sub_2576A7C40();
    uint64_t v26 = v10;
    sub_2574FF0E8();
    uint64_t v27 = v48;
    if (v48)
    {
      uint64_t v28 = v49;
      uint64_t v29 = v50;
      uint64_t v30 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v31 = sub_2576A7810();
        MEMORY[0x25A2B84C0](v31, v9);
        swift_bridgeObjectRelease();
        uint64_t v48 = v27;
        sub_2576A7F50();
        swift_retain();
        sub_2576A7F10();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_10_12();
          sub_2574727D8();
          uint64_t v30 = v34;
        }
        unint64_t v33 = *(void *)(v30 + 16);
        unint64_t v32 = *(void *)(v30 + 24);
        if (v33 >= v32 >> 1)
        {
          OUTLINED_FUNCTION_8_15(v32);
          sub_2574727D8();
          uint64_t v30 = v35;
        }
        *(void *)(v30 + 16) = v33 + 1;
        *(void *)(v30 + 8 * v33 + 32) = v28;
        if ((v29 & 0x400000000) != 0) {
          sub_2575E8A18();
        }
        if (v29) {
          sub_2575E8A18();
        }
        swift_release();
        uint64_t v21 = v47;
        sub_2574FF0E8();
        uint64_t v27 = v48;
        uint64_t v28 = v49;
        uint64_t v29 = v50;
      }
      while (v48);
    }
    else
    {
      uint64_t v21 = v47;
    }
    uint64_t v47 = *(void (**)(void, void))(v45 + 8);
    v47(v17, v26);
    a2 = v42;
    uint64_t v48 = v42;
    uint64_t v49 = &type metadata for Parameter;
    uint64_t v50 = v40;
    uint64_t v51 = &protocol witness table for Parameter;
    type metadata accessor for LayerVariablePaths();
    sub_2575E7ADC();
    uint64_t v37 = v36;
    sub_2575E7B58();
    OUTLINED_FUNCTION_13_12();
    sub_2575E7B60(v37);
    v47(WitnessTable, v26);
    uint64_t v7 = v41;
  }
  type metadata accessor for OptimizerStateDictionary.ParameterKey();
  swift_getTupleTypeMetadata2();
  sub_2576A7E90();
  swift_getWitnessTable();
  uint64_t v48 = sub_2576A77E0();
  sub_2575E59F4();
  MEMORY[0x25A2B84C0]();
  swift_bridgeObjectRelease();
  sub_2576A7830();
  sub_2576A77D0();
  swift_release();
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(v7 + 8))(v21, a2);
  uint64_t *v46 = v48;
  return result;
}

uint64_t OptimizerStateDictionary.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  swift_retain();
  v11[0] = a1;
  v11[1] = sub_2576A8620();
  uint64_t v8 = type metadata accessor for OptimizerStateDictionary.ParameterKey();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A2B7E20](&v12, v11, v7, v8, &type metadata for Tensor, WitnessTable);
  uint64_t result = swift_release();
  if (!v12) {
    return a2(result);
  }
  *a3 = v12;
  return result;
}

uint64_t OptimizerStateDictionary.subscript.getter(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_retain();
  v7[0] = a1;
  v7[1] = sub_2576A8620();
  uint64_t v4 = type metadata accessor for OptimizerStateDictionary.ParameterKey();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A2B7E20](v7, v3, v4, &type metadata for Tensor, WitnessTable);
  return swift_release();
}

uint64_t OptimizerStateDictionary.subscript.setter(void *a1)
{
  if (*a1)
  {
    sub_2576A7810();
    swift_retain();
    sub_2576A8620();
    swift_bridgeObjectRelease();
    type metadata accessor for OptimizerStateDictionary.ParameterKey();
    swift_retain();
    swift_getWitnessTable();
    sub_2576A7830();
    sub_2576A7850();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_2576A7810();
    sub_2576A8620();
    swift_bridgeObjectRelease();
    type metadata accessor for OptimizerStateDictionary.ParameterKey();
    swift_getWitnessTable();
    sub_2576A7830();
    sub_2576A77B0();
    swift_release_n();
  }
  return swift_release();
}

uint64_t sub_2574C700C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for OptimizerStateDictionary.ParameterKey();
  swift_getTupleTypeMetadata2();
  sub_2576A7E90();
  swift_getWitnessTable();
  uint64_t v14 = sub_2576A77E0();
  sub_2576A89D0();
  sub_2576A7820();
  sub_2576A7830();
  uint64_t result = sub_2576A77D0();
  int64_t v5 = 0;
  uint64_t v6 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  for (v9 &= v9 - 1; ; uint64_t v9 = (v12 - 1) & v12)
  {
    swift_retain_n();
    swift_retain();
    sub_2576A8620();
    swift_retain();
    swift_retain();
    sub_2576A7850();
    swift_release();
    uint64_t result = swift_release_n();
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v11 >= v10) {
      goto LABEL_19;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v11);
    ++v5;
    if (!v12)
    {
      int64_t v5 = v11 + 1;
      if (v11 + 1 >= v10) {
        goto LABEL_19;
      }
      uint64_t v12 = *(void *)(v6 + 8 * v5);
      if (!v12) {
        break;
      }
    }
LABEL_16:
    ;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v10)
  {
LABEL_19:
    uint64_t result = swift_release();
    *a2 = v14;
    return result;
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    int64_t v5 = v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_19;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2574C727C@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for OptimizerStateDictionary();
  sub_2576A7810();
  OptimizerStateDictionary.subscript.getter(v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_2574C7304(uint64_t *a1)
{
  uint64_t v2 = *a1;
  type metadata accessor for OptimizerStateDictionary();
  swift_retain();
  swift_retain();
  return OptimizerStateDictionary.subscript.setter(&v2);
}

uint64_t (*OptimizerStateDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  OptimizerStateDictionary.subscript.getter(a2);
  return sub_2574C73E0;
}

uint64_t sub_2574C73E0(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = *a1;
    swift_retain();
    swift_retain();
    OptimizerStateDictionary.subscript.setter(&v3);
    return swift_release();
  }
  else
  {
    uint64_t v3 = *a1;
    swift_retain();
    return OptimizerStateDictionary.subscript.setter(&v3);
  }
}

uint64_t sub_2574C7480()
{
  return sub_2576A90A0();
}

uint64_t sub_2574C74A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a4) {
    return 0;
  }
  if (a1 == a3) {
    return 1;
  }
  sub_2576A8630();
  return MEMORY[0x25A2B8BF0](a1, a3) & 1;
}

uint64_t sub_2574C750C()
{
  return sub_2576A9100();
}

uint64_t sub_2574C7554()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2574C75AC(char a1)
{
  if (a1) {
    return 0x6C61566574617473;
  }
  else {
    return 0x79654B6574617473;
  }
}

uint64_t sub_2574C75F0()
{
  return sub_2574C750C();
}

uint64_t sub_2574C7600()
{
  return sub_2574C7480();
}

uint64_t sub_2574C7610()
{
  return sub_2576A9100();
}

uint64_t sub_2574C7658(uint64_t *a1, uint64_t *a2)
{
  return sub_2574C74A8(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_2574C7674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2574C76E8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_2574C7754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2574C77C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2574C7834@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574C7554();
  *a1 = result;
  return result;
}

uint64_t sub_2574C786C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574C75AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2574C78A0()
{
  return sub_2574C75AC(*v0);
}

uint64_t sub_2574C78B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_2574C75A8(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_2574C78E0()
{
  return sub_25747A82C();
}

uint64_t sub_2574C7908@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257478A88();
  *a1 = result;
  return result;
}

uint64_t sub_2574C7938(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2574C798C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t OptimizerStateDictionary.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v110 = a4;
  uint64_t v128 = sub_2576A89D0();
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v125 = v8;
  uint64_t v126 = v7;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_20();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v127 = (char *)v105 - v11;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_10_9();
  int v112 = v12;
  uint64_t v114 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v113 = v13;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_19_12((uint64_t)v105 - v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CE0);
  MEMORY[0x270FA5388](v16 - 8);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_10_9();
  uint64_t v119 = v18;
  sub_2576A8A80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v122 = v19;
  uint64_t v123 = v20;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v21);
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_19_12(v22);
  OUTLINED_FUNCTION_0_10();
  uint64_t v117 = v23;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)v105 - v28;
  uint64_t v120 = a3;
  uint64_t v121 = a2;
  type metadata accessor for OptimizerStateDictionary.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v118 = v31;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v105 - v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v35 = v124;
  uint64_t v36 = (uint64_t)a1;
  sub_2576A91F0();
  if (v35) {
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  v105[1] = v27;
  unint64_t v106 = v29;
  uint64_t v124 = 0;
  uint64_t v108 = v34;
  uint64_t v109 = v30;
  uint64_t v37 = a1[3];
  char v107 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v37);
  uint64_t v38 = sub_2576A91E0();
  uint64_t v39 = v119;
  OUTLINED_FUNCTION_16_10();
  uint64_t v40 = v122;
  uint64_t result = __swift_getEnumTagSinglePayload(v39, 1, v122);
  if (result == 1)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    return result;
  }
  uint64_t v42 = v123;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32);
  uint64_t v44 = v116;
  v43(v116, v39, v40);
  sub_2574BB120(v44, v38, &v131);
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v45(v44, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001378);
  OUTLINED_FUNCTION_24_8((uint64_t)&v136);
  uint64_t v46 = v121;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v55 = OUTLINED_FUNCTION_21_11();
    __swift_storeEnumTagSinglePayload(v55, v56, v57, v46);
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_14_0();
    v58();
    uint64_t v128 = sub_2576A8800();
    uint64_t v124 = OUTLINED_FUNCTION_33_0();
    *unint64_t v59 = type metadata accessor for OptimizerSerializationContext();
    uint64_t v127 = (char *)sub_2576A8CE0();
    *(void *)&long long v131 = 0;
    *((void *)&v131 + 1) = 0xE000000000000000;
    sub_2576A8730();
    OUTLINED_FUNCTION_18_8();
    uint64_t v60 = v115;
    OUTLINED_FUNCTION_16_10();
    uint64_t result = __swift_getEnumTagSinglePayload(v60, 1, v40);
    uint64_t v61 = v118;
    if (result != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CB8);
      uint64_t v62 = OUTLINED_FUNCTION_24_8((uint64_t)&v135);
      uint64_t v63 = v60;
      uint64_t v64 = v122;
      v43(v62, v63, v122);
      sub_2576A8A70();
      v45((uint64_t)&v131, v64);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A87F0();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_20_12();
      v65();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v108, v109);
LABEL_8:
      uint64_t v36 = (uint64_t)v107;
      return __swift_destroy_boxed_opaque_existential_1(v36);
    }
    goto LABEL_32;
  }
  __swift_storeEnumTagSinglePayload(v38, 0, 1, v46);
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v106, v38, v46);
  uint64_t v47 = type metadata accessor for AnyLayerVariablePathCache();
  uint64_t v48 = OUTLINED_FUNCTION_7_15();
  uint64_t v49 = v120;
  uint64_t v53 = sub_2575E788C(v48, v50, v51, v52);
  if (v53)
  {
    uint64_t v54 = v53;
  }
  else
  {
    uint64_t v123 = v47;
    *(void *)&long long v130 = sub_2576A76E0();
    *(void *)&long long v129 = MEMORY[0x263F8EE88];
    uint64_t v134 = MEMORY[0x263F8EE88];
    OUTLINED_FUNCTION_5_18();
    v66();
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v46;
    *(void *)(v67 + 24) = v49;
    *(unsigned char *)(v67 + 32) = 1;
    *(_DWORD *)(v67 + 36) = 4;
    sub_2574FE820();
    uint64_t v68 = v125;
    uint64_t v69 = v126;
    OUTLINED_FUNCTION_5_18();
    v70();
    swift_getWitnessTable();
    sub_2576A7C40();
    sub_2574FF0E8();
    uint64_t v71 = v131;
    if ((void)v131)
    {
      uint64_t v73 = *((void *)&v131 + 1);
      uint64_t v72 = v132;
      uint64_t v74 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v75 = sub_2576A7810();
        MEMORY[0x25A2B84C0](v75, v128);
        swift_bridgeObjectRelease();
        *(void *)&long long v131 = v71;
        sub_2576A7F50();
        swift_retain();
        sub_2576A7F10();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_9_17();
          sub_2574727D8();
          uint64_t v74 = v77;
        }
        unint64_t v76 = *(void *)(v74 + 16);
        if (v76 >= *(void *)(v74 + 24) >> 1)
        {
          sub_2574727D8();
          uint64_t v74 = v78;
        }
        *(void *)(v74 + 16) = v76 + 1;
        *(void *)(v74 + 8 * v76 + 32) = v73;
        if ((v72 & 0x400000000) != 0) {
          sub_2575E8A18();
        }
        uint64_t v69 = v126;
        if (v72) {
          sub_2575E8A18();
        }
        swift_release();
        uint64_t v68 = v125;
        sub_2574FF0E8();
        uint64_t v73 = *((void *)&v131 + 1);
        uint64_t v71 = v131;
        uint64_t v72 = v132;
      }
      while ((void)v131);
    }
    uint64_t v79 = *(void (**)(char *, uint64_t))(v68 + 8);
    v79(v127, v69);
    *(void *)&long long v131 = v121;
    *((void *)&v131 + 1) = &type metadata for Parameter;
    uint64_t v132 = v120;
    uint64_t v133 = &protocol witness table for Parameter;
    type metadata accessor for LayerVariablePaths();
    sub_2575E7ADC();
    uint64_t v54 = v80;
    OUTLINED_FUNCTION_7_15();
    sub_2575E7B58();
    OUTLINED_FUNCTION_13_12();
    sub_2575E7B60(v54);
    v79(v112, v69);
  }
  uint64_t v127 = (char *)v54;
  swift_retain();
  uint64_t v81 = sub_2575E7E60();
  swift_release();
  *(void *)&long long v131 = v81;
  *(void *)&long long v129 = sub_2575E59F4();
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
  uint64_t v83 = sub_2576A7F50();
  uint64_t v84 = sub_2574C9AF8((unint64_t *)&qword_26A0012E8, &qword_26A0010C0);
  uint64_t v85 = swift_getWitnessTable();
  sub_2576A9000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v129 = v130;
  *(void *)&long long v131 = v82;
  *((void *)&v131 + 1) = v83;
  uint64_t v132 = v84;
  uint64_t v133 = (_UNKNOWN **)v85;
  sub_2576A87A0();
  swift_getWitnessTable();
  uint64_t v86 = sub_2576A77F0();
  uint64_t v134 = sub_2576A76E0();
  LOBYTE(v130) = 0;
  sub_2574C9B4C(&qword_26A001E10);
  uint64_t v87 = v124;
  sub_2576A8D50();
  uint64_t v36 = (uint64_t)v107;
  if (v87)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_14_0();
    v88();
    OUTLINED_FUNCTION_14_0();
    v89();
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  uint64_t v125 = v85;
  uint64_t v126 = v131;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001E18);
  LOBYTE(v130) = 1;
  sub_2574C9BB0(&qword_26A001E20, (void (*)(void))sub_257490B4C);
  sub_2576A8D50();
  uint64_t v124 = 0;
  uint64_t v122 = v90;
  uint64_t v123 = v131;
  uint64_t v91 = *(void *)(v126 + 16);
  if (v91)
  {
    uint64_t v92 = (uint64_t *)(v126 + 40);
    uint64_t v93 = MEMORY[0x263F8D320];
    while (1)
    {
      uint64_t v94 = *v92;
      *(void *)&long long v131 = *(v92 - 1);
      *((void *)&v131 + 1) = v94;
      swift_bridgeObjectRetain_n();
      MEMORY[0x25A2B7E20](&v130, &v131, v86, MEMORY[0x263F8D310], v128, v93);
      swift_bridgeObjectRelease();
      uint64_t v95 = v130;
      if (!(void)v130) {
        break;
      }
      v92 += 2;
      swift_bridgeObjectRelease();
      *(void *)&long long v131 = v95;
      sub_2576A7F10();
      if (!--v91) {
        goto LABEL_29;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A8800();
    OUTLINED_FUNCTION_33_0();
    sub_2576A8CE0();
    *(void *)&long long v131 = 0;
    *((void *)&v131 + 1) = 0xE000000000000000;
    sub_2576A8730();
    OUTLINED_FUNCTION_18_8();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A87F0();
    OUTLINED_FUNCTION_9_13();
    OUTLINED_FUNCTION_20_12();
    v102();
    swift_willThrow();
    swift_release();
    OUTLINED_FUNCTION_23_10();
    OUTLINED_FUNCTION_14_0();
    v103();
    OUTLINED_FUNCTION_14_0();
    v104();
    goto LABEL_8;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v131 = v134;
  *(void *)&long long v129 = v123;
  uint64_t v96 = sub_2574C9AF8((unint64_t *)&qword_26A001E28, &qword_26A001E18);
  uint64_t v97 = v122;
  uint64_t v98 = v125;
  sub_2576A9000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v129 = v130;
  *(void *)&long long v131 = v83;
  *((void *)&v131 + 1) = v97;
  uint64_t v132 = v98;
  uint64_t v133 = (_UNKNOWN **)v96;
  sub_2576A87A0();
  swift_getWitnessTable();
  uint64_t v99 = sub_2576A77F0();
  sub_2574C700C(v99, (uint64_t *)&v131);
  swift_release();
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_14_0();
  v100();
  OUTLINED_FUNCTION_14_0();
  v101();
  *uint64_t v110 = v131;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
}

uint64_t OptimizerStateDictionary.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v134 = sub_2576A89D0();
  v116[1] = swift_getWitnessTable();
  int64_t v136 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v118 = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_10_9();
  uint64_t v117 = v10;
  uint64_t v122 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v121 = v11;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_19_12((uint64_t)v116 - v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001CE0);
  MEMORY[0x270FA5388](v14 - 8);
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v116 - v16;
  uint64_t v133 = sub_2576A8A80();
  OUTLINED_FUNCTION_0_10();
  uint64_t v135 = v18;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v116 - v21;
  OUTLINED_FUNCTION_0_10();
  uint64_t v126 = v23;
  MEMORY[0x270FA5388](v24);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_2_20();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_19_12(v26);
  uint64_t v27 = *(void *)(a2 + 24);
  uint64_t v132 = v5;
  uint64_t v128 = v27;
  type metadata accessor for OptimizerStateDictionary.CodingKeys();
  swift_getWitnessTable();
  uint64_t v131 = sub_2576A8E70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v124 = v28;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)v116 - v30;
  uint64_t v129 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  long long v130 = v31;
  sub_2576A9230();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v32 = v133;
  uint64_t v33 = sub_2576A9220();
  OUTLINED_FUNCTION_16_10();
  uint64_t result = __swift_getEnumTagSinglePayload((uint64_t)v17, 1, v32);
  if (result == 1)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    return result;
  }
  uint64_t v35 = v135;
  uint64_t v36 = *(void (**)(void))(v135 + 32);
  OUTLINED_FUNCTION_17_10();
  v36();
  sub_2574BB120((uint64_t)v22, v33, &v139);
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v35 + 8);
  v37(v22, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001378);
  OUTLINED_FUNCTION_24_8((uint64_t)&v148);
  uint64_t v38 = v132;
  if (!swift_dynamicCast())
  {
    uint64_t v47 = OUTLINED_FUNCTION_21_11();
    __swift_storeEnumTagSinglePayload(v47, v48, v49, v38);
    OUTLINED_FUNCTION_11_13();
    OUTLINED_FUNCTION_14_0();
    v50();
    uint64_t v134 = sub_2576A8830();
    int64_t v136 = OUTLINED_FUNCTION_33_0();
    uint64_t v52 = v51;
    uint64_t v53 = type metadata accessor for OptimizerSerializationContext();
    _OWORD v52[3] = swift_getMetatypeMetadata();
    *uint64_t v52 = v53;
    uint64_t v132 = sub_2576A8DC0();
    *(void *)&long long v139 = 0;
    *((void *)&v139 + 1) = 0xE000000000000000;
    sub_2576A8730();
    OUTLINED_FUNCTION_25_8();
    OUTLINED_FUNCTION_18_8();
    uint64_t v54 = v123;
    OUTLINED_FUNCTION_16_10();
    uint64_t result = __swift_getEnumTagSinglePayload(v54, 1, v32);
    if (result != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001348);
      OUTLINED_FUNCTION_24_8((uint64_t)&v147);
      OUTLINED_FUNCTION_17_10();
      v36();
      sub_2576A8A70();
      v37((char *)&v139, v32);
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A87F0();
      OUTLINED_FUNCTION_9_13();
      OUTLINED_FUNCTION_20_12();
      v55();
      swift_willThrow();
      goto LABEL_55;
    }
    goto LABEL_59;
  }
  __swift_storeEnumTagSinglePayload(v33, 0, 1, v38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v125, v33, v38);
  uint64_t v39 = type metadata accessor for AnyLayerVariablePathCache();
  uint64_t v40 = OUTLINED_FUNCTION_12_13();
  uint64_t v41 = v128;
  uint64_t v45 = sub_2575E788C(v40, v42, v43, v44);
  if (v45)
  {
    uint64_t v46 = v45;
  }
  else
  {
    uint64_t v135 = v39;
    *(void *)&long long v138 = sub_2576A76E0();
    *(void *)&long long v137 = MEMORY[0x263F8EE88];
    uint64_t v147 = MEMORY[0x263F8EE88];
    OUTLINED_FUNCTION_5_18();
    v56();
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v38;
    *(void *)(v57 + 24) = v41;
    *(unsigned char *)(v57 + 32) = 1;
    *(_DWORD *)(v57 + 36) = 4;
    sub_2574FE820();
    OUTLINED_FUNCTION_5_18();
    v58();
    swift_getWitnessTable();
    uint64_t v59 = v116[3];
    sub_2576A7C40();
    sub_2574FF0E8();
    uint64_t v60 = v139;
    if ((void)v139)
    {
      uint64_t v62 = *((void *)&v139 + 1);
      uint64_t v61 = v140;
      uint64_t v63 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v64 = sub_2576A7810();
        MEMORY[0x25A2B84C0](v64, v134);
        swift_bridgeObjectRelease();
        *(void *)&long long v139 = v60;
        sub_2576A7F50();
        swift_retain();
        sub_2576A7F10();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_10_12();
          sub_2574727D8();
          uint64_t v63 = v67;
        }
        unint64_t v66 = *(void *)(v63 + 16);
        unint64_t v65 = *(void *)(v63 + 24);
        if (v66 >= v65 >> 1)
        {
          OUTLINED_FUNCTION_8_15(v65);
          sub_2574727D8();
          uint64_t v63 = v68;
        }
        *(void *)(v63 + 16) = v66 + 1;
        *(void *)(v63 + 8 * v66 + 32) = v62;
        if ((v61 & 0x400000000) != 0) {
          sub_2575E8A18();
        }
        if (v61) {
          sub_2575E8A18();
        }
        swift_release();
        sub_2574FF0E8();
        uint64_t v62 = *((void *)&v139 + 1);
        uint64_t v60 = v139;
        uint64_t v61 = v140;
      }
      while ((void)v139);
    }
    uint64_t v69 = *(void (**)(uint64_t, int64_t))(v118 + 8);
    int64_t v70 = v136;
    v69(v59, v136);
    *(void *)&long long v139 = v132;
    *((void *)&v139 + 1) = &type metadata for Parameter;
    uint64_t v140 = v128;
    unint64_t v141 = &protocol witness table for Parameter;
    type metadata accessor for LayerVariablePaths();
    sub_2575E7ADC();
    uint64_t v46 = v71;
    OUTLINED_FUNCTION_12_13();
    sub_2575E7B58();
    OUTLINED_FUNCTION_13_12();
    sub_2575E7B60(v46);
    v69(v117, v70);
  }
  *(void *)&long long v139 = sub_2575E59F4();
  swift_retain();
  uint64_t v72 = sub_2575E7E60();
  uint64_t v121 = v46;
  swift_release();
  *(void *)&long long v137 = v72;
  uint64_t v73 = sub_2576A7F50();
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v76 = sub_2574C9AF8((unint64_t *)&qword_26A0012E8, &qword_26A0010C0);
  sub_2576A9000();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v137 = v138;
  *(void *)&long long v139 = v73;
  *((void *)&v139 + 1) = v74;
  uint64_t v120 = v74;
  uint64_t v140 = WitnessTable;
  unint64_t v141 = (_UNKNOWN **)v76;
  sub_2576A87A0();
  swift_getWitnessTable();
  uint64_t v127 = sub_2576A77F0();
  uint64_t v77 = type metadata accessor for OptimizerStateDictionary.ParameterKey();
  uint64_t v78 = swift_getWitnessTable();
  uint64_t v79 = v129;
  sub_2576A7810();
  uint64_t result = sub_2576A8AE0();
  uint64_t v80 = v142;
  int64_t v81 = v145;
  unint64_t v82 = v146;
  uint64_t v135 = v143;
  int64_t v136 = (unint64_t)(v144 + 64) >> 6;
  uint64_t v83 = MEMORY[0x263F8EE78];
  uint64_t v133 = MEMORY[0x263F8EE78];
  while (v82)
  {
    unint64_t v84 = __clz(__rbit64(v82));
    v82 &= v82 - 1;
    unint64_t v85 = v84 | (v81 << 6);
LABEL_38:
    uint64_t v90 = (uint64_t *)(*(void *)(v80 + 48) + 16 * v85);
    uint64_t v92 = *v90;
    uint64_t v91 = v90[1];
    *(void *)&long long v139 = v92;
    *((void *)&v139 + 1) = v91;
    swift_retain_n();
    MEMORY[0x25A2B7E20](&v138, &v139, v79, v77, &type metadata for Tensor, v78);
    swift_release();
    uint64_t v93 = v138;
    if ((void)v138)
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_17();
        sub_2574720D8();
        uint64_t v83 = v102;
      }
      unint64_t v94 = *(void *)(v83 + 16);
      uint64_t v95 = v94 + 1;
      if (v94 >= *(void *)(v83 + 24) >> 1)
      {
        uint64_t v123 = v94 + 1;
        sub_2574720D8();
        uint64_t v95 = v123;
        uint64_t v83 = v103;
      }
      *(void *)(v83 + 16) = v95;
      *(void *)(v83 + 8 * v94 + 32) = v93;
      *(void *)&long long v138 = v92;
      swift_retain();
      MEMORY[0x25A2B7E20](&v139, &v138, v127, v134, MEMORY[0x263F8D310], MEMORY[0x263F8DAB8]);
      swift_release();
      uint64_t v96 = *((void *)&v139 + 1);
      if (!*((void *)&v139 + 1))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2576A8830();
        int64_t v136 = OUTLINED_FUNCTION_33_0();
        int v112 = v111;
        uint64_t v135 = (uint64_t)v111 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A001348) + 48);
        uint64_t v113 = type metadata accessor for OptimizerSerializationContext();
        v112[3] = swift_getMetatypeMetadata();
        *int v112 = v113;
        sub_2576A8DC0();
        *(void *)&long long v139 = 0;
        *((void *)&v139 + 1) = 0xE000000000000000;
        sub_2576A8730();
        OUTLINED_FUNCTION_25_8();
        OUTLINED_FUNCTION_18_8();
        *(void *)&long long v138 = v92;
        sub_2576A8F00();
        sub_2576A7B00();
        sub_2576A87F0();
        OUTLINED_FUNCTION_9_13();
        OUTLINED_FUNCTION_20_12();
        v114();
        swift_willThrow();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_14_0();
        v115();
        goto LABEL_55;
      }
      uint64_t v122 = v139;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v123 = v83;
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v98 = v133;
      }
      else
      {
        OUTLINED_FUNCTION_9_17();
        sub_257471F40();
        uint64_t v98 = v104;
      }
      unint64_t v99 = *(void *)(v98 + 16);
      uint64_t v100 = v99 + 1;
      if (v99 >= *(void *)(v98 + 24) >> 1)
      {
        uint64_t v133 = v99 + 1;
        sub_257471F40();
        uint64_t v100 = v133;
        uint64_t v98 = v105;
      }
      *(void *)(v98 + 16) = v100;
      uint64_t v133 = v98;
      uint64_t v101 = v98 + 16 * v99;
      *(void *)(v101 + 32) = v122;
      *(void *)(v101 + 40) = v96;
      swift_release();
      uint64_t result = swift_release();
      uint64_t v79 = v129;
      uint64_t v83 = v123;
    }
    else
    {
      uint64_t result = swift_release();
    }
  }
  int64_t v86 = v81 + 1;
  if (__OFADD__(v81, 1))
  {
    __break(1u);
    goto LABEL_58;
  }
  if (v86 >= v136) {
    goto LABEL_51;
  }
  unint64_t v87 = *(void *)(v135 + 8 * v86);
  int64_t v88 = v81 + 1;
  if (v87) {
    goto LABEL_37;
  }
  int64_t v88 = v81 + 2;
  if (v81 + 2 >= v136) {
    goto LABEL_51;
  }
  unint64_t v87 = *(void *)(v135 + 8 * v88);
  if (v87) {
    goto LABEL_37;
  }
  int64_t v88 = v81 + 3;
  if (v81 + 3 >= v136) {
    goto LABEL_51;
  }
  unint64_t v87 = *(void *)(v135 + 8 * v88);
  if (v87) {
    goto LABEL_37;
  }
  int64_t v88 = v81 + 4;
  if (v81 + 4 >= v136) {
    goto LABEL_51;
  }
  unint64_t v87 = *(void *)(v135 + 8 * v88);
  if (v87) {
    goto LABEL_37;
  }
  int64_t v88 = v81 + 5;
  if (v81 + 5 >= v136) {
    goto LABEL_51;
  }
  unint64_t v87 = *(void *)(v135 + 8 * v88);
  if (v87)
  {
LABEL_37:
    unint64_t v82 = (v87 - 1) & v87;
    unint64_t v85 = __clz(__rbit64(v87)) + (v88 << 6);
    int64_t v81 = v88;
    goto LABEL_38;
  }
  int64_t v89 = v81 + 6;
  while (v89 < v136)
  {
    unint64_t v87 = *(void *)(v135 + 8 * v89++);
    if (v87)
    {
      int64_t v88 = v89 - 1;
      goto LABEL_37;
    }
  }
LABEL_51:
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)&long long v139 = v133;
  LOBYTE(v138) = 0;
  sub_2574C9B4C(&qword_26A001E30);
  uint64_t v106 = v119;
  sub_2576A8E40();
  swift_bridgeObjectRelease();
  if (v106)
  {
    swift_bridgeObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_14_0();
    v107();
  }
  else
  {
    *(void *)&long long v139 = v83;
    LOBYTE(v138) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001E18);
    sub_2574C9BB0(qword_26A001E38, (void (*)(void))sub_257490B00);
    sub_2576A8E40();
    uint64_t v108 = v126;
    uint64_t v109 = v125;
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v132);
  }
  OUTLINED_FUNCTION_11_13();
LABEL_55:
  OUTLINED_FUNCTION_14_0();
  return v110();
}

uint64_t sub_2574C9A68@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return OptimizerStateDictionary.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_2574C9A88(void *a1, uint64_t a2)
{
  return OptimizerStateDictionary.encode(to:)(a1, a2);
}

uint64_t sub_2574C9AA4(uint64_t a1, _DWORD *a2)
{
  return sub_2575E79C8(a1, a2, *(unsigned char *)(v2 + 32), *(_DWORD *)(v2 + 36));
}

uint64_t type metadata accessor for OptimizerStateDictionary.ParameterKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for OptimizerStateDictionary.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574C9AF8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C9B4C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0010C0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C9BB0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001E18);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574C9C28()
{
  return 16;
}

__n128 sub_2574C9C34(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2574C9C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t type metadata accessor for OptimizerStateDictionary()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_2574C9C60(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574C9D2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

void *sub_2574C9D54(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *sub_2574C9D84(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *sub_2574C9DD4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for LSTM.State(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LSTM.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2574C9E90()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C9EAC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C9EC8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574C9EE4()
{
  return swift_getWitnessTable();
}

void OUTLINED_FUNCTION_2_20()
{
  *(void *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_3_18()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t OUTLINED_FUNCTION_7_15()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_8_15@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_10()
{
  return sub_2576A8A60();
}

void OUTLINED_FUNCTION_19_12(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_21_11()
{
  *(void *)(v2 - 208) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_10()
{
  return *(void *)(v0 - 368);
}

uint64_t OUTLINED_FUNCTION_24_8@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

void OUTLINED_FUNCTION_25_8()
{
  uint64_t v1 = *(void *)(v0 - 152);
  *(void *)(v0 - 160) = *(void *)(v0 - 160);
  *(void *)(v0 - 152) = v1;
}

uint64_t sub_2574CA050()
{
  sub_2574CA3B0();
  uint64_t result = sub_2576A8490();
  qword_26A001FC0 = result;
  return result;
}

id static OS_os_log.backend.getter()
{
  return sub_2574CA140(&qword_26A0008E0, (void **)&qword_26A001FC0);
}

uint64_t sub_2574CA0D4()
{
  sub_2574CA3B0();
  OUTLINED_FUNCTION_0_23();
  uint64_t result = sub_2576A8490();
  qword_26A001FC8 = result;
  return result;
}

id static OS_os_log.runtime.getter()
{
  return sub_2574CA140(&qword_26A0008E8, (void **)&qword_26A001FC8);
}

id sub_2574CA140(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  return v3;
}

uint64_t sub_2574CA18C()
{
  uint64_t v0 = sub_2576A7650();
  __swift_allocate_value_buffer(v0, qword_26A030A28);
  __swift_project_value_buffer(v0, (uint64_t)qword_26A030A28);
  OUTLINED_FUNCTION_0_23();
  return sub_2576A7640();
}

uint64_t sub_2574CA1EC(uint64_t a1)
{
  return sub_2574CA268(a1, qword_26A001FD0, &qword_26A0008E8, (id *)&qword_26A001FC8);
}

uint64_t static OSSignposter.runtime.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2574CA318(&qword_26A0008F8, (uint64_t)qword_26A001FD0, a1);
}

uint64_t sub_2574CA23C(uint64_t a1)
{
  return sub_2574CA268(a1, qword_26A001FE8, &qword_26A0008E0, (id *)&qword_26A001FC0);
}

uint64_t sub_2574CA268(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_2576A75D0();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_2576A75B0();
}

uint64_t static OSSignposter.backend.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2574CA318(&qword_26A000900, (uint64_t)qword_26A001FE8, a1);
}

uint64_t sub_2574CA318@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_2576A75D0();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

unint64_t sub_2574CA3B0()
{
  unint64_t result = qword_26A002000;
  if (!qword_26A002000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A002000);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_0_23()
{
  return 0xD000000000000019;
}

__n128 *sub_2574CA410(void *a1, uint64_t a2)
{
  uint64_t v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  id v8 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_1_25(v8, (__n128)xmmword_2576AC2A0);
  if (v3) {
    id v9 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v9 = *(id *)(a2 + 32);
  }
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2576ABB00;
  *(void *)(v11 + 32) = sub_2576A80E0();
  *(void *)(v11 + 40) = sub_2576A80E0();
  sub_2576A7E20();
  sub_2574CA6FC();
  uint64_t v12 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  int v13 = *(unsigned __int8 *)(v5 + 64);
  BOOL v14 = v13 != 2;
  LOBYTE(v11) = v13 & 1;
  OUTLINED_FUNCTION_0_24();
  uint64_t v16 = *(void *)(v5 + 24);
  uint64_t v15 = *(void *)(v5 + 32);
  sub_2576A7810();
  id v17 = sub_2574CA73C((uint64_t)v10, (uint64_t)v12, v14, 1, v11, v4, v16, v15, a1, (SEL *)&selRef_resizeTensor_size_mode_centerResult_alignCorners_layout_name_);

  v8[2].n128_u64[0] = (unint64_t)v17;
  sub_2576A7E20();
  return v8;
}

__n128 *sub_2574CA58C(void *a1, uint64_t a2)
{
  return sub_2574CA410(a1, a2);
}

__n128 *sub_2574CA5A4(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v7 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_1_25(v7, (__n128)xmmword_2576AC2A0);
  if (v3) {
    id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  id v9 = v8;
  sub_257582858(1, v3 == 0, a2);
  if (v3) {
    id v10 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v10 = *(id *)(a2 + 40);
  }
  uint64_t v11 = v10;
  int v12 = *(unsigned __int8 *)(v2 + 64);
  BOOL v13 = v12 != 2;
  char v14 = v12 & 1;
  OUTLINED_FUNCTION_0_24();
  uint64_t v16 = *(void *)(v2 + 24);
  uint64_t v15 = *(void *)(v2 + 32);
  sub_2576A7810();
  id v17 = sub_2574CA73C((uint64_t)v9, (uint64_t)v11, v13, 1, v14, v4, v16, v15, a1, (SEL *)&selRef_resizeWithGradientTensor_input_mode_centerResult_alignCorners_layout_name_);

  v7[2].n128_u64[0] = (unint64_t)v17;
  sub_2576A7E20();
  return v7;
}

__n128 *sub_2574CA6E4(void *a1, uint64_t a2)
{
  return sub_2574CA5A4(a1, a2);
}

unint64_t sub_2574CA6FC()
{
  unint64_t result = qword_26A001870;
  if (!qword_26A001870)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A001870);
  }
  return result;
}

id sub_2574CA73C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, SEL *a10)
{
  uint64_t v16 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(a9, *a10, a1, a2, a3, a4 & 1, a5 & 1, a6, v16);

  return v17;
}

uint64_t OUTLINED_FUNCTION_1_25(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_257582858(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t sub_2574CA830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 1) {
    goto LABEL_10;
  }
  uint64_t v13 = sub_2576A8130();
  uint64_t v14 = v13 + a1;
  if (__OFADD__(v13, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    uint64_t result = sub_2576A8B60();
    __break(1u);
    return result;
  }
  if (v16 / a1 > 1)
  {
    v20[0] = a4;
    v20[1] = a5;
    uint64_t v21 = a6;
    uint64_t v22 = MEMORY[0x270FA5388](v13);
    uint64_t v23 = v19;
    uint64_t v24 = v6;
    uint64_t v25 = a2;
    uint64_t v26 = a3;
    return sub_2574ED2CC();
  }
  else
  {
    MEMORY[0x270FA5388](v13);
    uint64_t v21 = a4;
    uint64_t v22 = a5;
    uint64_t v23 = a6;
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    return sub_257495BE0((void (*)(char *, uint64_t))sub_2574CB144, (uint64_t)v20, a4, a5, MEMORY[0x263F8E628], a6, MEMORY[0x263F8E658], v17);
  }
}

uint64_t sub_2574CA9C8(uint64_t a1, void *a2, uint64_t a3)
{
  *a2 = a3;
  uint64_t result = sub_2576A84E0();
  if (result)
  {
    unint64_t v4 = sub_2574CB174();
    MEMORY[0x270FA5388](v4);
    return sub_2576A8350();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574CAAB0(uint64_t a1, void *a2)
{
  return sub_2574CA9C8(a1, a2, *(void *)(v2 + 40));
}

uint64_t sub_2574CAAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v72 = a7;
  uint64_t v71 = a6;
  uint64_t v75 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v57 - v17;
  uint64_t v73 = a9;
  uint64_t v18 = *(void *)(a9 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v68 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a10;
  uint64_t v76 = a8;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v77 = (char *)&v57 - v26;
  uint64_t v27 = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (!a3)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v27 == 0x8000000000000000 && a3 == -1) {
    goto LABEL_25;
  }
  uint64_t v29 = a1 + 1;
  if (__OFADD__(a1, 1)) {
    goto LABEL_22;
  }
  uint64_t v30 = v29 * a2;
  if ((unsigned __int128)(v29 * (__int128)a2) >> 64 == (v29 * a2) >> 63)
  {
    if (v30 == 0x8000000000000000 && a3 == -1) {
      goto LABEL_26;
    }
    uint64_t v78 = v15;
    uint64_t v32 = v27 / a3;
    uint64_t v33 = v30 / a3;
    uint64_t v34 = v18;
    uint64_t v35 = v25;
    sub_2576A8120();
    sub_2576A8140();
    uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
    uint64_t v60 = v35 + 8;
    uint64_t v59 = v36;
    v36(v23, v20);
    uint64_t v37 = v34;
    uint64_t v38 = *(void *)(v34 + 72);
    uint64_t v39 = a5 + v38 * v32;
    uint64_t v67 = v38;
    uint64_t v40 = a5 + v38 * v33;
    *(void *)&long long v79 = v39;
    *(void *)&long long v86 = v40;
    uint64_t v41 = sub_2576A84B0();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t result = sub_2576A7950();
    if ((result & 1) == 0) {
      goto LABEL_24;
    }
    uint64_t v58 = v20;
    *(void *)&long long v79 = v39;
    *((void *)&v79 + 1) = v40;
    uint64_t v43 = sub_2576A8250();
    uint64_t v44 = swift_getWitnessTable();
    unint64_t v45 = sub_2574BEF08();
    sub_2576A8260();
    uint64_t v46 = v86;
    *(void *)&long long v86 = v39;
    *((void *)&v86 + 1) = v40;
    uint64_t v85 = v46;
    sub_2576A8270();
    if (v46 == (void)v79) {
      return v59(v77, v58);
    }
    uint64_t v63 = (void (**)(char *))(v78 + 16);
    uint64_t v62 = (void (**)(char *, uint64_t))(v78 + 8);
    uint64_t v61 = (void (**)(uint64_t, char *, uint64_t))(v37 + 32);
    uint64_t v66 = v41;
    uint64_t v65 = v43;
    uint64_t v64 = v44;
    uint64_t v47 = v69;
    while (1)
    {
      long long v79 = v86;
      sub_2576A8260();
      sub_2576A8270();
      uint64_t result = sub_2576A7950();
      if ((result & 1) == 0) {
        break;
      }
      v84[0] = v83;
      v84[1] = v82;
      uint64_t v80 = v44;
      unint64_t v81 = v45;
      uint64_t v48 = swift_getWitnessTable();
      MEMORY[0x25A2B8770](&v85, v84, v43, v48);
      uint64_t v85 = v46 + v67;
      uint64_t v49 = (void (*)(long long *, void))sub_2576A8200();
      uint64_t v50 = *v63;
      uint64_t v78 = v46;
      unint64_t v51 = v45;
      uint64_t v52 = AssociatedTypeWitness;
      v50(v47);
      v49(&v79, 0);
      uint64_t v53 = WitnessTable;
      uint64_t v54 = v68;
      v71(v47);
      uint64_t v55 = v52;
      unint64_t v45 = v51;
      (*v62)(v47, v55);
      uint64_t v56 = v54;
      uint64_t WitnessTable = v53;
      (*v61)(v78, v56, v73);
      uint64_t v43 = v65;
      uint64_t v44 = v64;
      sub_2576A8160();
      uint64_t v46 = v85;
      sub_2576A8270();
      if (v46 == (void)v79) {
        return v59(v77, v58);
      }
    }
    __break(1u);
    goto LABEL_20;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2574CB144()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

unint64_t sub_2574CB174()
{
  unint64_t result = qword_26A002008;
  if (!qword_26A002008)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A002008);
  }
  return result;
}

uint64_t sub_2574CB1B4(uint64_t a1)
{
  return sub_2574CAAE4(a1, *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void (**)(char *))(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_2574CB1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  a22 = v25;
  a23 = v26;
  uint64_t v102 = v24;
  uint64_t v28 = v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v30 = OUTLINED_FUNCTION_24_9(v29);
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_6_2();
  uint64_t v103 = v31;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v32);
  uint64_t v104 = (char *)&v90 - v33;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_10_9();
  uint64_t v105 = v35;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  uint64_t v37 = OUTLINED_FUNCTION_24_9(v36);
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_8_0();
  uint64_t v40 = v39 - v38;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_6_2();
  uint64_t v107 = v44;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_7_11();
  uint64_t v108 = v46;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v47);
  OUTLINED_FUNCTION_10_9();
  uint64_t v49 = v48;
  uint64_t v50 = *(void *)(v23 + 40);
  uint64_t v51 = sub_2575CA350();
  uint64_t v52 = sub_2574BAF20(v51, v28);
  if (!v52) {
    goto LABEL_6;
  }
  uint64_t v54 = v52;
  uint64_t v106 = v53;
  uint64_t v100 = v42;
  uint64_t v55 = *(void *)(v23 + 48);
  uint64_t v56 = sub_2575CA350();
  uint64_t v57 = sub_2574BAF20(v56, v28);
  if (!v57)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257480520();
    uint64_t v62 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B0080, v62, v63);
    goto LABEL_12;
  }
  uint64_t v97 = v58;
  uint64_t v99 = v57;
  if (*(void *)(v23 + 56))
  {
    uint64_t v59 = sub_2575CA350();
    uint64_t v60 = sub_2574BAF20(v59, v28);
    uint64_t v96 = v61;
  }
  else
  {
    uint64_t v60 = 0;
    uint64_t v96 = 0;
  }
  uint64_t v98 = v60;
  type metadata accessor for NativeTensorStorage();
  v109[0] = *(void *)(v23 + 64);
  a13 = *(unsigned char *)(v23 + 72);
  sub_2576A7810();
  uint64_t v64 = v102;
  sub_25754DDC0(v109, (uint64_t)&a13, 0);
  uint64_t v102 = v65;
  uint64_t v95 = v64;
  uint64_t v66 = *(void *)(v50 + 152);
  if (!*(void *)(v66 + 16))
  {
    OUTLINED_FUNCTION_8_16();
    goto LABEL_16;
  }
  uint64_t v93 = v23;
  uint64_t v92 = *(void *)(v66 + 32);
  swift_getObjectType();
  OUTLINED_FUNCTION_30_6();
  uint64_t v101 = v54;
  uint64_t v94 = v67;
  OUTLINED_FUNCTION_11_10();
  v68();
  OUTLINED_FUNCTION_8_1(v109, v49);
  uint64_t v69 = *(void *)(v55 + 152);
  uint64_t v70 = sub_2576A7810();
  sub_257532CD0(v70);
  uint64_t v71 = *MEMORY[0x263F8C9C0];
  uint64_t v72 = sub_2576A6990();
  OUTLINED_FUNCTION_16_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104))(v40, v71, v72);
  __swift_storeEnumTagSinglePayload(v40, 0, 1, v72);
  sub_2576A6DE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v74 = swift_allocObject();
  long long v90 = xmmword_2576ABB10;
  *(_OWORD *)(v74 + 16) = xmmword_2576ABB10;
  if (!*(void *)(v69 + 16))
  {
    OUTLINED_FUNCTION_17_11();
LABEL_16:
    sub_2576A7810();
    OUTLINED_FUNCTION_14_13();
  }
  *(void *)(v74 + 32) = *(void *)(v69 + 32);
  __swift_storeEnumTagSinglePayload(v40, 1, 1, v72);
  sub_2576A6DE0();
  uint64_t v75 = v100;
  uint64_t v76 = *(void (**)(void))(v100 + 16);
  uint64_t v77 = v105;
  OUTLINED_FUNCTION_3_4();
  v76();
  OUTLINED_FUNCTION_2_6(v77);
  uint64_t v78 = (uint64_t)v104;
  OUTLINED_FUNCTION_3_4();
  v76();
  OUTLINED_FUNCTION_2_6(v78);
  uint64_t v91 = v49;
  uint64_t v79 = v103;
  OUTLINED_FUNCTION_3_4();
  v76();
  uint64_t v80 = OUTLINED_FUNCTION_2_6(v79);
  uint64_t v81 = MEMORY[0x270FA5388](v80);
  uint64_t v82 = v93;
  *((void *)&v90 - 4) = v102;
  *((void *)&v90 - 3) = v82;
  *((void *)&v90 - 2) = v92;
  MEMORY[0x270FA5388](v81);
  uint64_t v83 = v97;
  *((void *)&v90 - 8) = v99;
  *((void *)&v90 - 7) = v83;
  uint64_t v84 = v98;
  *((void *)&v90 - 6) = v78;
  *((void *)&v90 - 5) = v84;
  *((void *)&v90 - 4) = v96;
  *((void *)&v90 - 3) = v79;
  *((void *)&v90 - 2) = sub_2574D10AC;
  *((void *)&v90 - 1) = v85;
  uint64_t v86 = v95;
  sub_257648508((uint64_t)sub_2574D10CC, (uint64_t)(&v90 - 5), MEMORY[0x263F8EE60] + 8, (uint64_t)&a15);
  if (v86)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v79);
    sub_257480BC8(v78);
    sub_257480BC8(v77);
    unint64_t v87 = *(void (**)(void))(v75 + 8);
    OUTLINED_FUNCTION_5_3();
    v87();
    OUTLINED_FUNCTION_5_3();
    v87();
    OUTLINED_FUNCTION_5_3();
    v87();
    swift_release();
  }
  else
  {
    sub_257480BC8(v79);
    sub_257480BC8(v78);
    sub_257480BC8(v77);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v88 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v88 + 16) = v90;
    *(void *)(v88 + 32) = v102;
    *(void *)(v88 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    int64_t v89 = *(void (**)(void))(v75 + 8);
    OUTLINED_FUNCTION_5_3();
    v89();
    OUTLINED_FUNCTION_5_3();
    v89();
    OUTLINED_FUNCTION_5_3();
    v89();
  }
LABEL_12:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574CB830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2576A6DD0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a4 + 16);
  sub_2576A7810();
  sub_25758A634(&v16, 0, 2, (uint64_t)v13);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v10);
  swift_retain();
  sub_2576486F4();
  sub_257480BC8((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_2574CB9F0()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v0 = sub_2576A6BF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = v5 - v4;
  sub_2576A6C50();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, *MEMORY[0x263F8CB58], v0);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6C40())
  {
    sub_2576A69B0();
    swift_release();
  }
  else
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *uint64_t v7 = xmmword_2576B0080;
    OUTLINED_FUNCTION_11_14((uint64_t)v7, 4);
  }
  OUTLINED_FUNCTION_7_1();
}

#error "2574CBB5C: call analysis failed (funcsize=6)"

void sub_2574CBB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v87)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v88)(void);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(void);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(void);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(void);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(void);
  void *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t ObjectType;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void *v154;
  char v155;
  uint64_t v156[7];
  uint64_t v157;

  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  uint64_t v145 = v21;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  unint64_t v146 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_7_11();
  uint64_t v147 = v31;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_7_11();
  uint64_t v149 = v33;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_10_9();
  uint64_t v150 = v35;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  uint64_t v37 = OUTLINED_FUNCTION_24_9(v36);
  MEMORY[0x270FA5388](v37);
  OUTLINED_FUNCTION_36_3();
  uint64_t v38 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v40 = v39;
  MEMORY[0x270FA5388](v41);
  OUTLINED_FUNCTION_6_2();
  uint64_t v151 = v42;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_7_11();
  uint64_t v153 = v44;
  OUTLINED_FUNCTION_13_1();
  uint64_t v46 = MEMORY[0x270FA5388](v45);
  uint64_t v48 = (char *)&v127 - v47;
  MEMORY[0x270FA5388](v46);
  uint64_t v50 = (char *)&v127 - v49;
  uint64_t v154 = v20;
  uint64_t v51 = sub_2575CA350();
  uint64_t v52 = sub_2574BAF20(v51, v26);
  if (!v52) {
    goto LABEL_10;
  }
  uint64_t v54 = v52;
  uint64_t v148 = v53;
  uint64_t v142 = v154[6];
  uint64_t v55 = sub_2575CA350();
  uint64_t v56 = sub_2574BAF20(v55, v26);
  if (!v56)
  {
LABEL_9:
    swift_unknownObjectRelease();
LABEL_10:
    sub_257480520();
    uint64_t v66 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B0090, v66, v67);
    goto LABEL_11;
  }
  uint64_t v144 = v57;
  uint64_t v152 = v56;
  uint64_t v133 = (uint64_t *)v154[7];
  uint64_t v58 = sub_2575CA350();
  uint64_t v59 = sub_2574BAF20(v58, v26);
  unint64_t v141 = v60;
  if (!v59)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  uint64_t v140 = v59;
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_38_3();
  v61();
  if (LOBYTE(v156[0]) > 0xCu || (OUTLINED_FUNCTION_26_6(), v62))
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *uint64_t v126 = 0xD000000000000014;
    v126[1] = 0x80000002576C73E0;
    OUTLINED_FUNCTION_11_14((uint64_t)v126, 3);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  uint64_t v63 = v154[8];
  long long v138 = v40;
  uint64_t v143 = v50;
  int64_t v136 = v48;
  uint64_t v128 = v22;
  if (v63)
  {
    uint64_t v64 = sub_2575CA350();
    long long v137 = sub_2574BAF20(v64, v26);
    uint64_t v132 = v65;
  }
  else
  {
    long long v137 = 0;
    uint64_t v132 = 0;
  }
  uint64_t v68 = type metadata accessor for NativeTensorStorage();
  uint64_t v69 = swift_getObjectType();
  uint64_t v70 = v144 + 16;
  uint64_t v129 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v144 + 16);
  v129(v156, v69, v144);
  OUTLINED_FUNCTION_38_3();
  v71();
  uint64_t v72 = (uint64_t *)OUTLINED_FUNCTION_22_11();
  uint64_t v73 = v145;
  sub_25754DDC0(v72, v74, v75);
  uint64_t v135 = v76;
  swift_getObjectType();
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v77();
  OUTLINED_FUNCTION_38_3();
  v78();
  uint64_t v79 = (uint64_t *)OUTLINED_FUNCTION_22_11();
  uint64_t v145 = v68;
  sub_25754DDC0(v79, v80, v81);
  uint64_t v134 = v82;
  uint64_t v83 = v73;
  a10 = 0;
  if (v137)
  {
    uint64_t v84 = swift_getObjectType();
    uint64_t v131 = v70;
    uint64_t v85 = v69;
    uint64_t v86 = v132;
    unint64_t v87 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v132 + 16);
    swift_unknownObjectRetain();
    v87(v156, v84, v86);
    uint64_t v69 = v85;
    OUTLINED_FUNCTION_38_3();
    v88();
    sub_25754DDC0(v156, (uint64_t)&v155, 0);
    long long v90 = v89;
    uint64_t v83 = v73;
    swift_unknownObjectRelease();
    a10 = v90;
  }
  uint64_t v91 = v128;
  uint64_t v131 = v83;
  uint64_t v92 = *(void *)(v142 + 152);
  if (!*(void *)(v92 + 16))
  {
    OUTLINED_FUNCTION_8_16();
    goto LABEL_26;
  }
  uint64_t v142 = v38;
  long long v130 = *(void *)(v92 + 32);
  OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_11_10();
  v93();
  uint64_t v145 = v54;
  OUTLINED_FUNCTION_8_1(v156, (uint64_t)v143);
  v129(v156, v69, v144);
  uint64_t v94 = (uint64_t)v136;
  OUTLINED_FUNCTION_8_1(v156, (uint64_t)v136);
  uint64_t v95 = v133[19];
  uint64_t v96 = sub_2576A7810();
  sub_257532CD0(v96);
  uint64_t v97 = *MEMORY[0x263F8C9C0];
  uint64_t v98 = sub_2576A6990();
  OUTLINED_FUNCTION_16_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 104))(v91, v97, v98);
  __swift_storeEnumTagSinglePayload(v91, 0, 1, v98);
  sub_2576A6DE0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_2576ABB10;
  if (!*(void *)(v95 + 16))
  {
    OUTLINED_FUNCTION_17_11();
LABEL_26:
    sub_2576A7810();
    OUTLINED_FUNCTION_14_13();
  }
  *(void *)(v100 + 32) = *(void *)(v95 + 32);
  __swift_storeEnumTagSinglePayload(v91, 1, 1, v98);
  uint64_t v101 = v151;
  sub_2576A6DE0();
  uint64_t v102 = *(void (**)(void))(v138 + 16);
  uint64_t v103 = v150;
  OUTLINED_FUNCTION_9_18();
  v102();
  OUTLINED_FUNCTION_25_9(v103);
  uint64_t v104 = v149;
  OUTLINED_FUNCTION_9_18();
  v102();
  OUTLINED_FUNCTION_25_9(v104);
  uint64_t v105 = v147;
  OUTLINED_FUNCTION_9_18();
  v102();
  OUTLINED_FUNCTION_25_9(v105);
  uint64_t v106 = v146;
  OUTLINED_FUNCTION_9_18();
  v102();
  uint64_t v107 = OUTLINED_FUNCTION_25_9(v106);
  uint64_t v133 = &v127;
  uint64_t v108 = MEMORY[0x270FA5388](v107);
  *(&v127 - 12) = v135;
  *(&v127 - 11) = v94;
  uint64_t v109 = v153;
  *(&v127 - 10) = v134;
  *(&v127 - 9) = v109;
  *(&v127 - 8) = (uint64_t)&a10;
  *(&v127 - 7) = v101;
  uint64_t v110 = v148;
  *(&v127 - 6) = v145;
  *(&v127 - 5) = v110;
  uint64_t v111 = v154;
  *(&v127 - 4) = (uint64_t)v143;
  *(&v127 - 3) = (uint64_t)v111;
  *(&v127 - 2) = v130;
  MEMORY[0x270FA5388](v108);
  int v112 = v144;
  *(&v127 - 12) = v152;
  *(&v127 - 11) = v112;
  uint64_t v113 = v140;
  *(&v127 - 10) = v114;
  *(&v127 - 9) = v113;
  *(&v127 - 8) = v141;
  *(&v127 - 7) = v105;
  uint64_t v115 = v132;
  *(&v127 - 6) = v137;
  *(&v127 - 5) = v115;
  *(&v127 - 4) = v106;
  *(&v127 - 3) = (uint64_t)sub_2574D117C;
  *(&v127 - 2) = v116;
  uint64_t v117 = v131;
  sub_257648508((uint64_t)sub_2574D11BC, (uint64_t)(&v127 - 14), MEMORY[0x263F8EE60] + 8, (uint64_t)&v157);
  if (v117)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_41_2();
    sub_257480BC8(v105);
    sub_257480BC8(v149);
    sub_257480BC8(v150);
    swift_release();
    swift_release();
    uint64_t v118 = *(void (**)(void))(v138 + 8);
    OUTLINED_FUNCTION_20_13();
    v118();
    OUTLINED_FUNCTION_20_13();
    v118();
    OUTLINED_FUNCTION_20_13();
    v118();
    OUTLINED_FUNCTION_20_13();
    v118();
    swift_release();
  }
  else
  {
    uint64_t v119 = v138;
    OUTLINED_FUNCTION_41_2();
    sub_257480BC8(v105);
    sub_257480BC8(v149);
    sub_257480BC8(v150);
    uint64_t v120 = a10;
    if (a10)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v121 = swift_allocObject();
      *(_OWORD *)(v121 + 16) = xmmword_2576ABB50;
      uint64_t v122 = OUTLINED_FUNCTION_26_8((void *)v121, (uint64_t)&off_270667760);
      v122[8] = v120;
      v122[9] = v123;
      swift_retain();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v124 = swift_allocObject();
      *(_OWORD *)(v124 + 16) = xmmword_2576ABB30;
      OUTLINED_FUNCTION_26_8((void *)v124, (uint64_t)&off_270667760);
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v125 = *(void (**)(void))(v119 + 8);
    OUTLINED_FUNCTION_20_13();
    v125();
    OUTLINED_FUNCTION_20_13();
    v125();
    OUTLINED_FUNCTION_20_13();
    v125();
    OUTLINED_FUNCTION_20_13();
    v125();
    swift_release();
  }
LABEL_11:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574CC610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, long long a12, long long a13, uint64_t a14)
{
  uint64_t v39 = a7;
  uint64_t v41 = a5;
  uint64_t v38 = a4;
  uint64_t v37 = a3;
  uint64_t v36 = a2;
  uint64_t v35 = a1;
  uint64_t v40 = a9;
  uint64_t v34 = a14;
  long long v33 = a13;
  long long v32 = a12;
  uint64_t v31 = a11;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v30 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v30 - v23;
  uint64_t v25 = sub_2576A6DD0();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  v26(v24, a6, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v25);
  v26(v22, a8, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v25);
  uint64_t v27 = *a10;
  if (*a10) {
    uint64_t v28 = &off_270667760;
  }
  else {
    uint64_t v28 = 0;
  }
  v26(v19, v31, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v25);
  long long v52 = v32;
  long long v53 = v33;
  uint64_t v54 = v34;
  uint64_t v55 = v35;
  uint64_t v56 = v36;
  uint64_t v57 = v37;
  uint64_t v58 = v38;
  uint64_t v43 = v39;
  uint64_t v44 = &off_270667760;
  uint64_t v45 = v22;
  uint64_t v46 = v27;
  uint64_t v47 = v28;
  uint64_t v48 = v19;
  uint64_t v49 = sub_2574D11D4;
  uint64_t v50 = &v51;
  swift_retain();
  sub_25748058C((uint64_t)v24, (uint64_t)sub_2574D10CC, (uint64_t)v42, v40);
  swift_release();
  sub_257480BC8((uint64_t)v19);
  sub_257480BC8((uint64_t)v22);
  return sub_257480BC8((uint64_t)v24);
}

uint64_t sub_2574CC8F8(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  v24[2] = a8;
  uint64_t v25 = a6;
  v24[0] = a1;
  v24[1] = a3;
  v24[4] = a10;
  uint64_t v30 = a11;
  uint64_t v26 = a12;
  memcpy(v29, a2, sizeof(v29));
  uint64_t v13 = sub_2576A6BF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_2576A6DD0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 8))(v27, ObjectType, a5);
  sub_25758B4C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v25, v17);
  sub_2576A83F0();
  sub_2576A6C50();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8CB58], v13);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6C40())
  {
    memcpy(v27, v29, 0xB0uLL);
    sub_2574C1548((uint64_t)v27);
    sub_2574D1114((uint64_t)v27, (uint64_t)&v28);
    sub_2576A6B80();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v23 = xmmword_2576B0090;
    *(unsigned char *)(v23 + 16) = 4;
    return swift_willThrow();
  }
}

#error "2574CCBE4: call analysis failed (funcsize=6)"

uint64_t sub_2574CCBF0(void (*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t *a15)
{
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v39)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;

  uint64_t v93 = a8;
  uint64_t v92 = a7;
  uint64_t v95 = a6;
  uint64_t v94 = a5;
  uint64_t v102 = a3;
  uint64_t v103 = a4;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v96 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v97 = (char *)&v77 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v77 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v90 = sub_2576A6DD0();
  uint64_t v27 = *(void *)(v90 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v90);
  uint64_t v101 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v105 = (char *)&v77 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v104 = (char *)&v77 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v77 - v34;
  uint64_t v36 = *a15;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v38 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
  uint64_t v39 = a1;
  uint64_t v40 = ObjectType;
  int64_t v89 = a2 + 8;
  uint64_t v88 = v38;
  v38(&v106, ObjectType, a2);
  if (v106 > 0xCu || ((1 << v106) & 0x1777) == 0)
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v76 = xmmword_2576B00B0;
    *(unsigned char *)(v76 + 16) = 3;
    return swift_willThrow();
  }
  uint64_t v83 = v26;
  uint64_t v86 = v23;
  unint64_t v87 = v27;
  if (!*(void *)(v36 + 16))
  {
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = -1;
    uint64_t v111 = 0;
    int v112 = 0;
    uint64_t v110 = 0;
    uint64_t v113 = -1;
    uint64_t v114 = 4;
    sub_2576A7810();
    goto LABEL_12;
  }
  uint64_t v85 = *(void *)(v36 + 32);
  uint64_t v41 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  uint64_t v99 = v40;
  v41(&v106, v40, a2);
  uint64_t v100 = v35;
  sub_25758A634(&v106, 0, 2, (uint64_t)v35);
  uint64_t v106 = v36;
  sub_2576A7810();
  sub_25758A634(&v106, 0, 2, (uint64_t)v104);
  uint64_t v42 = swift_getObjectType();
  uint64_t v98 = a2;
  uint64_t v43 = v42;
  uint64_t v44 = v103;
  uint64_t v45 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v103 + 16);
  v45(&v106, v42, v103);
  uint64_t v84 = a13;
  sub_2574CEC18(v106);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_2576ABB10;
  v45(&v116, v43, v44);
  if (!*(void *)(v116 + 16))
  {
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = -1;
    uint64_t v111 = 0;
    int v112 = 0;
    uint64_t v110 = 0;
    uint64_t v113 = -1;
    uint64_t v114 = 4;
LABEL_12:
    sub_25746BF88();
  }
  uint64_t v47 = v36;
  uint64_t v79 = a14;
  uint64_t v82 = a12;
  uint64_t v81 = a11;
  uint64_t v80 = a10;
  uint64_t v78 = a9;
  uint64_t v48 = *(void *)(v116 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v46 + 32) = v48;
  uint64_t v49 = *MEMORY[0x263F8C9D0];
  uint64_t v50 = sub_2576A6990();
  char v51 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v83, v49, v50);
  __swift_storeEnumTagSinglePayload(v51, 0, 1, v50);
  long long v52 = v101;
  sub_2576A6DE0();
  type metadata accessor for NativeTensorStorage();
  uint64_t v106 = v47;
  sub_2576A7810();
  v88(&v116, v99, v98);
  long long v53 = v91;
  sub_25754DDC0(&v106, (uint64_t)&v116, 0);
  uint64_t v55 = v54;
  int64_t v89 = v53;
  uint64_t v56 = v87;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
  uint64_t v58 = (uint64_t)v86;
  uint64_t v88 = v39;
  uint64_t v59 = v90;
  v57(v86, v100, v90);
  __swift_storeEnumTagSinglePayload(v58, 0, 1, v59);
  uint64_t v60 = (uint64_t)v97;
  v57(v97, v105, v59);
  __swift_storeEnumTagSinglePayload(v60, 0, 1, v59);
  uint64_t v61 = (uint64_t)v96;
  v57(v96, v52, v59);
  char v62 = __swift_storeEnumTagSinglePayload(v61, 0, 1, v59);
  uint64_t v63 = MEMORY[0x270FA5388](v62);
  uint64_t v91 = v55;
  uint64_t v64 = (uint64_t)v104;
  *(&v77 - 12) = v55;
  *(&v77 - 11) = v64;
  *((unsigned char *)&v77 - 80) = v79 & 1;
  uint64_t v65 = v80;
  *(&v77 - 9) = v78;
  *(&v77 - 8) = v65;
  uint64_t v66 = v92;
  *(&v77 - 7) = v84;
  *(&v77 - 6) = v66;
  uint64_t v67 = v81;
  *(&v77 - 5) = v93;
  *(&v77 - 4) = v67;
  uint64_t v68 = v85;
  *(&v77 - 3) = v82;
  *(&v77 - 2) = v68;
  MEMORY[0x270FA5388](v63);
  uint64_t v69 = v103;
  *(&v77 - 8) = v102;
  *(&v77 - 7) = v69;
  uint64_t v70 = v94;
  *(&v77 - 6) = v60;
  *(&v77 - 5) = v70;
  *(&v77 - 4) = v95;
  *(&v77 - 3) = v61;
  *(&v77 - 2) = (uint64_t)sub_2574D1210;
  *(&v77 - 1) = v71;
  uint64_t v72 = v89;
  sub_257648508((uint64_t)sub_2574D10CC, (uint64_t)(&v77 - 10), MEMORY[0x263F8EE60] + 8, (uint64_t)&v115);
  if (v72)
  {
    sub_257480BC8(v61);
    sub_257480BC8(v60);
    sub_257480BC8(v58);
    uint64_t v73 = *(void (**)(char *, uint64_t))(v56 + 8);
    v73(v101, v59);
    v73(v105, v59);
    v73(v100, v59);
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v73)(v104, v59);
  }
  else
  {
    sub_257480BC8(v61);
    sub_257480BC8(v60);
    sub_257480BC8(v58);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v56 + 8);
    v75(v101, v59);
    v75(v105, v59);
    v75(v100, v59);
    v75(v104, v59);
    return v91;
  }
}

uint64_t sub_2574CD4C8(uint64_t a1)
{
  return sub_2574CE220(a1, 0, (__n128)xmmword_2576B00A0);
}

uint64_t sub_2574CD4EC()
{
  uint64_t v3 = OUTLINED_FUNCTION_39_3();
  if (!sub_2574BAF20(v3, v2)) {
    goto LABEL_8;
  }
  uint64_t v1 = v4;
  uint64_t v5 = sub_2575CA350();
  if (!sub_2574BAF20(v5, v2))
  {
LABEL_7:
    swift_unknownObjectRelease();
LABEL_8:
    sub_257480520();
    uint64_t v10 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B00C0, v10, v11);
    return (uint64_t)v1;
  }
  uint64_t v6 = sub_2575CA350();
  if (!sub_2574BAF20(v6, v2))
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v60 = v7;
  if (*(void *)(v0 + 56))
  {
    uint64_t v8 = sub_2575CA350();
    uint64_t v64 = sub_2574BAF20(v8, v2);
    uint64_t v58 = v9;
  }
  else
  {
    uint64_t v64 = 0;
    uint64_t v58 = 0;
  }
  uint64_t result = OUTLINED_FUNCTION_16_11();
  if (*(void *)(result + 16))
  {
    uint64_t v13 = result;
    uint64_t v14 = *(void *)(result + 32);
    sub_2576A7810();
    uint64_t v15 = swift_bridgeObjectRelease();
    uint64_t v65 = v14;
    OUTLINED_FUNCTION_4_19(v15, v16, v17, v18, v19, v20, v21, v22, v30, v32, v34, v36, v38, v40, v42, 0, &v65, v46, v48,
      v50,
      v52,
      v54,
      v56,
      v58,
      v60,
      v62,
      v63,
      v64);
    if (v13)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_27_7();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v1 = (__n128 *)swift_allocObject();
      if ((void)v61)
      {
        OUTLINED_FUNCTION_18_12((uint64_t)v1, (__n128)xmmword_2576ABB50, v23, v24, v25, v26, v27, v28, v29, v31, v33, v35, v37, v39, v41, v43, v44, v45, v47,
          v49,
          v51,
          v53,
          v55,
          v57,
          v59,
          v61);
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_33_5(v1, (__n128)xmmword_2576ABB30, v23, v24, v25, v26, v27, v28, v29, v31, v33, v35, v37, v39, v41, v43, v44, v45, v47,
          v49,
          v51,
          v53,
          v55,
          v57,
          v59);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2574CD6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t *a18)
{
  void (*v40)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  void (*v59)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  uint64_t result;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  _UNKNOWN **v93;
  void *v94;
  uint64_t v95;
  void v96[2];
  void (*v97)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v98;
  void (*v99)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char v140;
  uint64_t v141;
  uint64_t v142;

  uint64_t v118 = a8;
  uint64_t v124 = a7;
  uint64_t v123 = a6;
  uint64_t v129 = a5;
  uint64_t v114 = a4;
  uint64_t v113 = a3;
  v96[0] = a9;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v115 = (char *)v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v116 = (char *)v96 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v117 = (char *)v96 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v110 = (char *)v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_2576A6DD0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v127 = (char *)v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v128 = (char *)v96 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)v96 - v35;
  MEMORY[0x270FA5388](v34);
  long long v130 = (char *)v96 - v37;
  uint64_t v38 = *a18;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
  uint64_t v41 = ObjectType;
  int v112 = (void *)(a2 + 8);
  uint64_t v111 = v40;
  v40(&v132, ObjectType, a2);
  if (v132 > 0xCu || ((1 << v132) & 0x1777) == 0)
  {
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v95 = 0xD000000000000014;
    *(void *)(v95 + 8) = 0x80000002576C73E0;
    *(unsigned char *)(v95 + 16) = 3;
    return swift_willThrow();
  }
  if (!*(void *)(v38 + 16))
  {
    uint64_t v132 = 0;
    uint64_t v133 = 0;
    uint64_t v134 = 0;
    uint64_t v135 = -1;
    long long v137 = 0;
    long long v138 = 0;
    int64_t v136 = 0;
    long long v139 = -1;
    uint64_t v140 = 4;
    sub_2576A7810();
    goto LABEL_17;
  }
  uint64_t v122 = v29;
  uint64_t v109 = v28;
  uint64_t v108 = *(void *)(v38 + 32);
  uint64_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  uint64_t v120 = v41;
  uint64_t v99 = v42;
  v42(&v132, v41, a2);
  sub_25758A634(&v132, 0, 2, (uint64_t)v130);
  uint64_t v132 = v38;
  sub_2576A7810();
  uint64_t v121 = v36;
  sub_25758A634(&v132, 0, 2, (uint64_t)v36);
  uint64_t v43 = swift_getObjectType();
  uint64_t v119 = a1;
  uint64_t v126 = a2;
  uint64_t v44 = v43;
  uint64_t v45 = v123;
  uint64_t v46 = v123 + 16;
  uint64_t v47 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v123 + 16);
  v47(&v132, v43, v123);
  uint64_t v107 = a16;
  sub_2574CEC18(v132);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2576ABB10;
  uint64_t v98 = v44;
  uint64_t v97 = v47;
  v96[1] = v46;
  v47(&v141, v44, v45);
  if (!*(void *)(v141 + 16))
  {
    uint64_t v132 = 0;
    uint64_t v133 = 0;
    uint64_t v134 = 0;
    uint64_t v135 = -1;
    long long v137 = 0;
    long long v138 = 0;
    int64_t v136 = 0;
    long long v139 = -1;
    uint64_t v140 = 4;
LABEL_17:
    sub_25746BF88();
  }
  uint64_t v102 = a17;
  uint64_t v106 = a15;
  uint64_t v105 = a14;
  uint64_t v103 = a13;
  uint64_t v100 = a12;
  uint64_t v104 = a11;
  uint64_t v101 = a10;
  uint64_t v49 = *(void *)(v141 + 32);
  swift_bridgeObjectRelease();
  *(void *)(v48 + 32) = v49;
  uint64_t v50 = *MEMORY[0x263F8C9D0];
  uint64_t v51 = sub_2576A6990();
  uint64_t v52 = (uint64_t)v110;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v110, v50, v51);
  __swift_storeEnumTagSinglePayload(v52, 0, 1, v51);
  sub_2576A6DE0();
  uint64_t v53 = type metadata accessor for NativeTensorStorage();
  uint64_t v54 = v120;
  uint64_t v55 = v126;
  v99(&v132, v120, v126);
  uint64_t v56 = v111;
  v111(&v141, v54, v55);
  uint64_t v57 = v125;
  sub_25754DDC0(&v132, (uint64_t)&v141, 0);
  uint64_t v110 = v58;
  v97(&v132, v98, v45);
  v56(&v141, v54, v55);
  uint64_t v98 = v53;
  sub_25754DDC0(&v132, (uint64_t)&v141, 0);
  uint64_t v99 = v59;
  uint64_t v125 = v57;
  uint64_t v132 = 0;
  if (v124)
  {
    uint64_t v60 = swift_getObjectType();
    long long v61 = v118;
    uint64_t v62 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v118 + 16);
    swift_unknownObjectRetain();
    v62(&v141, v60, v61);
    v56((uint64_t *)&v131, v54, v126);
    uint64_t v63 = v125;
    sub_25754DDC0(&v141, (uint64_t)&v131, 0);
    uint64_t v65 = v64;
    uint64_t v125 = v63;
    swift_unknownObjectRelease();
    uint64_t v132 = v65;
  }
  uint64_t v66 = v109;
  uint64_t v67 = (uint64_t)v130;
  uint64_t v68 = v128;
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v122 + 16);
  uint64_t v70 = (uint64_t)v117;
  v69(v117, (uint64_t)v130, v109);
  __swift_storeEnumTagSinglePayload(v70, 0, 1, v66);
  uint64_t v71 = (uint64_t)v116;
  v69(v116, (uint64_t)v68, v66);
  __swift_storeEnumTagSinglePayload(v71, 0, 1, v66);
  uint64_t v72 = (uint64_t)v115;
  uint64_t v73 = v127;
  v69(v115, (uint64_t)v127, v66);
  uint64_t v74 = __swift_storeEnumTagSinglePayload(v72, 0, 1, v66);
  int v112 = v96;
  uint64_t v75 = MEMORY[0x270FA5388](v74);
  uint64_t v76 = v126;
  v96[-20] = v119;
  v96[-19] = v76;
  uint64_t v77 = v68;
  v96[-18] = v121;
  LOBYTE(v96[-17]) = v102 & 1;
  uint64_t v78 = v103;
  v96[-16] = v100;
  v96[-15] = v78;
  uint64_t v79 = v101;
  v96[-14] = v107;
  v96[-13] = v79;
  uint64_t v80 = v105;
  v96[-12] = v104;
  v96[-11] = v80;
  uint64_t v81 = v113;
  v96[-10] = v106;
  v96[-9] = v81;
  uint64_t v82 = v110;
  v96[-8] = v114;
  v96[-7] = v82;
  uint64_t v83 = v99;
  v96[-6] = v67;
  v96[-5] = v83;
  v96[-4] = v77;
  v96[-3] = &v132;
  uint64_t v84 = v108;
  v96[-2] = v73;
  v96[-1] = v84;
  MEMORY[0x270FA5388](v75);
  uint64_t v85 = v123;
  v96[-8] = v129;
  v96[-7] = v85;
  uint64_t v86 = v124;
  v96[-6] = v71;
  v96[-5] = v86;
  v96[-4] = v118;
  v96[-3] = v72;
  v96[-2] = sub_2574D1250;
  v96[-1] = v87;
  uint64_t v88 = v125;
  sub_257648508((uint64_t)sub_2574D10CC, (uint64_t)&v96[-10], MEMORY[0x263F8EE60] + 8, (uint64_t)&v142);
  if (v88)
  {
    sub_257480BC8(v72);
    sub_257480BC8(v71);
    sub_257480BC8(v70);
    swift_release();
    swift_release();
    int64_t v89 = *(void (**)(char *, uint64_t))(v122 + 8);
    v89(v127, v66);
    v89(v128, v66);
    v89(v121, v66);
    v89(v130, v66);
    return swift_release();
  }
  else
  {
    sub_257480BC8(v72);
    sub_257480BC8(v71);
    sub_257480BC8(v70);
    uint64_t v91 = *(void (**)(char *, uint64_t))(v122 + 8);
    v91(v127, v66);
    v91(v128, v66);
    v91(v121, v66);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v91)(v130, v66);
    uint64_t v92 = v132;
    if (v132) {
      uint64_t v93 = &off_270667760;
    }
    else {
      uint64_t v93 = 0;
    }
    uint64_t v94 = (void *)v96[0];
    *(void *)v96[0] = v82;
    v94[1] = &off_270667760;
    void v94[2] = v83;
    v94[3] = &off_270667760;
    v94[4] = v92;
    v94[5] = v93;
  }
  return result;
}

uint64_t sub_2574CE208()
{
  return sub_2574CD4EC();
}

uint64_t sub_2574CE220(uint64_t a1, char a2, __n128 a3)
{
  void (*v12)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  long long v29;
  long long v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;

  uint64_t v6 = v4;
  uint64_t v7 = v3;
  uint64_t v9 = sub_2575CA350();
  uint64_t v10 = sub_2574BAF20(v9, a1);
  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v12 = (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v10;
  uint64_t v13 = v11;
  uint64_t v14 = sub_2575CA350();
  uint64_t v15 = sub_2574BAF20(v14, a1);
  if (!v15)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_257480520();
    uint64_t v20 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17(a3, v20, v21);
    return a1;
  }
  uint64_t v17 = v15;
  uint64_t v32 = v16;
  if (*(void *)(v3 + 56))
  {
    uint64_t v18 = sub_2575CA350();
    uint64_t v34 = sub_2574BAF20(v18, a1);
    uint64_t v31 = v19;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v31 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
  a1 = OUTLINED_FUNCTION_29_2();
  *(_OWORD *)(a1 + 16) = xmmword_2576ABB10;
  uint64_t v22 = *(void *)(v3 + 64);
  uint64_t v23 = *(void *)(v3 + 72);
  uint64_t v29 = *(_OWORD *)(v3 + 96);
  uint64_t v30 = *(_OWORD *)(v3 + 80);
  uint64_t v24 = *(void *)(v3 + 112);
  uint64_t v35 = *(void *)(v7 + 192);
  sub_2576A7810();
  uint64_t v25 = sub_2574CCBF0(v12, v13, v17, v32, v34, v31, v22, v23, v30, *((uint64_t *)&v30 + 1), v29, *((uint64_t *)&v29 + 1), v24, a2 & 1, &v35);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v6)
  {
    *(void *)(a1 + 16) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    *(void *)(a1 + 32) = v25;
    *(void *)(a1 + 40) = v27;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_2574CE3F4(uint64_t a1)
{
  return sub_2574CE220(a1, 1, (__n128)xmmword_2576B00D0);
}

uint64_t sub_2574CE418()
{
  uint64_t v3 = OUTLINED_FUNCTION_39_3();
  if (!sub_2574BAF20(v3, v2)) {
    goto LABEL_8;
  }
  uint64_t v1 = v4;
  uint64_t v5 = sub_2575CA350();
  if (!sub_2574BAF20(v5, v2))
  {
LABEL_7:
    swift_unknownObjectRelease();
LABEL_8:
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    void *v10 = 0xD000000000000013;
    v10[1] = 0x80000002576C7400;
    OUTLINED_FUNCTION_11_14((uint64_t)v10, 2);
    return (uint64_t)v1;
  }
  uint64_t v6 = sub_2575CA350();
  if (!sub_2574BAF20(v6, v2))
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  uint64_t v59 = v7;
  if (*(void *)(v0 + 56))
  {
    uint64_t v8 = sub_2575CA350();
    uint64_t v63 = sub_2574BAF20(v8, v2);
    uint64_t v57 = v9;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v57 = 0;
  }
  uint64_t result = OUTLINED_FUNCTION_16_11();
  if (*(void *)(result + 16))
  {
    uint64_t v12 = result;
    uint64_t v13 = *(void *)(result + 32);
    sub_2576A7810();
    uint64_t v14 = swift_bridgeObjectRelease();
    uint64_t v64 = v13;
    OUTLINED_FUNCTION_4_19(v14, v15, v16, v17, v18, v19, v20, v21, v29, v31, v33, v35, v37, v39, v41, 1u, &v64, v45, v47,
      v49,
      v51,
      v53,
      v55,
      v57,
      v59,
      v61,
      v62,
      v63);
    if (v12)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_27_7();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v1 = (__n128 *)swift_allocObject();
      if ((void)v60)
      {
        OUTLINED_FUNCTION_18_12((uint64_t)v1, (__n128)xmmword_2576ABB50, v22, v23, v24, v25, v26, v27, v28, v30, v32, v34, v36, v38, v40, v42, v43, v44, v46,
          v48,
          v50,
          v52,
          v54,
          v56,
          v58,
          v60);
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_33_5(v1, (__n128)xmmword_2576ABB30, v22, v23, v24, v25, v26, v27, v28, v30, v32, v34, v36, v38, v40, v42, v43, v44, v46,
          v48,
          v50,
          v52,
          v54,
          v56,
          v58);
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2574CE644()
{
  return sub_2574CE418();
}

void sub_2574CE65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  uint64_t v81 = (char *)v21;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v70 - v33;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v82 = v35;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_6_2();
  uint64_t v83 = v37;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_7_11();
  uint64_t v84 = v39;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v40);
  OUTLINED_FUNCTION_10_9();
  uint64_t v42 = v41;
  uint64_t v43 = sub_2575CA350();
  uint64_t v44 = sub_2574BAF20(v43, v26);
  if (!v44) {
    goto LABEL_7;
  }
  uint64_t v46 = v44;
  uint64_t v80 = v45;
  uint64_t v47 = sub_2575CA350();
  uint64_t v48 = sub_2574BAF20(v47, v26);
  if (!v48)
  {
    swift_unknownObjectRelease();
LABEL_7:
    sub_257480520();
    uint64_t v67 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B00E0, v67, v68);
    goto LABEL_8;
  }
  uint64_t v50 = v48;
  uint64_t v79 = v49;
  type metadata accessor for NativeTensorStorage();
  a10 = *(void *)(v20 + 64);
  char v85 = *(unsigned char *)(v20 + 72);
  sub_2576A7810();
  uint64_t v51 = (uint64_t *)OUTLINED_FUNCTION_9_2();
  uint64_t v52 = (uint64_t)v81;
  sub_25754DDC0(v51, v53, v54);
  uint64_t v74 = v55;
  uint64_t v75 = v52;
  a10 = *(void *)(v55 + 16);
  sub_2576A7810();
  uint64_t v81 = v34;
  uint64_t v71 = v22;
  uint64_t v56 = v42;
  sub_25758A634(&a10, 0, 1, v42);
  uint64_t ObjectType = swift_getObjectType();
  OUTLINED_FUNCTION_11_10();
  v57();
  uint64_t v72 = v20;
  uint64_t v76 = v46;
  sub_25758A634(&a10, 0, 1, v84);
  swift_getObjectType();
  OUTLINED_FUNCTION_11_10();
  v58();
  sub_25758A634(&a10, 0, 1, v83);
  uint64_t v59 = *(void (**)(void))(v82 + 16);
  OUTLINED_FUNCTION_3_4();
  v59();
  OUTLINED_FUNCTION_2_6((uint64_t)v81);
  uint64_t v60 = v71;
  OUTLINED_FUNCTION_3_4();
  v59();
  OUTLINED_FUNCTION_2_6(v60);
  uint64_t v77 = v56;
  uint64_t v61 = (uint64_t)v81;
  OUTLINED_FUNCTION_3_4();
  v59();
  uint64_t v62 = OUTLINED_FUNCTION_2_6((uint64_t)v31);
  MEMORY[0x270FA5388](v62);
  uint64_t v78 = v50;
  *(&v70 - 8) = v50;
  uint64_t v63 = v74;
  *(&v70 - 7) = v79;
  *(&v70 - 6) = v60;
  *(&v70 - 5) = v63;
  *(&v70 - 4) = (uint64_t)&off_270667760;
  *(&v70 - 3) = (uint64_t)v31;
  uint64_t v64 = v72;
  *(&v70 - 2) = (uint64_t)sub_2574D130C;
  *(&v70 - 1) = v64;
  swift_retain();
  uint64_t v65 = v75;
  sub_257648508((uint64_t)sub_2574D1328, (uint64_t)(&v70 - 10), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v65)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release_n();
    sub_257480BC8((uint64_t)v31);
    sub_257480BC8(v60);
    sub_257480BC8(v61);
  }
  else
  {
    swift_release();
    sub_257480BC8((uint64_t)v31);
    sub_257480BC8(v60);
    sub_257480BC8(v61);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    uint64_t v69 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v69 + 16) = xmmword_2576ABB10;
    *(void *)(v69 + 32) = v63;
    *(void *)(v69 + 40) = &off_270667760;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  uint64_t v66 = *(void (**)(void))(v82 + 8);
  OUTLINED_FUNCTION_1_8();
  v66();
  OUTLINED_FUNCTION_1_8();
  v66();
  OUTLINED_FUNCTION_1_8();
  v66();
LABEL_8:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574CEADC()
{
  sub_2576A6D30();
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6D20())
  {
    sub_2576A6D10();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v1 = xmmword_2576B00E0;
    *(unsigned char *)(v1 + 16) = 4;
    return swift_willThrow();
  }
}

#error "2574CEC0C: call analysis failed (funcsize=6)"

uint64_t sub_2574CEC18(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D58);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1;
  uint64_t v5 = *(void *)(a1 + 16);
  sub_2576A7810();
  if (v5 == 3)
  {
    sub_257692D1C(2, 2, 1);
    a1 = v10;
  }
  sub_257532CD0(a1);
  uint64_t v6 = *MEMORY[0x263F8C9C8];
  uint64_t v7 = sub_2576A6990();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v4, v6, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v7);
  return sub_2576A6DE0();
}

uint64_t sub_2574CED4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, long long a9, long long a10)
{
  uint64_t v19 = a7;
  uint64_t v20 = a8;
  int v17 = a6;
  uint64_t v18 = a3;
  v16[0] = a10;
  v16[1] = a9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_2576A6DD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a5, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v14);
  sub_2576487AC();
  return sub_257480BC8((uint64_t)v13);
}

void sub_2574CEEB4()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v24 = v1;
  uint64_t v3 = v2;
  char v5 = v4;
  uint64_t v6 = sub_2576A6BF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_2576A6C00();
  OUTLINED_FUNCTION_0_8();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_8_0();
  uint64_t v19 = (void *)(v18 - v17);
  sub_2576A6B60();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_36_3();
  uint64_t v22 = (unsigned int *)MEMORY[0x263F8CA88];
  if ((v5 & 1) == 0) {
    uint64_t v22 = (unsigned int *)MEMORY[0x263F8CA90];
  }
  (*(void (**)(uint64_t, void))(v21 + 104))(v0, *v22);
  sub_2576A6BA0();
  void *v19 = v3;
  v19[1] = v24;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v19, *MEMORY[0x263F8CB60], v13);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v12, *MEMORY[0x263F8CB58], v6);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6B90())
  {
    sub_2576A69B0();
    swift_release();
  }
  else
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *uint64_t v23 = xmmword_2576B00B0;
    OUTLINED_FUNCTION_11_14((uint64_t)v23, 4);
  }
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574CF144(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, char **a6, int a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, _UNKNOWN **a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, uint64_t a18, char *a19, uint64_t a20,uint64_t *a21,uint64_t a22,_UNKNOWN **a23)
{
  uint64_t v80 = a8;
  int v93 = a7;
  int64_t v89 = a6;
  uint64_t v76 = a5;
  uint64_t v87 = a3;
  uint64_t v86 = a2;
  uint64_t v90 = a1;
  uint64_t v84 = a12;
  uint64_t v83 = a11;
  uint64_t v82 = a14;
  uint64_t v81 = a13;
  char v85 = a10;
  uint64_t v79 = a9;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  uint64_t v73 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v72 = (char *)&v71 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v71 = (char *)&v71 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v88 = (char *)&v71 - v30;
  uint64_t v78 = sub_2576A6BF0();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_2576A6C00();
  uint64_t v32 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v34 = (char **)((char *)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = sub_2576A6B60();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_2576A6DD0();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v42 = (char *)&v71 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v76 + 8))(&v94, ObjectType);
  sub_25758B4C0();
  uint64_t v76 = *(void *)(v40 + 16);
  ((void (*)(char *, char **, uint64_t))v76)(v42, v89, v39);
  sub_2576A83F0();
  uint64_t v44 = (unsigned int *)MEMORY[0x263F8CA88];
  if ((v93 & 1) == 0) {
    uint64_t v44 = (unsigned int *)MEMORY[0x263F8CA90];
  }
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v38, *v44, v35);
  sub_2576A6BA0();
  uint64_t v45 = v80;
  void *v34 = v79;
  v34[1] = v45;
  (*(void (**)(void *, void, uint64_t))(v32 + 104))(v34, *MEMORY[0x263F8CB60], v74);
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v75, *MEMORY[0x263F8CB58], v78);
  sub_2576A8470();
  unsigned int v46 = sub_2576A83D0();
  uint64_t v69 = v47;
  uint64_t v70 = v48;
  uint64_t v67 = v46;
  uint64_t v68 = v49;
  uint64_t v66 = (_UNKNOWN **)v81;
  uint64_t v65 = v82;
  uint64_t v64 = v83;
  uint64_t v63 = v84;
  uint64_t v50 = sub_2576A6B90();
  if (v50)
  {
    uint64_t v84 = a23;
    uint64_t v82 = a22;
    uint64_t v86 = a19;
    char v85 = a17;
    uint64_t v87 = a16;
    uint64_t v83 = a15;
    uint64_t v51 = (uint64_t)v88;
    uint64_t v81 = v50;
    uint64_t v52 = (void (*)(char *, uint64_t, uint64_t))v76;
    ((void (*)(char *, char **, uint64_t))v76)(v88, v89, v39);
    __swift_storeEnumTagSinglePayload(v51, 0, 1, v39);
    uint64_t v53 = (uint64_t)v71;
    v52(v71, a18, v39);
    __swift_storeEnumTagSinglePayload(v53, 0, 1, v39);
    uint64_t v54 = (uint64_t)v72;
    v52(v72, a20, v39);
    __swift_storeEnumTagSinglePayload(v54, 0, 1, v39);
    uint64_t v55 = *a21;
    if (*a21) {
      uint64_t v56 = &off_270667760;
    }
    else {
      uint64_t v56 = 0;
    }
    uint64_t v57 = (uint64_t)v73;
    v52(v73, v82, v39);
    uint64_t v58 = __swift_storeEnumTagSinglePayload(v57, 0, 1, v39);
    int64_t v89 = &v71;
    MEMORY[0x270FA5388](v58);
    uint64_t v70 = &v91;
    uint64_t v59 = swift_getObjectType();
    MEMORY[0x270FA5388](v59);
    *(&v71 - 12) = v85;
    *(&v71 - 11) = (char *)&off_270667760;
    *(&v71 - 10) = (char *)v53;
    *(&v71 - 9) = v86;
    uint64_t v63 = &off_270667760;
    uint64_t v64 = v54;
    uint64_t v65 = v55;
    uint64_t v66 = v56;
    uint64_t v67 = v57;
    uint64_t v68 = sub_2574D12B4;
    uint64_t v69 = &v65;
    swift_retain();
    uint64_t v60 = (uint64_t)v88;
    sub_257648508((uint64_t)sub_2574D11BC, (uint64_t)(&v71 - 14), MEMORY[0x263F8EE60] + 8, (uint64_t)v92);
    swift_release();
    sub_257480BC8(v57);
    sub_257480BC8(v54);
    sub_257480BC8(v53);
    sub_257480BC8(v60);
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v62 = 0xD000000000000014;
    *(void *)(v62 + 8) = 0x80000002576C73E0;
    *(unsigned char *)(v62 + 16) = 4;
    return swift_willThrow();
  }
}

uint64_t sub_2574CF970(int a1, int a2, void *__src)
{
  memcpy(__dst, __src, 0xB0uLL);
  sub_2574C1548((uint64_t)__dst);
  sub_2574D1114((uint64_t)__dst, (uint64_t)&v4);
  return sub_2576A6B80();
}

uint64_t sub_2574CFA20@<X0>(_DWORD *a1@<X8>)
{
  sub_2574A4668(v1, (uint64_t)&v18);
  if (v19)
  {
    if (v19 == 1)
    {
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8C9F0];
    }
    else
    {
      if (v19 == 2)
      {
        uint64_t DynamicType = 0xD00000000000004BLL;
        unint64_t v9 = 0x80000002576C7420;
        char v14 = 0;
        OUTLINED_FUNCTION_34_5();
        sub_25746BE6C();
      }
      sub_257479260(&v18, (uint64_t)v17);
      sub_25746B3D0((uint64_t)v17, (uint64_t)&DynamicType);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
      if (!swift_dynamicCast())
      {
        __swift_project_boxed_opaque_existential_1(v17, v17[3]);
        uint64_t DynamicType = swift_getDynamicType();
        unint64_t v9 = v17[4];
        long long v10 = xmmword_2576B00F0;
        char v11 = 0;
        uint64_t v12 = 10;
        char v13 = 0;
        char v15 = 3;
        OUTLINED_FUNCTION_34_5();
        sub_25746BF88();
      }
      int v4 = v16;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      *a1 = v4;
      uint64_t v3 = (unsigned int *)MEMORY[0x263F8C9E0];
    }
  }
  else
  {
    uint64_t v3 = (unsigned int *)MEMORY[0x263F8C9E8];
  }
  uint64_t v5 = *v3;
  sub_2576A69C0();
  OUTLINED_FUNCTION_16_1();
  return (*(uint64_t (**)(_DWORD *, uint64_t))(v6 + 104))(a1, v5);
}

void sub_2574CFBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  uint64_t v68 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  OUTLINED_FUNCTION_10_9();
  uint64_t v69 = v31;
  uint64_t v32 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v34 = v33;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_6_2();
  uint64_t v70 = v36;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v37);
  uint64_t v39 = (char *)v63 - v38;
  uint64_t v40 = sub_2575CA350();
  if (sub_2574BAF20(v40, v26))
  {
    uint64_t v41 = *(void *)(v20 + 96);
    char v42 = *(unsigned char *)(v24 + 104);
    unint64_t v43 = *(void *)(v41 + 16);
    uint64_t v65 = v24;
    if (v43 < 2) {
      uint64_t v44 = 1;
    }
    else {
      uint64_t v44 = *(void *)(v41 + 32);
    }
    v63[0] = v44;
    type metadata accessor for NativeTensorStorage();
    a10 = v41;
    char v71 = v42;
    sub_2576A7810();
    uint64_t v47 = (uint64_t *)OUTLINED_FUNCTION_9_2();
    sub_25754DDC0(v47, v48, v49);
    uint64_t v51 = v50;
    uint64_t v64 = v21;
    a10 = *(void *)(v50 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(&a10, (uint64_t)v39);
    v63[1] = swift_getObjectType();
    OUTLINED_FUNCTION_11_10();
    v52();
    OUTLINED_FUNCTION_8_1(&a10, v70);
    uint64_t v67 = v34;
    uint64_t v53 = *(void (**)(void))(v34 + 16);
    uint64_t v54 = v69;
    OUTLINED_FUNCTION_3_4();
    v53();
    OUTLINED_FUNCTION_2_6(v54);
    uint64_t v55 = v68;
    uint64_t v66 = v39;
    OUTLINED_FUNCTION_3_4();
    v53();
    uint64_t v56 = OUTLINED_FUNCTION_2_6(v55);
    uint64_t v57 = MEMORY[0x270FA5388](v56);
    uint64_t v58 = v63[0];
    v63[-2] = v65;
    v63[-1] = v58;
    MEMORY[0x270FA5388](v57);
    v63[-6] = v51;
    v63[-5] = &off_270667760;
    v63[-4] = v55;
    v63[-3] = sub_2574D1354;
    v63[-2] = v59;
    swift_retain();
    uint64_t v60 = v64;
    sub_257648508((uint64_t)sub_257480BA4, (uint64_t)&v63[-8], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v60)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      sub_257480BC8(v55);
      sub_257480BC8(v54);
      uint64_t v61 = *(void (**)(void))(v67 + 8);
      OUTLINED_FUNCTION_1_8();
    }
    else
    {
      swift_release();
      sub_257480BC8(v55);
      sub_257480BC8(v54);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v62 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v62 + 16) = xmmword_2576ABB10;
      *(void *)(v62 + 32) = v51;
      *(void *)(v62 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      uint64_t v61 = *(void (**)(void))(v67 + 8);
      OUTLINED_FUNCTION_5_3();
    }
    v61();
    ((void (*)(char *, uint64_t))v61)(v66, v32);
  }
  else
  {
    sub_257480520();
    uint64_t v45 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B0100, v45, v46);
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

void sub_2574CFF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_2576A69C0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_2574CFA20((long long *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0)));
  uint64_t v8 = *(void *)(a3 + 88);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    uint64_t v17 = a4;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_2576A7810();
    sub_2574E79F4();
    uint64_t v10 = v18;
    uint64_t v11 = v9 + 1;
    while (1)
    {
      uint64_t v12 = v11 - 1;
      if (v11 == 1) {
        break;
      }
      if ((unint64_t)(v11 - 2) >= *(void *)(v8 + 16)) {
        goto LABEL_13;
      }
      long long v13 = *(_OWORD *)(v8 + 16 * v11);
      uint64_t v18 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      if (v14 >= *(void *)(v10 + 24) >> 1)
      {
        long long v16 = v13;
        sub_2574E79F4();
        long long v13 = v16;
        uint64_t v10 = v18;
      }
      *(void *)(v10 + 16) = v14 + 1;
      *(_OWORD *)(v10 + 16 * v14 + 32) = v13;
      uint64_t v11 = v12;
      if (v12 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_2576A6A30();
    sub_2576A8470();
    sub_2576A83D0();
    if (sub_2576A6A20())
    {
      sub_2576A69B0();
      swift_release();
    }
    else
    {
      sub_257480520();
      swift_allocError();
      *(_OWORD *)uint64_t v15 = xmmword_2576B0100;
      *(unsigned char *)(v15 + 16) = 4;
      swift_willThrow();
    }
  }
}

#error "2574D01C0: call analysis failed (funcsize=6)"

void sub_2574D01CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v53)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  __n128 *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  void (*v66)(void);
  uint64_t v67;
  void (*v68)(void);
  void (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(void);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(void);
  uint64_t v82;
  void (*v83)(void);
  _OWORD *v84;
  void v85[2];
  uint64_t v86;
  uint64_t v87;
  void (*v88)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[15];

  OUTLINED_FUNCTION_9_1();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  uint64_t v97 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  uint64_t v96 = (char *)v85 - v31;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v32);
  OUTLINED_FUNCTION_10_9();
  uint64_t v100 = v33;
  uint64_t v34 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v36 = v35;
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  uint64_t v40 = (char *)v85 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  OUTLINED_FUNCTION_42_1();
  MEMORY[0x270FA5388](v41);
  unint64_t v43 = (char *)v85 - v42;
  uint64_t v44 = sub_2575CA350();
  uint64_t v45 = sub_2574BAF20(v44, v26);
  if (!v45) {
    goto LABEL_9;
  }
  uint64_t v94 = v46;
  uint64_t v95 = v40;
  uint64_t v99 = v45;
  int v93 = v20;
  uint64_t v47 = sub_2575CA350();
  uint64_t v48 = sub_2574BAF20(v47, v26);
  if (!v48)
  {
    swift_unknownObjectRelease();
LABEL_9:
    sub_257480520();
    uint64_t v58 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B0110, v58, v59);
    goto LABEL_13;
  }
  uint64_t v50 = v48;
  uint64_t v51 = v49;
  uint64_t v92 = v22;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v53 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v51 + 8);
  uint64_t v98 = ObjectType;
  v53(v101, ObjectType, v51);
  if (LOBYTE(v101[0]) > 0xCu || (OUTLINED_FUNCTION_26_6(), v54))
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *uint64_t v84 = xmmword_2576B0110;
    OUTLINED_FUNCTION_11_14((uint64_t)v84, 3);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v88 = v53;
    uint64_t v55 = sub_257611DF8();
    char v91 = v36;
    int64_t v89 = v51 + 8;
    if (v55 < 2)
    {
      uint64_t v57 = v51;
      uint64_t v87 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_11_10();
      v56();
      if (!*(void *)(a10 + 16))
      {
        OUTLINED_FUNCTION_8_16();
        OUTLINED_FUNCTION_14_13();
      }
      uint64_t v57 = v51;
      uint64_t v87 = *(void *)(a10 + 32);
      swift_bridgeObjectRelease();
    }
    uint64_t v60 = *(void *)(v93 + 96);
    type metadata accessor for NativeTensorStorage();
    v101[0] = v60;
    sub_2576A7810();
    uint64_t v61 = (uint64_t *)OUTLINED_FUNCTION_22_11();
    sub_25754DDC0(v61, v62, v63);
    v85[0] = v64;
    uint64_t v86 = v21;
    v101[0] = *(void *)(v64 + 16);
    sub_2576A7810();
    uint64_t v65 = v43;
    OUTLINED_FUNCTION_8_1(v101, (uint64_t)v43);
    v85[1] = swift_getObjectType();
    OUTLINED_FUNCTION_30_6();
    OUTLINED_FUNCTION_11_10();
    v66();
    uint64_t v67 = v92;
    OUTLINED_FUNCTION_8_1(v101, v92);
    OUTLINED_FUNCTION_30_6();
    OUTLINED_FUNCTION_11_10();
    v68();
    OUTLINED_FUNCTION_8_1(v101, (uint64_t)v95);
    uint64_t v69 = *(void (**)(void))(v91 + 16);
    uint64_t v70 = v100;
    OUTLINED_FUNCTION_3_4();
    v69();
    OUTLINED_FUNCTION_2_6(v70);
    char v71 = (uint64_t)v96;
    OUTLINED_FUNCTION_3_4();
    v69();
    OUTLINED_FUNCTION_2_6(v71);
    uint64_t v72 = v97;
    uint64_t v90 = v65;
    OUTLINED_FUNCTION_3_4();
    v69();
    OUTLINED_FUNCTION_2_6(v72);
    uint64_t v73 = v85[0];
    swift_retain();
    OUTLINED_FUNCTION_38_3();
    v74();
    uint64_t v75 = sub_25758B4C0();
    uint64_t v76 = MEMORY[0x270FA5388](v75);
    LODWORD(v85[-4]) = v76;
    uint64_t v77 = v93;
    v85[-3] = v67;
    v85[-2] = v77;
    v85[-1] = v87;
    MEMORY[0x270FA5388](v76);
    v85[-8] = v50;
    v85[-7] = v57;
    uint64_t v78 = v100;
    v85[-6] = v71;
    v85[-5] = v73;
    v85[-4] = &off_270667760;
    v85[-3] = v72;
    v85[-2] = sub_2574D1370;
    v85[-1] = v79;
    uint64_t v80 = v86;
    sub_257648508((uint64_t)sub_2574D1328, (uint64_t)&v85[-10], MEMORY[0x263F8EE60] + 8, (uint64_t)&a11);
    if (v80)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release_n();
      sub_257480BC8(v72);
      sub_257480BC8(v71);
      sub_257480BC8(v78);
      uint64_t v81 = *(void (**)(void))(v91 + 8);
      OUTLINED_FUNCTION_1_8();
      v81();
      OUTLINED_FUNCTION_1_8();
      v81();
      ((void (*)(char *, uint64_t))v81)(v90, v34);
    }
    else
    {
      swift_release();
      sub_257480BC8(v72);
      sub_257480BC8(v71);
      sub_257480BC8(v78);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v82 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v82 + 16) = xmmword_2576ABB10;
      *(void *)(v82 + 32) = v73;
      *(void *)(v82 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v83 = *(void (**)(void))(v91 + 8);
      OUTLINED_FUNCTION_5_3();
      v83();
      OUTLINED_FUNCTION_5_3();
      v83();
      OUTLINED_FUNCTION_5_3();
      v83();
    }
  }
LABEL_13:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

void sub_2574D080C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v36 = a1;
  uint64_t v12 = sub_2576A69C0();
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v14 = (_DWORD *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_2576A6DD0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v33 = v20;
  uint64_t v34 = a5;
  uint64_t v32 = v19;
  ((void (*)(char *, uint64_t))v19)(v18, a5);
  int v35 = a4;
  sub_2576A83F0();
  sub_2574CFA20(v14);
  uint64_t v21 = *(void *)(a6 + 88);
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v30 = a7;
    uint64_t v31 = v7;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_2576A7810();
    sub_2574E79F4();
    uint64_t v23 = v39;
    uint64_t v24 = v22 + 1;
    while (1)
    {
      uint64_t v25 = v24 - 1;
      if (v24 == 1) {
        break;
      }
      if ((unint64_t)(v24 - 2) >= *(void *)(v21 + 16)) {
        goto LABEL_13;
      }
      long long v26 = *(_OWORD *)(v21 + 16 * v24);
      uint64_t v39 = v23;
      unint64_t v27 = *(void *)(v23 + 16);
      if (v27 >= *(void *)(v23 + 24) >> 1)
      {
        long long v29 = v26;
        sub_2574E79F4();
        long long v26 = v29;
        uint64_t v23 = v39;
      }
      *(void *)(v23 + 16) = v27 + 1;
      *(_OWORD *)(v23 + 16 * v27 + 32) = v26;
      uint64_t v24 = v25;
      if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
  }
  else
  {
LABEL_9:
    sub_2576A6A30();
    sub_2576A8470();
    sub_2576A83D0();
    if (sub_2576A6A20())
    {
      v32(v18, v34, v33);
      sub_2576A83F0();
      sub_2576A69A0();
      swift_release();
    }
    else
    {
      sub_257480520();
      swift_allocError();
      *(_OWORD *)uint64_t v28 = xmmword_2576B0110;
      *(unsigned char *)(v28 + 16) = 4;
      swift_willThrow();
    }
  }
}

#error "2574D0B24: call analysis failed (funcsize=6)"

uint64_t sub_2574D0B30(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001858, (void (*)(uint64_t))type metadata accessor for PadGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0B88(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001860, (void (*)(uint64_t))type metadata accessor for PadOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0BE0(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001868, (void (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0C38(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001808, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0C90(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001810, (void (*)(uint64_t))type metadata accessor for ConvolutionTranspose2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0CE8(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001818, (void (*)(uint64_t))type metadata accessor for Convolution2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0D40(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001820, (void (*)(uint64_t))type metadata accessor for Convolution2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0D98(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001828, (void (*)(uint64_t))type metadata accessor for LinearGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0DF0(uint64_t a1)
{
  uint64_t result = sub_2574D0E48(&qword_26A001830, (void (*)(uint64_t))type metadata accessor for LinearOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574D0E48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574D0E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  swift_getObjectType();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = a5;
  uint64_t v19 = a7;
  uint64_t v20 = a1;
  return sub_257648508((uint64_t)sub_2574D10F8, (uint64_t)v14, MEMORY[0x263F8EE60] + 8, a6);
}

uint64_t sub_2574D0F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, unsigned char *)@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = a5;
  v13[5] = a1;
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    void v12[2] = sub_257480ED8;
    void v12[3] = v13;
    swift_unknownObjectRetain();
    sub_257648508((uint64_t)sub_2574C152C, (uint64_t)v12, MEMORY[0x263F8EE60] + 8, a6);
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_2574C14FC(v14);
    sub_2574D1114((uint64_t)v14, (uint64_t)v15);
    return a3(a5, a1, v15);
  }
}

uint64_t sub_2574D10AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2574CB830(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2574D10CC()
{
  return sub_2574D1394();
}

uint64_t sub_2574D10F8()
{
  OUTLINED_FUNCTION_32_6();
  return sub_2574D0F54(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_2574D1114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2574D117C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_2574CC610(a1, a2, a3, a4, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), a5, *(uint64_t **)(v5 + 48), *(void *)(v5 + 56), *(_OWORD *)(v5 + 64), *(_OWORD *)(v5 + 80), *(void *)(v5 + 96));
}

uint64_t sub_2574D11BC()
{
  return sub_2574D12D4();
}

uint64_t sub_2574D11D4(uint64_t a1, const void *a2, uint64_t a3)
{
  return sub_2574CC8F8(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9], v3[10]);
}

uint64_t sub_2574D1210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2574CED4C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(_OWORD *)(v3 + 56), *(_OWORD *)(v3 + 72));
}

uint64_t sub_2574D1250(uint64_t a1, char *a2, uint64_t a3)
{
  return sub_2574CF144(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(char ***)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(char **)(v3 + 64), *(void *)(v3 + 72), *(_UNKNOWN ***)(v3 + 80), *(void *)(v3 + 88), *(void *)(v3 + 96), *(void *)(v3 + 104), *(void *)(v3 + 112), *(char **)(v3 + 120), *(void *)(v3 + 128), *(char **)(v3 + 136),
           *(void *)(v3 + 144),
           *(uint64_t **)(v3 + 152),
           *(void *)(v3 + 160),
           *(_UNKNOWN ***)(v3 + 168));
}

uint64_t sub_2574D12B4(int a1, int a2, void *a3)
{
  return sub_2574CF970(a1, a2, a3);
}

uint64_t sub_2574D12D4()
{
  OUTLINED_FUNCTION_32_6();
  return sub_2574C0D2C(v1, v2, v3, v4, v5, v6, v7, *(void *)(v0 + 64), *(_OWORD *)(v0 + 72), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_2574D130C()
{
  return sub_2574CEADC();
}

uint64_t sub_2574D1328()
{
  return sub_2574D1394();
}

void sub_2574D1354(uint64_t a1, uint64_t a2)
{
  sub_2574CFF88(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_2574D1370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2574D080C(a1, a2, a3, *(_DWORD *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_2574D1394()
{
  OUTLINED_FUNCTION_32_6();
  return v1(v0);
}

uint64_t OUTLINED_FUNCTION_4_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v36 = *(void *)(v34 - 144);
  return sub_2574CD6FC(v29, v32, v28, v31, v36, a25, a28, a24, v34 - 136, a23, a22, a21, a20, a19, v30, v33, a16, a17);
}

uint64_t OUTLINED_FUNCTION_6_17(__n128 a1, uint64_t a2, __n128 *a3)
{
  *a3 = a1;
  a3[1].n128_u8[0] = 2;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_8_16()
{
  *(void *)(v0 - 200) = 0;
  *(void *)(v0 - 192) = 0;
  *(void *)(v0 - 184) = 0;
  *(unsigned char *)(v0 - 176) = -1;
  *(void *)(v0 - 160) = 0;
  *(void *)(v0 - 152) = 0;
  *(void *)(v0 - 168) = 0;
  *(unsigned char *)(v0 - 144) = -1;
  *(unsigned char *)(v0 - 92) = 4;
}

uint64_t OUTLINED_FUNCTION_11_14@<X0>(uint64_t a1@<X1>, char a2@<W8>)
{
  *(unsigned char *)(a1 + 16) = a2;
  return swift_willThrow();
}

void OUTLINED_FUNCTION_14_13()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  return sub_25752DDC8();
}

uint64_t OUTLINED_FUNCTION_17_11()
{
  *(void *)(v1 - 200) = 0;
  *(void *)(v1 - 192) = 0;
  *(void *)(v1 - 184) = 0;
  *(unsigned char *)(v1 - 176) = -1;
  *(void *)(v1 - 160) = 0;
  *(void *)(v1 - 152) = 0;
  *(void *)(v1 - 168) = 0;
  *(unsigned char *)(v1 - 144) = -1;
  *(unsigned char *)(v1 - 92) = 4;
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_12(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,long long a26)
{
  *(__n128 *)(a1 + 16) = a2;
  *(void *)(a1 + 32) = v26;
  *(void *)(a1 + 40) = v27;
  *(void *)(a1 + 48) = v28;
  *(void *)(a1 + 56) = a25;
  *(_OWORD *)(a1 + 64) = a26;
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return v0 - 200;
}

uint64_t OUTLINED_FUNCTION_24_9(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_25_9(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void *OUTLINED_FUNCTION_26_8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  result[4] = *(void *)(v2 - 368);
  result[5] = a2;
  result[6] = *(void *)(v2 - 376);
  result[7] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33_5(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v25;
  a1[2].n128_u64[1] = v26;
  a1[3].n128_u64[0] = v27;
  a1[3].n128_u64[1] = a25;
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39_3()
{
  return sub_2575CA350();
}

uint64_t OUTLINED_FUNCTION_41_2()
{
  return sub_257480BC8(v0);
}

void sub_2574D16BC()
{
  OUTLINED_FUNCTION_20_14();
  if (v4 != 10)
  {
    if (!(*(void *)(v5 + 16) >> 61))
    {
      uint64_t v9 = (const float *)OUTLINED_FUNCTION_21_12(v0, v1, v2, v3, v4, v5);
      sub_2574D5320(v9, v10, v11, v12, v13, v14, 10);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v7) {
    uint64_t v8 = (v6 - v7) / 4;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v15 = *(void *)(v5 + 16);
  if (v15)
  {
    if (v8 >= v15)
    {
      if (!v7) {
        return;
      }
      OUTLINED_FUNCTION_22_12();
      if (v20) {
        BOOL v21 = 0;
      }
      else {
        BOOL v21 = v19 > (unint64_t)v18;
      }
      if (!v21)
      {
        memcpy(v18, v16, 4 * v17);
        return;
      }
LABEL_20:
      OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_13_13();
      __break(1u);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_2574D1794(const float *a1, uint64_t a2, unsigned char *a3, float *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *a3;
  uint64_t v12 = *a6;
  LOBYTE(v289[0]) = *a3;
  unsigned __int8 v290 = v12;
  if ((sub_2574D546C(a1, a2, (unsigned __int8 *)v289, a4, a5, &v290, a7, a8) & 1) == 0)
  {
    switch(v11)
    {
      case 1:
        switch(v12)
        {
          case 1:
            return;
          case 2:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v129);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v130 - 48) = a4;
              *(void *)(v130 - 40) = sub_2574D6FCC;
              OUTLINED_FUNCTION_2_21(v130);
              goto LABEL_514;
            }
            break;
          case 3:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v131);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v132 - 48) = a4;
              *(void *)(v132 - 40) = sub_2574D6FD8;
              OUTLINED_FUNCTION_2_21(v132);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4) {
              goto LABEL_409;
            }
            break;
          case 5:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v133);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v134 - 48) = a4;
              *(void *)(v134 - 40) = sub_2574DB7A0;
              OUTLINED_FUNCTION_2_21(v134);
              goto LABEL_514;
            }
            break;
          case 6:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v135);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v136 - 48) = a4;
              *(void *)(v136 - 40) = sub_2574DB7B8;
              OUTLINED_FUNCTION_2_21(v136);
              goto LABEL_514;
            }
            break;
          case 7:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v137);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v138 - 48) = a4;
              *(void *)(v138 - 40) = sub_2574DB7BC;
              OUTLINED_FUNCTION_2_21(v138);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v139);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v140 - 48) = a4;
              *(void *)(v140 - 40) = sub_2574D6FE4;
              OUTLINED_FUNCTION_2_21(v140);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v141);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v142 - 48) = a4;
              *(void *)(v142 - 40) = sub_2574D6FF4;
              OUTLINED_FUNCTION_2_21(v142);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v143);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v144 - 48) = a4;
              *(void *)(v144 - 40) = sub_2574D700C;
              OUTLINED_FUNCTION_2_21(v144);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v145);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v146 - 48) = a4;
              *(void *)(v146 - 40) = sub_2574D701C;
              OUTLINED_FUNCTION_2_21(v146);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v147);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v148 - 48) = a4;
              *(void *)(v148 - 40) = sub_2574D6FAC;
              OUTLINED_FUNCTION_2_21(v148);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v93);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v94 - 48) = a4;
              *(void *)(v94 - 40) = sub_2574D6FC0;
              OUTLINED_FUNCTION_2_21(v94);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 2:
        switch(v12)
        {
          case 1:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v149);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v150 - 48) = a4;
              *(void *)(v150 - 40) = sub_2574D704C;
              OUTLINED_FUNCTION_2_21(v150);
              goto LABEL_514;
            }
            break;
          case 2:
            return;
          case 3:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v151);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v152 - 48) = a4;
              *(void *)(v152 - 40) = sub_2574D7058;
              OUTLINED_FUNCTION_2_21(v152);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v153);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v154 - 48) = a4;
              *(void *)(v154 - 40) = sub_2574DB7C4;
              OUTLINED_FUNCTION_2_21(v154);
              goto LABEL_514;
            }
            break;
          case 5:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v155);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v156 - 48) = a4;
              *(void *)(v156 - 40) = sub_2574DB7C8;
              OUTLINED_FUNCTION_2_21(v156);
              goto LABEL_514;
            }
            break;
          case 6:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v157);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v158 - 48) = a4;
              *(void *)(v158 - 40) = sub_2574DB7A4;
              OUTLINED_FUNCTION_2_21(v158);
              goto LABEL_514;
            }
            break;
          case 7:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v159);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v160 - 48) = a4;
              *(void *)(v160 - 40) = sub_2574DB7C0;
              OUTLINED_FUNCTION_2_21(v160);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v161);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v162 - 48) = a4;
              *(void *)(v162 - 40) = sub_2574D7064;
              OUTLINED_FUNCTION_2_21(v162);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v163);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v164 - 48) = a4;
              *(void *)(v164 - 40) = sub_2574D7074;
              OUTLINED_FUNCTION_2_21(v164);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v165);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v166 - 48) = a4;
              *(void *)(v166 - 40) = sub_2574D708C;
              OUTLINED_FUNCTION_2_21(v166);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v167);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v168 - 48) = a4;
              *(void *)(v168 - 40) = sub_2574D709C;
              OUTLINED_FUNCTION_2_21(v168);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v169);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v170 - 48) = a4;
              *(void *)(v170 - 40) = sub_2574D702C;
              OUTLINED_FUNCTION_2_21(v170);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v95);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v96 - 48) = a4;
              *(void *)(v96 - 40) = sub_2574D7040;
              OUTLINED_FUNCTION_2_21(v96);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 3:
        switch(v12)
        {
          case 1:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v171);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v172 - 48) = a4;
              *(void *)(v172 - 40) = sub_2574D70CC;
              OUTLINED_FUNCTION_2_21(v172);
              goto LABEL_514;
            }
            break;
          case 2:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v173);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v174 - 48) = a4;
              *(void *)(v174 - 40) = sub_2574D70D8;
              OUTLINED_FUNCTION_2_21(v174);
              goto LABEL_514;
            }
            break;
          case 3:
            return;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v175);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v176 - 48) = a4;
              *(void *)(v176 - 40) = sub_2574DB7CC;
              OUTLINED_FUNCTION_2_21(v176);
              goto LABEL_514;
            }
            break;
          case 5:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4) {
              goto LABEL_455;
            }
            break;
          case 6:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4) {
              goto LABEL_457;
            }
            break;
          case 7:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v177);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v178 - 48) = a4;
              *(void *)(v178 - 40) = sub_2574DB7A8;
              OUTLINED_FUNCTION_2_21(v178);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v179);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v180 - 48) = a4;
              *(void *)(v180 - 40) = sub_2574D70E4;
              OUTLINED_FUNCTION_2_21(v180);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v181);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v182 - 48) = a4;
              *(void *)(v182 - 40) = sub_2574D70F4;
              OUTLINED_FUNCTION_2_21(v182);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v183);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v184 - 48) = a4;
              *(void *)(v184 - 40) = sub_2574D710C;
              OUTLINED_FUNCTION_2_21(v184);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v185);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v186 - 48) = a4;
              *(void *)(v186 - 40) = sub_2574D711C;
              OUTLINED_FUNCTION_2_21(v186);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v187);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v188 - 48) = a4;
              *(void *)(v188 - 40) = sub_2574D70AC;
              OUTLINED_FUNCTION_2_21(v188);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v97);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v98 - 48) = a4;
              *(void *)(v98 - 40) = sub_2574D70C0;
              OUTLINED_FUNCTION_2_21(v98);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 4:
        switch(v12)
        {
          case 1:
            if (a4) {
              goto LABEL_147;
            }
            break;
          case 2:
            if (a4) {
              goto LABEL_149;
            }
            break;
          case 3:
            if (a4) {
              goto LABEL_151;
            }
            break;
          case 4:
            return;
          case 5:
            if (a4) {
              goto LABEL_153;
            }
            break;
          case 6:
            if (a4) {
              goto LABEL_155;
            }
            break;
          case 7:
            if (a4) {
              goto LABEL_157;
            }
            break;
          case 8:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v61);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v62 - 48) = a4;
              *(void *)(v62 - 40) = sub_2574D712C;
              OUTLINED_FUNCTION_2_21(v62);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v63);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v64 - 48) = a4;
              *(void *)(v64 - 40) = sub_2574D713C;
              OUTLINED_FUNCTION_2_21(v64);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v65);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v66 - 48) = a4;
              *(void *)(v66 - 40) = sub_2574D7154;
              OUTLINED_FUNCTION_2_21(v66);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v67);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v68 - 48) = a4;
              *(void *)(v68 - 40) = sub_2574D7164;
              OUTLINED_FUNCTION_2_21(v68);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v69);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v70 - 48) = a4;
              *(void *)(v70 - 40) = sub_2574DB774;
              OUTLINED_FUNCTION_2_21(v70);
              goto LABEL_514;
            }
            break;
          default:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v15);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v16 - 48) = a4;
              *(void *)(v16 - 40) = sub_2574D6FC0;
              OUTLINED_FUNCTION_2_21(v16);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 5:
        switch(v12)
        {
          case 1:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v189);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v190 - 48) = a4;
              *(void *)(v190 - 40) = sub_2574D7174;
              OUTLINED_FUNCTION_2_21(v190);
              goto LABEL_514;
            }
            break;
          case 2:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v191);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v192 - 48) = a4;
              *(void *)(v192 - 40) = sub_2574D7180;
              OUTLINED_FUNCTION_2_21(v192);
              goto LABEL_514;
            }
            break;
          case 3:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v193);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v194 - 48) = a4;
              *(void *)(v194 - 40) = sub_2574D718C;
              OUTLINED_FUNCTION_2_21(v194);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4) {
              goto LABEL_409;
            }
            break;
          case 5:
            return;
          case 6:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v197);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v198 - 48) = a4;
              *(void *)(v198 - 40) = sub_2574DB790;
              OUTLINED_FUNCTION_2_21(v198);
              goto LABEL_514;
            }
            break;
          case 7:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v199);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v200 - 48) = a4;
              *(void *)(v200 - 40) = sub_2574DB794;
              OUTLINED_FUNCTION_2_21(v200);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v201);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v202 - 48) = a4;
              *(void *)(v202 - 40) = sub_2574D7198;
              OUTLINED_FUNCTION_2_21(v202);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v203);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v204 - 48) = a4;
              *(void *)(v204 - 40) = sub_2574D71A8;
              OUTLINED_FUNCTION_2_21(v204);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v205);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v206 - 48) = a4;
              *(void *)(v206 - 40) = sub_2574D71C0;
              OUTLINED_FUNCTION_2_21(v206);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v207);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v208 - 48) = a4;
              *(void *)(v208 - 40) = sub_2574D71D0;
              OUTLINED_FUNCTION_2_21(v208);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v209);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v210 - 48) = a4;
              *(void *)(v210 - 40) = sub_2574DB778;
              OUTLINED_FUNCTION_2_21(v210);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
LABEL_409:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v195);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v196 - 48) = a4;
              *(void *)(v196 - 40) = sub_2574DB79C;
              OUTLINED_FUNCTION_2_21(v196);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 6:
        switch(v12)
        {
          case 1:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4) {
              goto LABEL_425;
            }
            break;
          case 2:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v213);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v214 - 48) = a4;
              *(void *)(v214 - 40) = sub_2574D71E0;
              OUTLINED_FUNCTION_2_21(v214);
              goto LABEL_514;
            }
            break;
          case 3:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v215);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v216 - 48) = a4;
              *(void *)(v216 - 40) = sub_2574D71EC;
              OUTLINED_FUNCTION_2_21(v216);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4) {
              goto LABEL_307;
            }
            break;
          case 5:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
LABEL_425:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v211);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v212 - 48) = a4;
              *(void *)(v212 - 40) = sub_2574DB7DC;
              OUTLINED_FUNCTION_2_21(v212);
              goto LABEL_514;
            }
            break;
          case 6:
            return;
          case 7:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v217);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v218 - 48) = a4;
              *(void *)(v218 - 40) = sub_2574DB798;
              OUTLINED_FUNCTION_2_21(v218);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v219);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v220 - 48) = a4;
              *(void *)(v220 - 40) = sub_2574D71F8;
              OUTLINED_FUNCTION_2_21(v220);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v221);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v222 - 48) = a4;
              *(void *)(v222 - 40) = sub_2574D7208;
              OUTLINED_FUNCTION_2_21(v222);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v223);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v224 - 48) = a4;
              *(void *)(v224 - 40) = sub_2574D7220;
              OUTLINED_FUNCTION_2_21(v224);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v225);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v226 - 48) = a4;
              *(void *)(v226 - 40) = sub_2574D7230;
              OUTLINED_FUNCTION_2_21(v226);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v227);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v228 - 48) = a4;
              *(void *)(v228 - 40) = sub_2574DB77C;
              OUTLINED_FUNCTION_2_21(v228);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
LABEL_307:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v99);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v100 - 48) = a4;
              *(void *)(v100 - 40) = sub_2574DB7D8;
              OUTLINED_FUNCTION_2_21(v100);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 7:
        switch(v12)
        {
          case 1:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4) {
              goto LABEL_455;
            }
            break;
          case 2:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4) {
              goto LABEL_457;
            }
            break;
          case 3:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v229);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v230 - 48) = a4;
              *(void *)(v230 - 40) = sub_2574D7240;
              OUTLINED_FUNCTION_2_21(v230);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4) {
              goto LABEL_309;
            }
            break;
          case 5:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
LABEL_455:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v231);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v232 - 48) = a4;
              *(void *)(v232 - 40) = sub_2574DB7D0;
              OUTLINED_FUNCTION_2_21(v232);
              goto LABEL_514;
            }
            break;
          case 6:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
LABEL_457:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v233);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v234 - 48) = a4;
              *(void *)(v234 - 40) = sub_2574DB7D4;
              OUTLINED_FUNCTION_2_21(v234);
              goto LABEL_514;
            }
            break;
          case 7:
            return;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v235);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v236 - 48) = a4;
              *(void *)(v236 - 40) = sub_2574D724C;
              OUTLINED_FUNCTION_2_21(v236);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v237);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v238 - 48) = a4;
              *(void *)(v238 - 40) = sub_2574D725C;
              OUTLINED_FUNCTION_2_21(v238);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v239);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v240 - 48) = a4;
              *(void *)(v240 - 40) = sub_2574D7274;
              OUTLINED_FUNCTION_2_21(v240);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v241);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v242 - 48) = a4;
              *(void *)(v242 - 40) = sub_2574D7284;
              OUTLINED_FUNCTION_2_21(v242);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v243);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v244 - 48) = a4;
              *(void *)(v244 - 40) = sub_2574DB780;
              OUTLINED_FUNCTION_2_21(v244);
              goto LABEL_514;
            }
            break;
          default:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
LABEL_309:
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v101);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v102 - 48) = a4;
              *(void *)(v102 - 40) = sub_2574DB7E0;
              OUTLINED_FUNCTION_2_21(v102);
              goto LABEL_514;
            }
            break;
        }
        break;
      case 8:
        switch((int)v12)
        {
          case 0:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v17);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v103);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v104 - 48) = a4;
              *(void *)(v104 - 40) = sub_2574DACC4;
              OUTLINED_FUNCTION_9_19(v104);
              goto LABEL_504;
            }
            break;
          case 1:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v20);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v109);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v110 - 48) = a4;
              *(void *)(v110 - 40) = sub_2574DAC68;
              OUTLINED_FUNCTION_9_19(v110);
              goto LABEL_504;
            }
            break;
          case 2:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v21);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v111);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v112 - 48) = a4;
              *(void *)(v112 - 40) = sub_2574DAC0C;
              OUTLINED_FUNCTION_9_19(v112);
              goto LABEL_504;
            }
            break;
          case 3:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v22);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v113);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v114 - 48) = a4;
              *(void *)(v114 - 40) = sub_2574DABB0;
              OUTLINED_FUNCTION_9_19(v114);
              goto LABEL_504;
            }
            break;
          case 4:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v23);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v115);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v116 - 48) = a4;
              *(void *)(v116 - 40) = sub_2574DABA4;
              OUTLINED_FUNCTION_9_19(v116);
              goto LABEL_504;
            }
            break;
          case 5:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v24);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v117);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v118 - 48) = a4;
              *(void *)(v118 - 40) = sub_2574DAB98;
              OUTLINED_FUNCTION_9_19(v118);
              goto LABEL_504;
            }
            break;
          case 6:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v25);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v119);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v120 - 48) = a4;
              *(void *)(v120 - 40) = sub_2574DAB8C;
              OUTLINED_FUNCTION_9_19(v120);
              goto LABEL_504;
            }
            break;
          case 7:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v26);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v121);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v122 - 48) = a4;
              *(void *)(v122 - 40) = sub_2574DAB80;
              OUTLINED_FUNCTION_9_19(v122);
              goto LABEL_504;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v123);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v124 - 48) = a4;
              *(void *)(v124 - 40) = sub_2574D830C;
              OUTLINED_FUNCTION_2_21(v124);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v125);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v126 - 48) = a4;
              *(void *)(v126 - 40) = sub_2574D831C;
              OUTLINED_FUNCTION_2_21(v126);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_7_16();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v127);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v128 - 48) = a4;
              *(void *)(v128 - 40) = sub_2574D7294;
              OUTLINED_FUNCTION_2_21(v128);
              goto LABEL_514;
            }
            break;
          default:
            return;
        }
        break;
      case 9:
        return;
      case 10:
        switch(v12)
        {
          case 1:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v71);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v245);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v246 - 48) = a4;
              *(void *)(v246 - 40) = sub_2574DAA74;
              OUTLINED_FUNCTION_9_19(v246);
              goto LABEL_504;
            }
            break;
          case 2:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v72);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v247);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v248 - 48) = a4;
              *(void *)(v248 - 40) = sub_2574DAA18;
              OUTLINED_FUNCTION_9_19(v248);
              goto LABEL_504;
            }
            break;
          case 3:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v73);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v249);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v250 - 48) = a4;
              *(void *)(v250 - 40) = sub_2574DA9BC;
              OUTLINED_FUNCTION_9_19(v250);
              goto LABEL_504;
            }
            break;
          case 4:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v74);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v251);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v252 - 48) = a4;
              *(void *)(v252 - 40) = sub_2574DA9B0;
              OUTLINED_FUNCTION_9_19(v252);
              goto LABEL_504;
            }
            break;
          case 5:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v75);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v253);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v254 - 48) = a4;
              *(void *)(v254 - 40) = sub_2574DA9A4;
              OUTLINED_FUNCTION_9_19(v254);
              goto LABEL_504;
            }
            break;
          case 6:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v76);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v255);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v256 - 48) = a4;
              *(void *)(v256 - 40) = sub_2574DA998;
              OUTLINED_FUNCTION_9_19(v256);
              goto LABEL_504;
            }
            break;
          case 7:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v77);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v257);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v258 - 48) = a4;
              *(void *)(v258 - 40) = sub_2574DA98C;
              OUTLINED_FUNCTION_9_19(v258);
              goto LABEL_504;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v259);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v260 - 48) = a4;
              *(void *)(v260 - 40) = sub_2574D9480;
              OUTLINED_FUNCTION_2_21(v260);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v261);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v262 - 48) = a4;
              *(void *)(v262 - 40) = sub_2574D9490;
              OUTLINED_FUNCTION_2_21(v262);
              goto LABEL_514;
            }
            break;
          case 10:
            return;
          case 11:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v263);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v264 - 48) = a4;
              *(void *)(v264 - 40) = sub_2574D949C;
              OUTLINED_FUNCTION_2_21(v264);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v265);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v266 - 48) = a4;
              *(void *)(v266 - 40) = sub_2574D832C;
              OUTLINED_FUNCTION_2_21(v266);
              goto LABEL_514;
            }
            break;
          default:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v18);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_5_19();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v105);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v106 - 48) = a4;
              *(void *)(v106 - 40) = sub_2574DAA7C;
              OUTLINED_FUNCTION_9_19(v106);
              goto LABEL_504;
            }
            break;
        }
        break;
      case 11:
        switch(v12)
        {
          case 1:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v78);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v267);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v268 - 48) = a4;
              *(void *)(v268 - 40) = sub_2574DA82C;
              OUTLINED_FUNCTION_9_19(v268);
              goto LABEL_504;
            }
            break;
          case 2:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v79);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v269);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v270 - 48) = a4;
              *(void *)(v270 - 40) = sub_2574DA7D0;
              OUTLINED_FUNCTION_9_19(v270);
              goto LABEL_504;
            }
            break;
          case 3:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v80);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v271);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v272 - 48) = a4;
              *(void *)(v272 - 40) = sub_2574DA774;
              OUTLINED_FUNCTION_9_19(v272);
              goto LABEL_504;
            }
            break;
          case 4:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v81);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v273);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v274 - 48) = a4;
              *(void *)(v274 - 40) = sub_2574DA768;
              OUTLINED_FUNCTION_9_19(v274);
              goto LABEL_504;
            }
            break;
          case 5:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v82);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v275);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v276 - 48) = a4;
              *(void *)(v276 - 40) = sub_2574DA75C;
              OUTLINED_FUNCTION_9_19(v276);
              goto LABEL_504;
            }
            break;
          case 6:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v83);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v277);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v278 - 48) = a4;
              *(void *)(v278 - 40) = sub_2574DA750;
              OUTLINED_FUNCTION_9_19(v278);
              goto LABEL_504;
            }
            break;
          case 7:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v84);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v279);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v280 - 48) = a4;
              *(void *)(v280 - 40) = sub_2574DA744;
              OUTLINED_FUNCTION_9_19(v280);
              goto LABEL_504;
            }
            break;
          case 8:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v281);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v282 - 48) = a4;
              *(void *)(v282 - 40) = sub_2574DA610;
              OUTLINED_FUNCTION_2_21(v282);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v283);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v284 - 48) = a4;
              *(void *)(v284 - 40) = sub_2574DA620;
              OUTLINED_FUNCTION_2_21(v284);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v285);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v286 - 48) = a4;
              *(void *)(v286 - 40) = sub_2574DA638;
              OUTLINED_FUNCTION_2_21(v286);
              goto LABEL_514;
            }
            break;
          case 11:
            return;
          case 12:
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v287);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v288 - 48) = a4;
              *(void *)(v288 - 40) = sub_2574D94AC;
              OUTLINED_FUNCTION_2_21(v288);
              goto LABEL_514;
            }
            break;
          default:
            OUTLINED_FUNCTION_10_13();
            MEMORY[0x270FA5388](v19);
            OUTLINED_FUNCTION_6_18();
            if (a1) {
              OUTLINED_FUNCTION_4_20();
            }
            if (a4)
            {
              sub_2574CB174();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v107);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v108 - 48) = a4;
              *(void *)(v108 - 40) = sub_2574DA834;
              OUTLINED_FUNCTION_9_19(v108);
LABEL_504:
              sub_2576A8350();
            }
            break;
        }
        break;
      case 12:
        switch(v12)
        {
          case 1:
            if (a4)
            {
LABEL_147:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v49);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v50 - 48) = a4;
              *(void *)(v50 - 40) = sub_2574D6EC0;
              OUTLINED_FUNCTION_2_21(v50);
              goto LABEL_514;
            }
            break;
          case 2:
            if (a4)
            {
LABEL_149:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v51);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v52 - 48) = a4;
              *(void *)(v52 - 40) = sub_2574D6ECC;
              OUTLINED_FUNCTION_2_21(v52);
              goto LABEL_514;
            }
            break;
          case 3:
            if (a4)
            {
LABEL_151:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v53);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v54 - 48) = a4;
              *(void *)(v54 - 40) = sub_2574D6ED8;
              OUTLINED_FUNCTION_2_21(v54);
              goto LABEL_514;
            }
            break;
          case 5:
            if (a4)
            {
LABEL_153:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v55);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v56 - 48) = a4;
              *(void *)(v56 - 40) = sub_2574DB784;
              OUTLINED_FUNCTION_2_21(v56);
              goto LABEL_514;
            }
            break;
          case 6:
            if (a4)
            {
LABEL_155:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v57);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v58 - 48) = a4;
              *(void *)(v58 - 40) = sub_2574DB788;
              OUTLINED_FUNCTION_2_21(v58);
              goto LABEL_514;
            }
            break;
          case 7:
            if (a4)
            {
LABEL_157:
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v59);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v60 - 48) = a4;
              *(void *)(v60 - 40) = sub_2574DB78C;
              OUTLINED_FUNCTION_2_21(v60);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v85);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v86 - 48) = a4;
              *(void *)(v86 - 40) = sub_2574D6EE4;
              OUTLINED_FUNCTION_2_21(v86);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v87);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v88 - 48) = a4;
              *(void *)(v88 - 40) = sub_2574D6EF4;
              OUTLINED_FUNCTION_2_21(v88);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v89);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v90 - 48) = a4;
              *(void *)(v90 - 40) = sub_2574D6F0C;
              OUTLINED_FUNCTION_2_21(v90);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v91);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v92 - 48) = a4;
              *(void *)(v92 - 40) = sub_2574D6F1C;
              OUTLINED_FUNCTION_2_21(v92);
              goto LABEL_514;
            }
            break;
          case 12:
            return;
          default:
            v289[0] = a1;
            v289[1] = a2;
            sub_2574DB6C0();
            sub_2576A6F80();
            break;
        }
        break;
      default:
        switch(v12)
        {
          case 1:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v13);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v14 - 48) = a4;
              *(void *)(v14 - 40) = sub_2574D6F40;
              OUTLINED_FUNCTION_2_21(v14);
              goto LABEL_514;
            }
            break;
          case 2:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v27);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v28 - 48) = a4;
              *(void *)(v28 - 40) = sub_2574D6F4C;
              OUTLINED_FUNCTION_2_21(v28);
              goto LABEL_514;
            }
            break;
          case 3:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v29);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v30 - 48) = a4;
              *(void *)(v30 - 40) = sub_2574D6F58;
              OUTLINED_FUNCTION_2_21(v30);
              goto LABEL_514;
            }
            break;
          case 4:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v31);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v32 - 48) = a4;
              *(void *)(v32 - 40) = sub_2574DB79C;
              OUTLINED_FUNCTION_2_21(v32);
              goto LABEL_514;
            }
            break;
          case 5:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v33);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v34 - 48) = a4;
              *(void *)(v34 - 40) = sub_2574DB7AC;
              OUTLINED_FUNCTION_2_21(v34);
              goto LABEL_514;
            }
            break;
          case 6:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v35);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v36 - 48) = a4;
              *(void *)(v36 - 40) = sub_2574DB7B0;
              OUTLINED_FUNCTION_2_21(v36);
              goto LABEL_514;
            }
            break;
          case 7:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v37);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v38 - 48) = a4;
              *(void *)(v38 - 40) = sub_2574DB7B4;
              OUTLINED_FUNCTION_2_21(v38);
              goto LABEL_514;
            }
            break;
          case 8:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v39);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v40 - 48) = a4;
              *(void *)(v40 - 40) = sub_2574D6F64;
              OUTLINED_FUNCTION_2_21(v40);
              goto LABEL_514;
            }
            break;
          case 9:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v41);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v42 - 48) = a4;
              *(void *)(v42 - 40) = sub_2574D6F74;
              OUTLINED_FUNCTION_2_21(v42);
              goto LABEL_514;
            }
            break;
          case 10:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v43);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v44 - 48) = a4;
              *(void *)(v44 - 40) = sub_2574D6F8C;
              OUTLINED_FUNCTION_2_21(v44);
              goto LABEL_514;
            }
            break;
          case 11:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v45);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v46 - 48) = a4;
              *(void *)(v46 - 40) = sub_2574D6F9C;
              OUTLINED_FUNCTION_2_21(v46);
              goto LABEL_514;
            }
            break;
          case 12:
            if (a4)
            {
              OUTLINED_FUNCTION_3_19();
              OUTLINED_FUNCTION_1_26();
              MEMORY[0x270FA5388](v47);
              OUTLINED_FUNCTION_0_25();
              *(void *)(v48 - 48) = a4;
              *(void *)(v48 - 40) = sub_2574D6F2C;
              OUTLINED_FUNCTION_2_21(v48);
LABEL_514:
              sub_2576A8350();
            }
            break;
          default:
            return;
        }
        break;
    }
  }
}

void sub_2574D5154()
{
  OUTLINED_FUNCTION_20_14();
  if (v0 != 3)
  {
    unint64_t v5 = *(void *)(v1 + 16);
    if (!(v5 >> 60))
    {
      sub_2574D5320((const float *)(v1 + 32), v1 + 32 + 8 * v5, v3, v2, v0, v1, 3);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v3) {
    uint64_t v4 = (v2 - (uint64_t)v3) / 8;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    if (v4 >= v6)
    {
      if (!v3) {
        return;
      }
      if (v1 + 32 >= (unint64_t)&v3[2 * v6] || v1 + 32 + 8 * v6 <= (unint64_t)v3)
      {
        memcpy(v3, (const void *)(v1 + 32), 8 * v6);
        return;
      }
LABEL_20:
      OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_13_13();
      __break(1u);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

void sub_2574D5248()
{
  OUTLINED_FUNCTION_20_14();
  if (v4 != 2)
  {
    if (!(*(void *)(v5 + 16) >> 61))
    {
      uint64_t v9 = (const float *)OUTLINED_FUNCTION_21_12(v0, v1, v2, v3, v4, v5);
      sub_2574D5320(v9, v10, v11, v12, v13, v14, 3);
      return;
    }
    __break(1u);
    goto LABEL_19;
  }
  if (v7) {
    uint64_t v8 = (v6 - v7) / 4;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v15 = *(void *)(v5 + 16);
  if (v15)
  {
    if (v8 >= v15)
    {
      if (!v7) {
        return;
      }
      OUTLINED_FUNCTION_22_12();
      if (v20) {
        BOOL v21 = 0;
      }
      else {
        BOOL v21 = v19 > (unint64_t)v18;
      }
      if (!v21)
      {
        memcpy(v18, v16, 4 * v17);
        return;
      }
LABEL_20:
      OUTLINED_FUNCTION_14_14();
      OUTLINED_FUNCTION_13_13();
      __break(1u);
      return;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
}

uint64_t sub_2574D5320(const float *a1, uint64_t a2, float *a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, char a7)
{
  uint64_t v19 = a4;
  uint64_t v13 = sub_2576A8EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v21 = a7;
  unsigned __int8 v20 = a5;
  uint64_t v17 = *(void *)(a6 + 16);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8E1F8], v13);
  sub_2574D1794(a1, a2, &v21, a3, v19, &v20, v17, (uint64_t)v16);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_2574D546C(const float *a1, uint64_t a2, unsigned __int8 *a3, float *a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v109 = a1;
  uint64_t v110 = a8;
  uint64_t v106 = a5;
  uint64_t v107 = a2;
  uint64_t v108 = (double *)a4;
  uint64_t v10 = sub_2576A6E40();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v105 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v104 = (char *)&v94 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v102 = (char *)&v94 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v103 = (char *)&v94 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v101 = (char *)&v94 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v99 = (char *)&v94 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v100 = (char *)&v94 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v98 = (char *)&v94 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v96 = (char *)&v94 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v97 = (char *)&v94 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v95 = (char *)&v94 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v94 = (char *)&v94 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002010);
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_2576A8EF0();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)&v94 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002018);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)&v94 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v45 = *a3;
  int v46 = *a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v41, v110, v38);
  int v47 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v41, v38);
  if (v47 == *MEMORY[0x263F8E208])
  {
    uint64_t v48 = (unsigned int *)MEMORY[0x263F8CCF8];
  }
  else
  {
    if (v47 != *MEMORY[0x263F8E1F8])
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 1, 1, v10);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
      goto LABEL_7;
    }
    uint64_t v48 = (unsigned int *)MEMORY[0x263F8CCF0];
  }
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v44, *v48, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v10);
LABEL_7:
  uint64_t v49 = (uint64_t)&v37[*(int *)(v35 + 64)];
  *uint64_t v37 = v45;
  v37[1] = v46;
  sub_2574DB70C((uint64_t)v44, v49);
  switch(v45)
  {
    case 0:
      if (v46 == 10) {
        goto LABEL_49;
      }
      if (v46 != 11) {
        goto LABEL_152;
      }
LABEL_51:
      sub_2574B92D8(v49, &qword_26A002018);
      if (v108) {
        uint64_t v50 = (v106 - (uint64_t)v108) / 8;
      }
      else {
        uint64_t v50 = 0;
      }
      if (v109) {
        uint64_t v68 = v107 - (void)v109;
      }
      else {
        uint64_t v68 = 0;
      }
      if (v68 != v50) {
        goto LABEL_258;
      }
      if (v68 < 0) {
        goto LABEL_260;
      }
      if (!v109) {
        goto LABEL_275;
      }
      if (!v108) {
        goto LABEL_276;
      }
      uint64_t v67 = 1;
      vDSP_vflt8D((const char *)v109, 1, v108, 1, v107 - (void)v109);
      return v67;
    case 1:
      if (v46 == 11)
      {
        if (v108)
        {
          uint64_t v50 = v106 - (void)v108;
          uint64_t v61 = (const __int16 *)v109;
          if (!v109) {
            goto LABEL_301;
          }
          v50 /= 8;
        }
        else
        {
          uint64_t v61 = (const __int16 *)v109;
          if (!v109)
          {
LABEL_302:
            __break(1u);
            goto LABEL_303;
          }
          uint64_t v50 = 0;
        }
        if ((v107 - (uint64_t)v61) / 2 != v50) {
          goto LABEL_303;
        }
        if (v107 - (uint64_t)v61 >= -1)
        {
          if (v108)
          {
            uint64_t v67 = 1;
            vDSP_vflt16D(v61, 1, v108, 1, (v107 - (uint64_t)v61) / 2);
            goto LABEL_206;
          }
          goto LABEL_283;
        }
        goto LABEL_265;
      }
      if (v46 == 10)
      {
        if (v108)
        {
          uint64_t v50 = v106 - (void)v108;
          uint64_t v51 = (const __int16 *)v109;
          if (!v109) {
            goto LABEL_289;
          }
          v50 /= 4;
        }
        else
        {
          uint64_t v51 = (const __int16 *)v109;
          if (!v109)
          {
LABEL_290:
            __break(1u);
            goto LABEL_291;
          }
          uint64_t v50 = 0;
        }
        if ((v107 - (uint64_t)v51) / 2 != v50) {
          goto LABEL_291;
        }
        if (v107 - (uint64_t)v51 >= -1)
        {
          if (v108)
          {
            uint64_t v67 = 1;
            vDSP_vflt16(v51, 1, (float *)v108, 1, (v107 - (uint64_t)v51) / 2);
LABEL_206:
            sub_2574B92D8(v49, &qword_26A002018);
            return v67;
          }
          goto LABEL_277;
        }
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
        goto LABEL_273;
      }
LABEL_152:
      sub_2574B92D8((uint64_t)v37, &qword_26A002010);
      return 0;
    case 2:
      if (v46 == 11)
      {
        if (v108)
        {
          uint64_t v50 = v106 - (void)v108;
          uint64_t v62 = (const int *)v109;
          if (!v109) {
            goto LABEL_304;
          }
          v50 /= 8;
        }
        else
        {
          uint64_t v62 = (const int *)v109;
          if (!v109)
          {
LABEL_305:
            __break(1u);
            goto LABEL_306;
          }
          uint64_t v50 = 0;
        }
        if ((v107 - (uint64_t)v62) / 4 != v50) {
          goto LABEL_306;
        }
        if (v107 - (uint64_t)v62 >= -3)
        {
          if (v108)
          {
            uint64_t v67 = 1;
            vDSP_vflt32D(v62, 1, v108, 1, (v107 - (uint64_t)v62) / 4);
            goto LABEL_206;
          }
          goto LABEL_284;
        }
        goto LABEL_266;
      }
      if (v46 != 10) {
        goto LABEL_152;
      }
      if (v108)
      {
        uint64_t v50 = v106 - (void)v108;
        uint64_t v52 = (const int *)v109;
        if (!v109) {
          goto LABEL_292;
        }
        v50 /= 4;
      }
      else
      {
        uint64_t v52 = (const int *)v109;
        if (!v109)
        {
LABEL_293:
          __break(1u);
          goto LABEL_294;
        }
        uint64_t v50 = 0;
      }
      if ((v107 - (uint64_t)v52) / 4 != v50) {
        goto LABEL_294;
      }
      if (v107 - (uint64_t)v52 >= -3)
      {
        if (v108)
        {
          uint64_t v67 = 1;
          vDSP_vflt32(v52, 1, (float *)v108, 1, (v107 - (uint64_t)v52) / 4);
          goto LABEL_206;
        }
        goto LABEL_278;
      }
      goto LABEL_262;
    case 4:
      if (v46 == 11)
      {
        if (v108) {
          uint64_t v50 = (v106 - (uint64_t)v108) / 8;
        }
        else {
          uint64_t v50 = 0;
        }
        if (v109) {
          uint64_t v81 = v107 - (void)v109;
        }
        else {
          uint64_t v81 = 0;
        }
        if (v81 == v50)
        {
          if ((v50 & 0x8000000000000000) == 0)
          {
            if (v109)
            {
              if (v108)
              {
                uint64_t v67 = 1;
                vDSP_vfltu8D((const unsigned __int8 *)v109, 1, v108, 1, v107 - (void)v109);
                goto LABEL_206;
              }
              goto LABEL_286;
            }
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            v50 += 3;
            if ((unint64_t)v50 < 7) {
              goto LABEL_290;
            }
LABEL_291:
            __break(1u);
LABEL_292:
            v50 += 3;
            if ((unint64_t)v50 < 7) {
              goto LABEL_293;
            }
LABEL_294:
            __break(1u);
LABEL_295:
            v50 += 3;
            if ((unint64_t)v50 < 7) {
              goto LABEL_296;
            }
LABEL_297:
            __break(1u);
LABEL_298:
            v50 += 3;
            if ((unint64_t)v50 < 7) {
              goto LABEL_299;
            }
LABEL_300:
            __break(1u);
LABEL_301:
            v50 += 7;
            if ((unint64_t)v50 < 0xF) {
              goto LABEL_302;
            }
LABEL_303:
            __break(1u);
LABEL_304:
            v50 += 7;
            if ((unint64_t)v50 < 0xF) {
              goto LABEL_305;
            }
LABEL_306:
            __break(1u);
LABEL_307:
            v50 += 7;
            if ((unint64_t)v50 < 0xF) {
              goto LABEL_308;
            }
LABEL_309:
            __break(1u);
LABEL_310:
            v50 += 7;
            if ((unint64_t)v50 >= 0xF) {
              goto LABEL_312;
            }
            goto LABEL_311;
          }
          goto LABEL_272;
        }
        goto LABEL_270;
      }
      if (v46 != 10) {
        goto LABEL_152;
      }
      if (v108) {
        uint64_t v50 = (v106 - (uint64_t)v108) / 4;
      }
      else {
        uint64_t v50 = 0;
      }
      if (v109) {
        uint64_t v69 = v107 - (void)v109;
      }
      else {
        uint64_t v69 = 0;
      }
      if (v69 == v50)
      {
        if ((v69 & 0x8000000000000000) == 0)
        {
          if (v109)
          {
            if (v108)
            {
              uint64_t v67 = 1;
              vDSP_vfltu8((const unsigned __int8 *)v109, 1, (float *)v108, 1, v107 - (void)v109);
              goto LABEL_206;
            }
            goto LABEL_280;
          }
LABEL_279:
          __break(1u);
LABEL_280:
          __break(1u);
LABEL_281:
          __break(1u);
LABEL_282:
          __break(1u);
LABEL_283:
          __break(1u);
LABEL_284:
          __break(1u);
          goto LABEL_285;
        }
        goto LABEL_271;
      }
      goto LABEL_269;
    case 5:
      if (v46 == 11)
      {
        if (v108)
        {
          uint64_t v50 = v106 - (void)v108;
          uint64_t v63 = (const unsigned __int16 *)v109;
          if (!v109) {
            goto LABEL_307;
          }
          vDSP_Length v64 = v50 / 8;
        }
        else
        {
          uint64_t v63 = (const unsigned __int16 *)v109;
          if (!v109)
          {
LABEL_308:
            __break(1u);
            goto LABEL_309;
          }
          vDSP_Length v64 = 0;
        }
        uint64_t v50 = v107 - (void)v63;
        if ((v107 - (uint64_t)v63) / 2 != v64) {
          goto LABEL_309;
        }
        if (v50 >= -1)
        {
          if (v108)
          {
            uint64_t v67 = 1;
            vDSP_vfltu16D(v63, 1, v108, 1, v64);
            goto LABEL_206;
          }
          goto LABEL_287;
        }
        goto LABEL_267;
      }
      if (v46 != 10) {
        goto LABEL_152;
      }
      if (v108)
      {
        uint64_t v50 = v106 - (void)v108;
        uint64_t v53 = (const unsigned __int16 *)v109;
        if (!v109) {
          goto LABEL_295;
        }
        v50 /= 4;
      }
      else
      {
        uint64_t v53 = (const unsigned __int16 *)v109;
        if (!v109)
        {
LABEL_296:
          __break(1u);
          goto LABEL_297;
        }
        uint64_t v50 = 0;
      }
      if ((v107 - (uint64_t)v53) / 2 != v50) {
        goto LABEL_297;
      }
      if (v107 - (uint64_t)v53 >= -1)
      {
        if (v108)
        {
          uint64_t v67 = 1;
          vDSP_vfltu16(v53, 1, (float *)v108, 1, (v107 - (uint64_t)v53) / 2);
          goto LABEL_206;
        }
        goto LABEL_281;
      }
      goto LABEL_263;
    case 6:
      if (v46 == 11)
      {
        if (v108)
        {
          uint64_t v50 = v106 - (void)v108;
          uint64_t v65 = (const unsigned int *)v109;
          if (!v109) {
            goto LABEL_310;
          }
          v50 /= 8;
        }
        else
        {
          uint64_t v65 = (const unsigned int *)v109;
          if (!v109)
          {
LABEL_311:
            __break(1u);
LABEL_312:
            __break(1u);
LABEL_313:
            if ((v50 & 0x8000000000000000) == 0) {
              __break(1u);
            }
LABEL_315:
            __break(1u);
LABEL_316:
            __break(1u);
LABEL_317:
            if ((v50 & 0x8000000000000000) == 0) {
              __break(1u);
            }
LABEL_319:
            __break(1u);
LABEL_320:
            __break(1u);
            JUMPOUT(0x2574D6E30);
          }
          uint64_t v50 = 0;
        }
        if ((v107 - (uint64_t)v65) / 4 != v50) {
          goto LABEL_312;
        }
        if (v107 - (uint64_t)v65 >= -3)
        {
          if (v108)
          {
            uint64_t v67 = 1;
            vDSP_vfltu32D(v65, 1, v108, 1, (v107 - (uint64_t)v65) / 4);
            goto LABEL_206;
          }
          goto LABEL_288;
        }
        goto LABEL_268;
      }
      if (v46 != 10) {
        goto LABEL_152;
      }
      if (v108)
      {
        uint64_t v50 = v106 - (void)v108;
        uint64_t v54 = (const unsigned int *)v109;
        if (!v109) {
          goto LABEL_298;
        }
        v50 /= 4;
      }
      else
      {
        uint64_t v54 = (const unsigned int *)v109;
        if (!v109)
        {
LABEL_299:
          __break(1u);
          goto LABEL_300;
        }
        uint64_t v50 = 0;
      }
      if ((v107 - (uint64_t)v54) / 4 != v50) {
        goto LABEL_300;
      }
      if (v107 - (uint64_t)v54 >= -3)
      {
        if (v108)
        {
          uint64_t v67 = 1;
          vDSP_vfltu32(v54, 1, (float *)v108, 1, (v107 - (uint64_t)v54) / 4);
          goto LABEL_206;
        }
        goto LABEL_282;
      }
      goto LABEL_264;
    case 10:
      switch(v46)
      {
        case 0:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v94;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v94, v49, v10);
          uint64_t v56 = v106 - (void)v108;
          if (!v108) {
            uint64_t v56 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v56;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v58 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v58 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v58;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002080);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002088, &qword_26A002080);
          sub_2576A6EB0();
          goto LABEL_256;
        case 1:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v95;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v95, v49, v10);
          if (v108) {
            uint64_t v70 = (v106 - (uint64_t)v108) / 2;
          }
          else {
            uint64_t v70 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v70;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v86 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v86 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v86;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002070);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002078, &qword_26A002070);
          sub_2576A6EC0();
          goto LABEL_256;
        case 2:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v97;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v97, v49, v10);
          if (v108) {
            uint64_t v71 = (v106 - (uint64_t)v108) / 4;
          }
          else {
            uint64_t v71 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v71;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v87 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v87 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v87;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002060);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002068, &qword_26A002060);
          sub_2576A6ED0();
          goto LABEL_256;
        case 4:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v96;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v96, v49, v10);
          uint64_t v72 = v106 - (void)v108;
          if (!v108) {
            uint64_t v72 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v72;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v73 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v73 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v73;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002050);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002058, &qword_26A002050);
          sub_2576A6EE0();
          goto LABEL_256;
        case 5:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v98;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v98, v49, v10);
          if (v108) {
            uint64_t v74 = (v106 - (uint64_t)v108) / 2;
          }
          else {
            uint64_t v74 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v74;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v88 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v88 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v88;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002040);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002048, &qword_26A002040);
          sub_2576A6EF0();
          goto LABEL_256;
        case 6:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v100;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v100, v49, v10);
          if (v108) {
            uint64_t v75 = (v106 - (uint64_t)v108) / 4;
          }
          else {
            uint64_t v75 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v75;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v89 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            uint64_t v89 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v89;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002090);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002028);
          sub_257492AF8(&qword_26A002098, &qword_26A002090);
          sub_257492AF8(&qword_26A002038, &qword_26A002028);
          sub_2576A6F00();
          goto LABEL_256;
        case 11:
          if (v108) {
            uint64_t v50 = (v106 - (uint64_t)v108) / 8;
          }
          else {
            uint64_t v50 = 0;
          }
          if (!v109) {
            goto LABEL_313;
          }
          if (v50 >= (v107 - (uint64_t)v109) / 4) {
            vDSP_Length v83 = (v107 - (uint64_t)v109) / 4;
          }
          else {
            vDSP_Length v83 = v50;
          }
          if ((v83 & 0x8000000000000000) != 0) {
            goto LABEL_315;
          }
          if (!v108) {
            goto LABEL_316;
          }
          uint64_t v67 = 1;
          vDSP_vspdp(v109, 1, v108, 1, v83);
          break;
        default:
          goto LABEL_152;
      }
      goto LABEL_206;
    case 11:
      switch(v46)
      {
        case 0:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v99;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v99, v49, v10);
          uint64_t v59 = v106 - (void)v108;
          if (!v108) {
            uint64_t v59 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v59;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v60 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v60 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v60;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002080);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002088, &qword_26A002080);
          sub_2576A6E50();
          goto LABEL_256;
        case 1:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v101;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v101, v49, v10);
          if (v108) {
            uint64_t v76 = (v106 - (uint64_t)v108) / 2;
          }
          else {
            uint64_t v76 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v76;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v90 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v90 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v90;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002070);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002078, &qword_26A002070);
          sub_2576A6E60();
          goto LABEL_256;
        case 2:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v103;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v103, v49, v10);
          if (v108) {
            uint64_t v77 = (v106 - (uint64_t)v108) / 4;
          }
          else {
            uint64_t v77 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v77;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v91 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v91 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v91;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002060);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002068, &qword_26A002060);
          sub_2576A6E70();
          goto LABEL_256;
        case 4:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v102;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v102, v49, v10);
          uint64_t v78 = v106 - (void)v108;
          if (!v108) {
            uint64_t v78 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v78;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v79 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v79 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v79;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002050);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002058, &qword_26A002050);
          sub_2576A6E80();
          goto LABEL_256;
        case 5:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v104;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v104, v49, v10);
          if (v108) {
            uint64_t v80 = (v106 - (uint64_t)v108) / 2;
          }
          else {
            uint64_t v80 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v80;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v92 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v92 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v92;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002040);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002048, &qword_26A002040);
          sub_2576A6E90();
          goto LABEL_256;
        case 6:
          if (__swift_getEnumTagSinglePayload(v49, 1, v10) == 1) {
            goto LABEL_152;
          }
          uint64_t v55 = v105;
          (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v105, v49, v10);
          if (v108) {
            uint64_t v82 = (v106 - (uint64_t)v108) / 4;
          }
          else {
            uint64_t v82 = 0;
          }
          uint64_t v113 = v108;
          uint64_t v114 = v82;
          uint64_t v57 = v10;
          if (v109) {
            uint64_t v93 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            uint64_t v93 = 0;
          }
          uint64_t v111 = v109;
          uint64_t v112 = v93;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002020);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002028);
          sub_257492AF8(&qword_26A002030, &qword_26A002020);
          sub_257492AF8(&qword_26A002038, &qword_26A002028);
          sub_2576A6EA0();
LABEL_256:
          (*(void (**)(char *, uint64_t))(v11 + 8))(v55, v57);
          return 1;
        case 10:
          if (v108) {
            uint64_t v50 = (v106 - (uint64_t)v108) / 4;
          }
          else {
            uint64_t v50 = 0;
          }
          if (!v109) {
            goto LABEL_317;
          }
          if (v50 >= (v107 - (uint64_t)v109) / 8) {
            vDSP_Length v84 = (v107 - (uint64_t)v109) / 8;
          }
          else {
            vDSP_Length v84 = v50;
          }
          if ((v84 & 0x8000000000000000) != 0) {
            goto LABEL_319;
          }
          if (!v108) {
            goto LABEL_320;
          }
          uint64_t v67 = 1;
          vDSP_vdpsp((const double *)v109, 1, (float *)v108, 1, v84);
          break;
        default:
          goto LABEL_152;
      }
      goto LABEL_206;
    case 12:
      if (v46 == 11) {
        goto LABEL_51;
      }
      if (v46 != 10) {
        goto LABEL_152;
      }
LABEL_49:
      sub_2574B92D8(v49, &qword_26A002018);
      if (v108) {
        uint64_t v50 = (v106 - (uint64_t)v108) / 4;
      }
      else {
        uint64_t v50 = 0;
      }
      if (v109) {
        uint64_t v66 = v107 - (void)v109;
      }
      else {
        uint64_t v66 = 0;
      }
      if (v66 != v50)
      {
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
        goto LABEL_261;
      }
      if (v66 < 0) {
        goto LABEL_259;
      }
      if (!v109)
      {
LABEL_273:
        __break(1u);
        goto LABEL_274;
      }
      if (!v108)
      {
LABEL_274:
        __break(1u);
LABEL_275:
        __break(1u);
LABEL_276:
        __break(1u);
LABEL_277:
        __break(1u);
LABEL_278:
        __break(1u);
        goto LABEL_279;
      }
      uint64_t v67 = 1;
      vDSP_vflt8((const char *)v109, 1, (float *)v108, 1, v107 - (void)v109);
      return v67;
    default:
      goto LABEL_152;
  }
}

unsigned __int8 *sub_2574D6EC0@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_2574D6ECC@<X0>(unsigned __int8 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_2574D6ED8@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D6EE4@<H0>(unsigned __int8 *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D6EF4@<S0>(unsigned __int8 *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D6F0C@<S0>(unsigned __int8 *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D6F1C@<D0>(unsigned __int8 *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

unsigned char *sub_2574D6F2C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

char *sub_2574D6F40@<X0>(char *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

char *sub_2574D6F4C@<X0>(char *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

char *sub_2574D6F58@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D6F64@<H0>(char *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D6F74@<S0>(char *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D6F8C@<S0>(char *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D6F9C@<D0>(char *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

_WORD *sub_2574D6FAC@<X0>(_WORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

unsigned char *sub_2574D6FC0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 *sub_2574D6FCC@<X0>(__int16 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

__int16 *sub_2574D6FD8@<X0>(__int16 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D6FE4@<H0>(__int16 *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D6FF4@<S0>(__int16 *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D700C@<S0>(__int16 *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D701C@<D0>(__int16 *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

_DWORD *sub_2574D702C@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

_DWORD *sub_2574D7040@<X0>(_DWORD *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_DWORD *sub_2574D704C@<X0>(_DWORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

int *sub_2574D7058@<X0>(int *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D7064@<H0>(int *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D7074@<S0>(int *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D708C@<S0>(int *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D709C@<D0>(int *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

void *sub_2574D70AC@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void *sub_2574D70C0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_2574D70CC@<X0>(void *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_2574D70D8@<X0>(void *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D70E4@<H0>(uint64_t *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D70F4@<S0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D710C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D711C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

short float sub_2574D712C@<H0>(unsigned __int8 *a1@<X0>, short float *a2@<X8>, __n128 a3@<Q0>)
{
  a3.n128_u8[0] = *a1;
  short float result = (short float)a3.n128_u16[0];
  *a2 = result;
  return result;
}

float sub_2574D713C@<S0>(unsigned char *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  LOBYTE(a3) = *a1;
  float result = (float)a3;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D7154@<S0>(unsigned char *a1@<X0>, float *a2@<X8>, unsigned int a3@<S0>)
{
  LOBYTE(a3) = *a1;
  float result = (float)a3;
  *a2 = result;
  return result;
}

double sub_2574D7164@<D0>(unsigned char *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  LOBYTE(a3) = *a1;
  double result = (double)a3;
  *a2 = result;
  return result;
}

_WORD *sub_2574D7174@<X0>(_WORD *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int16 *sub_2574D7180@<X0>(unsigned __int16 *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int16 *sub_2574D718C@<X0>(unsigned __int16 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D7198@<H0>(unsigned __int16 *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D71A8@<S0>(_WORD *a1@<X0>, _WORD *a2@<X8>, unsigned int a3@<S0>)
{
  LOWORD(a3) = *a1;
  float result = (float)a3;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D71C0@<S0>(_WORD *a1@<X0>, float *a2@<X8>, unsigned int a3@<S0>)
{
  LOWORD(a3) = *a1;
  float result = (float)a3;
  *a2 = result;
  return result;
}

double sub_2574D71D0@<D0>(_WORD *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  LOWORD(a3) = *a1;
  double result = (double)a3;
  *a2 = result;
  return result;
}

_DWORD *sub_2574D71E0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned int *sub_2574D71EC@<X0>(unsigned int *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D71F8@<H0>(unsigned int *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D7208@<S0>(unsigned int *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D7220@<S0>(unsigned int *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D7230@<D0>(_DWORD *a1@<X0>, double *a2@<X8>, unint64_t a3@<D0>)
{
  LODWORD(a3) = *a1;
  double result = (double)a3;
  *a2 = result;
  return result;
}

void *sub_2574D7240@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

short float sub_2574D724C@<H0>(unint64_t *a1@<X0>, short float *a2@<X8>)
{
  short float result = (short float)*a1;
  *a2 = result;
  return result;
}

float sub_2574D725C@<S0>(unint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574D7274@<S0>(unint64_t *a1@<X0>, float *a2@<X8>)
{
  float result = (float)*a1;
  *a2 = result;
  return result;
}

double sub_2574D7284@<D0>(unint64_t *a1@<X0>, double *a2@<X8>)
{
  double result = (double)*a1;
  *a2 = result;
  return result;
}

_WORD *sub_2574D7294@<X0>(_WORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFF) != 0;
  return result;
}

uint64_t sub_2574D72A8@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(short float *)&v12 <= COERCE_SHORT_FLOAT(-10232))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(short float *)&v12 < COERCE_SHORT_FLOAT(22528))
  {
    *a3 = (int)*(short float *)&v12;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2574D74C8@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(short float *)&v12 <= COERCE_SHORT_FLOAT(-2047))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(short float *)&v12 < COERCE_SHORT_FLOAT(30720))
  {
    *a3 = (int)*(short float *)&v12;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2574D76E8@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) != 0) {
    *a3 = (int)*(short float *)&v12;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574D78E0@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) != 0) {
    *a3 = (uint64_t)*(short float *)&v12;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574D7AD8@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (*(short float *)&v12 <= COERCE_SHORT_FLOAT(COERCE_UNSIGNED_INT(-1.0)))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (*(short float *)&v12 < COERCE_SHORT_FLOAT(23552))
  {
    *a3 = (int)*(short float *)&v12;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_2574D7CF4@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) != 0)
  {
    if (*(short float *)&v12 > COERCE_SHORT_FLOAT(COERCE_UNSIGNED_INT(-1.0)))
    {
      *a3 = (int)*(short float *)&v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2574D7EFC@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) != 0)
  {
    if (*(short float *)&v12 > COERCE_SHORT_FLOAT(COERCE_UNSIGNED_INT(-1.0)))
    {
      *a3 = *(short float *)&v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2574D8104@<X0>(short float *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  short float v10 = *a1;
  short float v14 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    *(short float *)&int v12 = roundl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E208])
  {
    *(short float *)&int v12 = rintl(v10);
    goto LABEL_15;
  }
  if (result == *MEMORY[0x263F8E218]) {
    goto LABEL_6;
  }
  if (result == *MEMORY[0x263F8E220]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x263F8E1F8])
  {
    *(short float *)&int v12 = truncl(v10);
  }
  else
  {
    if (result == *MEMORY[0x263F8E200])
    {
      uint64_t result = sub_2576A9270();
      if ((result & 1) == 0)
      {
LABEL_6:
        *(short float *)&int v12 = ceill(v10);
        goto LABEL_15;
      }
LABEL_8:
      *(short float *)&int v12 = floorl(v10);
      goto LABEL_15;
    }
    sub_2576A9240();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(short float *)&int v12 = v14;
  }
LABEL_15:
  if ((~v12 & 0x7C00) != 0)
  {
    if (*(short float *)&v12 > COERCE_SHORT_FLOAT(COERCE_UNSIGNED_INT(-1.0)))
    {
      *a3 = (unint64_t)*(short float *)&v12;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

float sub_2574D830C@<S0>(__int16 *a1@<X0>, float *a2@<X8>)
{
  _H0 = *a1;
  __asm { FCVT            S0, H0 }
  *a2 = result;
  return result;
}

double sub_2574D831C@<D0>(__int16 *a1@<X0>, double *a2@<X8>)
{
  _H0 = *a1;
  __asm { FCVT            D0, H0 }
  *a2 = result;
  return result;
}

_DWORD *sub_2574D832C@<X0>(_DWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFFFFFF) != 0;
  return result;
}

uint64_t sub_2574D8340@<X0>(float *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D8568@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D8790@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147500000.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147500000.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D89B8@<X0>(float *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.2234e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D8BE0@<X0>(float *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D8E08@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9030@<X0>(float *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4295000000.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9258@<X0>(float *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  float v10 = *a1;
  float v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    float v12 = roundf(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    float v12 = rintf(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    float v12 = ceilf(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    float v12 = floorf(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    float v12 = truncf(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A8030();
    float v12 = ceilf(v10);
    float v13 = floorf(v10);
    if (result) {
      float v12 = v13;
    }
  }
  else
  {
    sub_2576A8000();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    float v12 = v15;
  }
  if ((~LODWORD(v12) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.8447e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

__int16 sub_2574D9480@<H0>(int *a1@<X0>, _WORD *a2@<X8>)
{
  _S0 = *a1;
  __asm { FCVT            H0, S0 }
  *a2 = result;
  return result;
}

uint64_t sub_2574D9490@<X0>(uint64_t result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *(_WORD *)(result + 2);
  return result;
}

double sub_2574D949C@<D0>(float *a1@<X0>, double *a2@<X8>)
{
  double result = *a1;
  *a2 = result;
  return result;
}

void *sub_2574D94AC@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 0x7FFFFFFFFFFFFFFFLL) != 0;
  return result;
}

uint64_t sub_2574D94C0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -129.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 128.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D96EC@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -32769.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 32768.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9918@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -2147483650.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 2147483650.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9B44@<X0>(double *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 9.22337204e18)
  {
    *a3 = (uint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9D70@<X0>(double *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 256.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574D9F98@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _WORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 65536.0)
  {
    *a3 = (int)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574DA1C0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 4294967300.0)
  {
    *a3 = v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_2574DA3E8@<X0>(double *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_2576A8EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *a1;
  double v15 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (result == *MEMORY[0x263F8E210])
  {
    double v12 = round(v10);
  }
  else if (result == *MEMORY[0x263F8E208])
  {
    double v12 = rint(v10);
  }
  else if (result == *MEMORY[0x263F8E218])
  {
    double v12 = ceil(v10);
  }
  else if (result == *MEMORY[0x263F8E220])
  {
    double v12 = floor(v10);
  }
  else if (result == *MEMORY[0x263F8E1F8])
  {
    double v12 = trunc(v10);
  }
  else if (result == *MEMORY[0x263F8E200])
  {
    uint64_t result = sub_2576A7FC0();
    double v12 = ceil(v10);
    double v13 = floor(v10);
    if (result) {
      double v12 = v13;
    }
  }
  else
  {
    sub_2576A7FA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    double v12 = v15;
  }
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v12 <= -1.0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v12 < 1.84467441e19)
  {
    *a3 = (unint64_t)v12;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

__int16 sub_2574DA610@<H0>(uint64_t *a1@<X0>, _WORD *a2@<X8>)
{
  _D0 = *a1;
  __asm { FCVT            H0, D0 }
  *a2 = result;
  return result;
}

float sub_2574DA620@<S0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  float result = *a1;
  *a2 = HIWORD(result);
  return result;
}

float sub_2574DA638@<S0>(double *a1@<X0>, float *a2@<X8>)
{
  float result = *a1;
  *a2 = result;
  return result;
}

float sub_2574DA648(uint64_t a1)
{
  double v12 = *(double *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, *(float *)&v13, *((float *)&v13 + 1));
}

void sub_2574DA69C(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SWORD2(v12), SHIWORD(v12));
}

double sub_2574DA6F0(uint64_t a1)
{
  uint64_t v12 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, SWORD2(v13), SHIWORD(v13));
  return result;
}

uint64_t sub_2574DA744@<X0>(double *a1@<X0>, void *a2@<X8>)
{
  return sub_2574DA3E8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA750@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574DA1C0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA75C@<X0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D9F98(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA768@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D9D70(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA774@<X0>(double *a1@<X0>, void *a2@<X8>)
{
  return sub_2574D9B44(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DA77C(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_2574DA7D0@<X0>(double *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574D9918(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DA7D8(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIDWORD(v12));
}

uint64_t sub_2574DA82C@<X0>(double *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D96EC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA834@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D94C0(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DA83C(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
}

double sub_2574DA890(uint64_t a1)
{
  HIDWORD(v12) = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

void sub_2574DA8E4(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SHIWORD(v13));
}

double sub_2574DA938(uint64_t a1)
{
  int v13 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, SHIWORD(v14));
  return result;
}

uint64_t sub_2574DA98C@<X0>(float *a1@<X0>, void *a2@<X8>)
{
  return sub_2574D9258(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA998@<X0>(float *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574D9030(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA9A4@<X0>(float *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D8E08(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA9B0@<X0>(float *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D8BE0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DA9BC@<X0>(float *a1@<X0>, void *a2@<X8>)
{
  return sub_2574D89B8(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DA9C4(uint64_t a1)
{
  HIDWORD(v11) = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_2574DAA18@<X0>(float *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574D8790(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DAA20(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_2574DAA74@<X0>(float *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D8568(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DAA7C@<X0>(float *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D8340(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DAA84(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SBYTE2(v13), SHIBYTE(v13));
}

double sub_2574DAAD8(uint64_t a1)
{
  HIWORD(v12) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

float sub_2574DAB2C(uint64_t a1)
{
  HIWORD(v13) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14);
}

uint64_t sub_2574DAB80@<X0>(short float *a1@<X0>, void *a2@<X8>)
{
  return sub_2574D8104(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DAB8C@<X0>(short float *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574D7EFC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DAB98@<X0>(short float *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D7CF4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DABA4@<X0>(short float *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D7AD8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2574DABB0@<X0>(short float *a1@<X0>, void *a2@<X8>)
{
  return sub_2574D78E0(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DABB8(uint64_t a1)
{
  HIWORD(v11) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_2574DAC0C@<X0>(short float *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_2574D76E8(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DAC14(uint64_t a1)
{
  HIWORD(v12) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_2574DAC68@<X0>(short float *a1@<X0>, _WORD *a2@<X8>)
{
  return sub_2574D74C8(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DAC70(uint64_t a1)
{
  __int16 v13 = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_2574DACC4@<X0>(short float *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_2574D72A8(a1, *(void *)(v2 + 16), a2);
}

void sub_2574DACCC(uint64_t a1)
{
  __int16 v13 = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, SHIBYTE(v14));
}

double sub_2574DAD90(uint64_t a1)
{
  double v12 = *(double *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

float sub_2574DADE4(uint64_t a1)
{
  double v12 = *(double *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, *(float *)&v13, *((float *)&v13 + 1));
}

void sub_2574DAE38(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SWORD2(v12), SHIWORD(v12));
}

double sub_2574DAE8C(uint64_t a1)
{
  uint64_t v12 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, SWORD2(v13), SHIWORD(v13));
  return result;
}

void sub_2574DAEE0(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_2574DAF34(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SHIDWORD(v12));
}

void sub_2574DAF88(uint64_t a1)
{
  uint64_t v11 = *(void *)(*(void *)(v1 + 40) + 8 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, SWORD2(v12), SBYTE6(v12), SHIBYTE(v12));
}

double sub_2574DAFDC(uint64_t a1)
{
  HIDWORD(v12) = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

float sub_2574DB030(uint64_t a1)
{
  float v13 = *(float *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14);
}

void sub_2574DB084(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SHIWORD(v13));
}

double sub_2574DB0D8(uint64_t a1)
{
  int v13 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, SHIWORD(v14));
  return result;
}

void sub_2574DB12C(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
}

void sub_2574DB180(uint64_t a1)
{
  HIDWORD(v11) = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_2574DB1D4(uint64_t a1)
{
  int v12 = *(_DWORD *)(*(void *)(v1 + 40) + 4 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, SBYTE2(v13), SHIBYTE(v13));
}

double sub_2574DB228(uint64_t a1)
{
  HIWORD(v12) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

float sub_2574DB27C(uint64_t a1)
{
  HIWORD(v13) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14);
}

void sub_2574DB2D0(uint64_t a1)
{
  __int16 v13 = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

double sub_2574DB324(uint64_t a1)
{
  __int16 v14 = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14, v15);
  return result;
}

void sub_2574DB378(uint64_t a1)
{
  HIWORD(v11) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_2574DB3CC(uint64_t a1)
{
  HIWORD(v12) = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
}

void sub_2574DB420(uint64_t a1)
{
  __int16 v13 = *(_WORD *)(*(void *)(v1 + 40) + 2 * a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, SHIBYTE(v14));
}

double sub_2574DB474(uint64_t a1)
{
  HIBYTE(v12) = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_17_12(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
}

float sub_2574DB4C8(uint64_t a1)
{
  HIBYTE(v13) = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  double v3 = v2();
  return OUTLINED_FUNCTION_19_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13, v14);
}

void sub_2574DB51C(uint64_t a1)
{
  v12[5] = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_11_15(v3, v4, v5, v6, v7, v8, v9, v10, v11, *(int *)v12, *(__int16 *)&v12[4], v13);
}

double sub_2574DB570(uint64_t a1)
{
  v13[5] = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  *(void *)&double result = OUTLINED_FUNCTION_18_13(v3, v4, v5, v6, v7, v8, v9, v10, v12, *(int *)v13, *(__int16 *)&v13[4], v14);
  return result;
}

void sub_2574DB5C4(uint64_t a1)
{
  char v13 = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_12_14(v3, v4, v5, v6, v7, v8, v9, v10, v11, *(int *)v12, *(__int16 *)&v12[4], v13, v14);
}

void sub_2574DB618(uint64_t a1)
{
  HIBYTE(v11) = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_16_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_2574DB66C(uint64_t a1)
{
  HIBYTE(v12) = *(unsigned char *)(*(void *)(v1 + 40) + a1);
  OUTLINED_FUNCTION_8_17();
  uint64_t v3 = v2();
  OUTLINED_FUNCTION_15_12(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
}

unint64_t sub_2574DB6C0()
{
  unint64_t result = qword_26A004380;
  if (!qword_26A004380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A004380);
  }
  return result;
}

uint64_t sub_2574DB70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_2_21(uint64_t a1@<X8>)
{
  *(void *)(a1 - 32) = 0;
  *(void *)(a1 - 24) = v1;
  *(void *)(a1 - 16) = v2;
}

unint64_t OUTLINED_FUNCTION_3_19()
{
  return sub_2574CB174();
}

void OUTLINED_FUNCTION_9_19(uint64_t a1@<X8>)
{
  *(void *)(a1 - 32) = v3;
  *(void *)(a1 - 24) = v1;
  *(void *)(a1 - 16) = v2;
}

void OUTLINED_FUNCTION_11_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, __int16 a12)
{
  *(_WORD *)(v13 + 2 * v12) = a12;
}

void OUTLINED_FUNCTION_12_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  *(unsigned char *)(v14 + v13) = a13;
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return sub_2576A8C60();
}

void OUTLINED_FUNCTION_15_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *(_DWORD *)(v12 + 4 * v11) = a11;
}

void OUTLINED_FUNCTION_16_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v11 + 8 * v10) = a10;
}

double OUTLINED_FUNCTION_17_12(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  double result = a10;
  *(double *)(v11 + 8 * v10) = a10;
  return result;
}

__int16 OUTLINED_FUNCTION_18_13@<H0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9, int a10, __int16 a11, __int16 a12)
{
  __int16 result = a12;
  *(_WORD *)(v13 + 2 * v12) = a12;
  return result;
}

float OUTLINED_FUNCTION_19_13(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, float a10, float a11)
{
  float result = a11;
  *(float *)(v12 + 4 * v11) = a11;
  return result;
}

uint64_t OUTLINED_FUNCTION_21_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a6 + 32;
}

NeuralNetworks::ZeroPad1D __swiftcall ZeroPad1D.init(size:)(NeuralNetworks::ZeroPad1D size)
{
  if (size.size.left < 0 || size.size.right < 0)
  {
    OUTLINED_FUNCTION_11_16();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_46_3();
    size.size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ZeroPad1D __swiftcall ZeroPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1 = size;
  if (size < 0)
  {
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_46_3();
    size = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  result.size.right = v1;
  result.size.left = size;
  return result;
}

uint64_t ZeroPad1D.forward(_:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_24_10((uint64_t)v4);
  OUTLINED_FUNCTION_56_2();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v8[0] = v0;
    v8[1] = v1;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A8);
  uint64_t v5 = OUTLINED_FUNCTION_53_2();
  *(_OWORD *)(v5 + 16) = xmmword_2576ABB50;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  uint64_t v6 = MEMORY[0x263F8D5C8];
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v1;
  v8[3] = v6;
  v8[4] = &protocol witness table for Float;
  LODWORD(v8[0]) = 0;
  Tensor.padded(forSizes:with:)(v5, v8, v0);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

BOOL sub_2574DBB74()
{
  return sub_2574DD7FC();
}

uint64_t sub_2574DBB98()
{
  return ZeroPad1D.forward(_:)();
}

BOOL sub_2574DBBB0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

BOOL sub_2574DBBF0@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DBB74();
  *a1 = result;
  return result;
}

uint64_t sub_2574DBC1C(uint64_t a1)
{
  unint64_t v2 = sub_2574DEAC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DBC58(uint64_t a1)
{
  unint64_t v2 = sub_2574DEAC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ZeroPad1D.init(from:)()
{
}

void ZeroPad1D.encode(to:)()
{
}

uint64_t sub_2574DBD20@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD500((uint64_t (*)(void))ZeroPad1D.init(from:), a1);
}

void sub_2574DBD4C()
{
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(NeuralNetworks::ZeroPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_31_6();
    size.size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int height = size.height;
  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_47_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_31_6();
    size.Swift::Int height = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    size.Swift::Int height = size.width;
    Swift::Int v2 = height;
  }
  *(Swift::tuple_height_Int_width_Int *)&result.size.left = size;
  result.size.bottom = v2;
  result.size.top = height;
  return result;
}

NeuralNetworks::ZeroPad2D __swiftcall ZeroPad2D.init(size:)(Swift::Int size)
{
  if (size < 0)
  {
    OUTLINED_FUNCTION_20_15();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_39_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_31_6();
    Swift::Int v1 = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    Swift::Int v1 = OUTLINED_FUNCTION_26_9(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

void ZeroPad2D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t **a24,uint64_t a25,uint64_t a26,_UNKNOWN **a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  OUTLINED_FUNCTION_48_1();
  a47 = v50;
  a48 = v51;
  uint64_t v52 = OUTLINED_FUNCTION_13_14();
  BOOL v53 = OUTLINED_FUNCTION_36_4((uint64_t)v52);
  swift_bridgeObjectRelease();
  if (!v53)
  {
    LOBYTE(a23) = v49;
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    a23 = v48;
    a24 = &a23;
    OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F28);
  uint64_t inited = swift_initStackObject();
  uint64_t v55 = OUTLINED_FUNCTION_15_13(inited, (__n128)xmmword_2576AE070);
  swift_bridgeObjectRelease();
  a26 = MEMORY[0x263F8D5C8];
  a27 = &protocol witness table for Float;
  LODWORD(a23) = 0;
  Tensor.padded(forSizes:with:)(v55, &a23, v48);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a23);
  OUTLINED_FUNCTION_46_1();
}

BOOL sub_2574DC028()
{
  return sub_2574DD7FC();
}

void sub_2574DC04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t *a23,uint64_t **a24,uint64_t a25,uint64_t a26,_UNKNOWN **a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  ZeroPad2D.forward(_:)(a1, *v48, v48[1], v48[2], v48[3], a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23,
    a24,
    a25,
    a26,
    a27,
    a28,
    a29,
    a30,
    a31,
    a32,
    a33,
    a34,
    a35,
    a36,
    a37,
    a38,
    a39,
    a40,
    a41,
    a42,
    a43,
    a44,
    a45,
    a46,
    a47,
    a48);
}

BOOL sub_2574DC058@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

BOOL sub_2574DC094@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DC028();
  *a1 = result;
  return result;
}

uint64_t sub_2574DC0C0(uint64_t a1)
{
  unint64_t v2 = sub_2574DEB70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DC0FC(uint64_t a1)
{
  unint64_t v2 = sub_2574DEB70();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ZeroPad2D.init(from:)()
{
}

void ZeroPad2D.encode(to:)()
{
}

uint64_t sub_2574DC1C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD9F8((uint64_t (*)(void))ZeroPad2D.init(from:), a1);
}

void sub_2574DC1F0()
{
}

NeuralNetworks::ReflectionPad1D __swiftcall ReflectionPad1D.init(size:)(NeuralNetworks::ReflectionPad1D size)
{
  if (size.size.left < 0 || size.size.right < 0)
  {
    OUTLINED_FUNCTION_11_16();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_43_3();
    size.size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ReflectionPad1D __swiftcall ReflectionPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1 = size;
  if (size < 0)
  {
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_43_3();
    size = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  result.size.right = v1;
  result.size.left = size;
  return result;
}

uint64_t ReflectionPad1D.forward(_:)()
{
  Swift::Int v3 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_24_10((uint64_t)v3);
  OUTLINED_FUNCTION_56_2();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    *(void *)&v8[0] = v0;
    *((void *)&v8[0] + 1) = v1;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A8);
  uint64_t v4 = OUTLINED_FUNCTION_53_2();
  uint64_t v5 = OUTLINED_FUNCTION_51_2(v4, (__n128)xmmword_2576ABB50);
  uint64_t v9 = 0;
  v8[0] = v6;
  v8[1] = v6;
  Tensor.padded(forSizes:mode:)(v5, (uint64_t)v8, v0);
  swift_bridgeObjectRelease();
  return sub_2574A46C4((uint64_t)v8);
}

BOOL sub_2574DC400()
{
  return sub_2574DD7FC();
}

uint64_t sub_2574DC424()
{
  return ReflectionPad1D.forward(_:)();
}

BOOL sub_2574DC42C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

BOOL sub_2574DC468@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DC400();
  *a1 = result;
  return result;
}

uint64_t sub_2574DC494(uint64_t a1)
{
  unint64_t v2 = sub_2574DEBBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DC4D0(uint64_t a1)
{
  unint64_t v2 = sub_2574DEBBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ReflectionPad1D.init(from:)()
{
}

void sub_2574DC55C()
{
  OUTLINED_FUNCTION_27_8();
  uint64_t v13 = v1;
  Swift::Int v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v7);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  sub_2576A91F0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
LABEL_4:
    OUTLINED_FUNCTION_7_1();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020C0);
  sub_2576A8D50();
  uint64_t v8 = v14[2];
  if (v8)
  {
    if (v8 != 1)
    {
      uint64_t v9 = v14[4];
      uint64_t v10 = v14[5];
      swift_bridgeObjectRelease();
      v13(v9, v10);
      uint64_t v11 = OUTLINED_FUNCTION_48_3();
      v12(v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      goto LABEL_4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void ReflectionPad1D.encode(to:)()
{
}

void sub_2574DC75C()
{
  OUTLINED_FUNCTION_27_8();
  unint64_t v2 = v1;
  uint64_t v14 = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(v8);
  OUTLINED_FUNCTION_0_8();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_37_2();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  v2();
  OUTLINED_FUNCTION_50_2();
  sub_2576A9230();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2576ABB30;
  *(void *)(v13 + 32) = v5;
  *(void *)(v13 + 40) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020D0);
  OUTLINED_FUNCTION_25_10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v9);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574DC8B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD500((uint64_t (*)(void))ReflectionPad1D.init(from:), a1);
}

void sub_2574DC8DC()
{
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(NeuralNetworks::ReflectionPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_29_7();
    size.size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int height = size.height;
  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_47_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_29_7();
    size.Swift::Int height = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    size.Swift::Int height = size.width;
    Swift::Int v2 = height;
  }
  *(Swift::tuple_height_Int_width_Int *)&result.size.left = size;
  result.size.bottom = v2;
  result.size.top = height;
  return result;
}

NeuralNetworks::ReflectionPad2D __swiftcall ReflectionPad2D.init(size:)(Swift::Int size)
{
  if (size < 0)
  {
    OUTLINED_FUNCTION_20_15();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_39_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_29_7();
    Swift::Int v1 = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    Swift::Int v1 = OUTLINED_FUNCTION_26_9(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

#error "2574DCB24: call analysis failed (funcsize=52)"

BOOL sub_2574DCB9C()
{
  return sub_2574DD7FC();
}

uint64_t sub_2574DCBC0(uint64_t a1)
{
  return ReflectionPad2D.forward(_:)(a1, *v1, v1[1], v1[2], v1[3]);
}

BOOL sub_2574DCBCC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

BOOL sub_2574DCC08@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DCB9C();
  *a1 = result;
  return result;
}

uint64_t sub_2574DCC34(uint64_t a1)
{
  unint64_t v2 = sub_2574DEC08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DCC70(uint64_t a1)
{
  unint64_t v2 = sub_2574DEC08();
  return MEMORY[0x270FA00B8](a1, v2);
}

void ReflectionPad2D.init(from:)()
{
}

void sub_2574DCCFC()
{
  OUTLINED_FUNCTION_27_8();
  uint64_t v12 = v1;
  Swift::Int v3 = v2;
  uint64_t v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v7);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  sub_2576A91F0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
LABEL_4:
    OUTLINED_FUNCTION_55_2();
    OUTLINED_FUNCTION_7_1();
    return;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020C0);
  OUTLINED_FUNCTION_54_2();
  sub_2576A8D50();
  unint64_t v8 = *(void *)(v13 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 < 3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 != 3)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = OUTLINED_FUNCTION_55_2();
    v12(v9);
    uint64_t v10 = OUTLINED_FUNCTION_42_2();
    v11(v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    goto LABEL_4;
  }
LABEL_13:
  __break(1u);
}

void ReflectionPad2D.encode(to:)()
{
}

void sub_2574DCF0C()
{
  OUTLINED_FUNCTION_27_8();
  unint64_t v2 = v1;
  uint64_t v18 = v3;
  uint64_t v16 = v4;
  uint64_t v17 = v5;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(v10);
  OUTLINED_FUNCTION_0_8();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_37_2();
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  v2();
  OUTLINED_FUNCTION_50_2();
  sub_2576A9230();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2576AE070;
  *(void *)(v15 + 32) = v7;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v17;
  *(void *)(v15 + 56) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020D0);
  OUTLINED_FUNCTION_25_10();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v11);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_2574DD070@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD9F8((uint64_t (*)(void))ReflectionPad2D.init(from:), a1);
}

void sub_2574DD09C()
{
}

NeuralNetworks::SymmetricPad1D __swiftcall SymmetricPad1D.init(size:)(NeuralNetworks::SymmetricPad1D size)
{
  if (size.size._0 < 0 || size.size._1 < 0)
  {
    OUTLINED_FUNCTION_11_16();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_44_3();
    size.size._0 = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::SymmetricPad1D __swiftcall SymmetricPad1D.init(size:)(Swift::Int size)
{
  Swift::Int v1 = size;
  if (size < 0)
  {
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_44_3();
    size = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  result.size._1 = v1;
  result.size._0 = size;
  return result;
}

uint64_t SymmetricPad1D.forward(_:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_24_10((uint64_t)v3);
  OUTLINED_FUNCTION_56_2();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    uint64_t v7 = v0;
    uint64_t v8 = v1;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A8);
  uint64_t v4 = OUTLINED_FUNCTION_53_2();
  uint64_t v5 = OUTLINED_FUNCTION_51_2(v4, (__n128)xmmword_2576ABB50);
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long v10 = xmmword_2576B0250;
  Tensor.padded(forSizes:mode:)(v5, (uint64_t)&v7, v0);
  swift_bridgeObjectRelease();
  return sub_2574A46C4((uint64_t)&v7);
}

BOOL sub_2574DD2BC()
{
  return sub_2574DD7FC();
}

uint64_t sub_2574DD2E0()
{
  return 1702521203;
}

uint64_t sub_2574DD2F0()
{
  return SymmetricPad1D.forward(_:)();
}

BOOL sub_2574DD2F8@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

uint64_t sub_2574DD334@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574DD2E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_2574DD35C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD2BC();
  *a1 = result;
  return result;
}

uint64_t sub_2574DD388()
{
  return sub_25747A82C();
}

uint64_t sub_2574DD3A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_15_2();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2574DD3D0(uint64_t a1)
{
  unint64_t v2 = sub_2574DEC54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DD40C(uint64_t a1)
{
  unint64_t v2 = sub_2574DEC54();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SymmetricPad1D.init(from:)()
{
}

void SymmetricPad1D.encode(to:)()
{
}

uint64_t sub_2574DD4D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD500((uint64_t (*)(void))SymmetricPad1D.init(from:), a1);
}

uint64_t sub_2574DD500@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_2574DD530()
{
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(NeuralNetworks::SymmetricPad2D size)
{
  if (size.size.left < 0 || size.size.right < 0 || size.size.top < 0 || size.size.bottom < 0)
  {
    OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_30_7();
    size.size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  return size;
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(Swift::tuple_height_Int_width_Int size)
{
  Swift::Int height = size.height;
  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_16_13();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_47_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_30_7();
    size.Swift::Int height = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    size.Swift::Int height = size.width;
    Swift::Int v2 = height;
  }
  *(Swift::tuple_height_Int_width_Int *)&result.size.left = size;
  result.size.bottom = v2;
  result.size.top = height;
  return result;
}

NeuralNetworks::SymmetricPad2D __swiftcall SymmetricPad2D.init(size:)(Swift::Int size)
{
  if (size < 0)
  {
    OUTLINED_FUNCTION_20_15();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_39_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_30_7();
    Swift::Int v1 = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    Swift::Int v1 = OUTLINED_FUNCTION_26_9(size, size);
  }
  result.size.bottom = v4;
  result.size.top = v3;
  result.size.right = v2;
  result.size.left = v1;
  return result;
}

#error "2574DD784: call analysis failed (funcsize=54)"

BOOL sub_2574DD7FC()
{
  uint64_t v0 = OUTLINED_FUNCTION_40_3();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_2574DD830()
{
  return sub_2574DD7FC();
}

uint64_t sub_2574DD854(uint64_t a1)
{
  return SymmetricPad2D.forward(_:)(a1, *v1, v1[1], v1[2], v1[3]);
}

BOOL sub_2574DD860@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD7FC();
  *a1 = result;
  return result;
}

BOOL sub_2574DD89C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_2574DD830();
  *a1 = result;
  return result;
}

uint64_t sub_2574DD8C8(uint64_t a1)
{
  unint64_t v2 = sub_2574DECA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DD904(uint64_t a1)
{
  unint64_t v2 = sub_2574DECA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SymmetricPad2D.init(from:)()
{
}

void SymmetricPad2D.encode(to:)()
{
}

uint64_t sub_2574DD9CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574DD9F8((uint64_t (*)(void))SymmetricPad2D.init(from:), a1);
}

uint64_t sub_2574DD9F8@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_2574DDA2C()
{
}

NeuralNetworks::ConstantPad1D __swiftcall ConstantPad1D.init(size:value:)(Swift::tuple_left_Int_right_Int size, Swift::Float value)
{
  if (size.left < 0 || size.right < 0)
  {
    OUTLINED_FUNCTION_11_16();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_45_3();
    size.left = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  result.size = size;
  result.value = value;
  return result;
}

NeuralNetworks::ConstantPad1D __swiftcall ConstantPad1D.init(size:value:)(Swift::Int size, Swift::Float value)
{
  Swift::Int v2 = size;
  if (size < 0)
  {
    OUTLINED_FUNCTION_14_15();
    OUTLINED_FUNCTION_0_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A0);
    OUTLINED_FUNCTION_21_13();
    OUTLINED_FUNCTION_4_21();
    OUTLINED_FUNCTION_45_3();
    size = OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  result.size.right = v2;
  result.size.left = size;
  result.value = value;
  return result;
}

uint64_t ConstantPad1D.forward(_:)(float a1)
{
  uint64_t v6 = OUTLINED_FUNCTION_12_15();
  OUTLINED_FUNCTION_24_10((uint64_t)v6);
  OUTLINED_FUNCTION_56_2();
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_41_3();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v10[0] = v1;
    v10[1] = v2;
    OUTLINED_FUNCTION_8_18();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020A8);
  uint64_t v7 = OUTLINED_FUNCTION_53_2();
  *(_OWORD *)(v7 + 16) = xmmword_2576ABB50;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  uint64_t v8 = MEMORY[0x263F8D5C8];
  *(void *)(v7 + 64) = v3;
  *(void *)(v7 + 72) = v2;
  _OWORD v10[3] = v8;
  v10[4] = &protocol witness table for Float;
  *(float *)long long v10 = a1;
  Tensor.padded(forSizes:with:)(v7, v10, v1);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_2574DDC6C()
{
  return sub_2574DE560();
}

uint64_t sub_2574DDC8C(char a1)
{
  if (a1) {
    return 0x65756C6176;
  }
  else {
    return 1702521203;
  }
}

uint64_t sub_2574DDCB8()
{
  return ConstantPad1D.forward(_:)(*(float *)(v0 + 16));
}

uint64_t sub_2574DDCC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_257575260(*a1, *a2);
}

uint64_t sub_2574DDCD0()
{
  return sub_2576A366C(*v0);
}

uint64_t sub_2574DDCD8(uint64_t a1)
{
  return sub_257470348(a1, *v1);
}

uint64_t sub_2574DDCE0(uint64_t a1)
{
  return sub_2575EF104(a1, *v1);
}

uint64_t sub_2574DDCE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574DE560();
  *a1 = result;
  return result;
}

uint64_t sub_2574DDD20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574DDC8C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2574DDD4C()
{
  return sub_2574DDC8C(*v0);
}

uint64_t sub_2574DDD54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574DDC6C();
  *a1 = result;
  return result;
}

uint64_t sub_2574DDD7C(uint64_t a1)
{
  unint64_t v2 = sub_2574DECEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DDDB8(uint64_t a1)
{
  unint64_t v2 = sub_2574DECEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConstantPad1D.init(from:)()
{
  OUTLINED_FUNCTION_27_8();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002158);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2574DECEC();
  sub_2576A91F0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return (uint64_t)v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020C0);
  sub_2576A8D50();
  uint64_t result = sub_2576A8D30();
  uint64_t v7 = v14[2];
  if (v7)
  {
    if (v7 != 1)
    {
      Swift::Float v8 = v6;
      Swift::Int v9 = v14[4];
      Swift::Int v10 = v14[5];
      swift_bridgeObjectRelease();
      v11.left = v9;
      v11.right = v10;
      uint64_t v4 = (void *)ConstantPad1D.init(size:value:)(v11, v8);
      uint64_t v12 = OUTLINED_FUNCTION_19_14();
      v13(v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
      return (uint64_t)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ConstantPad1D.encode(to:)()
{
  OUTLINED_FUNCTION_27_8();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002168);
  OUTLINED_FUNCTION_0_8();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_2574DECEC();
  sub_2576A9230();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2576ABB30;
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020D0);
  sub_2576A8E40();
  swift_bridgeObjectRelease();
  if (!v0) {
    sub_2576A8E20();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
}

uint64_t sub_2574DE1A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = ConstantPad1D.init(from:)();
  if (!v1)
  {
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v4;
    *(_DWORD *)(a1 + 16) = v5;
  }
  return result;
}

uint64_t sub_2574DE1D4()
{
  return ConstantPad1D.encode(to:)();
}

uint64_t ConstantPad2D.size.getter()
{
  return *(void *)v0;
}

float ConstantPad2D.value.getter()
{
  return *(float *)(v0 + 32);
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::tuple_left_Int_right_Int_top_Int_bottom_Int size, Swift::Float value)
{
  if (size.left < 0 || size.right < 0 || size.top < 0 || size.bottom < 0)
  {
    OUTLINED_FUNCTION_6_19();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_52_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    retstr->size = size;
    retstr->value = value;
  }
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int size, Swift::Float value)
{
  if (size.width < 0 || size.height < 0)
  {
    OUTLINED_FUNCTION_35_4();
    sub_2576A8730();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_47_3();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_22_13();
    OUTLINED_FUNCTION_3_20();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    retstr->size.left = size.width;
    retstr->size.right = size.width;
    retstr->size.top = size.height;
    retstr->size.bottom = size.height;
    retstr->value = value;
  }
}

void __swiftcall ConstantPad2D.init(size:value:)(NeuralNetworks::ConstantPad2D *__return_ptr retstr, Swift::Int size, Swift::Float value)
{
  if (size < 0)
  {
    OUTLINED_FUNCTION_35_4();
    sub_2576A8730();
    OUTLINED_FUNCTION_0_26();
    OUTLINED_FUNCTION_39_4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0020D8);
    OUTLINED_FUNCTION_49_3();
    OUTLINED_FUNCTION_7_17();
    OUTLINED_FUNCTION_32_7();
    OUTLINED_FUNCTION_2_22();
    __break(1u);
  }
  else
  {
    retstr->size.left = size;
    retstr->size.right = size;
    retstr->size.top = size;
    retstr->size.bottom = size;
    retstr->value = value;
  }
}

uint64_t ConstantPad2D.forward(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned __int8 v4 = *(unsigned char *)(*(void *)(*(void *)a1 + 16) + 160);
  int v5 = static ScalarType.floatingPointTypes.getter();
  BOOL v6 = sub_2575A0094(v4, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (!v6)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v13[0] = a2;
    v13[1] = v13;
    OUTLINED_FUNCTION_9_20();
    OUTLINED_FUNCTION_5_20();
    sub_25746BF88();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F28);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_2576AE070;
  inited[2] = 0u;
  long long v9 = *v2;
  long long v8 = v2[1];
  inited[3] = 0u;
  inited[4] = v8;
  inited[5] = v9;
  uint64_t v10 = sub_25746DEFC((uint64_t)inited);
  swift_bridgeObjectRelease();
  int v11 = *((_DWORD *)v2 + 8);
  v13[3] = MEMORY[0x263F8D5C8];
  v13[4] = &protocol witness table for Float;
  LODWORD(v13[0]) = v11;
  Tensor.padded(forSizes:with:)(v10, v13, a2);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_2574DE560()
{
  uint64_t v0 = OUTLINED_FUNCTION_40_3();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2574DE5A0()
{
  return sub_2574DE560();
}

uint64_t sub_2574DE5C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574DE560();
  *a1 = result;
  return result;
}

uint64_t sub_2574DE5FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574DE5A0();
  *a1 = result;
  return result;
}

uint64_t sub_2574DE624(uint64_t a1)
{
  unint64_t v2 = sub_2574DED38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574DE660(uint64_t a1)
{
  unint64_t v2 = sub_2574DED38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConstantPad2D.init(from:)()
{
  OUTLINED_FUNCTION_27_8();
  uint64_t v21 = v1;
  uint64_t v22 = v2;
  unsigned __int8 v4 = v3;
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002170);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v7);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_2574DED38();
  sub_2576A91F0();
  if (v0) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020C0);
  OUTLINED_FUNCTION_54_2();
  sub_2576A8D50();
  uint64_t result = sub_2576A8D30();
  unint64_t v10 = v19[2];
  if (!v10)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v10 == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < 3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v10 != 3)
  {
    Swift::Float v11 = v9;
    Swift::Int v12 = v19[6];
    Swift::Int v17 = v19[5];
    Swift::Int v18 = v19[4];
    Swift::Int v13 = v19[7];
    swift_bridgeObjectRelease();
    v23.right = v17;
    v23.left = v18;
    v23.top = v12;
    v23.bottom = v13;
    ConstantPad2D.init(size:value:)(&v20, v23, v11);
    uint64_t v14 = OUTLINED_FUNCTION_1_14();
    v15(v14);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    long long v16 = *(_OWORD *)&v20.size.top;
    *(_OWORD *)uint64_t v6 = *(_OWORD *)&v20.size.left;
    *(_OWORD *)(v6 + 16) = v16;
    *(Swift::Float *)(v6 + 32) = v20.value;
    return result;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t ConstantPad2D.encode(to:)(void *a1)
{
  unsigned __int8 v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002180);
  OUTLINED_FUNCTION_0_8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574DED38();
  sub_2576A9230();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  unint64_t v10 = (_OWORD *)swift_allocObject();
  long long v11 = *v4;
  long long v12 = v4[1];
  v10[1] = xmmword_2576AE070;
  long long v10[2] = v11;
  _OWORD v10[3] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2574DEB0C(&qword_26A0020D0);
  sub_2576A8E40();
  swift_bridgeObjectRelease();
  if (!v2) {
    sub_2576A8E20();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

double sub_2574DEA60@<D0>(uint64_t a1@<X8>)
{
  ConstantPad2D.init(from:)();
  if (!v1)
  {
    double result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t sub_2574DEAA8(void *a1)
{
  return ConstantPad2D.encode(to:)(a1);
}

unint64_t sub_2574DEAC0()
{
  unint64_t result = qword_26A0020B8;
  if (!qword_26A0020B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0020B8);
  }
  return result;
}

uint64_t sub_2574DEB0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A000E08);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2574DEB70()
{
  unint64_t result = qword_26A0020E8;
  if (!qword_26A0020E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0020E8);
  }
  return result;
}

unint64_t sub_2574DEBBC()
{
  unint64_t result = qword_26A002100;
  if (!qword_26A002100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002100);
  }
  return result;
}

unint64_t sub_2574DEC08()
{
  unint64_t result = qword_26A002118;
  if (!qword_26A002118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002118);
  }
  return result;
}

unint64_t sub_2574DEC54()
{
  unint64_t result = qword_26A002130;
  if (!qword_26A002130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002130);
  }
  return result;
}

unint64_t sub_2574DECA0()
{
  unint64_t result = qword_26A002148;
  if (!qword_26A002148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002148);
  }
  return result;
}

unint64_t sub_2574DECEC()
{
  unint64_t result = qword_26A002160;
  if (!qword_26A002160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002160);
  }
  return result;
}

unint64_t sub_2574DED38()
{
  unint64_t result = qword_26A002178;
  if (!qword_26A002178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002178);
  }
  return result;
}

void type metadata accessor for ZeroPad1D()
{
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for ZeroPad2D()
{
}

void type metadata accessor for ReflectionPad1D()
{
}

void type metadata accessor for ReflectionPad2D()
{
}

uint64_t getEnumTagSinglePayload for SymmetricPad1D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SymmetricPad1D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for SymmetricPad1D()
{
}

uint64_t getEnumTagSinglePayload for SymmetricPad2D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SymmetricPad2D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for SymmetricPad2D()
{
}

__n128 __swift_memcpy20_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstantPad1D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConstantPad1D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for ConstantPad1D()
{
}

__n128 __swift_memcpy36_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ConstantPad2D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 36)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConstantPad2D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 36) = v3;
  return result;
}

void type metadata accessor for ConstantPad2D()
{
}

ValueMetadata *type metadata accessor for ConstantPad2D.CodingKeys()
{
  return &type metadata for ConstantPad2D.CodingKeys;
}

unsigned char *_s14NeuralNetworks13ConstantPad2DV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    void *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574DF028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConstantPad1D.CodingKeys()
{
  return &type metadata for ConstantPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for SymmetricPad2D.CodingKeys()
{
  return &type metadata for SymmetricPad2D.CodingKeys;
}

ValueMetadata *type metadata accessor for SymmetricPad1D.CodingKeys()
{
  return &type metadata for SymmetricPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for ReflectionPad2D.CodingKeys()
{
  return &type metadata for ReflectionPad2D.CodingKeys;
}

ValueMetadata *type metadata accessor for ReflectionPad1D.CodingKeys()
{
  return &type metadata for ReflectionPad1D.CodingKeys;
}

ValueMetadata *type metadata accessor for ZeroPad2D.CodingKeys()
{
  return &type metadata for ZeroPad2D.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Reshape.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s14NeuralNetworks14SymmetricPad2DV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        void *result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      void *result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2574DF1A8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ZeroPad1D.CodingKeys()
{
  return &type metadata for ZeroPad1D.CodingKeys;
}

unint64_t sub_2574DF1E4()
{
  unint64_t result = qword_26A002188;
  if (!qword_26A002188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002188);
  }
  return result;
}

unint64_t sub_2574DF234()
{
  unint64_t result = qword_26A002190;
  if (!qword_26A002190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002190);
  }
  return result;
}

unint64_t sub_2574DF284()
{
  unint64_t result = qword_26A002198;
  if (!qword_26A002198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002198);
  }
  return result;
}

unint64_t sub_2574DF2D4()
{
  unint64_t result = qword_26A0021A0;
  if (!qword_26A0021A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021A0);
  }
  return result;
}

unint64_t sub_2574DF324()
{
  unint64_t result = qword_26A0021A8;
  if (!qword_26A0021A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021A8);
  }
  return result;
}

unint64_t sub_2574DF374()
{
  unint64_t result = qword_26A0021B0;
  if (!qword_26A0021B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021B0);
  }
  return result;
}

unint64_t sub_2574DF3C4()
{
  unint64_t result = qword_26A0021B8;
  if (!qword_26A0021B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021B8);
  }
  return result;
}

unint64_t sub_2574DF414()
{
  unint64_t result = qword_26A0021C0;
  if (!qword_26A0021C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021C0);
  }
  return result;
}

unint64_t sub_2574DF464()
{
  unint64_t result = qword_26A0021C8;
  if (!qword_26A0021C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021C8);
  }
  return result;
}

unint64_t sub_2574DF4B4()
{
  unint64_t result = qword_26A0021D0;
  if (!qword_26A0021D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021D0);
  }
  return result;
}

unint64_t sub_2574DF504()
{
  unint64_t result = qword_26A0021D8;
  if (!qword_26A0021D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021D8);
  }
  return result;
}

unint64_t sub_2574DF554()
{
  unint64_t result = qword_26A0021E0;
  if (!qword_26A0021E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021E0);
  }
  return result;
}

unint64_t sub_2574DF5A4()
{
  unint64_t result = qword_26A0021E8;
  if (!qword_26A0021E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021E8);
  }
  return result;
}

unint64_t sub_2574DF5F4()
{
  unint64_t result = qword_26A0021F0;
  if (!qword_26A0021F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021F0);
  }
  return result;
}

unint64_t sub_2574DF644()
{
  unint64_t result = qword_26A0021F8;
  if (!qword_26A0021F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0021F8);
  }
  return result;
}

unint64_t sub_2574DF694()
{
  unint64_t result = qword_26A002200;
  if (!qword_26A002200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002200);
  }
  return result;
}

unint64_t sub_2574DF6E4()
{
  unint64_t result = qword_26A002208;
  if (!qword_26A002208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002208);
  }
  return result;
}

unint64_t sub_2574DF734()
{
  unint64_t result = qword_26A002210;
  if (!qword_26A002210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002210);
  }
  return result;
}

unint64_t sub_2574DF784()
{
  unint64_t result = qword_26A002218;
  if (!qword_26A002218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002218);
  }
  return result;
}

unint64_t sub_2574DF7D4()
{
  unint64_t result = qword_26A002220;
  if (!qword_26A002220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002220);
  }
  return result;
}

unint64_t sub_2574DF824()
{
  unint64_t result = qword_26A002228;
  if (!qword_26A002228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002228);
  }
  return result;
}

unint64_t sub_2574DF874()
{
  unint64_t result = qword_26A002230;
  if (!qword_26A002230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002230);
  }
  return result;
}

unint64_t sub_2574DF8C4()
{
  unint64_t result = qword_26A002238;
  if (!qword_26A002238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002238);
  }
  return result;
}

unint64_t sub_2574DF914()
{
  unint64_t result = qword_26A002240;
  if (!qword_26A002240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002240);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_26()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_2_22()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_7_17()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_11_16()
{
  return sub_2576A8730();
}

void *OUTLINED_FUNCTION_12_15()
{
  return static ScalarType.floatingPointTypes.getter();
}

void *OUTLINED_FUNCTION_13_14()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_15_13(uint64_t a1, __n128 a2)
{
  *(__n128 *)(a1 + 16) = a2;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v3;
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = v2;
  return sub_25746DEFC(a1);
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_19_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_15()
{
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  return sub_2576A8A30();
}

uint64_t OUTLINED_FUNCTION_22_13()
{
  return sub_2576A8A30();
}

BOOL OUTLINED_FUNCTION_24_10(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

uint64_t OUTLINED_FUNCTION_25_10()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_26_9(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return 34;
}

BOOL OUTLINED_FUNCTION_36_4(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

uint64_t OUTLINED_FUNCTION_40_3()
{
  return sub_2576A8CC0();
}

ValueMetadata *OUTLINED_FUNCTION_41_3()
{
  return sub_25767AC64();
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_48_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return sub_2576A8A30();
}

uint64_t OUTLINED_FUNCTION_50_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_2(uint64_t result, __n128 a2)
{
  *(__n128 *)(result + 16) = a2;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = v3;
  *(void *)(result + 72) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_57_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  return Tensor.padded(forSizes:mode:)(v15, (uint64_t)va, v14);
}

uint64_t sub_2574DFEAC()
{
  unint64_t v0 = sub_2576A8FC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19) {
    return 25;
  }
  else {
    return v0;
  }
}

unint64_t sub_2574DFF00(char a1)
{
  unint64_t result = 7561825;
  switch(a1)
  {
    case 1:
      return 1936679777;
    case 2:
      uint64_t v3 = 1936679777;
      goto LABEL_8;
    case 3:
      return 1852404577;
    case 4:
      uint64_t v3 = 1852404577;
      goto LABEL_8;
    case 5:
      return 1851880545;
    case 6:
      uint64_t v3 = 1851880545;
LABEL_8:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x6800000000;
      break;
    case 7:
      unint64_t result = 1818846563;
      break;
    case 8:
      unint64_t result = 7565155;
      break;
    case 9:
      unint64_t result = 1752395619;
      break;
    case 10:
      unint64_t result = 7370853;
      break;
    case 11:
      unint64_t result = 846231653;
      break;
    case 12:
      unint64_t result = 0x726F6F6C66;
      break;
    case 13:
      unint64_t result = 0x797469746E656469;
      break;
    case 14:
      unint64_t result = 6778732;
      break;
    case 15:
      unint64_t result = 0x636F727069636572;
      break;
    case 16:
      unint64_t result = 0x646E756F72;
      break;
    case 17:
      unint64_t result = 0x7472717372;
      break;
    case 18:
      unint64_t result = 1852270963;
      break;
    case 19:
      unint64_t result = 7235955;
      break;
    case 20:
      unint64_t result = 1752066419;
      break;
    case 21:
      unint64_t result = 1953657203;
      break;
    case 22:
      unint64_t result = 0x657261757173;
      break;
    case 23:
      unint64_t result = 7233908;
      break;
    case 24:
      unint64_t result = 1752064372;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2574E0130(char *a1, char *a2)
{
  return sub_257574B68(*a1, *a2);
}

uint64_t sub_2574E013C()
{
  return sub_2576A3678(*v0);
}

uint64_t sub_2574E0144(uint64_t a1)
{
  return sub_25746FECC(a1, *v1);
}

uint64_t sub_2574E014C(uint64_t a1)
{
  return sub_2575EEDC8(a1, *v1);
}

uint64_t sub_2574E0154@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574DFEAC();
  *a1 = result;
  return result;
}

unint64_t sub_2574E0184@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_2574DFF00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_2574E01B0(void *a1@<X8>)
{
  *a1 = &unk_27065E670;
}

unint64_t sub_2574E01C0()
{
  return sub_2574DFF00(*(unsigned char *)(v0 + 128));
}

uint64_t sub_2574E01C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8)
{
  long long v12 = *a6;
  uint64_t v13 = *((unsigned __int8 *)a6 + 16);
  long long v14 = *(long long *)((char *)a6 + 24);
  long long v15 = *(long long *)((char *)a6 + 40);
  char v16 = *((unsigned char *)a6 + 56);
  *(unsigned char *)(v8 + 128) = a4;
  if (!a3)
  {
    long long v19 = v14;
    long long v20 = v12;
    long long v18 = v15;
    a1 = sub_257664038(a4);
    long long v15 = v18;
    long long v14 = v19;
    long long v12 = v20;
  }
  long long v21 = v12;
  uint64_t v22 = v13;
  long long v23 = v14;
  long long v24 = v15;
  char v25 = v16;
  char v26 = 0;
  *(void *)(v8 + 112) = a7;
  *(void *)(v8 + 120) = a8;
  return sub_2575321A4(a1, a2, a3, a5, (uint64_t)&v21);
}

uint64_t sub_2574E0264()
{
  uint64_t v0 = sub_2575321D4();
  sub_25747A4E0(*(void *)(v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnaryArithmeticOperation()
{
  return self;
}

uint64_t getEnumTagSinglePayload for UnaryArithmeticOperation.Operator(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE8)
  {
    if (a2 + 24 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 24) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 25;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x19;
  int v5 = v6 - 25;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for UnaryArithmeticOperation.Operator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 24 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 24) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE7)
  {
    unsigned int v6 = ((a2 - 232) >> 8) + 1;
    void *result = a2 + 24;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574E0428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          void *result = a2 + 24;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnaryArithmeticOperation.Operator()
{
  return &type metadata for UnaryArithmeticOperation.Operator;
}

unint64_t sub_2574E0464()
{
  unint64_t result = qword_26A002248;
  if (!qword_26A002248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A002250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002248);
  }
  return result;
}

unint64_t sub_2574E04BC()
{
  unint64_t result = qword_26A002258;
  if (!qword_26A002258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002258);
  }
  return result;
}

uint64_t sub_2574E0508()
{
  sub_2574DFF00(*(unsigned char *)(v0 + 128));
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574E055C()
{
  return sub_2574E0508();
}

unint64_t sub_2574E0580(uint64_t a1)
{
  unint64_t result = sub_257486A14();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E05A8()
{
  return 6578544;
}

uint64_t sub_2574E05B8()
{
  return 0x646172675F646170;
}

void sub_2574E05D0()
{
}

uint64_t sub_2574E0630()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 104);
  *(void *)(v1 + 32) = *(void *)(v0 + 96);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574E068C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v11 = *a7;
  char v12 = *((unsigned char *)a7 + 8);
  *(_DWORD *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  sub_2574E0F10(a5, v8 + 48);
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = v11;
  *(unsigned char *)(v8 + 104) = v12;
  sub_257469238(a8, v8 + 112);
  return v8;
}

uint64_t sub_2574E06F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_2574A46C4(v0 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574E0738()
{
  sub_2574E06F8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BasePadOperation()
{
  return self;
}

uint64_t sub_2574E0790()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_2574E07B4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

__n128 sub_2574E07DC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  char v3 = *(unsigned char *)(v1 + 168);
  char v4 = *(unsigned char *)(v1 + 169);
  long long v5 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 144);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_2574E0808()
{
  return sub_25761B124();
}

void sub_2574E0854()
{
  (*(void (**)(void))(*v0 + 128))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_2574A4668((uint64_t)(v0 + 6), (uint64_t)&v20);
  if (v21 > 2)
  {
    sub_257479260(&v20, (uint64_t)v19);
    sub_25746B3D0((uint64_t)v19, (uint64_t)v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
    if (OUTLINED_FUNCTION_0_27())
    {
      sub_2576A90D0();
    }
    else if (OUTLINED_FUNCTION_0_27())
    {
      sub_2576A90E0();
    }
    else
    {
      sub_2576A78E0();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_2576A78E0();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_2576A7810();
    char v3 = (uint64_t *)(v1 + 40);
    uint64_t v4 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v5 = *(void *)(v4 + 16);
      int64_t v6 = v5 + 2;
      if (__OFADD__(v5, 2)) {
        break;
      }
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native
        || (unint64_t v10 = *(void *)(v4 + 24), v11 = v10 >> 1, (uint64_t)(v10 >> 1) < v6))
      {
        if (v5 <= v6) {
          uint64_t v12 = v5 + 2;
        }
        else {
          uint64_t v12 = v5;
        }
        sub_257471E14(isUniquelyReferenced_nonNull_native, v12, 1, v4);
        uint64_t v4 = v13;
        unint64_t v10 = *(void *)(v13 + 24);
        unint64_t v11 = v10 >> 1;
      }
      unint64_t v14 = *(void *)(v4 + 16);
      unint64_t v15 = v14 + 1;
      if (v11 <= v14)
      {
        sub_257471E14(v10 > 1, v14 + 1, 1, v4);
        uint64_t v4 = v16;
        unint64_t v10 = *(void *)(v16 + 24);
        unint64_t v11 = v10 >> 1;
      }
      *(void *)(v4 + 16) = v15;
      *(void *)(v4 + 8 * v14 + 32) = v7;
      if ((uint64_t)v11 < (uint64_t)(v14 + 2))
      {
        sub_257471E14(v10 > 1, v14 + 2, 1, v4);
        uint64_t v4 = v17;
      }
      v3 += 2;
      *(void *)(v4 + 16) = v14 + 2;
      *(void *)(v4 + 8 * v15 + 32) = v8;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_24:
    sub_257657270();
    swift_bridgeObjectRelease();
  }
}

void sub_2574E0B2C()
{
}

uint64_t sub_2574E0B50(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *(void *)a7;
  char v16 = *(unsigned char *)(a7 + 8);
  *(void *)(v10 + 176) = a9;
  *(void *)(v10 + 184) = a10;
  if (!a3) {
    a1 = sub_25761B148(6578544, 0xE300000000000000);
  }
  uint64_t v18 = v15;
  char v19 = v16;
  return sub_2574E068C(a1, a2, a3, a4, a5, a6, &v18, a8);
}

uint64_t sub_2574E0BE0()
{
  return sub_25747A4E0(*(void *)(v0 + 176));
}

uint64_t sub_2574E0BE8()
{
  sub_2574E06F8();
  sub_25747A4E0(*(void *)(v0 + 176));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PadOperation()
{
  return self;
}

uint64_t sub_2574E0C48()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v1 + 32) = *(void *)(v0 + 176);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_2574E0CC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = *(void *)a8;
  char v14 = *(unsigned char *)(a8 + 8);
  *(void *)(v9 + 176) = a4;
  if (!a3) {
    a1 = sub_25761B148(0x646172675F646170, 0xE800000000000000);
  }
  uint64_t v16 = v13;
  char v17 = v14;
  return sub_2574E068C(a1, a2, a3, a5, a6, a7, &v16, a9);
}

uint64_t sub_2574E0D5C()
{
  return swift_release();
}

uint64_t sub_2574E0D64()
{
  sub_2574E06F8();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PadGradientOperation()
{
  return self;
}

uint64_t sub_2574E0DC4(uint64_t a1)
{
  uint64_t result = sub_2574E0ECC(&qword_26A001858, (void (*)(void))type metadata accessor for PadGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E0E1C(uint64_t a1)
{
  uint64_t result = sub_2574E0ECC(&qword_26A001860, (void (*)(void))type metadata accessor for PadOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E0E74(uint64_t a1)
{
  uint64_t result = sub_2574E0ECC(&qword_26A002260, (void (*)(void))type metadata accessor for BasePadOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E0ECC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574E0F10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return swift_dynamicCast();
}

uint64_t sub_2574E0F90()
{
  swift_beginAccess();
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_2576A8BF0();
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v2) {
      return swift_bridgeObjectRelease_n();
    }
  }
  if (v2 < 1)
  {
    __break(1u);
LABEL_21:
    *(void *)&long long v14 = 0xD000000000000026;
    *((void *)&v14 + 1) = 0x80000002576C7730;
    char v17 = 9;
    sub_25746BE6C();
  }
  uint64_t v3 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = MEMORY[0x25A2B8DB0](v3, v1);
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
      swift_retain();
    }
    swift_retain();
    id v5 = sub_257614628();
    objc_msgSend(v5, sel_lock);

    swift_beginAccess();
    sub_257486824(v4 + 40, (uint64_t)v19);
    if (v21 && v21 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_257486824(v4 + 40, (uint64_t)v13);
      sub_257486824((uint64_t)v13, (uint64_t)&v8);
      if (v12 == 1)
      {
        long long v14 = v8;
        uint64_t v15 = v9;
        uint64_t v16 = v10;
        char v18 = 2;
        sub_25748692C((uint64_t)&v11);
      }
      else
      {
        if (v12 != 2) {
          goto LABEL_21;
        }
        sub_257486880((uint64_t)&v8);
        sub_257486824((uint64_t)v13, (uint64_t)&v14);
      }
      sub_257486880((uint64_t)v13);
      swift_beginAccess();
      sub_2574A79A8((uint64_t)&v14, v4 + 40);
      swift_endAccess();
      sub_25748692C((uint64_t)&v20);
    }
    else
    {
      sub_257486880((uint64_t)v19);
    }
    ++v3;
    id v6 = sub_257614628();
    objc_msgSend(v6, sel_unlock);
    swift_release_n();
  }
  while (v2 != v3);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_2574E1228()
{
  sub_2574E0F90();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentGraphScope()
{
  return self;
}

uint64_t sub_2574E128C()
{
  OUTLINED_FUNCTION_1_27();
  if (!v5) {
    uint64_t v3 = sub_25761B148(0x74726F735F677261, 0xE800000000000000);
  }
  OUTLINED_FUNCTION_0_28(v3, v4, v5);
  *(void *)(v1 + 64) = *(void *)(v2 + 152);
  *(unsigned char *)(v1 + 72) = 2;
  sub_257469238(v0, v1 + 80);
  sub_2576A7810();
  return v1;
}

uint64_t type metadata accessor for ArgumentSortOperation()
{
  return self;
}

uint64_t sub_2574E132C()
{
  return 0x74726F735F677261;
}

uint64_t sub_2574E1344()
{
  return sub_257479E14();
}

uint64_t sub_2574E135C()
{
  return sub_2574E13B0();
}

uint64_t sub_2574E1378()
{
  return sub_2574E1540();
}

uint64_t sub_2574E13B0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 72);
  *(void *)(v1 + 32) = *(void *)(v0 + 64);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574E140C()
{
  OUTLINED_FUNCTION_1_27();
  if (!v5) {
    uint64_t v3 = sub_25761B148(1953656691, 0xE400000000000000);
  }
  OUTLINED_FUNCTION_0_28(v3, v4, v5);
  char v6 = *(unsigned char *)(v2 + 160);
  *(void *)(v1 + 64) = *(void *)(v2 + 152);
  *(unsigned char *)(v1 + 72) = v6;
  sub_257469238(v0, v1 + 80);
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574E147C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574E14AC()
{
  sub_2574E147C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SortOperation()
{
  return self;
}

uint64_t sub_2574E1504()
{
  return 1953656691;
}

__n128 sub_2574E1514@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 128);
  char v3 = *(unsigned char *)(v1 + 136);
  char v4 = *(unsigned char *)(v1 + 137);
  long long v5 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 112);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_2574E1540()
{
  return sub_2576A90B0();
}

uint64_t sub_2574E1578()
{
  return sub_2574E1540();
}

uint64_t sub_2574E15A8(uint64_t a1)
{
  uint64_t result = sub_2574E1708(&qword_26A0018F8, (void (*)(void))type metadata accessor for SortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E1600(uint64_t a1)
{
  uint64_t result = sub_2574E1708(&qword_26A0018F0, (void (*)(void))type metadata accessor for ArgumentSortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E1658(uint64_t a1)
{
  uint64_t result = sub_2574E1708(&qword_26A002268, (void (*)(void))type metadata accessor for SortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E16B0(uint64_t a1)
{
  uint64_t result = sub_2574E1708(qword_26A002270, (void (*)(void))type metadata accessor for ArgumentSortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E1708(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_28(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(v3 + 16) = result;
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = v6;
  *(unsigned char *)(v3 + 56) = v5 & 1;
  return result;
}

uint64_t sub_2574E177C(void *a1, uint64_t a2)
{
  int v5 = *(unsigned __int8 *)(v2 + 160);
  unint64_t v6 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v6) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  long long v8 = v7;
  sub_257582858(1, v6 == 0, a2);
  if (v6) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  uint64_t v10 = v9;
  uint64_t v11 = a1;
  uint64_t v12 = *(void *)(v2 + 152);
  if (v5 == 2)
  {
    uint64_t v13 = *(void *)(v2 + 32);
    uint64_t v24 = *(void *)(v2 + 24);
    sub_2576A7810();
    sub_2576A7B00();
    uint64_t v14 = 0;
  }
  else
  {
    if (v5) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = 2;
    }
    uint64_t v16 = *(void *)(v2 + 24);
    uint64_t v15 = *(void *)(v2 + 32);
    sub_2576A7810();
    uint64_t v24 = v16;
    uint64_t v13 = v15;
  }
  char v17 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v18 = objc_msgSend(v11, sel_softMaxCrossEntropyWithSourceTensor_labelsTensor_axis_reductionType_name_, v8, v10, v12, v14, v17);

  if (v5 == 2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_2576AC2A0;
    id v20 = v18;
    *(void *)(v19 + 32) = sub_2576A80E0();
    sub_2576A7E20();
    sub_2574CA6FC();
    char v21 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
    sub_2576A7810();
    id v18 = sub_2574E1C60((uint64_t)v20, (uint64_t)v21, v24, v13, v11);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2576AC2A0;
  *(void *)(v22 + 32) = v18;
  uint64_t v25 = v22;
  sub_2576A7E20();
  return v25;
}

uint64_t sub_2574E19D4(void *a1, uint64_t a2)
{
  return sub_2574E177C(a1, a2);
}

uint64_t sub_2574E19EC(void *a1, unint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2576AC2A0;
  unint64_t v6 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  long long v8 = v7;
  sub_257582858(1, v6 == 0, a2);
  if (v6) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  uint64_t v10 = v9;
  sub_257582858(2, v6 == 0, a2);
  if (v6) {
    id v11 = (id)MEMORY[0x25A2B8DB0](2, a2);
  }
  else {
    id v11 = *(id *)(a2 + 48);
  }
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v2 + 136);
  int v14 = *(unsigned __int8 *)(v2 + 144);
  uint64_t v15 = 1;
  if ((v14 & 1) == 0) {
    uint64_t v15 = 2;
  }
  if (v14 == 2) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v18 = *(void *)(v2 + 24);
  uint64_t v17 = *(void *)(v2 + 32);
  sub_2576A7810();
  id v19 = sub_2574E1CE4((uint64_t)v8, (uint64_t)v10, (uint64_t)v12, v13, v16, v18, v17, a1);

  *(void *)(v5 + 32) = v19;
  sub_2576A7E20();
  return v5;
}