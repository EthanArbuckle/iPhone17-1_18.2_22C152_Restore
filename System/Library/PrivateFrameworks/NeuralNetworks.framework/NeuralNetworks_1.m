uint64_t sub_2574E1B6C(void *a1, unint64_t a2)
{
  return sub_2574E19EC(a1, a2);
}

uint64_t sub_2574E1B84(uint64_t a1)
{
  uint64_t result = sub_2574E1C0C(&qword_26A001D20, (void (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E1BC8(uint64_t a1)
{
  uint64_t result = sub_2574E1C0C(&qword_26A001D28, (void (*)(uint64_t))type metadata accessor for SoftmaxCrossEntropyOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574E1C0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2574E1C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_squeezeTensor_axes_name_, a1, a2, v8);

  return v9;
}

id sub_2574E1CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a8, sel_softMaxCrossEntropyGradientWithIncomingGradientTensor_sourceTensor_labelsTensor_axis_reductionType_name_, a1, a2, a3, a4, a5, v14);

  return v15;
}

uint64_t DataSample.features.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_28(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16), a2);
}

uint64_t DataSample.features.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_29(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*DataSample.features.modify())(void)
{
  return nullsub_1;
}

uint64_t DataSample.labels.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_1_28(*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16), a2);
}

uint64_t DataSample.labels.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_0_29(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*DataSample.labels.modify())(void)
{
  return nullsub_1;
}

uint64_t DataSample.init(features:labels:)@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t))(v2 + 32))(a1);
  type metadata accessor for DataSample();
  OUTLINED_FUNCTION_9_13();
  v4 = *(uint64_t (**)(void))(v3 + 32);
  return v4();
}

uint64_t type metadata accessor for DataSample()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574E1F4C@<X0>(uint64_t a1@<X8>)
{
  return DataSample.init(features:labels:)(a1);
}

uint64_t static DataSample<>.== infix(_:_:)()
{
  if ((sub_2576A7990() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DataSample();
  return sub_2576A7990() & 1;
}

uint64_t sub_2574E1FDC()
{
  return static DataSample<>.== infix(_:_:)();
}

uint64_t DataSample<>.init<A>(collating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v58 = a6;
  uint64_t v56 = a8;
  uint64_t v13 = *(void *)(a7 + 8);
  uint64_t v55 = sub_2576A89C0();
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v14);
  v53 = (char *)&v47 - v15;
  uint64_t v50 = a3;
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_3_3();
  uint64_t v54 = v17;
  uint64_t v18 = v13;
  uint64_t v19 = sub_2576A8760();
  uint64_t v60 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v21 = (char *)&v47 - v20;
  uint64_t v51 = v18;
  uint64_t v52 = sub_2576A89C0();
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v22);
  v24 = (char *)&v47 - v23;
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v25);
  OUTLINED_FUNCTION_3_3();
  uint64_t v59 = v26;
  MEMORY[0x25A2B82A0](a4, v18);
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v70 = a5;
  uint64_t v27 = v58;
  uint64_t v71 = v58;
  uint64_t v72 = a7;
  uint64_t v28 = a7;
  uint64_t KeyPath = swift_getKeyPath();
  v30 = (void *)swift_allocObject();
  v30[2] = a4;
  v30[3] = a5;
  v30[4] = v27;
  v30[5] = a7;
  v30[6] = KeyPath;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2576A8CA0();
  swift_release();
  v31 = *(void (**)(char *, uint64_t))(v60 + 8);
  v60 += 8;
  v48 = v31;
  v31(v21, v19);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 8);
  uint64_t v74 = a7;
  uint64_t v47 = MEMORY[0x263F8DE38];
  uint64_t v33 = v52;
  uint64_t v34 = swift_getWitnessTable();
  v35 = v24;
  uint64_t v36 = a5;
  v32(v35, v33, v34, a2, a5);
  MEMORY[0x25A2B82A0](a4, v51);
  uint64_t v37 = v50;
  uint64_t v61 = a2;
  uint64_t v62 = v50;
  uint64_t v63 = a4;
  uint64_t v64 = a5;
  uint64_t v38 = v58;
  uint64_t v65 = v58;
  uint64_t v66 = a7;
  uint64_t v39 = swift_getKeyPath();
  v40 = (void *)swift_allocObject();
  v40[2] = a4;
  v40[3] = v36;
  v40[4] = v38;
  v40[5] = a7;
  v40[6] = v39;
  v41 = v53;
  sub_2576A8CA0();
  swift_release();
  v48(v21, v19);
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8);
  uint64_t v73 = v28;
  uint64_t v43 = v55;
  uint64_t v44 = swift_getWitnessTable();
  v42(v41, v43, v44, v37, v38);
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v57, a4);
  return DataSample.init(features:labels:)(v56);
}

uint64_t sub_2574E24A4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2574E24DC()
{
  return swift_getAtKeyPath();
}

uint64_t sub_2574E24E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return DataSample<>.init<A>(collating:)(a1, *(void *)(a4 + 16), *(void *)(a4 + 24), a2, *(void *)(a5 - 8), *(void *)(a5 - 16), a3, a6);
}

uint64_t dispatch thunk of DataSampleProtocol.features.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataSampleProtocol.labels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataSampleProtocol.init(features:labels:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_2574E253C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2574E260C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  int v11 = *(_DWORD *)(v5 + 80) | v8;
  uint64_t v12 = v11;
  int v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(void *)(v7 + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    uint64_t *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v6);
  }
  return v4;
}

uint64_t sub_2574E2768(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_2574E280C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2574E28B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2574E295C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2574E2A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2574E2AAC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_2574E2C84(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x2574E2F10);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t OUTLINED_FUNCTION_0_29@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

uint64_t OUTLINED_FUNCTION_1_28@<X0>(uint64_t (*a1)(uint64_t)@<X3>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t sub_2574E2F60()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_2574E2FE8()
{
  OUTLINED_FUNCTION_1_29();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 56);
  swift_unknownObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_0_30();
  v1(v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_2574E3060()
{
  OUTLINED_FUNCTION_1_29();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 64);
  swift_unknownObjectRetain();
  uint64_t v2 = OUTLINED_FUNCTION_0_30();
  v1(v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_2574E30D8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2574E3100()
{
  sub_2574E30D8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ViewingTensorStorage()
{
  return self;
}

uint64_t sub_2574E315C@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
  return sub_2576A7810();
}

uint64_t sub_2574E3168()
{
  return sub_2574E2FE8();
}

uint64_t sub_2574E3180()
{
  return sub_2574E3060();
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_29()
{
  return swift_getObjectType();
}

void sub_2574E31E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v5)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v25 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  uint64_t v7 = a1;
  if (a2 >= a1 && (v5 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = a3;
    uint64_t v10 = a5;
    uint64_t v9 = a4;
    unint64_t v11 = a1;
    while (a2 != v11)
    {
      if (v7 < 0) {
        goto LABEL_23;
      }
      if (v11 >= *(void *)(v8 + 16)) {
        goto LABEL_24;
      }
      if (v11 >= *(void *)(v9 + 16)) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(a3 + 32 + 8 * v11);
      uint64_t v13 = *(void *)(a4 + 32 + 8 * v11);
      BOOL v14 = __OFSUB__(v12, v13);
      uint64_t v15 = v12 - v13;
      if (v14) {
        goto LABEL_26;
      }
      BOOL v14 = __OFSUB__(v15, 1);
      uint64_t v16 = v15 - 1;
      if (v14) {
        goto LABEL_27;
      }
      if (v11 >= *(void *)(v10 + 16)) {
        goto LABEL_28;
      }
      uint64_t v17 = *(void *)(a5 + 32 + 8 * v11);
      if (v17 < 0)
      {
        BOOL v14 = __OFSUB__(0, v17);
        uint64_t v17 = -v17;
        if (v14) {
          goto LABEL_31;
        }
      }
      else if (!v17)
      {
        goto LABEL_30;
      }
      uint64_t v18 = v16 / v17;
      uint64_t v19 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_29;
      }
      unint64_t v20 = *(void *)(v25 + 16);
      if (v20 >= *(void *)(v25 + 24) >> 1)
      {
        sub_2574E7154();
        uint64_t v8 = a3;
        uint64_t v7 = a1;
        uint64_t v10 = a5;
        uint64_t v9 = a4;
      }
      *(void *)(v25 + 16) = v20 + 1;
      *(void *)(v25 + 8 * v20 + 32) = v19;
      if (a2 == ++v11) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_2574E33C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_2574E7154();
    uint64_t result = v8;
    uint64_t v4 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *v4;
      v4 += 3;
      uint64_t v5 = v6;
      uint64_t v9 = result;
      unint64_t v7 = *(void *)(result + 16);
      if (v7 >= *(void *)(result + 24) >> 1)
      {
        sub_2574E7154();
        uint64_t result = v9;
      }
      *(void *)(result + 16) = v7 + 1;
      *(void *)(result + 8 * v7 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void sub_2574E3488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1)) {
    goto LABEL_22;
  }
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_2574E7A34();
    if (a2 < a1 || v5 < 0) {
      goto LABEL_23;
    }
    uint64_t v8 = v22;
    uint64_t v9 = a1 + 4;
    uint64_t v11 = a4;
    uint64_t v10 = a5;
    uint64_t v12 = a3;
    while (v9 - a2 != 4)
    {
      if (a1 < 0) {
        goto LABEL_17;
      }
      unint64_t v13 = v9 - 4;
      if ((unint64_t)(v9 - 4) >= *(void *)(*(void *)v12 + 16)) {
        goto LABEL_18;
      }
      if (v13 >= *(void *)(*(void *)v11 + 16)) {
        goto LABEL_19;
      }
      uint64_t v14 = *(void *)(*(void *)v12 + 8 * v9);
      uint64_t v15 = *(void *)(*(void *)v11 + 8 * v9);
      if (v15 < v14) {
        goto LABEL_20;
      }
      if (v13 >= *(void *)(*(void *)v10 + 16)) {
        goto LABEL_21;
      }
      uint64_t v16 = *(void *)(*(void *)v10 + 8 * v9);
      uint64_t v23 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      if (v17 >= *(void *)(v8 + 24) >> 1)
      {
        sub_2574E7A34();
        uint64_t v12 = a3;
        uint64_t v11 = a4;
        uint64_t v10 = a5;
        uint64_t v8 = v23;
      }
      *(void *)(v8 + 16) = v17 + 1;
      uint64_t v18 = (void *)(v8 + 24 * v17);
      v18[4] = v14;
      v18[5] = v15;
      v18[6] = v16;
      if (++v9 - a2 == 4) {
        return;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
}

void sub_2574E3618(uint64_t a1, uint64_t a2)
{
}

void sub_2574E3630(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_2574E7A54();
  unint64_t v7 = v6;
  uint64_t v29 = a1;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 32);
    uint64_t v9 = (uint64_t *)(a2 + 32);
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v10 = v4;
    unint64_t v11 = v5;
    while (v10)
    {
      if (!v11) {
        goto LABEL_26;
      }
      uint64_t v12 = *v8;
      uint64_t v13 = *v9;
      if (*v9 < *v8) {
        goto LABEL_27;
      }
      unint64_t v14 = *(void *)(v30 + 16);
      unint64_t v15 = v14 + 1;
      if (v14 >= *(void *)(v30 + 24) >> 1)
      {
        sub_2574E7A54();
        unint64_t v15 = v14 + 1;
      }
      *(void *)(v30 + 16) = v15;
      uint64_t v16 = v30 + 16 * v14;
      --v11;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      OUTLINED_FUNCTION_43_4();
      if (v20) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v17 = a2;
    unint64_t v18 = v4;
    unint64_t v19 = v5;
LABEL_15:
    if (v18 <= v19)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v21 = v17 + 32;
    while (v7 < v18)
    {
      if (v19 == v7) {
        goto LABEL_24;
      }
      if (v7 >= v19) {
        goto LABEL_29;
      }
      uint64_t v22 = *(void *)(v29 + 32 + 8 * v7);
      uint64_t v23 = *(void *)(v21 + 8 * v7);
      if (v23 < v22) {
        goto LABEL_30;
      }
      unint64_t v24 = *(void *)(v30 + 16);
      if (v24 >= *(void *)(v30 + 24) >> 1)
      {
        uint64_t v26 = v17;
        unint64_t v27 = v19;
        unint64_t v28 = v18;
        sub_2574E7A54();
        unint64_t v19 = v27;
        unint64_t v18 = v28;
        uint64_t v17 = v26;
      }
      ++v7;
      *(void *)(v30 + 16) = v24 + 1;
      uint64_t v25 = v30 + 16 * v24;
      *(void *)(v25 + 32) = v22;
      *(void *)(v25 + 40) = v23;
      if (v18 == v7) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_2574E3864(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  unint64_t v7 = v6;
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  if (v6)
  {
    uint64_t v8 = (void *)(a1 + 32);
    uint64_t v9 = (void *)(a2 + 32);
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v10 = v5;
    while (v4)
    {
      if (!v10) {
        goto LABEL_25;
      }
      uint64_t v11 = *v8 + *v9;
      if (__OFADD__(*v8, *v9)) {
        goto LABEL_26;
      }
      unint64_t v12 = *(void *)(v24 + 16);
      if (v12 >= *(void *)(v24 + 24) >> 1) {
        sub_2574E7154();
      }
      --v10;
      *(void *)(v24 + 16) = v12 + 1;
      *(void *)(v24 + 8 * v12 + 32) = v11;
      OUTLINED_FUNCTION_43_4();
      if (v15) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v13 = v4;
    unint64_t v14 = v5;
LABEL_15:
    if (v13 <= v14)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v13)
    {
      if (v14 == v7) {
        goto LABEL_23;
      }
      if (v7 >= v14) {
        goto LABEL_28;
      }
      uint64_t v16 = *(void *)(v23 + 32 + 8 * v7);
      uint64_t v17 = *(void *)(v22 + 32 + 8 * v7);
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17)) {
        goto LABEL_29;
      }
      unint64_t v19 = *(void *)(v24 + 16);
      if (v19 >= *(void *)(v24 + 24) >> 1)
      {
        unint64_t v20 = v13;
        unint64_t v21 = v14;
        sub_2574E7154();
        unint64_t v14 = v21;
        unint64_t v13 = v20;
      }
      ++v7;
      *(void *)(v24 + 16) = v19 + 1;
      *(void *)(v24 + 8 * v19 + 32) = v18;
      if (v13 == v7) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
}

void sub_2574E3A7C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    unint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    unint64_t v6 = *(void *)(a2 + 16);
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_2574E7154();
  unint64_t v7 = v6;
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  if (v6)
  {
    uint64_t v8 = (void *)(a1 + 32);
    uint64_t v9 = (void *)(a2 + 32);
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v10 = v7;
    unint64_t v11 = v4;
    unint64_t v12 = v5;
    unint64_t v13 = v5;
    while (v4)
    {
      if (!v12) {
        goto LABEL_24;
      }
      uint64_t v14 = *v8 - *v9;
      if (__OFSUB__(*v8, *v9)) {
        goto LABEL_25;
      }
      unint64_t v15 = *(void *)(v26 + 16);
      if (v15 >= *(void *)(v26 + 24) >> 1)
      {
        unint64_t v21 = v11;
        unint64_t v22 = v13;
        sub_2574E7154();
        unint64_t v13 = v22;
        unint64_t v11 = v21;
      }
      --v12;
      *(void *)(v26 + 16) = v15 + 1;
      *(void *)(v26 + 8 * v15 + 32) = v14;
      --v4;
      ++v9;
      ++v8;
      if (!--v10) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v11 = v4;
    unint64_t v13 = v5;
LABEL_14:
    if (v11 <= v13)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    while (v7 < v11)
    {
      if (v13 == v7) {
        goto LABEL_22;
      }
      if (v7 >= v13) {
        goto LABEL_27;
      }
      uint64_t v16 = *(void *)(v25 + 32 + 8 * v7);
      uint64_t v17 = *(void *)(v24 + 32 + 8 * v7);
      uint64_t v18 = v16 - v17;
      if (__OFSUB__(v16, v17)) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v26 + 16);
      if (v19 >= *(void *)(v26 + 24) >> 1)
      {
        unint64_t v20 = v11;
        unint64_t v23 = v13;
        sub_2574E7154();
        unint64_t v13 = v23;
        unint64_t v11 = v20;
      }
      ++v7;
      *(void *)(v26 + 16) = v19 + 1;
      *(void *)(v26 + 8 * v19 + 32) = v18;
      if (v11 == v7) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t Tensor.slice(lowerBounds:upperBounds:)()
{
  OUTLINED_FUNCTION_44_4();
  if (v2 && (uint64_t v3 = *v1, OUTLINED_FUNCTION_7_18(), v2))
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_2576A7810();
    sub_2576A7810();
    sub_2574E3630(v7, v6);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2574E3D78(v9, v3, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_12_16();
    __break(1u);
  }
  return result;
}

void sub_2574E3D78(int64x2_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = a1[1].i64[0];
  uint64_t v6 = (uint64_t *)MEMORY[0x263F8EE78];
  if (v5)
  {
    unint64_t v13 = (uint64_t *)MEMORY[0x263F8EE78];
    sub_2574E7A34();
    uint64_t v6 = v13;
    uint64_t v8 = a1 + 2;
    while (1)
    {
      int64x2_t v9 = *v8;
      if (vmovn_s64(vcgtq_s64(*v8, vdupq_laneq_s64(*v8, 1))).u32[0]) {
        break;
      }
      unint64_t v10 = v13[2];
      if (v10 >= (unint64_t)v13[3] >> 1)
      {
        int64x2_t v12 = *v8;
        sub_2574E7A34();
        int64x2_t v9 = v12;
      }
      v13[2] = v10 + 1;
      unint64_t v11 = (int64x2_t *)&v13[3 * v10];
      v11[2] = v9;
      v11[3].i64[0] = 1;
      ++v8;
      if (!--v5) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    sub_2574E4074(v6, a2, a3);
    swift_bridgeObjectRelease();
  }
}

uint64_t Tensor.slice<A>(at:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0022F8);
  unint64_t v10 = (uint64_t *)sub_257495BE0((void (*)(char *, uint64_t))sub_2574E4054, 0, a1, v8, MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], v9);
  sub_2574E4074(v10, v7, a3);
  return swift_bridgeObjectRelease();
}

uint64_t Tensor.slice(lowerBounds:sizes:)()
{
  OUTLINED_FUNCTION_44_4();
  if (v2 && (uint64_t v3 = *v1, OUTLINED_FUNCTION_7_18(), v2))
  {
    uint64_t v6 = v5;
    uint64_t v7 = v4;
    sub_2576A7810();
    sub_2576A7810();
    sub_2574E3864(v7, v6);
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = sub_2576A7810();
    sub_2574E3630(v10, v9);
    int64x2_t v12 = v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2574E3D78(v12, v3, v0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = OUTLINED_FUNCTION_12_16();
    __break(1u);
  }
  return result;
}

void *sub_2574E4054@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  if (v2 < *result)
  {
    __break(1u);
  }
  else
  {
    *a2 = *result;
    a2[1] = v2;
    a2[2] = 1;
  }
  return result;
}

uint64_t sub_2574E4074@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  void (*v37)(uint64_t *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)(void, void);
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[6];
  _OWORD v60[3];
  uint64_t v61;
  __int16 v62;

  uint64_t v4 = *(void *)(a2 + 16);
  if (!*(void *)(*(void *)(v4 + 152) + 16))
  {
LABEL_34:
    uint64_t result = sub_2576A8B60();
    __break(1u);
    return result;
  }
  uint64_t v5 = a2;
  uint64_t v7 = a1[2];
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    goto LABEL_26;
  }
  uint64_t v9 = a1 + 4;
  if (a1[4] != a1[5])
  {
    if (v7 != 1)
    {
      uint64_t v17 = a1 + 8;
      uint64_t v18 = 1;
      while (1)
      {
        uint64_t v19 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (*(v17 - 1) == *v17) {
          goto LABEL_4;
        }
        ++v18;
        v17 += 3;
        if (v19 == v7) {
          goto LABEL_17;
        }
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
LABEL_17:
    v53 = *(void *)(a2 + 16);
    uint64_t v55 = a3;
    *(void *)&v60[0] = MEMORY[0x263F8EE78];
    sub_2574E7154();
    uint64_t v16 = *(void *)&v60[0];
    unint64_t v20 = *(void *)(*(void *)&v60[0] + 16);
    uint64_t v21 = v7;
    do
    {
      uint64_t v23 = *v9;
      v9 += 3;
      uint64_t v22 = v23;
      *(void *)&v60[0] = v16;
      if (v20 >= *(void *)(v16 + 24) >> 1)
      {
        sub_2574E7154();
        uint64_t v16 = *(void *)&v60[0];
      }
      *(void *)(v16 + 16) = v20 + 1;
      *(void *)(v16 + 8 * v20++ + 32) = v22;
      --v21;
    }
    while (v21);
    *(void *)&v60[0] = v8;
    sub_2574E7154();
    unint64_t v24 = *(void *)(v8 + 16);
    uint64_t v25 = a1 + 5;
    a3 = v55;
    do
    {
      uint64_t v27 = *v25;
      v25 += 3;
      uint64_t v26 = v27;
      *(void *)&v60[0] = v8;
      if (v24 >= *(void *)(v8 + 24) >> 1)
      {
        sub_2574E7154();
        uint64_t v8 = *(void *)&v60[0];
      }
      *(void *)(v8 + 16) = v24 + 1;
      *(void *)(v8 + 8 * v24++ + 32) = v26;
      --v7;
    }
    while (v7);
    uint64_t v5 = a2;
    uint64_t v4 = v53;
LABEL_26:
    uint64_t v28 = sub_2574E33C8((uint64_t)a1);
    uint64_t v29 = *(void *)(v16 + 16);
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v54 = v28;
    sub_2574E31E8(0, v29, v8, v16, v28);
    uint64_t v31 = v30;
    uint64_t v56 = a3;
    uint64_t v32 = v4;
    if (sub_257654B3C(v30, &unk_27065D960))
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = MEMORY[0x263F8EE78];
    }
    *(void *)&v60[0] = v5;
    uint64_t v33 = Tensor.scalarType.getter();
    uint64_t v35 = v34;
    uint64_t v36 = v5;
    uint64_t v37 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v34 + 32);
    swift_retain();
    v37(v59, v33, v35);
    uint64_t v58 = v31;
    *(void *)&v60[0] = v36;
    Tensor.scalarType.getter();
    (*(void (**)(_OWORD *__return_ptr))(v38 + 32))(v60);
    LOBYTE(v33) = v60[0];
    uint64_t v39 = static ScalarType.floatingPointTypes.getter();
    LOBYTE(v33) = sub_2575A0094(v33, (uint64_t)v39);
    swift_bridgeObjectRelease();
    if (v33)
    {
      v40 = *(void *)(v32 + 152);
      *(void *)&v60[0] = v36;
      v41 = Tensor.scalarType.getter();
      uint64_t v43 = v42;
      uint64_t v44 = (void *)swift_allocObject();
      v44[2] = v16;
      v44[3] = v8;
      v46 = v28;
      uint64_t v45 = v56;
      v44[4] = v54;
      v44[5] = v40;
      v44[6] = v41;
      v44[7] = v43;
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      uint64_t v47 = sub_25761BED4((uint64_t)sub_2574E7130);
      v49 = v48;
      swift_release();
    }
    else
    {
      uint64_t v47 = 0;
      v49 = 0;
      v46 = v28;
      uint64_t v45 = v56;
    }
    *(void *)&v60[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
    *(_OWORD *)((char *)v60 + 8) = xmmword_2576ACB10;
    *(_OWORD *)((char *)&v60[1] + 8) = xmmword_2576B1830;
    *((void *)&v60[2] + 1) = "init(id:operand:starts:ends:strides:resultDescriptor:creationSite:backward:)";
    uint64_t v61 = 76;
    uint64_t v62 = 2;
    type metadata accessor for SliceOperation();
    swift_allocObject();
    uint64_t v50 = sub_257690154(0, 0, 0, v32, v16, v8, v46, (uint64_t)&v58, (uint64_t)v60, v47, v49);
    uint64_t v51 = (uint64_t (**)(void, void))sub_2574E70DC();
    sub_257476E94(v32 + 168, (uint64_t)&v58, (uint64_t *)&unk_26A004250);
    return sub_257613838(v50, v51, 0, (uint64_t)&v58, v45);
  }
LABEL_4:
  *(void *)&v60[0] = MEMORY[0x263F8EE78];
  sub_2574E7154();
  uint64_t v10 = *(void *)&v60[0];
  unint64_t v11 = a1 + 5;
  do
  {
    uint64_t v12 = *(v11 - 1);
    uint64_t v13 = *v11 - v12;
    if (__OFSUB__(*v11, v12))
    {
      __break(1u);
      goto LABEL_33;
    }
    *(void *)&v60[0] = v10;
    unint64_t v14 = *(void *)(v10 + 16);
    if (v14 >= *(void *)(v10 + 24) >> 1)
    {
      sub_2574E7154();
      uint64_t v10 = *(void *)&v60[0];
    }
    v11 += 3;
    *(void *)(v10 + 16) = v14 + 1;
    *(void *)(v10 + 8 * v14 + 32) = v13;
    --v7;
  }
  while (v7);
  LODWORD(v61) = 0;
  memset(v60, 0, sizeof(v60));
  if ((sub_2575A0064(0, v10) & 1) == 0) {
    goto LABEL_34;
  }
  sub_257476E94((uint64_t)v60, (uint64_t)&v58, (uint64_t *)&unk_26A004250);
  sub_2575A1C54();
  uint64_t result = sub_2574B92D8((uint64_t)v60, (uint64_t *)&unk_26A004250);
  *a3 = v57;
  return result;
}

uint64_t Tensor.slice<A>(at:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  void (*v41)(uint64_t *__return_ptr, ValueMetadata *, uint64_t);
  uint64_t v42;
  void *v43;
  uint64_t v44;
  ValueMetadata *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (**v54)(void, void);
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[6];
  _OWORD v60[3];
  uint64_t v61;
  __int16 v62;

  uint64_t v5 = *v3;
  if (!*(void *)(*(void *)(*(void *)(*v3 + 16) + 152) + 16))
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_14:
    uint64_t result = OUTLINED_FUNCTION_12_16();
    __break(1u);
    return result;
  }
  if (sub_2576A7D20())
  {
    uint64_t v15 = sub_257495BE0((void (*)(char *, uint64_t))sub_2574E4ADC, 0, a1, MEMORY[0x263F8D6C8], MEMORY[0x263F8E628], a2, MEMORY[0x263F8E658], v14);
    LODWORD(v61) = 0;
    memset(v60, 0, sizeof(v60));
    if (sub_2575A0064(0, v15))
    {
      sub_257476E94((uint64_t)v60, (uint64_t)&v58, (uint64_t *)&unk_26A004250);
      sub_2575A1C54();
      uint64_t result = sub_2574B92D8((uint64_t)v60, (uint64_t *)&unk_26A004250);
      *a3 = v57;
      return result;
    }
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_21_14();
    goto LABEL_14;
  }
  uint64_t v56 = a3;
  uint64_t v17 = OUTLINED_FUNCTION_10_14((void (*)(char *, uint64_t))sub_2574D7240, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v25 = OUTLINED_FUNCTION_10_14((void (*)(char *, uint64_t))sub_2574E4AF4, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v33 = OUTLINED_FUNCTION_10_14((void (*)(char *, uint64_t))sub_2574E4B00, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v34 = *(void *)(v17 + 16);
  sub_2576A7810();
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v55 = v25;
  sub_2574E31E8(0, v34, v25, v17, v33);
  uint64_t v36 = v35;
  if (sub_257654B3C(v35, &unk_27065E6B0))
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x263F8EE78];
  }
  uint64_t v37 = *(void *)(v5 + 16);
  *(void *)&v60[0] = v5;
  uint64_t v38 = Tensor.scalarType.getter();
  uint64_t v40 = v39;
  v41 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v39 + 32);
  swift_retain();
  v41(v59, v38, v40);
  uint64_t v58 = v36;
  *(void *)&v60[0] = v5;
  Tensor.scalarType.getter();
  (*(void (**)(_OWORD *__return_ptr))(v42 + 32))(v60);
  LOBYTE(v38) = v60[0];
  uint64_t v43 = static ScalarType.floatingPointTypes.getter();
  LOBYTE(v38) = sub_2575A0094(v38, (uint64_t)v43);
  swift_bridgeObjectRelease();
  if (v38)
  {
    uint64_t v44 = *(void *)(*(void *)(v5 + 16) + 152);
    *(void *)&v60[0] = v5;
    uint64_t v45 = Tensor.scalarType.getter();
    uint64_t v47 = v46;
    v48 = (void *)swift_allocObject();
    v49 = v55;
    v48[2] = v17;
    v48[3] = v55;
    v48[4] = v33;
    v48[5] = v44;
    v48[6] = v45;
    v48[7] = v47;
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v50 = sub_25761BED4((uint64_t)sub_2574E7130);
    uint64_t v52 = v51;
    swift_release();
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v52 = 0;
    v49 = v55;
  }
  *(void *)&v60[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
  *(_OWORD *)((char *)v60 + 8) = xmmword_2576ACB10;
  *(_OWORD *)((char *)&v60[1] + 8) = xmmword_2576B1830;
  *((void *)&v60[2] + 1) = "init(id:operand:starts:ends:strides:resultDescriptor:creationSite:backward:)";
  uint64_t v61 = 76;
  uint64_t v62 = 2;
  type metadata accessor for SliceOperation();
  swift_allocObject();
  v53 = sub_257690154(0, 0, 0, v37, v17, v49, v33, (uint64_t)&v58, (uint64_t)v60, v50, v52);
  uint64_t v54 = (uint64_t (**)(void, void))sub_2574E70DC();
  sub_257476E94(*(void *)(v5 + 16) + 168, (uint64_t)&v58, (uint64_t *)&unk_26A004250);
  return sub_257613838(v53, v54, 0, (uint64_t)&v58, v56);
}

BOOL sub_2574E4ACC(void *a1)
{
  return *a1 == a1[1];
}

void *sub_2574E4ADC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  if (__OFSUB__(v2, *result)) {
    __break(1u);
  }
  else {
    *a2 = v2 - *result;
  }
  return result;
}

uint64_t sub_2574E4AF4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t sub_2574E4B00@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 16);
  return result;
}

uint64_t sub_2574E4B0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(void *)(a2 + 16))
  {
    if (*(void *)(result + 16))
    {
      uint64_t v11 = *(void *)(*(void *)(result + 32) + 16);
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(a8 + 32);
      uint64_t v25 = *(void *)(*(void *)(a2 + 32) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      sub_2576A7810();
      v24(a7, a8);
      v26[0] = a6;
      long long v30 = xmmword_2576ACB10;
      long long v31 = xmmword_2576B1840;
      uint64_t v29 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/SliceOps.swift";
      uint64_t v32 = "init(id:gradientOperand:operand:starts:ends:strides:resultDescriptor:creationSite:)";
      uint64_t v33 = 83;
      __int16 v34 = 2;
      type metadata accessor for SliceGradientOperation();
      swift_allocObject();
      uint64_t v15 = sub_257690224(0, 0, 0, v11, v25, a3, a4, a5);
      sub_257476E94(v11 + 168, (uint64_t)v28, (uint64_t *)&unk_26A004250);
      sub_257476E94((uint64_t)v28, (uint64_t)v27, (uint64_t *)&unk_26A004250);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_2575D60A8();
      sub_2575D614C((uint64_t)v26);
      swift_release();
      uint64_t v16 = v26[10];
      swift_retain();
      sub_2574718B0((uint64_t)v26);
      sub_2575D60A8();
      sub_2575D614C((uint64_t)v26);
      swift_release();
      uint64_t v17 = v26[9];
      swift_retain();
      sub_2574718B0((uint64_t)v26);
      type metadata accessor for TensorRepresentation();
      uint64_t v18 = swift_allocObject();
      LOBYTE(v26[0]) = 1;
      uint64_t v19 = sub_257583B54(v15, 0, v27, 0x100000000, v16, v17, v18);
      type metadata accessor for TensorHandle();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      swift_retain();
      sub_2576139A8();
      swift_release();
      sub_2574B92D8((uint64_t)v28, (uint64_t *)&unk_26A004250);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v22 = sub_2574E8C6C();
      *(void *)(v21 + 32) = v20;
      *(void *)(v21 + 40) = v22;
      *(void *)(v21 + 48) = v23;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

__n128 TensorRange.tensorRange.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[1].n128_u64[0];
  unsigned __int8 v3 = v1[1].n128_u8[8];
  __n128 result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

BOOL static TensorRange.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  int v8 = *((unsigned __int8 *)a2 + 24);
  switch(*((unsigned char *)a1 + 24))
  {
    case 1:
      if (v8 == 1) {
        return v2 == v5 && v3 == v6 && v4 == v7;
      }
      return 0;
    case 2:
      if (v8 != 2) {
        return 0;
      }
      return v2 == v5 && v3 == v6 && v4 == v7;
    case 3:
      if (v8 != 3) {
        return 0;
      }
      return v2 == v5 && v3 == v6;
    case 4:
      if (v8 != 4) {
        return 0;
      }
      return v2 == v5 && v3 == v6;
    case 5:
      if (v8 != 5) {
        return 0;
      }
      return v2 == v5 && v3 == v6;
    case 6:
      uint64_t v12 = v4 | v3;
      if (!(v12 | v2))
      {
        uint64_t v16 = v7 | v6 | v5;
        return v8 == 6 && v16 == 0;
      }
      if (v2 == 1 && v12 == 0)
      {
        uint64_t v14 = v7 | v6;
        BOOL v15 = v8 == 6 && v5 == 1;
      }
      else
      {
        uint64_t v14 = v7 | v6;
        BOOL v15 = v8 == 6 && v5 == 2;
      }
      return v15 && v14 == 0;
    default:
      if (*((unsigned char *)a2 + 24)) {
        return 0;
      }
      return v2 == v5;
  }
}

uint64_t Int.tensorRange.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_2574E4F6C@<X0>(uint64_t a1@<X8>)
{
  return Int.tensorRange.getter(*v1, a1);
}

uint64_t Range<>.tensorRange.getter@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 1;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_2574E4F88@<X0>(uint64_t a1@<X8>)
{
  return Range<>.tensorRange.getter(*v1, v1[1], a1);
}

void ClosedRange<>.tensorRange.getter(void *a1@<X8>, uint64_t a2@<X0>, uint64_t a3@<X1>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = 1;
  OUTLINED_FUNCTION_42_3((uint64_t)a1);
}

void sub_2574E4FA4(void *a1@<X8>)
{
  ClosedRange<>.tensorRange.getter(a1, *v1, v1[1]);
}

void PartialRangeFrom<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_2576B0250;
  OUTLINED_FUNCTION_42_3(a1);
}

void sub_2574E4FC4(uint64_t a1@<X8>)
{
  PartialRangeFrom<>.tensorRange.getter(a1, *v1);
}

void PartialRangeUpTo<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_2576B0250;
  OUTLINED_FUNCTION_42_3(a1);
}

void sub_2574E4FE4(uint64_t a1@<X8>)
{
  PartialRangeUpTo<>.tensorRange.getter(a1, *v1);
}

void PartialRangeThrough<>.tensorRange.getter(uint64_t a1@<X8>, uint64_t a2@<X0>)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + 8) = xmmword_2576B0250;
  OUTLINED_FUNCTION_42_3(a1);
}

void sub_2574E5004(uint64_t a1@<X8>)
{
  PartialRangeThrough<>.tensorRange.getter(a1, *v1);
}

uint64_t Tensor.IndexPath.start.getter()
{
  return sub_2576A7810();
}

uint64_t Tensor.IndexPath.end.getter()
{
  return sub_2576A7810();
}

uint64_t Tensor.IndexPath.strides.getter()
{
  return sub_2576A7810();
}

uint64_t Tensor.IndexPath.beginMask.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Tensor.IndexPath.endMask.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Tensor.IndexPath.ellipsisMask.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Tensor.IndexPath.newAxisMask.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Tensor.IndexPath.squeezeAxisMask.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Tensor.IndexPath.init(begin:end:strides:beginMask:endMask:ellipsisMask:newAxisMask:squeezeAxisMask:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t Tensor.subscript.getter()
{
  OUTLINED_FUNCTION_49_4();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_2574E7A74();
    uint64_t v7 = v6 + 32;
    do
    {
      sub_257476E94(v7, (uint64_t)&v31, &qword_26A002308);
      sub_257476E94((uint64_t)&v31, (uint64_t)v28, &qword_26A002308);
      if (v29)
      {
        __swift_project_boxed_opaque_existential_1(v28, v29);
        OUTLINED_FUNCTION_11_17();
        uint64_t v9 = v8();
        OUTLINED_FUNCTION_46_4(v9, v10, v11, v12, v13, v14, v15, v16, v27);
      }
      else
      {
        sub_2574B92D8((uint64_t)v28, &qword_26A002308);
        OUTLINED_FUNCTION_45_4();
      }
      sub_2574B92D8((uint64_t)&v31, &qword_26A002308);
      uint64_t v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_21();
        uint64_t v17 = v30;
      }
      unint64_t v18 = *(void *)(v17 + 16);
      if (v18 >= *(void *)(v17 + 24) >> 1)
      {
        sub_2574E7A74();
        uint64_t v17 = v30;
      }
      *(void *)(v17 + 16) = v18 + 1;
      uint64_t v19 = v17 + 32 * v18;
      *(void *)(v19 + 32) = v2;
      *(void *)(v19 + 40) = v3;
      *(void *)(v19 + 48) = v1;
      *(unsigned char *)(v19 + 56) = v0;
      v7 += 40;
      --v5;
    }
    while (v5);
  }
  long long v31 = &unk_27065E6D8;
  sub_2575A0CB8();
  uint64_t v20 = (uint64_t)v31;
  if (*((void *)v31 + 2))
  {
    sub_2576A7810();
    uint64_t v21 = (void *)MEMORY[0x263F8EE78];
    do
    {
      OUTLINED_FUNCTION_35_5();
      if (v22)
      {
        OUTLINED_FUNCTION_6_20();
        if (!v23)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          long long v31 = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_9_21();
            uint64_t v21 = v31;
          }
          OUTLINED_FUNCTION_13_15();
          if (v25)
          {
            OUTLINED_FUNCTION_41_4();
            uint64_t v21 = v31;
          }
          OUTLINED_FUNCTION_1_30();
        }
      }
      OUTLINED_FUNCTION_33_6();
    }
    while (!v22);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_7();
  if (v0 > 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_5_21();
  }
  else
  {
    sub_2574E5348(v20, (uint64_t *)&v31);
    OUTLINED_FUNCTION_7_18();
    if (v22)
    {
      OUTLINED_FUNCTION_7_18();
      if (v22)
      {
        v28[0] = v1;
        swift_retain();
        sub_2574E66EC(&v31, v2);
        sub_2574E7A94((uint64_t)&v31);
        return swift_release();
      }
    }
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_12_16();
  __break(1u);
  return result;
}

{
  unint64_t v0;
  uint64_t v1;
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  uint64_t result;
  uint64_t v26;
  void v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_49_4();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4;
    uint64_t v29 = MEMORY[0x263F8EE78];
    sub_2574E7A74();
    uint64_t v7 = v6 + 32;
    do
    {
      sub_257476E94(v7, (uint64_t)&v30, &qword_26A002308);
      sub_257476E94((uint64_t)&v30, (uint64_t)v27, &qword_26A002308);
      if (v28)
      {
        __swift_project_boxed_opaque_existential_1(v27, v28);
        OUTLINED_FUNCTION_11_17();
        uint64_t v9 = v8();
        OUTLINED_FUNCTION_46_4(v9, v10, v11, v12, v13, v14, v15, v16, v26);
      }
      else
      {
        sub_2574B92D8((uint64_t)v27, &qword_26A002308);
        OUTLINED_FUNCTION_45_4();
      }
      sub_2574B92D8((uint64_t)&v30, &qword_26A002308);
      uint64_t v17 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_21();
        uint64_t v17 = v29;
      }
      unint64_t v18 = *(void *)(v17 + 16);
      if (v18 >= *(void *)(v17 + 24) >> 1)
      {
        sub_2574E7A74();
        uint64_t v17 = v29;
      }
      *(void *)(v17 + 16) = v18 + 1;
      uint64_t v19 = v17 + 32 * v18;
      *(void *)(v19 + 32) = v2;
      *(void *)(v19 + 40) = v3;
      *(void *)(v19 + 48) = v1;
      *(unsigned char *)(v19 + 56) = v0;
      v7 += 40;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
      goto LABEL_25;
    }
  }
  sub_2576A7810();
  uint64_t v20 = MEMORY[0x263F8EE78];
  do
  {
    OUTLINED_FUNCTION_35_5();
    if (v21)
    {
      OUTLINED_FUNCTION_6_20();
      if (!v22)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v30 = v20;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          OUTLINED_FUNCTION_9_21();
          uint64_t v20 = v30;
        }
        OUTLINED_FUNCTION_13_15();
        if (v24)
        {
          OUTLINED_FUNCTION_41_4();
          uint64_t v20 = v30;
        }
        OUTLINED_FUNCTION_1_30();
      }
    }
    OUTLINED_FUNCTION_33_6();
  }
  while (!v21);
  swift_bridgeObjectRelease();
LABEL_25:
  OUTLINED_FUNCTION_28_7();
  if (v0 > 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_5_21();
  }
  else
  {
    sub_2574E5348(v17, &v30);
    OUTLINED_FUNCTION_7_18();
    if (v21)
    {
      OUTLINED_FUNCTION_7_18();
      if (v21)
      {
        v27[0] = v1;
        swift_retain();
        sub_2574E66EC(&v30, v2);
        sub_2574E7A94((uint64_t)&v30);
        return swift_release();
      }
    }
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_12_16();
  __break(1u);
  return result;
}

uint64_t sub_2574E5348@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_119:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_21_14();
LABEL_121:
    OUTLINED_FUNCTION_12_16();
    __break(1u);
    JUMPOUT(0x2574E592CLL);
  }
  uint64_t v4 = (unsigned char *)(a1 + 56);
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(a1 + 16);
  do
  {
    if (*v4 == 6 && !(*((void *)v4 - 2) | *((void *)v4 - 1) | *((void *)v4 - 3)))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_9_21();
      }
      unint64_t v7 = *(void *)(v5 + 16);
      if (v7 >= *(void *)(v5 + 24) >> 1) {
        sub_2574E7A74();
      }
      *(void *)(v5 + 16) = v7 + 1;
      uint64_t v8 = v5 + 32 * v7;
      *(void *)(v8 + 40) = 0;
      *(void *)(v8 + 48) = 0;
      *(void *)(v8 + 32) = 0;
      *(unsigned char *)(v8 + 56) = 6;
    }
    v4 += 32;
    --v6;
  }
  while (v6);
  OUTLINED_FUNCTION_28_7();
  if ((unint64_t)v4 >= 2)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_121;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = sub_257608D64(0, v9);
  uint64_t v11 = sub_257608D64(0, v9);
  uint64_t v12 = sub_257608D64(1, v9);
  uint64_t v55 = 0;
  uint64_t v52 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  unint64_t v13 = 0;
  uint64_t v14 = (unsigned char *)(a1 + 56);
  while (2)
  {
    uint64_t v16 = *((void *)v14 - 3);
    uint64_t v15 = *((void *)v14 - 2);
    uint64_t v17 = *((void *)v14 - 1);
    switch(*v14)
    {
      case 0:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v10 = v36;
        }
        OUTLINED_FUNCTION_34_6();
        if (v18) {
          goto LABEL_105;
        }
        OUTLINED_FUNCTION_48_4();
        if (__OFADD__(v16, 1)) {
          goto LABEL_109;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v11 = v45;
        }
        OUTLINED_FUNCTION_38_4();
        if (v18) {
          goto LABEL_113;
        }
        *(void *)(v11 + 8 * v13 + 32) = v16 + 1;
        uint64_t v19 = 1 << v13;
        if (v13 >= 0x40) {
          uint64_t v19 = 0;
        }
        v55 |= v19;
        goto LABEL_99;
      case 1:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v10 = v40;
        }
        OUTLINED_FUNCTION_34_6();
        if (v18) {
          goto LABEL_107;
        }
        OUTLINED_FUNCTION_48_4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v11 = v43;
        }
        OUTLINED_FUNCTION_38_4();
        if (v18) {
          goto LABEL_111;
        }
        *(void *)(v11 + 8 * v13 + 32) = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v12 = v46;
        }
        OUTLINED_FUNCTION_36_5();
        if (!v18) {
          goto LABEL_98;
        }
        goto LABEL_115;
      case 2:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v10 = v37;
        }
        OUTLINED_FUNCTION_34_6();
        if (v18) {
          goto LABEL_102;
        }
        OUTLINED_FUNCTION_48_4();
        BOOL v20 = __OFADD__(v15, 1);
        uint64_t v21 = v15 + 1;
        if (v21)
        {
          if (v20) {
            goto LABEL_117;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_257582A78();
            uint64_t v11 = v49;
          }
          OUTLINED_FUNCTION_38_4();
          if (v18) {
            goto LABEL_118;
          }
          *(void *)(v11 + 8 * v13 + 32) = v21;
        }
        else
        {
          OUTLINED_FUNCTION_31_7();
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v12 = v48;
        }
        OUTLINED_FUNCTION_36_5();
        if (v18) {
          goto LABEL_116;
        }
LABEL_98:
        *(void *)(v12 + 8 * v13 + 32) = v17;
        goto LABEL_99;
      case 3:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v10 = v38;
        }
        OUTLINED_FUNCTION_34_6();
        if (v18) {
          goto LABEL_103;
        }
        OUTLINED_FUNCTION_48_4();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v12 = v42;
        }
        OUTLINED_FUNCTION_36_5();
        if (v18) {
          goto LABEL_110;
        }
        *(void *)(v12 + 8 * v13 + 32) = v15;
LABEL_52:
        OUTLINED_FUNCTION_31_7();
        goto LABEL_99;
      case 4:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v11 = v35;
        }
        OUTLINED_FUNCTION_38_4();
        if (v18)
        {
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:
          __break(1u);
LABEL_105:
          __break(1u);
LABEL_106:
          __break(1u);
LABEL_107:
          __break(1u);
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
          goto LABEL_119;
        }
        *(void *)(v11 + 8 * v13 + 32) = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v12 = v41;
        }
        OUTLINED_FUNCTION_36_5();
        if (v18) {
          goto LABEL_108;
        }
LABEL_71:
        *(void *)(v12 + 8 * v13 + 32) = v15;
        uint64_t v22 = 1 << v13;
        if (v13 >= 0x40) {
          uint64_t v22 = 0;
        }
        v54 |= v22;
LABEL_99:
        ++v13;
        v14 += 32;
        if (v2 != v13) {
          continue;
        }
        uint64_t result = swift_bridgeObjectRelease();
        *a2 = v10;
        a2[1] = v11;
        a2[2] = v12;
        a2[3] = v54;
        a2[4] = 0;
        a2[5] = v52;
        a2[6] = v53;
        a2[7] = v55;
        return result;
      case 5:
        if (__OFADD__(v16, 1)) {
          goto LABEL_104;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v11 = v44;
        }
        OUTLINED_FUNCTION_38_4();
        if (v18) {
          goto LABEL_112;
        }
        *(void *)(v11 + 8 * v13 + 32) = v16 + 1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v12 = v47;
        }
        OUTLINED_FUNCTION_36_5();
        if (!v18) {
          goto LABEL_71;
        }
        goto LABEL_114;
      case 6:
        uint64_t v23 = v17 | v15 | v16;
        uint64_t v24 = 1 << v13;
        if (v13 >= 0x40) {
          uint64_t v24 = 0;
        }
        uint64_t v26 = v52;
        uint64_t v25 = v53;
        uint64_t v27 = v24 | v52;
        uint64_t v28 = 1 << v13;
        if (v13 >= 0x40) {
          uint64_t v28 = 0;
        }
        uint64_t v29 = v28 | v53;
        uint64_t v30 = 1 << v13;
        if (v13 >= 0x40) {
          uint64_t v30 = 0;
        }
        uint64_t v31 = v55;
        uint64_t v32 = v30 | v55;
        BOOL v33 = v16 == 1 && (v17 | v15) == 0;
        if (v33) {
          uint64_t v34 = v55;
        }
        else {
          uint64_t v34 = v32;
        }
        if (!v33) {
          uint64_t v29 = v53;
        }
        if (v23) {
          uint64_t v31 = v34;
        }
        uint64_t v55 = v31;
        if (v23) {
          uint64_t v25 = v29;
        }
        else {
          uint64_t v26 = v27;
        }
        uint64_t v52 = v26;
        uint64_t v53 = v25;
        goto LABEL_99;
      default:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_257582A78();
          uint64_t v10 = v39;
        }
        OUTLINED_FUNCTION_34_6();
        if (v18) {
          goto LABEL_106;
        }
        *(void *)(v10 + 8 * v13 + 32) = 0;
        goto LABEL_52;
    }
  }
}

uint64_t Tensor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_49_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  sub_257476E94(a1, (uint64_t)&v58, &qword_26A002308);
  if (v59)
  {
    __swift_project_boxed_opaque_existential_1(&v58, v59);
    OUTLINED_FUNCTION_11_17();
    uint64_t v11 = v10();
    OUTLINED_FUNCTION_4_22(v11, v12, v13, v14, v15, v16, v17, v18, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55,
      v56,
      v57);
  }
  else
  {
    unint64_t v4 = inited + 32;
    sub_2574B92D8((uint64_t)&v58, &qword_26A002308);
    OUTLINED_FUNCTION_27_9();
  }
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 80) = 0;
  *(unsigned char *)(inited + 88) = 6;
  if (*(void *)(a4 + 16))
  {
    OUTLINED_FUNCTION_25_11();
    uint64_t v19 = a4 + 32;
    do
    {
      uint64_t v20 = sub_257476E94(v19, (uint64_t)&v58, &qword_26A002308);
      OUTLINED_FUNCTION_32_8(v20, v21, v22, v23, v24, v25, v26, v27, v45, v46);
      if (v57)
      {
        __swift_project_boxed_opaque_existential_1(&v55, v57);
        uint64_t v28 = OUTLINED_FUNCTION_3_21();
        uint64_t v30 = v29(v28);
        OUTLINED_FUNCTION_24_11(v30, v31, v32, v33, v34, v35, v36, v37, v45, v46);
      }
      else
      {
        sub_2574B92D8((uint64_t)&v55, &qword_26A002308);
        OUTLINED_FUNCTION_22_14();
      }
      sub_2574B92D8((uint64_t)&v58, &qword_26A002308);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_9_21();
      }
      OUTLINED_FUNCTION_39_5();
      if (v38) {
        OUTLINED_FUNCTION_18_14();
      }
      OUTLINED_FUNCTION_23_12();
    }
    while (!v39);
    uint64_t v6 = (uint64_t **)v49;
    uint64_t v5 = v50;
  }
  OUTLINED_FUNCTION_37_3();
  uint64_t v40 = v58;
  if (*(void *)(v58 + 16))
  {
    sub_2576A7810();
    uint64_t v41 = MEMORY[0x263F8EE78];
    do
    {
      OUTLINED_FUNCTION_35_5();
      if (v39)
      {
        OUTLINED_FUNCTION_6_20();
        if (!v42)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v58 = v41;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_9_21();
            uint64_t v41 = v58;
          }
          OUTLINED_FUNCTION_13_15();
          if (v38)
          {
            OUTLINED_FUNCTION_17_13();
            uint64_t v41 = v58;
          }
          OUTLINED_FUNCTION_1_30();
        }
      }
      OUTLINED_FUNCTION_33_6();
    }
    while (!v39);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_7();
  if (v4 > 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_5_21();
  }
  else
  {
    sub_2574E5348(v40, &v58);
    OUTLINED_FUNCTION_7_18();
    if (v39)
    {
      OUTLINED_FUNCTION_7_18();
      if (v39)
      {
        *(void *)&long long v55 = v5;
        swift_retain();
        sub_2574E66EC(&v58, v6);
        sub_2574E7A94((uint64_t)&v58);
        return swift_release();
      }
    }
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_12_16();
  __break(1u);
  return result;
}

uint64_t Tensor.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_49_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB50;
  sub_257476E94(a1, (uint64_t)&v69, &qword_26A002308);
  if (v70)
  {
    __swift_project_boxed_opaque_existential_1(&v69, v70);
    OUTLINED_FUNCTION_11_17();
    uint64_t v13 = v12();
    OUTLINED_FUNCTION_4_22(v13, v14, v15, v16, v17, v18, v19, v20, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
      v67,
      v68);
  }
  else
  {
    unint64_t v5 = inited + 32;
    sub_2574B92D8((uint64_t)&v69, &qword_26A002308);
    OUTLINED_FUNCTION_27_9();
  }
  sub_257476E94(a2, (uint64_t)&v69, &qword_26A002308);
  if (v70)
  {
    __swift_project_boxed_opaque_existential_1(&v69, v70);
    OUTLINED_FUNCTION_11_17();
    uint64_t v22 = v21();
    OUTLINED_FUNCTION_19_15(v22, v23, v24, v25, v26, v27, v28, v29, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
      v67,
      v68);
  }
  else
  {
    unint64_t v5 = inited + 64;
    sub_2574B92D8((uint64_t)&v69, &qword_26A002308);
    OUTLINED_FUNCTION_51_3();
  }
  *(void *)(inited + 96) = 0;
  *(void *)(inited + 104) = 0;
  *(void *)(inited + 112) = 0;
  *(unsigned char *)(inited + 120) = 6;
  if (*(void *)(a5 + 16))
  {
    OUTLINED_FUNCTION_25_11();
    uint64_t v30 = a5 + 32;
    do
    {
      uint64_t v31 = sub_257476E94(v30, (uint64_t)&v69, &qword_26A002308);
      OUTLINED_FUNCTION_32_8(v31, v32, v33, v34, v35, v36, v37, v38, v56, v57);
      if (v68)
      {
        __swift_project_boxed_opaque_existential_1(&v66, v68);
        uint64_t v39 = OUTLINED_FUNCTION_3_21();
        uint64_t v41 = v40(v39);
        OUTLINED_FUNCTION_24_11(v41, v42, v43, v44, v45, v46, v47, v48, v56, v57);
      }
      else
      {
        sub_2574B92D8((uint64_t)&v66, &qword_26A002308);
        OUTLINED_FUNCTION_22_14();
      }
      sub_2574B92D8((uint64_t)&v69, &qword_26A002308);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        OUTLINED_FUNCTION_9_21();
      }
      OUTLINED_FUNCTION_39_5();
      if (v49) {
        OUTLINED_FUNCTION_18_14();
      }
      OUTLINED_FUNCTION_23_12();
    }
    while (!v50);
    unint64_t v7 = (uint64_t **)v60;
    uint64_t v6 = v61;
  }
  OUTLINED_FUNCTION_37_3();
  uint64_t v51 = v69;
  if (*(void *)(v69 + 16))
  {
    sub_2576A7810();
    uint64_t v52 = MEMORY[0x263F8EE78];
    do
    {
      OUTLINED_FUNCTION_35_5();
      if (v50)
      {
        OUTLINED_FUNCTION_6_20();
        if (!v53)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v69 = v52;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_9_21();
            uint64_t v52 = v69;
          }
          OUTLINED_FUNCTION_13_15();
          if (v49)
          {
            OUTLINED_FUNCTION_17_13();
            uint64_t v52 = v69;
          }
          OUTLINED_FUNCTION_1_30();
        }
      }
      OUTLINED_FUNCTION_33_6();
    }
    while (!v50);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_7();
  if (v5 > 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_5_21();
  }
  else
  {
    sub_2574E5348(v51, &v69);
    OUTLINED_FUNCTION_7_18();
    if (v50)
    {
      OUTLINED_FUNCTION_7_18();
      if (v50)
      {
        *(void *)&long long v66 = v6;
        swift_retain();
        sub_2574E66EC(&v69, v7);
        sub_2574E7A94((uint64_t)&v69);
        return swift_release();
      }
    }
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_12_16();
  __break(1u);
  return result;
}

uint64_t Tensor.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t **a5@<X8>)
{
  uint64_t v13 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  sub_257476E94(a1, (uint64_t)&v80, &qword_26A002308);
  if (v81)
  {
    uint64_t v7 = v82;
    __swift_project_boxed_opaque_existential_1(&v80, v81);
    OUTLINED_FUNCTION_11_17();
    uint64_t v16 = v15();
    OUTLINED_FUNCTION_4_22(v16, v17, v18, v19, v20, v21, v22, v23, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75,
      v76,
      v77);
  }
  else
  {
    unint64_t v5 = inited + 32;
    sub_2574B92D8((uint64_t)&v80, &qword_26A002308);
    OUTLINED_FUNCTION_27_9();
  }
  sub_257476E94(a2, (uint64_t)&v80, &qword_26A002308);
  if (v81)
  {
    __swift_project_boxed_opaque_existential_1(&v80, v81);
    OUTLINED_FUNCTION_11_17();
    uint64_t v25 = v24();
    OUTLINED_FUNCTION_19_15(v25, v26, v27, v28, v29, v30, v31, v32, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75,
      v76,
      v77);
  }
  else
  {
    unint64_t v5 = inited + 64;
    sub_2574B92D8((uint64_t)&v80, &qword_26A002308);
    OUTLINED_FUNCTION_51_3();
  }
  sub_257476E94(a3, (uint64_t)&v80, &qword_26A002308);
  if (v81)
  {
    __swift_project_boxed_opaque_existential_1(&v80, v81);
    OUTLINED_FUNCTION_11_17();
    v33();
    uint64_t v34 = v76;
    char v35 = v77;
    *(_OWORD *)(inited + 96) = v75;
    *(void *)(inited + 112) = v34;
    *(unsigned char *)(inited + 120) = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
  }
  else
  {
    unint64_t v5 = inited + 96;
    sub_2574B92D8((uint64_t)&v80, &qword_26A002308);
    *(void *)(inited + 96) = 0;
    *(void *)(inited + 104) = 0;
    *(void *)(inited + 112) = 0;
    *(unsigned char *)(inited + 120) = -1;
  }
  *(void *)(inited + 128) = 0;
  *(void *)(inited + 136) = 0;
  *(void *)(inited + 144) = 0;
  *(unsigned char *)(inited + 152) = 6;
  uint64_t v36 = *(void *)(a4 + 16);
  if (v36)
  {
    uint64_t v79 = MEMORY[0x263F8EE78];
    sub_2574E7A74();
    uint64_t v37 = a4 + 32;
    do
    {
      uint64_t v38 = sub_257476E94(v37, (uint64_t)&v80, &qword_26A002308);
      OUTLINED_FUNCTION_32_8(v38, v39, v40, v41, v42, v43, v44, v45, v65, v66);
      if (v77)
      {
        uint64_t v7 = v78;
        __swift_project_boxed_opaque_existential_1(&v75, v77);
        uint64_t v46 = OUTLINED_FUNCTION_3_21();
        uint64_t v48 = v47(v46);
        OUTLINED_FUNCTION_24_11(v48, v49, v50, v51, v52, v53, v54, v55, v65, v66);
      }
      else
      {
        sub_2574B92D8((uint64_t)&v75, &qword_26A002308);
        OUTLINED_FUNCTION_22_14();
      }
      sub_2574B92D8((uint64_t)&v80, &qword_26A002308);
      uint64_t v56 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_9_21();
        uint64_t v56 = v79;
      }
      OUTLINED_FUNCTION_39_5();
      if (v57)
      {
        OUTLINED_FUNCTION_18_14();
        uint64_t v56 = v79;
      }
      *(void *)(v56 + 16) = v7;
      uint64_t v58 = v56 + 32 * (void)&qword_26A002308;
      *(void *)(v58 + 32) = a5;
      *(void *)(v58 + 40) = v13;
      *(void *)(v58 + 48) = v5;
      *(unsigned char *)(v58 + 56) = inited;
      v37 += 40;
      --v36;
    }
    while (v36);
  }
  OUTLINED_FUNCTION_37_3();
  uint64_t v59 = v80;
  if (*(void *)(v80 + 16))
  {
    sub_2576A7810();
    uint64_t v60 = MEMORY[0x263F8EE78];
    do
    {
      OUTLINED_FUNCTION_35_5();
      if (v61)
      {
        OUTLINED_FUNCTION_6_20();
        if (!v62)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v80 = v60;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            OUTLINED_FUNCTION_9_21();
            uint64_t v60 = v80;
          }
          OUTLINED_FUNCTION_13_15();
          if (v57)
          {
            OUTLINED_FUNCTION_17_13();
            uint64_t v60 = v80;
          }
          OUTLINED_FUNCTION_1_30();
        }
      }
      OUTLINED_FUNCTION_33_6();
    }
    while (!v61);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_28_7();
  if (v5 > 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_5_21();
  }
  else
  {
    sub_2574E5348(v59, &v80);
    OUTLINED_FUNCTION_7_18();
    if (v61)
    {
      OUTLINED_FUNCTION_7_18();
      if (v61)
      {
        *(void *)&long long v75 = v13;
        swift_retain();
        sub_2574E66EC(&v80, a5);
        sub_2574E7A94((uint64_t)&v80);
        return swift_release();
      }
    }
    OUTLINED_FUNCTION_0_31();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = OUTLINED_FUNCTION_12_16();
  __break(1u);
  return result;
}

uint64_t sub_2574E66EC@<X0>(void *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v127 = *v2;
  uint64_t v144 = MEMORY[0x263F8EE78];
  uint64_t v145 = MEMORY[0x263F8EE78];
  uint64_t v143 = MEMORY[0x263F8EE78];
  uint64_t v7 = *(void *)(*a1 + 16);
  if (v7)
  {
    uint64_t v8 = a1;
    uint64_t v128 = *(void *)(*a1 + 16);
    uint64_t v129 = a1[5];
    uint64_t v124 = *a1 + 32;
    uint64_t v130 = 0;
    uint64_t v131 = -v7;
    OUTLINED_FUNCTION_47_4();
    while (1)
    {
      unint64_t v132 = v10;
      if (v10 <= 0x40)
      {
        uint64_t v12 = 0x8000000000000000;
        if (v10 != 64) {
          uint64_t v12 = 1 << v10;
        }
        if ((v129 & v12) == 0)
        {
          uint64_t v42 = v8[6];
          if (v10 != 64)
          {
            char v11 = v10;
            if ((v42 & (1 << v10)) != 0) {
              goto LABEL_34;
            }
            goto LABEL_39;
          }
          if (v42 < 0)
          {
LABEL_34:
            uint64_t v43 = *(void *)(v5 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_257471E14(0, *(void *)(v126 + 16) + 1, 1, v126);
              uint64_t v126 = v85;
            }
            unint64_t v45 = *(void *)(v126 + 16);
            unint64_t v44 = *(void *)(v126 + 24);
            if (v45 >= v44 >> 1)
            {
              char v86 = OUTLINED_FUNCTION_50_3(v44);
              sub_257471E14(v86, v87, v88, v126);
              uint64_t v126 = v89;
            }
            *(void *)(v126 + 16) = v45 + 1;
            *(void *)(v126 + 8 * v45 + 32) = v43;
            goto LABEL_99;
          }
LABEL_6:
          char v11 = 63;
LABEL_39:
          if ((v8[7] >> v11))
          {
            uint64_t v46 = *(void *)(v5 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_257471E14(0, *(void *)(v3 + 16) + 1, 1, v3);
              uint64_t v3 = v90;
            }
            unint64_t v48 = *(void *)(v3 + 16);
            unint64_t v47 = *(void *)(v3 + 24);
            if (v48 >= v47 >> 1)
            {
              char v91 = OUTLINED_FUNCTION_50_3(v47);
              sub_257471E14(v91, v92, v93, v3);
              uint64_t v3 = v94;
            }
            *(void *)(v3 + 16) = v48 + 1;
            *(void *)(v3 + 8 * v48 + 32) = v46;
            unint64_t v10 = v132;
          }
          if (v10 > 0x40 || (char v49 = v10, v10 == 64)) {
            char v49 = 63;
          }
          if ((v8[3] >> v49))
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_8_19();
              uint64_t v5 = v95;
            }
            uint64_t v50 = v3;
            unint64_t v52 = *(void *)(v5 + 16);
            unint64_t v51 = *(void *)(v5 + 24);
            unint64_t v53 = v52 + 1;
            if (v52 >= v51 >> 1)
            {
              OUTLINED_FUNCTION_16_14(v51);
              uint64_t v5 = v96;
            }
            uint64_t v54 = 0;
          }
          else
          {
            if (__OFADD__(v10, v130)) {
              goto LABEL_145;
            }
            OUTLINED_FUNCTION_30_8();
            if (v59 != v18 || v55 >= v56) {
              goto LABEL_158;
            }
            unint64_t v61 = (v56 & (v55 >> 63)) + v55;
            if (v61 >= v56) {
              goto LABEL_146;
            }
            uint64_t v62 = *(void *)(v57 + 8 * v61 + 32);
            uint64_t v63 = -v62;
            if (__OFSUB__(0, v62)) {
              goto LABEL_148;
            }
            if (v62 < v63) {
              goto LABEL_150;
            }
            uint64_t v50 = v3;
            uint64_t v54 = *(uint64_t **)(v124 + 8 * v58);
            if ((uint64_t)v54 >= v62 || (uint64_t)v54 < v63)
            {
              uint64_t v135 = 0;
              uint64_t v136 = 0;
              v134 = v54;
              OUTLINED_FUNCTION_15_14();
LABEL_160:
              char v142 = 4;
LABEL_155:
              sub_25746BF88();
            }
            if (((unint64_t)v54 & 0x8000000000000000) != 0)
            {
              BOOL v18 = __OFADD__(v62, v54);
              uint64_t v54 = (uint64_t *)((char *)v54 + v62);
              if (v18) {
                goto LABEL_151;
              }
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_8_19();
              uint64_t v5 = v97;
            }
            unint64_t v52 = *(void *)(v5 + 16);
            unint64_t v65 = *(void *)(v5 + 24);
            unint64_t v53 = v52 + 1;
            if (v52 >= v65 >> 1)
            {
              OUTLINED_FUNCTION_16_14(v65);
              uint64_t v5 = v98;
            }
          }
          *(void *)(v5 + 16) = v53;
          *(void *)(v5 + 32 + 8 * v52) = v54;
          uint64_t v145 = v5;
          char v66 = v132;
          if (v132 >= 0x40) {
            char v66 = 63;
          }
          if ((v8[4] >> v66))
          {
            if (__OFADD__(v132, v130)) {
              goto LABEL_143;
            }
            OUTLINED_FUNCTION_30_8();
            if (v59 != v18 || v55 >= v56)
            {
LABEL_158:
              uint64_t v135 = 0;
              uint64_t v136 = 0;
              v134 = (uint64_t *)v55;
              char v137 = -1;
              uint64_t v139 = 0;
              uint64_t v140 = 0;
              uint64_t v138 = v56;
              char v141 = -1;
              goto LABEL_160;
            }
            unint64_t v69 = (v56 & (v55 >> 63)) + v55;
            if (v69 >= v56) {
              goto LABEL_144;
            }
            uint64_t v70 = *(void *)(v67 + 8 * v69 + 32);
          }
          else
          {
            uint64_t v71 = v8[1];
            if (v132 >= *(void *)(v71 + 16)) {
              goto LABEL_147;
            }
            uint64_t v72 = *(void *)(v5 + 32 + 8 * v52);
            BOOL v18 = __OFADD__(v72, 1);
            uint64_t v73 = v72 + 1;
            if (v18) {
              goto LABEL_149;
            }
            uint64_t v74 = *(void *)(v71 + 8 * v132 + 32);
            if (v73 <= v74) {
              uint64_t v70 = v74;
            }
            else {
              uint64_t v70 = v73;
            }
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_29_8(0, *(void *)(v4 + 16) + 1);
            uint64_t v4 = v81;
          }
          unint64_t v76 = *(void *)(v4 + 16);
          unint64_t v75 = *(void *)(v4 + 24);
          if (v76 >= v75 >> 1)
          {
            OUTLINED_FUNCTION_29_8(v75 > 1, v76 + 1);
            uint64_t v4 = v82;
          }
          *(void *)(v4 + 16) = v76 + 1;
          *(void *)(v4 + 8 * v76 + 32) = v70;
          uint64_t v144 = v4;
          uint64_t v77 = v8[2];
          if (v132 >= *(void *)(v77 + 16)) {
            goto LABEL_142;
          }
          uint64_t v78 = *(void *)(v77 + 8 * v132 + 32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_14_16();
            uint64_t v6 = v83;
          }
          uint64_t v3 = v50;
          unint64_t v80 = *(void *)(v6 + 16);
          unint64_t v79 = *(void *)(v6 + 24);
          if (v80 >= v79 >> 1)
          {
            OUTLINED_FUNCTION_40_4(v79);
            uint64_t v6 = v84;
          }
          *(void *)(v6 + 16) = v80 + 1;
          *(void *)(v6 + 8 * v80 + 32) = v78;
          uint64_t v143 = v6;
          goto LABEL_99;
        }
      }
      else if ((v129 & 0x8000000000000000) == 0)
      {
        if ((v8[6] & 0x8000000000000000) != 0) {
          goto LABEL_34;
        }
        goto LABEL_6;
      }
      uint64_t v13 = *(void *)(*(void *)(v127 + 16) + 152);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v5 + 16);
      uint64_t v16 = v9 - v10;
      uint64_t v17 = v14 - v15 - v16;
      if (__OFSUB__(v14 - v15, v16)) {
        goto LABEL_139;
      }
      BOOL v18 = __OFADD__(v130, v17);
      v130 += v17;
      if (v18)
      {
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
LABEL_152:
        uint64_t v135 = 0;
        uint64_t v136 = 0;
        v134 = v2;
        OUTLINED_FUNCTION_15_14();
LABEL_153:
        char v142 = 4;
        goto LABEL_154;
      }
      if (v17 < 0) {
        goto LABEL_141;
      }
      uint64_t v19 = 0;
      uint64_t v20 = v14 + v131 - v15;
      while (1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_8_19();
          uint64_t v5 = v27;
        }
        unint64_t v22 = *(void *)(v5 + 16);
        unint64_t v21 = *(void *)(v5 + 24);
        if (v22 >= v21 >> 1)
        {
          char v28 = OUTLINED_FUNCTION_26_10(v21);
          sub_257471E14(v28, v29, v30, v5);
          uint64_t v5 = v31;
        }
        *(void *)(v5 + 16) = v22 + 1;
        *(void *)(v5 + 8 * v22 + 32) = 0;
        uint64_t v2 = *(uint64_t **)(v4 + 16);
        if ((unint64_t)v2 >= *(void *)(v13 + 16)) {
          goto LABEL_152;
        }
        uint64_t v23 = *(void *)(v13 + 32 + 8 * (void)v2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_29_8(0, (uint64_t)v2 + 1);
          uint64_t v4 = v32;
        }
        uint64_t v2 = *(uint64_t **)(v4 + 16);
        unint64_t v24 = *(void *)(v4 + 24);
        if ((unint64_t)v2 >= v24 >> 1)
        {
          char v33 = OUTLINED_FUNCTION_26_10(v24);
          sub_257471E14(v33, v34, v35, v4);
          uint64_t v4 = v36;
        }
        *(void *)(v4 + 16) = (char *)v2 + 1;
        *(void *)(v4 + 8 * (void)v2 + 32) = v23;
        uint64_t v144 = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_14_16();
          uint64_t v6 = v37;
        }
        unint64_t v26 = *(void *)(v6 + 16);
        unint64_t v25 = *(void *)(v6 + 24);
        if (v26 >= v25 >> 1)
        {
          char v38 = OUTLINED_FUNCTION_26_10(v25);
          sub_257471E14(v38, v39, v40, v6);
          uint64_t v6 = v41;
        }
        *(void *)(v6 + 16) = v26 + 1;
        *(void *)(v6 + 8 * v26 + 32) = 1;
        uint64_t v143 = v6;
        if (v20 == v19) {
          break;
        }
        BOOL v18 = __OFADD__(v19++, 1);
        if (v18)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
      }
      uint64_t v145 = v5;
      uint64_t v8 = a1;
LABEL_99:
      unint64_t v10 = v132 + 1;
      ++v131;
      uint64_t v9 = v128;
      if (v132 + 1 == v128) {
        goto LABEL_104;
      }
    }
  }
  OUTLINED_FUNCTION_47_4();
LABEL_104:
  uint64_t v99 = *(void *)(*(void *)(v127 + 16) + 152);
  if (*(void *)(v5 + 16) < *(void *)(v99 + 16))
  {
    uint64_t v2 = (uint64_t *)(v99 + 32);
    do
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_8_19();
        uint64_t v5 = v109;
      }
      unint64_t v101 = *(void *)(v5 + 16);
      unint64_t v100 = *(void *)(v5 + 24);
      if (v101 >= v100 >> 1)
      {
        OUTLINED_FUNCTION_16_14(v100);
        uint64_t v5 = v110;
      }
      *(void *)(v5 + 16) = v101 + 1;
      *(void *)(v5 + 8 * v101 + 32) = 0;
      v102 = *(uint64_t **)(v4 + 16);
      if ((unint64_t)v102 >= *(void *)(v99 + 16)) {
        goto LABEL_157;
      }
      uint64_t v103 = v2[(void)v102];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_29_8(0, (uint64_t)v102 + 1);
        uint64_t v4 = v111;
      }
      unint64_t v105 = *(void *)(v4 + 16);
      unint64_t v104 = *(void *)(v4 + 24);
      if (v105 >= v104 >> 1)
      {
        OUTLINED_FUNCTION_29_8(v104 > 1, v105 + 1);
        uint64_t v4 = v112;
      }
      *(void *)(v4 + 16) = v105 + 1;
      *(void *)(v4 + 8 * v105 + 32) = v103;
      uint64_t v144 = v4;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_14_16();
        uint64_t v6 = v113;
      }
      unint64_t v107 = *(void *)(v6 + 16);
      unint64_t v106 = *(void *)(v6 + 24);
      if (v107 >= v106 >> 1)
      {
        OUTLINED_FUNCTION_40_4(v106);
        uint64_t v6 = v114;
      }
      *(void *)(v6 + 16) = v107 + 1;
      *(void *)(v6 + 8 * v107 + 32) = 1;
      uint64_t v143 = v6;
      OUTLINED_FUNCTION_7_18();
    }
    while (!v108);
    uint64_t v145 = v5;
  }
  sub_2576A7810();
  sub_2576A7810();
  sub_2574E3A7C(v4, v5);
  v102 = v115;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v116 = v102[2];
  if (v116)
  {
    uint64_t v117 = *(void *)(*(void *)(v127 + 16) + 152);
    v118 = *(uint64_t **)(v117 + 16);
    if (!v118)
    {
LABEL_129:
      sub_2576A7810();
      uint64_t v135 = 0;
      uint64_t v136 = 0;
      v134 = v118;
      char v137 = -1;
      uint64_t v139 = 0;
      uint64_t v140 = 0;
      uint64_t v138 = (uint64_t)v118;
      char v141 = -1;
      goto LABEL_153;
    }
    v119 = 0;
    v120 = (uint64_t *)(v116 - 1);
    while (1)
    {
      if (v118 == v119) {
        goto LABEL_138;
      }
      if (*(void *)(v117 + 32 + 8 * (void)v119) < v102[(void)v119 + 4]) {
        break;
      }
      if (v120 == v119) {
        goto LABEL_130;
      }
      v119 = (uint64_t *)((char *)v119 + 1);
      if (v118 == v119) {
        goto LABEL_129;
      }
    }
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_21_14();
    OUTLINED_FUNCTION_12_16();
    __break(1u);
LABEL_157:
    uint64_t v135 = 0;
    uint64_t v136 = 0;
    v134 = v102;
    OUTLINED_FUNCTION_15_14();
    char v142 = 4;
LABEL_154:
    sub_2576A7810();
    goto LABEL_155;
  }
LABEL_130:
  swift_bridgeObjectRelease();
  sub_2574E3488(0, *(void *)(v5 + 16), (uint64_t)&v145, (uint64_t)&v144, (uint64_t)&v143);
  sub_2574E4074(v121, v127, &v134);
  swift_bridgeObjectRelease();
  if (*(void *)(v126 + 16))
  {
    swift_retain();
    Tensor.expandingShape(at:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    v134 = v133;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + 16) && *(void *)(*(void *)(v134[2] + 152) + 16) > 1uLL)
  {
    swift_retain();
    Tensor.squeezingShape(at:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t result = swift_bridgeObjectRelease();
    v134 = v133;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a2 = v134;
  return result;
}

unint64_t sub_2574E70DC()
{
  unint64_t result = qword_26A002300;
  if (!qword_26A002300)
  {
    type metadata accessor for SliceOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002300);
  }
  return result;
}

void sub_2574E7134()
{
  sub_2576393DC();
  *unint64_t v0 = v1;
}

void sub_2574E7154()
{
  sub_257639410();
  *unint64_t v0 = v1;
}

void sub_2574E7174()
{
  sub_257639444();
  *unint64_t v0 = v1;
}

void sub_2574E7194()
{
  sub_257639478();
  *unint64_t v0 = v1;
}

void sub_2574E71B4()
{
  sub_2576394AC();
  *unint64_t v0 = v1;
}

void sub_2574E71D4()
{
  sub_2576394E0();
  *unint64_t v0 = v1;
}

void sub_2574E71F4()
{
  sub_257639514();
  *unint64_t v0 = v1;
}

void sub_2574E7214()
{
  sub_257639548();
  *unint64_t v0 = v1;
}

void sub_2574E7234()
{
  sub_25763957C();
  *unint64_t v0 = v1;
}

void sub_2574E7254()
{
  sub_2576395B0();
  *unint64_t v0 = v1;
}

void sub_2574E7274()
{
  sub_2576395E4();
  *unint64_t v0 = v1;
}

void sub_2574E7294()
{
  sub_257639618();
  *unint64_t v0 = v1;
}

void sub_2574E72B4()
{
  sub_25763964C();
  *unint64_t v0 = v1;
}

void sub_2574E72D4()
{
  sub_257639680();
  *unint64_t v0 = v1;
}

void sub_2574E72F4()
{
  sub_2576396B4();
  *unint64_t v0 = v1;
}

void sub_2574E7314()
{
  sub_2576396E8();
  *unint64_t v0 = v1;
}

void sub_2574E7334()
{
  sub_25763979C();
  *unint64_t v0 = v1;
}

void sub_2574E7354()
{
  sub_25763984C();
  *unint64_t v0 = v1;
}

void sub_2574E7374()
{
  sub_257639880();
  *unint64_t v0 = v1;
}

void sub_2574E7394()
{
  sub_2576398B4();
  *unint64_t v0 = v1;
}

void sub_2574E73B4()
{
  sub_2576398E8();
  *unint64_t v0 = v1;
}

void sub_2574E73D4()
{
  sub_25763991C();
  *unint64_t v0 = v1;
}

void sub_2574E73F4()
{
  sub_257639950();
  *unint64_t v0 = v1;
}

void sub_2574E7414()
{
  sub_257639984();
  *unint64_t v0 = v1;
}

void sub_2574E7434()
{
  sub_2576399B8();
  *unint64_t v0 = v1;
}

void sub_2574E7454()
{
  sub_2576399EC();
  *unint64_t v0 = v1;
}

void sub_2574E7474()
{
  sub_257639A20();
  *unint64_t v0 = v1;
}

void sub_2574E7494()
{
  sub_257639A54();
  *unint64_t v0 = v1;
}

void sub_2574E74B4()
{
  sub_257639A88();
  *unint64_t v0 = v1;
}

void sub_2574E74D4()
{
  sub_257639ABC();
  *unint64_t v0 = v1;
}

void sub_2574E74F4()
{
  sub_257639AF0();
  *unint64_t v0 = v1;
}

void sub_2574E7514()
{
  sub_257639B24();
  *unint64_t v0 = v1;
}

void sub_2574E7534()
{
  sub_257639B58();
  *unint64_t v0 = v1;
}

void sub_2574E7554()
{
  sub_257639B8C();
  *unint64_t v0 = v1;
}

void sub_2574E7574()
{
  sub_257639BC0();
  *unint64_t v0 = v1;
}

void sub_2574E7594()
{
  sub_257639BF4();
  *unint64_t v0 = v1;
}

void sub_2574E75B4()
{
  sub_257639C28();
  *unint64_t v0 = v1;
}

void sub_2574E75D4()
{
  sub_257639C5C();
  *unint64_t v0 = v1;
}

void sub_2574E75F4()
{
  sub_257639C90();
  *unint64_t v0 = v1;
}

void sub_2574E7614()
{
  sub_257639CC4();
  *unint64_t v0 = v1;
}

void sub_2574E7634()
{
  sub_257639CF8();
  *unint64_t v0 = v1;
}

void sub_2574E7654()
{
  sub_257639D2C();
  *unint64_t v0 = v1;
}

void sub_2574E7674()
{
  sub_257639D60();
  *unint64_t v0 = v1;
}

void sub_2574E7694()
{
  sub_257639D94();
  *unint64_t v0 = v1;
}

void sub_2574E76B4()
{
  sub_257639DC8();
  *unint64_t v0 = v1;
}

void sub_2574E76D4()
{
  sub_257639DFC();
  *unint64_t v0 = v1;
}

void sub_2574E76F4()
{
  sub_257639E30();
  *unint64_t v0 = v1;
}

void sub_2574E7714()
{
  sub_257639E64();
  *unint64_t v0 = v1;
}

void sub_2574E7734()
{
  sub_257639E98();
  *unint64_t v0 = v1;
}

void sub_2574E7754()
{
  sub_257639ECC();
  *unint64_t v0 = v1;
}

void sub_2574E7774()
{
  sub_257639F00();
  *unint64_t v0 = v1;
}

void sub_2574E7794()
{
  sub_257639F34();
  *unint64_t v0 = v1;
}

void sub_2574E77B4()
{
  sub_257639F68();
  *unint64_t v0 = v1;
}

void sub_2574E77D4()
{
  sub_257639F9C();
  *unint64_t v0 = v1;
}

void sub_2574E77F4()
{
  sub_257639FD0();
  *unint64_t v0 = v1;
}

void sub_2574E7814()
{
  sub_25763A004();
  *unint64_t v0 = v1;
}

void sub_2574E7834()
{
  sub_25763A038();
  *unint64_t v0 = v1;
}

void sub_2574E7854()
{
  sub_25763A06C();
  *unint64_t v0 = v1;
}

void sub_2574E7874()
{
  sub_25763A0A0();
  *unint64_t v0 = v1;
}

void sub_2574E7894()
{
  sub_25763A0D4();
  *unint64_t v0 = v1;
}

void sub_2574E78B4()
{
  sub_25763A108();
  *unint64_t v0 = v1;
}

void sub_2574E78D4()
{
  sub_25763A13C();
  *unint64_t v0 = v1;
}

void sub_2574E78F4()
{
  sub_25763A170();
  *unint64_t v0 = v1;
}

void sub_2574E7914()
{
  sub_25763A1A4();
  *unint64_t v0 = v1;
}

void sub_2574E7934()
{
  sub_25763A1D8();
  *unint64_t v0 = v1;
}

void sub_2574E7954()
{
  sub_25763A20C();
  *unint64_t v0 = v1;
}

void sub_2574E7974()
{
  sub_25763A240();
  *unint64_t v0 = v1;
}

void sub_2574E7994()
{
  sub_25763A274();
  *unint64_t v0 = v1;
}

void sub_2574E79B4()
{
  sub_25763A324();
  *unint64_t v0 = v1;
}

void sub_2574E79D4()
{
  sub_25763A43C();
  *unint64_t v0 = v1;
}

void sub_2574E79F4()
{
  sub_25763A54C();
  *unint64_t v0 = v1;
}

void sub_2574E7A14()
{
  sub_25763A580();
  *unint64_t v0 = v1;
}

void sub_2574E7A34()
{
  sub_25763A5B4();
  *unint64_t v0 = v1;
}

void sub_2574E7A54()
{
  sub_25763A5E8();
  *unint64_t v0 = v1;
}

void sub_2574E7A74()
{
  sub_25763A61C();
  *unint64_t v0 = v1;
}

uint64_t sub_2574E7A94(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TensorRange(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFA && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 6) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorRange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2574E7B78(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 5u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 6);
  }
}

uint64_t sub_2574E7B90(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 6;
  if (a2 >= 6)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 6;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TensorRange()
{
  return &type metadata for TensorRange;
}

uint64_t dispatch thunk of TensorRangeExpression.tensorRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s9IndexPathVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s9IndexPathVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_2576A7810();
  sub_2576A7810();
  sub_2576A7810();
  return a1;
}

void *_s9IndexPathVwca(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2576A7810();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_2576A7810();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_2576A7810();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s9IndexPathVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t _s9IndexPathVwet(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s9IndexPathVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tensor.IndexPath()
{
  return &type metadata for Tensor.IndexPath;
}

void sub_2574E7E38()
{
  sub_25763A650();
  *unint64_t v0 = v1;
}

void sub_2574E7E58()
{
  sub_25763A684();
  *unint64_t v0 = v1;
}

void sub_2574E7E78()
{
  sub_25763A6B8();
  *unint64_t v0 = v1;
}

void sub_2574E7E98()
{
  sub_25763A6EC();
  *unint64_t v0 = v1;
}

void sub_2574E7EB8()
{
  sub_25763A720();
  *unint64_t v0 = v1;
}

void sub_2574E7ED8()
{
  sub_25763A804();
  *unint64_t v0 = v1;
}

void sub_2574E7EF8()
{
  sub_25763A838();
  *unint64_t v0 = v1;
}

void sub_2574E7F18()
{
  sub_25763A86C();
  *unint64_t v0 = v1;
}

void sub_2574E7F38()
{
  sub_25763A8A0();
  *unint64_t v0 = v1;
}

void sub_2574E7F58()
{
  sub_25763A8D4();
  *unint64_t v0 = v1;
}

void sub_2574E7F78()
{
  sub_25763A9B8();
  *unint64_t v0 = v1;
}

void sub_2574E7F98()
{
  sub_25763AAB0();
  *unint64_t v0 = v1;
}

void sub_2574E7FB8()
{
  sub_25763AAE4();
  *unint64_t v0 = v1;
}

void sub_2574E7FD8()
{
  sub_25763ABDC();
  *unint64_t v0 = v1;
}

void sub_2574E7FF8()
{
  sub_25763ACCC();
  *unint64_t v0 = v1;
}

void sub_2574E8018()
{
  sub_25763AD7C();
  *unint64_t v0 = v1;
}

void sub_2574E8038()
{
  sub_25763AE60();
  *unint64_t v0 = v1;
}

void sub_2574E8058()
{
  sub_25763AE94();
  *unint64_t v0 = v1;
}

void sub_2574E8078()
{
  sub_25763AEC8();
  *unint64_t v0 = v1;
}

void sub_2574E8098()
{
  sub_25763AEFC();
  *unint64_t v0 = v1;
}

void sub_2574E80B8()
{
  sub_25763AF30();
  *unint64_t v0 = v1;
}

void sub_2574E80D8()
{
  sub_25763AF64();
  *unint64_t v0 = v1;
}

void sub_2574E80F8()
{
  sub_25763AF98();
  *unint64_t v0 = v1;
}

void sub_2574E8118()
{
  sub_25763AFCC();
  *unint64_t v0 = v1;
}

void sub_2574E8138()
{
  sub_25763B000();
  *unint64_t v0 = v1;
}

void sub_2574E8158()
{
  sub_25763B034();
  *unint64_t v0 = v1;
}

void sub_2574E8178()
{
  sub_25763B068();
  *unint64_t v0 = v1;
}

void sub_2574E8198()
{
  sub_25763B09C();
  *unint64_t v0 = v1;
}

void sub_2574E81B8()
{
  sub_25763B0D0();
  *unint64_t v0 = v1;
}

void sub_2574E81D8()
{
  sub_25763B104();
  *unint64_t v0 = v1;
}

void sub_2574E81F8()
{
  sub_25763B138();
  *unint64_t v0 = v1;
}

void sub_2574E8218()
{
  sub_25763B16C();
  *unint64_t v0 = v1;
}

void sub_2574E8238()
{
  sub_25763B1A0();
  *unint64_t v0 = v1;
}

void sub_2574E8258()
{
  sub_25763B1D4();
  *unint64_t v0 = v1;
}

void sub_2574E8278()
{
  sub_25763B208();
  *unint64_t v0 = v1;
}

void sub_2574E8298()
{
  sub_25763B23C();
  *unint64_t v0 = v1;
}

void sub_2574E82B8()
{
  sub_25763B270();
  *unint64_t v0 = v1;
}

void sub_2574E82D8()
{
  sub_25763B2A4();
  *unint64_t v0 = v1;
}

void sub_2574E82F8()
{
  sub_25763B2D8();
  *unint64_t v0 = v1;
}

void sub_2574E8318()
{
  sub_25763B30C();
  *unint64_t v0 = v1;
}

void sub_2574E8338()
{
  sub_25763B340();
  *unint64_t v0 = v1;
}

void sub_2574E8358()
{
  sub_25763B374();
  *unint64_t v0 = v1;
}

void sub_2574E8378()
{
  sub_25763B3A8();
  *unint64_t v0 = v1;
}

void sub_2574E8398()
{
  sub_25763B3DC();
  *unint64_t v0 = v1;
}

void sub_2574E83B8()
{
  sub_25763B410();
  *unint64_t v0 = v1;
}

void sub_2574E83D8()
{
  sub_25763B444();
  *unint64_t v0 = v1;
}

void sub_2574E83F8()
{
  sub_25763B478();
  *unint64_t v0 = v1;
}

void sub_2574E8418()
{
  sub_25763B4AC();
  *unint64_t v0 = v1;
}

void sub_2574E8438()
{
  sub_25763B4E0();
  *unint64_t v0 = v1;
}

void sub_2574E8458()
{
  sub_25763B514();
  *unint64_t v0 = v1;
}

void sub_2574E8478()
{
  sub_25763B548();
  *unint64_t v0 = v1;
}

void sub_2574E8498()
{
  sub_25763B57C();
  *unint64_t v0 = v1;
}

void sub_2574E84B8()
{
  sub_25763B5B0();
  *unint64_t v0 = v1;
}

void sub_2574E84D8()
{
  sub_25763B5E4();
  *unint64_t v0 = v1;
}

void sub_2574E84F8()
{
  sub_25763B618();
  *unint64_t v0 = v1;
}

void sub_2574E8518()
{
  sub_25763B64C();
  *unint64_t v0 = v1;
}

void sub_2574E8538()
{
  sub_25763B680();
  *unint64_t v0 = v1;
}

void sub_2574E8558()
{
  sub_25763B6B4();
  *unint64_t v0 = v1;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_2574E85CC(uint64_t a1, uint64_t a2)
{
  return sub_2574E4B0C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

void OUTLINED_FUNCTION_1_30()
{
  *(void *)(v1 + 16) = v2;
  uint64_t v4 = v1 + 32 * v0;
  *(void *)(v4 + 40) = 0;
  *(void *)(v4 + 48) = 0;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 56) = v3;
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, uint64_t a20,char a21)
{
  *(_OWORD *)(v21 + 32) = a19;
  *(void *)(v21 + 48) = a20;
  *(unsigned char *)(v21 + 56) = a21;
  return __swift_destroy_boxed_opaque_existential_1(v22 - 152);
}

void OUTLINED_FUNCTION_8_19()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_257471E14(0, v2, 1, v0);
}

void OUTLINED_FUNCTION_9_21()
{
  sub_2574E7A74();
}

uint64_t OUTLINED_FUNCTION_10_14(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_257495BE0(a1, 0, v9, v10, v11, v8, v12, a8);
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  return sub_2576A8B60();
}

void OUTLINED_FUNCTION_14_16()
{
  uint64_t v2 = *(void *)(v0 + 16) + 1;
  sub_257471E14(0, v2, 1, v0);
}

void OUTLINED_FUNCTION_16_14(unint64_t a1@<X8>)
{
  sub_257471E14(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_17_13()
{
  sub_2574E7A74();
}

void OUTLINED_FUNCTION_18_14()
{
  sub_2574E7A74();
}

uint64_t OUTLINED_FUNCTION_19_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, long long a19, uint64_t a20,char a21)
{
  *(_OWORD *)(v21 + 64) = a19;
  *(void *)(v21 + 80) = a20;
  *(unsigned char *)(v21 + 88) = a21;
  return __swift_destroy_boxed_opaque_existential_1(v22 - 152);
}

void OUTLINED_FUNCTION_23_12()
{
  *(void *)(v4 + 16) = v5;
  uint64_t v7 = v4 + 32 * v3;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v1;
  *(void *)(v7 + 48) = v0;
  *(unsigned char *)(v7 + 56) = v2;
}

uint64_t OUTLINED_FUNCTION_24_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

void OUTLINED_FUNCTION_25_11()
{
  sub_2574E7A74();
}

BOOL OUTLINED_FUNCTION_26_10@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_27_9()
{
  *uint64_t v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  *(unsigned char *)(v1 + 56) = -1;
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  return swift_release();
}

void OUTLINED_FUNCTION_29_8(char a1, uint64_t a2)
{
  sub_257471E14(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_32_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  return sub_257476E94(v11 - 152, (uint64_t)va, v10);
}

void OUTLINED_FUNCTION_37_3()
{
  *(void *)(v1 - 152) = v0;
  sub_2575A0CB8();
}

void OUTLINED_FUNCTION_40_4(unint64_t a1@<X8>)
{
  sub_257471E14(a1 > 1, v2, 1, v1);
}

void OUTLINED_FUNCTION_41_4()
{
  sub_2574E7A74();
}

void OUTLINED_FUNCTION_42_3(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 24) = v1;
}

uint64_t OUTLINED_FUNCTION_46_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

void OUTLINED_FUNCTION_48_4()
{
  *(void *)(v0 + 8 * v1 + 32) = v2;
}

BOOL OUTLINED_FUNCTION_50_3@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_51_3()
{
  *uint64_t v0 = 0;
  v0[1] = 0;
  v0[2] = 0;
  *(unsigned char *)(v1 + 88) = -1;
}

ValueMetadata *type metadata accessor for GradientSourceID()
{
  return &type metadata for GradientSourceID;
}

uint64_t destroy for InputGradient()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void *_s14NeuralNetworks13InputGradientVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  sub_2576A7810();
  return a1;
}

void *assignWithCopy for InputGradient(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for InputGradient(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InputGradient()
{
  return &type metadata for InputGradient;
}

uint64_t sub_2574E8C04()
{
  return sub_2576A7810();
}

uint64_t sub_2574E8C40()
{
  return sub_2576A7810();
}

uint64_t sub_2574E8C50(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 32))();
}

uint64_t sub_2574E8C6C()
{
  uint64_t v0 = (void *)sub_257613788();
  if (v0
    && (Class = (__objc2_class *)object_getClass(v0),
        swift_unknownObjectRelease(),
        Class == _TtC14NeuralNetworks16TrackedOperation))
  {
    sub_2576136DC();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2575CA350();
    sub_2576A8A30();
    swift_release();
    return 0;
  }
  else
  {
    uint64_t v2 = sub_2576136DC();
    swift_release();
  }
  return v2;
}

uint64_t sub_2574E8D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return OUTLINED_FUNCTION_15_2();
  }
  else {
    return sub_2576A8F60();
  }
}

uint64_t sub_2574E8D78()
{
  sub_2576A7810();
  sub_2576A78E0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574E8DD4()
{
  return sub_2576A9100();
}

uint64_t sub_2574E8E34()
{
  return sub_2574E8DD4();
}

uint64_t sub_2574E8E3C()
{
  return sub_2574E8D78();
}

uint64_t sub_2574E8E44()
{
  return sub_2576A9100();
}

uint64_t sub_2574E8E9C(uint64_t *a1, uint64_t *a2)
{
  return sub_2574E8D60(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_2574E8EB4()
{
  unint64_t result = qword_26A002310;
  if (!qword_26A002310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002310);
  }
  return result;
}

uint64_t sub_2574E8F18(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2576AC2A0;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v7 = *(id *)(a2 + 32);
  }
  uint64_t v8 = v7;
  uint64_t v9 = v3[6];
  uint64_t v10 = sub_25764701C();
  uint64_t v11 = v3[10];
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(v3 + 7, v11);
  double v13 = sub_2574E9080((uint64_t)v12, v11);
  uint64_t v14 = v3[15];
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v3 + 12, v14);
  double v16 = sub_2574E9080((uint64_t)v15, v14);
  uint64_t v18 = v3[3];
  uint64_t v17 = v3[4];
  sub_2576A7810();
  id v19 = sub_2574E9504((uint64_t)v8, v9, v10, v13, v16, v18, v17, a1);

  *(void *)(v6 + 32) = v19;
  sub_2576A7E20();
  return v6;
}

double sub_2574E9080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002318);
  if (swift_dynamicCast())
  {
    sub_2574E95F4(v23, &v21);
    uint64_t v7 = v22;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(&v21, v22);
    uint64_t v9 = *(void *)(v7 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    if (sub_2576A85D0() < 65)
    {
      char v16 = sub_2576A85E0();
      uint64_t v17 = sub_2576A85C0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
      if (v16) {
        double v12 = (double)v17;
      }
      else {
        double v12 = (double)(unint64_t)v17;
      }
    }
    else
    {
      sub_2574E95A8();
      sub_2574E960C();
      sub_2576A7770();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
      double v12 = v20;
    }
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002320);
  if (swift_dynamicCast())
  {
    sub_2574E95F4(v23, &v21);
    double v13 = __swift_project_boxed_opaque_existential_1(&v21, v22);
    MEMORY[0x270FA5388](v13);
    (*(void (**)(char *))(v15 + 16))((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    sub_2574E95A8();
    sub_2576A7750();
    double v12 = v20;
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    goto LABEL_12;
  }
  if (!swift_dynamicCast())
  {
    *(void *)&v23[0] = 0;
    *((void *)&v23[0] + 1) = 0xE000000000000000;
    sub_2576A8730();
    swift_bridgeObjectRelease();
    *(void *)&v23[0] = 0xD000000000000020;
    *((void *)&v23[0] + 1) = 0x80000002576C7B30;
    swift_getDynamicType();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    char v24 = 9;
    sub_25746BE6C();
  }
  double v12 = (double)LOBYTE(v23[0]);
LABEL_12:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v12;
}

uint64_t sub_2574E94EC(void *a1, uint64_t a2)
{
  return sub_2574E8F18(a1, a2);
}

id sub_2574E9504(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a8, sel_oneHotWithIndicesTensor_depth_dataType_onValue_offValue_name_, a1, a2, a3, v14, a4, a5);

  return v15;
}

unint64_t sub_2574E95A8()
{
  unint64_t result = qword_26A002328;
  if (!qword_26A002328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002328);
  }
  return result;
}

_OWORD *sub_2574E95F4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

unint64_t sub_2574E960C()
{
  unint64_t result = qword_26A002330[0];
  if (!qword_26A002330[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A002330);
  }
  return result;
}

uint64_t sub_2574E9658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_7_19();
  if (v16 < 1 || a2 < 0)
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v6, v14, a5);
    if (a2) {
      uint64_t v17 = a1;
    }
    else {
      uint64_t v17 = 1;
    }
    sub_2574E97EC(v17, a2, a3, a4, a6);
    return swift_retain();
  }
  return result;
}

int *sub_2574E97EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t))(v10 + 32))(a5);
  uint64_t result = (int *)type metadata accessor for LazyPrefetchingMapSequence();
  *(void *)(a5 + result[11]) = a1;
  *(void *)(a5 + result[12]) = a2;
  double v12 = (void *)(a5 + result[13]);
  *double v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t sub_2574E98A0()
{
  return sub_2576A7810();
}

uint64_t sub_2574E98F8()
{
  return OUTLINED_FUNCTION_8_20(*(void *)(*(void *)v0 + 136));
}

uint64_t sub_2574E9910()
{
  return OUTLINED_FUNCTION_8_20(*(void *)(*(void *)v0 + 144));
}

uint64_t sub_2574E9928(uint64_t result)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 144)) = result;
  return result;
}

uint64_t sub_2574E9944()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 152));
}

uint64_t sub_2574E9968(uint64_t result, char a2)
{
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 152);
  *(void *)uint64_t v3 = result;
  *(unsigned char *)(v3 + 8) = a2 & 1;
  return result;
}

id sub_2574E9990()
{
  return *(id *)(v0 + *(void *)(*(void *)v0 + 160));
}

uint64_t sub_2574E99AC()
{
  return OUTLINED_FUNCTION_8_20(*(void *)(*(void *)v0 + 168));
}

uint64_t sub_2574E99C4(uint64_t result)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 168)) = result;
  return result;
}

uint64_t sub_2574E99E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_2574E9A50(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t *sub_2574E9A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v41 = a1;
  uint64_t v42 = a3;
  uint64_t v47 = a2;
  uint64_t v7 = *v5;
  uint64_t v43 = *(void *)(*v5 + 88);
  uint64_t v44 = sub_2576A84C0();
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v37 - v9;
  uint64_t v39 = sub_2576A8360();
  OUTLINED_FUNCTION_0_10();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_8_0();
  uint64_t v15 = v14 - v13;
  sub_2576A8340();
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_7_19();
  uint64_t v17 = sub_2576A76D0();
  MEMORY[0x270FA5388](v17 - 8);
  OUTLINED_FUNCTION_8_0();
  *(uint64_t *)((char *)v5 + *(void *)(v7 + 136)) = 0;
  OUTLINED_FUNCTION_3_22();
  *(uint64_t *)((char *)v5 + *(void *)(v18 + 144)) = 0;
  OUTLINED_FUNCTION_3_22();
  uint64_t v20 = (uint64_t)v5 + *(void *)(v19 + 152);
  *(void *)uint64_t v20 = 0;
  *(unsigned char *)(v20 + 8) = 1;
  OUTLINED_FUNCTION_3_22();
  uint64_t v22 = *(void *)(v21 + 160);
  *(uint64_t *)((char *)v5 + v22) = (uint64_t)dispatch_semaphore_create(0);
  OUTLINED_FUNCTION_3_22();
  *(uint64_t *)((char *)v5 + *(void *)(v23 + 168)) = -1;
  OUTLINED_FUNCTION_3_22();
  uint64_t v38 = *(void *)(v24 + 176);
  unint64_t v37 = sub_2574CB174();
  sub_2576A76A0();
  uint64_t v48 = MEMORY[0x263F8EE78];
  sub_2574ECD4C((unint64_t *)&qword_26A003530, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002438);
  sub_2574C9AF8((unint64_t *)&qword_26A003540, &qword_26A002438);
  sub_2576A8660();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, *MEMORY[0x263F8F130], v39);
  *(uint64_t *)((char *)v5 + v38) = sub_2576A8390();
  OUTLINED_FUNCTION_3_22();
  uint64_t v26 = (uint64_t)v5 + *(void *)(v25 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_4_23();
  uint64_t v29 = v28;
  uint64_t v30 = v41;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v41, AssociatedTypeWitness);
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 112)) = v42;
  OUTLINED_FUNCTION_3_22();
  uint64_t v32 = (uint64_t *)((char *)v6 + *(void *)(v31 + 120));
  uint64_t v33 = v46;
  *uint64_t v32 = v45;
  v32[1] = v33;
  __swift_storeEnumTagSinglePayload(v40, 1, 1, v34);
  uint64_t v35 = sub_2576A7F40();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, AssociatedTypeWitness);
  *(uint64_t *)((char *)v6 + *(void *)(*v6 + 128)) = v35;
  return v6;
}

uint64_t LazyPrefetchingMapSequence.Iterator.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t LazyPrefetchingMapSequence.Iterator.__deallocating_deinit()
{
  LazyPrefetchingMapSequence.Iterator.deinit();
  OUTLINED_FUNCTION_2_9();
  return swift_deallocClassInstance();
}

uint64_t sub_2574E9FC4()
{
  sub_2576A8370();
  return v1;
}

uint64_t sub_2574EA024@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result = sub_2574E9944();
  BOOL v6 = (v5 & 1) == 0 && *(void *)(a1 + *(void *)(*(void *)a1 + 136)) >= result;
  *a2 = v6;
  return result;
}

uint64_t sub_2574EA090(uint64_t a1, uint64_t a2)
{
  v20[0] = a2;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = sub_2576A7680();
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2576A76D0();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v4[11];
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)v20 - v14;
  v20[1] = *(void *)((char *)v2 + v4[22]);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v20 - v14, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v4[10];
  *((void *)v17 + 3) = v12;
  *((void *)v17 + 4) = v4[12];
  *((void *)v17 + 5) = v2;
  *((void *)v17 + 6) = v20[0];
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  aBlock[4] = sub_2574ECF24;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2574EA690;
  aBlock[3] = &block_descriptor_28;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_2576A76A0();
  uint64_t v24 = MEMORY[0x263F8EE78];
  sub_2574ECD4C(&qword_26A002440, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002448);
  sub_2574C9AF8(&qword_26A002450, &qword_26A002448);
  sub_2576A8660();
  MEMORY[0x25A2B8960](0, v11, v7, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  return swift_release();
}

void sub_2574EA458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)a1 + 88);
  uint64_t v7 = sub_2576A84C0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - v9;
  sub_2574E98A0();
  uint64_t v11 = MEMORY[0x25A2B84C0]();
  swift_bridgeObjectRelease();
  if (!v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  if (a2 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_10;
  }
  unint64_t v13 = a2 % v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v10, a3, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v6);
  uint64_t v14 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 128));
  swift_beginAccess();
  uint64_t v15 = sub_2576A7F50();
  sub_2576A7E80();
  uint64_t v16 = *v14;
  sub_2575B7504(v13, *v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 40))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v13, v10, v7);
  nullsub_1(v15);
  swift_endAccess();
  uint64_t v17 = *(void *)(*(void *)a1 + 168);
  if (*(void *)(a1 + v17) == a2)
  {
    *(void *)(a1 + v17) = -1;
    id v18 = sub_2574E9990();
    sub_2576A8410();
  }
}

uint64_t sub_2574EA690(uint64_t a1)
{
  unsigned __int8 v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_2574EA6D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v20 = (char *)&v16 - v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_2576A84C0();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t result = sub_2574E9FC4();
  if ((result & 1) == 0)
  {
    uint64_t v16 = v3;
    uint64_t v17 = v2;
    swift_beginAccess();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_2576A8500();
    swift_endAccess();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v9, v6);
      uint64_t v13 = v1 + *(void *)(*(void *)v1 + 152);
      *(void *)uint64_t v13 = *(void *)(v1 + *(void *)(*(void *)v1 + 144));
      *(unsigned char *)(v13 + 8) = 0;
    }
    else
    {
      uint64_t v14 = v19;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v11, v9, AssociatedTypeWitness);
      uint64_t v15 = (uint64_t)v20;
      (*(void (**)(char *))(v1 + *(void *)(*(void *)v1 + 120)))(v11);
      sub_2574EA090(v15, *(void *)(v1 + *(void *)(*(void *)v1 + 144)));
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, AssociatedTypeWitness);
      return sub_2574EAA98(v1);
    }
  }
  return result;
}

uint64_t sub_2574EAA98(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)result + 144);
  uint64_t v2 = *(void *)(result + v1);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3) {
    __break(1u);
  }
  else {
    *(void *)(result + v1) = v4;
  }
  return result;
}

uint64_t sub_2574EAAC4()
{
  uint64_t v1 = sub_2576A7680();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2576A76D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2574E9FC4();
  if ((result & 1) == 0)
  {
    v11[0] = *(void *)(v0 + *(void *)(*(void *)v0 + 176));
    aBlock[4] = sub_2574ECD44;
    aBlock[5] = v0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2574EA690;
    aBlock[3] = &block_descriptor_16;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    sub_2576A76A0();
    v11[1] = MEMORY[0x263F8EE78];
    sub_2574ECD4C(&qword_26A002440, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A002448);
    sub_2574C9AF8(&qword_26A002450, &qword_26A002448);
    sub_2576A8660();
    MEMORY[0x25A2B8960](0, v8, v4, v10);
    _Block_release(v10);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_2574EAD84(uint64_t a1)
{
  uint64_t result = sub_2574E9944();
  if ((v3 & 1) == 0) {
    return result;
  }
  uint64_t v4 = sub_2574E98A0();
  uint64_t v5 = sub_2576A84C0();
  uint64_t v6 = MEMORY[0x25A2B84C0](v4, v5);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + *(void *)(*(void *)a1 + 144));
  uint64_t v8 = *(void *)(a1 + *(void *)(*(void *)a1 + 136));
  BOOL v9 = __OFSUB__(v7, v8);
  uint64_t v10 = v7 - v8;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v9 = __OFSUB__(v6, v10);
  uint64_t v11 = v6 - v10;
  if (v9)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)(a1 + *(void *)(*(void *)a1 + 112)) >= v11) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = *(void *)(a1 + *(void *)(*(void *)a1 + 112));
  }
  if (v12 < 1) {
    return result;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2574ECDB0();
  uint64_t v14 = sub_2576A7C60();
  uint64_t v15 = *(void *)(a1 + *(void *)(*(void *)a1 + 144));
  uint64_t result = MEMORY[0x25A2B84C0](v14, AssociatedTypeWitness);
  uint64_t v16 = v15 + result;
  if (__OFADD__(v15, result))
  {
LABEL_16:
    __break(1u);
    return result;
  }
  *(void *)(a1 + *(void *)(*(void *)a1 + 144)) = v16;
  if (result < v12)
  {
    uint64_t v17 = a1 + *(void *)(*(void *)a1 + 152);
    *(void *)uint64_t v17 = v16;
    *(unsigned char *)(v17 + 8) = 0;
    if (*(void *)(a1 + *(void *)(*(void *)a1 + 168)) == v16)
    {
      id v18 = sub_2574E9990();
      sub_2576A8410();
    }
  }
  sub_2574EB0D8(v15, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574EAFD4()
{
  return swift_endAccess();
}

uint64_t sub_2574EB0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_2576A7680();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2576A76D0();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  MEMORY[0x270FA5388](v7);
  BOOL v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_2576A7690();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = a2;
  swift_getAssociatedTypeWitness();
  sub_2576A7F50();
  swift_getWitnessTable();
  uint64_t result = sub_2576A81E0();
  if ((result & 1) == 0)
  {
    sub_2574CB174();
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F8F080], v10);
    uint64_t v15 = (void *)sub_2576A83A0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = v20;
    v16[2] = a2;
    v16[3] = v17;
    v16[4] = v2;
    aBlock[4] = sub_2574ECE6C;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_2574EA690;
    aBlock[3] = &block_descriptor_22;
    id v18 = _Block_copy(aBlock);
    sub_2576A7810();
    swift_retain();
    sub_2576A76A0();
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_2574ECD4C(&qword_26A002440, MEMORY[0x263F8F030]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A002448);
    sub_2574C9AF8(&qword_26A002450, &qword_26A002448);
    sub_2576A8660();
    MEMORY[0x25A2B8960](0, v9, v6, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_2574EB4F0(uint64_t a1)
{
  sub_2574CB174();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x25A2B84C0](a1, AssociatedTypeWitness);
  return sub_2576A8350();
}

uint64_t sub_2574EB5B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = *a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void *)(v6 + 88);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v17 = (char *)&v21 - v16;
  BOOL v18 = __OFADD__(a2, result);
  uint64_t v19 = a2 + result;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = *(void (**)(char *))((char *)a3 + *(void *)(v7 + 120));
    sub_2576A7F90();
    v20(v12);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
    sub_2574EA090((uint64_t)v17, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

uint64_t sub_2574EB7D4(uint64_t a1)
{
  if (*(uint64_t *)(v1 + *(void *)(*(void *)v1 + 112)) < 1) {
    return sub_2574EA6D4(a1);
  }
  else {
    return sub_2574EAAC4();
  }
}

uint64_t sub_2574EB7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v19 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 88);
  uint64_t v5 = sub_2576A84C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - v7;
  char v26 = 0;
  uint64_t v9 = *(NSObject **)((char *)v2 + *(void *)(v3 + 176));
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &v26;
  *(void *)(v10 + 24) = v2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_2574ECCEC;
  *(void *)(v11 + 24) = v10;
  uint64_t v24 = sub_2574ECCF8;
  uint64_t v25 = v11;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v21 = 1107296256;
  uint64_t v22 = sub_2574EBD80;
  uint64_t v23 = &block_descriptor_0;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v12);
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12)
  {
    __break(1u);
  }
  else
  {
    if ((v26 & 1) == 0 && (sub_2574E9FC4() & 1) == 0)
    {
      id v14 = sub_2574E9990();
      sub_2576A8400();
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v4);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v8;
    *(void *)(v15 + 24) = v2;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_2574ECD38;
    *(void *)(v16 + 24) = v15;
    uint64_t v24 = sub_2574ECFA0;
    uint64_t v25 = v16;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_2574EBD80;
    uint64_t v23 = &block_descriptor_13;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v17);
    _Block_release(v17);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19, v8, v5);
      swift_release();
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2574EBB94(BOOL *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = sub_2576A84C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = *(uint64_t *)((char *)a2 + *(void *)(v4 + 136));
  sub_2574E98A0();
  uint64_t v11 = MEMORY[0x25A2B84C0]();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v10 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_10;
  }
  sub_2574E98A0();
  sub_2576A7F90();
  swift_bridgeObjectRelease();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a1 = EnumTagSinglePayload != 1;
  if (EnumTagSinglePayload == 1) {
    *(uint64_t *)((char *)a2 + *(void *)(*a2 + 168)) = *(uint64_t *)((char *)a2 + *(void *)(*a2 + 136));
  }
  return result;
}

uint64_t sub_2574EBD58(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2574EBD80(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2574EBDA8(unint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = sub_2576A84C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = *(uint64_t *)((char *)a2 + *(void *)(v4 + 136));
  sub_2574E98A0();
  uint64_t v11 = MEMORY[0x25A2B84C0]();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11)
  {
    if (v10 == 0x8000000000000000 && v11 == -1) {
      goto LABEL_16;
    }
    sub_2574E98A0();
    sub_2576A7F90();
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 40);
    v14(a1, v9, v6);
    uint64_t v15 = *(uint64_t *)((char *)a2 + *(void *)(*a2 + 136));
    sub_2574E98A0();
    uint64_t v16 = MEMORY[0x25A2B84C0]();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      if (v15 == 0x8000000000000000 && v16 == -1) {
        goto LABEL_17;
      }
      unint64_t v18 = v15 % v16;
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v5);
      uint64_t v19 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 128));
      swift_beginAccess();
      uint64_t v20 = sub_2576A7F50();
      sub_2576A7E80();
      uint64_t v21 = *v19;
      sub_2575B7504(v18, *v19);
      v14(v21+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v18, v9, v6);
      nullsub_1(v20);
      uint64_t result = swift_endAccess();
      uint64_t v22 = *(void *)(*a2 + 136);
      uint64_t v23 = *(uint64_t *)((char *)a2 + v22);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (!v24)
      {
        *(uint64_t *)((char *)a2 + v22) = v25;
        return result;
      }
      goto LABEL_15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t LazyPrefetchingMapSequence.Iterator.next()@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_2_9();
  uint64_t v3 = v2;
  uint64_t v4 = sub_2574E9FC4();
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 88);
    return __swift_storeEnumTagSinglePayload(a1, 1, 1, v5);
  }
  else
  {
    sub_2574EB7D4(v4);
    return sub_2574EB7FC(a1);
  }
}

uint64_t sub_2574EC0E4@<X0>(uint64_t a1@<X8>)
{
  return LazyPrefetchingMapSequence.Iterator.next()(a1);
}

uint64_t LazyPrefetchingMapSequence.makeIterator()(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = v9 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v13 = (char *)&v22 - v12;
  type metadata accessor for LazyPrefetchingMapSequence.Iterator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v2, v4);
  sub_2576A7C00();
  uint64_t v14 = *(void *)(v2 + *(int *)(a1 + 44));
  uint64_t v15 = *(void *)(v2 + *(int *)(a1 + 48));
  uint64_t v16 = (uint64_t *)(v2 + *(int *)(a1 + 52));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  swift_retain();
  uint64_t v19 = sub_2574E99E0((uint64_t)v13, v14, v15, v17, v18);
  OUTLINED_FUNCTION_9_13();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, a1);
  return v19;
}

uint64_t type metadata accessor for LazyPrefetchingMapSequence.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t LazyPrefetchingMapSequence.underestimatedCount.getter()
{
  return sub_2576A7C20();
}

uint64_t sub_2574EC2C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574EC2E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2574EC2FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = LazyPrefetchingMapSequence.makeIterator()(a1);
  *a2 = result;
  return result;
}

uint64_t sub_2574EC328()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2574EC3D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    uint64_t v16 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v14;
    v16[1] = v15;
  }
  swift_retain();
  return v4;
}

uint64_t sub_2574EC4FC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_2574EC57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  return a1;
}

uint64_t sub_2574EC61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  uint64_t v11 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2574EC6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2574EC764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2574EC808(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2574EC964);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2574EC978(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x2574ECB70);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *unint64_t v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for LazyPrefetchingMapSequence()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574ECBB0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for LazyPrefetchingMapSequence.Iterator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LazyPrefetchingMapSequence.Iterator);
}

uint64_t sub_2574ECCB4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2574ECCEC()
{
  return sub_2574EBB94(*(BOOL **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_2574ECCF8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_2574ECD38()
{
  return sub_2574EBDA8(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_2574ECD44()
{
  return sub_2574EAD84(v0);
}

uint64_t sub_2574ECD4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2574ECD94()
{
  return sub_2574EAFD4();
}

unint64_t sub_2574ECDB0()
{
  unint64_t result = qword_26A002458;
  if (!qword_26A002458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A001D08);
    sub_2574BEF08();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002458);
  }
  return result;
}

uint64_t sub_2574ECE2C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2574ECE6C()
{
  return sub_2574EB4F0(*(void *)(v0 + 16));
}

uint64_t sub_2574ECE78(uint64_t a1)
{
  return sub_2574EB5B4(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_2574ECE84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 56) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

void sub_2574ECF24()
{
  OUTLINED_FUNCTION_4_23();
  sub_2574EA458(*(void *)(v0 + 40), *(void *)(v0 + 48), v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_2574ECF4C@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_2574E9944();
  *a1 = (v3 & 1) == 0;
  return result;
}

uint64_t sub_2574ECF84@<X0>(BOOL *a1@<X8>)
{
  return sub_2574EA024(v1, a1);
}

uint64_t OUTLINED_FUNCTION_2_23()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t OUTLINED_FUNCTION_8_20@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(v1 + a1);
}

uint64_t sub_2574ED018()
{
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, *(void *)(v0 + 40));
  uint64_t v1 = sub_2576A78A0();
  swift_endAccess();
  return v1;
}

void sub_2574ED08C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  int v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v14;
  uint64_t v32 = v11;
  uint64_t v15 = sub_2576A85D0();
  if (v15 < -7)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v25[1] = a5;
  uint64_t v26 = a2;
  uint64_t v28 = v5;
  uint64_t v29 = a4;
  uint64_t v27 = v10;
  if ((unint64_t)(v15 + 7) >= 0xF)
  {
    unint64_t v17 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v18 = v15 / 8;
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t v19 = 0x1000000000000000;
    unint64_t v30 = sub_2574F050C();
    uint64_t v20 = 0;
    while (v19)
    {
      uint64_t v33 = v20;
      sub_2576A85B0();
      char v21 = sub_2576A85C0();
      (*v17)(v13, a3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257471F0C();
        uint64_t v16 = v23;
      }
      unint64_t v22 = *(void *)(v16 + 16);
      if (v22 >= *(void *)(v16 + 24) >> 1)
      {
        sub_257471F0C();
        uint64_t v16 = v24;
      }
      *(void *)(v16 + 16) = v22 + 1;
      *(unsigned char *)(v16 + v22 + 32) = v21;
      --v19;
      v20 += 8;
      if (!--v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v16 = MEMORY[0x263F8EE78];
LABEL_4:
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v16, v26);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v32, a3);
}

uint64_t sub_2574ED2CC()
{
  return sub_2576A7EB0();
}

uint64_t sub_2574ED2E4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    long long v3 = 0uLL;
    do
    {
      if (v1 - 5 < 0xFFFFFFFFFFFFFFFCLL)
      {
        __break(1u);
        goto LABEL_8;
      }
      uint64_t v4 = (_DWORD *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3)));
      uint64_t v5 = v2 + 1;
      int v6 = *(_DWORD *)(a1 + 4 * v2 + 32);
      long long v8 = v3;
      _DWORD *v4 = v6;
      long long v3 = v8;
      uint64_t v2 = v5;
    }
    while (v1 != v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v1 < 4) {
      goto LABEL_9;
    }
  }
  else
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_2574ED370(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    long long v3 = 0uLL;
    do
    {
      if (v1 - 3 < 0xFFFFFFFFFFFFFFFELL)
      {
        __break(1u);
        goto LABEL_8;
      }
      uint64_t v4 = (void *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFF7 | (8 * (v2 & 1)));
      uint64_t v5 = v2 + 1;
      uint64_t v6 = *(void *)(a1 + 8 * v2 + 32);
      long long v8 = v3;
      void *v4 = v6;
      long long v3 = v8;
      uint64_t v2 = v5;
    }
    while (v1 != v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v1 < 2) {
      goto LABEL_9;
    }
  }
  else
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_2574ED3FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
    do
    {
      if (v1 - 3 < 0xFFFFFFFFFFFFFFFELL)
      {
        __break(1u);
        goto LABEL_8;
      }
      uint64_t v4 = (_DWORD *)((unint64_t)&v8 & 0xFFFFFFFFFFFFFFFBLL | (4 * (v2 & 1)));
      uint64_t v5 = v2 + 1;
      int v6 = *(_DWORD *)(a1 + 4 * v2 + 32);
      uint64_t v8 = v3;
      _DWORD *v4 = v6;
      uint64_t v3 = v8;
      uint64_t v2 = v5;
    }
    while (v1 != v5);
    uint64_t result = swift_bridgeObjectRelease();
    if (v1 < 2) {
      goto LABEL_9;
    }
  }
  else
  {
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t sub_2574ED488()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_2574ED4C0()
{
  return sub_2574ED018();
}

uint64_t sub_2574ED4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  sub_25746B3D0(v5 + 16, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002480);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002488);
  if (swift_dynamicCast())
  {
    sub_257479260(v19, (uint64_t)v22);
    uint64_t v11 = v23;
    uint64_t v12 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24))(a1, a2, a3, a4, a5, v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return v13;
  }
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  uint64_t result = sub_2574F0484((uint64_t)v19);
  if ((a1 & 0x8000000000000000) == 0)
  {
    v22[0] = 0;
    v22[1] = a1;
    MEMORY[0x270FA5388](result);
    v18[2] = a3;
    v18[3] = a4;
    v18[4] = a5;
    v18[5] = v5;
    v18[6] = a2;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
    unint64_t v16 = sub_2574BEE8C();
    return sub_257495BE0((void (*)(char *, uint64_t))sub_2574F04E4, (uint64_t)v18, v15, a3, MEMORY[0x263F8E628], v16, MEMORY[0x263F8E658], v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_2574ED6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1(v3, *(void *)(a2 + 40));
  sub_2576A78B0();
  return swift_endAccess();
}

uint64_t sub_2574ED75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2574ED4E4(a1, a2, a3, a4, a5);
}

uint64_t UInt64.vector2.getter(unint64_t a1)
{
  int v1 = a1;
  unint64_t v2 = HIDWORD(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002460);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(_DWORD *)(inited + 32) = v2;
  *(_DWORD *)(inited + 36) = v1;
  return sub_2574ED3FC(inited);
}

unint64_t UInt64.init(highAndLow:)(double a1)
{
  return HIDWORD(a1) | ((unint64_t)LODWORD(a1) << 32);
}

uint64_t sub_2574ED7E4(int8x16_t a1, double a2)
{
  uint64x2_t v2 = vmull_u32((uint32x2_t)vzip1_s32(*(int32x2_t *)a1.i8, (int32x2_t)*(_OWORD *)&vextq_s8(a1, a1, 8uLL)), (uint32x2_t)0xCD9E8D57D2511F53);
  __int32 v3 = v2.i32[2];
  __int32 v4 = v2.i32[0];
  unint64_t v5 = HIDWORD(v2.i64[0]);
  unint64_t v6 = HIDWORD(v2.i64[1]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002460);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  *(_DWORD *)(inited + 32) = LODWORD(a2) ^ a1.i32[1] ^ v6;
  *(_DWORD *)(inited + 36) = v3;
  *(_DWORD *)(inited + 40) = HIDWORD(a2) ^ a1.i32[3] ^ v5;
  *(_DWORD *)(inited + 44) = v4;
  return sub_2574ED2E4(inited);
}

uint64_t sub_2574ED888(int8x16_t a1, double a2)
{
  sub_2574ED7E4(a1, a2);
  sub_2574ED7E4(v3, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0xBB67AE859E3779B9)));
  sub_2574ED7E4(v4, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x76CF5D0A3C6EF372)));
  sub_2574ED7E4(v5, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x32370B8FDAA66D2BLL)));
  sub_2574ED7E4(v6, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0xED9EBA1478DDE6E4)));
  sub_2574ED7E4(v7, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0xA90668991715609DLL)));
  sub_2574ED7E4(v8, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x646E171EB54CDA56)));
  sub_2574ED7E4(v9, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x1FD5C5A35384540FLL)));
  sub_2574ED7E4(v10, COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0xDB3D7428F1BBCDC8)));
  double v12 = COERCE_DOUBLE(vadd_s32(*(int32x2_t *)&a2, (int32x2_t)0x96A522AD8FF34781));
  return sub_2574ED7E4(v11, v12);
}

uint64_t sub_2574ED948(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 && v1 <= 8)
  {
    uint64_t v2 = 0;
    unint64_t v3 = *(unsigned __int8 *)(a1 + 32);
    unint64_t v4 = v1 - 1;
    uint64_t v5 = 8;
    while (v4 != v2)
    {
      unint64_t v6 = (unint64_t)*(unsigned __int8 *)(a1 + v2++ + 33) << v5;
      v5 += 8;
      BOOL v7 = __CFADD__(v3, v6);
      v3 += v6;
      if (v7)
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease();
    UInt64.vector2.getter(v3);
    return 0;
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t sub_2574EDA64(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((sub_257654B3C(*(void *)(*(void *)(*a1 + 16) + 152), &unk_27065E718) & 1) == 0
    || Tensor.scalarType.getter() != (ValueMetadata *)MEMORY[0x263F8E548])
  {
    goto LABEL_23;
  }
  uint64_t v2 = sub_25755C400(v1);
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_2574E7E38();
    uint64_t v4 = 0;
    uint64_t v5 = v10;
    unint64_t v6 = *(void *)(v10 + 16);
    do
    {
      int v7 = *(_DWORD *)(v2 + 4 * v4 + 32);
      if (v6 >= *(void *)(v10 + 24) >> 1) {
        sub_2574E7E38();
      }
      ++v4;
      *(void *)(v10 + 16) = v6 + 1;
      *(_DWORD *)(v10 + 4 * v6++ + 32) = v7;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  unint64_t v8 = *(void *)(v5 + 16);
  if (v8 < 2)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v8 == 2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v8 < 4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v8 == 4)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v8 >= 6)
  {
    if (v8 != 6)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_2574EDC50()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    *(unsigned char *)(v0 + 24) = 0;
    return *(void *)(v0 + 32);
  }
  else
  {
    sub_2574ED888(*(int8x16_t *)v0, *(double *)(v0 + 16));
    sub_2574EDCB8(v2);
    *(unsigned char *)(v0 + 24) = 1;
    *(void *)(v0 + 32) = v3;
    uint64_t v1 = v4;
    sub_2574EE034((long long *)v0);
  }
  return v1;
}

uint64_t sub_2574EDCB8(int8x16_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002478);
  uint64_t inited = swift_initStackObject();
  int32x2_t v2 = (int32x2_t)vextq_s8(a1, a1, 8uLL).u64[0];
  int8x16_t v3 = (int8x16_t)vshll_n_s32(vzip1_s32(*(int32x2_t *)a1.i8, v2), 0x20uLL);
  int32x2_t v4 = vzip2_s32(*(int32x2_t *)a1.i8, v2);
  v5.i64[0] = v4.u32[0];
  v5.i64[1] = v4.u32[1];
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(int8x16_t *)(inited + 32) = vorrq_s8(v3, v5);
  return sub_2574ED370(inited);
}

uint64_t sub_2574EDD18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_2574ED948(a1);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  return result;
}

void sub_2574EDD4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
}

uint64_t sub_2574EDD68@<X0>(void *a1@<X8>)
{
  int32x2_t v2 = (long long *)v1;
  double v29 = *(double *)v1[1].i64;
  sub_2574ED888(*v1, v29);
  long long v28 = v4;
  int v5 = DWORD2(v4);
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)&v30[0] = MEMORY[0x263F8EE78];
  sub_2574E7214();
  uint64_t v7 = *(void *)&v30[0];
  unint64_t v8 = *(void *)(*(void *)&v30[0] + 16);
  unint64_t v9 = *(void *)(*(void *)&v30[0] + 24) >> 1;
  unint64_t v10 = v8 + 1;
  if (v9 <= v8)
  {
    sub_2574E7214();
    uint64_t v7 = *(void *)&v30[0];
    unint64_t v9 = *(void *)(*(void *)&v30[0] + 24) >> 1;
  }
  uint64_t v11 = v28;
  *(void *)(v7 + 16) = v10;
  *(_DWORD *)(v7 + 4 * v8 + 32) = v5;
  unint64_t v12 = v8 + 2;
  if ((uint64_t)v9 < (uint64_t)(v8 + 2))
  {
    OUTLINED_FUNCTION_0_32();
    uint64_t v11 = v28;
    uint64_t v7 = *(void *)&v30[0];
  }
  int v13 = HIDWORD(v11);
  *(void *)(v7 + 16) = v12;
  *(_DWORD *)(v7 + 4 * v10 + 32) = HIDWORD(v28);
  unint64_t v14 = *(void *)(v7 + 16);
  unint64_t v15 = v14 + 1;
  if (v14 >= *(void *)(v7 + 24) >> 1)
  {
    OUTLINED_FUNCTION_0_32();
    LODWORD(v11) = v28;
  }
  int v16 = v11;
  uint64_t v17 = *(void *)&v30[0];
  *(void *)(*(void *)&v30[0] + 16) = v15;
  *(_DWORD *)(v17 + 4 * v14 + 32) = v13;
  if ((int64_t)(v14 + 2) > *(void *)(v17 + 24) >> 1)
  {
    OUTLINED_FUNCTION_1_31();
    uint64_t v17 = *(void *)&v30[0];
  }
  *(void *)(v17 + 16) = v14 + 2;
  *(_DWORD *)(v17 + 32 + 4 * v15) = v16;
  *(void *)&v30[0] = v6;
  sub_2574E7214();
  uint64_t v18 = v6;
  unint64_t v19 = *(void *)(v6 + 16);
  unint64_t v20 = *(void *)(v18 + 24) >> 1;
  unint64_t v21 = v19 + 1;
  if (v20 <= v19)
  {
    OUTLINED_FUNCTION_0_32();
    uint64_t v18 = *(void *)&v30[0];
    unint64_t v20 = *(void *)(*(void *)&v30[0] + 24) >> 1;
  }
  *(void *)(v18 + 16) = v21;
  *(_DWORD *)(v18 + 4 * v19 + 32) = LODWORD(v29);
  if ((uint64_t)v20 < (uint64_t)(v19 + 2))
  {
    OUTLINED_FUNCTION_1_31();
    uint64_t v18 = *(void *)&v30[0];
  }
  *(void *)(v18 + 16) = v19 + 2;
  *(_DWORD *)(v18 + 32 + 4 * v21) = HIDWORD(v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001078);
  uint64_t result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_2576B1C00;
  *(_DWORD *)(result + 32) = 1;
  unint64_t v23 = *(void *)(v17 + 16);
  if (!v23)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v24 = (_DWORD *)result;
  *(_DWORD *)(result + 36) = *(_DWORD *)(v17 + 32);
  if (v23 == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(_DWORD *)(result + 40) = *(_DWORD *)(v17 + 36);
  if (v23 < 3)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(result + 44) = *(_DWORD *)(v17 + 40);
  if (v23 == 3)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v25 = *(_DWORD *)(v17 + 44);
  uint64_t result = swift_release();
  v24[12] = v25;
  uint64_t v26 = *(void *)(v18 + 16);
  if (!v26)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v24[13] = *(_DWORD *)(v18 + 32);
  if (v26 != 1)
  {
    int v27 = *(_DWORD *)(v18 + 36);
    swift_release();
    v24[14] = v27;
    int v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_2574A8638((uint64_t)&unk_27065D678, (uint64_t)v24, (uint64_t)v30, a1);
    return sub_2574EE034(v2);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2574EE034(long long *a1)
{
  long long v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002460);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  *(_OWORD *)(inited + 32) = v7;
  int v3 = HIDWORD(v7) + 1;
  if (HIDWORD(v7) != -1)
  {
    uint64_t v4 = 3;
LABEL_10:
    *(_DWORD *)(inited + 32 + 4 * v4) = v3;
    goto LABEL_11;
  }
  int v3 = DWORD2(v7) + 1;
  if (DWORD2(v7) != -1)
  {
    uint64_t v4 = 2;
    goto LABEL_10;
  }
  int v3 = DWORD1(v7) + 1;
  if (DWORD1(v7) != -1)
  {
    uint64_t v4 = 1;
    goto LABEL_10;
  }
  int v3 = v7 + 1;
  if (v7 != -1)
  {
    uint64_t v4 = 0;
    goto LABEL_10;
  }
  *(_DWORD *)(inited + 44) = 0;
LABEL_11:
  uint64_t result = sub_2574ED2E4(inited);
  *a1 = v6;
  return result;
}

uint64_t UInt64.vector4.getter(unint64_t a1)
{
  int v1 = a1;
  unint64_t v2 = HIDWORD(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002460);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576AE070;
  *(void *)(inited + 32) = 0;
  *(_DWORD *)(inited + 40) = v2;
  *(_DWORD *)(inited + 44) = v1;
  return sub_2574ED2E4(inited);
}

Swift::UInt64 __swiftcall SystemArc4RandomNumberGenerator.next()()
{
  v1[1] = *MEMORY[0x263EF8340];
  v1[0] = 0;
  arc4random_buf(v1, 8uLL);
  return v1[0];
}

uint64_t SystemArc4RandomNumberGenerator.next(count:)(uint64_t a1)
{
  uint64_t result = sub_25749F4C4(a1);
  if ((unint64_t)(a1 - 0x1000000000000000) >> 61 == 7)
  {
    uint64_t v4 = result;
    arc4random_buf(v3, 8 * a1);
    *(void *)(v4 + 16) = a1;
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t SystemArc4RandomNumberGenerator.next<A>(count:upperBound:)(uint64_t a1)
{
  uint64_t result = sub_25749F4C4(a1);
  if ((unint64_t)(a1 - 0x1000000000000000) >> 61 == 7)
  {
    uint64_t v4 = result;
    arc4random_buf(v3, 8 * a1);
    *(void *)(v4 + 16) = a1;
    MEMORY[0x270FA5388](v5);
    uint64_t v6 = sub_2576A7EB0();
    swift_bridgeObjectRelease();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_2574EE2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    int v25 = v13;
    if (!a3)
    {
LABEL_6:
      *int v25 = a3;
      return result;
    }
    if ((unint64_t)(a3 - 1) < *(void *)(v14 + 16))
    {
      uint64_t v20 = 0;
      uint64_t v31 = v14 + 32;
      uint64_t v29 = v16 + 40;
      uint64_t v30 = v16;
      int v27 = result;
      uint64_t v28 = v15;
      uint64_t v26 = v18;
      uint64_t v21 = (uint64_t)v18;
      uint64_t v22 = v15;
      do
      {
        uint64_t v23 = *result;
        sub_2574EE450(*(void *)(v31 + 8 * v20), a5, v22, a7, a8, v21);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))(v23 + *(void *)(v30 + 72) * v20, v21, v22);
        uint64_t result = v27;
        ++v20;
      }
      while (a3 != v20);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2574EE450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v189 = a5;
  uint64_t v193 = a2;
  uint64_t v203 = a1;
  uint64_t v167 = a6;
  uint64_t v205 = *MEMORY[0x263EF8340];
  uint64_t v195 = a4;
  uint64_t v7 = *(void *)(a4 + 8);
  uint64_t v8 = *(void *)(v7 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v175 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v173 = (char *)&v164 - v9;
  uint64_t v10 = swift_checkMetadataState();
  uint64_t v187 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  v172 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v171 = (char *)&v164 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v182 = (char *)&v164 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v192 = (char *)&v164 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v183 = (char *)&v164 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v198 = (char *)&v164 - v22;
  MEMORY[0x270FA5388](v21);
  v188 = (void (*)(char *, uint64_t))((char *)&v164 - v23);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v165 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v26 = (char *)&v164 - v25;
  uint64_t v184 = v8;
  uint64_t v179 = *(void *)(v8 + 16);
  uint64_t v178 = swift_getAssociatedTypeWitness();
  uint64_t v27 = MEMORY[0x270FA5388](v178);
  v177 = (char *)&v164 - v28;
  uint64_t v29 = *(void *)(a3 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)&v164 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  v169 = (char *)&v164 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v186 = (char *)&v164 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v194 = (char *)&v164 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v191 = (char *)&v164 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v181 = (void (**)(void))((char *)&v164 - v42);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v197 = (char *)&v164 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v164 - v46;
  MEMORY[0x270FA5388](v45);
  v199 = (char *)&v164 - v48;
  char v49 = sub_2576A85E0();
  uint64_t v201 = v7;
  v196 = v26;
  uint64_t v176 = v29;
  uint64_t v168 = TupleTypeMetadata2;
  v170 = v32;
  if (v49)
  {
    uint64_t v50 = v26;
    uint64_t v51 = v193;
    if (sub_2576A85D0() < 64)
    {
      unint64_t v52 = v199;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v199, v51, a3);
      uint64_t v53 = sub_2576A85C0();
      v185 = *(void (**)(char *, uint64_t))(v29 + 8);
      v185(v52, a3);
      uint64_t v47 = v182;
      uint64_t v54 = v50;
LABEL_4:
      uint64_t v55 = v188;
      if (v53) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
    uint64_t v204 = 0;
    sub_2574F050C();
    uint64_t v60 = v199;
    sub_2576A8590();
    char v59 = sub_2576A7990();
    v185 = *(void (**)(char *, uint64_t))(v29 + 8);
    v185(v60, a3);
    uint64_t v47 = v182;
    uint64_t v54 = v50;
    goto LABEL_10;
  }
  char v56 = sub_2576A85E0();
  uint64_t v51 = v193;
  uint64_t v57 = sub_2576A85D0();
  if (v56)
  {
    if (v57 <= 64)
    {
      swift_getAssociatedConformanceWitness();
      sub_2576A8FD0();
      uint64_t v64 = v199;
      sub_2576A8F50();
      char v65 = sub_2576A7930();
      uint64_t v66 = v176;
      uint64_t v67 = v64;
      uint64_t v55 = *(void (**)(char *, uint64_t))(v176 + 8);
      v55(v67, a3);
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v47, v51, a3);
      v185 = v55;
      if ((v65 & 1) == 0)
      {
LABEL_20:
        v55(v47, a3);
        TupleTypeMetadata2 = v168;
        uint64_t v54 = v196;
        uint64_t v47 = v182;
        uint64_t v55 = v188;
        goto LABEL_21;
      }
      uint64_t v53 = sub_2576A85C0();
      v55(v47, a3);
      TupleTypeMetadata2 = v168;
      uint64_t v54 = v196;
      uint64_t v47 = v182;
      goto LABEL_4;
    }
    uint64_t v204 = 0;
    sub_2574F050C();
    uint64_t v58 = v199;
    sub_2576A8590();
    char v59 = sub_2576A7990();
    v185 = *(void (**)(char *, uint64_t))(v176 + 8);
    v185(v58, a3);
    TupleTypeMetadata2 = v168;
    uint64_t v54 = v196;
    uint64_t v47 = v182;
LABEL_10:
    uint64_t v55 = v188;
    if ((v59 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v47 = v182;
  uint64_t v55 = v188;
  if (v57 < 64)
  {
    uint64_t v61 = v176;
    uint64_t v62 = v199;
    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v199, v51, a3);
    uint64_t v63 = sub_2576A85C0();
    v185 = *(void (**)(char *, uint64_t))(v61 + 8);
    v185(v62, a3);
    TupleTypeMetadata2 = v168;
    uint64_t v54 = v196;
    if (v63) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v204 = 0;
  sub_2574F050C();
  uint64_t v68 = v199;
  sub_2576A8590();
  char v69 = sub_2576A7990();
  v185 = *(void (**)(char *, uint64_t))(v176 + 8);
  v185(v68, a3);
  TupleTypeMetadata2 = v168;
  uint64_t v54 = v196;
  if (v69)
  {
LABEL_19:
    int v163 = 0;
    uint64_t v162 = 565;
    sub_2576A8B60();
    __break(1u);
    goto LABEL_20;
  }
LABEL_21:
  uint64_t v204 = v203;
  sub_2574F05F0();
  sub_2576A8590();
  uint64_t v70 = &v54[*(int *)(TupleTypeMetadata2 + 48)];
  sub_2576A8A90();
  v202 = *(void (**)(void (*)(void, void), char *, uint64_t))(v187 + 16);
  uint64_t v203 = v187 + 16;
  v202((void (*)(void, void))v55, v70, v10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v72 = sub_2576A85E0();
  int v73 = sub_2576A85E0();
  v190 = v70;
  uint64_t v200 = AssociatedConformanceWitness;
  if (((v72 ^ v73) & 1) == 0)
  {
    uint64_t v85 = sub_2576A85D0();
    if (v85 >= sub_2576A85D0())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v199, v51, a3);
      uint64_t v94 = v198;
      sub_2576A8590();
      swift_getAssociatedConformanceWitness();
      char v80 = sub_2576A7920();
      uint64_t v95 = (char *)(v187 + 8);
      uint64_t v96 = *(void (**)(char *, uint64_t))(v187 + 8);
      uint64_t v84 = v176;
      v96(v94, v10);
      v191 = v95;
      v192 = (char *)v96;
      v96((char *)v188, v10);
LABEL_30:
      uint64_t v97 = v167;
      if (v80) {
        goto LABEL_38;
      }
LABEL_62:
      v185(v197, a3);
      uint64_t v157 = v165;
      goto LABEL_65;
    }
    v202((void (*)(void, void))v198, (char *)v55, v10);
    char v86 = v199;
    sub_2576A8590();
    char v87 = sub_2576A7920();
    uint64_t v84 = v176;
    v185(v86, a3);
    char v88 = *(char **)(v187 + 8);
    v191 = (char *)(v187 + 8);
    v192 = v88;
    ((void (*)(void, uint64_t))v88)(v55, v10);
    goto LABEL_37;
  }
  char v74 = sub_2576A85E0();
  uint64_t v75 = sub_2576A85D0();
  uint64_t v76 = sub_2576A85D0();
  if ((v74 & 1) == 0)
  {
    if (v75 >= v76)
    {
      swift_getAssociatedConformanceWitness();
      sub_2576A8FD0();
      unint64_t v106 = v199;
      sub_2576A8F50();
      char v107 = sub_2576A7910();
      uint64_t v108 = v176;
      uint64_t v109 = v185;
      v185(v106, a3);
      uint64_t v110 = v192;
      v202((void (*)(void, void))v192, (char *)v188, v10);
      uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 16);
      uint64_t v112 = v191;
      v111(v191, v51, a3);
      uint64_t v47 = v182;
      if ((v107 & 1) == 0)
      {
        v109(v112, a3);
        v156 = *(void (**)(char *, uint64_t))(v187 + 8);
        v156(v110, v10);
        v156((char *)v188, v10);
        uint64_t v84 = v176;
        uint64_t v97 = v167;
        goto LABEL_62;
      }
      uint64_t v113 = v198;
      sub_2576A8590();
      swift_getAssociatedConformanceWitness();
      char v87 = sub_2576A7920();
      uint64_t v114 = (char *)(v187 + 8);
      v115 = *(void (**)(char *, uint64_t))(v187 + 8);
      v115(v113, v10);
      v115(v110, v10);
      v191 = v114;
      v192 = (char *)v115;
      v115((char *)v188, v10);
      uint64_t v84 = v176;
    }
    else
    {
      uint64_t v89 = (char *)v188;
      v202((void (*)(void, void))v198, (char *)v188, v10);
      uint64_t v90 = v199;
      sub_2576A8590();
      char v87 = sub_2576A7920();
      uint64_t v91 = v176;
      v185(v90, a3);
      uint64_t v92 = *(char **)(v187 + 8);
      char v93 = v89;
      uint64_t v84 = v91;
      v191 = (char *)(v187 + 8);
      v192 = v92;
      ((void (*)(char *, uint64_t))v92)(v93, v10);
      uint64_t v47 = v182;
    }
    uint64_t v70 = v190;
LABEL_37:
    uint64_t v97 = v167;
    if ((v87 & 1) == 0) {
      goto LABEL_62;
    }
    goto LABEL_38;
  }
  if (v76 < v75)
  {
    uint64_t v77 = v176;
    (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v199, v51, a3);
    uint64_t v78 = v198;
    sub_2576A8590();
    swift_getAssociatedConformanceWitness();
    unint64_t v79 = (char *)v188;
    char v80 = sub_2576A7920();
    uint64_t v81 = (char *)(v187 + 8);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v187 + 8);
    v82(v78, v10);
    uint64_t v83 = v79;
    uint64_t v84 = v77;
    v191 = v81;
    v192 = (char *)v82;
    v82(v83, v10);
    uint64_t v47 = v182;
    goto LABEL_30;
  }
  swift_getAssociatedConformanceWitness();
  sub_2576A8FD0();
  uint64_t v98 = v198;
  sub_2576A8F50();
  swift_getAssociatedConformanceWitness();
  uint64_t v99 = (char *)v188;
  char v100 = sub_2576A7920();
  v102 = (char *)(v187 + 8);
  unint64_t v101 = *(void (**)(char *, uint64_t))(v187 + 8);
  v101(v98, v10);
  uint64_t v103 = v183;
  v202((void (*)(void, void))v183, v99, v10);
  unint64_t v104 = v181;
  (*(void (**)(void (**)(void), uint64_t, uint64_t))(v176 + 16))(v181, v51, a3);
  uint64_t v47 = v182;
  v191 = v102;
  v192 = (char *)v101;
  if (v100)
  {
    uint64_t v105 = v176;
    v185((char *)v104, a3);
    v101(v103, v10);
    v101((char *)v188, v10);
    uint64_t v84 = v105;
  }
  else
  {
    sub_2576A8590();
    v154 = v199;
    LODWORD(v183) = sub_2576A7920();
    uint64_t v84 = v176;
    v155 = (void (*)(void (**)(void), uint64_t))v185;
    v185(v154, a3);
    v155(v104, a3);
    ((void (*)(void, uint64_t))v192)(v188, v10);
    uint64_t v97 = v167;
    if ((v183 & 1) == 0) {
      goto LABEL_62;
    }
  }
LABEL_38:
  uint64_t v166 = swift_getAssociatedConformanceWitness();
  sub_2576A8FD0();
  uint64_t v116 = v186;
  sub_2576A8F50();
  uint64_t v117 = v199;
  sub_2576A8AA0();
  v118 = v116;
  v119 = v185;
  v185(v118, a3);
  sub_2576A85A0();
  v183 = (char *)(v84 + 8);
  v119(v117, a3);
  uint64_t v120 = 0;
  v181 = (void (**)(void))(v84 + 16);
  v188 = (void (*)(char *, uint64_t))(v84 + 40);
  v186 = (char *)(MEMORY[0x263F8EE60] + 8);
  for (v187 += 40; ; (*(void (**)(char *, char *, uint64_t))v187)(v190, v127, v10))
  {
    v202((void (*)(void, void))v47, v70, v10);
    v121 = v47;
    int v122 = sub_2576A85E0();
    if (((v122 ^ sub_2576A85E0()) & 1) == 0)
    {
      uint64_t v133 = sub_2576A85D0();
      if (v133 >= sub_2576A85D0())
      {
        uint64_t v128 = v199;
        (*v181)();
        v134 = v198;
        sub_2576A8590();
        swift_getAssociatedConformanceWitness();
        char v136 = sub_2576A7920();
        uint64_t v138 = v120;
        uint64_t v139 = (uint64_t (*)(char *, uint64_t))v192;
        ((void (*)(char *, uint64_t))v192)(v134, v10);
        uint64_t v131 = v139(v121, v10);
        uint64_t v120 = v138;
      }
      else
      {
        v134 = v198;
        v202((void (*)(void, void))v198, v121, v10);
        uint64_t v135 = v199;
        sub_2576A8590();
        uint64_t v128 = v135;
        char v136 = sub_2576A7920();
        v185(v135, a3);
        uint64_t v131 = ((uint64_t (*)(char *, uint64_t))v192)(v121, v10);
      }
      uint64_t v47 = v121;
      uint64_t v127 = v134;
LABEL_49:
      unint64_t v132 = v196;
      if ((v136 & 1) == 0) {
        goto LABEL_64;
      }
      goto LABEL_58;
    }
    char v123 = sub_2576A85E0();
    uint64_t v124 = sub_2576A85D0();
    v125 = v194;
    uint64_t v126 = sub_2576A85D0();
    if ((v123 & 1) == 0) {
      break;
    }
    uint64_t v180 = v120;
    uint64_t v127 = v198;
    if (v126 >= v124)
    {
      swift_getAssociatedConformanceWitness();
      sub_2576A8FD0();
      sub_2576A8F50();
      swift_getAssociatedConformanceWitness();
      uint64_t v47 = v182;
      char v140 = sub_2576A7920();
      char v141 = (void (*)(char *, uint64_t))v192;
      ((void (*)(char *, uint64_t))v192)(v127, v10);
      char v142 = v171;
      v202((void (*)(void, void))v171, v47, v10);
      uint64_t v143 = v169;
      ((void (*)(char *, char *, uint64_t))*v181)(v169, v125, a3);
      if (v140)
      {
        v185(v143, a3);
        v141(v142, v10);
        uint64_t v131 = ((uint64_t (*)(char *, uint64_t))v141)(v47, v10);
        unint64_t v132 = v196;
        uint64_t v127 = v198;
        uint64_t v128 = v199;
        uint64_t v120 = v180;
        goto LABEL_58;
      }
      uint64_t v128 = v199;
      sub_2576A8590();
      char v129 = sub_2576A7920();
      v152 = v185;
      v185(v128, a3);
      v152(v143, a3);
      uint64_t v131 = ((uint64_t (*)(char *, uint64_t))v141)(v47, v10);
      unint64_t v132 = v196;
      uint64_t v127 = v198;
    }
    else
    {
      uint64_t v128 = v199;
      (*v181)();
      sub_2576A8590();
      swift_getAssociatedConformanceWitness();
      uint64_t v47 = v182;
      char v129 = sub_2576A7920();
      uint64_t v130 = (uint64_t (*)(char *, uint64_t))v192;
      ((void (*)(char *, uint64_t))v192)(v127, v10);
      uint64_t v131 = v130(v47, v10);
      unint64_t v132 = v196;
    }
    uint64_t v120 = v180;
    if ((v129 & 1) == 0) {
      goto LABEL_64;
    }
LABEL_58:
    MEMORY[0x270FA5388](v131);
    uint64_t v153 = v195;
    *(&v164 - 4) = a3;
    *(&v164 - 3) = v153;
    uint64_t v162 = v189;
    sub_2575E6708();
    sub_2576A8A90();
    (*(void (**)(char *, char *, uint64_t))v188)(v132, v128, a3);
    uint64_t v70 = v190;
  }
  uint64_t v127 = v198;
  if (v124 < v126)
  {
    uint64_t v47 = v182;
    v202((void (*)(void, void))v198, v182, v10);
    char v137 = v199;
    sub_2576A8590();
    uint64_t v128 = v137;
    char v136 = sub_2576A7920();
    v185(v137, a3);
    uint64_t v131 = ((uint64_t (*)(char *, uint64_t))v192)(v47, v10);
    goto LABEL_49;
  }
  sub_2576A8FD0();
  uint64_t v144 = v199;
  sub_2576A8F50();
  char v145 = sub_2576A7910();
  v185(v144, a3);
  v146 = v172;
  uint64_t v47 = v182;
  v202((void (*)(void, void))v172, v182, v10);
  v147 = v125;
  v148 = v170;
  ((void (*)(char *, char *, uint64_t))*v181)(v170, v147, a3);
  if (v145)
  {
    sub_2576A8590();
    swift_getAssociatedConformanceWitness();
    char v149 = sub_2576A7920();
    uint64_t v150 = v120;
    v151 = (void (*)(char *, uint64_t))v192;
    ((void (*)(char *, uint64_t))v192)(v127, v10);
    v151(v146, v10);
    uint64_t v131 = ((uint64_t (*)(char *, uint64_t))v151)(v47, v10);
    uint64_t v120 = v150;
    unint64_t v132 = v196;
    uint64_t v128 = v199;
    if ((v149 & 1) == 0) {
      goto LABEL_64;
    }
    goto LABEL_58;
  }
  v185(v148, a3);
  v158 = (void (*)(char *, uint64_t))v192;
  ((void (*)(char *, uint64_t))v192)(v146, v10);
  v158(v47, v10);
LABEL_64:
  v159 = v185;
  v185(v194, a3);
  v159(v197, a3);
  uint64_t v97 = v167;
  uint64_t v157 = v165;
  uint64_t v84 = v176;
LABEL_65:
  v160 = v196;
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v97, v196, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v157 + 8))(v160, v168);
}

uint64_t sub_2574F019C(uint64_t a1)
{
  return SystemArc4RandomNumberGenerator.next<A>(count:upperBound:)(a1);
}

Swift::UInt64 sub_2574F01B4()
{
  return SystemArc4RandomNumberGenerator.next()();
}

uint64_t sub_2574F01CC()
{
  return sub_2576A7760();
}

void *sub_2574F0210(uint64_t a1, uint64_t a2)
{
  return sub_2574EE2D8(a1, a2, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

unint64_t sub_2574F0234(uint64_t a1)
{
  unint64_t result = sub_2574F025C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2574F025C()
{
  unint64_t result = qword_26A002468;
  if (!qword_26A002468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002468);
  }
  return result;
}

uint64_t type metadata accessor for AnyRandomNumberGenerator()
{
  return self;
}

ValueMetadata *type metadata accessor for SystemArc4RandomNumberGenerator()
{
  return &type metadata for SystemArc4RandomNumberGenerator;
}

__n128 __swift_memcpy40_16(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PhiloxRandomNumberGenerator(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhiloxRandomNumberGenerator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhiloxRandomNumberGenerator()
{
  return &type metadata for PhiloxRandomNumberGenerator;
}

unint64_t sub_2574F0398(uint64_t a1)
{
  unint64_t result = sub_25748E4CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2574F03C0(uint64_t a1)
{
  unint64_t result = sub_2574F03E8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2574F03E8()
{
  unint64_t result = qword_26A002470;
  if (!qword_26A002470)
  {
    type metadata accessor for AnyRandomNumberGenerator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002470);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2574F0484(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002490);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2574F04E4(uint64_t a1)
{
  return sub_2574ED6A0(a1, *(void *)(v1 + 40));
}

unint64_t sub_2574F050C()
{
  unint64_t result = qword_26A002498;
  if (!qword_26A002498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002498);
  }
  return result;
}

uint64_t sub_2574F0558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  uint64_t v7 = swift_allocObject();
  sub_257479260(&v9, v7 + 16);
  return v7;
}

unint64_t sub_2574F05F0()
{
  unint64_t result = qword_26A0024A0[0];
  if (!qword_26A0024A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0024A0);
  }
  return result;
}

void sub_2574F063C(void *a1)
{
  arc4random_buf(a1, *(void *)(*(void *)(*(void *)(v1 + 16) - 8) + 64));
}

void OUTLINED_FUNCTION_0_32()
{
  sub_2574E7214();
}

void OUTLINED_FUNCTION_1_31()
{
  sub_2574E7214();
}

uint64_t sub_2574F06C0@<X0>(uint64_t *a1@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  BOOL v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2_24();
  v5();
  return sub_2574F0858((uint64_t)v4, a1);
}

uint64_t sub_2574F0768@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_2_24();
  v7();
  sub_25746B3D0(a1, (uint64_t)v10);
  return sub_2574F0904((uint64_t)v6, v10, a2);
}

uint64_t Sampling<>.count.getter()
{
  return sub_2574F1604();
}

uint64_t Sampling.underestimatedCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_2574F0858@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_2576A7C20();
  type metadata accessor for Sampling.IteratorFactory();
  uint64_t result = sub_2574F08C8(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2574F08C8(uint64_t a1)
{
  return sub_2574F10D8(a1);
}

uint64_t sub_2574F0904@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_2576A7C20();
  type metadata accessor for Sampling.SampledIteratorFactory();
  uint64_t result = sub_2574F0984(a1, a2);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_2574F0984(uint64_t a1, long long *a2)
{
  return sub_2574F12DC(a1, a2);
}

uint64_t Sampling.makeIterator()()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 112))();
}

uint64_t (*sub_2574F0A14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)()@<X8>))()
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_1_32();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a1, a2);
  sub_2576A7C00();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, a2);
  uint64_t result = (uint64_t (*)())swift_allocObject();
  *((void *)result + 2) = a2;
  *((void *)result + 3) = a3;
  *((void *)result + 4) = v12;
  *a4 = sub_2574F1980;
  a4[1] = result;
  return result;
}

uint64_t sub_2574F0B38()
{
  return swift_endAccess();
}

uint64_t sub_2574F0BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_1_32();
  swift_getAssociatedTypeWitness();
  uint64_t v17 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v7, a2, a4);
  sub_2576A7C00();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, a4);
  OUTLINED_FUNCTION_0_10();
  uint64_t v19 = v18;
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a3;
  *((void *)v21 + 3) = a4;
  *((void *)v21 + 4) = a5;
  *((void *)v21 + 5) = a6;
  *((void *)v21 + 6) = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v21[v20], a1, a3);
  *a7 = sub_2574F1900;
  a7[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v21;
  return result;
}

uint64_t sub_2574F0D84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v25 = a3;
  uint64_t v24 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_2576A84C0();
  uint64_t v4 = *(void *)(v21 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  swift_getAssociatedTypeWitness();
  swift_projectBox();
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_2576A8500();
  swift_endAccess();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v21);
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v11 = v25;
    uint64_t v12 = 1;
  }
  else
  {
    uint64_t v13 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v7, AssociatedTypeWitness);
    uint64_t v14 = (void (*)(char *, void))sub_2576A8200();
    uint64_t v16 = v15;
    uint64_t v17 = swift_getAssociatedTypeWitness();
    uint64_t v18 = v25;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v25, v16, v17);
    v14(v26, 0);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, AssociatedTypeWitness);
    uint64_t v11 = v18;
    uint64_t v12 = 0;
    uint64_t v10 = v17;
  }
  return __swift_storeEnumTagSinglePayload(v11, v12, 1, v10);
}

uint64_t Sampling.Iterator.next()()
{
  return (*v0)();
}

uint64_t sub_2574F10D8(uint64_t a1)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t (*sub_2574F114C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 80);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, (uint64_t)v2 + *(void *)(v4 + 96), v5);
  return sub_2574F0A14((uint64_t)v7, v5, *(void *)(v4 + 88), a2);
}

uint64_t sub_2574F1254()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  return v0;
}

uint64_t sub_2574F12C4()
{
  return sub_2574F157C(sub_2574F1254);
}

uint64_t sub_2574F12DC(uint64_t a1, long long *a2)
{
  sub_257479260(a2, v2 + *(void *)(*(void *)v2 + 136));
  return sub_2574F10D8(a1);
}

uint64_t sub_2574F1334@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 120);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = (uint64_t)v2 + *(void *)(v4 + 96);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - v6, v8, v5);
  uint64_t v10 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 136));
  uint64_t v11 = v10[3];
  uint64_t v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v13 = *(void *)(v4 + 128);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v8, v5, v13, v11, v12);
  swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_2576A7F50();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_2574F0BF8((uint64_t)v7, (uint64_t)&v18, v5, v14, v13, WitnessTable, a2);
}

uint64_t sub_2574F1504()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 136));
}

uint64_t sub_2574F1520()
{
  uint64_t v0 = sub_2574F1254();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 136));
  return v0;
}

uint64_t sub_2574F1564()
{
  return sub_2574F157C(sub_2574F1520);
}

uint64_t sub_2574F157C(uint64_t (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_2574F15D4()
{
  Sampling.makeIterator()();
  return swift_release();
}

uint64_t sub_2574F1604()
{
  return sub_2576A8130();
}

uint64_t sub_2574F165C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for Sampling()
{
  return __swift_instantiateGenericMetadata();
}

void *initializeBufferWithCopyOfBuffer for MPSGraphTensorStorage.MPSExecutionContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LazyTensorFunction.Key.TensorOperationDescriptionKey()
{
  return swift_release();
}

void *sub_2574F16D0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2574F170C(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for Sampling.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574F1758()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Sampling.IteratorFactory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574F1804()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Sampling.SampledIteratorFactory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2574F1860()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 56) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_2574F1900@<X0>(uint64_t a1@<X8>)
{
  return sub_2574F0D84(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), a1);
}

uint64_t sub_2574F1948()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2574F1980()
{
  return sub_2574F0B38();
}

uint64_t sub_2574F19BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    for (i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      uint64_t v8 = *(i - 1);
      uint64_t v9 = *i;
      v11[0] = *(i - 2);
      v11[1] = v8;
      void v11[2] = v9;
      sub_2576A7810();
      swift_retain();
      sub_2574F5BC4(v11, a3, &v12);
      swift_release();
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      if (!--v5)
      {
        uint64_t v8 = v13;
        swift_release();
        return v8;
      }
    }
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v8;
}

uint64_t sub_2574F1AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_2574E7E78();
    uint64_t v7 = v22;
    uint64_t v8 = (unint64_t *)(a1 + 40);
    while (1)
    {
      unint64_t v9 = *v8;
      v18[0] = *(v8 - 1);
      v18[1] = v9;
      sub_2576A7810();
      sub_2574F6210(v18, a2, &v19);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      swift_bridgeObjectRelease();
      unint64_t v10 = v19;
      long long v11 = v20;
      long long v12 = v21;
      uint64_t v22 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      if (v13 >= *(void *)(v7 + 24) >> 1)
      {
        long long v16 = v21;
        long long v17 = v20;
        sub_2574E7E78();
        long long v12 = v16;
        long long v11 = v17;
        uint64_t v7 = v22;
      }
      *(void *)(v7 + 16) = v13 + 1;
      uint64_t v14 = v7 + 40 * v13;
      *(void *)(v14 + 32) = v10;
      v8 += 2;
      *(_OWORD *)(v14 + 40) = v11;
      *(_OWORD *)(v14 + 56) = v12;
      if (!--v5)
      {
        swift_release();
        return v7;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v7;
}

uint64_t sub_2574F1C60()
{
  uint64_t v1 = sub_2575A8688(v0);
  swift_release();
  return v1;
}

uint64_t sub_2574F1C94()
{
  uint64_t v0 = sub_2575A89E4();
  swift_release();
  return v0;
}

void sub_2574F1CD4(uint64_t a1, uint64_t (*a2)(void *, uint64_t *))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = a1 + 40;
    uint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v16 = a1 + 40;
    do
    {
      uint64_t v8 = (_OWORD *)(v6 + 24 * v5);
      unint64_t v9 = v5;
      while (1)
      {
        if (v9 >= *(void *)(a1 + 16))
        {
          __break(1u);
          return;
        }
        uint64_t v10 = *((void *)v8 - 1);
        long long v11 = *v8;
        v20[0] = v10;
        v20[1] = v11;
        long long v17 = v11;
        uint64_t v19 = *((void *)&v11 + 1);
        sub_2576A7810();
        swift_retain();
        char v12 = a2(v20, &v19);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        if (v12) {
          break;
        }
        ++v9;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v8 = (_OWORD *)((char *)v8 + 24);
        if (v4 == v9) {
          goto LABEL_17;
        }
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v7;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2574E71F4();
        uint64_t v7 = v21;
      }
      unint64_t v14 = *(void *)(v7 + 16);
      if (v14 >= *(void *)(v7 + 24) >> 1)
      {
        sub_2574E71F4();
        uint64_t v7 = v21;
      }
      unint64_t v5 = v9 + 1;
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 24 * v14;
      *(void *)(v15 + 32) = v10;
      *(_OWORD *)(v15 + 40) = v17;
      uint64_t v6 = v16;
    }
    while (v4 - 1 != v9);
  }
LABEL_17:
  swift_bridgeObjectRelease();
}

unint64_t sub_2574F1EBC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    sub_2576A8730();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD00000000000001DLL;
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A8EA0();
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    sub_2576A8730();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD00000000000001FLL;
    uint64_t v5 = MEMORY[0x263F8D6C8];
    MEMORY[0x25A2B83F0](a1, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    MEMORY[0x25A2B83F0](a2, v5);
LABEL_5:
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    return v7;
  }
  if (a1 | a2) {
    return 0xD000000000000027;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_2574F20B0()
{
  if (*(void *)(v0 + 96))
  {
    uint64_t v1 = *(void *)(v0 + 96);
  }
  else
  {
    id v2 = objc_msgSend(*(id *)(v0 + 80), sel_inputNames);
    uint64_t v1 = sub_2576A7DF0();

    *(void *)(v0 + 96) = v1;
    sub_2576A7810();
    swift_bridgeObjectRelease();
  }
  sub_2576A7810();
  return v1;
}

uint64_t sub_2574F2138()
{
  sub_257540FFC(*(void *)(v0 + 120), *(void *)(v0 + 128));
  uint64_t v1 = sub_2576A8A00();
  swift_release();
  return v1;
}

void sub_2574F2174()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v32 = v3;
  uint64_t v33 = v2;
  uint64_t v30 = v4;
  uint64_t v31 = v5;
  uint64_t v35 = v6;
  uint64_t v36 = v7;
  char v34 = v8 & 1;
  uint64_t v9 = sub_2576A8340();
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = sub_2576A8360();
  OUTLINED_FUNCTION_0_8();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_8_0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_2576A76D0();
  MEMORY[0x270FA5388](v17 - 8);
  OUTLINED_FUNCTION_7_19();
  sub_2574A4924(0, (unint64_t *)&qword_26A002008);
  sub_2576A76C0();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v16, *MEMORY[0x263F8F120], v10);
  sub_2574F92F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002438);
  sub_257492AF8((unint64_t *)&qword_26A003540, &qword_26A002438);
  sub_2576A8660();
  OUTLINED_FUNCTION_129();
  *(void *)(v0 + 16) = sub_2576A8390();
  *(_WORD *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 144) = sub_2576A77E0();
  sub_2574866D0(v32, v0 + 24);
  *(unsigned char *)(v0 + 76) = v34;
  *(void *)(v0 + 104) = v35;
  *(void *)(v0 + 112) = v36;
  *(void *)(v0 + 120) = v31;
  *(void *)(v0 + 128) = v33;
  sub_2576A7810();
  sub_2576A7810();
  id v18 = sub_2574F2628(v30, v32, v34);
  *(void *)(v0 + 80) = v18;
  unint64_t v19 = *(void *)(v31 + 16);
  id v20 = objc_msgSend(v18, sel_outputNames);
  uint64_t v21 = sub_2576A7DF0();

  unint64_t v22 = *(void *)(v21 + 16);
  swift_bridgeObjectRelease();
  if (v22 < v19) {
    goto LABEL_4;
  }
  sub_257540FFC(v31, v33);
  uint64_t v23 = sub_257486F5C();
  id v24 = objc_msgSend(*(id *)(v1 + 80), sel_outputNames);
  uint64_t v25 = sub_2576A7DF0();

  LOBYTE(v24) = sub_2574F2DF8(v25, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_4:
    sub_2576A8730();
    OUTLINED_FUNCTION_129();
    sub_2576A7B00();
    sub_257540FFC(v31, v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026D8);
    sub_2576A8A30();
    swift_release();
    OUTLINED_FUNCTION_129();
    sub_2576A7B00();
    id v27 = objc_msgSend(*(id *)(v1 + 80), sel_outputNames);
    uint64_t v28 = MEMORY[0x263F8D310];
    uint64_t v29 = sub_2576A7DF0();

    MEMORY[0x25A2B83F0](v29, v28);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    OUTLINED_FUNCTION_1_33();
    sub_25746BE6C();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_257486674(v32);
  type metadata accessor for EspressoBufferCache();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = MEMORY[0x263F8EE80];
  *(void *)(v1 + 136) = v26;
  OUTLINED_FUNCTION_8_21();
}

id sub_2574F2628(void *a1, uint64_t a2, char a3)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  char v3 = a3 & 1;
  uint64_t v38 = sub_2576A75E0();
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2576A75A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v35 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v35 - v12;
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_2576A75D0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26A001FE8);
  sub_2576A7590();
  uint64_t v15 = sub_2576A75C0();
  os_signpost_type_t v16 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    char v17 = v3;
    id v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v18 = 0;
    os_signpost_id_t v19 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v15, v16, v19, "Build Espresso Network", "", v18, 2u);
    id v20 = v18;
    char v3 = v17;
    MEMORY[0x25A2BAC80](v20, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v13, v5);
  sub_2576A7610();
  swift_allocObject();
  sub_2576A7600();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v13, v5);
  id v22 = sub_2574F4034(v39, v40, v3);
  uint64_t v23 = sub_2576A75C0();
  id v24 = v41;
  sub_2576A75F0();
  os_signpost_type_t v25 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    uint64_t v26 = v36;
    sub_2576A7620();
    swift_release();
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    if ((*(unsigned int (**)(char *, uint64_t))(v37 + 88))(v26, v38) == *MEMORY[0x263F90238])
    {
      uint64_t v29 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
      uint64_t v29 = "";
    }
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    uint64_t v31 = v41;
    os_signpost_id_t v32 = sub_2576A7580();
    uint64_t v33 = v29;
    id v24 = v31;
    _os_signpost_emit_with_name_impl(&dword_257455000, v23, v25, v32, "Build Espresso Network", v33, v30, 2u);
    MEMORY[0x25A2BAC80](v30, -1, -1);
  }

  v21(v24, v5);
  swift_release();
  return v22;
}

uint64_t sub_2574F2DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2)
  {
    char v12 = 1;
    return v12 & 1;
  }
  if (v2 != 1)
  {
    sub_2576A7810();
    char v12 = sub_2574F8AF0(a1, a2);
LABEL_16:
    swift_bridgeObjectRelease();
    return v12 & 1;
  }
  uint64_t result = sub_2574B7A08(a2);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      uint64_t v9 = result;
      uint64_t v10 = (void *)(a1 + 40);
      while (1)
      {
        BOOL v11 = *(v10 - 1) == v9 && v7 == *v10;
        if (v11 || (sub_2576A8F60() & 1) != 0) {
          break;
        }
        v10 += 2;
        if (!--v8) {
          goto LABEL_12;
        }
      }
      char v12 = 1;
    }
    else
    {
LABEL_12:
      char v12 = 0;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_2574F2EC4()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v52 = v0;
  uint64_t v3 = v2;
  uint64_t v51 = sub_2576A7650();
  OUTLINED_FUNCTION_0_8();
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  uint64_t v49 = v7 - v6;
  uint64_t v48 = sub_2576A75A0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_7_19();
  uint64_t v11 = sub_2576A75D0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = v3 + 168;
  sub_25747B47C(v3 + 168, (uint64_t)v54);
  if (v55)
  {
    sub_25746B3D0((uint64_t)v54, (uint64_t)v61);
    sub_257486674((uint64_t)v54);
    sub_257479260(v61, (uint64_t)&v64);
    sub_25746B3D0((uint64_t)&v64, (uint64_t)v54);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E00);
    if (!swift_dynamicCast()) {
      goto LABEL_46;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    sub_2574B92D8((uint64_t)v54, (uint64_t *)&unk_26A004250);
  }
  uint64_t v53 = v3;
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v11, (uint64_t)qword_26A001FE8);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, v19, v11);
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = v53;
  *(&v48 - 2) = v53;
  sub_2576A7590();
  id v22 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)id v22 = 0;
  sub_2574F8084(v22, 2u, v17, v1, "Build Program", "", (void (*)(uint64_t *__return_ptr))sub_2574F92D4);
  uint64_t v24 = v23;
  MEMORY[0x25A2BAC80](v22, -1, -1);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v48);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  int v67 = 0;
  long long v65 = 0u;
  long long v66 = 0u;
  __n128 v64 = 0u;
  char v25 = sub_2575F3194();
  sub_25747B47C(v18, (uint64_t)v54);
  char v58 = v25;
  if (v25 == 2)
  {
    OUTLINED_FUNCTION_10_15();
    if (v26)
    {
      sub_2574B92D8((uint64_t)&v64, (uint64_t *)&unk_26A004250);
      v61[0] = (__int128)OUTLINED_FUNCTION_12_17();
      v61[1] = v27;
      v61[2] = v56;
      int v62 = v57;
      sub_2574866D0((uint64_t)v61, (uint64_t)&v64);
      int v28 = sub_2574F3A64((uint64_t)&v64) & 1;
      sub_257486674((uint64_t)v61);
LABEL_12:
      char v63 = v28;
      goto LABEL_16;
    }
    sub_2574F3800(2, (uint64_t)v61);
    sub_2574B92D8((uint64_t)&v64, (uint64_t *)&unk_26A004250);
    sub_25748D7A4((uint64_t)v61, (uint64_t)&v64);
    char v31 = sub_2574F3A64((uint64_t)&v64);
    int v28 = v31 & 1;
    char v63 = v31 & 1;
    os_signpost_id_t v32 = (uint64_t *)&unk_26A0026D0;
  }
  else
  {
    int v28 = v25 & 1;
    OUTLINED_FUNCTION_10_15();
    if (v29)
    {
      sub_2574B92D8((uint64_t)&v64, (uint64_t *)&unk_26A004250);
      __n128 v64 = OUTLINED_FUNCTION_12_17();
      long long v65 = v30;
      long long v66 = v56;
      int v67 = v57;
      goto LABEL_12;
    }
    char v63 = v25 & 1;
    sub_2574F3800(v25 & 1, (uint64_t)v61);
    sub_2574B92D8((uint64_t)&v64, (uint64_t *)&unk_26A004250);
    sub_25748D7A4((uint64_t)v61, (uint64_t)&v64);
    os_signpost_id_t v32 = (uint64_t *)&unk_26A004250;
  }
  sub_2574B92D8((uint64_t)v54, v32);
LABEL_16:
  sub_25747B47C((uint64_t)&v64, (uint64_t)v54);
  if (!v55)
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v48 = v24;
  uint64_t v33 = *((void *)&v56 + 1);
  sub_257486674((uint64_t)v54);
  BOOL v34 = 1;
  if (!v28 && v33 == 1 || (!v28 ? (v35 = 1) : (v35 = 2), BOOL v34 = v28 != 0, v35 != v28 + 1))
  {
    if (qword_26A0008F0 != -1) {
      swift_once();
    }
    uint64_t v36 = v51;
    uint64_t v37 = __swift_project_value_buffer(v51, (uint64_t)qword_26A030A28);
    uint64_t v38 = v50;
    uint64_t v39 = v49;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v37, v36);
    uint64_t v40 = sub_2576A7630();
    os_log_type_t v41 = sub_2576A8320();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v54[0] = v43;
      *(_DWORD *)uint64_t v42 = 136315394;
      OUTLINED_FUNCTION_30_4();
      if (v63 == 2)
      {
LABEL_45:
        __break(1u);
LABEL_46:
        v54[0] = 0;
        v54[1] = 0xE000000000000000;
        sub_2576A8730();
        OUTLINED_FUNCTION_3_23();
        OUTLINED_FUNCTION_129();
        sub_2576A7B00();
        sub_2576A8A30();
        OUTLINED_FUNCTION_129();
        sub_2576A7B00();
        OUTLINED_FUNCTION_3_23();
        char v59 = 3;
        OUTLINED_FUNCTION_1_33();
        sub_25746BE6C();
      }
      if (v63) {
        uint64_t v44 = 0x656C676E6973;
      }
      else {
        uint64_t v44 = 1718378856;
      }
      if (v63) {
        unint64_t v45 = 0xE600000000000000;
      }
      else {
        unint64_t v45 = 0xE400000000000000;
      }
      uint64_t v60 = sub_2574F829C(v44, v45, v54);
      sub_2576A8510();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2080;
      if (v34) {
        uint64_t v46 = 0x656C676E6973;
      }
      else {
        uint64_t v46 = 1718378856;
      }
      if (v34) {
        unint64_t v47 = 0xE600000000000000;
      }
      else {
        unint64_t v47 = 0xE400000000000000;
      }
      uint64_t v60 = sub_2574F829C(v46, v47, v54);
      sub_2576A8510();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      MEMORY[0x25A2BAC80](v43, -1, -1);
      MEMORY[0x25A2BAC80](v42, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      uint64_t v21 = v53;
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v36);
    }
  }
  sub_257536278(v21);
  sub_25753632C(v21);
  sub_25747B47C((uint64_t)&v64, (uint64_t)v54);
  if (!v55)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  swift_allocObject();
  sub_2574F2174();
  sub_2574B92D8((uint64_t)&v64, (uint64_t *)&unk_26A004250);
  sub_25747F1AC(v21);
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2574F373C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_25747C54C(a1, (uint64_t)v7);
  sub_2575F2FE4((uint64_t)v8);
  type metadata accessor for MILProgramBuilder();
  swift_initStackObject();
  sub_25752C190((uint64_t)v7, 0, 0, (uint64_t)v8);
  sub_257528A3C();
  if (v2)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    uint64_t v5 = v4;
    uint64_t result = swift_release();
    *a2 = v5;
  }
  return result;
}

void sub_2574F3800(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1 == 2 || (a1 & 1) != 0)
  {
    if (qword_26A0008B0 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_26A030A10;
    uint64_t v5 = unk_26A030A18;
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(qword_26A0309F8, qword_26A030A10);
    MEMORY[0x270FA5388](v6);
    uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v8);
    sub_2575B5594(1, (uint64_t)v8, v4, v5, a2);
  }
  else
  {
    static ComputeDevice.gpu.getter();
    if (*((void *)&v18 + 1))
    {
      long long v3 = v18;
      *(_OWORD *)a2 = v17;
      *(_OWORD *)(a2 + 16) = v3;
      *(_OWORD *)(a2 + 32) = v19;
      *(_DWORD *)(a2 + 48) = v20;
    }
    else
    {
      if (qword_26A0008B0 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_26A030A10;
      uint64_t v11 = unk_26A030A18;
      uint64_t v12 = __swift_project_boxed_opaque_existential_1(qword_26A0309F8, qword_26A030A10);
      MEMORY[0x270FA5388](v12);
      uint64_t v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v15 + 16))(v14);
      sub_2575B5594(1, (uint64_t)v14, v10, v11, a2);
      sub_2574B92D8((uint64_t)&v17, (uint64_t *)&unk_26A004250);
    }
  }
}

uint64_t sub_2574F3A64(uint64_t a1)
{
  sub_25747B47C(a1, (uint64_t)&v3);
  if (*((void *)&v4 + 1))
  {
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = v5;
    int v8 = v6;
    uint64_t v1 = *((void *)&v5 + 1);
    sub_2574F9340(*((uint64_t *)&v5 + 1));
    sub_257486674((uint64_t)v7);
    if (v1 != 1)
    {
      if (v1 == 2) {
        return 0;
      }
      sub_2574F9354(v1);
    }
  }
  else
  {
    sub_2574B92D8((uint64_t)&v3, (uint64_t *)&unk_26A004250);
  }
  return 1;
}

uint64_t sub_2574F3B00(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  uint64_t v4 = sub_2576A70E0();
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2574F3BC4, 0, 0);
}

uint64_t sub_2574F3BC4()
{
  uint64_t v1 = v0[21];
  (*(void (**)(uint64_t, void, void))(v0[20] + 16))(v1, v0[16], v0[19]);
  type metadata accessor for MILProgramParser();
  swift_allocObject();
  v0[22] = sub_2575CB8E0(v1, 1852399981, 0xE400000000000000);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2574F3CA8;
  return sub_2575CB100();
}

uint64_t sub_2574F3CA8()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2574F3F90;
  }
  else {
    uint64_t v2 = sub_2574F3DBC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2574F3DBC()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_program);
  if (v2
    && (uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_inputs)) != 0
    && (uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC14NeuralNetworks16MILProgramParser_outputs)) != 0)
  {
    uint64_t v13 = v0[20];
    uint64_t v5 = v0[17];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[19];
    sub_2574866D0(v5, (uint64_t)(v0 + 2));
    sub_2574866D0(v5, (uint64_t)(v0 + 9));
    sub_2574F9368(v3);
    v2;
    sub_2574F9368(v4);
    sub_2574F3A64((uint64_t)(v0 + 9));
    sub_2574B92D8((uint64_t)(v0 + 9), (uint64_t *)&unk_26A004250);
    uint64_t v6 = swift_allocObject();
    sub_2574F2174();
    swift_release();
    sub_257486674(v5);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  }
  else
  {
    uint64_t v7 = v0[19];
    uint64_t v8 = v0[20];
    uint64_t v10 = v0[16];
    uint64_t v9 = v0[17];
    swift_release();
    sub_257486674(v9);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v6 = 0;
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v6);
}

uint64_t sub_2574F3F90()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[16];
  uint64_t v3 = v0[17];
  swift_release();
  sub_257486674(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

id sub_2574F4034(void *a1, uint64_t a2, char a3)
{
  id v5 = a1;
  id v6 = sub_2574F40E8();
  uint64_t v7 = sub_2574F4144();
  uint64_t v8 = *(void *)(a2 + 40);
  if ((unint64_t)(v8 - 1) >= 2) {
    swift_unknownObjectRetain();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = sub_2574F432C(a3 & 1);
  id v10 = objc_allocWithZone((Class)SNNEspressoV1ExecutionContext);
  return sub_2574F7F50(v5, v6, v7, v8, v9);
}

id sub_2574F40E8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = 2;
  if (v1 == 2) {
    uint64_t v2 = 3;
  }
  if (v1 == 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = v2;
  }
  id v4 = objc_allocWithZone((Class)SNNComputeUnit);
  return objc_msgSend(v4, sel_initWithComputeUnitKind_, v3);
}

uint64_t sub_2574F4144()
{
  uint64_t v1 = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  if (v1 == 2)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB00;
    *(void *)(v2 + 32) = sub_2574F40E8();
    if (qword_26A0008B0 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_26A030A10;
    uint64_t v4 = unk_26A030A18;
    id v5 = __swift_project_boxed_opaque_existential_1(qword_26A0309F8, qword_26A030A10);
    MEMORY[0x270FA5388](v5);
    uint64_t v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v7);
    sub_2575B5594(1, (uint64_t)v7, v3, v4, (uint64_t)v15);
    uint64_t v9 = 2;
    if (v16 == 2) {
      uint64_t v9 = 3;
    }
    if (v16 == 1) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = v9;
    }
    id v11 = objc_msgSend(objc_allocWithZone((Class)SNNComputeUnit), sel_initWithComputeUnitKind_, v10);
    sub_257486674((uint64_t)v15);
    *(void *)(v2 + 40) = v11;
    uint64_t v14 = v2;
    sub_2576A7E20();
    return v14;
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_2576AC2A0;
    *(void *)(v13 + 32) = sub_2574F40E8();
    sub_2576A7E20();
    return v13;
  }
}

id sub_2574F432C(char a1)
{
  id v2 = objc_allocWithZone((Class)SNNComputePrecision);
  if (a1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 2;
  }
  return objc_msgSend(v2, sel_initWithComputePrecisionKind_, v3);
}

void sub_2574F437C()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  unint64_t v2 = sub_2574F4538();
  unint64_t v3 = v2;
  uint64_t v5 = v4;
  if (v2 >> 62) {
    uint64_t v6 = sub_2576A8BF0();
  }
  else {
    uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 != v6)
  {
    if (v5 >= v6)
    {
      __break(1u);
      return;
    }
    sub_257582858(v5, (v3 & 0xC000000000000001) == 0, v3);
    sub_257582858(v6 - 1, (v3 & 0xC000000000000001) == 0, v3);
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v5, v3);
      }
      else {
        swift_retain();
      }
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v8 = Strong;
        swift_retain();
        id v9 = sub_25765D36C();
        objc_msgSend(v9, sel_lock);

        if ((*(void *)(v8 + 40) & 0x8000000000000000) != 0) {
          swift_unknownObjectRetain();
        }
        else {
          sub_25765D88C();
        }
        id v10 = sub_25765D36C();
        objc_msgSend(v10, sel_unlock);
        swift_release();
        swift_unknownObjectRelease();
        swift_release_n();
      }
      else
      {
        swift_release();
      }
      ++v5;
    }
    while (v6 != v5);
  }
  swift_bridgeObjectRelease();

  sub_257486674(v1 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2574F4538()
{
  OUTLINED_FUNCTION_30_4();
  sub_2576A7810();
  sub_25769464C();
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2574F458C()
{
  sub_2574F437C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoV1Executor()
{
  return self;
}

uint64_t sub_2574F45E4()
{
  return sub_2574F460C();
}

uint64_t sub_2574F460C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026C8);
  sub_2576A8370();
  return v1;
}

uint64_t sub_2574F4680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v49 = a4;
  uint64_t v51 = sub_2576A75A0();
  uint64_t v55 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2576A75D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2576A7810();
  uint64_t v45 = a1;
  sub_2574F1CD4(v13, (uint64_t (*)(void *, uint64_t *))sub_2574F8AD0);
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v16 = sub_2576A77E0();
  uint64_t v52 = v15;
  uint64_t v53 = v16;
  sub_257470688(v16);
  unint64_t v44 = sub_2574F4D04(v52, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_2574F2138();
  uint64_t v18 = sub_2574F5114(v17);
  uint64_t v47 = v19;
  uint64_t v48 = v18;
  swift_bridgeObjectRelease();
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v9, (uint64_t)qword_26A001FE8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v9);
  swift_retain();
  sub_2576A7590();
  uint64_t v21 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v21 = 0;
  int v22 = sub_2574F8198(v21, 2u, (uint64_t)v12, (uint64_t)v8, "Run Espresso Network", "", a3);
  uint64_t v43 = v4;
  MEMORY[0x25A2BAC80](v21, -1, -1);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v55 + 8);
  v55 += 8;
  uint64_t v50 = v23;
  v23(v8, v51);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v22)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0xE000000000000000;
    sub_2576A8730();
    swift_bridgeObjectRelease();
    uint64_t v52 = 0xD00000000000001ALL;
    uint64_t v53 = 0x80000002576C8210;
    ComputeDevice.description.getter();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    char v54 = 4;
    sub_25746BE6C();
  }
  sub_2576A7590();
  uint64_t v24 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v24 = 0;
  char v25 = sub_2576A75C0();
  os_signpost_type_t v26 = sub_2576A83C0();
  os_signpost_id_t v27 = sub_2576A7580();
  uint64_t v42 = v20;
  _os_signpost_emit_with_name_impl(&dword_257455000, v25, v26, v27, "Unbind Inputs", "", v24, 2u);
  uint64_t v28 = v43;
  sub_2574F55A0(v44, v45, v46);
  uint64_t v46 = v28;
  os_signpost_type_t v29 = sub_2576A83B0();
  os_signpost_id_t v30 = sub_2576A7580();
  _os_signpost_emit_with_name_impl(&dword_257455000, v25, v29, v30, "Unbind Inputs", "", v24, 2u);

  MEMORY[0x25A2BAC80](v24, -1, -1);
  swift_bridgeObjectRelease();
  v50(v8, v51);
  sub_2576A7590();
  char v31 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)char v31 = 0;
  os_signpost_id_t v32 = sub_2576A75C0();
  os_signpost_type_t v33 = sub_2576A83C0();
  os_signpost_id_t v34 = sub_2576A7580();
  _os_signpost_emit_with_name_impl(&dword_257455000, v32, v33, v34, "Unbind Outputs", "", v31, 2u);
  sub_2574F5748(v48);
  os_signpost_type_t v35 = sub_2576A83B0();
  os_signpost_id_t v36 = sub_2576A7580();
  _os_signpost_emit_with_name_impl(&dword_257455000, v32, v35, v36, "Unbind Outputs", "", v31, 2u);

  MEMORY[0x25A2BAC80](v31, -1, -1);
  v50(v8, v51);
  uint64_t v37 = sub_257537048();
  uint64_t v39 = v38;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  os_log_type_t v41 = v49;
  *uint64_t v49 = v37;
  v41[1] = v39;
  return result;
}

uint64_t sub_2574F4C20(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v3 = (void *)sub_2574F20B0();
  uint64_t v4 = v3;
  uint64_t v5 = v3[2];
  if (!v5) {
    goto LABEL_17;
  }
  BOOL v6 = v3[4] == v1 && v3[5] == v2;
  if (v6 || (uint64_t result = sub_2576A8F60(), (result & 1) != 0))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t v8 = v4 + 7;
    uint64_t v9 = 1;
    while (1)
    {
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      if (*(v8 - 1) == v1 && *v8 == v2) {
        goto LABEL_7;
      }
      uint64_t result = sub_2576A8F60();
      if (result) {
        goto LABEL_7;
      }
      v8 += 2;
      ++v9;
      if (v10 == v5) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2574F4D04(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v3 = sub_2576A75E0();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_2576A75A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v37 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - v12;
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_2576A75D0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26A001FE8);
  sub_2576A7590();
  uint64_t v15 = sub_2576A75C0();
  os_signpost_type_t v16 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    uint64_t v17 = v5;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    os_signpost_id_t v19 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v15, v16, v19, "Bind Inputs", "", v18, 2u);
    uint64_t v20 = v18;
    uint64_t v5 = v17;
    MEMORY[0x25A2BAC80](v20, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v13, v5);
  sub_2576A7610();
  swift_allocObject();
  sub_2576A7600();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v13, v5);
  swift_retain();
  uint64_t v22 = sub_2574F19BC(v40, v41, v2);
  uint64_t v23 = sub_2576A75C0();
  uint64_t v24 = v42;
  sub_2576A75F0();
  os_signpost_type_t v25 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    os_signpost_type_t v26 = v37;
    sub_2576A7620();
    swift_release();
    uint64_t v28 = v38;
    uint64_t v27 = v39;
    if ((*(unsigned int (**)(char *, uint64_t))(v38 + 88))(v26, v39) == *MEMORY[0x263F90238])
    {
      uint64_t v29 = v5;
      os_signpost_id_t v30 = "[Error] Interval already ended";
    }
    else
    {
      char v31 = v26;
      uint64_t v29 = v5;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
      os_signpost_id_t v30 = "";
    }
    os_signpost_id_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v32 = 0;
    os_signpost_type_t v33 = v42;
    os_signpost_id_t v34 = sub_2576A7580();
    os_signpost_type_t v35 = v30;
    uint64_t v24 = v33;
    _os_signpost_emit_with_name_impl(&dword_257455000, v23, v25, v34, "Bind Inputs", v35, v32, 2u);
    MEMORY[0x25A2BAC80](v32, -1, -1);
    uint64_t v5 = v29;
  }

  v21(v24, v5);
  swift_release();
  return v22;
}

uint64_t sub_2574F5114(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_2576A75E0();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v55 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2576A75A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v53 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v53 - v14;
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_2576A75D0();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_26A001FE8);
  sub_2576A7590();
  uint64_t v58 = v17;
  uint64_t v18 = sub_2576A75C0();
  os_signpost_type_t v19 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = v7;
    uint64_t v21 = a1;
    uint64_t v22 = v6;
    uint64_t v23 = v2;
    uint64_t v24 = v10;
    os_signpost_type_t v25 = v20;
    *(_WORD *)uint64_t v20 = 0;
    os_signpost_id_t v26 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v18, v19, v26, "Bind Outputs", "", v25, 2u);
    uint64_t v27 = v25;
    uint64_t v10 = v24;
    uint64_t v2 = v23;
    uint64_t v6 = v22;
    a1 = v21;
    uint64_t v7 = v54;
    MEMORY[0x25A2BAC80](v27, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v15, v6);
  sub_2576A7610();
  swift_allocObject();
  sub_2576A7600();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v7 + 8);
  v28(v15, v6);
  swift_retain();
  uint64_t v29 = sub_2574F1AFC(a1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v60 = sub_2576A77E0();
  uint64_t v30 = sub_25746E01C(v29);
  uint64_t v31 = swift_bridgeObjectRelease();
  uint64_t v59 = v30;
  sub_257470ACC(v31, v32, v33, v34, v35, v36, v37, v38, v53, v54, v55, v56, v57, v58);
  uint64_t v39 = v59;
  uint64_t v40 = v60;
  uint64_t v41 = sub_2576A75C0();
  sub_2576A75F0();
  os_signpost_type_t v42 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    uint64_t v54 = v40;
    uint64_t v58 = v39;
    swift_retain();
    uint64_t v43 = v55;
    sub_2576A7620();
    swift_release();
    uint64_t v44 = v56;
    uint64_t v45 = v57;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v56 + 88))(v43, v57) == *MEMORY[0x263F90238])
    {
      uint64_t v46 = v10;
      uint64_t v47 = "[Error] Interval already ended";
    }
    else
    {
      uint64_t v48 = v44;
      uint64_t v46 = v10;
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v43, v45);
      uint64_t v47 = "";
    }
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    os_signpost_id_t v50 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v41, v42, v50, "Bind Outputs", v47, v49, 2u);
    uint64_t v51 = v49;
    uint64_t v10 = v46;
    MEMORY[0x25A2BAC80](v51, -1, -1);
    uint64_t v39 = v58;
  }

  v28(v10, v6);
  swift_release();
  return v39;
}

uint64_t sub_2574F55A0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_2576A7810();
  if (!v5) {
    return swift_bridgeObjectRelease();
  }
  while (2)
  {
    if (v5 >= 1)
    {
      uint64_t v7 = 0;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x25A2B8DB0](v7, a1);
        }
        else
        {
          uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
          swift_retain();
        }
        if (!*(void *)(a3 + 16)) {
          goto LABEL_15;
        }
        uint64_t v9 = *(void *)(v8 + 16);
        uint64_t v10 = *(void *)(v8 + 24);
        sub_2576A7810();
        unint64_t v11 = sub_25747588C(v9, v10);
        if (v12)
        {
          uint64_t v13 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
          if (*(void *)(v13 + 16)) {
            break;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
LABEL_16:
        if (v5 == ++v7) {
          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v14 = *(void *)(v13 + 32);
      if ((v14 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        sub_2576A7810();
        uint64_t result = sub_2576A8BF0();
        uint64_t v5 = result;
        if (!result) {
          return swift_bridgeObjectRelease();
        }
        continue;
      }
      if (v14 >= *(void *)(a2 + 16)) {
        goto LABEL_19;
      }
      swift_retain();
      swift_bridgeObjectRelease();
      sub_2574F5924(v8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2574F5818);
      swift_release();
LABEL_15:
      swift_release();
      goto LABEL_16;
    }
    break;
  }
  __break(1u);
  return result;
}

uint64_t sub_2574F5748(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = result;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v3 = v2 + 64;
    do
    {
      uint64_t v4 = *(void *)(v3 - 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_2576A7810();
      swift_unknownObjectRetain();
      uint64_t v6 = swift_retain();
      sub_2574F5818(v6, ObjectType, v4);
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2574F5818(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(result + 216) == 1) {
    return sub_2574F7E2C(result, a2, a3);
  }
  return result;
}

uint64_t sub_2574F582C(uint64_t a1)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    swift_release();
    if (a1 && v3 == a1) {
      goto LABEL_12;
    }
  }
  else if (!a1)
  {
    goto LABEL_12;
  }
  uint64_t v4 = swift_weakLoadStrong();
  if (v4)
  {
    uint64_t v5 = v4;
    swift_retain();
    id v6 = sub_25765D36C();
    objc_msgSend(v6, sel_lock);

    if ((*(void *)(v5 + 40) & 0x8000000000000000) != 0) {
      swift_unknownObjectRetain();
    }
    else {
      sub_25765D88C();
    }
    id v7 = sub_25765D36C();
    objc_msgSend(v7, sel_unlock);
    swift_unknownObjectRelease();
    swift_release_n();
  }
  swift_weakAssign();
LABEL_12:
  return swift_release();
}

uint64_t sub_2574F5924(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = swift_retain();
  sub_2576140FC(v5, v2, 0, 0);
  uint64_t v7 = v6;
  uint64_t ObjectType = swift_getObjectType();
  a2(a1, ObjectType, v7);
  return swift_unknownObjectRelease();
}

uint64_t sub_2574F59A8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  sub_2576A7810();
  if (v6 && (unint64_t v7 = sub_25747588C(a1, a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v5 + 56) + 8 * v7);
    swift_retain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2574F5A40(uint64_t result)
{
  char v2 = *(unsigned char *)(v1 + 216);
  *(unsigned char *)(v1 + 216) = result & 1;
  *(unsigned char *)(v1 + 217) = (*(unsigned char *)(v1 + 217) | v2 ^ result) & 1;
  return result;
}

uint64_t sub_2574F5A64(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  swift_beginAccess();
  sub_2576A7810();
  uint64_t v3 = swift_retain();
  sub_2575CDF6C(v3, v1, v2, v4, v5, v6, v7, v8, v10, v11);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2574F5ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v8 = sub_2574F6424(a3, a4);
  if (*(void *)(v4 + 64) == 1)
  {
    int v9 = 1;
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    int v9 = sub_2574F64D0(ObjectType, a4);
  }
  sub_2574F5FAC(a1, a2, (unsigned char *)&v14 + 1);
  int v11 = BYTE1(v14);
  uint64_t v12 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v14, v12, a4);
  if (v11 == 10) {
    return v8 & v9 & (v14 == 10);
  }
  else {
    return 0;
  }
}

uint64_t sub_2574F5BC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *(void *)(v6 + 152);
  unsigned __int8 v16 = *(unsigned char *)(v6 + 160);
  swift_retain_n();
  sub_2576A7810();
  id v8 = sub_2576140FC(v6, v6, 0, 0);
  char v10 = sub_2574F5ADC(v4, v5, (uint64_t)v8, v9);
  swift_unknownObjectRelease();
  char v11 = v10 ^ 1 | *(unsigned char *)(a2 + 88);
  uint64_t v12 = sub_2574F59A8(v4, v5);
  if (v12)
  {
    uint64_t v13 = v12;
    sub_2574F5A40(v11 & 1);
  }
  else
  {
    uint64_t v19 = v7;
    unsigned __int8 v18 = v16;
    uint64_t v14 = *(void **)(a2 + 80);
    type metadata accessor for EspressoBuffer();
    uint64_t v13 = swift_allocObject();
    sub_2576A7810();
    sub_2576A7810();
    sub_2574F69F8(v4, v5, (uint64_t)&v19, &v18, 0, v11 & 1, v14);
    sub_2574F5A64(v13);
  }
  swift_bridgeObjectRelease();
  sub_2574F582C(0);
  sub_2574F5924(v13, (void (*)(uint64_t, uint64_t, uint64_t))sub_2574F5D5C);
  uint64_t result = swift_release();
  *a3 = v13;
  return result;
}

uint64_t sub_2574F5D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 217) == 1) {
    sub_2574F782C();
  }
  if (*(unsigned char *)(a1 + 216))
  {
    return sub_2574F7C00(a1, a2, a3);
  }
  else
  {
    return sub_2574F79AC(a1, a2, a3);
  }
}

uint64_t sub_2574F5DF8(uint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  int v5 = *a2;
  uint64_t result = sub_2574F5FAC(a3, a4, &v21);
  if (v5 == 10 && v21 == 10)
  {
    uint64_t result = sub_2574F60CC();
    if (v9) {
      uint64_t v8 = 4;
    }
    else {
      uint64_t v8 = result;
    }
  }
  else if ((v5 - 1) > 0xA)
  {
    uint64_t v8 = 1;
  }
  else
  {
    uint64_t v8 = qword_2576B2238[(char)(v5 - 1)];
  }
  uint64_t v10 = *(void *)(v4 + 16);
  if (v10)
  {
    char v11 = (uint64_t *)(v4 + 32);
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63) {
        break;
      }
      uint64_t v12 = v14;
      if (!--v10) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v14 = 1;
LABEL_17:
  if ((v5 - 1) > 0xA) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = qword_2576B2238[(char)(v5 - 1)];
  }
  if ((unsigned __int128)(v14 * (__int128)v15) >> 64 != (v14 * v15) >> 63) {
    goto LABEL_26;
  }
  type metadata accessor for IOSurfaceTensorStorage();
  uint64_t v21 = v4;
  unsigned __int8 v20 = v5;
  if (sub_257521D94(&v21, (char *)&v20))
  {
    uint64_t v21 = v4;
    unsigned __int8 v20 = v5;
    sub_2576A7810();
    return sub_257521DCC(&v21, &v20);
  }
  else
  {
    uint64_t v17 = sub_2576A8540();
    uint64_t v19 = v18;
    type metadata accessor for NativeTensorStorage();
    uint64_t v21 = v4;
    unsigned __int8 v20 = v5;
    uint64_t v16 = sub_25754E28C(&v21, (char *)&v20, v17, v19, v8);
    sub_2576A7810();
  }
  return v16;
}

uint64_t sub_2574F5FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v3 + 144);
  if (!*(void *)(v8 + 16)) {
    goto LABEL_5;
  }
  sub_2576A7810();
  unint64_t v9 = sub_25747588C(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    uint64_t v12 = *(void **)(v4 + 80);
    uint64_t v13 = (void *)sub_2576A79C0();
    id v14 = objc_msgSend(v12, sel_dataTypeForBlobWithName_, v13);

    sub_25768764C((uint64_t)v14, v16);
    uint64_t v11 = v16[0];
    swift_beginAccess();
    sub_2576A7810();
    sub_2575CDF78(v11, a1, a2);
    goto LABEL_6;
  }
  LOBYTE(v11) = *(unsigned char *)(*(void *)(v8 + 56) + v9);
LABEL_6:
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v11;
  return result;
}

uint64_t sub_2574F60CC()
{
  if (*(void *)(v0 + 40) == 1) {
    return 0;
  }
  else {
    return getpagesize();
  }
}

uint64_t sub_2574F610C(uint64_t *a1, unsigned __int8 *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = a3 & 1;
  uint64_t v10 = *a1;
  unsigned __int8 v11 = *a2;
  uint64_t v12 = sub_2574F59A8(a4, a5);
  if (v12)
  {
    sub_2574F582C(0);
    sub_2574F5A40(v9);
    return v12;
  }
  else
  {
    uint64_t v17 = v10;
    unsigned __int8 v16 = v11;
    id v14 = *(void **)(a6 + 80);
    type metadata accessor for EspressoBuffer();
    uint64_t v13 = swift_allocObject();
    sub_2576A7810();
    sub_2576A7810();
    sub_2574F69F8(a4, a5, (uint64_t)&v17, &v16, 1, v9, v14);
    sub_2574F5A64(v13);
  }
  return v13;
}

uint64_t sub_2574F6210@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = *(void *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 128);
  sub_257595724(*a1, v5, v7, v8, (uint64_t)&v24);
  uint64_t v9 = v24;
  sub_257595724(v6, v5, v7, v8, (uint64_t)&v24);
  int v10 = v25;
  swift_bridgeObjectRelease();
  sub_2574F5FAC(v6, v5, &v24);
  BOOL v12 = v10 != 10 || v24 != 10;
  char v13 = v12 | *(unsigned char *)(a2 + 89);
  uint64_t v24 = v9;
  unsigned __int8 v26 = v10;
  uint64_t v14 = sub_2574F610C(&v24, &v26, v13 & 1, v6, v5, a2);
  int v16 = v15;
  if (*(unsigned char *)(v14 + 216) == 1)
  {
    uint64_t v24 = v9;
    unsigned __int8 v26 = v10;
    type metadata accessor for EspressoTensorStorage();
    swift_allocObject();
    uint64_t v17 = (void *)sub_25765D3D8(&v24, (char *)&v26, v14);
    swift_retain();
    uint64_t v18 = &off_27066FBE0;
  }
  else
  {
    uint64_t v24 = v9;
    unsigned __int8 v26 = v10;
    uint64_t v17 = (void *)sub_2574F5DF8(&v24, &v26, v6, v5);
    uint64_t v18 = v19;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v14 + 217) & 1) != 0 || ((v16 ^ 1) & 1) != 0 || (*(unsigned char *)(v14 + 216) & 1) == 0)
  {
    uint64_t ObjectType = swift_getObjectType();
    sub_2574F5D5C(v14, ObjectType, (uint64_t)v18);
  }
  if (object_getClass(v17) == (Class)_TtC14NeuralNetworks21EspressoTensorStorage)
  {
    if (v17)
    {
      uint64_t v21 = v17[5];
      if ((v21 & 0x8000000000000000) == 0)
      {
        uint64_t v22 = v17[4];
        swift_unknownObjectRetain();
        sub_2574F904C(v22, v21);
        sub_2574F582C((uint64_t)v17);
        sub_2574F9058(v22, v21);
      }
    }
  }
  *a3 = v6;
  a3[1] = v5;
  a3[2] = (unint64_t)v17;
  a3[3] = (unint64_t)v18;
  a3[4] = v14;
  return sub_2576A7810();
}

BOOL sub_2574F6424(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + 64) == 1) {
    return 1;
  }
  uint64_t v6 = getpagesize();
  swift_getObjectType();
  uint64_t v7 = dynamic_cast_existential_1_conditional(a1);
  if (v7)
  {
    return *(void *)(v7 + 32) == v6;
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = sub_2576120CC(ObjectType, a2);
    if (v6 == -1) {
      return 1;
    }
    if (v6) {
      return v10 % v6 == 0;
    }
    else {
      return v10 == 0;
    }
  }
}

uint64_t sub_2574F64D0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, BOOL *@<X8>), void, void, uint64_t, uint64_t))(a2 + 56))(&v3, sub_2574F7EAC, 0, MEMORY[0x263F8D4F8], a1, a2);
  return v3;
}

uint64_t sub_2574F653C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoBufferCache()
{
  return self;
}

uint64_t sub_2574F6598@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_2574F4538();
  uint64_t v4 = v3;
  uint64_t result = swift_release();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_2574F65DC()
{
  return sub_2575A01E4();
}

uint64_t sub_2574F6600()
{
  return sub_2574F1C94();
}

uint64_t sub_2574F6624()
{
  return sub_2574F1CCC();
}

uint64_t sub_2574F6648@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t result = OUTLINED_FUNCTION_30_4();
  int v5 = *(_DWORD *)(v2 + 208);
  switch(v5)
  {
    case 65568:
      char v6 = 10;
      break;
    case 131080:
      char v6 = 0;
      break;
    case 262152:
      char v6 = 4;
      break;
    case 131104:
      char v6 = 2;
      break;
    default:
      sub_2576A8730();
      swift_bridgeObjectRelease();
      sub_2576A7810();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_1_33();
      sub_25746BE6C();
  }
  *a1 = v6;
  return result;
}

void sub_2574F677C(void *a1@<X8>)
{
  uint64_t v2 = sub_2576A7EA0();
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 16) = 10;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_2576A7A50();
  int blob_shape = espresso_network_query_blob_shape();
  swift_release();
  if (blob_shape)
  {
    sub_2576A8730();
    swift_bridgeObjectRelease();
    sub_2576A7810();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_33();
    sub_25746BE6C();
  }
  sub_25746EC14();
  *a1 = v5;
}

uint64_t sub_2574F6944()
{
  sub_2574F677C(&v9);
  uint64_t result = v9;
  uint64_t v1 = *(void *)(v9 + 16);
  if (v1)
  {
    uint64_t v2 = (uint64_t *)(v9 + 32);
    uint64_t v3 = 1;
    while (1)
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = v3 * v4;
      if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63) {
        break;
      }
      uint64_t v3 = v5;
      if (!--v1) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = 1;
LABEL_7:
  swift_bridgeObjectRelease();
  sub_2574F6648((char *)&v8);
  unsigned int v6 = v8 - 1;
  if (v6 > 0xA) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = qword_2576B2238[(char)v6];
  }
  uint64_t result = v5 * v7;
  if ((unsigned __int128)(v5 * (__int128)v7) >> 64 != (v5 * v7) >> 63) {
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_2574F69F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, char a5, char a6, void *a7)
{
  unsigned int v11 = *a4;
  char v12 = a5 & 1;
  char v13 = a6 & 1;
  *(unsigned char *)(v7 + 217) = 0;
  swift_weakInit();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = v12;
  swift_unknownObjectUnownedInit();
  bzero((void *)(v7 + 48), 0xA4uLL);
  OUTLINED_FUNCTION_11_18();
  bzero((void *)(v7 + 48), 0xA8uLL);
  sub_2576A7810();
  swift_endAccess();
  *(unsigned char *)(v7 + 216) = v13;
  if (v11 >= 0xD || ((0x1515u >> v11) & 1) == 0)
  {
    sub_2576A8B60();
    __break(1u);
LABEL_6:
    sub_2576A8730();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v17, MEMORY[0x263F8D6C8]);
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A7B00();
    sub_2576A7B00();
    OUTLINED_FUNCTION_1_33();
    sub_25746BE6C();
  }
  int v14 = dword_2576B2200[(char)v11];
  OUTLINED_FUNCTION_11_18();
  *(_DWORD *)(v7 + 208) = v14;
  sub_2576A7810();
  int v15 = espresso_buffer_pack_tensor_shape();
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t sub_2574F6C5C()
{
  if (swift_weakLoadStrong())
  {
    uint64_t v1 = swift_retain();
    sub_25765DAF4(v1, v1);
    swift_release();
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_2574F6CDC()
{
  sub_2574F6C5C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoBuffer()
{
  return self;
}

ValueMetadata *type metadata accessor for EspressoBuffer.Mode()
{
  return &type metadata for EspressoBuffer.Mode;
}

unsigned char *_s14NeuralNetworks14EspressoBufferC4ModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574F6E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EspressoBuffer.DataOwnership()
{
  return &type metadata for EspressoBuffer.DataOwnership;
}

unint64_t sub_2574F6E50()
{
  unint64_t result = qword_26A0026A8;
  if (!qword_26A0026A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0026A8);
  }
  return result;
}

unint64_t sub_2574F6EA0()
{
  unint64_t result = qword_26A0026B0;
  if (!qword_26A0026B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0026B0);
  }
  return result;
}

uint64_t sub_2574F6EEC()
{
  return sub_257492AF8(&qword_26A0026B8, &qword_26A0026C0);
}

BOOL sub_2574F6F28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == v3) {
    return 0;
  }
  if (v2 == 12) {
    return v3 != 4;
  }
  if (v2 == 10) {
    return v3 != 10;
  }
  return v2 != 4 || v3 != 12;
}

uint64_t sub_2574F6F7C(float *a1, uint64_t a2, const float *a3, uint64_t a4, char a5, unsigned __int8 a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a4;
  uint64_t v24 = a2;
  uint64_t v13 = sub_2576A8EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = a5;
  unsigned __int8 v27 = a6;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 16))(&v26, ObjectType, a8);
  uint64_t result = v26;
  uint64_t v19 = *(void *)(v26 + 16);
  if (v19)
  {
    unsigned __int8 v20 = (uint64_t *)(v26 + 32);
    uint64_t v21 = 1;
    while (1)
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63) {
        break;
      }
      uint64_t v21 = v23;
      if (!--v19) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v23 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8E1F8], v13);
    sub_2574D1794(a3, v25, &v28, a1, v24, &v27, v23, (uint64_t)v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

void *sub_2574F712C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (void *)swift_beginAccess();
  uint64_t v7 = *(const void **)(a3 + 48);
  if (v7)
  {
    if (a1) {
      size_t v8 = a2 - (void)a1;
    }
    else {
      size_t v8 = 0;
    }
    return memmove(a1, v7, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_2574F71A0()
{
  OUTLINED_FUNCTION_9_22();
  int v2 = v1;
  uint64_t v4 = v3;
  unsigned int v6 = v5;
  uint64_t v7 = sub_2576A8EF0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_8_0();
  uint64_t v13 = v12 - v11;
  unsigned __int8 v14 = *v2;
  sub_2574F6648((char *)v28);
  LOBYTE(v25) = v14;
  uint64_t v15 = (const void **)(v0 + 48);
  if (sub_2574F6F28(v28, (unsigned __int8 *)&v25))
  {
    OUTLINED_FUNCTION_30_4();
    int v16 = *(const float **)(v0 + 48);
    uint64_t v17 = sub_2574F6944();
    if (v16) {
      uint64_t v18 = (uint64_t)v16 + v17;
    }
    else {
      uint64_t v18 = 0;
    }
    sub_2574F6648(&v27);
    unsigned __int8 v26 = v14;
    sub_2574F677C(&v25);
    uint64_t v19 = *(void *)(v25 + 16);
    if (v19)
    {
      unsigned __int8 v20 = (uint64_t *)(v25 + 32);
      uint64_t v21 = 1;
      while (1)
      {
        uint64_t v22 = *v20++;
        uint64_t v23 = v21 * v22;
        if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63) {
          break;
        }
        uint64_t v21 = v23;
        if (!--v19) {
          goto LABEL_16;
        }
      }
      __break(1u);
      goto LABEL_19;
    }
    uint64_t v23 = 1;
LABEL_16:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, *MEMORY[0x263F8E1F8], v7);
    sub_2574D1794(v16, v18, &v27, v6, v4, &v26, v23, v13);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
LABEL_17:
    OUTLINED_FUNCTION_8_21();
    return;
  }
  OUTLINED_FUNCTION_30_4();
  if (*v15)
  {
    if (v6) {
      size_t v24 = v4 - (void)v6;
    }
    else {
      size_t v24 = 0;
    }
    memmove(v6, *v15, v24);
    goto LABEL_17;
  }
LABEL_19:
  __break(1u);
}

uint64_t sub_2574F7354(const float *a1, uint64_t a2, char a3, float *a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a5;
  size_t v24 = a4;
  uint64_t v13 = sub_2576A8EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = a3;
  unsigned __int8 v27 = a6;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 16))(&v26, ObjectType, a8);
  uint64_t result = v26;
  uint64_t v19 = *(void *)(v26 + 16);
  if (v19)
  {
    unsigned __int8 v20 = (uint64_t *)(v26 + 32);
    uint64_t v21 = 1;
    while (1)
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = v21 * v22;
      if ((unsigned __int128)(v21 * (__int128)v22) >> 64 != (v21 * v22) >> 63) {
        break;
      }
      uint64_t v21 = v23;
      if (!--v19) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v23 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8E1F8], v13);
    sub_2574D1794(a1, a2, &v28, v24, v25, &v27, v23, (uint64_t)v16);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

void *sub_2574F7504(const void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  if (a1) {
    size_t v6 = a2 - (void)a1;
  }
  else {
    size_t v6 = 0;
  }
  return memmove(*(void **)(a3 + 48), a1, v6);
}

BOOL sub_2574F7570(unsigned __int8 *a1)
{
  unsigned __int8 v1 = *a1;
  sub_2574F6648((char *)&v4);
  unsigned __int8 v3 = v1;
  return sub_2574F6F28(&v4, &v3);
}

uint64_t sub_2574F75B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  uint64_t v22 = *MEMORY[0x263EF8340];
  uint64_t v21 = 0;
  uint64_t v5 = sub_2576A7EA0();
  *(_OWORD *)(v5 + 32) = 0u;
  *(void *)(v5 + 16) = 10;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_2576A7A50();
  LODWORD(Strong) = espresso_network_query_blob_shape();
  swift_release();
  if (Strong)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v8 = *(void *)(v5 + 16);
  if (v8)
  {
    if ((v21 & 0x8000000000000000) != 0)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
    }
    if (v8 < v21) {
      goto LABEL_24;
    }
    uint64_t v9 = 1;
    sub_2576A7810();
    sub_25746EC14();
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v12 = 0;
      uint64_t v9 = 1;
      do
      {
        uint64_t v13 = *(void *)(v10 + 8 * v12 + 32);
        if ((unsigned __int128)(v9 * (__int128)v13) >> 64 != (v9 * v13) >> 63) {
          goto LABEL_22;
        }
        v9 *= v13;
      }
      while (v11 != ++v12);
    }
  }
  else
  {
    sub_2576A7810();
    uint64_t v9 = 1;
  }
  uint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16);
  v14(&v20, a2, a3);
  uint64_t v15 = *(void *)(v20 + 16);
  if (v15)
  {
    int v16 = 0;
    uint64_t v17 = 1;
    while (1)
    {
      uint64_t v18 = *(void *)(v20 + 8 * v16 + 32);
      uint64_t v19 = v17 * v18;
      if ((unsigned __int128)(v17 * (__int128)v18) >> 64 != (v17 * v18) >> 63) {
        break;
      }
      ++v16;
      v17 *= v18;
      if (v15 == v16)
      {
        swift_bridgeObjectRelease();
        if (v9 == v19) {
          goto LABEL_17;
        }
LABEL_19:
        v14(&v20, a2, a3);
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (v9 != 1) {
    goto LABEL_19;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2574F782C()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_2576A7A50();
  LODWORD(Strong) = espresso_network_bind_buffer();
  uint64_t result = swift_release();
  if (Strong)
  {
    sub_2576A8730();
    sub_2576A7B00();
    type metadata accessor for EspressoBuffer();
    sub_2576A8A30();
    sub_2576A7B00();
    sub_25746BE6C();
  }
  return result;
}

uint64_t sub_2574F79AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 64))(sub_2574F9064, a1, MEMORY[0x263F8EE60] + 8, a2, a3);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  sub_2576A7A50();
  swift_beginAccess();
  LODWORD(Strong) = espresso_network_bind_buffer();
  swift_endAccess();
  swift_release();
  if (Strong)
  {
    sub_2576A8730();
    sub_2576A7B00();
    type metadata accessor for EspressoBuffer();
    sub_2576A8A30();
    sub_2576A7B00();
LABEL_6:
    sub_25746BE6C();
  }
  uint64_t result = sub_2574F75B4(a1, a2, a3);
  if (v9 != 2 || result | v8)
  {
    sub_2574F1EBC(result, v8, v9);
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_2574F7C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  objc_msgSend(Strong, sel_network);

  char v7 = *(unsigned char *)(a1 + 32);
  sub_2576A7A50();
  swift_beginAccess();
  LODWORD(Strong) = espresso_network_bind_buffer();
  swift_endAccess();
  swift_release();
  if (Strong)
  {
    sub_2576A8730();
    sub_2576A7B00();
    type metadata accessor for EspressoBuffer();
    sub_2576A8A30();
    sub_2576A7B00();
LABEL_9:
    sub_25746BE6C();
  }
  uint64_t result = sub_2574F75B4(a1, a2, a3);
  if (v10 != 2 || result | v9)
  {
    sub_2574F1EBC(result, v9, v10);
    goto LABEL_9;
  }
  if ((v7 & 1) == 0) {
    return sub_2574F9080(v3, a1, a2, a3);
  }
  return result;
}

uint64_t sub_2574F7E2C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(result + 32) == 1) {
    return sub_2574F8E78(v3, result, a2, a3);
  }
  return result;
}

uint64_t sub_2574F7E50(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v4 = result;
    uint64_t result = swift_beginAccess();
    *(void *)(a3 + 48) = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2574F7EAC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result = getpagesize();
  uint64_t v5 = (result - 1);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v5 & 0x80000000) == 0)
  {
    *a2 = (v5 & a1) == 0;
    return result;
  }
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

id sub_2574F7F50(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  size_t v6 = v5;
  v16[1] = *(id *)MEMORY[0x263EF8340];
  sub_2574A4924(0, &qword_26A0026E8);
  uint64_t v11 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  v16[0] = 0;
  id v12 = objc_msgSend(v6, sel_initWithMILProgram_primaryComputeUnit_computeUnits_preferredMetalDevice_computePrecision_error_, a1, a2, v11, a4, a5, v16);

  if (v12)
  {
    id v13 = v16[0];
  }
  else
  {
    id v14 = v16[0];
    sub_2576A7030();

    swift_willThrow();
  }

  swift_unknownObjectRelease();
  return v12;
}

void sub_2574F8084(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, void (*a7)(uint64_t *__return_ptr))
{
  uint64_t v11 = sub_2576A75C0();
  os_signpost_type_t v12 = sub_2576A83C0();
  os_signpost_id_t v13 = sub_2576A7580();
  buf = a1;
  _os_signpost_emit_with_name_impl(&dword_257455000, v11, v12, v13, a5, a6, a1, a2);
  a7(&v19);
  if (!v18)
  {
    os_signpost_type_t v14 = sub_2576A83B0();
    os_signpost_id_t v15 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v11, v14, v15, a5, a6, buf, a2);
  }
}

uint64_t sub_2574F8198(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7)
{
  os_signpost_type_t v12 = sub_2576A75C0();
  os_signpost_type_t v13 = sub_2576A83C0();
  os_signpost_id_t v14 = sub_2576A7580();
  _os_signpost_emit_with_name_impl(&dword_257455000, v12, v13, v14, a5, a6, a1, a2);
  objc_msgSend(*(id *)(a7 + 80), sel_plan);
  uint64_t v15 = espresso_plan_execute_sync();
  LOBYTE(a7) = sub_2576A83B0();
  os_signpost_id_t v16 = sub_2576A7580();
  _os_signpost_emit_with_name_impl(&dword_257455000, v12, (os_signpost_type_t)a7, v16, a5, a6, a1, a2);
  swift_release();

  return v15;
}

uint64_t sub_2574F829C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_2574F8370(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2574A4AE8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2574A4AE8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    sub_2576A7810();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_2574F8370(void *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_2574F84C8((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_2576A8560();
      uint64_t result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    uint64_t result = sub_2574F85A0(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    uint64_t v8 = sub_2576A8860();
    if (!v8)
    {
      uint64_t result = sub_2576A8B50();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

void *sub_2574F84C8(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_2576A8C60();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

uint64_t sub_2574F85A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2574F8638(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_2574F8870(0, *(void *)(v2 + 16) + 1, 1, v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = (uint64_t)sub_2574F8870((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2574F8638(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0)
  {
    uint64_t v2 = sub_2576A7B40();
    if (v2) {
      goto LABEL_6;
    }
    return MEMORY[0x263F8EE78];
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
LABEL_6:
  unint64_t v3 = sub_2574F87AC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_2576A8740();
    if ((v6 & 1) != 0 || v5 != v2) {
      goto LABEL_14;
    }
    return (uint64_t)v4;
  }
  sub_2576A8C60();
  __break(1u);
LABEL_14:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

void *sub_2574F87AC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F30);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2574F8814(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v6 = sub_2576A7B90();
    OUTLINED_FUNCTION_4_24(v6);
    return v7 | 4;
  }
  else
  {
    uint64_t v3 = MEMORY[0x25A2B8140](15, a1 >> 16);
    OUTLINED_FUNCTION_4_24(v3);
    return v4 | 8;
  }
}

char *sub_2574F8870(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    int64_t v9 = *(void *)(a4 + 16);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000F30);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  os_signpost_type_t v12 = v10 + 32;
  os_signpost_type_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_2574F8A20(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2574F8948(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_2574F8948(char *__src, size_t __n, char *__dst)
{
  if ((__n & 0x8000000000000000) != 0 || (&__dst[__n] > __src ? (BOOL v3 = &__src[__n] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)sub_2576A8C60();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, __n);
  }
  return result;
}

char *sub_2574F8A20(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_2576A8C60();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_2574F8AB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2574F4680(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_2574F8AD0(uint64_t *a1)
{
  return sub_2574F4C20(a1) & 1;
}

uint64_t sub_2574F8AF0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    unint64_t v6 = (void *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_2575E85F4(0, v5, v6);
    char v7 = sub_2574F8C74((uint64_t)v6, v5, v3, a2);
  }
  else
  {
    int64_t v8 = (void *)swift_slowAlloc();
    sub_2575E85F4(0, v5, v8);
    char v7 = sub_2574F8C74((uint64_t)v8, v5, v3, a2);
    MEMORY[0x25A2BAC80](v8, -1, -1);
  }
  return v7 & 1;
}

uint64_t sub_2574F8C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = *(void *)(a3 + 16);
  if (v28)
  {
    uint64_t v29 = a4 + 56;
    uint64_t v27 = a3 + 32;
    sub_2576A7810();
    uint64_t v26 = 0;
    uint64_t v5 = 0;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v27 + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_2576A9090();
      sub_2576A7810();
      sub_2576A78E0();
      uint64_t v9 = sub_2576A9100();
      uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = 1 << v11;
      if (((1 << v11) & *(void *)(v29 + 8 * (v11 >> 6))) == 0) {
        goto LABEL_22;
      }
      uint64_t v14 = *(void *)(a4 + 48);
      uint64_t v15 = (void *)(v14 + 16 * v11);
      BOOL v16 = *v15 == v8 && v15[1] == v7;
      if (!v16 && (sub_2576A8F60() & 1) == 0) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v18 = *(void *)(a1 + 8 * v12);
      *(void *)(a1 + 8 * v12) = v13 | v18;
      if ((v13 & v18) == 0)
      {
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          return result;
        }
        if (++v26 == *(void *)(a4 + 16))
        {
          uint64_t v24 = 1;
LABEL_26:
          swift_bridgeObjectRelease();
          return v24;
        }
      }
LABEL_23:
      if (++v5 == v28)
      {
        uint64_t v24 = 0;
        goto LABEL_26;
      }
    }
    uint64_t v19 = ~v10;
    for (unint64_t i = v11 + 1; ; unint64_t i = v21 + 1)
    {
      unint64_t v21 = i & v19;
      if (((*(void *)(v29 + (((i & v19) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v19)) & 1) == 0) {
        break;
      }
      uint64_t v22 = (void *)(v14 + 16 * v21);
      BOOL v23 = *v22 == v8 && v22[1] == v7;
      if (v23 || (sub_2576A8F60() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v21 >> 6;
        uint64_t v13 = 1 << v21;
        goto LABEL_10;
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  return 0;
}

uint64_t sub_2574F8E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2574F6648((char *)v20);
  char v8 = v20[0];
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v20, a3, a4);
  unsigned __int8 v9 = v20[0];
  LOBYTE(v20[0]) = v8;
  unsigned __int8 v21 = v9;
  if (!sub_2574F6F28((unsigned __int8 *)v20, &v21)) {
    return (*(uint64_t (**)(void *(*)(void *, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 64))(sub_2574F9008, a2, MEMORY[0x263F8EE60] + 8, a3, a4);
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = sub_2574F6944();
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = v10;
  uint64_t v15 = v12;
  char v16 = v8;
  unsigned __int8 v17 = v9;
  uint64_t v18 = a1;
  uint64_t v19 = a4;
  return (*(uint64_t (**)(uint64_t (*)(float *, uint64_t)))(a4 + 64))(sub_2574F9024);
}

void *sub_2574F9008(void *a1, uint64_t a2)
{
  return sub_2574F712C(a1, a2, v2);
}

uint64_t sub_2574F9024(float *a1, uint64_t a2)
{
  return sub_2574F6F7C(a1, a2, *(const float **)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(unsigned char *)(v2 + 33), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_2574F904C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return swift_unknownObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_2574F9058(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return swift_unknownObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_2574F9064(uint64_t a1, uint64_t a2)
{
  return sub_2574F7E50(a1, a2, v2);
}

uint64_t sub_2574F9080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_2574F6648((char *)v17);
  int v7 = LOBYTE(v17[0]);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 8))(v17, a3, a4);
  char v8 = v17[0];
  LOBYTE(v17[0]) = v7;
  LOBYTE(v16) = v8;
  if (!sub_2574F6F28((unsigned __int8 *)v17, (unsigned __int8 *)&v16)) {
    return (*(uint64_t (**)(void *(*)(const void *, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 56))(sub_2574F9290, a2, MEMORY[0x263F8EE60] + 8, a3, a4);
  }
  swift_beginAccess();
  sub_2574F677C(&v16);
  uint64_t result = v16;
  uint64_t v10 = *(void *)(v16 + 16);
  if (v10)
  {
    uint64_t v11 = (uint64_t *)(v16 + 32);
    uint64_t v12 = 1;
    while (1)
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = v12 * v13;
      if ((unsigned __int128)(v12 * (__int128)v13) >> 64 != (v12 * v13) >> 63) {
        break;
      }
      uint64_t v12 = v14;
      if (!--v10) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v14 = 1;
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v7 - 1) > 0xA) {
      uint64_t v15 = 1;
    }
    else {
      uint64_t v15 = qword_2576B2238[(char)(v7 - 1)];
    }
    if ((unsigned __int128)(v14 * (__int128)v15) >> 64 == (v14 * v15) >> 63)
    {
      MEMORY[0x270FA5388](result);
      return (*(uint64_t (**)(uint64_t (*)(const float *, uint64_t)))(a4 + 56))(sub_2574F92AC);
    }
  }
  __break(1u);
  return result;
}

void *sub_2574F9290(const void *a1, uint64_t a2)
{
  return sub_2574F7504(a1, a2, v2);
}

uint64_t sub_2574F92AC(const float *a1, uint64_t a2)
{
  return sub_2574F7354(a1, a2, *(unsigned char *)(v2 + 16), *(float **)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_2574F92D4@<X0>(void *a1@<X8>)
{
  return sub_2574F373C(*(void *)(v1 + 16), a1);
}

unint64_t sub_2574F92F0()
{
  unint64_t result = qword_26A003530;
  if (!qword_26A003530)
  {
    sub_2576A8340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003530);
  }
  return result;
}

uint64_t sub_2574F9340(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_2574F9354(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_2574F9368(uint64_t result)
{
  if (result)
  {
    sub_2576A7810();
    return sub_2576A7810();
  }
  return result;
}

void OUTLINED_FUNCTION_3_23()
{
  uint64_t v1 = *(void *)(v0 - 312);
  *(void *)(v0 - 320) = *(void *)(v0 - 320);
  *(void *)(v0 - 312) = v1;
}

unint64_t OUTLINED_FUNCTION_4_24(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return swift_beginAccess();
}

__n128 OUTLINED_FUNCTION_12_17()
{
  return *(__n128 *)(v0 - 320);
}

void sub_2574F946C()
{
  id v1 = objc_msgSend(v0, sel_shape);
  sub_2574CA6FC();
  unint64_t v2 = sub_2576A7DF0();

  if (v2 >> 62) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (v3 >= 1)
    {
      uint64_t v4 = 0;
      uint64_t v5 = 1;
      while (1)
      {
        id v6 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25A2B8DB0](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
        int v7 = v6;
        uint64_t v8 = (uint64_t)objc_msgSend(v6, sel_integerValue);

        if ((unsigned __int128)(v5 * (__int128)v8) >> 64 != (v5 * v8) >> 63) {
          break;
        }
        ++v4;
        v5 *= v8;
        if (v3 == v4) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_12:
      sub_2576A7810();
      uint64_t v3 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
      if (!v3) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_2574F95A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result >= a2)
  {
    BOOL v4 = __OFSUB__(result, a3);
    BOOL v3 = result - a3 < 0;
  }
  else
  {
    BOOL v4 = 0;
    BOOL v3 = 0;
  }
  if (v3 == v4) {
    __break(1u);
  }
  return result;
}

uint64_t Dense.weight.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_257486C84();
}

uint64_t sub_2574F9654@<X0>(void *a1@<X8>)
{
  uint64_t result = Dense.weight.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_2574F96D0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return Dense.weight.setter(&v2);
}

uint64_t Dense.weight.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return Parameter.wrappedValue.setter(&v2);
}

uint64_t (*Dense.weight.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_2574B203C;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t Dense.$weight.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 9);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_retain();
}

void Dense.bias.getter(uint64_t *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 26) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 32);
  if ((~v2 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  sub_257486C84();
}

void sub_2574F98D0(void *a1@<X8>)
{
  Dense.bias.getter(&v2);
  *a1 = v2;
}

uint64_t sub_2574F994C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return Dense.bias.setter(&v2);
}

uint64_t Dense.bias.setter(uint64_t *a1)
{
  uint64_t result = *a1;
  if (*(unsigned char *)(v1 + 26) == 1)
  {
    if (result)
    {
      uint64_t v3 = result;
      return Parameter.wrappedValue.setter(&v3);
    }
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_8;
  }
  if (result)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_8:
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t *(*Dense.bias.modify(uint64_t *a1))(uint64_t *result, char a2)
{
  a1[1] = v1;
  if (*(unsigned char *)(v1 + 26) != 1)
  {
    *a1 = 0;
    return sub_2574F9B14;
  }
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_2574F9B14;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  uint64_t result = (uint64_t *(*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t *sub_2574F9B14(uint64_t *result, char a2)
{
  uint64_t v2 = *result;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(result[1] + 26))
    {
      if (v2)
      {
        uint64_t v3 = *result;
        return (uint64_t *)Parameter.wrappedValue.setter(&v3);
      }
      goto LABEL_14;
    }
    if (!v2) {
      return result;
    }
    swift_release();
LABEL_16:
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  if (!*(unsigned char *)(result[1] + 26))
  {
    if (!v2) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!v2)
  {
LABEL_14:
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
LABEL_17:
    uint64_t result = (uint64_t *)sub_2576A8B60();
    __break(1u);
    return result;
  }
  uint64_t v3 = *result;
  swift_retain();
  Parameter.wrappedValue.setter(&v3);
LABEL_9:
  return (uint64_t *)swift_release();
}

uint64_t Dense.$bias.getter@<X0>(uint64_t a1@<X8>)
{
  if (v1[26] == 1)
  {
    if (v1[25]) {
      __int16 v3 = 256;
    }
    else {
      __int16 v3 = 0;
    }
    __int16 v4 = v3 | v1[24];
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v4 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

uint64_t Dense.isEveryParameterInitialized.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v1 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  BOOL v4 = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  int v5 = !v4;
  uint64_t result = v5 ^ 1u;
  if (v4 && *(unsigned char *)(v0 + 26))
  {
    uint64_t v6 = *(void *)(*(void *)(v0 + 16) + 32);
    uint64_t result = (~v6 & 0xF000000000000007) != 0 && v6 < 0;
  }
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t Dense.unitCount.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_2574F9CDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  char v5 = *((unsigned char *)a1 + 8);
  char v6 = *((unsigned char *)a1 + 9);
  uint64_t v7 = *(void *)a2;
  unsigned int v8 = *(unsigned __int16 *)(a2 + 8);
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  uint64_t v9 = OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026F8);
  uint64_t v10 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v10 + 16) = 0;
  uint64_t v11 = *(void *)(v4 + 32);
  if ((~v11 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_11:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_12;
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_11;
  }
  uint64_t v12 = v10;
  OUTLINED_FUNCTION_14_17();
  if (!(!v14 & v13))
  {
LABEL_12:
    swift_retain();
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v15 = *(void *)(v9 + 40);
  if (v7)
  {
    char v16 = v8 & 1;
    int v17 = (v8 >> 8) & 1;
    swift_retain();
    swift_retain();
    uint64_t v18 = v7;
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    swift_retain();
    swift_retain();
    uint64_t v18 = sub_25748FC24(0);
    char v16 = 0;
    LOBYTE(v17) = 1;
  }
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a3 = v4;
  *(unsigned char *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 9) = v6;
  *(void *)(a3 + 16) = v18;
  *(unsigned char *)(a3 + 24) = v16;
  *(unsigned char *)(a3 + 25) = v17;
  *(unsigned char *)(a3 + 26) = v7 != 0;
  *(void *)(a3 + 32) = v15;
  *(void *)(a3 + 40) = v12;
  return result;
}

void Dense.init(weight:bias:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026F8);
  uint64_t v6 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v6 + 16) = 0;
  OUTLINED_FUNCTION_1_4();
  uint64_t v7 = swift_retain();
  uint64_t v14 = OUTLINED_FUNCTION_16_15(v7, v8, v9, v10, v11, v12, v13);
  swift_retain();
  swift_release();
  if (v5)
  {
    uint64_t v15 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_16_15(v15, v16, v17, v18, v19, v20, v21);
  }
  else
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_20_7();
  }
  uint64_t v22 = *(void *)(v4 + 16);
  uint64_t v23 = *(void *)(v22 + 152);
  if (*(void *)(v23 + 16) <= 1uLL)
  {
LABEL_12:
    sub_2576A7810();
    OUTLINED_FUNCTION_6_10();
  }
  uint64_t v24 = *(void *)(v23 + 40);
  if (!v5)
  {
LABEL_9:
    swift_release();
    *(void *)a3 = v14;
    OUTLINED_FUNCTION_17_14();
    *(unsigned char *)(a3 + 26) = v5 != 0;
    *(void *)(a3 + 32) = v24;
    *(void *)(a3 + 40) = v6;
    return;
  }
  uint64_t v25 = *(void *)(*(void *)(v5 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  uint64_t v27 = *(void *)(v22 + 152);
  if (!*(void *)(v27 + 16))
  {
    sub_2576A7810();
    goto LABEL_12;
  }
  *(void *)(inited + 32) = *(void *)(v27 + 32);
  char v28 = sub_257654B3C(v25, inited);
  swift_setDeallocating();
  if (v28)
  {
    swift_release();
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_35_1();
  sub_2576A8B60();
  __break(1u);
}

void Dense.init(unitCount:weightInitializer:biasInitializer:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026F8);
  uint64_t v6 = OUTLINED_FUNCTION_27_3();
  *(unsigned char *)(v6 + 16) = 0;
  if (a1 < 1)
  {
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    sub_2576A8B60();
    __break(1u);
  }
  else
  {
    uint64_t v7 = v6;
    OUTLINED_FUNCTION_1_4();
    swift_retain();
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_25748FBC8(v8);
    swift_allocObject();
    swift_retain();
    if (a2) {
      sub_25748FBC8(a2);
    }
    else {
      sub_25748FC24(0);
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(void *)a3 = v9;
    OUTLINED_FUNCTION_17_14();
    *(unsigned char *)(a3 + 26) = a2 != 0;
    *(void *)(a3 + 32) = a1;
    *(void *)(a3 + 40) = v7;
  }
}

uint64_t Dense.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)a1 + 16) + 152);
  uint64_t v3 = *(void *)(v2 + 16);
  if ((unint64_t)(v3 - 5) <= 0xFFFFFFFFFFFFFFFCLL)
  {
    uint64_t v9 = *(void *)(v2 + 16);
    long long v10 = xmmword_2576AD000;
    char v11 = 0;
    long long v12 = xmmword_2576ABB30;
    char v13 = 1;
    char v14 = 7;
    sub_25746BF88();
  }
  uint64_t v4 = *(void *)(v1 + 32);
  int v5 = *(unsigned __int8 *)(v1 + 26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_2576ABB30;
  *(void *)(v6 + 32) = v4;
  swift_retain();
  *(void *)(v6 + 40) = TensorShape.subscript.getter(v3 - 1);
  uint64_t v9 = v6;
  sub_25748FC8C(&v9);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v8 + 16) = xmmword_2576ABB10;
    *(void *)(v8 + 32) = v4;
    uint64_t v9 = v8;
    swift_retain();
    sub_25748FC8C(&v9);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Dense.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[2];
  char v7 = *((unsigned char *)v2 + 26);
  uint64_t v8 = *(void *)(*(void *)(*a1 + 16) + 152);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002700);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2576ABB50;
  *(void *)(v9 + 40) = 0;
  *(void *)(v9 + 48) = 0;
  *(void *)(v9 + 32) = 0;
  *(unsigned char *)(v9 + 56) = -2;
  *(void *)(v9 + 72) = 0;
  *(void *)(v9 + 80) = 0;
  *(void *)(v9 + 64) = 0;
  *(unsigned char *)(v9 + 88) = -3;
  OUTLINED_FUNCTION_7_20();
  if (v11) {
    goto LABEL_36;
  }
  if ((v10 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_14_17();
  if (!(!v11 & v14)) {
    goto LABEL_31;
  }
  uint64_t v15 = v12;
  *(void *)(v12 + 96) = v2[5];
  *(_OWORD *)(v12 + 104) = xmmword_2576B2290;
  *(unsigned char *)(v12 + 120) = 0;
  *(_OWORD *)uint64_t v57 = xmmword_2576ABB30;
  v57[16] = 1;
  *(void *)&v57[24] = v12;
  *(void *)&long long v53 = v8;
  sub_2576A7810();
  sub_2576A7810();
  if ((sub_257672B90((uint64_t *)&v53) & 1) == 0)
  {
    *(void *)uint64_t v57 = v8;
    *(_OWORD *)&v57[8] = xmmword_2576AD000;
    v57[24] = 0;
    *(_OWORD *)&v57[32] = xmmword_2576ABB30;
    LOBYTE(v58) = 1;
    *(void *)&long long v59 = v15;
    char v61 = 11;
    sub_2576A7810();
    sub_2574A88A0(2, 4, 1);
    sub_2576A7810();
    OUTLINED_FUNCTION_13_16();
    goto LABEL_33;
  }
  sub_2574A88B4(2, 4, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  *(void *)uint64_t v57 = v4;
  Tensor.scalarType.getter();
  (*(void (**)(long long *__return_ptr))(v16 + 32))(&v53);
  OUTLINED_FUNCTION_7_20();
  if (v11) {
    goto LABEL_36;
  }
  if ((v17 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
  unsigned int v18 = v53;
  *(void *)uint64_t v57 = v17 & 0x7FFFFFFFFFFFFFFFLL;
  Tensor.scalarType.getter();
  (*(void (**)(unsigned char *__return_ptr))(v19 + 32))(v57);
  uint64_t v20 = v57[0];
  if (v18 != v57[0])
  {
    if (qword_26A000960 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_26A030AB8;
    unint64_t v21 = v20 + 13 * v18;
    if (v21 >= *(void *)(qword_26A030AB8 + 16))
    {
      __break(1u);
LABEL_31:
      *(void *)&v57[8] = 0;
      *(void *)&v57[16] = 0;
      *(void *)uint64_t v57 = 1;
      v57[24] = -1;
      *(void *)&v57[40] = 0;
      uint64_t v58 = 0;
      *(void *)&v57[32] = v13;
      LOBYTE(v59) = -1;
      char v61 = 4;
      sub_2576A7810();
      sub_2576A7810();
      goto LABEL_33;
    }
    unsigned int v18 = *(unsigned __int8 *)(qword_26A030AB8 + v21 + 32);
    if (v18 == 13)
    {
      *(void *)uint64_t v57 = v4;
      Tensor.scalarType.getter();
      OUTLINED_FUNCTION_7_20();
      if (!v11)
      {
        if (v44 < 0)
        {
LABEL_40:
          uint64_t v45 = v42;
          uint64_t v46 = v43;
          *(void *)uint64_t v57 = v44 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v47 = Tensor.scalarType.getter();
          *(void *)uint64_t v57 = v45;
          *(void *)&v57[8] = v46;
          *(_OWORD *)&v57[16] = xmmword_2576AD000;
          v57[32] = 0;
          *(void *)&v57[40] = v47;
          uint64_t v58 = v48;
          long long v59 = xmmword_2576AE9C0;
          char v60 = 0;
          char v61 = 1;
          OUTLINED_FUNCTION_13_16();
LABEL_33:
          sub_25746BF88();
        }
        goto LABEL_38;
      }
      goto LABEL_36;
    }
  }
  uint64_t v22 = *(void *)(v4 + 16);
  *(void *)&long long v53 = *(void *)(v22 + 152);
  OUTLINED_FUNCTION_7_20();
  if (v11) {
    goto LABEL_36;
  }
  if ((v23 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
  *(void *)&long long v49 = *(void *)(*(void *)((v23 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
  sub_25769173C((uint64_t)&v53, (uint64_t)&v49, v57);
  OUTLINED_FUNCTION_7_20();
  if (v11)
  {
LABEL_36:
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_39:
    uint64_t v42 = OUTLINED_FUNCTION_16_7();
    __break(1u);
    goto LABEL_40;
  }
  if ((v24 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
  uint64_t v26 = *(void *)v57;
  uint64_t v27 = *(void *)((v24 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  if (v7)
  {
    uint64_t v28 = *(void *)(v6 + 32);
    if ((v25 & ~v28) != 0)
    {
      if (v28 < 0)
      {
        uint64_t v29 = *(void *)((v28 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        goto LABEL_22;
      }
LABEL_38:
      OUTLINED_FUNCTION_0_18();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_35_1();
      goto LABEL_39;
    }
    goto LABEL_36;
  }
  uint64_t v29 = 0;
LABEL_22:
  *(void *)&long long v53 = v26;
  BYTE8(v53) = v18;
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = v7;
  swift_retain();
  swift_retain();
  uint64_t v30 = sub_25761BED4((uint64_t)sub_2574FB66C);
  uint64_t v32 = v31;
  swift_release();
  *(_OWORD *)&v57[8] = xmmword_2576B22A0;
  *(_OWORD *)&v57[24] = xmmword_2576B22B0;
  *(void *)uint64_t v57 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  *(void *)&v57[40] = "init(id:input:weight:bias:resultDescriptor:creationSite:backward:)";
  uint64_t v58 = 66;
  LOWORD(v59) = 2;
  type metadata accessor for LinearOperation();
  swift_allocObject();
  uint64_t v33 = sub_25752E1B8(0, 0, 0, v22, v27, v29, (uint64_t *)&v53, (uint64_t)v57, v30, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  uint64_t v35 = *(void *)(v5 + 32);
  if ((~v35 & 0xF000000000000007) == 0) {
    goto LABEL_36;
  }
  if ((v35 & 0x8000000000000000) == 0) {
    goto LABEL_38;
  }
  uint64_t v36 = inited + 32;
  *(void *)(inited + 32) = v35 & 0x7FFFFFFFFFFFFFFFLL;
  *(void *)(inited + 40) = v4;
  swift_retain();
  sub_257486C70(v35);
  swift_retain();
  sub_2576A7810();
  char v37 = 0;
  uint64_t v38 = 0;
  while (1)
  {
    char v39 = v37;
    sub_25747B47C(*(void *)(*(void *)(v36 + 8 * v38) + 16) + 168, (uint64_t)&v49);
    if (*((void *)&v50 + 1)) {
      break;
    }
    sub_25747B4E4((uint64_t)&v49);
    char v37 = 1;
    uint64_t v38 = 1;
    if (v39)
    {
      swift_bridgeObjectRelease();
      int v56 = 0;
      long long v55 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease();
  long long v53 = v49;
  long long v54 = v50;
  long long v55 = v51;
  int v56 = v52;
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v40 = (uint64_t (**)(void, void))sub_2574FBB3C(&qword_26A001830, (void (*)(uint64_t))type metadata accessor for LinearOperation);
  sub_257613838(v33, v40, 0, (uint64_t)&v53, a2);
  return swift_release();
}

uint64_t sub_2574FAA6C(uint64_t result, void *a2, char a3)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v8 = a2[2];
  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v8 == 1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)(result + 32);
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  if ((a3 & 1) == 0)
  {
    uint64_t v16 = 0;
    uint64_t v40 = 0;
    uint64_t v13 = *(void *)(v9 + 16);
    uint64_t v14 = *(void *)(v11 + 16);
    uint64_t v15 = *(void *)(v10 + 16);
LABEL_8:
    long long v48 = xmmword_2576B22A0;
    long long v49 = xmmword_2576B22C0;
    uint64_t v47 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
    long long v50 = "init(id:gradient:input:weight:bias:creationSite:)";
    uint64_t v51 = 49;
    __int16 v52 = 2;
    type metadata accessor for LinearGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v17 = sub_25752E474(0, 0, 0, v13, v14, v15, v16, (uint64_t)&v47);
    sub_25747B47C(v13 + 168, (uint64_t)v46);
    sub_25747B47C((uint64_t)v46, (uint64_t)v45);
    sub_25747B47C((uint64_t)v45, (uint64_t)v44);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v18 = v43;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v19 = v42;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    type metadata accessor for TensorRepresentation();
    uint64_t v20 = swift_allocObject();
    v41[0] = 1;
    uint64_t v21 = sub_257583D48(v17, 0, v44, 0x100000000, v18, v19, v20);
    type metadata accessor for TensorHandle();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v21;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v45);
    sub_2574FBB3C(&qword_26A001828, (void (*)(uint64_t))type metadata accessor for LinearGradientOperation);
    sub_25747B47C((uint64_t)v46, (uint64_t)v45);
    sub_25747B47C((uint64_t)v45, (uint64_t)v44);
    swift_retain_n();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v23 = v43;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v24 = v42;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    uint64_t v25 = swift_allocObject();
    v41[0] = 1;
    uint64_t v26 = sub_257583D48(v17, 1, v44, 0x100000000, v23, v24, v25);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    swift_retain();
    sub_2576139A8();
    swift_release();
    swift_release();
    sub_25747B4E4((uint64_t)v45);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_2576ABB30;
    swift_retain();
    swift_retain();
    uint64_t v29 = sub_2574E8C6C();
    *(void *)(v28 + 32) = v22;
    *(void *)(v28 + 40) = v29;
    *(void *)(v28 + 48) = v30;
    swift_retain();
    swift_retain();
    uint64_t v31 = sub_2574E8C6C();
    *(void *)(v28 + 56) = v27;
    *(void *)(v28 + 64) = v31;
    *(void *)(v28 + 72) = v32;
    if (!v40)
    {
      sub_25747B4E4((uint64_t)v46);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v28;
    }
    sub_25747B47C((uint64_t)v46, (uint64_t)v45);
    sub_25747B47C((uint64_t)v45, (uint64_t)v44);
    swift_retain();
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v33 = v43;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v41);
    swift_release();
    uint64_t v34 = v42;
    swift_retain();
    sub_2574718B0((uint64_t)v41);
    uint64_t v35 = swift_allocObject();
    v41[0] = 1;
    uint64_t v36 = sub_257583D48(v17, 2, v44, 0x100000000, v33, v34, v35);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v36;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v45);
    swift_retain();
    swift_retain();
    uint64_t v3 = sub_2574E8C6C();
    uint64_t v6 = v37;
    unint64_t v4 = *(void *)(v28 + 16);
    unint64_t v7 = v4 + 1;
    if (v4 < *(void *)(v28 + 24) >> 1)
    {
LABEL_10:
      *(void *)(v28 + 16) = v7;
      uint64_t v38 = (void *)(v28 + 24 * v4);
      v38[4] = v5;
      v38[5] = v3;
      v38[6] = v6;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
      sub_25747B4E4((uint64_t)v46);
      return v28;
    }
LABEL_16:
    sub_257472D74();
    uint64_t v28 = v39;
    goto LABEL_10;
  }
  if (v8 >= 3)
  {
    uint64_t v12 = a2[6];
    uint64_t v13 = *(void *)(v9 + 16);
    uint64_t v14 = *(void *)(v11 + 16);
    uint64_t v15 = *(void *)(v10 + 16);
    uint64_t v16 = *(void *)(v12 + 16);
    swift_retain();
    uint64_t v40 = v12;
    swift_retain();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2574FB0A8()
{
  uint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2574FB100(char a1)
{
  if (a1) {
    return 1935763810;
  }
  else {
    return 0x746867696577;
  }
}

uint64_t sub_2574FB12C(char *a1, char *a2)
{
  return sub_2575745F0(*a1, *a2);
}

uint64_t sub_2574FB138()
{
  return sub_2576A3690();
}

uint64_t sub_2574FB140()
{
  return sub_25746FB24();
}

uint64_t sub_2574FB148()
{
  return sub_2575EEBB0();
}

uint64_t sub_2574FB150@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574FB0A8();
  *a1 = result;
  return result;
}

uint64_t sub_2574FB180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2574FB100(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2574FB1AC()
{
  return sub_2574FB100(*v0);
}

uint64_t sub_2574FB1B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2574FB0FC();
  *a1 = result;
  return result;
}

uint64_t sub_2574FB1DC(uint64_t a1)
{
  unint64_t v2 = sub_2574FB674();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574FB218(uint64_t a1)
{
  unint64_t v2 = sub_2574FB674();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Dense.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002708);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574FB674();
  sub_2576A91F0();
  if (!v2)
  {
    sub_2574B3944();
    OUTLINED_FUNCTION_8_22();
    sub_2576A8D50();
    int v29 = HIBYTE(v22);
    int v30 = v22;
    OUTLINED_FUNCTION_8_22();
    sub_2576A8D00();
    uint64_t v19 = v21;
    __int16 v20 = v22;
    uint64_t v17 = v21;
    __int16 v18 = v22;
    sub_2574F9CDC(&v19, (uint64_t)&v17, (uint64_t)&v21);
    uint64_t v6 = OUTLINED_FUNCTION_6_21();
    v7(v6);
    char v8 = v22;
    char v9 = HIBYTE(v22);
    uint64_t v10 = v23;
    char v11 = v24;
    char v12 = v25;
    char v13 = v26;
    uint64_t v14 = v27;
    uint64_t v15 = v28;
    *(void *)a2 = v21;
    *(unsigned char *)(a2 + 8) = v8;
    *(unsigned char *)(a2 + 9) = v9;
    *(void *)(a2 + 16) = v10;
    *(unsigned char *)(a2 + 24) = v11;
    *(unsigned char *)(a2 + 25) = v12;
    *(unsigned char *)(a2 + 26) = v13;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t Dense.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002718);
  OUTLINED_FUNCTION_0_8();
  uint64_t v20 = v4;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  char v9 = *((unsigned char *)v1 + 8);
  char v10 = *((unsigned char *)v1 + 9);
  uint64_t v19 = v1[2];
  int v24 = *((unsigned __int8 *)v1 + 24);
  LODWORD(v6) = *((unsigned __int8 *)v1 + 26);
  int v17 = *((unsigned __int8 *)v1 + 25);
  int v18 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574FB674();
  sub_2576A9230();
  uint64_t v22 = v8;
  LOBYTE(v23) = v9;
  HIBYTE(v23) = v10;
  char v25 = 0;
  sub_2574B3990();
  OUTLINED_FUNCTION_12_18();
  uint64_t v11 = v21;
  sub_2576A8E40();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v3);
  }
  uint64_t v14 = v19;
  uint64_t v13 = v20;
  if (v18)
  {
    if (v17) {
      __int16 v15 = 256;
    }
    else {
      __int16 v15 = 0;
    }
    __int16 v16 = v15 | v24;
    swift_retain();
  }
  else
  {
    uint64_t v14 = 0;
    __int16 v16 = 0;
  }
  uint64_t v22 = v14;
  __int16 v23 = v16;
  char v25 = 1;
  OUTLINED_FUNCTION_12_18();
  sub_2576A8DE0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v7, v3);
}

uint64_t sub_2574FB60C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Dense.init(from:)(a1, a2);
}

uint64_t sub_2574FB624(void *a1)
{
  return Dense.encode(to:)(a1);
}

unint64_t sub_2574FB63C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a1, 1);
  unint64_t result = a1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (result >= *(void *)(a2 + 16)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_2574FB65C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_2574FB66C(uint64_t a1, void *a2)
{
  return sub_2574FAA6C(a1, a2, *(unsigned char *)(v2 + 16));
}

unint64_t sub_2574FB674()
{
  unint64_t result = qword_26A002710;
  if (!qword_26A002710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002710);
  }
  return result;
}

uint64_t destroy for Dense()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Dense(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Dense(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Dense(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Dense(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Dense(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Dense()
{
  return &type metadata for Dense;
}

unsigned char *storeEnumTagSinglePayload for Dense.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574FBA14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Dense.CodingKeys()
{
  return &type metadata for Dense.CodingKeys;
}

unint64_t sub_2574FBA50()
{
  unint64_t result = qword_26A002720;
  if (!qword_26A002720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002720);
  }
  return result;
}

unint64_t sub_2574FBAA0()
{
  unint64_t result = qword_26A002728;
  if (!qword_26A002728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002728);
  }
  return result;
}

unint64_t sub_2574FBAF0()
{
  unint64_t result = qword_26A002730;
  if (!qword_26A002730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002730);
  }
  return result;
}

uint64_t sub_2574FBB3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_6_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_18()
{
  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_16_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  *(unsigned char *)(v8 - 132) = v7;
  return sub_25748FB58((uint64_t *)va, (unint64_t)v7 << 32);
}

void OUTLINED_FUNCTION_17_14()
{
  *(_WORD *)(v0 + 8) = 256;
  *(void *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 24) = 256;
}

uint64_t sub_2574FBC48(void *a1, uint64_t a2)
{
  uint64_t v7 = *(unsigned __int8 *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2576AC2A0;
  unint64_t v9 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v7)
  {
    if (v9) {
      MEMORY[0x25A2B8DB0](0, a2);
    }
    else {
      id v10 = *(id *)(a2 + 32);
    }
    OUTLINED_FUNCTION_1_34();
    if (v9) {
      MEMORY[0x25A2B8DB0](1, a2);
    }
    else {
      id v12 = *(id *)(a2 + 40);
    }
    OUTLINED_FUNCTION_0_33();
    uint64_t v13 = &selRef_cumulativeProductWithTensor_axisTensor_exclusive_reverse_name_;
  }
  else
  {
    if (v9) {
      MEMORY[0x25A2B8DB0](0, a2);
    }
    else {
      id v11 = *(id *)(a2 + 32);
    }
    OUTLINED_FUNCTION_1_34();
    if (v9) {
      MEMORY[0x25A2B8DB0](1, a2);
    }
    else {
      id v14 = *(id *)(a2 + 40);
    }
    OUTLINED_FUNCTION_0_33();
    uint64_t v13 = &selRef_cumulativeSumWithTensor_axisTensor_exclusive_reverse_name_;
  }
  id v15 = sub_2574FC050(v7, a2, v3, a2 & 1, v4, v2, a1, (SEL *)v13);

  *(void *)(v8 + 32) = v15;
  sub_2576A7E20();
  return v8;
}

uint64_t sub_2574FBDAC(void *a1, uint64_t a2)
{
  return sub_2574FBC48(a1, a2);
}

uint64_t sub_2574FBDC4(void *a1, uint64_t a2)
{
  return sub_2574FBDE4(a1, a2, (SEL *)&selRef_sortWithTensor_axis_descending_name_);
}

uint64_t sub_2574FBDE4(void *a1, uint64_t a2, SEL *a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2576AC2A0;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v8 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v8 = *(id *)(a2 + 32);
  }
  unint64_t v9 = v8;
  uint64_t v10 = *(void *)(v3 + 48);
  char v11 = *(unsigned char *)(v3 + 56);
  uint64_t v13 = *(void *)(v3 + 24);
  uint64_t v12 = *(void *)(v3 + 32);
  sub_2576A7810();
  id v14 = sub_2574FC0EC((uint64_t)v9, v10, v11, v13, v12, a1, a3);

  *(void *)(v7 + 32) = v14;
  sub_2576A7E20();
  return v7;
}

uint64_t sub_2574FBEE0(void *a1, uint64_t a2)
{
  return sub_2574FBDE4(a1, a2, (SEL *)&selRef_argSortWithTensor_axis_descending_name_);
}

uint64_t sub_2574FBF00(uint64_t a1)
{
  uint64_t result = sub_2574FC008(&qword_26A0018F0, (void (*)(uint64_t))type metadata accessor for ArgumentSortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574FBF58(uint64_t a1)
{
  uint64_t result = sub_2574FC008(&qword_26A0018F8, (void (*)(uint64_t))type metadata accessor for SortOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574FBFB0(uint64_t a1)
{
  uint64_t result = sub_2574FC008(&qword_26A0018E8, (void (*)(uint64_t))type metadata accessor for CumulativeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574FC008(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2574FC050(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, void *a7, SEL *a8)
{
  id v14 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(a7, *a8, a1, a2, a3 & 1, a4 & 1, v14);

  return v15;
}

id sub_2574FC0EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, SEL *a7)
{
  uint64_t v12 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(a6, *a7, a1, a2, a3 & 1, v12);

  return v13;
}

uint64_t OUTLINED_FUNCTION_0_33()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_1_34()
{
  return sub_257582858(1, v1 == 0, v0);
}

uint64_t resize(images:size:mode:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *(void *)(*a1 + 16);
  if ((unint64_t)(*(void *)(*(void *)(v8 + 152) + 16) - 5) < 0xFFFFFFFFFFFFFFFELL)
  {
    uint64_t v42 = *(ValueMetadata **)(*(void *)(v8 + 152) + 16);
    *(_OWORD *)uint64_t v43 = xmmword_2576B2530;
    v43[16] = 0;
    *(_OWORD *)&v43[24] = xmmword_2576B2550;
    LOBYTE(v44) = 1;
    char v46 = 7;
    OUTLINED_FUNCTION_2_25();
    goto LABEL_28;
  }
  char v11 = *a4;
  unsigned __int8 v12 = *(unsigned char *)(v8 + 160);
  id v13 = static ScalarType.floatingPointTypes.getter();
  uint64_t v14 = sub_2575A0094(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v42 = sub_25767AC64();
    *(void *)uint64_t v43 = v38;
    *(_OWORD *)&v43[8] = xmmword_2576B2530;
    v43[24] = 0;
    *(void *)&v43[32] = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    LOBYTE(v44) = 2;
    char v46 = 3;
    OUTLINED_FUNCTION_2_25();
LABEL_28:
    sub_25746BF88();
  }
  unint64_t v15 = *(void *)(v7 + 16);
  uint64_t v16 = *(void *)(v15 + 152);
  unint64_t v17 = *(void *)(v16 + 16);
  if (v17 < 2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v18 = sub_2574FCFD8(0, v17 - 2, *(void *)(v16 + 16));
  if (v19) {
    unint64_t v15 = v17;
  }
  else {
    unint64_t v15 = v18;
  }
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
  if (v17 < v15)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2576A7810();
  sub_25746EC14();
  unint64_t v17 = *(void *)(v20 + 16);
  uint64_t v14 = v17 + 2;
  if (__OFADD__(v17, 2))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    sub_257471E14(v15 > 1, v14, 1, v17);
    unint64_t v17 = v36;
    unint64_t v15 = *(void *)(v36 + 24);
    unint64_t v23 = v15 >> 1;
    goto LABEL_18;
  }
  uint64_t v21 = v20;
  sub_2576A7810();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && (unint64_t v15 = *(void *)(v21 + 24), v23 = v15 >> 1, (uint64_t)(v15 >> 1) >= v14))
  {
    unint64_t v17 = v21;
  }
  else
  {
    if ((uint64_t)v17 <= v14) {
      uint64_t v24 = v17 + 2;
    }
    else {
      uint64_t v24 = v17;
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v24, 1, v21);
    unint64_t v17 = v25;
    unint64_t v15 = *(void *)(v25 + 24);
    unint64_t v23 = v15 >> 1;
  }
  unint64_t v5 = *(void *)(v17 + 16);
  uint64_t v14 = v5 + 1;
  if (v23 <= v5) {
    goto LABEL_25;
  }
LABEL_18:
  *(void *)(v17 + 16) = v14;
  *(void *)(v17 + 8 * v5 + 32) = a2;
  uint64_t v26 = v5 + 2;
  if ((uint64_t)v23 < v26)
  {
    sub_257471E14(v15 > 1, v26, 1, v17);
    unint64_t v17 = v37;
  }
  *(void *)(v17 + 16) = v26;
  *(void *)(v17 + 8 * v14 + 32) = a3;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v7 + 16);
  char v41 = v11;
  char v28 = *(unsigned char *)(v27 + 160);
  unint64_t v39 = v17;
  char v40 = v28;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a2;
  *(void *)(v29 + 24) = a3;
  *(unsigned char *)(v29 + 32) = v11;
  swift_retain();
  uint64_t v30 = sub_25761BED4((uint64_t)sub_2574FD0A0);
  uint64_t v32 = v31;
  swift_release();
  uint64_t v42 = (ValueMetadata *)"/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ImageOps.swift";
  *(_OWORD *)uint64_t v43 = xmmword_2576ACB10;
  *(_OWORD *)&v43[16] = xmmword_2576B2540;
  *(void *)&v43[32] = "init(id:operand:size:samplingMode:resultDescriptor:creationSite:backward:)";
  uint64_t v44 = 74;
  __int16 v45 = 2;
  type metadata accessor for ResizeOperation();
  swift_allocObject();
  uint64_t v33 = sub_257532778(0, 0, 0, v27, a2, a3, (uint64_t)&v41, (uint64_t)&v39, (uint64_t)&v42, v30, v32);
  uint64_t v34 = (uint64_t (**)(void, void))sub_2574FD0AC();
  sub_25747B47C(*(void *)(v7 + 16) + 168, (uint64_t)&v39);
  return sub_257613838(v33, v34, 0, (uint64_t)&v39, a5);
}

uint64_t static InterpolationMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

uint64_t InterpolationMode.hash(into:)()
{
  if (*v0 == 2) {
    return sub_2576A90A0();
  }
  sub_2576A90A0();
  return sub_2576A90B0();
}

uint64_t InterpolationMode.hashValue.getter()
{
  int v1 = *v0;
  sub_2576A9090();
  sub_2576A90A0();
  if (v1 != 2) {
    sub_2576A90B0();
  }
  return sub_2576A9100();
}

uint64_t sub_2574FC680()
{
  int v1 = *v0;
  sub_2576A9090();
  sub_2576A90A0();
  if (v1 != 2) {
    sub_2576A90B0();
  }
  return sub_2576A9100();
}

uint64_t sub_2574FC6EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = *(void *)(*(void *)(result + 32) + 16);
      uint64_t v8 = *(void *)(*(void *)(a2 + 32) + 16);
      v24[0] = a5;
      char v9 = *(unsigned char *)(v8 + 160);
      uint64_t v19 = *(void *)(v8 + 152);
      char v20 = v9;
      long long v26 = xmmword_2576ACB10;
      long long v27 = xmmword_2576B2560;
      unint64_t v25 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ImageOps.swift";
      char v28 = "init(id:gradientOperand:operand:size:samplingMode:resultDescriptor:creationSite:)";
      uint64_t v29 = 81;
      __int16 v30 = 2;
      type metadata accessor for ResizeGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_2576A7810();
      uint64_t v10 = sub_257532920(0, 0, 0, v7, v8, a3, a4, (uint64_t)v24);
      sub_25747B47C(v7 + 168, (uint64_t)v24);
      sub_25747B47C((uint64_t)v24, (uint64_t)v23);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v19);
      swift_release();
      uint64_t v11 = v22;
      swift_retain();
      sub_2574718B0((uint64_t)&v19);
      sub_2575D60A8();
      sub_2575D614C((uint64_t)&v19);
      swift_release();
      uint64_t v12 = v21;
      swift_retain();
      sub_2574718B0((uint64_t)&v19);
      type metadata accessor for TensorRepresentation();
      uint64_t v13 = swift_allocObject();
      LOBYTE(v19) = 1;
      uint64_t v14 = sub_257583FC4(v10, 0, v23, 0x100000000, v11, v12, v13);
      type metadata accessor for TensorHandle();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v14;
      swift_retain();
      sub_2576139A8();
      swift_release();
      sub_25747B4E4((uint64_t)v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v17 = sub_2574E8C6C();
      *(void *)(v16 + 32) = v15;
      *(void *)(v16 + 40) = v17;
      *(void *)(v16 + 48) = v18;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Tensor.resized(to:mode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t *a4@<X8>)
{
  char v5 = *a3;
  uint64_t v8 = *v4;
  char v7 = v5;
  return resize(images:size:mode:)(&v8, a1, a2, &v7, a4);
}

uint64_t sub_2574FC9E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696D697263736964 && a2 == 0xED0000726F74616ELL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002576C8D50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2574FCAF8(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x696D697263736964;
  }
}

uint64_t sub_2574FCB40()
{
  return sub_2576A7DC0();
}

uint64_t sub_2574FCBA0()
{
  return sub_2576A7D80();
}

uint64_t sub_2574FCBF0()
{
  return sub_2574FCAF8(*v0);
}

uint64_t sub_2574FCBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2574FC9E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2574FCC20(uint64_t a1)
{
  unint64_t v2 = sub_2574FD0FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2574FCC5C(uint64_t a1)
{
  unint64_t v2 = sub_2574FD0FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InterpolationMode.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A002738);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574FD0FC();
  sub_2576A9230();
  if (v10 == 2)
  {
    char v16 = 1;
    char v15 = 0;
    sub_2574FD148();
    sub_2576A8E40();
  }
  else
  {
    __int16 v14 = 0;
    sub_2574FD148();
    sub_2576A8E40();
    if (!v2)
    {
      char v13 = 1;
      sub_2576A8E10();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t InterpolationMode.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002750);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2574FD0FC();
  sub_2576A91F0();
  if (!v2)
  {
    sub_2574FD194();
    sub_2576A8D50();
    if (v13)
    {
      uint64_t v6 = OUTLINED_FUNCTION_1_14();
      v7(v6);
      char v8 = 2;
    }
    else
    {
      char v9 = sub_2576A8D20();
      uint64_t v10 = OUTLINED_FUNCTION_1_14();
      v11(v10);
      char v8 = v9 & 1;
    }
    *a2 = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2574FCFA8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return InterpolationMode.init(from:)(a1, a2);
}

uint64_t sub_2574FCFC0(void *a1)
{
  return InterpolationMode.encode(to:)(a1);
}

uint64_t sub_2574FCFD8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2) {
      return 0;
    }
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  BOOL v5 = __OFADD__(result, a2);
  result += a2;
  if (v5) {
    goto LABEL_14;
  }
  return result;
}

void sub_2574FD028(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v5;
  if (!isUniquelyReferenced_nonNull_native || a1 > *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(v5 + 16) <= a1) {
      uint64_t v7 = a1;
    }
    else {
      uint64_t v7 = *(void *)(v5 + 16);
    }
    sub_257471E14(isUniquelyReferenced_nonNull_native, v7, a2 & 1, v5);
    *uint64_t v2 = v8;
  }
}

uint64_t sub_2574FD090()
{
  return MEMORY[0x270FA0238](v0, 33, 7);
}

uint64_t sub_2574FD0A0(uint64_t a1, uint64_t a2)
{
  return sub_2574FC6EC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
}

unint64_t sub_2574FD0AC()
{
  unint64_t result = qword_26A0012C8;
  if (!qword_26A0012C8)
  {
    type metadata accessor for ResizeOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0012C8);
  }
  return result;
}

unint64_t sub_2574FD0FC()
{
  unint64_t result = qword_26A002740;
  if (!qword_26A002740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002740);
  }
  return result;
}

unint64_t sub_2574FD148()
{
  unint64_t result = qword_26A002748;
  if (!qword_26A002748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002748);
  }
  return result;
}

unint64_t sub_2574FD194()
{
  unint64_t result = qword_26A002758;
  if (!qword_26A002758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002758);
  }
  return result;
}

unint64_t sub_2574FD1E4()
{
  unint64_t result = qword_26A002760;
  if (!qword_26A002760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002760);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for InterpolationMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2574FD2ECLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for InterpolationMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x2574FD3D4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_2574FD3FC(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_2574FD418(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for InterpolationMode()
{
  return &type metadata for InterpolationMode;
}

ValueMetadata *type metadata accessor for InterpolationMode.Discriminator()
{
  return &type metadata for InterpolationMode.Discriminator;
}

unsigned char *_s14NeuralNetworks17InterpolationModeO13DiscriminatorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2574FD520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterpolationMode.CodingKeys()
{
  return &type metadata for InterpolationMode.CodingKeys;
}

unint64_t sub_2574FD55C()
{
  unint64_t result = qword_26A002768;
  if (!qword_26A002768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002768);
  }
  return result;
}

unint64_t sub_2574FD5AC()
{
  unint64_t result = qword_26A002770;
  if (!qword_26A002770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002770);
  }
  return result;
}

unint64_t sub_2574FD5FC()
{
  unint64_t result = qword_26A002778;
  if (!qword_26A002778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002778);
  }
  return result;
}

unint64_t sub_2574FD64C()
{
  unint64_t result = qword_26A002780;
  if (!qword_26A002780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002780);
  }
  return result;
}

unint64_t sub_2574FD698()
{
  unint64_t result = qword_26A002788;
  if (!qword_26A002788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002788);
  }
  return result;
}

uint64_t sub_2574FD6E4()
{
  uint64_t result = OUTLINED_FUNCTION_4_25();
  *unsigned int v1 = v0;
  uint64_t v5 = 0;
  if ((result & 1) != 0 && (v0 & 0x8000000000000000) == 0 && (v0 & 0x4000000000000000) == 0)
  {
    if (v3 <= *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v5 = 1;
  }
  if (v0 >> 62)
  {
    OUTLINED_FUNCTION_3_24();
    uint64_t v6 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 <= v3) {
    uint64_t v7 = v3;
  }
  else {
    uint64_t v7 = v6;
  }
  uint64_t result = MEMORY[0x25A2B8DC0](v5, v7, v2 & 1, v0);
  *unsigned int v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_4_25()
{
  return swift_isUniquelyReferenced_nonNull_bridgeObject();
}

__n128 *sub_2574FD7DC(void *a1, id *a2)
{
  switch(*(unsigned char *)(v2 + 128))
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v10 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_acosWithTensor_name_;
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v11 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_acoshWithTensor_name_;
      break;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v12 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_asinWithTensor_name_;
      break;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v13 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_asinhWithTensor_name_;
      break;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v14 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_atanWithTensor_name_;
      break;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v15 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_atanhWithTensor_name_;
      break;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v16 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_ceilWithTensor_name_;
      break;
    case 8:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v17 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_cosWithTensor_name_;
      break;
    case 9:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v18 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_coshWithTensor_name_;
      break;
    case 0xA:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v19 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_exponentWithTensor_name_;
      break;
    case 0xB:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v20 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_exponentBase2WithTensor_name_;
      break;
    case 0xC:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v21 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_floorWithTensor_name_;
      break;
    case 0xD:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v22 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_identityWithTensor_name_;
      break;
    case 0xE:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v23 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_logarithmWithTensor_name_;
      break;
    case 0xF:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v24 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_reciprocalWithTensor_name_;
      break;
    case 0x10:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v25 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_roundWithTensor_name_;
      break;
    case 0x11:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v26 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_reverseSquareRootWithTensor_name_;
      break;
    case 0x12:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v27 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_signWithTensor_name_;
      break;
    case 0x13:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v28 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_sinWithTensor_name_;
      break;
    case 0x14:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v29 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_sinhWithTensor_name_;
      break;
    case 0x15:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v30 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_squareRootWithTensor_name_;
      break;
    case 0x16:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v31 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_squareWithTensor_name_;
      break;
    case 0x17:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v32 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_tanWithTensor_name_;
      break;
    case 0x18:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v33 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_tanhWithTensor_name_;
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_6(v7, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v8 = a2[4];
      }
      OUTLINED_FUNCTION_1_35();
      unsigned int v9 = &selRef_absoluteWithTensor_name_;
      break;
  }
  id v34 = sub_257479C38((uint64_t)a2, v3, v2, a1, (SEL *)v9);

  v7[2].n128_u64[0] = (unint64_t)v34;
  sub_2576A7E20();
  return v7;
}

__n128 *sub_2574FDF78(void *a1, id *a2)
{
  return sub_2574FD7DC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_1_35()
{
  return sub_2576A7810();
}

void OUTLINED_FUNCTION_2_26()
{
  JUMPOUT(0x25A2B8DB0);
}

uint64_t sub_2574FDFC4(void *a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2576AC2A0;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v6 = *(id *)(a2 + 32);
  }
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  sub_2576A7810();
  id v10 = sub_2574FE130((uint64_t)v7, v9, v8, a1);

  *(void *)(v5 + 32) = v10;
  sub_2576A7E20();
  return v5;
}

uint64_t sub_2574FE0A0(void *a1, uint64_t a2)
{
  return sub_2574FDFC4(a1, a2);
}

unint64_t sub_2574FE0B8(uint64_t a1)
{
  unint64_t result = sub_2574FE0E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2574FE0E0()
{
  unint64_t result = qword_26A002790;
  if (!qword_26A002790)
  {
    type metadata accessor for UnaryLogicalOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A002790);
  }
  return result;
}

id sub_2574FE130(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(a4, sel_notWithTensor_name_, a1, v6);

  return v7;
}

uint64_t sub_2574FE1A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_2574FE1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_2576A8F60();
  }
}

uint64_t sub_2574FE1F4()
{
  return sub_2574FE1A4(*v0);
}

ValueMetadata *type metadata accessor for NameScope()
{
  return &type metadata for NameScope;
}

uint64_t sub_2574FE20C(uint64_t *a1, uint64_t *a2)
{
  return sub_2574FE1D8(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_2574FE224()
{
  unint64_t result = qword_26A002798[0];
  if (!qword_26A002798[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A002798);
  }
  return result;
}

uint64_t sub_2574FE270(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2574FE2AC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  uint64_t v13 = *a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006420);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2576ABB10;
  *(void *)(v14 + 32) = a1;
  *(void *)(v14 + 40) = a2;
  *(void *)(v6 + 16) = v14;
  *(void *)(v6 + 24) = a3;
  *(void *)(v6 + 32) = *(void *)(*MEMORY[0x263F8EA20] + v13 + 8);
  *(void *)(v6 + 40) = a4;
  *(unsigned char *)(v6 + 48) = a5 & 1;
  *(unsigned char *)(v6 + 49) = a6;
  return v6;
}

uint64_t sub_2574FE374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006420);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_2576ABB10;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  *(void *)(v7 + 16) = v15;
  *(void *)(v7 + 24) = a3;
  *(void *)(v7 + 32) = a4;
  *(void *)(v7 + 40) = a5;
  *(unsigned char *)(v7 + 48) = a6 & 1;
  *(unsigned char *)(v7 + 49) = a7;
  return v7;
}

uint64_t sub_2574FE404()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_2574FE42C()
{
  sub_2574FE404();
  return swift_deallocClassInstance();
}

uint64_t sub_2574FE460()
{
  sub_2576A8870();
  uint64_t v0 = swift_dynamicCastClassUnconditional();
  swift_retain();
  return v0;
}

uint64_t sub_2574FE4C4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_2574FE460();
  sub_2574FE460();
  uint64_t v4 = sub_2576A8880();
  swift_release();
  swift_release();
  if (!v4) {
    return 0;
  }
  sub_2574FE55C(*(void *)(a1 + 32), v2, a1, v4);
  uint64_t v6 = v5;
  swift_release();
  return v6;
}

void sub_2574FE55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = *(void *)(a2 + 16);
  sub_2576A7810();
  sub_2576A7810();
  sub_2575A0370();
  if (*(unsigned char *)(a2 + 48) & 1) != 0 || (*(unsigned char *)(a3 + 48))
  {
    uint64_t v8 = 0;
    char v9 = 1;
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v11 = *(void *)(a3 + 40);
    uint64_t v8 = v10 + v11;
    if (__OFADD__(v10, v11))
    {
      __break(1u);
      return;
    }
    char v9 = 0;
  }
  if (*(unsigned char *)(a2 + 49) == 1) {
    char v12 = *(unsigned char *)(a3 + 49);
  }
  else {
    char v12 = 0;
  }
  type metadata accessor for StoredPropertyInfo();
  sub_2574FE690(v13, a4, a1, v8, v9, v12);
  swift_retain();
}

uint64_t sub_2574FE690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = a5 & 1;
  *(unsigned char *)(result + 49) = a6;
  return result;
}

uint64_t sub_2574FE700(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  char v11 = a5 & 1;
  swift_allocObject();
  return sub_2574FE77C(a1, a2, a3, a4, v11, a6);
}

uint64_t sub_2574FE77C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char a5, char a6)
{
  return sub_2574FE2AC(a1, a2, a3, a4, a5 & 1, a6);
}

uint64_t sub_2574FE784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  char v13 = a6 & 1;
  swift_allocObject();
  return sub_2574FE818(a1, a2, a3, a4, a5, v13, a7);
}

uint64_t sub_2574FE818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  return sub_2574FE374(a1, a2, a3, a4, a5, a6 & 1, a7);
}

void sub_2574FE820()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v80 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v75 = v5;
  v65[3] = sub_2576A8AC0();
  OUTLINED_FUNCTION_0_10();
  v65[2] = v6;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_3();
  v65[1] = v8;
  uint64_t v69 = sub_2576A8850();
  OUTLINED_FUNCTION_0_10();
  uint64_t v68 = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_25();
  uint64_t v67 = v11 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v66 = (uint64_t)v65 - v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v17 = v16;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v18);
  uint64_t v81 = (char *)v65 - v19;
  uint64_t v20 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v71 = v21;
  OUTLINED_FUNCTION_44_0();
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  id v25 = (char *)v65 - v24;
  id v26 = (void *)((char *)v65 + *(int *)(v23 + 36) - v24);
  uint64_t v27 = type metadata accessor for StoredPropertyInfo();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v28 = sub_2576A76E0();
  uint64_t v78 = v26;
  *id v26 = v28;
  id v29 = (uint64_t *)&v25[*(int *)(v20 + 40)];
  uint64_t v73 = v17;
  unint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v79(v25, v4, AssociatedTypeWitness);
  uint64_t v30 = v80;
  *id v29 = v2;
  v29[1] = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006420);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_2576ABB10;
  swift_getDynamicType();
  uint64_t v74 = v2;
  sub_25747A4D0(v2);
  *(void *)(v31 + 32) = sub_2576A92D0();
  *(void *)(v31 + 40) = v32;
  uint64_t v72 = v20;
  uint64_t v33 = *(int *)(v20 + 44);
  uint64_t v70 = v25;
  *(void *)&v25[v33] = v31;
  uint64_t v76 = v4;
  v79(v81, v4, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028A0);
  uint64_t v81 = (char *)AssociatedTypeWitness;
  if (swift_dynamicCast())
  {
    sub_257479260(&v84, (uint64_t)&v87);
    __swift_project_boxed_opaque_existential_1(&v87, v89);
    uint64_t v34 = OUTLINED_FUNCTION_6_22();
    *(void *)&long long v84 = v35(v34);
    MEMORY[0x270FA5388](v84);
    v65[-2] = v81;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028B8);
    sub_2574C9AF8(&qword_26A0028C0, &qword_26A0028B8);
    uint64_t v36 = OUTLINED_FUNCTION_9_23();
LABEL_9:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
    goto LABEL_10;
  }
  uint64_t v86 = 0;
  long long v84 = 0u;
  long long v85 = 0u;
  sub_2575017D0((uint64_t)&v84, &qword_26A0028A8);
  sub_2575D1888((uint64_t)v81, (uint64_t)&v84);
  if (!*((void *)&v85 + 1))
  {
    sub_2575017D0((uint64_t)&v84, &qword_26A0028B0);
    uint64_t v36 = sub_2576A7E90();
    goto LABEL_10;
  }
  sub_257479260(&v84, (uint64_t)&v87);
  __swift_project_boxed_opaque_existential_1(&v87, v89);
  uint64_t v37 = v66;
  sub_2575D1A20(v66);
  uint64_t v38 = v68;
  uint64_t v39 = v67;
  uint64_t v40 = v69;
  (*(void (**)(uint64_t, void, uint64_t))(v68 + 104))(v67, *MEMORY[0x263F8DD18], v69);
  sub_2576A7D70();
  sub_2576A7D70();
  uint64_t v41 = v84;
  uint64_t v42 = v82;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v43(v39, v40);
  v43(v37, v40);
  if (v41 != v42)
  {
    *(void *)&long long v82 = MEMORY[0x263F8EE80];
    uint64_t v50 = v89;
    uint64_t v51 = v90;
    __int16 v52 = __swift_project_boxed_opaque_existential_1(&v87, v89);
    MEMORY[0x270FA5388](v52);
    v65[-2] = &v82;
    sub_2575D1A5C((uint64_t (*)(uint64_t, uint64_t))sub_257502660, (uint64_t)&v65[-4], v50, v51);
    uint64_t v53 = OUTLINED_FUNCTION_6_4();
    uint64_t v54 = sub_2576A76E0();
    *(void *)(v53 + 16) = v54;
    MEMORY[0x270FA5388](v54);
    v65[-2] = &v82;
    v65[-1] = v53;
    sub_257501E3C();
    sub_2576A8ED0();
    OUTLINED_FUNCTION_16_16();
    OUTLINED_FUNCTION_14_0();
    v55();
    OUTLINED_FUNCTION_30_4();
    uint64_t v36 = *(void *)(v53 + 16);
    sub_2576A7810();
    swift_release();
    goto LABEL_9;
  }
  sub_2575D1888((uint64_t)v81, (uint64_t)&v82);
  if (v83)
  {
    uint64_t v44 = sub_257479260(&v82, (uint64_t)&v84);
    __int16 v45 = (void *)MEMORY[0x25A2BA130](v44);
    uint64_t v46 = OUTLINED_FUNCTION_6_4();
    *(void *)(v46 + 16) = sub_2576A76E0();
    __swift_project_boxed_opaque_existential_1(&v84, *((uint64_t *)&v85 + 1));
    sub_2575D19F4();
    sub_2576A7F50();
    sub_2576A7E60();
    uint64_t v47 = *((void *)&v85 + 1);
    uint64_t v48 = v86;
    long long v49 = __swift_project_boxed_opaque_existential_1(&v84, *((uint64_t *)&v85 + 1));
    MEMORY[0x270FA5388](v49);
    v65[-4] = v81;
    v65[-3] = &v84;
    v65[-2] = v46;
    sub_2575D1A5C((uint64_t (*)(uint64_t, uint64_t))sub_25750266C, (uint64_t)&v65[-6], v47, v48);
    OUTLINED_FUNCTION_30_4();
    uint64_t v36 = *(void *)(v46 + 16);
    sub_2576A7810();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
  }
  else
  {
    sub_2575017D0((uint64_t)&v82, &qword_26A0028B0);
    uint64_t v36 = sub_2576A7E90();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
LABEL_10:
  uint64_t v56 = MEMORY[0x25A2B84C0](v36, v27);
  if ((v56 & 0x8000000000000000) == 0)
  {
    uint64_t v57 = v56;
    if (!v56)
    {
LABEL_15:
      sub_25747A4E0(v74);
      swift_bridgeObjectRelease();
      uint64_t v60 = v71;
      char v61 = v70;
      uint64_t v62 = v72;
      OUTLINED_FUNCTION_5_18();
      v63();
      OUTLINED_FUNCTION_16_16();
      OUTLINED_FUNCTION_14_0();
      v64();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
      OUTLINED_FUNCTION_8_21();
      return;
    }
    uint64_t v58 = 0;
    uint64_t v59 = v56 - 1;
    while (!__OFSUB__(v59, v58))
    {
      ++v58;
      sub_2576A7F90();
      int v88 = 0;
      sub_2576A8990();
      sub_2576A8960();
      if (v57 == v58) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  __break(1u);
}

void sub_2574FF0E8()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v1;
  uint64_t v38 = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v40 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v36 - v8;
  OUTLINED_FUNCTION_0_10();
  uint64_t v37 = v10;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_3_3();
  uint64_t v36 = v12;
  uint64_t v41 = v2;
  uint64_t v42 = v0;
  uint64_t v39 = *(void *)(v2 + 24);
  swift_getAssociatedTypeWitness();
  type metadata accessor for StoredPropertyInfo();
  for (unint64_t i = (void (**)(char *, uint64_t))(v6 + 8); ; (*i)(v9, v40))
  {
    swift_getTupleTypeMetadata2();
    uint64_t v14 = sub_2576A8990();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v16 = swift_getWitnessTable();
    uint64_t v17 = MEMORY[0x25A2B8820](&v44, v14, WitnessTable, v16);
    uint64_t v18 = v44;
    if (!v44)
    {
      MEMORY[0x270FA5388](v17);
      OUTLINED_FUNCTION_8_23();
      OUTLINED_FUNCTION_1_36(v22);
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0010C0);
      uint64_t v46 = MEMORY[0x263F8D4F8];
      uint64_t v23 = OUTLINED_FUNCTION_5_22(MEMORY[0x263F8E8F8]);
      uint64_t v24 = v38;
      uint64_t v25 = 1;
      goto LABEL_11;
    }
    int v43 = v45;
    uint64_t v19 = *(uint64_t (**)(uint64_t, int *))(v42 + *(int *)(v41 + 40));
    if (v19)
    {
      uint64_t v20 = *(void *)(v44 + 32);
      swift_beginAccess();
      swift_retain();
      char v21 = v19(v20, &v43);
      swift_endAccess();
      if (v21) {
        sub_2574FF53C();
      }
    }
    else
    {
      swift_retain();
    }
    uint64_t v44 = sub_2574FE460();
    sub_2576A8870();
    if (swift_dynamicCast()) {
      break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v4);
    swift_release_n();
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v4);
  uint64_t v26 = v36;
  uint64_t v27 = v37;
  uint64_t v28 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v36, v9, v4);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_8_23();
  OUTLINED_FUNCTION_1_36(v29);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0010C0);
  uint64_t v46 = MEMORY[0x263F8D4F8];
  uint64_t v30 = (int *)OUTLINED_FUNCTION_5_22(MEMORY[0x263F8E8F8]);
  uint64_t v31 = v30[12];
  uint64_t v32 = v30[16];
  uint64_t v40 = v30[20];
  uint64_t v33 = v38;
  OUTLINED_FUNCTION_5_18();
  v34();
  uint64_t v44 = *(void *)(v42 + *(int *)(v41 + 44));
  sub_2576A7810();
  sub_2576A7810();
  sub_2575A0370();
  swift_release();
  uint64_t v35 = v44;
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v4);
  *(void *)(v33 + v31) = v35;
  LOBYTE(v35) = *(unsigned char *)(v18 + 49);
  swift_release();
  *(unsigned char *)(v33 + v32) = v35;
  OUTLINED_FUNCTION_30_4();
  *(_DWORD *)(v33 + v40) = v43;
  uint64_t v24 = v33;
  uint64_t v25 = 0;
  uint64_t v23 = (uint64_t)v30;
LABEL_11:
  __swift_storeEnumTagSinglePayload(v24, v25, 1, v23);
  OUTLINED_FUNCTION_8_21();
}

void sub_2574FF53C()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  long long v84 = v6;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v96 = *MEMORY[0x263EF8340];
  uint64_t v11 = *v9;
  uint64_t v77 = sub_2576A8AC0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v76 = v12;
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_3_3();
  uint64_t v75 = v14;
  sub_2576A8850();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_3_25();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_0_10();
  uint64_t v82 = v17;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_3_25();
  MEMORY[0x270FA5388](v19);
  unint64_t v79 = (char *)&v70 - v20;
  uint64_t v21 = *(void *)(v11 + 152);
  OUTLINED_FUNCTION_0_10();
  uint64_t v23 = v22;
  OUTLINED_FUNCTION_44_0();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v30 = (char *)&v70 - v29;
  LOBYTE(v29) = *((unsigned char *)v10 + 48);
  long long v85 = v10;
  uint64_t v81 = v1;
  uint64_t v80 = v5;
  if ((v29 & 1) == 0)
  {
    uint64_t v38 = v10[5];
    OUTLINED_FUNCTION_5_18();
    uint64_t v40 = v39();
    MEMORY[0x270FA5388](v40);
    *(&v70 - 4) = v5;
    *(&v70 - 3) = v3;
    *(&v70 - 2) = v1;
    *(&v70 - 1) = v38;
    uint64_t v82 = v3;
    type metadata accessor for StoredPropertyInfo();
    sub_2576A7F50();
    sub_2576A84C0();
    sub_2575E6784();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v83 = v21;
    v41(v30, v21);
    uint64_t v37 = v93[0];
    if (!v93[0])
    {
      __break(1u);
      return;
    }
    sub_2576A7810();
    goto LABEL_19;
  }
  uint64_t v70 = v28;
  uint64_t v71 = v27;
  uint64_t v72 = v26;
  uint64_t v73 = v25;
  uint64_t v78 = v8;
  uint64_t v31 = sub_2574FE460();
  sub_2576A9290();
  if (!swift_dynamicCastClass())
  {
    OUTLINED_FUNCTION_8_21();
    swift_release();
    return;
  }
  uint64_t v74 = v31;
  OUTLINED_FUNCTION_5_18();
  v32();
  swift_getAtKeyPath();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v30, v21);
  OUTLINED_FUNCTION_5_18();
  v33();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028A0);
  int v34 = swift_dynamicCast();
  uint64_t v83 = v21;
  if (v34)
  {
    sub_257479260(&v90, (uint64_t)v93);
    __swift_project_boxed_opaque_existential_1(v93, v94);
    uint64_t v35 = OUTLINED_FUNCTION_6_22();
    *(void *)&long long v90 = v36(v35);
    MEMORY[0x270FA5388](v90);
    *(&v70 - 2) = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028B8);
    OUTLINED_FUNCTION_14_18();
    sub_2574C9AF8(&qword_26A0028C0, &qword_26A0028B8);
    uint64_t v37 = OUTLINED_FUNCTION_9_23();
LABEL_16:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
    goto LABEL_17;
  }
  uint64_t v92 = 0;
  long long v90 = 0u;
  long long v91 = 0u;
  sub_2575017D0((uint64_t)&v90, &qword_26A0028A8);
  sub_2575D1888(v3, (uint64_t)&v90);
  if (*((void *)&v91 + 1))
  {
    sub_257479260(&v90, (uint64_t)v93);
    __swift_project_boxed_opaque_existential_1(v93, v94);
    uint64_t v43 = v70;
    sub_2575D1A20(v70);
    uint64_t v44 = v72;
    uint64_t v45 = v71;
    uint64_t v46 = v73;
    (*(void (**)(uint64_t, void, uint64_t))(v72 + 104))(v71, *MEMORY[0x263F8DD18], v73);
    sub_2576A7D70();
    sub_2576A7D70();
    uint64_t v47 = v90;
    uint64_t v48 = v88;
    long long v49 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v49(v45, v46);
    v49(v43, v46);
    if (v47 == v48)
    {
      sub_2575D1888(v3, (uint64_t)&v88);
      if (v89)
      {
        uint64_t v50 = sub_257479260(&v88, (uint64_t)&v90);
        uint64_t v51 = (void *)MEMORY[0x25A2BA130](v50);
        uint64_t v52 = OUTLINED_FUNCTION_6_4();
        OUTLINED_FUNCTION_14_18();
        *(void *)(v52 + 16) = sub_2576A76E0();
        __swift_project_boxed_opaque_existential_1(&v90, *((uint64_t *)&v91 + 1));
        sub_2575D19F4();
        sub_2576A7F50();
        sub_2576A7E60();
        uint64_t v53 = *((void *)&v91 + 1);
        uint64_t v54 = v92;
        long long v55 = __swift_project_boxed_opaque_existential_1(&v90, *((uint64_t *)&v91 + 1));
        MEMORY[0x270FA5388](v55);
        *(&v70 - 4) = v3;
        *(&v70 - 3) = (uint64_t)&v90;
        *(&v70 - 2) = v52;
        sub_2575D1A5C((uint64_t (*)(uint64_t, uint64_t))sub_257502554, (uint64_t)(&v70 - 6), v53, v54);
        OUTLINED_FUNCTION_30_4();
        uint64_t v37 = *(void *)(v52 + 16);
        sub_2576A7810();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v90);
      }
      else
      {
        sub_2575017D0((uint64_t)&v88, &qword_26A0028B0);
        type metadata accessor for StoredPropertyInfo();
        uint64_t v37 = sub_2576A7E90();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
      swift_release();
      goto LABEL_18;
    }
    *(void *)&long long v88 = MEMORY[0x263F8EE80];
    uint64_t v56 = v94;
    uint64_t v57 = v95;
    uint64_t v58 = __swift_project_boxed_opaque_existential_1(v93, v94);
    MEMORY[0x270FA5388](v58);
    *(&v70 - 2) = (uint64_t)&v88;
    sub_2575D1A5C(sub_25750250C, (uint64_t)(&v70 - 4), v56, v57);
    uint64_t v59 = OUTLINED_FUNCTION_6_4();
    OUTLINED_FUNCTION_14_18();
    uint64_t v60 = sub_2576A76E0();
    *(void *)(v59 + 16) = v60;
    MEMORY[0x270FA5388](v60);
    *(&v70 - 2) = (uint64_t)&v88;
    *(&v70 - 1) = v59;
    sub_257501E3C();
    sub_2576A8ED0();
    OUTLINED_FUNCTION_16_16();
    OUTLINED_FUNCTION_14_0();
    v61();
    OUTLINED_FUNCTION_30_4();
    uint64_t v37 = *(void *)(v59 + 16);
    sub_2576A7810();
    swift_release();
    goto LABEL_16;
  }
  sub_2575017D0((uint64_t)&v90, &qword_26A0028B0);
  type metadata accessor for StoredPropertyInfo();
  uint64_t v37 = sub_2576A7E90();
LABEL_17:
  swift_release();
LABEL_18:
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_14_0();
  v62();
  sub_2576A7810();
LABEL_19:
  uint64_t v63 = OUTLINED_FUNCTION_14_18();
  uint64_t v64 = MEMORY[0x25A2B84C0](v37, v63);
  swift_bridgeObjectRelease();
  if (v64 < 0) {
    goto LABEL_31;
  }
  if (v64)
  {
    uint64_t v65 = MEMORY[0x25A2B84C0](v37, v63);
    uint64_t v66 = v65 - 1;
    if (__OFSUB__(v65, 1)) {
      goto LABEL_32;
    }
    OUTLINED_FUNCTION_30_4();
    uint64_t v67 = 0;
    while (!__OFSUB__(v66, v67))
    {
      sub_2576A7F90();
      uint64_t v68 = sub_2574FE4C4(v86);
      if (v68)
      {
        int v69 = *v84;
        uint64_t v86 = v68;
        int v87 = v69;
        type metadata accessor for RecursiveStoredPropertiesIterator();
        type metadata accessor for StoredPropertyInfo();
        swift_getTupleTypeMetadata2();
        sub_2576A8990();
        sub_2576A8960();
      }
      swift_release();
      if (v64 == ++v67) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
LABEL_27:
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2574FFFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v7 = sub_2576A8AC0();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2576A8850();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v47 - v20;
  uint64_t v22 = a1 + a2;
  uint64_t v52 = v23;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v24((char *)&v47 - v20, v22, a3);
  uint64_t v51 = v21;
  v24(v19, (uint64_t)v21, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028A0);
  if (swift_dynamicCast())
  {
    sub_257479260(&v56, (uint64_t)v59);
    uint64_t v25 = v60;
    uint64_t v26 = v61;
    __swift_project_boxed_opaque_existential_1(v59, v60);
    *(void *)&long long v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    MEMORY[0x270FA5388](v56);
    *(&v47 - 2) = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028B8);
    type metadata accessor for StoredPropertyInfo();
    sub_2574C9AF8(&qword_26A0028C0, &qword_26A0028B8);
    uint64_t v27 = sub_2576A7C60();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
LABEL_9:
    uint64_t v44 = v52;
    uint64_t v43 = v53;
    uint64_t v45 = v51;
    goto LABEL_10;
  }
  uint64_t v58 = 0;
  long long v56 = 0u;
  long long v57 = 0u;
  sub_2575017D0((uint64_t)&v56, &qword_26A0028A8);
  sub_2575D1888(a3, (uint64_t)&v56);
  if (!*((void *)&v57 + 1))
  {
    sub_2575017D0((uint64_t)&v56, &qword_26A0028B0);
    type metadata accessor for StoredPropertyInfo();
    uint64_t v27 = sub_2576A7E90();
    goto LABEL_9;
  }
  sub_257479260(&v56, (uint64_t)v59);
  __swift_project_boxed_opaque_existential_1(v59, v60);
  sub_2575D1A20((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x263F8DD18], v9);
  sub_2576A7D70();
  sub_2576A7D70();
  uint64_t v28 = v56;
  uint64_t v29 = v54;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v10 + 8);
  v30(v13, v9);
  v30(v16, v9);
  if (v28 != v29)
  {
    *(void *)&long long v54 = MEMORY[0x263F8EE80];
    uint64_t v37 = v60;
    uint64_t v38 = v61;
    uint64_t v39 = __swift_project_boxed_opaque_existential_1(v59, v60);
    MEMORY[0x270FA5388](v39);
    *(&v47 - 2) = (uint64_t)&v54;
    sub_2575D1A5C((uint64_t (*)(uint64_t, uint64_t))sub_257502660, (uint64_t)(&v47 - 4), v37, v38);
    uint64_t v40 = swift_allocObject();
    type metadata accessor for StoredPropertyInfo();
    uint64_t v41 = sub_2576A76E0();
    *(void *)(v40 + 16) = v41;
    MEMORY[0x270FA5388](v41);
    *(&v47 - 2) = (uint64_t)&v54;
    *(&v47 - 1) = v40;
    uint64_t v42 = v48;
    sub_257501E3C();
    sub_2576A8ED0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v50);
    swift_beginAccess();
    uint64_t v27 = *(void *)(v40 + 16);
    sub_2576A7810();
    swift_release();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    goto LABEL_9;
  }
  sub_2575D1888(a3, (uint64_t)&v54);
  if (v55)
  {
    uint64_t v31 = sub_257479260(&v54, (uint64_t)&v56);
    uint64_t v32 = (void *)MEMORY[0x25A2BA130](v31);
    uint64_t v33 = swift_allocObject();
    type metadata accessor for StoredPropertyInfo();
    *(void *)(v33 + 16) = sub_2576A76E0();
    __swift_project_boxed_opaque_existential_1(&v56, *((uint64_t *)&v57 + 1));
    sub_2575D19F4();
    sub_2576A7F50();
    sub_2576A7E60();
    uint64_t v34 = *((void *)&v57 + 1);
    uint64_t v35 = v58;
    uint64_t v36 = __swift_project_boxed_opaque_existential_1(&v56, *((uint64_t *)&v57 + 1));
    MEMORY[0x270FA5388](v36);
    *(&v47 - 4) = a3;
    *(&v47 - 3) = (uint64_t)&v56;
    *(&v47 - 2) = v33;
    sub_2575D1A5C((uint64_t (*)(uint64_t, uint64_t))sub_25750266C, (uint64_t)(&v47 - 6), v34, v35);
    swift_beginAccess();
    uint64_t v27 = *(void *)(v33 + 16);
    sub_2576A7810();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
  }
  else
  {
    sub_2575017D0((uint64_t)&v54, &qword_26A0028B0);
    type metadata accessor for StoredPropertyInfo();
    uint64_t v27 = sub_2576A7E90();
  }
  uint64_t v44 = v52;
  uint64_t v43 = v53;
  uint64_t v45 = v51;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
LABEL_10:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v45, a3);
  *uint64_t v43 = v27;
  return result;
}

uint64_t sub_25750073C(uint64_t a1, uint64_t a2)
{
  v10[5] = (*(uint64_t (**)(void))(a2 + 16))();
  void v10[2] = a1;
  v10[3] = a2;
  type metadata accessor for StoredPropertyInfo();
  uint64_t v4 = sub_2576A7F50();
  uint64_t v5 = type metadata accessor for AnyStoredPropertyInfo();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_257495BE0((void (*)(char *, uint64_t))sub_2575025DC, (uint64_t)v10, v4, v5, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_25750081C(uint64_t a1)
{
  if (__swift_getEnumTagSinglePayload(v1, 1, *(void *)(a1 + 16)) == 1)
  {
    type metadata accessor for StoredPropertyInfo();
    return sub_2576A7E90();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    swift_allocObject();
    uint64_t v3 = sub_2576A7E30();
    uint64_t v5 = v4;
    uint64_t v6 = type metadata accessor for StoredPropertyInfo();
    MEMORY[0x270FA5388](v6);
    uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
    *uint64_t v5 = sub_2574FE700(0x65756C6176, 0xE500000000000000, KeyPath, 0, 1, 1);
    uint64_t result = v3;
    sub_257573B74();
  }
  return result;
}

uint64_t sub_257500934(uint64_t a1)
{
  return sub_25750073C(a1, (uint64_t)&off_2706651D0);
}

uint64_t sub_257500940(uint64_t a1, uint64_t a2)
{
  sub_2576A7F50();
  swift_getWitnessTable();
  uint64_t v3 = MEMORY[0x263F8D708];
  sub_2576A8110();
  long long v10 = v11;
  v9[2] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D08);
  uint64_t v5 = type metadata accessor for StoredPropertyInfo();
  v9[3] = v3;
  v9[4] = sub_2574BEF08();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_257495BE0((void (*)(char *, uint64_t))sub_2575025FC, (uint64_t)v9, v4, v5, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v7);
}

uint64_t sub_257500A50@<X0>(uint64_t *a1@<X8>)
{
  sub_2576A7F50();
  type metadata accessor for StoredPropertyInfo();
  sub_2574F050C();
  uint64_t v2 = sub_2576A85F0();
  uint64_t v4 = v3;
  uint64_t KeyPath = (uint64_t *)swift_getKeyPath();
  uint64_t result = sub_2574FE700(v2, v4, KeyPath, 0, 1, 1);
  *a1 = result;
  return result;
}

uint64_t sub_257500B14()
{
  return sub_2576A7F90();
}

uint64_t sub_257500B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  sub_2576A7F50();
  uint64_t v6 = (uint64_t (*)(uint64_t *, void))sub_2576A7F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v7, a1, v5);
  return v6(&v9, 0);
}

uint64_t sub_257500BE0(uint64_t a1)
{
  return sub_257500940(*v1, *(void *)(a1 + 16));
}

uint64_t sub_257500BF0(uint64_t a1)
{
  return sub_25750073C(a1, (uint64_t)&off_2706651F8);
}

uint64_t type metadata accessor for AnyStoredPropertyInfo()
{
  return self;
}

uint64_t sub_257500C20()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for StoredPropertyInfo()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257500C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_257500C78()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_257500D3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    long long v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v11 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *long long v11 = *v10;
    unint64_t v12 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v13 = (unint64_t *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v14 = *v13;
    swift_retain();
    if (v14 < 0xFFFFFFFF)
    {
      *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
    }
    else
    {
      unint64_t v15 = v13[1];
      *(void *)unint64_t v12 = v14;
      *(void *)(v12 + 8) = v15;
      swift_retain();
    }
    *(void *)((v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    sub_2576A7810();
  }
  return a1;
}

uint64_t sub_257500EB0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  unint64_t v4 = ((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  if (*(void *)(v4 & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_257500F70(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v10 = (unint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v10;
  swift_retain();
  if (v11 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    unint64_t v12 = v10[1];
    *(void *)unint64_t v9 = v11;
    *(void *)(v9 + 8) = v12;
    swift_retain();
  }
  *(void *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  sub_2576A7810();
  return a1;
}

uint64_t sub_257501060(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  long long v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (unint64_t *)(v9 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = *v11;
  if (*v10 < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      unint64_t v14 = v11[1];
      *long long v10 = v12;
      v10[1] = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)long long v10 = *(_OWORD *)v11;
    goto LABEL_8;
  }
  if (v12 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v13 = v11[1];
  *long long v10 = v12;
  v10[1] = v13;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2575011A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v10 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  }
  else
  {
    uint64_t v11 = *(void *)(v10 + 8);
    *(void *)unint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = v11;
  }
  *(void *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_25750128C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_release();
  unint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (unint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = *v10;
  if (*v9 < 0xFFFFFFFFuLL)
  {
    if (v11 >= 0xFFFFFFFF)
    {
      unint64_t v13 = v10[1];
      *unint64_t v9 = v11;
      v9[1] = v13;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (v11 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v12 = v10[1];
  *unint64_t v9 = v11;
  v9[1] = v12;
  swift_release();
LABEL_8:
  *(void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2575013B8(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v6 < a2)
  {
    unint64_t v8 = ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v9 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v10 = 2;
    }
    else {
      unsigned int v10 = a2 - v6 + 1;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = *((unsigned __int8 *)a1 + v8);
        if (!v13) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v13) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x257501558);
      case 4:
        int v13 = *(_DWORD *)((char *)a1 + v8);
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = v13 - 1;
        if (v9)
        {
          int v15 = 0;
          LODWORD(v9) = *a1;
        }
        return v6 + (v9 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 < 0x7FFFFFFF)
  {
    unint64_t v16 = *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v16 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    return (v16 + 1);
  }
  else
  {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, AssociatedTypeWitness);
  }
}

void sub_25750156C(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(unsigned int *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  size_t v10 = ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v13 = 0;
  }
  else
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v11 = a3 - v8 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
  }
  if (a2 > v8)
  {
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v14 = a2 - v8;
    }
    else {
      int v14 = 1;
    }
    if (((((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v15 = ~v8 + a2;
      bzero(a1, v10);
      *a1 = v15;
    }
    switch(v13)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v14;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v14;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v14;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x257501774);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v16 = (void *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v17 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v17 = (a2 - 1);
          }
          *unint64_t v16 = v17;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, AssociatedTypeWitness);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for RecursiveStoredPropertiesIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2575017B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2575017D0(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_14_0();
  v3();
  return a1;
}

uint64_t sub_257501828()
{
  return 1;
}

void sub_257501888()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_2576A8850();
  OUTLINED_FUNCTION_0_10();
  v30[0] = v9;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_3_25();
  uint64_t v13 = v11 - v12;
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)v30 - v15;
  uint64_t v17 = v7[3];
  uint64_t v18 = v7[4];
  __swift_project_boxed_opaque_existential_1(v7, v17);
  sub_257501B4C((uint64_t)v5, v17, v18);
  v30[1] = v3;
  sub_2576A9290();
  uint64_t v19 = swift_dynamicCastClass();
  if (v19)
  {
    uint64_t v20 = (uint64_t *)v19;
    uint64_t v21 = dynamic_cast_existential_0_class_conditional(v1);
    sub_25746B3D0((uint64_t)v7, (uint64_t)v31);
    if (v21)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      uint64_t v22 = 0;
      uint64_t v23 = v5[1];
      uint64_t v24 = v5[2];
      char v25 = 1;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(v31, v31[3]);
      sub_2575D1A20((uint64_t)v16);
      uint64_t v27 = v30[0];
      (*(void (**)(uint64_t, void, uint64_t))(v30[0] + 104))(v13, *MEMORY[0x263F8DD18], v8);
      char v28 = sub_2576A7990();
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v29(v13, v8);
      v29((uint64_t)v16, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      uint64_t v23 = v5[1];
      uint64_t v24 = v5[2];
      if (v28)
      {
        uint64_t v22 = 0;
        char v25 = 1;
      }
      else
      {
        char v25 = 0;
        uint64_t v22 = v5[3];
      }
    }
    type metadata accessor for StoredPropertyInfo();
    v30[2] = sub_2574FE700(v23, v24, v20, v22, v25, 0);
    swift_beginAccess();
    sub_2576A7F50();
    sub_2576A7810();
    swift_retain();
    sub_2576A7F10();
    swift_endAccess();
    swift_release();
    OUTLINED_FUNCTION_8_21();
  }
  else
  {
    OUTLINED_FUNCTION_8_21();
    swift_release();
  }
}

uint64_t sub_257501B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = j__OUTLINED_FUNCTION_3_51(a2, a3);
  sub_257502320(v5, v3, a1);
  return sub_257502118(24, (void (*)(uint64_t, uint64_t))sub_2575025D0);
}

uint64_t sub_257501BD8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StoredPropertyInfo();
  uint64_t result = swift_dynamicCastClass();
  uint64_t v3 = result;
  if (result) {
    uint64_t result = swift_retain();
  }
  *a1 = v3;
  return result;
}

uint64_t sub_257501C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + *(int *)(type metadata accessor for Field() + 36));
  sub_2576A7810();
  sub_2575CDFC4(v4, v2, v3, v5, v6, v7, v8, v9, v11, v12);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_257501C98(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = sub_2576A7B10();
  uint64_t v9 = v8;
  uint64_t v10 = sub_2574BAE50(v7, v8, *a3);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_2576A8600();
    sub_257501D20(v11, a4, v7, v9, a2, v12, v13 & 1);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_257501D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v12 = a7 & 1;
  type metadata accessor for StoredPropertyInfo();
  sub_2574FE784(a3, a4, a5, a1, a6, v12, 0);
  swift_beginAccess();
  sub_2576A7F50();
  sub_2576A7810();
  swift_retain();
  sub_2576A7F10();
  return swift_endAccess();
}

uint64_t sub_257501E3C()
{
  return sub_2576A8660();
}

uint64_t sub_257501EC8(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2576A8850();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v18 - v10;
  *a1 = -2147483644;
  unint64_t v12 = *(void *)(a3 + 24);
  if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12))
  {
    uint64_t result = sub_2576A8B50();
    __break(1u);
  }
  else
  {
    sub_2575D1A20((uint64_t)v18 - v10);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F8DD20], v5);
    sub_2576A7D70();
    sub_2576A7D70();
    uint64_t v14 = v18[0];
    uint64_t v13 = v18[1];
    uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    v15(v9, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v15)(v11, v5);
    if (v13 == v14) {
      int v17 = 0x1000000;
    }
    else {
      int v17 = 50331648;
    }
    a1[2] = v17 | v12;
  }
  return result;
}

uint64_t sub_257502118(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  sub_2575D1888(v2, (uint64_t)&v8);
  if (!v10) {
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028C8);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    unint64_t v8 = 0xD00000000000002DLL;
    unint64_t v9 = 0x80000002576C8E70;
    char v11 = 9;
    goto LABEL_12;
  }
  if (__OFADD__((*(unsigned int *)(v7 + 48) + 3) & 0x1FFFFFFFCLL, 4 * (a1 / 4)))
  {
    __break(1u);
LABEL_8:
    __break(1u);
LABEL_9:
    sub_2575017D0((uint64_t)&v8, &qword_26A0028B0);
    goto LABEL_10;
  }
  uint64_t v5 = swift_allocObject();
  if (!v5)
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    sub_2576A8730();
    sub_2576A7B00();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    char v11 = 9;
LABEL_12:
    sub_25746BE6C();
  }
  *(void *)(v5 + 16) = 0;
  if (__OFSUB__(a1, 8)) {
    goto LABEL_8;
  }
  a2(v5 + 24, v5 + 24 + a1 - 8);
  return swift_retain();
}

uint64_t sub_257502320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + *(int *)(type metadata accessor for Field() + 36));
  return sub_257502398(v5, a2, a3);
}

uint64_t sub_257502398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2576A8850();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2575D1A20((uint64_t)v7);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  int v9 = *MEMORY[0x263F8DD18];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8 == v9) {
    return sub_2576A8EC0();
  }
  if (*(unsigned char *)(a3 + 32) == 1) {
    return sub_2576A89D0();
  }
  return sub_2576A9290();
}

uint64_t sub_25750250C(uint64_t a1, uint64_t a2)
{
  return sub_257501C34(a1, a2);
}

uint64_t sub_257502514()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25750254C(uint64_t a1, uint64_t a2)
{
  return sub_257501C98(a1, a2, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_257502554()
{
  return sub_257501828();
}

uint64_t sub_257502560@<X0>(uint64_t *a1@<X8>)
{
  return sub_257501BD8(a1);
}

uint64_t sub_25750257C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2574FFFAC(a1, *(void *)(v2 + 40), *(void *)(v2 + 24), a2);
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType()) {
    return a1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2575025D0(_DWORD *a1, uint64_t a2)
{
  return sub_257501EC8(a1, a2, *(void *)(v2 + 32));
}

uint64_t sub_2575025DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2575025FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_257500A50(a1);
}

uint64_t sub_257502624()
{
  return 16;
}

BOOL sub_257502630(void *a1, void *a2)
{
  return *a2 == *a1;
}

uint64_t sub_257502644(void *a1)
{
  return MEMORY[0x270F9E010](*a1);
}

void *sub_25750264C(void *result, void *a2)
{
  *a2 = result[1];
  a2[1] = *result;
  return result;
}

uint64_t sub_257502670@<X0>(uint64_t *a1@<X8>)
{
  return sub_257502560(a1);
}

void OUTLINED_FUNCTION_1_36(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  *(void *)(a1 - 48) = 0x206874615079656BLL;
  *(void *)(a1 - 40) = v4;
  strcpy((char *)(a1 - 23), "c bitmask ");
  *(void *)(a1 - 31) = *(uint64_t *)((char *)v1 + 9);
  *(void *)(v3 - 112) = v2;
}

uint64_t OUTLINED_FUNCTION_5_22@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 88) = a1;
  return MEMORY[0x270FA0420](0, 65540, v2 - 112, v1, 0);
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_23()
{
  return sub_2576A7C60();
}

uint64_t OUTLINED_FUNCTION_14_18()
{
  return type metadata accessor for StoredPropertyInfo();
}

void sub_25750278C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      uint64_t v6 = MEMORY[0x263F8EE78];
      sub_2574E7154();
      if (v2 < 0) {
        break;
      }
      uint64_t v3 = 0;
      while (v2 != v3)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          MEMORY[0x25A2B8DB0](v3, a1);
        }
        else {
          swift_retain();
        }
        swift_retain();
        swift_getAtKeyPath();
        swift_release_n();
        unint64_t v4 = *(void *)(v6 + 16);
        if (v4 >= *(void *)(v6 + 24) >> 1) {
          sub_2574E7154();
        }
        ++v3;
        *(void *)(v6 + 16) = v4 + 1;
        *(void *)(v6 + 8 * v4 + 32) = v5;
        if (v2 == v3) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_14:
      sub_2576A7810();
      uint64_t v2 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_release();
  }
}

void sub_25750292C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2574E7774();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    uint64_t v3 = 0;
    unint64_t v10 = v1 & 0xC000000000000001;
    unint64_t v4 = v1;
    while (v2 != v3)
    {
      if (v10) {
        MEMORY[0x25A2B8DB0](v3, v1);
      }
      else {
        swift_retain();
      }
      uint64_t v5 = sub_2576A8600();
      char v7 = v6;
      swift_release();
      unint64_t v8 = *(void *)(v11 + 16);
      if (v8 >= *(void *)(v11 + 24) >> 1) {
        sub_2574E7774();
      }
      ++v3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(unsigned char *)(v9 + 40) = v7 & 1;
      unint64_t v1 = v4;
      if (v2 == v3) {
        return;
      }
    }
    __break(1u);
LABEL_15:
    sub_2576A7810();
    uint64_t v2 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
}

void sub_257502AA8()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v3 = v2;
  LODWORD(v62) = v4;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_0_10();
  uint64_t v64 = v7;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_6_2();
  uint64_t v60 = v9;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_7_11();
  uint64_t v59 = v11;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_7_11();
  uint64_t v61 = v13;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_7_11();
  uint64_t v63 = v15;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v16);
  sub_2576A8870();
  swift_getWitnessTable();
  uint64_t v17 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v18);
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_49_5();
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v55 - v22;
  if (!v6)
  {
LABEL_38:
    OUTLINED_FUNCTION_8_21();
    return;
  }
  uint64_t v24 = *(void *)(v64 + 16);
  uint64_t v66 = v64 + 16;
  uint64_t v67 = v0;
  uint64_t v25 = v21;
  uint64_t v65 = v24;
  OUTLINED_FUNCTION_5_18();
  v26();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v62 & 1;
  *(void *)(v27 + 24) = v6;
  sub_2574FE820();
  long long v56 = v23;
  uint64_t v57 = v25;
  OUTLINED_FUNCTION_5_18();
  v28();
  swift_getWitnessTable();
  sub_2576A7C40();
  sub_2574FF0E8();
  uint64_t v62 = v6;
  if (!(void)v68)
  {
    uint64_t v58 = MEMORY[0x263F8EE78];
LABEL_37:
    long long v54 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v54(v1, v17);
    long long v68 = 0uLL;
    Array<A>.resolve(descriptor:)(&v68, v58);
    swift_bridgeObjectRelease();
    v54((uint64_t)v56, v17);
    goto LABEL_38;
  }
  uint64_t v58 = MEMORY[0x263F8EE78];
  uint64_t v29 = v63;
  v64 += 8;
  uint64_t v30 = v64 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  while (1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_45_5();
    sub_2576A89D0();
    if (!OUTLINED_FUNCTION_38_5()) {
      break;
    }
    OUTLINED_FUNCTION_2_27();
    v31();
    if (v62)
    {
      uint64_t v55 = v30;
      swift_retain();
      OUTLINED_FUNCTION_17_15();
      uint64_t v32 = *(void (**)(void))v64;
      uint64_t v36 = OUTLINED_FUNCTION_7_21();
      ((void (*)(uint64_t))v32)(v36);
      OUTLINED_FUNCTION_51_4();
      if (v29)
      {
        OUTLINED_FUNCTION_2_27();
        v42();
        OUTLINED_FUNCTION_17_15();
        uint64_t v43 = OUTLINED_FUNCTION_7_21();
        ((void (*)(uint64_t))v32)(v43);
        OUTLINED_FUNCTION_33_7();
        if (!v45 && v44 < 0)
        {
          swift_release();
          swift_retain();
          swift_getAtKeyPath();
          swift_release();
          uint64_t v46 = *(void *)(v68 + 32);
          uint64_t v29 = v63;
          if ((~v46 & 0xF000000000000007) == 0) {
            goto LABEL_40;
          }
          goto LABEL_29;
        }
LABEL_25:
        OUTLINED_FUNCTION_28_8();
        swift_release();
        uint64_t v29 = v63;
LABEL_35:
        uint64_t v30 = v55;
        goto LABEL_7;
      }
      uint64_t v30 = v55;
      uint64_t v29 = v63;
    }
    else
    {
      uint64_t v32 = *(void (**)(void))v64;
      swift_retain();
      OUTLINED_FUNCTION_16_17();
      v32();
    }
    uint64_t v37 = v61;
    OUTLINED_FUNCTION_2_27();
    v38();
    ((void (*)(uint64_t, uint64_t))v32)(v37, v3);
    OUTLINED_FUNCTION_28_8();
LABEL_7:
    sub_2574FF0E8();
    if (!(void)v68) {
      goto LABEL_37;
    }
  }
  sub_2576A89D0();
  if (!OUTLINED_FUNCTION_38_5())
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v33 = v59;
  OUTLINED_FUNCTION_2_27();
  v34();
  if ((v62 & 2) == 0)
  {
    uint64_t v35 = *(void (**)(void))v64;
    swift_retain();
    OUTLINED_FUNCTION_16_17();
    v35();
LABEL_18:
    uint64_t v40 = v60;
    OUTLINED_FUNCTION_2_27();
    v41();
    ((void (*)(uint64_t, uint64_t))v35)(v40, v3);
    OUTLINED_FUNCTION_28_8();
    uint64_t v29 = v63;
    goto LABEL_7;
  }
  uint64_t v55 = v30;
  swift_retain();
  OUTLINED_FUNCTION_17_15();
  uint64_t v35 = *(void (**)(void))v64;
  uint64_t v39 = OUTLINED_FUNCTION_7_21();
  ((void (*)(uint64_t))v35)(v39);
  OUTLINED_FUNCTION_51_4();
  if (!v33)
  {
    uint64_t v30 = v55;
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_2_27();
  v47();
  OUTLINED_FUNCTION_17_15();
  uint64_t v48 = OUTLINED_FUNCTION_7_21();
  ((void (*)(uint64_t))v35)(v48);
  OUTLINED_FUNCTION_33_7();
  if (v45) {
    goto LABEL_25;
  }
  uint64_t v29 = v63;
  if ((v49 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_28_8();
    swift_release();
    goto LABEL_35;
  }
  swift_release();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v46 = *(void *)(v68 + 32);
  if ((~v46 & 0xF000000000000007) != 0)
  {
LABEL_29:
    if ((v46 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_13_5();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_35_1();
      goto LABEL_41;
    }
    sub_257486C84();
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2574720D8();
      uint64_t v58 = v52;
    }
    unint64_t v50 = *(void *)(v58 + 16);
    if (v50 >= *(void *)(v58 + 24) >> 1)
    {
      sub_2574720D8();
      uint64_t v58 = v53;
    }
    uint64_t v51 = v58;
    *(void *)(v58 + 16) = v50 + 1;
    *(void *)(v51 + 8 * v50 + 32) = v46 & 0x7FFFFFFFFFFFFFFFLL;
    OUTLINED_FUNCTION_28_8();
    goto LABEL_35;
  }
LABEL_40:
  OUTLINED_FUNCTION_36_0();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_50_0();
LABEL_41:
  sub_2576A8B60();
  __break(1u);
}

Swift::Void __swiftcall Layer.prepare(for:)(NeuralNetworks::LearningPhase a1)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v1;
  int v4 = v3;
  uint64_t v25 = v5;
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A89D0();
  v24[1] = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_21_15();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v24 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v24 - v19;
  char v21 = *v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v2, v25);
  sub_2574FE820();
  OUTLINED_FUNCTION_5_18();
  v22();
  swift_getWitnessTable();
  sub_2576A7C40();
  sub_2574FF0E8();
  while (v26)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v26) = v21;
    swift_setAtWritableKeyPath();
    swift_release();
    sub_2574FF0E8();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v18, v11);
  v23(v20, v11);
  OUTLINED_FUNCTION_8_21();
}

uint64_t Layer.callAsFunction(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_37_4();
    uint64_t v3 = v4();
  }
  MEMORY[0x270FA5388](v3);
  return sub_2575D5C88();
}

uint64_t sub_257503450(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_257503478(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_25751857C((uint64_t)__dst);
  sub_257627530();
  memcpy(v47, __src, 0x80uLL);
  memcpy(v44, __src, sizeof(v44));
  sub_2575185F4((uint64_t)v47);
  uint64_t v2 = v44[12];
  if (*(void *)(v44[12] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C284();
        uint64_t v2 = v3;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      if (!v4) {
        break;
      }
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v2 + 16 * v5;
      uint64_t v7 = *(void *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(void *)(v2 + 16) = v5;
      v44[12] = v2;
      LODWORD(v27) = v6;
      uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *))v44[13];
      if (v44[13])
      {
        uint64_t v9 = *(void *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        char v10 = v8(v9, &v27);
        swift_endAccess();
        if (v10)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029A8);
          sub_257492AF8(&qword_26A0029C0, &qword_26A0029A8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029A8);
      swift_dynamicCastClassUnconditional();
      uint64_t v11 = v44[15];
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v44[15] + 16);
      if (__OFADD__(v14, v13)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v11 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v11 = v15;
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v16 = *(void *)(v11 + 16);
        if ((*(void *)(v11 + 24) >> 1) - v16 < v13) {
          goto LABEL_35;
        }
        unint64_t v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v19 = *(void *)(v11 + 16);
          BOOL v20 = __OFADD__(v19, v13);
          uint64_t v21 = v19 + v13;
          if (v20) {
            goto LABEL_36;
          }
          *(void *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029B0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A0029B8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v22 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          uint64_t *v24 = sub_257490918();
          swift_release();
        }
        v22(v43, 0);
        swift_release();
      }
      swift_release();
      uint64_t v2 = v44[12];
      if (!*(void *)(v44[12] + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    uint64_t v27 = v44[0];
    __int16 v28 = v44[1];
    uint64_t v29 = v44[2];
    __int16 v30 = v44[3];
    char v31 = BYTE2(v44[3]);
    uint64_t v32 = v44[4];
    char v33 = v44[5];
    uint64_t v34 = *(void *)((char *)&v44[5] + 4);
    uint64_t v35 = v44[7];
    char v36 = v44[8];
    uint64_t v37 = v44[9];
    char v38 = v44[10];
    uint64_t v39 = v44[11];
    uint64_t v40 = v2;
    long long v41 = *(_OWORD *)&v44[13];
    uint64_t v42 = v44[15];
    sub_2575186A0((uint64_t)&v27);
    memcpy(v43, __src, sizeof(v43));
    return sub_2575186A0((uint64_t)v43);
  }
  return result;
}

uint64_t sub_257503900(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_2574B3ABC((uint64_t)__dst);
  sub_257628108();
  memcpy(v35, __src, 0xA8uLL);
  memcpy(v32, __src, sizeof(v32));
  sub_257518CB4((uint64_t)v35);
  uint64_t v2 = *(void *)&v32[136];
  if (*(void *)(*(void *)&v32[136] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C31C();
        uint64_t v2 = v3;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      if (!v4) {
        break;
      }
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v2 + 16 * v5;
      uint64_t v7 = *(void *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(void *)(v2 + 16) = v5;
      *(void *)&v32[136] = v2;
      v27[0] = v6;
      uint64_t v8 = *(uint64_t (**)(uint64_t, _DWORD *))&v32[144];
      if (*(void *)&v32[144])
      {
        uint64_t v9 = *(void *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        char v10 = v8(v9, v27);
        swift_endAccess();
        if (v10)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A003028);
          sub_257492AF8(&qword_26A003040, &qword_26A003028);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003028);
      swift_dynamicCastClassUnconditional();
      uint64_t v11 = *(void *)&v32[160];
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(*(void *)&v32[160] + 16);
      if (__OFADD__(v14, v13)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v11 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v11 = v15;
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v16 = *(void *)(v11 + 16);
        if ((*(void *)(v11 + 24) >> 1) - v16 < v13) {
          goto LABEL_35;
        }
        unint64_t v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v19 = *(void *)(v11 + 16);
          BOOL v20 = __OFADD__(v19, v13);
          uint64_t v21 = v19 + v13;
          if (v20) {
            goto LABEL_36;
          }
          *(void *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003030);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A003038), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v22 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          uint64_t *v24 = sub_257490918();
          swift_release();
        }
        v22(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v2 = *(void *)&v32[136];
      if (!*(void *)(*(void *)&v32[136] + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    memcpy(v27, v32, sizeof(v27));
    uint64_t v28 = v2;
    long long v29 = *(_OWORD *)&v32[144];
    uint64_t v30 = *(void *)&v32[160];
    sub_257518D34((uint64_t)v27);
    memcpy(v31, __src, sizeof(v31));
    return sub_257518D34((uint64_t)v31);
  }
  return result;
}

uint64_t sub_257503D24(uint64_t a1)
{
  memcpy(__dst, v1, 0x9CuLL);
  sub_257518850((uint64_t)__dst);
  sub_257628688();
  memcpy(v35, __src, 0xC0uLL);
  memcpy(v32, __src, sizeof(v32));
  sub_2575188FC((uint64_t)v35);
  uint64_t v2 = v32[20];
  if (*(void *)(v32[20] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C368();
        uint64_t v2 = v3;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      if (!v4) {
        break;
      }
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v2 + 16 * v5;
      uint64_t v7 = *(void *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(void *)(v2 + 16) = v5;
      v32[20] = v2;
      v27[0] = v6;
      uint64_t v8 = (uint64_t (*)(uint64_t, _DWORD *))v32[21];
      if (v32[21])
      {
        uint64_t v9 = *(void *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        char v10 = v8(v9, v27);
        swift_endAccess();
        if (v10)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A48);
          sub_257492AF8(&qword_26A002A60, &qword_26A002A48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A48);
      swift_dynamicCastClassUnconditional();
      uint64_t v11 = v32[23];
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v32[23] + 16);
      if (__OFADD__(v14, v13)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v11 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v11 = v15;
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v16 = *(void *)(v11 + 16);
        if ((*(void *)(v11 + 24) >> 1) - v16 < v13) {
          goto LABEL_35;
        }
        unint64_t v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v19 = *(void *)(v11 + 16);
          BOOL v20 = __OFADD__(v19, v13);
          uint64_t v21 = v19 + v13;
          if (v20) {
            goto LABEL_36;
          }
          *(void *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002A58), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v22 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          uint64_t *v24 = sub_257490918();
          swift_release();
        }
        v22(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v2 = v32[20];
      if (!*(void *)(v32[20] + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    memcpy(v27, v32, 0x9CuLL);
    uint64_t v28 = v2;
    long long v29 = *(_OWORD *)&v32[21];
    uint64_t v30 = v32[23];
    sub_2575189DC((uint64_t)v27);
    memcpy(v31, __src, sizeof(v31));
    return sub_2575189DC((uint64_t)v31);
  }
  return result;
}

uint64_t sub_257504148(uint64_t a1)
{
  memcpy(__dst, v1, 0x43uLL);
  sub_257518BEC((uint64_t)__dst);
  sub_257628C08();
  uint64_t v2 = v65;
  char v32 = v50;
  uint64_t v33 = v51;
  char v34 = v52;
  uint64_t v35 = v53;
  char v36 = v54;
  char v37 = v55;
  uint64_t v38 = v56;
  char v39 = v57;
  char v40 = v58;
  char v41 = v59;
  uint64_t v42 = v60;
  char v43 = v61;
  char v44 = v62;
  char v45 = v63;
  uint64_t v46 = v64;
  uint64_t v47 = v65;
  uint64_t v48 = v66;
  uint64_t v49 = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v65);
  uint64_t v3 = *(void *)(v64 + 16);
  sub_2576A7810();
  if (v3)
  {
    uint64_t v4 = v64;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C198();
        uint64_t v4 = v5;
      }
      uint64_t v6 = *(void *)(v4 + 16);
      if (!v6) {
        break;
      }
      uint64_t v7 = v6 - 1;
      uint64_t v8 = v4 + 16 * v7;
      uint64_t v9 = *(void *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(void *)(v4 + 16) = v7;
      uint64_t v46 = v4;
      int v31 = v8;
      char v10 = (uint64_t (*)(uint64_t, int *))v47;
      if (v47)
      {
        uint64_t v11 = *(void *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        char v12 = v10(v11, &v31);
        swift_endAccess();
        if (v12)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DD8);
          sub_257492AF8(&qword_26A002DF0, &qword_26A002DD8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DD8);
      swift_dynamicCastClassUnconditional();
      uint64_t v13 = v49;
      uint64_t v14 = *(void *)(v9 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v49 + 16);
      if (__OFADD__(v16, v15)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(void *)(v13 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v13 = v17;
      }
      if (*(void *)(v14 + 16))
      {
        uint64_t v18 = *(void *)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - v18 < v15) {
          goto LABEL_38;
        }
        unint64_t v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          uint64_t v21 = *(void *)(v13 + 16);
          BOOL v22 = __OFADD__(v21, v15);
          uint64_t v23 = v21 + v15;
          if (v22) {
            goto LABEL_39;
          }
          *(void *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v24 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v26 = sub_257490918();
          swift_release();
        }
        v24(v30, 0);
        swift_release();
      }
      swift_release();
      uint64_t v4 = v46;
      if (!*(void *)(v46 + 16))
      {
        uint64_t v28 = v47;
        uint64_t v2 = v65;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v65;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257504660(uint64_t a1)
{
  sub_25762924C();
  uint64_t v2 = v36;
  uint64_t v31 = v35;
  uint64_t v32 = v36;
  uint64_t v33 = v37;
  uint64_t v34 = v38;
  swift_retain();
  sub_25747A4D0(v36);
  uint64_t v3 = *(void *)(v35 + 16);
  sub_2576A7810();
  if (v3)
  {
    uint64_t v4 = v35;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C3B4();
        uint64_t v4 = v5;
      }
      uint64_t v6 = *(void *)(v4 + 16);
      if (!v6) {
        break;
      }
      uint64_t v7 = v6 - 1;
      uint64_t v8 = v4 + 16 * v7;
      uint64_t v9 = *(void *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(void *)(v4 + 16) = v7;
      uint64_t v31 = v4;
      int v30 = v8;
      char v10 = (uint64_t (*)(uint64_t, int *))v32;
      if (v32)
      {
        uint64_t v11 = *(void *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        char v12 = v10(v11, &v30);
        swift_endAccess();
        if (v12)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C28);
          sub_257492AF8(&qword_26A002C40, &qword_26A002C28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C28);
      swift_dynamicCastClassUnconditional();
      uint64_t v13 = v34;
      uint64_t v14 = *(void *)(v9 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v34 + 16);
      if (__OFADD__(v16, v15)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(void *)(v13 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v13 = v17;
      }
      if (*(void *)(v14 + 16))
      {
        uint64_t v18 = *(void *)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - v18 < v15) {
          goto LABEL_38;
        }
        unint64_t v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          uint64_t v21 = *(void *)(v13 + 16);
          BOOL v22 = __OFADD__(v21, v15);
          uint64_t v23 = v21 + v15;
          if (v22) {
            goto LABEL_39;
          }
          *(void *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002C38), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v24 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v26 = sub_257490918();
          swift_release();
        }
        v24(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v4 = v31;
      if (!*(void *)(v31 + 16))
      {
        uint64_t v27 = v32;
        uint64_t v2 = v36;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v27 = v36;
LABEL_34:
    swift_release();
    sub_25747A4E0(v27);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257504A84(uint64_t a1)
{
  long long v2 = v1[1];
  v59[0] = *v1;
  v59[1] = v2;
  v59[2] = v1[2];
  sub_257518C68((uint64_t)v59);
  sub_257629738();
  uint64_t v3 = v56;
  uint64_t v33 = v46;
  char v34 = v47;
  char v35 = v48;
  uint64_t v36 = v49;
  char v37 = v50;
  char v38 = v51;
  char v39 = v52;
  uint64_t v40 = v53;
  uint64_t v41 = v54;
  uint64_t v42 = v55;
  uint64_t v43 = v56;
  uint64_t v44 = v57;
  uint64_t v45 = v58;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v56);
  uint64_t v4 = *(void *)(v55 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v55;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C400();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v42 = v5;
      int v32 = v9;
      uint64_t v11 = (uint64_t (*)(uint64_t, int *))v43;
      if (v43)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F08);
          sub_257492AF8(&qword_26A002F20, &qword_26A002F08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F08);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v45;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v45 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002F18), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v42;
      if (!*(void *)(v42 + 16))
      {
        uint64_t v29 = v43;
        uint64_t v3 = v56;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v29 = v56;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v29);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257504F6C(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = v2[2];
  if (*((unsigned char *)v2 + 9)) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  uint64_t v6 = v5 | *((unsigned __int8 *)v2 + 8);
  swift_retain();
  swift_retain();
  sub_257629D04(v3, v6, v4, (uint64_t)sub_25751447C, 0, v7, v8, v9, v37, v38, v39, v40, v41, a1, v44[0], v44[1], v44[2], v44[3], v45,
    v46);
  uint64_t v10 = v59;
  uint64_t v46 = v54;
  char v47 = v55;
  char v48 = v56;
  uint64_t v49 = v57;
  uint64_t v50 = v58;
  uint64_t v51 = v59;
  uint64_t v52 = v60;
  uint64_t v53 = v61;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v59);
  uint64_t v11 = *(void *)(v58 + 16);
  sub_2576A7810();
  if (v11)
  {
    uint64_t v12 = v58;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C44C();
        uint64_t v12 = v13;
      }
      uint64_t v14 = *(void *)(v12 + 16);
      if (!v14) {
        break;
      }
      uint64_t v15 = v14 - 1;
      uint64_t v16 = v12 + 16 * v15;
      uint64_t v17 = *(void *)(v16 + 32);
      LODWORD(v16) = *(_DWORD *)(v16 + 40);
      *(void *)(v12 + 16) = v15;
      uint64_t v50 = v12;
      HIDWORD(v45) = v16;
      uint64_t v18 = (uint64_t (*)(uint64_t, char *))v51;
      if (v51)
      {
        uint64_t v19 = *(void *)(v17 + 32);
        swift_beginAccess();
        swift_retain();
        char v20 = v18(v19, (char *)&v45 + 4);
        swift_endAccess();
        if (v20)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B28);
          sub_257492AF8(&qword_26A002B40, &qword_26A002B28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B28);
      swift_dynamicCastClassUnconditional();
      uint64_t v21 = v53;
      uint64_t v22 = *(void *)(v17 + 16);
      uint64_t v23 = *(void *)(v22 + 16);
      uint64_t v24 = *(void *)(v53 + 16);
      if (__OFADD__(v24, v23)) {
        goto LABEL_39;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v24 + v23 > *(void *)(v21 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v21 = v25;
      }
      if (*(void *)(v22 + 16))
      {
        uint64_t v26 = *(void *)(v21 + 16);
        if ((*(void *)(v21 + 24) >> 1) - v26 < v23) {
          goto LABEL_41;
        }
        unint64_t v27 = v21 + 16 * v26 + 32;
        if (v22 + 32 < v27 + 16 * v23 && v27 < v22 + 32 + 16 * v23) {
          goto LABEL_43;
        }
        swift_arrayInitWithCopy();
        if (v23)
        {
          uint64_t v29 = *(void *)(v21 + 16);
          BOOL v30 = __OFADD__(v29, v23);
          uint64_t v31 = v29 + v23;
          if (v30) {
            goto LABEL_42;
          }
          *(void *)(v21 + 16) = v31;
        }
      }
      else if (v23)
      {
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002B38), swift_dynamicCastClass()))
      {
        swift_retain();
        int v32 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        char v34 = v33;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v43);
        }
        else
        {
          *char v34 = sub_257490918();
          swift_release();
        }
        v32(v44, 0);
        swift_release();
      }
      swift_release();
      uint64_t v12 = v50;
      if (!*(void *)(v50 + 16))
      {
        uint64_t v35 = v51;
        uint64_t v10 = v59;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v35 = v59;
LABEL_37:
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v35);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750542C(uint64_t a1)
{
  long long v2 = v1[1];
  v51[0] = *v1;
  v51[1] = v2;
  sub_257518B18((uint64_t)v51);
  sub_25762A2B0();
  uint64_t v3 = v48;
  char v33 = v42;
  uint64_t v34 = v43;
  int v35 = v44;
  uint64_t v36 = v45;
  uint64_t v37 = v46;
  uint64_t v38 = v47;
  uint64_t v39 = v48;
  uint64_t v40 = v49;
  uint64_t v41 = v50;
  swift_retain();
  swift_retain();
  sub_25747A4D0(v48);
  uint64_t v4 = *(void *)(v47 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v47;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C498();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v38 = v5;
      int v32 = v9;
      uint64_t v11 = (uint64_t (*)(uint64_t, int *))v39;
      if (v39)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AE8);
          sub_257492AF8(&qword_26A002B00, &qword_26A002AE8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AE8);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v41;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v41 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002AF8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        unint64_t v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *unint64_t v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v38;
      if (!*(void *)(v38 + 16))
      {
        uint64_t v28 = v39;
        uint64_t v3 = v48;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v48;
LABEL_34:
    swift_release();
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2575058A8()
{
  void (*v9)(uint64_t *__return_ptr, unsigned char *, BOOL (*)(uint64_t), void);
  void (*v10)(uint64_t *__return_ptr, unsigned char *, BOOL (*)(uint64_t), void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, int *);
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  void (*v33)(char *, void);
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t *v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  char v41[36];
  int v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  long long v50;
  long long v51;
  long long v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(uint64_t, int *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  long long v65;
  long long v66;
  long long v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned char v73[96];

  OUTLINED_FUNCTION_9_22();
  uint64_t v37 = v1;
  uint64_t v38 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v39 = v8;
  uint64_t v40 = v7;
  uint64_t v10 = v9;
  memcpy(v73, v0, 0x58uLL);
  sub_257518F00((uint64_t)v73);
  v10(&v58, v73, sub_25751447C, 0);
  uint64_t v11 = v69;
  uint64_t v12 = v70;
  uint64_t v43 = v58;
  int v44 = v59;
  uint64_t v45 = v60;
  uint64_t v46 = v61;
  uint64_t v47 = v62;
  uint64_t v48 = v63;
  uint64_t v49 = v64;
  uint64_t v50 = v65;
  uint64_t v51 = v66;
  uint64_t v52 = v67;
  uint64_t v53 = v68;
  uint64_t v54 = v69;
  char v55 = (uint64_t (*)(uint64_t, int *))v70;
  char v56 = v71;
  uint64_t v57 = v72;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v12);
  char v13 = *(void *)(v11 + 16);
  sub_2576A7810();
  if (v13)
  {
    uint64_t v14 = v11;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = v39(v14);
      }
      uint64_t v15 = *(void *)(v14 + 16);
      if (!v15) {
        break;
      }
      uint64_t v16 = v15 - 1;
      uint64_t v17 = v14 + 16 * v16;
      uint64_t v18 = *(void *)(v17 + 32);
      LODWORD(v17) = *(_DWORD *)(v17 + 40);
      *(void *)(v14 + 16) = v16;
      uint64_t v54 = v14;
      char v42 = v17;
      uint64_t v19 = v55;
      if (v55)
      {
        unint64_t v20 = *(void *)(v18 + 32);
        swift_beginAccess();
        swift_retain();
        uint64_t v21 = v19(v20, &v42);
        swift_endAccess();
        if (v21)
        {
          __swift_instantiateConcreteTypeFromMangledName(v6);
          sub_257492AF8(v37, v6);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(v6);
      swift_dynamicCastClassUnconditional();
      uint64_t v22 = v57;
      BOOL v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v23 + 16);
      uint64_t v25 = *(void *)(v57 + 16);
      if (__OFADD__(v25, v24)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v25 + v24 > *(void *)(v22 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v22 = v26;
      }
      if (*(void *)(v23 + 16))
      {
        unint64_t v27 = *(void *)(v22 + 16);
        if ((*(void *)(v22 + 24) >> 1) - v27 < v24) {
          goto LABEL_38;
        }
        uint64_t v28 = v22 + 16 * v27 + 32;
        if (v23 + 32 < v28 + 16 * v24 && v28 < v23 + 32 + 16 * v24) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v24)
        {
          BOOL v30 = *(void *)(v22 + 16);
          uint64_t v31 = __OFADD__(v30, v24);
          int v32 = v30 + v24;
          if (v31) {
            goto LABEL_39;
          }
          *(void *)(v22 + 16) = v32;
        }
      }
      else if (v24)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(v4);
      if (OUTLINED_FUNCTION_38_5() || (__swift_instantiateConcreteTypeFromMangledName(v38), OUTLINED_FUNCTION_38_5()))
      {
        swift_retain();
        char v33 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        int v35 = v34;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v40);
        }
        else
        {
          const char *v35 = sub_257490918();
          swift_release();
        }
        v33(v41, 0);
        swift_release();
      }
      swift_release();
      uint64_t v14 = v54;
      if (!*(void *)(v54 + 16))
      {
        uint64_t v36 = (uint64_t)v55;
        uint64_t v12 = v70;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    OUTLINED_FUNCTION_35_1();
    sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v36 = v12;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v36);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v12);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_21();
  }
}

uint64_t sub_257505DA0(uint64_t a1)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_257518DB4((uint64_t)__dst);
  sub_25762ADAC();
  memcpy(v47, __src, 0x98uLL);
  memcpy(v44, __src, sizeof(v44));
  sub_257518E00((uint64_t)v47);
  uint64_t v2 = *(void *)&v44[120];
  if (*(void *)(*(void *)&v44[120] + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C530();
        uint64_t v2 = v3;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      if (!v4) {
        break;
      }
      uint64_t v5 = v4 - 1;
      uint64_t v6 = v2 + 16 * v5;
      uint64_t v7 = *(void *)(v6 + 32);
      LODWORD(v6) = *(_DWORD *)(v6 + 40);
      *(void *)(v2 + 16) = v5;
      *(void *)&v44[120] = v2;
      LODWORD(v27) = v6;
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t *))&v44[128];
      if (*(void *)&v44[128])
      {
        uint64_t v9 = *(void *)(v7 + 32);
        swift_beginAccess();
        swift_retain();
        char v10 = v8(v9, &v27);
        swift_endAccess();
        if (v10)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A003068);
          sub_257492AF8(&qword_26A003080, &qword_26A003068);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003068);
      swift_dynamicCastClassUnconditional();
      uint64_t v11 = *(void *)&v44[144];
      uint64_t v12 = *(void *)(v7 + 16);
      uint64_t v13 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(*(void *)&v44[144] + 16);
      if (__OFADD__(v14, v13)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v14 + v13 > *(void *)(v11 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v11 = v15;
      }
      if (*(void *)(v12 + 16))
      {
        uint64_t v16 = *(void *)(v11 + 16);
        if ((*(void *)(v11 + 24) >> 1) - v16 < v13) {
          goto LABEL_35;
        }
        unint64_t v17 = v11 + 16 * v16 + 32;
        if (v12 + 32 < v17 + 16 * v13 && v17 < v12 + 32 + 16 * v13) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v19 = *(void *)(v11 + 16);
          BOOL v20 = __OFADD__(v19, v13);
          uint64_t v21 = v19 + v13;
          if (v20) {
            goto LABEL_36;
          }
          *(void *)(v11 + 16) = v21;
        }
      }
      else if (v13)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003070);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A003078), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v22 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v24 = v23;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          uint64_t *v24 = sub_257490918();
          swift_release();
        }
        v22(v43, 0);
        swift_release();
      }
      swift_release();
      uint64_t v2 = *(void *)&v44[120];
      if (!*(void *)(*(void *)&v44[120] + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    uint64_t v27 = *(void *)v44;
    char v28 = v44[8];
    char v29 = v44[9];
    uint64_t v30 = *(void *)&v44[16];
    char v31 = v44[24];
    char v32 = v44[25];
    char v33 = v44[26];
    long long v34 = *(_OWORD *)&v44[32];
    long long v35 = *(_OWORD *)&v44[48];
    long long v36 = *(_OWORD *)&v44[64];
    long long v37 = *(_OWORD *)&v44[80];
    long long v38 = *(_OWORD *)&v44[96];
    uint64_t v39 = *(void *)&v44[112];
    uint64_t v40 = v2;
    long long v41 = *(_OWORD *)&v44[128];
    uint64_t v42 = *(void *)&v44[144];
    sub_257518E80((uint64_t)&v27);
    memcpy(v43, __src, sizeof(v43));
    return sub_257518E80((uint64_t)v43);
  }
  return result;
}

uint64_t sub_25750622C(uint64_t a1)
{
  swift_retain();
  swift_retain();
  sub_25762B370();
  uint64_t v1 = v43;
  v30[1] = v38;
  char v31 = v39;
  uint64_t v32 = v40;
  uint64_t v33 = v41;
  uint64_t v34 = v42;
  uint64_t v35 = v43;
  uint64_t v36 = v44;
  uint64_t v37 = v45;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v43);
  uint64_t v2 = *(void *)(v42 + 16);
  sub_2576A7810();
  if (v2)
  {
    uint64_t v3 = v42;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C1E4();
        uint64_t v3 = v4;
      }
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5 - 1;
      uint64_t v7 = v3 + 16 * v6;
      uint64_t v8 = *(void *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(void *)(v3 + 16) = v6;
      uint64_t v34 = v3;
      v30[0] = v7;
      uint64_t v9 = (uint64_t (*)(uint64_t, _DWORD *))v35;
      if (v35)
      {
        uint64_t v10 = *(void *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        char v11 = v9(v10, v30);
        swift_endAccess();
        if (v11)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DA8);
          sub_257492AF8(&qword_26A002DC0, &qword_26A002DA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v12 = v37;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v37 + 16);
      if (__OFADD__(v15, v14)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v12 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v12 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v12 + 16);
        if ((*(void *)(v12 + 24) >> 1) - v17 < v14) {
          goto LABEL_38;
        }
        unint64_t v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v12 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_39;
          }
          *(void *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB8), swift_dynamicCastClass()))
      {
        swift_retain();
        BOOL v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v25 = sub_257490918();
          swift_release();
        }
        v23(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v3 = v34;
      if (!*(void *)(v34 + 16))
      {
        uint64_t v26 = v35;
        uint64_t v1 = v43;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v43;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v26);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2575066DC(uint64_t a1)
{
  memcpy(__dst, v1, 0x50uLL);
  sub_2575187A4((uint64_t)__dst);
  sub_25762B978();
  uint64_t v2 = v62;
  v31[1] = v48;
  uint64_t v32 = v49;
  char v33 = v50;
  char v34 = v51;
  uint64_t v35 = v52;
  char v36 = v53;
  char v37 = v54;
  int v38 = v55;
  uint64_t v39 = v56;
  uint64_t v40 = v57;
  uint64_t v41 = v58;
  char v42 = v59;
  uint64_t v43 = v60;
  uint64_t v44 = v61;
  uint64_t v45 = v62;
  uint64_t v46 = v63;
  uint64_t v47 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v62);
  uint64_t v3 = *(void *)(v61 + 16);
  sub_2576A7810();
  if (v3)
  {
    uint64_t v4 = v61;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C57C();
        uint64_t v4 = v5;
      }
      uint64_t v6 = *(void *)(v4 + 16);
      if (!v6) {
        break;
      }
      uint64_t v7 = v6 - 1;
      uint64_t v8 = v4 + 16 * v7;
      uint64_t v9 = *(void *)(v8 + 32);
      LODWORD(v8) = *(_DWORD *)(v8 + 40);
      *(void *)(v4 + 16) = v7;
      uint64_t v44 = v4;
      v31[0] = v8;
      uint64_t v10 = (uint64_t (*)(uint64_t, _DWORD *))v45;
      if (v45)
      {
        uint64_t v11 = *(void *)(v9 + 32);
        swift_beginAccess();
        swift_retain();
        char v12 = v10(v11, v31);
        swift_endAccess();
        if (v12)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029E8);
          sub_257492AF8(&qword_26A002A00, &qword_26A0029E8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029E8);
      swift_dynamicCastClassUnconditional();
      uint64_t v13 = v47;
      uint64_t v14 = *(void *)(v9 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v47 + 16);
      if (__OFADD__(v16, v15)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v16 + v15 > *(void *)(v13 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v13 = v17;
      }
      if (*(void *)(v14 + 16))
      {
        uint64_t v18 = *(void *)(v13 + 16);
        if ((*(void *)(v13 + 24) >> 1) - v18 < v15) {
          goto LABEL_38;
        }
        unint64_t v19 = v13 + 16 * v18 + 32;
        if (v14 + 32 < v19 + 16 * v15 && v19 < v14 + 32 + 16 * v15) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v15)
        {
          uint64_t v21 = *(void *)(v13 + 16);
          BOOL v22 = __OFADD__(v21, v15);
          uint64_t v23 = v21 + v15;
          if (v22) {
            goto LABEL_39;
          }
          *(void *)(v13 + 16) = v23;
        }
      }
      else if (v15)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029F0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A0029F8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v24 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v26 = v25;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v26 = sub_257490918();
          swift_release();
        }
        v24(v30, 0);
        swift_release();
      }
      swift_release();
      uint64_t v4 = v44;
      if (!*(void *)(v44 + 16))
      {
        uint64_t v28 = v45;
        uint64_t v2 = v62;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v62;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257506C68(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v59[0] = *(_OWORD *)v1;
  v59[1] = v2;
  uint64_t v60 = *(void *)(v1 + 32);
  sub_257518818((uint64_t)v59);
  sub_25762BFC0((uint64_t)v59, (uint64_t)sub_25751447C, 0, v3, v4, v5, v6, v7, v35, v36, v37, v38, a1, v41[0], v41[1], v41[2], v41[3], v42, v43,
    v44);
  uint64_t v8 = v56;
  uint64_t v43 = v51;
  LOWORD(v44) = v52;
  long long v45 = v53;
  uint64_t v46 = v54;
  uint64_t v47 = v55;
  uint64_t v48 = v56;
  uint64_t v49 = v57;
  uint64_t v50 = v58;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v56);
  uint64_t v9 = *(void *)(v55 + 16);
  sub_2576A7810();
  if (v9)
  {
    uint64_t v10 = v55;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C5C8();
        uint64_t v10 = v11;
      }
      uint64_t v12 = *(void *)(v10 + 16);
      if (!v12) {
        break;
      }
      uint64_t v13 = v12 - 1;
      uint64_t v14 = v10 + 16 * v13;
      uint64_t v15 = *(void *)(v14 + 32);
      LODWORD(v14) = *(_DWORD *)(v14 + 40);
      *(void *)(v10 + 16) = v13;
      uint64_t v47 = v10;
      HIDWORD(v42) = v14;
      uint64_t v16 = (uint64_t (*)(uint64_t, char *))v48;
      if (v48)
      {
        uint64_t v17 = *(void *)(v15 + 32);
        swift_beginAccess();
        swift_retain();
        char v18 = v16(v17, (char *)&v42 + 4);
        swift_endAccess();
        if (v18)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A28);
          sub_257492AF8(&qword_26A002A40, &qword_26A002A28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A28);
      swift_dynamicCastClassUnconditional();
      uint64_t v19 = v50;
      uint64_t v20 = *(void *)(v15 + 16);
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v50 + 16);
      if (__OFADD__(v22, v21)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v22 + v21 > *(void *)(v19 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v19 = v23;
      }
      if (*(void *)(v20 + 16))
      {
        uint64_t v24 = *(void *)(v19 + 16);
        if ((*(void *)(v19 + 24) >> 1) - v24 < v21) {
          goto LABEL_38;
        }
        unint64_t v25 = v19 + 16 * v24 + 32;
        if (v20 + 32 < v25 + 16 * v21 && v25 < v20 + 32 + 16 * v21) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v21)
        {
          uint64_t v27 = *(void *)(v19 + 16);
          BOOL v28 = __OFADD__(v27, v21);
          uint64_t v29 = v27 + v21;
          if (v28) {
            goto LABEL_39;
          }
          *(void *)(v19 + 16) = v29;
        }
      }
      else if (v21)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002A38), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v30 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        uint64_t v32 = v31;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v40);
        }
        else
        {
          *uint64_t v32 = sub_257490918();
          swift_release();
        }
        v30(v41, 0);
        swift_release();
      }
      swift_release();
      uint64_t v10 = v47;
      if (!*(void *)(v47 + 16))
      {
        uint64_t v33 = v48;
        uint64_t v8 = v56;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v33 = v56;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v33);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257507114(uint64_t a1)
{
  long long v2 = v1[1];
  v62[0] = *v1;
  v62[1] = v2;
  long long v3 = v1[3];
  v62[2] = v1[2];
  v62[3] = v3;
  sub_257518524((uint64_t)v62);
  sub_25762C58C();
  uint64_t v4 = v59;
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  char v36 = v50;
  char v37 = v51;
  uint64_t v38 = v52;
  char v39 = v53;
  char v40 = v54;
  uint64_t v41 = v55;
  int v42 = v56;
  uint64_t v43 = v57;
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  uint64_t v46 = v60;
  uint64_t v47 = v61;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v59);
  uint64_t v5 = *(void *)(v58 + 16);
  sub_2576A7810();
  if (v5)
  {
    uint64_t v6 = v58;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C614();
        uint64_t v6 = v7;
      }
      uint64_t v8 = *(void *)(v6 + 16);
      if (!v8) {
        break;
      }
      uint64_t v9 = v8 - 1;
      uint64_t v10 = v6 + 16 * v9;
      uint64_t v11 = *(void *)(v10 + 32);
      LODWORD(v10) = *(_DWORD *)(v10 + 40);
      *(void *)(v6 + 16) = v9;
      uint64_t v44 = v6;
      int v33 = v10;
      uint64_t v12 = (uint64_t (*)(uint64_t, int *))v45;
      if (v45)
      {
        uint64_t v13 = *(void *)(v11 + 32);
        swift_beginAccess();
        swift_retain();
        char v14 = v12(v13, &v33);
        swift_endAccess();
        if (v14)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002988);
          sub_257492AF8(&qword_26A0029A0, &qword_26A002988);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002988);
      swift_dynamicCastClassUnconditional();
      uint64_t v15 = v47;
      uint64_t v16 = *(void *)(v11 + 16);
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v18 = *(void *)(v47 + 16);
      if (__OFADD__(v18, v17)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v18 + v17 > *(void *)(v15 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v15 = v19;
      }
      if (*(void *)(v16 + 16))
      {
        uint64_t v20 = *(void *)(v15 + 16);
        if ((*(void *)(v15 + 24) >> 1) - v20 < v17) {
          goto LABEL_38;
        }
        unint64_t v21 = v15 + 16 * v20 + 32;
        if (v16 + 32 < v21 + 16 * v17 && v21 < v16 + 32 + 16 * v17) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v17)
        {
          uint64_t v23 = *(void *)(v15 + 16);
          BOOL v24 = __OFADD__(v23, v17);
          uint64_t v25 = v23 + v17;
          if (v24) {
            goto LABEL_39;
          }
          *(void *)(v15 + 16) = v25;
        }
      }
      else if (v17)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002990);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002998), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v26 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v28 = v27;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v28 = sub_257490918();
          swift_release();
        }
        v26(v32, 0);
        swift_release();
      }
      swift_release();
      uint64_t v6 = v44;
      if (!*(void *)(v44 + 16))
      {
        uint64_t v30 = v45;
        uint64_t v4 = v59;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v30 = v59;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v30);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257507634(uint64_t a1)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  v61[0] = *(_OWORD *)v1;
  v61[1] = v2;
  v61[2] = *(_OWORD *)(v1 + 32);
  uint64_t v62 = *(void *)(v1 + 48);
  sub_25751874C((uint64_t)v61);
  sub_25762CB2C();
  uint64_t v3 = v58;
  uint64_t v33 = v47;
  char v34 = v48;
  char v35 = v49;
  uint64_t v36 = v50;
  char v37 = v51;
  char v38 = v52;
  uint64_t v39 = v53;
  char v40 = v54;
  int v41 = v55;
  uint64_t v42 = v56;
  uint64_t v43 = v57;
  uint64_t v44 = v58;
  uint64_t v45 = v59;
  uint64_t v46 = v60;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v58);
  uint64_t v4 = *(void *)(v57 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v57;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C660();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v43 = v5;
      int v32 = v9;
      uint64_t v11 = (uint64_t (*)(uint64_t, int *))v44;
      if (v44)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029C8);
          sub_257492AF8(&qword_26A0029E0, &qword_26A0029C8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029C8);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v46;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v46 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0029D0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A0029D8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v43;
      if (!*(void *)(v43 + 16))
      {
        uint64_t v29 = v44;
        uint64_t v3 = v58;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v29 = v58;
LABEL_34:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_25747A4E0(v29);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257507B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25762D0B4(*(void *)v8, *(unsigned __int8 *)(v8 + 8) | (*(unsigned __int8 *)(v8 + 9) << 8), (uint64_t)sub_25751447C, 0, a5, a6, a7, a8, v36, v37, v38, v39, a1, v41[0], v41[1], v41[2], v41[3], v42, v43,
    v44);
  uint64_t v9 = v52;
  uint64_t v43 = v49;
  LOWORD(v44) = v50;
  uint64_t v45 = v51;
  uint64_t v46 = v52;
  uint64_t v47 = v53;
  uint64_t v48 = v54;
  swift_retain();
  sub_25747A4D0(v52);
  uint64_t v10 = *(void *)(v51 + 16);
  sub_2576A7810();
  if (v10)
  {
    uint64_t v11 = v51;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C6F8();
        uint64_t v11 = v12;
      }
      uint64_t v13 = *(void *)(v11 + 16);
      if (!v13) {
        break;
      }
      uint64_t v14 = v13 - 1;
      uint64_t v15 = v11 + 16 * v14;
      uint64_t v16 = *(void *)(v15 + 32);
      LODWORD(v15) = *(_DWORD *)(v15 + 40);
      *(void *)(v11 + 16) = v14;
      uint64_t v45 = v11;
      HIDWORD(v42) = v15;
      uint64_t v17 = (uint64_t (*)(uint64_t, char *))v46;
      if (v46)
      {
        uint64_t v18 = *(void *)(v16 + 32);
        swift_beginAccess();
        swift_retain();
        char v19 = v17(v18, (char *)&v42 + 4);
        swift_endAccess();
        if (v19)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030C8);
          sub_257492AF8(&qword_26A0030E0, &qword_26A0030C8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030C8);
      swift_dynamicCastClassUnconditional();
      uint64_t v20 = v48;
      uint64_t v21 = *(void *)(v16 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v23 = *(void *)(v48 + 16);
      if (__OFADD__(v23, v22)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(void *)(v20 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v20 = v24;
      }
      if (*(void *)(v21 + 16))
      {
        uint64_t v25 = *(void *)(v20 + 16);
        if ((*(void *)(v20 + 24) >> 1) - v25 < v22) {
          goto LABEL_38;
        }
        unint64_t v26 = v20 + 16 * v25 + 32;
        if (v21 + 32 < v26 + 16 * v22 && v26 < v21 + 32 + 16 * v22) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v22)
        {
          uint64_t v28 = *(void *)(v20 + 16);
          BOOL v29 = __OFADD__(v28, v22);
          uint64_t v30 = v28 + v22;
          if (v29) {
            goto LABEL_39;
          }
          *(void *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030D0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A0030D8), swift_dynamicCastClass()))
      {
        swift_retain();
        char v31 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        uint64_t v33 = v32;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v40);
        }
        else
        {
          *uint64_t v33 = sub_257490918();
          swift_release();
        }
        v31(v41, 0);
        swift_release();
      }
      swift_release();
      uint64_t v11 = v45;
      if (!*(void *)(v45 + 16))
      {
        uint64_t v34 = v46;
        uint64_t v9 = v52;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v34 = v52;
LABEL_34:
    swift_release();
    sub_25747A4E0(v34);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257507FAC(uint64_t a1)
{
  sub_25762D600();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C744();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BA8);
          sub_257492AF8(&qword_26A002BC0, &qword_26A002BA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002BB8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_2575083B0(uint64_t a1)
{
  sub_25762DA34();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  uint64_t v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C790();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D08);
          sub_257492AF8(&qword_26A002D20, &qword_26A002D08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D08);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002D18), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2575087BC(uint64_t a1)
{
  sub_25762DE28();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  uint64_t v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C7DC();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C88);
          sub_257492AF8(&qword_26A002CA0, &qword_26A002C88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C88);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002C98), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257508BC8(uint64_t a1)
{
  sub_25762E21C();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C828();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D48);
          sub_257492AF8(&qword_26A002D60, &qword_26A002D48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D48);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002D58), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_257508FCC(uint64_t a1)
{
  sub_25762E65C();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C874();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B48);
          sub_257492AF8(&qword_26A002B60, &qword_26A002B48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B48);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002B58), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_2575093D0(uint64_t a1)
{
  sub_25762EA90();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  uint64_t v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C8C0();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B68);
          sub_257492AF8(&qword_26A002B80, &qword_26A002B68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B68);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002B78), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2575097DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25762EE84(*(void *)v8, *(void *)(v8 + 8), *(unsigned __int8 *)(v8 + 16) | (*(unsigned __int8 *)(v8 + 17) << 8), (uint64_t)sub_25751447C, 0, a6, a7, a8, v36, v37, v38, v39, a1, v41[0], v41[1], v41[2], v41[3], v42, v43,
    *((uint64_t *)&v43 + 1));
  uint64_t v9 = v54;
  long long v43 = v50;
  char v44 = v51;
  char v45 = v52;
  uint64_t v46 = v53;
  uint64_t v47 = v54;
  uint64_t v48 = v55;
  uint64_t v49 = v56;
  swift_retain();
  sub_25747A4D0(v54);
  uint64_t v10 = *(void *)(v53 + 16);
  sub_2576A7810();
  if (v10)
  {
    uint64_t v11 = v53;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C90C();
        uint64_t v11 = v12;
      }
      uint64_t v13 = *(void *)(v11 + 16);
      if (!v13) {
        break;
      }
      uint64_t v14 = v13 - 1;
      uint64_t v15 = v11 + 16 * v14;
      uint64_t v16 = *(void *)(v15 + 32);
      LODWORD(v15) = *(_DWORD *)(v15 + 40);
      *(void *)(v11 + 16) = v14;
      uint64_t v46 = v11;
      HIDWORD(v42) = v15;
      char v17 = (uint64_t (*)(uint64_t, char *))v47;
      if (v47)
      {
        uint64_t v18 = *(void *)(v16 + 32);
        swift_beginAccess();
        swift_retain();
        char v19 = v17(v18, (char *)&v42 + 4);
        swift_endAccess();
        if (v19)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030A8);
          sub_257492AF8(&qword_26A0030C0, &qword_26A0030A8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030A8);
      swift_dynamicCastClassUnconditional();
      uint64_t v20 = v49;
      uint64_t v21 = *(void *)(v16 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v23 = *(void *)(v49 + 16);
      if (__OFADD__(v23, v22)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(void *)(v20 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v20 = v24;
      }
      if (*(void *)(v21 + 16))
      {
        uint64_t v25 = *(void *)(v20 + 16);
        if ((*(void *)(v20 + 24) >> 1) - v25 < v22) {
          goto LABEL_38;
        }
        unint64_t v26 = v20 + 16 * v25 + 32;
        if (v21 + 32 < v26 + 16 * v22 && v26 < v21 + 32 + 16 * v22) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v22)
        {
          uint64_t v28 = *(void *)(v20 + 16);
          BOOL v29 = __OFADD__(v28, v22);
          uint64_t v30 = v28 + v22;
          if (v29) {
            goto LABEL_39;
          }
          *(void *)(v20 + 16) = v30;
        }
      }
      else if (v22)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030B0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A0030B8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v31 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        uint64_t v33 = v32;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v40);
        }
        else
        {
          *uint64_t v33 = sub_257490918();
          swift_release();
        }
        v31(v41, 0);
        swift_release();
      }
      swift_release();
      uint64_t v11 = v46;
      if (!*(void *)(v46 + 16))
      {
        uint64_t v34 = v47;
        uint64_t v9 = v54;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v34 = v54;
LABEL_34:
    swift_release();
    sub_25747A4E0(v34);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v9);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257509C24(uint64_t a1)
{
  sub_25762F3D8();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C958();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AA8);
          sub_257492AF8(&qword_26A002AC0, &qword_26A002AA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002AB8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750A028(uint64_t a1)
{
  sub_25762F818();
  uint64_t v1 = v42;
  long long v31 = v38;
  uint64_t v32 = v39;
  char v33 = v40;
  uint64_t v34 = v41;
  uint64_t v35 = v42;
  uint64_t v36 = v43;
  uint64_t v37 = v44;
  swift_retain();
  sub_25747A4D0(v42);
  uint64_t v2 = *(void *)(v41 + 16);
  sub_2576A7810();
  if (v2)
  {
    uint64_t v3 = v41;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C9A4();
        uint64_t v3 = v4;
      }
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5 - 1;
      uint64_t v7 = v3 + 16 * v6;
      uint64_t v8 = *(void *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(void *)(v3 + 16) = v6;
      uint64_t v34 = v3;
      int v30 = v7;
      char v9 = (uint64_t (*)(uint64_t, int *))v35;
      if (v35)
      {
        uint64_t v10 = *(void *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        char v11 = v9(v10, &v30);
        swift_endAccess();
        if (v11)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EA8);
          sub_257492AF8(&qword_26A002EC0, &qword_26A002EA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v12 = v37;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v37 + 16);
      if (__OFADD__(v15, v14)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v12 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v12 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v12 + 16);
        if ((*(void *)(v12 + 24) >> 1) - v17 < v14) {
          goto LABEL_38;
        }
        unint64_t v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v12 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_39;
          }
          *(void *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002EB8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v25 = sub_257490918();
          swift_release();
        }
        v23(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v3 = v34;
      if (!*(void *)(v34 + 16))
      {
        uint64_t v26 = v35;
        uint64_t v1 = v42;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v42;
LABEL_34:
    swift_release();
    sub_25747A4E0(v26);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750A46C(uint64_t a1)
{
  long long v2 = v1[1];
  long long v49 = *v1;
  long long v50 = v2;
  long long v51 = v1[2];
  char v52 = *((unsigned char *)v1 + 48);
  sub_25762FD14();
  uint64_t v3 = v46;
  long long v33 = v41;
  long long v34 = v42;
  long long v35 = v43;
  char v36 = v44;
  uint64_t v37 = v45;
  uint64_t v38 = v46;
  uint64_t v39 = v47;
  uint64_t v40 = v48;
  swift_retain();
  sub_25747A4D0(v46);
  uint64_t v4 = *(void *)(v45 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v45;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763C9F0();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v37 = v5;
      int v32 = v9;
      char v11 = (uint64_t (*)(uint64_t, int *))v38;
      if (v38)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E88);
          sub_257492AF8(&qword_26A002EA0, &qword_26A002E88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E88);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v40;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v40 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002E98), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v37;
      if (!*(void *)(v37 + 16))
      {
        uint64_t v28 = v38;
        uint64_t v3 = v46;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v46;
LABEL_34:
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750A8C4(uint64_t a1)
{
  sub_257630228();
  uint64_t v37 = v36;
  v38[0] = *((void *)&v34 + 1);
  long long v29 = v33;
  long long v30 = v34;
  long long v31 = v35;
  uint64_t v32 = v36;
  sub_257518B44((uint64_t)v38);
  uint64_t v25 = v35;
  sub_25747A4D0(v35);
  sub_257518AC0((uint64_t)&v37);
  uint64_t v1 = *((void *)&v34 + 1);
  if (*(void *)(*((void *)&v34 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CA3C();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v30 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v31;
      if ((void)v31)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F48);
          sub_257492AF8(&qword_26A002F60, &qword_26A002F48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F48);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v32;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v32 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002F58), swift_dynamicCastClass()))
      {
        swift_retain();
        BOOL v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v30 + 1);
      if (!*(void *)(*((void *)&v30 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v31);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v38);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v37);
  }
  return result;
}

uint64_t sub_25750ACD4(uint64_t a1)
{
  long long v2 = v1[1];
  long long v47 = *v1;
  long long v48 = v2;
  int v49 = *((_DWORD *)v1 + 8);
  sub_25763072C();
  uint64_t v3 = v44;
  long long v33 = v40;
  long long v34 = v41;
  int v35 = v42;
  uint64_t v36 = v43;
  uint64_t v37 = v44;
  uint64_t v38 = v45;
  uint64_t v39 = v46;
  swift_retain();
  sub_25747A4D0(v44);
  uint64_t v4 = *(void *)(v43 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v43;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CA88();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v36 = v5;
      int v32 = v9;
      uint64_t v11 = (uint64_t (*)(uint64_t, int *))v37;
      if (v37)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F28);
          sub_257492AF8(&qword_26A002F40, &qword_26A002F28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F28);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v39;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v39 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002F38), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v36;
      if (!*(void *)(v36 + 16))
      {
        uint64_t v28 = v37;
        uint64_t v3 = v44;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v44;
LABEL_34:
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750B120(uint64_t a1)
{
  sub_257630C1C();
  uint64_t v35 = *((void *)&v34 + 1);
  v36[0] = v33;
  long long v29 = v32;
  long long v30 = v33;
  long long v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = *((void *)&v33 + 1);
  sub_25747A4D0(*((uint64_t *)&v33 + 1));
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = v33;
  if (*(void *)(v33 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CAD4();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *(void *)&long long v30 = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))*((void *)&v30 + 1);
      if (*((void *)&v30 + 1))
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F88);
          sub_257492AF8(&qword_26A002FA0, &qword_26A002F88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F88);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = *((void *)&v31 + 1);
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(*((void *)&v31 + 1) + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002F98), swift_dynamicCastClass()))
      {
        swift_retain();
        BOOL v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = v30;
      if (!*(void *)(v30 + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(*((uint64_t *)&v30 + 1));
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750B52C(uint64_t a1)
{
  sub_25763109C();
  uint64_t v1 = v40;
  long long v31 = v37;
  long long v32 = v38;
  uint64_t v33 = v39;
  uint64_t v34 = v40;
  uint64_t v35 = v41;
  uint64_t v36 = v42;
  swift_retain();
  sub_25747A4D0(v40);
  uint64_t v2 = *(void *)(v39 + 16);
  sub_2576A7810();
  if (v2)
  {
    uint64_t v3 = v39;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CB20();
        uint64_t v3 = v4;
      }
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5 - 1;
      uint64_t v7 = v3 + 16 * v6;
      uint64_t v8 = *(void *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(void *)(v3 + 16) = v6;
      uint64_t v33 = v3;
      int v30 = v7;
      char v9 = (uint64_t (*)(uint64_t, int *))v34;
      if (v34)
      {
        uint64_t v10 = *(void *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        char v11 = v9(v10, &v30);
        swift_endAccess();
        if (v11)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F68);
          sub_257492AF8(&qword_26A002F80, &qword_26A002F68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F68);
      swift_dynamicCastClassUnconditional();
      uint64_t v12 = v36;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v36 + 16);
      if (__OFADD__(v15, v14)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v12 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v12 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v12 + 16);
        if ((*(void *)(v12 + 24) >> 1) - v17 < v14) {
          goto LABEL_38;
        }
        unint64_t v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v12 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_39;
          }
          *(void *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002F70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002F78), swift_dynamicCastClass()))
      {
        swift_retain();
        BOOL v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v25 = sub_257490918();
          swift_release();
        }
        v23(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v3 = v33;
      if (!*(void *)(v33 + 16))
      {
        uint64_t v26 = v34;
        uint64_t v1 = v40;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v40;
LABEL_34:
    swift_release();
    sub_25747A4E0(v26);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750B95C(uint64_t a1)
{
  sub_257631524();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CB6C();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E28);
          sub_257492AF8(&qword_26A002E40, &qword_26A002E28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E28);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002E38), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        long long v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *long long v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750BD68(uint64_t a1)
{
  sub_257631918();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CBB8();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E08);
          sub_257492AF8(&qword_26A002E20, &qword_26A002E08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E08);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002E18), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        long long v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *long long v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750C174(uint64_t a1)
{
  sub_257631D0C();
  uint64_t v35 = *((void *)&v34 + 1);
  v36[0] = v33;
  long long v29 = v32;
  long long v30 = v33;
  long long v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = *((void *)&v33 + 1);
  sub_25747A4D0(*((uint64_t *)&v33 + 1));
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = v33;
  if (*(void *)(v33 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CC04();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *(void *)&long long v30 = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))*((void *)&v30 + 1);
      if (*((void *)&v30 + 1))
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FC8);
          sub_257492AF8(&qword_26A002FE0, &qword_26A002FC8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FC8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = *((void *)&v31 + 1);
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(*((void *)&v31 + 1) + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FD0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002FD8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = v30;
      if (!*(void *)(v30 + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(*((uint64_t *)&v30 + 1));
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750C580(uint64_t a1)
{
  sub_25763218C();
  uint64_t v1 = v40;
  long long v31 = v37;
  long long v32 = v38;
  uint64_t v33 = v39;
  uint64_t v34 = v40;
  uint64_t v35 = v41;
  uint64_t v36 = v42;
  swift_retain();
  sub_25747A4D0(v40);
  uint64_t v2 = *(void *)(v39 + 16);
  sub_2576A7810();
  if (v2)
  {
    uint64_t v3 = v39;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CC50();
        uint64_t v3 = v4;
      }
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5 - 1;
      uint64_t v7 = v3 + 16 * v6;
      uint64_t v8 = *(void *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(void *)(v3 + 16) = v6;
      uint64_t v33 = v3;
      int v30 = v7;
      char v9 = (uint64_t (*)(uint64_t, int *))v34;
      if (v34)
      {
        uint64_t v10 = *(void *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        char v11 = v9(v10, &v30);
        swift_endAccess();
        if (v11)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FA8);
          sub_257492AF8(&qword_26A002FC0, &qword_26A002FA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v12 = v36;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v36 + 16);
      if (__OFADD__(v15, v14)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v12 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v12 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v12 + 16);
        if ((*(void *)(v12 + 24) >> 1) - v17 < v14) {
          goto LABEL_38;
        }
        unint64_t v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v12 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_39;
          }
          *(void *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002FB8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v25 = sub_257490918();
          swift_release();
        }
        v23(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v3 = v33;
      if (!*(void *)(v33 + 16))
      {
        uint64_t v26 = v34;
        uint64_t v1 = v40;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v40;
LABEL_34:
    swift_release();
    sub_25747A4E0(v26);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750C9B0(uint64_t a1)
{
  sub_257632614();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CC9C();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E68);
          sub_257492AF8(&qword_26A002E80, &qword_26A002E68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E68);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002E78), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        long long v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *long long v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750CDBC(uint64_t a1)
{
  sub_257632A08();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CCE8();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E48);
          sub_257492AF8(&qword_26A002E60, &qword_26A002E48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E48);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002E58), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        long long v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *long long v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750D1C8(uint64_t a1)
{
  sub_257632DFC();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CD34();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C68);
          sub_257492AF8(&qword_26A002C80, &qword_26A002C68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C68);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002C78), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750D5CC(uint64_t a1)
{
  sub_257633230();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CD80();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B88);
          sub_257492AF8(&qword_26A002BA0, &qword_26A002B88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B88);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002B98), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750D9D0(uint64_t a1)
{
  sub_257633664();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CDCC();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C48);
          sub_257492AF8(&qword_26A002C60, &qword_26A002C48);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C48);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C50);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002C58), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750DDDC(uint64_t a1)
{
  sub_257633A58();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CE18();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BC8);
          sub_257492AF8(&qword_26A002BE0, &qword_26A002BC8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BC8);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BD0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002BD8), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750E1E8(uint64_t a1)
{
  sub_257633E4C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CE64();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D68);
          sub_257492AF8(&qword_26A002D80, &qword_26A002D68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D68);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002D78), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750E5F4(uint64_t a1)
{
  sub_257634240();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CEB0();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C08);
          sub_257492AF8(&qword_26A002C20, &qword_26A002C08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C08);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002C10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002C18), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750EA00(uint64_t a1)
{
  sub_257634634();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CEFC();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A08);
          sub_257492AF8(&qword_26A002A20, &qword_26A002A08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A08);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002A18), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750EE0C(uint64_t a1)
{
  uint64_t v1 = sub_2576A7810();
  sub_257634A28(v1, (uint64_t)sub_25751447C, 0, v2, v3, v4, v5, v6, v34, v35, v36, a1, v39[0], v39[1], v39[2], v39[3], v40, v41, v42,
    (uint64_t)v43);
  uint64_t v7 = (uint64_t)v48;
  uint64_t v41 = v46;
  uint64_t v42 = v47;
  uint64_t v43 = v48;
  uint64_t v44 = v49;
  uint64_t v45 = v50;
  sub_2576A7810();
  swift_retain();
  sub_25747A4D0((uint64_t)v48);
  uint64_t v8 = *(void *)(v47 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v47;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CF48();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v42 = v9;
      HIDWORD(v40) = v13;
      uint64_t v15 = v43;
      if (v43)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, (char *)&v40 + 4);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D88);
          sub_257492AF8(&qword_26A002DA0, &qword_26A002D88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D88);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v45;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v45 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_38;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_39;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002D98), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(v38);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v39, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v42;
      if (!*(void *)(v42 + 16))
      {
        uint64_t v32 = (uint64_t)v43;
        uint64_t v7 = (uint64_t)v48;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v32 = (uint64_t)v48;
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v32);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750F25C(uint64_t a1)
{
  sub_257634F80();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CF94();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D28);
          sub_257492AF8(&qword_26A002D40, &qword_26A002D28);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D28);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002D30);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002D38), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25750F668(uint64_t a1)
{
  sub_257635374();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763CFE0();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CA8);
          sub_257492AF8(&qword_26A002CC0, &qword_26A002CA8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CA8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CB0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002CB8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750FA6C(uint64_t a1)
{
  sub_2576357E8();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D02C();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AC8);
          sub_257492AF8(&qword_26A002AE0, &qword_26A002AC8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AC8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002AD0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002AD8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_25750FE70(uint64_t a1)
{
  sub_257635C5C();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D078();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B08);
          sub_257492AF8(&qword_26A002B20, &qword_26A002B08);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B08);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002B10);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002B18), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_257510274(uint64_t a1)
{
  sub_25763609C();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D0C4();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CE8);
          sub_257492AF8(&qword_26A002D00, &qword_26A002CE8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CE8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002CF8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_257510678(uint64_t a1)
{
  sub_2576364DC();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D110();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CC8);
          sub_257492AF8(&qword_26A002CE0, &qword_26A002CC8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CC8);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002CD0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002CD8), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257510A84(uint64_t a1)
{
  sub_2576368D0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v36 = v2;
  long long v37 = (uint64_t (*)(uint64_t, int *))v4;
  uint64_t v38 = v6;
  uint64_t v39 = v7;
  swift_retain();
  uint64_t v33 = v5;
  sub_25747A4D0(v5);
  uint64_t v8 = *(void *)(v3 + 16);
  sub_2576A7810();
  if (v8)
  {
    uint64_t v9 = v3;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D15C();
        uint64_t v9 = v10;
      }
      uint64_t v11 = *(void *)(v9 + 16);
      if (!v11) {
        break;
      }
      uint64_t v12 = v11 - 1;
      uint64_t v13 = v9 + 16 * v12;
      uint64_t v14 = *(void *)(v13 + 32);
      LODWORD(v13) = *(_DWORD *)(v13 + 40);
      *(void *)(v9 + 16) = v12;
      uint64_t v36 = v9;
      int v35 = v13;
      uint64_t v15 = v37;
      if (v37)
      {
        uint64_t v16 = *(void *)(v14 + 32);
        swift_beginAccess();
        swift_retain();
        char v17 = v15(v16, &v35);
        swift_endAccess();
        if (v17)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A68);
          sub_257492AF8(&qword_26A002A80, &qword_26A002A68);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A68);
      swift_dynamicCastClassUnconditional();
      uint64_t v18 = v39;
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v39 + 16);
      if (__OFADD__(v21, v20)) {
        goto LABEL_34;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v21 + v20 > *(void *)(v18 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v18 = v22;
      }
      if (*(void *)(v19 + 16))
      {
        uint64_t v23 = *(void *)(v18 + 16);
        if ((*(void *)(v18 + 24) >> 1) - v23 < v20) {
          goto LABEL_36;
        }
        unint64_t v24 = v18 + 16 * v23 + 32;
        if (v19 + 32 < v24 + 16 * v20 && v24 < v19 + 32 + 16 * v20) {
          goto LABEL_38;
        }
        swift_arrayInitWithCopy();
        if (v20)
        {
          uint64_t v26 = *(void *)(v18 + 16);
          BOOL v27 = __OFADD__(v26, v20);
          uint64_t v28 = v26 + v20;
          if (v27) {
            goto LABEL_37;
          }
          *(void *)(v18 + 16) = v28;
        }
      }
      else if (v20)
      {
        goto LABEL_35;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A70);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002A78), swift_dynamicCastClass()))
      {
        swift_retain();
        long long v29 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v31 = v30;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v31 = sub_257490918();
          swift_release();
        }
        v29(v34, 0);
        swift_release();
      }
      swift_release();
      uint64_t v9 = v36;
      if (!*(void *)(v36 + 16)) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_32:
    swift_release();
    sub_25747A4E0((uint64_t)v37);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257510E90(uint64_t a1)
{
  sub_257636CC4();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D1A8();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BE8);
          sub_257492AF8(&qword_26A002C00, &qword_26A002BE8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BE8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002BF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002BF8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_257511294(uint64_t a1)
{
  sub_2576370F8();
  uint64_t v37 = v36;
  v38[0] = *((void *)&v34 + 1);
  long long v29 = v33;
  long long v30 = v34;
  long long v31 = v35;
  uint64_t v32 = v36;
  sub_257518B44((uint64_t)v38);
  uint64_t v25 = v35;
  sub_25747A4D0(v35);
  sub_257518AC0((uint64_t)&v37);
  uint64_t v1 = *((void *)&v34 + 1);
  if (*(void *)(*((void *)&v34 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D1F4();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v30 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v31;
      if ((void)v31)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EE8);
          sub_257492AF8(&qword_26A002F00, &qword_26A002EE8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EE8);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v32;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v32 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002EF8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v30 + 1);
      if (!*(void *)(*((void *)&v30 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v31);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v38);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v37);
  }
  return result;
}

uint64_t sub_2575116A4(uint64_t a1)
{
  long long v2 = v1[1];
  long long v47 = *v1;
  long long v48 = v2;
  long long v49 = v1[2];
  sub_257637670();
  uint64_t v3 = v44;
  long long v33 = v40;
  long long v34 = v41;
  long long v35 = v42;
  uint64_t v36 = v43;
  uint64_t v37 = v44;
  uint64_t v38 = v45;
  uint64_t v39 = v46;
  swift_retain();
  sub_25747A4D0(v44);
  uint64_t v4 = *(void *)(v43 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = v43;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D240();
        uint64_t v5 = v6;
      }
      uint64_t v7 = *(void *)(v5 + 16);
      if (!v7) {
        break;
      }
      uint64_t v8 = v7 - 1;
      uint64_t v9 = v5 + 16 * v8;
      uint64_t v10 = *(void *)(v9 + 32);
      LODWORD(v9) = *(_DWORD *)(v9 + 40);
      *(void *)(v5 + 16) = v8;
      uint64_t v36 = v5;
      int v32 = v9;
      uint64_t v11 = (uint64_t (*)(uint64_t, int *))v37;
      if (v37)
      {
        uint64_t v12 = *(void *)(v10 + 32);
        swift_beginAccess();
        swift_retain();
        char v13 = v11(v12, &v32);
        swift_endAccess();
        if (v13)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EC8);
          sub_257492AF8(&qword_26A002EE0, &qword_26A002EC8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002EC8);
      swift_dynamicCastClassUnconditional();
      uint64_t v14 = v39;
      uint64_t v15 = *(void *)(v10 + 16);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v39 + 16);
      if (__OFADD__(v17, v16)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v17 + v16 > *(void *)(v14 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v14 = v18;
      }
      if (*(void *)(v15 + 16))
      {
        uint64_t v19 = *(void *)(v14 + 16);
        if ((*(void *)(v14 + 24) >> 1) - v19 < v16) {
          goto LABEL_38;
        }
        unint64_t v20 = v14 + 16 * v19 + 32;
        if (v15 + 32 < v20 + 16 * v16 && v20 < v15 + 32 + 16 * v16) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v16)
        {
          uint64_t v22 = *(void *)(v14 + 16);
          BOOL v23 = __OFADD__(v22, v16);
          uint64_t v24 = v22 + v16;
          if (v23) {
            goto LABEL_39;
          }
          *(void *)(v14 + 16) = v24;
        }
      }
      else if (v16)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002ED0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002ED8), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v25 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v27 = v26;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v27 = sub_257490918();
          swift_release();
        }
        v25(v31, 0);
        swift_release();
      }
      swift_release();
      uint64_t v5 = v36;
      if (!*(void *)(v36 + 16))
      {
        uint64_t v28 = v37;
        uint64_t v3 = v44;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v28 = v44;
LABEL_34:
    swift_release();
    sub_25747A4E0(v28);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_257511AEC(uint64_t a1)
{
  sub_257637B50();
  uint64_t v35 = v34;
  v36[0] = *((void *)&v32 + 1);
  long long v29 = v32;
  long long v30 = v33;
  uint64_t v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = v33;
  sub_25747A4D0(v33);
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = *((void *)&v32 + 1);
  if (*(void *)(*((void *)&v32 + 1) + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D28C();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *((void *)&v29 + 1) = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))v30;
      if ((void)v30)
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A88);
          sub_257492AF8(&qword_26A002AA0, &qword_26A002A88);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A88);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = v31;
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(v31 + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002A90);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002A98), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = *((void *)&v29 + 1);
      if (!*(void *)(*((void *)&v29 + 1) + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(v30);
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_257511EF0(uint64_t a1)
{
  sub_257637F90();
  uint64_t v35 = *((void *)&v34 + 1);
  v36[0] = v33;
  long long v29 = v32;
  long long v30 = v33;
  long long v31 = v34;
  sub_257518B44((uint64_t)v36);
  uint64_t v25 = *((void *)&v33 + 1);
  sub_25747A4D0(*((uint64_t *)&v33 + 1));
  sub_257518AC0((uint64_t)&v35);
  uint64_t v1 = v33;
  if (*(void *)(v33 + 16))
  {
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D2D8();
        uint64_t v1 = v2;
      }
      uint64_t v3 = *(void *)(v1 + 16);
      if (!v3) {
        break;
      }
      uint64_t v4 = v3 - 1;
      uint64_t v5 = v1 + 16 * v4;
      uint64_t v6 = *(void *)(v5 + 32);
      LODWORD(v5) = *(_DWORD *)(v5 + 40);
      *(void *)(v1 + 16) = v4;
      *(void *)&long long v30 = v1;
      int v28 = v5;
      uint64_t v7 = (uint64_t (*)(uint64_t, int *))*((void *)&v30 + 1);
      if (*((void *)&v30 + 1))
      {
        uint64_t v8 = *(void *)(v6 + 32);
        swift_beginAccess();
        swift_retain();
        char v9 = v7(v8, &v28);
        swift_endAccess();
        if (v9)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A003008);
          sub_257492AF8(&qword_26A003020, &qword_26A003008);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003008);
      swift_dynamicCastClassUnconditional();
      uint64_t v10 = *((void *)&v31 + 1);
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = *(void *)(*((void *)&v31 + 1) + 16);
      if (__OFADD__(v13, v12)) {
        goto LABEL_33;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v13 + v12 > *(void *)(v10 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v10 = v14;
      }
      if (*(void *)(v11 + 16))
      {
        uint64_t v15 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v15 < v12) {
          goto LABEL_35;
        }
        unint64_t v16 = v10 + 16 * v15 + 32;
        if (v11 + 32 < v16 + 16 * v12 && v16 < v11 + 32 + 16 * v12) {
          goto LABEL_37;
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v18 = *(void *)(v10 + 16);
          BOOL v19 = __OFADD__(v18, v12);
          uint64_t v20 = v18 + v12;
          if (v19) {
            goto LABEL_36;
          }
          *(void *)(v10 + 16) = v20;
        }
      }
      else if (v12)
      {
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003010);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A003018), swift_dynamicCastClass()))
      {
        swift_retain();
        uint64_t v21 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        BOOL v23 = v22;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *BOOL v23 = sub_257490918();
          swift_release();
        }
        v21(v27, 0);
        swift_release();
      }
      swift_release();
      uint64_t v1 = v30;
      if (!*(void *)(v30 + 16)) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
LABEL_31:
    swift_release();
    sub_25747A4E0(*((uint64_t *)&v30 + 1));
    swift_bridgeObjectRelease();
    sub_257518B70((uint64_t)v36);
    sub_25747A4E0(v25);
    return sub_257518AEC((uint64_t)&v35);
  }
  return result;
}

uint64_t sub_2575122FC(uint64_t a1)
{
  sub_257638410();
  uint64_t v1 = v40;
  long long v31 = v37;
  long long v32 = v38;
  uint64_t v33 = v39;
  uint64_t v34 = v40;
  uint64_t v35 = v41;
  uint64_t v36 = v42;
  swift_retain();
  sub_25747A4D0(v40);
  uint64_t v2 = *(void *)(v39 + 16);
  sub_2576A7810();
  if (v2)
  {
    uint64_t v3 = v39;
    while (1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_25763D324();
        uint64_t v3 = v4;
      }
      uint64_t v5 = *(void *)(v3 + 16);
      if (!v5) {
        break;
      }
      uint64_t v6 = v5 - 1;
      uint64_t v7 = v3 + 16 * v6;
      uint64_t v8 = *(void *)(v7 + 32);
      LODWORD(v7) = *(_DWORD *)(v7 + 40);
      *(void *)(v3 + 16) = v6;
      uint64_t v33 = v3;
      int v30 = v7;
      char v9 = (uint64_t (*)(uint64_t, int *))v34;
      if (v34)
      {
        uint64_t v10 = *(void *)(v8 + 32);
        swift_beginAccess();
        swift_retain();
        char v11 = v9(v10, &v30);
        swift_endAccess();
        if (v11)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FE8);
          sub_257492AF8(&qword_26A003000, &qword_26A002FE8);
          sub_2574FF53C();
        }
      }
      else
      {
        swift_retain();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FE8);
      swift_dynamicCastClassUnconditional();
      uint64_t v12 = v36;
      uint64_t v13 = *(void *)(v8 + 16);
      uint64_t v14 = *(void *)(v13 + 16);
      uint64_t v15 = *(void *)(v36 + 16);
      if (__OFADD__(v15, v14)) {
        goto LABEL_36;
      }
      swift_retain_n();
      sub_2576A7810();
      sub_2576A7810();
      if (!swift_isUniquelyReferenced_nonNull_native() || v15 + v14 > *(void *)(v12 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v12 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v12 + 16);
        if ((*(void *)(v12 + 24) >> 1) - v17 < v14) {
          goto LABEL_38;
        }
        unint64_t v18 = v12 + 16 * v17 + 32;
        if (v13 + 32 < v18 + 16 * v14 && v18 < v13 + 32 + 16 * v14) {
          goto LABEL_40;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v12 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_39;
          }
          *(void *)(v12 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002FF0);
      if (swift_dynamicCastClass()
        || (__swift_instantiateConcreteTypeFromMangledName(&qword_26A002FF8), swift_dynamicCastClass()))
      {
        swift_retain();
        BOOL v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
        uint64_t v25 = v24;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          sub_257490818(a1);
        }
        else
        {
          *uint64_t v25 = sub_257490918();
          swift_release();
        }
        v23(v29, 0);
        swift_release();
      }
      swift_release();
      uint64_t v3 = v33;
      if (!*(void *)(v33 + 16))
      {
        uint64_t v26 = v34;
        uint64_t v1 = v40;
        goto LABEL_34;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    uint64_t result = sub_2576A8C60();
    __break(1u);
  }
  else
  {
    uint64_t v26 = v40;
LABEL_34:
    swift_release();
    sub_25747A4E0(v26);
    swift_release();
    swift_bridgeObjectRelease();
    sub_25747A4E0(v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void Layer.place(on:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_0_10();
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&WitnessTable - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A8870();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_21_15();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&WitnessTable - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&WitnessTable - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v10, v2, v4);
  sub_2574FE820();
  uint64_t WitnessTable = (uint64_t)v20;
  uint64_t v24 = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v1, v20, v11);
  swift_getWitnessTable();
  sub_2576A7C40();
  sub_2574FF0E8();
  if (v25)
  {
    while (1)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_45_5();
      sub_2576A89D0();
      if (swift_dynamicCastClass()) {
        break;
      }
      sub_2576A89D0();
      if (swift_dynamicCastClass())
      {
        swift_retain();
        BOOL v21 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        LayerState.place(on:)(v6);
        goto LABEL_6;
      }
LABEL_7:
      swift_release();
      sub_2574FF0E8();
      if (!v25) {
        goto LABEL_8;
      }
    }
    swift_retain();
    BOOL v21 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
    Parameter.place(on:)(v6);
LABEL_6:
    v21(&v25, 0);
    swift_release();
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v22 = *(void (**)(char *, uint64_t))(v24 + 8);
  v22(v18, v11);
  v22((char *)WitnessTable, v11);
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_257512A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  return sub_257513494(a1, *(void *)v7, *(unsigned __int8 *)(v7 + 8) | (*(unsigned __int8 *)(v7 + 9) << 8), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_257512A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(void *)(a2 + 48) = *(void *)(v2 + 48);
  sub_25751874C(v2);
  return sub_257507634(a1);
}

uint64_t sub_257512AA8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = v2[1];
  *a2 = *v2;
  a2[1] = v4;
  long long v5 = v2[3];
  a2[2] = v2[2];
  a2[3] = v5;
  sub_257518524((uint64_t)v2);
  return sub_257507114(a1);
}

uint64_t sub_257512AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = *(void *)(v2 + 32);
  sub_257518818(v2);
  return sub_257506C68(a1);
}

uint64_t sub_257512B48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x50uLL);
  sub_2575187A4((uint64_t)v2);
  return sub_2575066DC(a1);
}

uint64_t sub_257512B98@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>)
{
  *(float *)a5 = a6;
  *(unsigned char *)(a5 + 4) = a2;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = a4;
  swift_retain();
  swift_retain();
  return sub_25750622C(a1);
}

uint64_t sub_257512BF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x78uLL);
  sub_257518DB4((uint64_t)v2);
  return sub_257505DA0(a1);
}

void sub_257512C40(void *a1@<X8>)
{
  memcpy(a1, v1, 0x58uLL);
  sub_257518F00((uint64_t)v1);
  sub_2575058A8();
}

uint64_t sub_257512CD8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = v2[1];
  *a2 = *v2;
  a2[1] = v4;
  sub_257518B18((uint64_t)v2);
  return sub_25750542C(a1);
}

uint64_t sub_257512D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2;
  *(unsigned char *)(a5 + 8) = a3 & 1;
  *(unsigned char *)(a5 + 9) = HIBYTE(a3) & 1;
  *(void *)(a5 + 16) = a4;
  swift_retain();
  swift_retain();
  return sub_257504F6C(a1);
}

uint64_t sub_257512D84@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = v2[1];
  *a2 = *v2;
  a2[1] = v4;
  a2[2] = v2[2];
  sub_257518C68((uint64_t)v2);
  return sub_257504A84(a1);
}

uint64_t sub_257512DD4(uint64_t a1)
{
  return sub_257504660(a1);
}

uint64_t sub_257512DF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x43uLL);
  sub_257518BEC((uint64_t)v2);
  return sub_257504148(a1);
}

uint64_t sub_257512E48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x9CuLL);
  sub_257518850((uint64_t)v2);
  return sub_257503D24(a1);
}

uint64_t sub_257512E98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x88uLL);
  sub_2574B3ABC((uint64_t)v2);
  return sub_257503900(a1);
}

void sub_257512EE8(void *a1@<X8>)
{
  memcpy(a1, v1, 0x58uLL);
  sub_257518F00((uint64_t)v1);
  sub_2575058A8();
}

uint64_t sub_257512F80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(a2, v2, 0x60uLL);
  sub_25751857C((uint64_t)v2);
  return sub_257503478(a1);
}

double sub_257512FD0@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v5 = *v2;
  long long v6 = v2[1];
  long long v7 = v2[2];
  sub_2575116A4(a1);
  double result = *(double *)&v5;
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_257513020(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_25751305C(uint64_t a1)
{
  return sub_257510A84(a1);
}

uint64_t sub_257513074(uint64_t a1)
{
  return sub_257510678(a1);
}

float sub_25751308C(uint64_t a1, float a2)
{
  return a2;
}

uint64_t sub_2575130C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return a2;
}

uint64_t sub_2575130F8(uint64_t a1)
{
  return sub_25750F25C(a1);
}

uint64_t sub_257513110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a2;
  sub_2576A7810();
  return sub_25750EE0C(a1);
}

uint64_t sub_257513148(uint64_t a1)
{
  return sub_25750EA00(a1);
}

uint64_t sub_257513160(uint64_t a1)
{
  return sub_25750E5F4(a1);
}

uint64_t sub_257513178(uint64_t a1)
{
  return sub_25750E1E8(a1);
}

uint64_t sub_257513190(uint64_t a1)
{
  return sub_25750DDDC(a1);
}

uint64_t sub_2575131A8(uint64_t a1)
{
  return sub_25750D9D0(a1);
}

float sub_2575131C0(float a1, uint64_t a2, void (*a3)(void))
{
  return a1;
}

uint64_t sub_2575131F8(uint64_t a1)
{
  return sub_25750CDBC(a1);
}

uint64_t sub_257513210(uint64_t a1)
{
  return sub_25750C9B0(a1);
}

uint64_t sub_257513228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  return a2;
}

uint64_t sub_257513268(uint64_t a1)
{
  return sub_25750BD68(a1);
}

uint64_t sub_257513280(uint64_t a1)
{
  return sub_25750B95C(a1);
}

uint64_t sub_257513298(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return a2;
}

float sub_2575132D0@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = *(_OWORD *)v2;
  long long v6 = *((_OWORD *)v2 + 1);
  float v7 = v2[8];
  sub_25750ACD4(a1);
  float result = v7;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(float *)(a2 + 32) = v7;
  return result;
}

float sub_257513320(uint64_t a1, float a2)
{
  return a2;
}

uint64_t sub_25751335C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(unsigned char *)(a2 + 48) = *(unsigned char *)(v2 + 48);
  return sub_25750A46C(a1);
}

uint64_t sub_257513398(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2575133DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a2;
  *(void *)(a9 + 8) = a3;
  *(unsigned char *)(a9 + 16) = a4 & 1;
  *(unsigned char *)(a9 + 17) = BYTE1(a4);
  return sub_2575097DC(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_257513414(uint64_t a1)
{
  return sub_2575093D0(a1);
}

float sub_25751342C(float a1, uint64_t a2, void (*a3)(void))
{
  return a1;
}

uint64_t sub_257513464(uint64_t a1)
{
  return sub_2575087BC(a1);
}

uint64_t sub_25751347C(uint64_t a1)
{
  return sub_2575083B0(a1);
}

uint64_t sub_257513494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = a2;
  *(unsigned char *)(a9 + 8) = a3 & 1;
  *(unsigned char *)(a9 + 9) = BYTE1(a3);
  return sub_257507B64(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t Layer.placed(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_18_1();
  uint64_t v9 = *(void (**)(void))(v7 + 16);
  OUTLINED_FUNCTION_34_7();
  v9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028E8);
  if (swift_dynamicCast())
  {
    sub_2576A8730();
    sub_2576A7B00();
    OUTLINED_FUNCTION_29_9();
    swift_getDynamicType();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    OUTLINED_FUNCTION_35_1();
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_34_7();
    v9();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 + 16) + 8))(a1, a2);
  }
  return result;
}

uint64_t sub_25751366C(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_257513690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  return sub_2575133DC(a1, *(void *)v6, *(void *)(v6 + 8), *(unsigned __int8 *)(v6 + 16) | (*(unsigned __int8 *)(v6 + 17) << 8), a2, a3, a4, a5, a6);
}

void sub_2575136AC()
{
}

void sub_25751370C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_23_13(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  OUTLINED_FUNCTION_9_24();
  sub_257512C40(v8);
}

uint64_t sub_257513748()
{
  OUTLINED_FUNCTION_14_19();
  memcpy(v0, v1, 0x78uLL);
  uint64_t v2 = OUTLINED_FUNCTION_9_24();
  return sub_257512BF0(v2, v3);
}

void sub_257513788()
{
}

void sub_2575137E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  OUTLINED_FUNCTION_23_13(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  OUTLINED_FUNCTION_9_24();
  sub_257512EE8(v8);
}

uint64_t sub_257513824()
{
  OUTLINED_FUNCTION_14_19();
  memcpy(v0, v1, 0x88uLL);
  uint64_t v2 = OUTLINED_FUNCTION_9_24();
  return sub_257512E98(v2, v3);
}

uint64_t sub_257513868()
{
  OUTLINED_FUNCTION_26_11();
  uint64_t result = sub_257513298(v1, v2, v3, (void (*)(void))sub_257511EF0);
  *uint64_t v0 = result;
  v0[1] = v5;
  return result;
}

uint64_t sub_2575138A8()
{
  return sub_257513994();
}

uint64_t sub_2575138C4()
{
  OUTLINED_FUNCTION_26_11();
  uint64_t result = sub_257513298(v1, v2, v3, (void (*)(void))sub_25750C174);
  *uint64_t v0 = result;
  v0[1] = v5;
  return result;
}

uint64_t sub_257513904()
{
  return sub_257513994();
}

uint64_t sub_25751391C(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_25751392C()
{
  OUTLINED_FUNCTION_26_11();
  uint64_t result = sub_257513298(v1, v2, v3, (void (*)(void))sub_25750B120);
  *uint64_t v0 = result;
  v0[1] = v5;
  return result;
}

uint64_t sub_257513968(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_25751397C()
{
  return sub_257513994();
}

uint64_t sub_257513994()
{
  OUTLINED_FUNCTION_26_11();
  uint64_t result = sub_257513228(v2, v3, v4, *(void *)(v1 + 16), *(void *)(v1 + 24), v5);
  *uint64_t v0 = result;
  v0[1] = v7;
  v0[2] = v8;
  v0[3] = v9;
  return result;
}

uint64_t sub_2575139C8(void *a1)
{
  return nullsub_1(*a1);
}

void sub_2575139DC()
{
  OUTLINED_FUNCTION_26_11();
  float v3 = sub_257513320(v2, *(float *)(v1 + 16));
  *(void *)uint64_t v0 = v4;
  *(void *)(v0 + 8) = v5;
  *(float *)(v0 + 16) = v3;
}

uint64_t sub_257513A0C(void *a1)
{
  return nullsub_1(*a1);
}

double sub_257513A50@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = v2[1];
  long long v9 = *v2;
  long long v10 = v4;
  int v11 = *((_DWORD *)v2 + 8);
  sub_2575132D0(a1, (uint64_t)v7);
  double result = *(double *)v7;
  long long v6 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(_DWORD *)(a2 + 32) = v8;
  return result;
}

uint64_t sub_257513AAC()
{
  OUTLINED_FUNCTION_22_15();
  return sub_257512D84(v0, v1);
}

uint64_t sub_257513ADC()
{
  return sub_257515920(v0);
}

uint64_t Layer.isEveryParameterInitialized.getter()
{
  OUTLINED_FUNCTION_48_5();
  type metadata accessor for ParametrizedLayers();
  OUTLINED_FUNCTION_37_4();
  return sub_257516D68(v0, v1, v2) & 1;
}

void Layer.initializeParameters(recursively:initializer:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v74 = v5;
  uint64_t v75 = v6;
  LODWORD(v85) = v7;
  OUTLINED_FUNCTION_0_10();
  long long v9 = v8;
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_6_2();
  v67[1] = v11;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_7_11();
  uint64_t v71 = v13;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_7_11();
  uint64_t v72 = v15;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v16);
  OUTLINED_FUNCTION_7_11();
  uint64_t v69 = v17;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_7_11();
  uint64_t v73 = v19;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v20);
  OUTLINED_FUNCTION_7_11();
  uint64_t v78 = v21;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v67 - v23;
  sub_2576A8870();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = type metadata accessor for RecursiveStoredPropertiesIterator();
  OUTLINED_FUNCTION_0_10();
  uint64_t v27 = v26;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  long long v31 = (char *)v67 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_49_5();
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)v67 - v33;
  uint64_t v80 = v9;
  uint64_t v35 = v9 + 2;
  OUTLINED_FUNCTION_39_6();
  uint64_t v83 = v36;
  v36();
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = v85;
  uint64_t v70 = v24;
  sub_2574FE820();
  uint64_t v68 = v27;
  long long v37 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  v67[2] = v34;
  v37(v31, v34, v25);
  swift_getWitnessTable();
  sub_2576A7C40();
  uint64_t v81 = v1;
  uint64_t v82 = v25;
  long long v38 = v35;
  sub_2574FF0E8();
  if (!v86)
  {
LABEL_34:
    uint64_t v66 = *(void (**)(void))(v68 + 8);
    OUTLINED_FUNCTION_15_15();
    v66();
    OUTLINED_FUNCTION_15_15();
    v66();
    OUTLINED_FUNCTION_8_21();
    return;
  }
  uint64_t v39 = v87;
  uint64_t v79 = type metadata accessor for AnyLayerVariablePathCache();
  ++v80;
  uint64_t v76 = v2;
  uint64_t v77 = v35;
  while (1)
  {
    uint64_t v40 = sub_2575E6800(v39);
    swift_bridgeObjectRelease();
    uint64_t v86 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
    sub_257492AF8((unint64_t *)&qword_26A0028F0, &qword_26A0010C0);
    uint64_t v41 = sub_2576A7900();
    uint64_t v43 = v42;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_45_5();
    sub_2576A89D0();
    if (!swift_dynamicCastClass()) {
      break;
    }
    uint64_t WitnessTable = v43;
    uint64_t v85 = v41;
    OUTLINED_FUNCTION_39_6();
    uint64_t v44 = v2;
    uint64_t v45 = v83;
    OUTLINED_FUNCTION_34_7();
    v45();
    swift_retain_n();
    OUTLINED_FUNCTION_6_23();
    swift_release();
    uint64_t v46 = v38;
    long long v47 = *v80;
    OUTLINED_FUNCTION_15_15();
    v47();
    if ((~*(void *)(v86 + 32) & 0xF000000000000007) != 0)
    {
      swift_release();
      ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v73, v44, v4);
      swift_retain();
      OUTLINED_FUNCTION_6_23();
      swift_release();
      OUTLINED_FUNCTION_15_15();
      v47();
      uint64_t v56 = *(void *)(v86 + 32);
      if ((~v56 & 0xF000000000000007) == 0)
      {
        swift_release();
        goto LABEL_13;
      }
      swift_release();
      if (v56 < 0)
      {
        OUTLINED_FUNCTION_5_18();
        v45();
        swift_retain();
        OUTLINED_FUNCTION_6_23();
        swift_release();
        OUTLINED_FUNCTION_32_9();
        v47();
        uint64_t v61 = *(void *)(v86 + 32);
        uint64_t v57 = WitnessTable;
        if ((~v61 & 0xF000000000000007) == 0) {
          goto LABEL_35;
        }
        if ((v61 & 0x8000000000000000) == 0) {
          goto LABEL_36;
        }
        sub_257486C84();
        swift_release();
        uint64_t v2 = v76;
      }
      else
      {
LABEL_13:
        uint64_t v2 = v76;
        uint64_t v57 = WitnessTable;
      }
      uint64_t v58 = OUTLINED_FUNCTION_36_6();
      v74(v58, v57);
      swift_bridgeObjectRelease();
      long long v38 = v77;
      if (v86)
      {
        uint64_t v89 = v86;
        swift_retain();
        uint64_t v59 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
        Parameter.wrappedValue.setter(&v89);
        v59(&v86, 0);
        goto LABEL_26;
      }
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_5();
    swift_release();
    long long v38 = v46;
    uint64_t v2 = v44;
LABEL_28:
    sub_2574FF0E8();
    uint64_t v39 = v87;
    if (!v86) {
      goto LABEL_34;
    }
  }
  sub_2576A89D0();
  uint64_t v48 = swift_dynamicCastClass();
  long long v49 = v83;
  if (!v48)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v85 = v41;
  OUTLINED_FUNCTION_39_6();
  OUTLINED_FUNCTION_34_7();
  v49();
  swift_retain_n();
  OUTLINED_FUNCTION_6_23();
  swift_release();
  uint64_t v50 = v2;
  long long v51 = v38;
  uint64_t v52 = v50;
  uint64_t v53 = *v80;
  OUTLINED_FUNCTION_16_17();
  v53();
  OUTLINED_FUNCTION_33_7();
  if (v54)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_47_5();
    swift_release();
    uint64_t v55 = v52;
    long long v38 = v51;
    uint64_t v2 = v55;
    goto LABEL_28;
  }
  swift_release();
  ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v71, v52, v4);
  swift_retain();
  OUTLINED_FUNCTION_6_23();
  swift_release();
  OUTLINED_FUNCTION_16_17();
  v53();
  uint64_t v60 = *(void *)(v86 + 32);
  long long v38 = v51;
  if ((~v60 & 0xF000000000000007) == 0)
  {
    swift_release();
    goto LABEL_23;
  }
  swift_release();
  if ((v60 & 0x8000000000000000) == 0)
  {
LABEL_23:
    uint64_t v62 = v83;
    goto LABEL_24;
  }
  uint64_t v62 = v83;
  OUTLINED_FUNCTION_34_7();
  v62();
  swift_retain();
  OUTLINED_FUNCTION_6_23();
  swift_release();
  OUTLINED_FUNCTION_32_9();
  v53();
  uint64_t v65 = *(void *)(v86 + 32);
  if ((~v65 & 0xF000000000000007) == 0)
  {
LABEL_35:
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
    goto LABEL_37;
  }
  if (v65 < 0)
  {
    sub_257486C84();
    swift_release();
    long long v38 = v77;
LABEL_24:
    uint64_t v63 = OUTLINED_FUNCTION_36_6();
    v74(v63, v43);
    swift_bridgeObjectRelease();
    uint64_t v64 = v86;
    if (!v86)
    {
      OUTLINED_FUNCTION_47_5();
      swift_release();
      uint64_t v2 = v76;
      goto LABEL_28;
    }
    uint64_t v2 = v76;
    OUTLINED_FUNCTION_39_6();
    OUTLINED_FUNCTION_5_18();
    v62();
    swift_retain();
    swift_getAtKeyPath();
    swift_release();
    long long v38 = v77;
    OUTLINED_FUNCTION_32_9();
    v53();
    uint64_t v88 = v64;
    uint64_t v89 = v86;
    swift_retain();
    LayerState.wrappedValue.setter(&v88);
    swift_release();
LABEL_26:
    swift_release();
LABEL_27:
    OUTLINED_FUNCTION_47_5();
    swift_release();
    goto LABEL_28;
  }
LABEL_36:
  OUTLINED_FUNCTION_13_5();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_35_1();
LABEL_37:
  sub_2576A8B60();
  __break(1u);
}

BOOL sub_2575143B8(uint64_t a1, uint64_t a2, char a3)
{
  return (a3 & 1) != 0 && dynamic_cast_existential_1_conditional(a1)
      || !dynamic_cast_existential_1_conditional(a1)
      && (swift_dynamicCastMetatype()
       || swift_dynamicCastMetatype()
       || (a3 & 1) != 0 && (dynamic_cast_existential_1_conditional(a1) || dynamic_cast_existential_1_conditional(a1)));
}

BOOL sub_25751447C(uint64_t a1)
{
  if (dynamic_cast_existential_1_conditional(a1)) {
    return 0;
  }
  if (dynamic_cast_existential_1_conditional(a1)
    || swift_dynamicCastMetatype()
    || swift_dynamicCastMetatype()
    || dynamic_cast_existential_1_conditional(a1))
  {
    return 1;
  }
  return dynamic_cast_existential_1_conditional(a1) != 0;
}

uint64_t Layer.cast(to:recursively:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_257514548(a1, a2, 3, a3, a4, a5);
}

uint64_t sub_257514548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  LODWORD(v56) = a4;
  uint64_t v54 = a3;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v53 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v45 - v14;
  MEMORY[0x270FA5388](v13);
  long long v47 = (char *)&v45 - v16;
  uint64_t v52 = sub_2576A8870();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v46 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v45 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v45 - v23;
  uint64_t v45 = v10;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  v25(a6, v6, a5);
  uint64_t v55 = a6;
  uint64_t v57 = (void (*)(char *, uint64_t, uint64_t))v25;
  uint64_t v58 = v10 + 16;
  v25((uint64_t)v47, a6, a5);
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = (_BYTE)v56;
  char v27 = v54;
  *(void *)(v26 + 24) = v54;
  sub_2574FE820();
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
  uint64_t WitnessTable = (uint64_t)v24;
  v28(v46, v24, v17);
  swift_getWitnessTable();
  sub_2576A7C40();
  sub_2574FF0E8();
  if (!v60)
  {
LABEL_24:
    uint64_t v43 = *(void (**)(char *, uint64_t))(v49 + 8);
    v43(v22, v17);
    return ((uint64_t (*)(uint64_t, uint64_t))v43)(WitnessTable, v17);
  }
  uint64_t v29 = (void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v52 = v6;
  uint64_t v56 = v22;
  while (1)
  {
    swift_bridgeObjectRelease();
    sub_2576A89D0();
    if (!swift_dynamicCastClass()) {
      break;
    }
    v57(v15, v7, a5);
    if (v27)
    {
      swift_retain();
      swift_getAtKeyPath();
      (*v29)(v15, a5);
      if ((~*(void *)(v60 + 32) & 0xF000000000000007) != 0)
      {
        swift_release();
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        uint64_t v31 = *(void *)(v60 + 32);
        if ((~v31 & 0xF000000000000007) == 0 || (v31 & 0x8000000000000000) == 0) {
          goto LABEL_25;
        }
        uint64_t v59 = v31 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v32 = Tensor.scalarType.getter();
        uint64_t v34 = v33;
        swift_release();
        (*(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v34 + 32))(&v59, v32, v34);
        LOBYTE(v34) = v59;
        uint64_t v35 = static ScalarType.floatingPointTypes.getter();
        LOBYTE(v34) = sub_2575A0094(v34, (uint64_t)v35);
        swift_bridgeObjectRelease();
        uint64_t v22 = v56;
        if (v34)
        {
          swift_retain();
          swift_getAtKeyPath();
          swift_release();
          (*(void (**)(uint64_t *__return_ptr))(*(void *)(v51 + 8) + 32))(&v59);
          uint64_t v36 = sub_257490B98(&v59);
          swift_release();
          uint64_t v60 = v36;
          LOWORD(v61) = 256;
          goto LABEL_21;
        }
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    (*v29)(v15, a5);
LABEL_9:
    swift_release();
LABEL_23:
    sub_2574FF0E8();
    if (!v60) {
      goto LABEL_24;
    }
  }
  sub_2576A89D0();
  if (!swift_dynamicCastClass()) {
    goto LABEL_9;
  }
  uint64_t v30 = v53;
  v57(v53, v7, a5);
  if ((v27 & 2) == 0)
  {
    (*v29)(v30, a5);
    goto LABEL_9;
  }
  swift_retain();
  swift_getAtKeyPath();
  (*v29)(v30, a5);
  if ((~*(void *)(v60 + 32) & 0xF000000000000007) == 0)
  {
LABEL_16:
    swift_release_n();
    swift_release();
    uint64_t v22 = v56;
    goto LABEL_23;
  }
  swift_release();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v37 = *(void *)(v60 + 32);
  if ((~v37 & 0xF000000000000007) != 0 && v37 < 0)
  {
    uint64_t v59 = v37 & 0x7FFFFFFFFFFFFFFFLL;
    long long v38 = Tensor.scalarType.getter();
    uint64_t v40 = v39;
    swift_release();
    (*(void (**)(uint64_t *__return_ptr, ValueMetadata *, uint64_t))(v40 + 32))(&v59, v38, v40);
    LOBYTE(v40) = v59;
    uint64_t v41 = static ScalarType.floatingPointTypes.getter();
    LOBYTE(v40) = sub_2575A0094(v40, (uint64_t)v41);
    swift_bridgeObjectRelease();
    uint64_t v22 = v56;
    if (v40)
    {
      swift_retain();
      swift_getAtKeyPath();
      swift_release();
      (*(void (**)(uint64_t *__return_ptr))(*(void *)(v51 + 8) + 32))(&v59);
      uint64_t v42 = sub_257490B98(&v59);
      swift_release();
      uint64_t v60 = v42;
LABEL_21:
      swift_retain();
      swift_setAtWritableKeyPath();
      swift_release();
    }
LABEL_22:
    swift_release_n();
    uint64_t v7 = v52;
    char v27 = v54;
    goto LABEL_23;
  }
LABEL_25:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t Layer.castParameters(to:recursively:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_257514548(a1, a2, 1, a3, a4, a5);
}

BOOL sub_257514D24(uint64_t a1, uint64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0 && OUTLINED_FUNCTION_20_16()) {
    return 1;
  }
  if (OUTLINED_FUNCTION_20_16()) {
    return 0;
  }
  if (swift_dynamicCastMetatype()) {
    return a4 & 1;
  }
  if (!swift_dynamicCastMetatype()) {
    return (a3 & 1) != 0 && (OUTLINED_FUNCTION_20_16() || OUTLINED_FUNCTION_20_16());
  }
  return (a4 >> 1) & 1;
}

BOOL sub_257514DE4(uint64_t a1)
{
  return !dynamic_cast_existential_1_conditional(a1)
      && (dynamic_cast_existential_1_conditional(a1) || dynamic_cast_existential_1_conditional(a1))
      || dynamic_cast_existential_1_conditional(a1) != 0;
}

uint64_t sub_257514E78()
{
  return (*(uint64_t (**)(void, void))(v0[3] + 64))(v0[5], v0[2]);
}

void Layer.prepared(for:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v3, a2);
  char v5 = v4;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v5);
}

uint64_t Layer.prediction(from:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_5_18();
  v7();
  char v12 = 2;
  Layer.prepare(for:)((NeuralNetworks::LearningPhase)&v12);
  OUTLINED_FUNCTION_37_4();
  Layer.callAsFunction(_:)(v8, v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, a2);
}

void Layer.sublayers(recursively:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v15 = v0;
  uint64_t v2 = v1;
  char v14 = v3;
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_2576A8870();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v13 = swift_allocBox();
  uint64_t v7 = *(void (**)(uint64_t))(v5 + 16);
  uint64_t v8 = OUTLINED_FUNCTION_30_9();
  v7(v8);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = v14;
  sub_2574FE820();
  uint64_t v9 = OUTLINED_FUNCTION_30_9();
  v7(v9);
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v2;
  v10[3] = v15;
  v10[4] = v13;
  OUTLINED_FUNCTION_37_4();
  v11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0028F8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_25751837C;
  *(void *)(v12 + 24) = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A002900);
  *(void *)(swift_allocObject() + 16) = v12;
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2575151D8@<X0>(uint64_t a1@<X8>)
{
  sub_2576A8870();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  swift_projectBox();
  swift_beginAccess();
  sub_2574FF0E8();
  uint64_t result = swift_endAccess();
  if (*(void *)&v3[0])
  {
    while (1)
    {
      swift_bridgeObjectRelease();
      swift_getAtPartialKeyPath();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030E8);
      if (swift_dynamicCast()) {
        return sub_257479260(v3, a1);
      }
      uint64_t v4 = 0;
      memset(v3, 0, sizeof(v3));
      sub_257518F58((uint64_t)v3);
      swift_beginAccess();
      sub_2574FF0E8();
      uint64_t result = swift_endAccess();
      if (!*(void *)&v3[0]) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

void Layer.sublayerKeyPaths<A>(to:recursively:)()
{
  OUTLINED_FUNCTION_9_22();
  char v1 = v0;
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_11_19();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v3 = swift_allocBox();
  uint64_t v4 = OUTLINED_FUNCTION_18_15();
  v5(v4);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = v1;
  sub_2574FE820();
  uint64_t v6 = (void *)swift_allocObject();
  OUTLINED_FUNCTION_24_12(v6)[6] = v3;
  swift_retain();
  sub_2576A86D0();
  sub_2576A86C0();
  swift_getWitnessTable();
  sub_2576A86F0();
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2575154E8@<X0>(void *a1@<X8>)
{
  sub_2576A89D0();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  swift_projectBox();
  swift_beginAccess();
  sub_2574FF0E8();
  uint64_t result = swift_endAccess();
  if (v3) {
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a1 = v3;
  return result;
}

void Layer.namedSublayerKeyPaths<A>(to:recursively:)()
{
  OUTLINED_FUNCTION_9_22();
  char v1 = v0;
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_11_19();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v3 = swift_allocBox();
  uint64_t v4 = OUTLINED_FUNCTION_18_15();
  v5(v4);
  *(unsigned char *)(OUTLINED_FUNCTION_27_3() + 16) = v1;
  sub_2574FE820();
  uint64_t v6 = (void *)swift_allocObject();
  OUTLINED_FUNCTION_24_12(v6)[6] = v3;
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_2576A86D0();
  OUTLINED_FUNCTION_45_5();
  sub_2576A86C0();
  swift_getWitnessTable();
  sub_2576A86F0();
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

BOOL sub_257515754(uint64_t a1, uint64_t a2, char a3)
{
  return !dynamic_cast_existential_1_conditional(a1)
      && ((a3 & 1) != 0 && OUTLINED_FUNCTION_20_16()
       || OUTLINED_FUNCTION_20_16()
       || (a3 & 1) != 0 && OUTLINED_FUNCTION_20_16());
}

uint64_t sub_2575157D4@<X0>(uint64_t *a1@<X8>)
{
  sub_2576A89D0();
  swift_getWitnessTable();
  type metadata accessor for RecursiveStoredPropertiesIterator();
  swift_projectBox();
  swift_beginAccess();
  sub_2574FF0E8();
  uint64_t result = swift_endAccess();
  if (v6)
  {
    type metadata accessor for AnyLayerVariablePathCache();
    sub_2575E6800(v7);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C0);
    sub_257492AF8((unint64_t *)&qword_26A0028F0, &qword_26A0010C0);
    uint64_t v3 = sub_2576A7900();
    uint64_t v5 = v4;
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  *a1 = v3;
  a1[1] = v5;
  a1[2] = v6;
  return result;
}

uint64_t sub_257515920(void *__src)
{
  uint64_t v86 = *MEMORY[0x263EF8340];
  memcpy(__dst, __src, 0x43uLL);
  if (qword_26A000908 != -1) {
    goto LABEL_76;
  }
  while (1)
  {
    swift_beginAccess();
    unsigned __int8 v1 = sub_2574BAFB0((uint64_t)&type metadata for LSTM, (uint64_t)off_26A0028E0);
    swift_endAccess();
    if (v1 != 2 && (v1 & 1) == 0) {
      return 1;
    }
    if (qword_26A000930 != -1) {
      swift_once();
    }
    swift_retain();
    sub_257595364();
    uint64_t v3 = sub_257517BDC((uint64_t)&type metadata for LSTM, (uint64_t)&type metadata for Parameter, 0, &qword_26A002E00);
    sub_257595388();
    swift_release();
    unsigned __int8 v48 = v1;
    if (!v3)
    {
      unint64_t v52 = MEMORY[0x263F8EE78];
      uint64_t v50 = MEMORY[0x263F8EE88];
      uint64_t v51 = MEMORY[0x263F8EE88];
      memcpy(v54, __dst, 0x43uLL);
      uint64_t v4 = swift_allocObject();
      *(unsigned char *)(v4 + 16) = 0;
      *(_DWORD *)(v4 + 20) = 4;
      sub_257518BEC((uint64_t)v54);
      sub_2576274B0();
      uint64_t v5 = v83;
      uint64_t v6 = v85;
      char v56 = v71;
      uint64_t v57 = v72;
      char v58 = v73;
      uint64_t v59 = v74;
      __int16 v60 = v75;
      uint64_t v61 = v76;
      __int16 v62 = v77;
      char v63 = v78;
      uint64_t v64 = v79;
      __int16 v65 = v80;
      char v66 = v81;
      uint64_t v67 = v82;
      uint64_t v68 = v83;
      uint64_t v69 = v84;
      uint64_t v70 = v85;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_25747A4D0((uint64_t)v5);
      uint64_t v7 = v67;
      uint64_t v8 = *(void *)(v67 + 16);
      uint64_t v45 = v6;
      sub_2576A7810();
      if (v8)
      {
        uint64_t v47 = MEMORY[0x263F8EE78];
        do
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25763C198();
            uint64_t v7 = v9;
          }
          uint64_t v10 = *(void *)(v7 + 16);
          if (!v10) {
            goto LABEL_75;
          }
          uint64_t v11 = v10 - 1;
          uint64_t v12 = v7 + 16 * v11;
          uint64_t v13 = *(void *)(v12 + 32);
          LODWORD(v12) = *(_DWORD *)(v12 + 40);
          *(void *)(v7 + 16) = v11;
          uint64_t v67 = v7;
          int v49 = v12;
          if (v5)
          {
            uint64_t v14 = *(void *)(v13 + 32);
            swift_beginAccess();
            swift_retain();
            char v15 = v5(v14, &v49);
            swift_endAccess();
            if (v15)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE0);
              sub_257492AF8(&qword_26A002DF8, &qword_26A002DE0);
              sub_2574FF53C();
            }
          }
          else
          {
            swift_retain();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DD8);
          swift_dynamicCastClassUnconditional();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE0);
          if (swift_dynamicCastClass())
          {
            uint64_t v55 = v45;
            swift_retain_n();
            sub_2576A7810();
            sub_2576A7810();
            sub_2575A0370();
            swift_release();
            swift_release();
            uint64_t v43 = v55;
            int v16 = *(unsigned __int8 *)(v13 + 49);
            swift_release();
            swift_beginAccess();
            char v44 = v49;
            if (v52 >> 62)
            {
              sub_2576A7810();
              sub_2576A8BF0();
              swift_bridgeObjectRelease();
            }
            uint64_t v17 = swift_retain();
            MEMORY[0x25A2B83B0](v17);
            if (*(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_2576A7E70();
            }
            sub_2576A7ED0();
            sub_2576A7E20();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2574727D8();
              uint64_t v47 = v20;
            }
            uint64_t v18 = v47;
            unint64_t v19 = *(void *)(v47 + 16);
            if (v19 >= *(void *)(v47 + 24) >> 1)
            {
              sub_2574727D8();
              uint64_t v18 = v21;
            }
            *(void *)(v18 + 16) = v19 + 1;
            uint64_t v47 = v18;
            *(void *)(v18 + 8 * v19 + 32) = v43;
            if ((v44 & 4) != 0) {
              sub_2575E8A18();
            }
            if (v16) {
              sub_2575E8A18();
            }
            swift_release();
          }
          else
          {
            swift_release_n();
          }
          uint64_t v7 = v67;
        }
        while (*(void *)(v67 + 16));
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25747A4E0((uint64_t)v5);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002E00);
      swift_allocObject();
      sub_257517A74();
      uint64_t v3 = v23;
      if (!sub_2575E7F1C() && !sub_2575E7EEC())
      {
        swift_retain();
        sub_257595364();
        if (qword_26A000938 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v24 = swift_retain();
        sub_2575CDF10(v24, &type metadata for LSTM, &type metadata for Parameter, 0);
        swift_endAccess();
        sub_257595388();
        swift_release();
      }
      uint64_t v25 = (uint64_t)v83;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_25747A4E0(v25);
      swift_bridgeObjectRelease();
      unsigned __int8 v1 = v48;
    }
    if (v1 == 2)
    {
      unint64_t v27 = *(void *)(v3 + 16);
      if (v27 >> 62)
      {
        swift_retain();
        sub_2576A7810();
        uint64_t v28 = sub_2576A8BF0();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v26 = v28 > 0;
    }
    else
    {
      char v26 = v1 & 1;
    }
    char v46 = v26;
    unint64_t v29 = *(void *)(v3 + 16);
    if (v29 >> 62)
    {
      sub_2576A7810();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE0);
      uint64_t v42 = sub_2576A8B80();
      swift_bridgeObjectRelease();
      unint64_t v29 = v42;
    }
    else
    {
      uint64_t v30 = v29 & 0xFFFFFFFFFFFFFF8;
      sub_2576A7810();
      sub_2576A8F90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DE0);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v39 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v39)
        {
          uint64_t v40 = v30 + 32;
          while (swift_dynamicCastClass())
          {
            v40 += 8;
            if (!--v39) {
              goto LABEL_49;
            }
          }
          unint64_t v29 = v30 | 1;
        }
      }
    }
LABEL_49:
    if (!(v29 >> 62))
    {
      uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v31) {
        break;
      }
      goto LABEL_51;
    }
    sub_2576A7810();
    uint64_t v31 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (!v31) {
      break;
    }
LABEL_51:
    uint64_t v32 = 4;
    while (1)
    {
      if ((v29 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v32 - 4, v29);
      }
      else {
        swift_retain();
      }
      uint64_t v33 = v32 - 3;
      if (__OFADD__(v32 - 4, 1)) {
        break;
      }
      uint64_t v34 = sub_2576A8600();
      if (v35)
      {
        swift_getAtKeyPath();
        uint64_t v37 = *(void *)(v71 + 32);
        swift_release();
        swift_release();
        if ((v37 & 0x8000000000000000) == 0) {
          goto LABEL_68;
        }
      }
      else
      {
        LOBYTE(v71) = __dst[0];
        uint64_t v72 = __dst[1];
        char v73 = __dst[2];
        uint64_t v74 = __dst[3];
        __int16 v75 = __dst[4];
        uint64_t v76 = __dst[5];
        __int16 v77 = __dst[6];
        char v78 = BYTE2(__dst[6]);
        uint64_t v79 = __dst[7];
        __int16 v80 = __dst[8];
        char v81 = BYTE2(__dst[8]);
        uint64_t v36 = *(void *)(*(uint64_t *)((char *)&v71 + v34) + 32);
        swift_release();
        if ((~v36 & 0xF000000000000007) != 0 && (v36 & 0x8000000000000000) == 0)
        {
LABEL_68:
          int v38 = v48;
          swift_bridgeObjectRelease();
          uint64_t v22 = 0;
          goto LABEL_69;
        }
      }
      ++v32;
      if (v33 == v31) {
        goto LABEL_62;
      }
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    swift_once();
  }
LABEL_62:
  int v38 = v48;
  swift_bridgeObjectRelease();
  uint64_t v22 = 1;
LABEL_69:
  if (v38 == 2)
  {
    swift_beginAccess();
    sub_2575CDEA8(v46, (uint64_t)&type metadata for LSTM);
    swift_endAccess();
  }
  swift_release();
  return v22;
}

uint64_t sub_257516398(char a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  float v55 = a4;
  char v56 = a1;
  *(void *)&long long v57 = a2;
  *((void *)&v57 + 1) = a3;
  if (qword_26A000908 != -1) {
    goto LABEL_77;
  }
  while (1)
  {
    swift_beginAccess();
    unsigned __int8 v4 = sub_2574BAFB0((uint64_t)&type metadata for Dropout, (uint64_t)off_26A0028E0);
    swift_endAccess();
    if (v4 != 2 && (v4 & 1) == 0) {
      return 1;
    }
    if (qword_26A000930 != -1) {
      swift_once();
    }
    swift_retain();
    sub_257595364();
    uint64_t v6 = sub_257517BDC((uint64_t)&type metadata for Dropout, (uint64_t)&type metadata for Parameter, 0, &qword_26A002DD0);
    sub_257595388();
    swift_release();
    if (!v6)
    {
      unint64_t v54 = MEMORY[0x263F8EE78];
      uint64_t v52 = MEMORY[0x263F8EE88];
      uint64_t v53 = MEMORY[0x263F8EE88];
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 0;
      *(_DWORD *)(v8 + 20) = 4;
      swift_retain();
      swift_retain();
      sub_2576274F0();
      uint64_t v9 = v69;
      uint64_t v10 = v71;
      int v59 = v66;
      char v60 = BYTE4(v66);
      long long v61 = v67;
      uint64_t v62 = v68;
      char v63 = v69;
      uint64_t v64 = v70;
      uint64_t v65 = v71;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_25747A4D0((uint64_t)v9);
      uint64_t v11 = v62;
      uint64_t v12 = *(void *)(v62 + 16);
      uint64_t v48 = v10;
      sub_2576A7810();
      if (v12)
      {
        uint64_t v50 = MEMORY[0x263F8EE78];
        do
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_25763C1E4();
            uint64_t v11 = v13;
          }
          uint64_t v14 = *(void *)(v11 + 16);
          if (!v14) {
            goto LABEL_76;
          }
          uint64_t v15 = v14 - 1;
          uint64_t v16 = v11 + 16 * v15;
          uint64_t v17 = *(void *)(v16 + 32);
          LODWORD(v16) = *(_DWORD *)(v16 + 40);
          *(void *)(v11 + 16) = v15;
          uint64_t v62 = v11;
          int v51 = v16;
          if (v9)
          {
            uint64_t v18 = *(void *)(v17 + 32);
            swift_beginAccess();
            swift_retain();
            char v19 = v9(v18, &v51);
            swift_endAccess();
            if (v19)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB0);
              sub_257492AF8(&qword_26A002DC8, &qword_26A002DB0);
              sub_2574FF53C();
            }
          }
          else
          {
            swift_retain();
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DA8);
          swift_dynamicCastClassUnconditional();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB0);
          if (swift_dynamicCastClass())
          {
            uint64_t v58 = v48;
            swift_retain_n();
            sub_2576A7810();
            sub_2576A7810();
            sub_2575A0370();
            swift_release();
            swift_release();
            uint64_t v20 = v58;
            int v21 = *(unsigned __int8 *)(v17 + 49);
            swift_release();
            swift_beginAccess();
            char v47 = v51;
            if (v54 >> 62)
            {
              sub_2576A7810();
              sub_2576A8BF0();
              swift_bridgeObjectRelease();
            }
            uint64_t v22 = swift_retain();
            MEMORY[0x25A2B83B0](v22);
            if (*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_2576A7E70();
            }
            sub_2576A7ED0();
            sub_2576A7E20();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_2574727D8();
              uint64_t v50 = v25;
            }
            uint64_t v23 = v50;
            unint64_t v24 = *(void *)(v50 + 16);
            if (v24 >= *(void *)(v50 + 24) >> 1)
            {
              sub_2574727D8();
              uint64_t v23 = v26;
            }
            *(void *)(v23 + 16) = v24 + 1;
            uint64_t v50 = v23;
            *(void *)(v23 + 8 * v24 + 32) = v20;
            if ((v47 & 4) != 0) {
              sub_2575E8A18();
            }
            if (v21) {
              sub_2575E8A18();
            }
            swift_release();
          }
          else
          {
            swift_release_n();
          }
          uint64_t v11 = v62;
        }
        while (*(void *)(v62 + 16));
      }
      swift_release();
      swift_release();
      swift_release();
      sub_25747A4E0((uint64_t)v9);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DD0);
      swift_allocObject();
      sub_257517A74();
      uint64_t v6 = v27;
      if (!sub_2575E7F1C() && !sub_2575E7EEC())
      {
        swift_retain();
        sub_257595364();
        if (qword_26A000938 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v28 = swift_retain();
        sub_2575CDF10(v28, &type metadata for Dropout, &type metadata for Parameter, 0);
        swift_endAccess();
        sub_257595388();
        swift_release();
      }
      uint64_t v29 = (uint64_t)v69;
      swift_release();
      swift_release();
      swift_release();
      sub_25747A4E0(v29);
      swift_bridgeObjectRelease();
    }
    if (v4 == 2)
    {
      unint64_t v31 = *(void *)(v6 + 16);
      if (v31 >> 62)
      {
        swift_retain();
        sub_2576A7810();
        uint64_t v32 = sub_2576A8BF0();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v30 = v32 > 0;
    }
    else
    {
      char v30 = v4 & 1;
    }
    char v49 = v30;
    unint64_t v33 = *(void *)(v6 + 16);
    if (v33 >> 62)
    {
      sub_2576A7810();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB0);
      uint64_t v46 = sub_2576A8B80();
      swift_bridgeObjectRelease();
      unint64_t v33 = v46;
    }
    else
    {
      uint64_t v34 = v33 & 0xFFFFFFFFFFFFFF8;
      sub_2576A7810();
      sub_2576A8F90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A002DB0);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v43 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v43)
        {
          uint64_t v44 = v34 + 32;
          while (swift_dynamicCastClass())
          {
            v44 += 8;
            if (!--v43) {
              goto LABEL_50;
            }
          }
          unint64_t v33 = v34 | 1;
        }
      }
    }
LABEL_50:
    if (!(v33 >> 62))
    {
      uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35) {
        break;
      }
      goto LABEL_52;
    }
    sub_2576A7810();
    uint64_t v35 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (!v35) {
      break;
    }
LABEL_52:
    uint64_t v36 = 4;
    while (1)
    {
      if ((v33 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v36 - 4, v33);
      }
      else {
        swift_retain();
      }
      uint64_t v37 = v36 - 3;
      if (__OFADD__(v36 - 4, 1)) {
        break;
      }
      uint64_t v38 = sub_2576A8600();
      if (v39)
      {
        swift_getAtKeyPath();
        uint64_t v41 = *(void *)(v66 + 32);
        swift_release();
        swift_release();
        if ((v41 & 0x8000000000000000) == 0) {
          goto LABEL_69;
        }
      }
      else
      {
        *(float *)&uint64_t v66 = v55;
        BYTE4(v66) = v56;
        long long v67 = v57;
        uint64_t v40 = *(void *)(*(uint64_t *)((char *)&v66 + v38) + 32);
        swift_release();
        if ((~v40 & 0xF000000000000007) != 0 && (v40 & 0x8000000000000000) == 0)
        {
LABEL_69:
          int v42 = v4;
          swift_bridgeObjectRelease();
          uint64_t v7 = 0;
          goto LABEL_70;
        }
      }
      ++v36;
      if (v37 == v35) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    swift_once();
  }
LABEL_63:
  int v42 = v4;
  swift_bridgeObjectRelease();
  uint64_t v7 = 1;
LABEL_70:
  if (v42 == 2)
  {
    swift_beginAccess();
    sub_2575CDEA8(v49, (uint64_t)&type metadata for Dropout);
    swift_endAccess();
  }
  swift_release();
  return v7;
}

uint64_t sub_257516D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a1;
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v7;
  uint64_t v8 = sub_2576A89D0();
  swift_getWitnessTable();
  uint64_t v9 = type metadata accessor for RecursiveStoredPropertiesIterator();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v54 - v14;
  MEMORY[0x270FA5388](v13);
  char v56 = (char *)&v54 - v16;
  if (qword_26A000908 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v17 = off_26A0028E0;
  uint64_t v18 = *((void *)off_26A0028E0 + 2);
  uint64_t v59 = a3;
  if (v18 && (unint64_t v19 = sub_2574759B8(v60), (v20 & 1) != 0))
  {
    char v21 = *(unsigned char *)(v17[7] + v19);
    swift_endAccess();
    uint64_t result = 1;
    if ((v21 & 1) == 0) {
      return result;
    }
    float v55 = v6;
    uint64_t v23 = v4;
    uint64_t v58 = 1;
  }
  else
  {
    float v55 = v6;
    uint64_t v23 = v4;
    swift_endAccess();
    uint64_t v58 = 0x100000000;
  }
  uint64_t v24 = type metadata accessor for AnyLayerVariablePathCache();
  uint64_t v26 = v59;
  uint64_t v25 = v60;
  uint64_t v27 = sub_2575E788C(v60, (uint64_t)&type metadata for Parameter, 0, v60);
  if (v27)
  {
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v54 = v24;
    uint64_t v68 = sub_2576A76E0();
    uint64_t v66 = MEMORY[0x263F8EE88];
    uint64_t v67 = MEMORY[0x263F8EE88];
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v55, v61, v25);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v25;
    *(void *)(v29 + 24) = v26;
    *(unsigned char *)(v29 + 32) = 0;
    *(_DWORD *)(v29 + 36) = 4;
    char v30 = v56;
    sub_2574FE820();
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v12, v30, v9);
    swift_getWitnessTable();
    sub_2576A7C40();
    sub_2574FF0E8();
    uint64_t v31 = v62;
    if (v62)
    {
      uint64_t v32 = v63;
      uint64_t v33 = v64;
      uint64_t v34 = MEMORY[0x263F8EE78];
      do
      {
        uint64_t v35 = sub_2576A7810();
        MEMORY[0x25A2B84C0](v35, v8);
        swift_bridgeObjectRelease();
        uint64_t v62 = v31;
        sub_2576A7F50();
        swift_retain();
        sub_2576A7F10();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2574727D8();
          uint64_t v34 = v37;
        }
        unint64_t v36 = *(void *)(v34 + 16);
        if (v36 >= *(void *)(v34 + 24) >> 1)
        {
          sub_2574727D8();
          uint64_t v34 = v38;
        }
        *(void *)(v34 + 16) = v36 + 1;
        *(void *)(v34 + 8 * v36 + 32) = v32;
        if ((v33 & 0x400000000) != 0) {
          sub_2575E8A18();
        }
        if (v33) {
          sub_2575E8A18();
        }
        swift_release();
        sub_2574FF0E8();
        uint64_t v31 = v62;
        uint64_t v32 = v63;
        uint64_t v33 = v64;
      }
      while (v62);
    }
    char v39 = *(void (**)(char *, uint64_t))(v57 + 8);
    v39(v15, v9);
    uint64_t v62 = v60;
    char v63 = &type metadata for Parameter;
    uint64_t v64 = v59;
    uint64_t v65 = &protocol witness table for Parameter;
    type metadata accessor for LayerVariablePaths();
    sub_2575E7ADC();
    uint64_t v28 = v40;
    sub_2575E7B58();
    sub_2575E7B60(v28);
    v39(v56, v9);
  }
  if ((v58 & 0x100000000) != 0)
  {
    unint64_t v41 = *(void *)(v28 + 16);
    if (v41 >> 62)
    {
      swift_retain();
      sub_2576A7810();
      uint64_t v42 = sub_2576A8BF0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    LODWORD(v58) = v42 > 0;
  }
  uint64_t v43 = sub_2575E59F4();
  uint64_t v68 = sub_2576A7E00();
  if (v68 == MEMORY[0x25A2B8500](v43, v8))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v44 = 1;
    uint64_t v45 = 1;
    if (!HIDWORD(v58)) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v46 = v60;
  while (1)
  {
    char v47 = sub_2576A7EC0();
    sub_2576A7E40();
    if (v47) {
      swift_retain();
    }
    else {
      sub_2576A87C0();
    }
    sub_2576A7810();
    MEMORY[0x25A2B8510](&v68, v43, v8);
    swift_bridgeObjectRelease();
    uint64_t v48 = sub_2576A8600();
    if (v49) {
      break;
    }
    uint64_t v50 = MEMORY[0x270FA5388](v48);
    uint64_t v51 = v59;
    *(&v54 - 6) = v46;
    *(&v54 - 5) = v51;
    *(&v54 - 4) = v50;
    *(&v54 - 3) = (uint64_t)sub_2575175A4;
    *(&v54 - 2) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010C8);
    sub_2575E6784();
    swift_release();
    if ((v67 & 1) == 0) {
      goto LABEL_41;
    }
LABEL_38:
    uint64_t v53 = v68;
    if (v53 == MEMORY[0x25A2B8500](v43, v8)) {
      goto LABEL_27;
    }
  }
  swift_getAtKeyPath();
  uint64_t v52 = *(void *)(v62 + 32);
  swift_release();
  swift_release();
  if (v52 < 0) {
    goto LABEL_38;
  }
LABEL_41:
  swift_bridgeObjectRelease();
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  if ((v58 & 0x100000000) != 0)
  {
LABEL_28:
    swift_beginAccess();
    sub_2575CDEA8(v58, v60);
    swift_endAccess();
    uint64_t v45 = v44;
  }
LABEL_29:
  swift_release();
  return v45;
}

void *sub_257517564()
{
  uint64_t result = (void *)sub_2576A77E0();
  off_26A0028E0 = result;
  return result;
}

uint64_t sub_2575175A4@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *(uint64_t *)(*(void *)result + 32) < 0;
  return result;
}

uint64_t sub_2575175B8()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2575175C8(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_2575175DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_257513020(a1, *v2);
  *a2 = result;
  a2[1] = v5;
  a2[2] = v6;
  return result;
}

uint64_t sub_257517610()
{
  OUTLINED_FUNCTION_22_15();
  return nullsub_1(v0);
}

double sub_257517644@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v4 = v2[1];
  long long v9 = *v2;
  long long v10 = v4;
  long long v11 = v2[2];
  sub_257512FD0(a1, v7);
  long long v5 = v7[1];
  *a2 = v7[0];
  a2[1] = v5;
  double result = *(double *)&v8;
  a2[2] = v8;
  return result;
}

uint64_t sub_257517698(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_2575176B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_257513398(a1, *v2);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = v7 & 1;
  return result;
}

uint64_t sub_2575176F0()
{
  OUTLINED_FUNCTION_0_9();
  return nullsub_1(v0);
}

uint64_t sub_257517730()
{
  OUTLINED_FUNCTION_0_9();
  return sub_25751335C(v0, v1);
}

void sub_257517788()
{
  OUTLINED_FUNCTION_48_5();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_29_9();
  Layer.place(on:)();
}

uint64_t sub_2575177DC()
{
  swift_getWitnessTable();
  uint64_t v0 = OUTLINED_FUNCTION_29_9();
  return Layer.placed(on:)(v0, v1, v2);
}

uint64_t sub_257517840()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_257513ADC() & 1;
}

uint64_t sub_257517884()
{
  OUTLINED_FUNCTION_14_19();
  memcpy(v0, v1, 0x43uLL);
  uint64_t v2 = OUTLINED_FUNCTION_9_24();
  return sub_257512DF8(v2, v3);
}

void sub_2575178C4()
{
  OUTLINED_FUNCTION_48_5();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_29_9();
  Layer.place(on:)();
}

uint64_t sub_257517918()
{
  swift_getWitnessTable();
  uint64_t v0 = OUTLINED_FUNCTION_29_9();
  return Layer.placed(on:)(v0, v1, v2);
}

uint64_t sub_25751797C()
{
  return sub_257513AE4(*(unsigned __int8 *)(v0 + 4), *(void *)(v0 + 8), *(void *)(v0 + 16), *(float *)v0);
}

uint64_t sub_25751798C(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_2575179A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257512B98(a1, *(unsigned char *)(v2 + 4), *(void *)(v2 + 8), *(void *)(v2 + 16), a2, *(float *)v2);
}

uint64_t sub_2575179B4(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_2575179C4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_257513110(a1, *v2, a2);
}

uint64_t sub_2575179CC(uint64_t a1, uint64_t a2, char a3, int a4)
{
  OUTLINED_FUNCTION_48_5();
  if (swift_dynamicCastMetatype()) {
    goto LABEL_2;
  }
  if ((a3 & 1) == 0) {
    return 0;
  }
  if (OUTLINED_FUNCTION_40_5()) {
    return OUTLINED_FUNCTION_40_5() == 0;
  }
  if (OUTLINED_FUNCTION_40_5() || (uint64_t result = OUTLINED_FUNCTION_40_5()) != 0)
  {
LABEL_2:
    *v4 |= a4;
    return 1;
  }
  return result;
}

void sub_257517A74()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  unint64_t v9 = v8;
  v0[4] = 0;
  if (v8 >> 62)
  {
    sub_2576A8630();
    uint64_t v10 = sub_2576A8B80();
  }
  else
  {
    sub_2576A7810();
    sub_2576A8F90();
    sub_2576A8630();
    uint64_t v10 = v9;
  }
  v0[2] = v10;
  v0[3] = v7;
  v0[7] = v5;
  v0[8] = v3;
  MEMORY[0x270FA5388](v10);
  swift_getKeyPath();
  swift_retain();
  sub_25750278C(v9);
  uint64_t v12 = v11;
  swift_release();
  v0[5] = v12;
  sub_25750292C(v9);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  v1[6] = v14;
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_257517BB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2576A8620();
  *a1 = result;
  return result;
}

uint64_t sub_257517BDC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  if (qword_26A000938 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*((void *)off_26A0046B8 + 2) && (sub_2574759F4(a1, a2, a3 & 1), (v8 & 1) != 0))
  {
    swift_endAccess();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    uint64_t v9 = swift_dynamicCastClass();
    if (v9) {
      swift_retain();
    }
  }
  else
  {
    swift_endAccess();
    return 0;
  }
  return v9;
}

uint64_t sub_257517CE4(void *a1)
{
  return nullsub_1(*a1);
}

void sub_257517CF4()
{
  float v1 = OUTLINED_FUNCTION_25_12();
  *(float *)uint64_t v0 = sub_25751342C(v1, v2, (void (*)(void))sub_257508BC8);
  *(_DWORD *)(v0 + 4) = v3;
}

uint64_t sub_257517D38(void *a1)
{
  return nullsub_1(*a1);
}

void sub_257517D4C()
{
  float v1 = OUTLINED_FUNCTION_25_12();
  *(float *)uint64_t v0 = sub_25751342C(v1, v2, (void (*)(void))sub_257510274);
  *(_DWORD *)(v0 + 4) = v3;
}

uint64_t sub_257517D94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2575130C0(a1, *v2, (void (*)(void))sub_25750F668);
  *a2 = result;
  return result;
}

void sub_257517DE0()
{
  float v1 = OUTLINED_FUNCTION_27_10();
  *uint64_t v0 = sub_2575131C0(v1, v2, (void (*)(void))sub_25750D1C8);
}

void sub_257517E38()
{
  float v1 = OUTLINED_FUNCTION_27_10();
  *uint64_t v0 = sub_2575131C0(v1, v2, (void (*)(void))sub_257510E90);
}

uint64_t sub_257517E7C(void *a1)
{
  return nullsub_1(*a1);
}

void sub_257517E8C()
{
  float v1 = OUTLINED_FUNCTION_27_10();
  *uint64_t v0 = sub_2575131C0(v1, v2, (void (*)(void))sub_257507FAC);
}

void sub_257517ECC()
{
  float v1 = OUTLINED_FUNCTION_27_10();
  *uint64_t v0 = sub_2575131C0(v1, v2, (void (*)(void))sub_25750D5CC);
}

void sub_257517F14()
{
  float v1 = OUTLINED_FUNCTION_27_10();
  *uint64_t v0 = sub_2575131C0(v1, v2, (void (*)(void))sub_257508FCC);
}

uint64_t sub_257517F50(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_257517F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_257512D20(a1, *(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), a2);
}

void sub_257517FA4()
{
  float v1 = OUTLINED_FUNCTION_25_12();
  *(float *)uint64_t v0 = sub_25751308C(v2, v1);
  *(_DWORD *)(v0 + 4) = v3;
}

uint64_t sub_257517FCC(void *a1)
{
  return nullsub_1(*a1);
}

uint64_t sub_257518008@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_257512CD8(a1, a2);
}

uint64_t sub_257518040@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2575130C0(a1, *v2, (void (*)(void))sub_25750FA6C);
  *a2 = result;
  return result;
}

void sub_257518084()
{
  float v1 = OUTLINED_FUNCTION_25_12();
  *(float *)uint64_t v0 = sub_25751342C(v1, v2, (void (*)(void))sub_257509C24);
  *(_DWORD *)(v0 + 4) = v3;
}

void sub_2575180C4()
{
  float v1 = OUTLINED_FUNCTION_25_12();
  *(float *)uint64_t v0 = sub_25751342C(v1, v2, (void (*)(void))sub_257511AEC);
  *(_DWORD *)(v0 + 4) = v3;
}

uint64_t sub_25751810C()
{
  OUTLINED_FUNCTION_13_17();
  memcpy(v0, v1, 0x9CuLL);
  uint64_t v2 = OUTLINED_FUNCTION_35_6();
  return sub_257512E48(v2, v3);
}

uint64_t sub_257518150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257512AF8(a1, a2);
}

uint64_t sub_257518198()
{
  OUTLINED_FUNCTION_13_17();
  memcpy(v0, v1, 0x50uLL);
  uint64_t v2 = OUTLINED_FUNCTION_35_6();
  return sub_257512B48(v2, v3);
}

uint64_t sub_2575181DC()
{
  OUTLINED_FUNCTION_0_9();
  return sub_257512A50(v0, v1);
}

uint64_t sub_257518218()
{
  OUTLINED_FUNCTION_13_17();
  memcpy(v0, v1, 0x60uLL);
  uint64_t v2 = OUTLINED_FUNCTION_35_6();
  return sub_257512F80(v2, v3);
}

uint64_t sub_25751825C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_257512AA8(a1, a2);
}

uint64_t type metadata accessor for ParametrizedLayers()
{
  return self;
}

uint64_t sub_2575182BC()
{
  return OUTLINED_FUNCTION_1_37(v0, 17);
}

BOOL sub_2575182C8(uint64_t a1, uint64_t a2)
{
  return sub_2575143B8(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_2575182D0()
{
  return OUTLINED_FUNCTION_1_37(v0, 17);
}

uint64_t sub_2575182DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_0_10();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = v7 + *(void *)(v5 + 64);
  uint64_t v9 = v6 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v7, v1);
  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_25751837C@<X0>(uint64_t a1@<X8>)
{
  return sub_2575151D8(a1);
}

uint64_t sub_2575183C0()
{
  return OUTLINED_FUNCTION_1_37(v0, 17);
}

BOOL sub_2575183CC(uint64_t a1, uint64_t a2)
{
  return sub_257515754(a1, a2, *(unsigned char *)(v2 + 16));
}

uint64_t sub_2575183EC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_257518424@<X0>(void *a1@<X8>)
{
  return sub_2575154E8(a1);
}

uint64_t sub_257518434()
{
  return OUTLINED_FUNCTION_1_37(v0, 17);
}

uint64_t sub_257518440@<X0>(uint64_t *a1@<X8>)
{
  return sub_2575157D4(a1);
}

uint64_t dispatch thunk of Layer.isEveryParameterInitialized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Layer.initializeParameters(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of Layer.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LearningPhaseSensitive.learningPhase.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_2575184C8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LayerPropertiesCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257518524(uint64_t a1)
{
  return a1;
}

uint64_t sub_25751857C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2575185F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v2);
  sub_2576A7810();
  return a1;
}

uint64_t sub_2575186A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25747A4E0(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25751874C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2575187A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518818(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518850(uint64_t a1)
{
  return a1;
}

uint64_t sub_2575188FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v3);
  sub_2576A7810();
  return a1;
}

uint64_t sub_2575189DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 168);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25747A4E0(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_257518AC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518AEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518B18(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518B44(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518B70(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518B9C()
{
  return OUTLINED_FUNCTION_1_37(v0, 24);
}

uint64_t sub_257518BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2576A8620();
  *a1 = result;
  return result;
}

uint64_t sub_257518BD4()
{
  return 32;
}

__n128 sub_257518BE0(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_257518BEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518C38()
{
  return OUTLINED_FUNCTION_1_37(v0, 24);
}

uint64_t sub_257518C44(uint64_t a1, uint64_t a2)
{
  return sub_2575179CC(a1, a2, *(unsigned char *)(v2 + 16), *(_DWORD *)(v2 + 20)) & 1;
}

uint64_t sub_257518C68(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518CB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v2);
  sub_2576A7810();
  return a1;
}

uint64_t sub_257518D34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 144);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25747A4E0(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_257518DB4(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518E00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_25747A4D0(v2);
  sub_2576A7810();
  return a1;
}

uint64_t sub_257518E80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25747A4E0(v2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_257518F00(uint64_t a1)
{
  return a1;
}

uint64_t sub_257518F4C()
{
  return OUTLINED_FUNCTION_1_37(v0, 32);
}

uint64_t sub_257518F58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0030F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_257518FB8()
{
  return OUTLINED_FUNCTION_1_37(v0, 32);
}

BOOL sub_257518FC4(uint64_t a1, uint64_t a2)
{
  return sub_257514D24(a1, a2, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_257518FE8()
{
  return OUTLINED_FUNCTION_1_37(v0, 40);
}

uint64_t sub_257518FF4(uint64_t a1, void *a2)
{
  return sub_2575E7D68(a1, *(void *)(v2 + 32), *(void (**)(char *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), (uint64_t)&type metadata for Parameter, MEMORY[0x263F8D4F8], *(void *)(v2 + 24), (uint64_t)&protocol witness table for Parameter, a2);
}

uint64_t OUTLINED_FUNCTION_1_37(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA0238](a1, a2, 7);
}

uint64_t OUTLINED_FUNCTION_6_23()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_7_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  return sub_2576A89D0();
}

uint64_t OUTLINED_FUNCTION_17_15()
{
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_16()
{
  return dynamic_cast_existential_1_conditional(v0);
}

__n128 OUTLINED_FUNCTION_22_15()
{
  return v0[2];
}

void *OUTLINED_FUNCTION_23_13(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char __dst)
{
  return memcpy(&__dst, v10, 0x58uLL);
}

void *OUTLINED_FUNCTION_24_12(void *result)
{
  result[2] = v2;
  result[3] = v1;
  uint64_t v4 = *(void *)(v3 - 96);
  result[4] = *(void *)(v3 - 104);
  result[5] = v4;
  return result;
}

float OUTLINED_FUNCTION_25_12()
{
  return *(float *)v0;
}

float OUTLINED_FUNCTION_27_10()
{
  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_35_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_36_6()
{
  *(void *)(v1 - 96) = v0;
  return *(void *)(v1 - 144);
}

uint64_t OUTLINED_FUNCTION_38_5()
{
  return swift_dynamicCastClass();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return dynamic_cast_existential_1_conditional(v0);
}

uint64_t OUTLINED_FUNCTION_45_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_51_4()
{
  return swift_release();
}

void sub_257519360()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v11 = OUTLINED_FUNCTION_11_20(v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = OUTLINED_FUNCTION_1_38(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_4_26(v13, v14, v15, v16, v17, v18, v19, v20, v24);
  if (!v0) {
    goto LABEL_13;
  }
  uint64_t v21 = sub_2576A7810() + 64;
  while (*(unsigned char *)(v21 - 32) != 1)
  {
    v21 += 48;
    if (!--v0) {
      goto LABEL_12;
    }
  }
  OUTLINED_FUNCTION_19_16();
  if (!v1)
  {
    sub_2576A7810();
LABEL_11:
    swift_bridgeObjectRelease();
    sub_2576A8730();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_16(0xD000000000000024);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_16();
    sub_2576A7B00();
    sub_25747C394();
    swift_allocError();
    *uint64_t v23 = 0;
    v23[1] = 0xE000000000000000;
    swift_willThrow();
    goto LABEL_13;
  }
  sub_2576A7810();
  sub_2576A7810();
  sub_25747588C(v3, v2);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_18();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
LABEL_13:
  OUTLINED_FUNCTION_7_1();
}

void sub_2575195B4()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v45 = *MEMORY[0x263EF8340];
  uint64_t v3 = *v2;
  uint64_t v4 = type metadata accessor for MILBlobStorageWriter(0);
  uint64_t v5 = *(int *)(v4 + 20);
  int v6 = *(_DWORD *)(v0 + v5);
  BOOL v7 = __CFADD__(v6, 1);
  int v8 = v6 + 1;
  if (v7)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v9 = (int *)v4;
  *(_DWORD *)(v0 + v5) = v8;
  uint64_t v10 = *(void **)(v0 + *(int *)(type metadata accessor for MILBlobStorageWriter.BlobWriter(0) + 20));
  uint64_t v11 = (uint64_t *)(v0 + v9[8]);
  uint64_t v12 = *(void *)(v0 + v9[6]);
  uint64_t v13 = *(void *)(*v11 + 16);
  if (v13)
  {
    uint64_t v14 = *(void *)(v0 + v9[7]);
    uint64_t v15 = (uint64_t *)(*v11 + 40);
    while (1)
    {
      uint64_t v16 = v12 + v14;
      if (__CFADD__(v12, v14)) {
        break;
      }
      uint64_t v18 = *v15;
      v15 += 8;
      uint64_t v17 = v18;
      uint64_t v19 = v18 & 0x3F;
      if ((v18 & 0x3F) != 0)
      {
        uint64_t v20 = 64 - v19;
        BOOL v7 = __CFADD__(v17, v20);
        v17 += v20;
        if (v7) {
          goto LABEL_33;
        }
      }
      uint64_t v12 = v16 + v17;
      if (__CFADD__(v16, v17)) {
        goto LABEL_32;
      }
      if (!--v13) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)(v0 + v9[7]);
LABEL_11:
  uint64_t v21 = v12 + v14;
  if (__CFADD__(v12, v14)) {
    goto LABEL_35;
  }
  id v43 = v3;
  id v22 = v10;
  swift_retain();
  sub_25751A1E0((uint64_t *)&v43, v21, (uint64_t)v42);
  if (v1) {
    goto LABEL_19;
  }
  id v43 = 0;
  if ((objc_msgSend(v22, sel_seekToOffset_error_, v12, &v43) & 1) == 0)
  {
    id v27 = v43;
    sub_2576A7030();

LABEL_18:
    swift_willThrow();
LABEL_19:

    goto LABEL_20;
  }
  id v23 = v43;
  sub_25751A3F8((uint64_t)v42, v22);
  id v43 = 0;
  id v24 = objc_msgSend(v22, sel_seekToOffset_error_, v21, &v43);
  id v25 = v43;
  if ((v24 & 1) == 0)
  {
    id v28 = v43;
    sub_2576A7030();

    goto LABEL_18;
  }
  MEMORY[0x270FA5388](v24);
  id v26 = v25;
  swift_retain();
  sub_2574BC0F0();
  swift_release();
  unint64_t v29 = *((void *)&v42[0] + 1);
  if ((BYTE8(v42[0]) & 0x3F) != 0)
  {
    uint64_t v30 = 64 - (BYTE8(v42[0]) & 0x3F);
    BOOL v7 = __CFADD__(*((void *)&v42[0] + 1), v30);
    unint64_t v31 = *((void *)&v42[0] + 1) + v30;
    if (!v7) {
      goto LABEL_26;
    }
    __break(1u);
  }
  unint64_t v31 = v29;
LABEL_26:
  unint64_t v32 = v31 - v29;
  if (v31 < v29)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  if (v32)
  {
    if ((v32 & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    id v43 = (id)MEMORY[0x25A2B7770]();
    unint64_t v44 = v33;
    sub_25751A8E4(&v43, 0);
    uint64_t v34 = (uint64_t)v43;
    unint64_t v35 = v44;
    unint64_t v36 = (void *)sub_2576A7150();
    sub_25747F154(v34, v35);
    objc_msgSend(v22, sel_writeData_, v36);
  }
  sub_257471430();
  uint64_t v37 = *(void *)(*v11 + 16);
  sub_2574719A0();
  uint64_t v38 = *v11;
  *(void *)(v38 + 16) = v37 + 1;
  char v39 = (_OWORD *)(v38 + (v37 << 6));
  long long v40 = v42[1];
  v39[2] = v42[0];
  v39[3] = v40;
  long long v41 = v42[3];
  uint64_t v39[4] = v42[2];
  v39[5] = v41;

  *uint64_t v11 = v38;
LABEL_20:
  OUTLINED_FUNCTION_7_1();
}

void sub_2575198F8()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v11 = OUTLINED_FUNCTION_11_20(v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = OUTLINED_FUNCTION_1_38(v11);
  MEMORY[0x270FA5388](v12);
  OUTLINED_FUNCTION_4_26(v13, v14, v15, v16, v17, v18, v19, v20, v24);
  if (!v0) {
    goto LABEL_13;
  }
  uint64_t v21 = sub_2576A7810() + 64;
  while (*(unsigned char *)(v21 - 32) != 2)
  {
    v21 += 48;
    if (!--v0) {
      goto LABEL_12;
    }
  }
  OUTLINED_FUNCTION_19_16();
  if (!v1)
  {
    sub_2576A7810();
LABEL_11:
    swift_bridgeObjectRelease();
    sub_2576A8730();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_16(0xD000000000000020);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_16();
    sub_2576A7B00();
    sub_25747C394();
    swift_allocError();
    *id v23 = 0;
    v23[1] = 0xE000000000000000;
    swift_willThrow();
    goto LABEL_13;
  }
  sub_2576A7810();
  sub_2576A7810();
  sub_25747588C(v3, v2);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_16_18();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRelease();
LABEL_13:
  OUTLINED_FUNCTION_7_1();
}

void sub_257519B4C()
{
  OUTLINED_FUNCTION_9_1();
  v19[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v0 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_defaultManager);
  sub_2576A70B0();
  uint64_t v9 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  unsigned __int8 v10 = objc_msgSend(v8, sel_fileExistsAtPath_, v9);

  if ((v10 & 1) == 0)
  {
    id v11 = objc_msgSend(v7, sel_defaultManager);
    sub_2576A7090();
    uint64_t v12 = (void *)sub_2576A7080();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
    v19[0] = 0;
    unsigned int v13 = objc_msgSend(v11, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v12, 1, 0, v19);

    id v14 = v19[0];
    if (v13)
    {
      id v15 = objc_msgSend(v7, sel_defaultManager);
      sub_2576A70B0();
      uint64_t v16 = (void *)sub_2576A79C0();
      swift_bridgeObjectRelease();
      type metadata accessor for FileAttributeKey(0);
      sub_25751AC48();
      uint64_t v17 = sub_2576A77E0();
      sub_25751AC98((uint64_t)v16, 0, v17, v15);
    }
    else
    {
      uint64_t v18 = v14;
      sub_2576A7030();

      swift_willThrow();
    }
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_257519D8C()
{
}

void sub_257519DEC()
{
}

void sub_257519E4C()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v34 = v1;
  unint64_t v35 = v2;
  uint64_t v4 = v3;
  uint64_t v37 = v6;
  uint64_t v38 = v5;
  uint64_t v36 = v7;
  uint64_t v39 = v8;
  uint64_t v10 = v9;
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v11 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_8_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_2576A70E0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_8_0();
  uint64_t v21 = v20 - v19;
  sub_25747EE14();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v21, v10, v15);
  id v22 = sub_25747D464(v21);
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v23 = v22;
    sub_25747EE54(v10, v14);
    *(void *)(v14 + *(int *)(v11 + 20)) = v23;
    id v24 = v23;
    v35(v14, v39, v36, v38, v37, v4, v34);
    uint64_t v25 = type metadata accessor for MILBlobStorageWriter(0);
    uint64_t v26 = *(int *)(v25 + 20);
    uint64_t v27 = *(void *)(v14 + v26 + 56);
    uint64_t v28 = v10 + v26;
    *(void *)uint64_t v28 = *(void *)(v14 + v26);
    *(_OWORD *)(v28 + 8) = *(_OWORD *)(v14 + v26 + 8);
    *(_OWORD *)(v28 + 24) = *(_OWORD *)(v14 + v26 + 24);
    *(_OWORD *)(v28 + 40) = *(_OWORD *)(v14 + v26 + 40);
    *(void *)(v28 + 56) = v27;
    *(void *)(v10 + *(int *)(v25 + 32)) = *(void *)(v14 + *(int *)(v25 + 32));
    sub_2576A7810();
    swift_bridgeObjectRelease();
    id v40 = 0;
    if ((objc_msgSend(v24, sel_seekToOffset_error_, 0, &v40) & 1) == 0) {
      goto LABEL_6;
    }
    long long v29 = *(_OWORD *)(v28 + 16);
    v41[0] = *(_OWORD *)v28;
    v41[1] = v29;
    long long v30 = *(_OWORD *)(v28 + 48);
    v41[2] = *(_OWORD *)(v28 + 32);
    v41[3] = v30;
    id v31 = v40;
    sub_25751A3F8((uint64_t)v41, v24);
    id v40 = 0;
    if (objc_msgSend(v24, sel_closeAndReturnError_, &v40))
    {
      id v32 = v40;
      sub_25751AD34(v14);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
LABEL_6:
      id v33 = v40;
      sub_2576A7030();

      swift_willThrow();
      sub_25751AD34(v14);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  swift_release();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25751A1E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  Tensor.scalarType.getter();
  char v6 = sub_25751A5AC();
  if (v6 == 4)
  {
    sub_2576A8730();
    swift_bridgeObjectRelease();
    Tensor.scalarType.getter();
    swift_release();
    sub_2576A92D0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_25751ABFC();
    swift_allocError();
    *uint64_t v7 = 0xD000000000000026;
    v7[1] = 0x80000002576C9140;
    return swift_willThrow();
  }
  char v9 = v6;
  uint64_t v10 = *(void *)(*(void *)(v5 + 16) + 152);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 32);
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = v13 * v14;
      if ((unsigned __int128)(v13 * (__int128)v14) >> 64 != (v13 * v14) >> 63) {
        break;
      }
      uint64_t v13 = v15;
      if (!--v11) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v15 = 1;
LABEL_9:
  uint64_t v16 = Tensor.scalarType.getter();
  uint64_t v18 = v17;
  swift_release();
  uint64_t result = sub_25767553C((uint64_t)v16, v18);
  uint64_t v19 = v15 * result;
  if ((unsigned __int128)(v15 * (__int128)result) >> 64 != (v15 * result) >> 63) {
    goto LABEL_13;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    *(_DWORD *)a3 = -559038737;
    *(_DWORD *)(a3 + 4) = (v9 + 1);
    *(void *)(a3 + 8) = v19;
    *(void *)(a3 + 16) = a2;
    *(_OWORD *)(a3 + 24) = 0u;
    *(_OWORD *)(a3 + 40) = 0u;
    *(void *)(a3 + 56) = 0;
    return result;
  }
LABEL_14:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25751A3F8(uint64_t a1, void *a2)
{
  sub_2576A6FF0();
  swift_allocObject();
  uint64_t v12 = 0x4000000000;
  uint64_t v13 = sub_2576A6FC0();
  sub_25751AAD8((int *)&v12, 0);
  v13 |= 0x4000000000000000uLL;
  sub_25751A668(&v12, a1);
  uint64_t v4 = OUTLINED_FUNCTION_24_13();
  sub_2574ADB28(v4, v5);
  OUTLINED_FUNCTION_24_13();
  char v6 = (void *)sub_2576A7150();
  uint64_t v7 = OUTLINED_FUNCTION_24_13();
  sub_25747F154(v7, v8);
  objc_msgSend(a2, sel_writeData_, v6);

  uint64_t v9 = OUTLINED_FUNCTION_24_13();
  return sub_25747F154(v9, v10);
}

uint64_t sub_25751A4D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    uint64_t v3 = *(void *)(*(void *)(a3 + 16) + 152);
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      unint64_t v5 = (uint64_t *)(v3 + 32);
      uint64_t v6 = 1;
      while (1)
      {
        uint64_t v7 = *v5++;
        uint64_t v8 = v6 * v7;
        if ((unsigned __int128)(v6 * (__int128)v7) >> 64 != (v6 * v7) >> 63) {
          break;
        }
        uint64_t v6 = v8;
        if (!--v4) {
          goto LABEL_8;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v8 = 1;
LABEL_8:
      uint64_t v9 = Tensor.scalarType.getter();
      uint64_t result = sub_25767553C((uint64_t)v9, v10);
      if ((unsigned __int128)(v8 * (__int128)result) >> 64 == (v8 * result) >> 63)
      {
        sub_2574DB6C0();
        return sub_2576A8310();
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25751A5AC()
{
  if (swift_dynamicCastMetatype()) {
    return 0;
  }
  if (swift_dynamicCastMetatype()) {
    return 1;
  }
  if (swift_dynamicCastMetatype()) {
    return 2;
  }
  if (swift_dynamicCastMetatype()) {
    return 3;
  }
  return 4;
}

uint64_t sub_25751A638()
{
  uint64_t v1 = *v0;
  sub_2576A7810();
  return v1;
}

uint64_t *sub_25751A668(uint64_t *result, uint64_t a2)
{
  uint64_t v3 = *result;
  unint64_t v2 = result[1];
  unint64_t v5 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v7 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t result = xmmword_2576B2EB0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = v3 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_10;
      }
      if (v9 < (int)v3) {
        goto LABEL_15;
      }
      if (sub_2576A6FB0() && __OFSUB__((int)v3, sub_2576A6FE0())) {
        goto LABEL_16;
      }
      sub_2576A6FF0();
      swift_allocObject();
      uint64_t v11 = sub_2576A6FA0();
      swift_release();
      uint64_t v7 = v11;
      uint64_t v9 = v3 >> 32;
LABEL_10:
      if (v9 < (int)v3)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      uint64_t result = (uint64_t *)sub_25751A86C((int)v3, v9, v7, (_OWORD *)a2);
      unint64_t v10 = v7 | 0x4000000000000000;
      *unint64_t v5 = v3;
LABEL_12:
      v5[1] = v10;
      return result;
    case 2uLL:
      uint64_t v12 = *result;
      uint64_t v13 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2576A70F0();
      uint64_t result = (uint64_t *)sub_25751A86C(*(void *)(v12 + 16), *(void *)(v12 + 24), v13, (_OWORD *)a2);
      unint64_t v10 = v13 | 0x8000000000000000;
      *unint64_t v5 = v12;
      goto LABEL_12;
    case 3uLL:
      return result;
    default:
      unint64_t v6 = *(unsigned int *)(a2 + 8) | ((unint64_t)*(unsigned __int8 *)(a2 + 12) << 32) | ((unint64_t)*(unsigned __int8 *)(a2 + 13) << 40) | ((unint64_t)*(unsigned __int8 *)(a2 + 14) << 48);
      *uint64_t result = *(void *)a2;
      result[1] = v6;
      return result;
  }
}

uint64_t sub_25751A86C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  uint64_t result = sub_2576A6FB0();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t result = sub_2576A6FE0();
    if (!__OFSUB__(a1, result))
    {
      uint64_t v8 = (_OWORD *)(v7 + a1 - result);
      uint64_t result = sub_2576A6FD0();
      long long v9 = a4[1];
      _OWORD *v8 = *a4;
      v8[1] = v9;
      long long v10 = a4[3];
      v8[2] = a4[2];
      v8[3] = v10;
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_25751A8E4(void *result, int __c)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  unint64_t v2 = result[1];
  uint64_t v4 = result;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t result = sub_25751AAD8((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *result;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_2576A70F0();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_2576A6FB0();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x25751AAC8);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_2576A6FE0();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_2576A6FD0();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      uint64_t result = memset((void *)(v11 + v13), __c, v17);
      void *v4 = __b;
      v4[1] = v7 | 0x8000000000000000;
      return result;
    case 3uLL:
      return result;
    default:
      uint64_t __b = *result;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      uint64_t result = memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      void *v4 = v5;
      v4[1] = v6;
      return result;
  }
}

char *sub_25751AAD8(int *a1, int a2)
{
  uint64_t result = (char *)sub_2576A7120();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = (char *)sub_2576A6FB0();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t result = (char *)sub_2576A6FE0();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_2576A6FD0();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }
  return (char *)memset(&v7[v8], a2, v11);
}

uint64_t type metadata accessor for MILBlobStorageWriter(uint64_t a1)
{
  return sub_25751ABAC(a1, (uint64_t *)&unk_26A003110);
}

uint64_t type metadata accessor for MILBlobStorageWriter.BlobWriter(uint64_t a1)
{
  return sub_25751ABAC(a1, (uint64_t *)&unk_26A003100);
}

uint64_t sub_25751ABAC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25751ABE0(uint64_t a1, uint64_t a2)
{
  return sub_25751A4D0(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_25751ABFC()
{
  unint64_t result = qword_26A0030F8;
  if (!qword_26A0030F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0030F8);
  }
  return result;
}

unint64_t sub_25751AC48()
{
  unint64_t result = qword_26A000C60;
  if (!qword_26A000C60)
  {
    type metadata accessor for FileAttributeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A000C60);
  }
  return result;
}

id sub_25751AC98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  type metadata accessor for FileAttributeKey(0);
  sub_25751AC48();
  uint64_t v7 = (void *)sub_2576A7790();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a4, sel_createFileAtPath_contents_attributes_, a1, a2, v7);

  return v8;
}

uint64_t sub_25751AD34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MILBlobStorageWriter.BlobWriter(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for MILBlobStorageWriterError()
{
}

uint64_t sub_25751AD9C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25751ADBC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

void type metadata accessor for MILBlobStorageWriter.BlobMetadata()
{
}

uint64_t *sub_25751AE04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2576A70E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    id v8 = (int *)type metadata accessor for MILBlobStorageWriter(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (_OWORD *)((char *)a1 + v9);
    size_t v11 = (_OWORD *)((char *)a2 + v9);
    long long v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    long long v13 = v11[3];
    void v10[2] = v11[2];
    v10[3] = v13;
    *(uint64_t *)((char *)a1 + v8[6]) = *(uint64_t *)((char *)a2 + v8[6]);
    *(uint64_t *)((char *)a1 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    *(uint64_t *)((char *)a1 + v8[8]) = *(uint64_t *)((char *)a2 + v8[8]);
    uint64_t v14 = *(int *)(a3 + 20);
    int64_t v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
    sub_2576A7810();
    id v16 = v15;
  }
  return a1;
}

void sub_25751AF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for MILBlobStorageWriter(0);
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_25751AFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = *(void **)(a2 + v13);
  *(void *)(a1 + v13) = v14;
  sub_2576A7810();
  id v15 = v14;
  return a1;
}

uint64_t sub_25751B074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_DWORD *)(v9 + 4) = *(_DWORD *)(v10 + 4);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(void *)(v9 + 48) = *(void *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 20);
  long long v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_25751B18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25751B250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
  *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 20);
  long long v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  return a1;
}

uint64_t sub_25751B33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25751B350);
}

uint64_t sub_25751B350()
{
  uint64_t v3 = OUTLINED_FUNCTION_21_16();
  type metadata accessor for MILBlobStorageWriter(v3);
  OUTLINED_FUNCTION_0_34();
  if (*(_DWORD *)(v5 + 84) != v1) {
    return OUTLINED_FUNCTION_14_20(*(int *)(v2 + 20));
  }
  return __swift_getEnumTagSinglePayload(v0, v1, v4);
}

uint64_t sub_25751B3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25751B3D4);
}

void sub_25751B3D4()
{
  uint64_t v4 = OUTLINED_FUNCTION_13_18();
  type metadata accessor for MILBlobStorageWriter(v4);
  OUTLINED_FUNCTION_0_34();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = OUTLINED_FUNCTION_23_14();
    __swift_storeEnumTagSinglePayload(v6, v7, v8, v9);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_25751B440()
{
  uint64_t result = type metadata accessor for MILBlobStorageWriter(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25751B4D8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_2576A70E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (_OWORD *)((char *)a1 + v8);
    uint64_t v11 = (_OWORD *)((char *)a2 + v8);
    long long v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    long long v13 = v11[3];
    void v10[2] = v11[2];
    v10[3] = v13;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v14 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    sub_2576A7810();
  }
  return a1;
}

uint64_t sub_25751B5D4(uint64_t a1)
{
  uint64_t v2 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_25751B648(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  sub_2576A7810();
  return a1;
}

uint64_t sub_25751B6F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_DWORD *)(v8 + 4) = *(_DWORD *)(v9 + 4);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25751B7EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = v10[3];
  v9[2] = v10[2];
  v9[3] = v12;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_25751B894(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  long long v11 = *(_OWORD *)(v10 + 40);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(_OWORD *)(v9 + 40) = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25751B95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25751B970);
}

uint64_t sub_25751B970()
{
  OUTLINED_FUNCTION_21_16();
  sub_2576A70E0();
  OUTLINED_FUNCTION_0_34();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return OUTLINED_FUNCTION_14_20(*(int *)(v2 + 32));
  }
  return __swift_getEnumTagSinglePayload(v0, v1, v3);
}

uint64_t sub_25751B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25751B9F4);
}

void sub_25751B9F4()
{
  OUTLINED_FUNCTION_13_18();
  sub_2576A70E0();
  OUTLINED_FUNCTION_0_34();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_23_14();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 32)) = (v0 - 1);
  }
}

uint64_t sub_25751BA60()
{
  uint64_t result = sub_2576A70E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for MILBlobStorageWriter.Header()
{
}

uint64_t OUTLINED_FUNCTION_1_38(uint64_t result)
{
  *(void *)(v1 - 192) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_26()
{
  *(void *)(v1 - 168) = v0;
  return *(void *)(v1 - 200);
}

uint64_t OUTLINED_FUNCTION_4_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v11 - 200) = (char *)&a9 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  return *(void *)(v10 + 16);
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  *(void *)(v2 - 160) = v0;
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v2 - 176) = v1;
  *(void *)(v2 - 144) = *(void *)(v4 + 152);
  *(unsigned char *)(v2 - 68) = *(unsigned char *)(v4 + 160);
  return type metadata accessor for DataSourceTensorStorage();
}

uint64_t OUTLINED_FUNCTION_8_24(uint64_t a1)
{
  *(unsigned char *)(v2 - 68) = 1;
  return sub_2575A9688(a1, v2 - 144, 0x100000000, v1);
}

uint64_t OUTLINED_FUNCTION_9_25()
{
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_DWORD *)(v0 - 96) = 0;
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return sub_257523908(v1, v0, (uint64_t *)(v2 - 144), (char *)(v2 - 68));
}

uint64_t OUTLINED_FUNCTION_11_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 - 184) = a7;
  *(void *)(v7 - 152) = a1;
  return sub_2576A70E0();
}

uint64_t OUTLINED_FUNCTION_12_19(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_20@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + a1);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

void OUTLINED_FUNCTION_16_18()
{
  *(void *)(v1 - 144) = v0;
  sub_2575195B4();
}

uint64_t OUTLINED_FUNCTION_17_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14 = *(void *)(v12 - 176);
  return sub_2575CDD78(v10, v14, v11, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_18_16()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_19_16()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_21_16()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_16@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 144) = a1;
  *(void *)(v2 - 136) = (v1 - 32) | 0x8000000000000000;
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_23_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  return v0;
}

uint64_t sub_25751BDA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_25746B3D0(a1, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
  if (OUTLINED_FUNCTION_6_24())
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v4 = v7;
    char v5 = 1;
  }
  else if (OUTLINED_FUNCTION_6_24())
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v4 = (unsigned __int16)v7;
    char v5 = 2;
  }
  else if (OUTLINED_FUNCTION_6_24())
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    uint64_t v4 = v7;
    char v5 = 3;
  }
  else
  {
    if (!OUTLINED_FUNCTION_6_24())
    {
      sub_2576A8730();
      sub_2576A7B00();
      sub_2576A8A30();
      sub_2576A7B00();
      sub_25746BE6C();
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
    char v5 = 0;
    uint64_t v4 = v7;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

void *sub_25751BF38@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, unsigned int a3@<S0>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(a1 + 32))(&v48);
  uint64_t v7 = MEMORY[0x263F8E548];
  switch((char)v48)
  {
    case 1:
    case 2:
    case 3:
      if (OUTLINED_FUNCTION_5_24((uint64_t)&protocol witness table for Float) == v7)
      {
        OUTLINED_FUNCTION_12_20();
        uint64_t v10 = &qword_26A001878;
        goto LABEL_17;
      }
      OUTLINED_FUNCTION_12_20();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
      if (OUTLINED_FUNCTION_0_35()) {
        goto LABEL_4;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003128);
      if (OUTLINED_FUNCTION_0_35())
      {
        OUTLINED_FUNCTION_8_25();
        int v9 = sub_2576A85C0();
LABEL_15:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        char v8 = 0;
        goto LABEL_16;
      }
      if (OUTLINED_FUNCTION_1_39())
      {
        *(short float *)&float v17 = truncl(*(short float *)v42);
        sub_257581C60((uint64_t)v43, v17);
        if (BYTE4(v43[0]))
        {
LABEL_23:
          OUTLINED_FUNCTION_4_27();
          OUTLINED_FUNCTION_7_22();
LABEL_41:
          sub_2576A7B00();
          OUTLINED_FUNCTION_11_21();
          OUTLINED_FUNCTION_17_17();
          sub_2576A7B00();
LABEL_42:
          sub_2576A8B60();
          __break(1u);
LABEL_43:
          if (OUTLINED_FUNCTION_0_35())
          {
            char v11 = 0;
            short float v12 = (short float)LOBYTE(v43[0]);
          }
          else
          {
            LOWORD(v12) = 0;
            char v11 = 1;
          }
LABEL_68:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
          *(short float *)&int v44 = v12;
          BYTE2(v44) = v11;
          uint64_t v18 = (uint64_t *)&unk_26A003150;
LABEL_69:
          __swift_instantiateConcreteTypeFromMangledName(v18);
          int v40 = OUTLINED_FUNCTION_14_21();
          if ((v40 & 1) == 0) {
            LOWORD(v43[0]) = 0;
          }
          uint64_t v14 = LOWORD(v43[0]);
          uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
          if (v40)
          {
            char v15 = 2;
            goto LABEL_73;
          }
          goto LABEL_83;
        }
      }
      else if (OUTLINED_FUNCTION_1_39())
      {
        sub_257581B14((uint64_t)v43, truncf(*(float *)v42));
        if (BYTE4(v43[0])) {
          goto LABEL_23;
        }
      }
      else
      {
        if ((OUTLINED_FUNCTION_1_39() & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A003130);
          if ((OUTLINED_FUNCTION_0_35() & 1) == 0)
          {
            if (OUTLINED_FUNCTION_0_35())
            {
              char v8 = 0;
              int v9 = LOBYTE(v43[0]);
            }
            else
            {
              int v9 = 0;
              char v8 = 1;
            }
            goto LABEL_16;
          }
          OUTLINED_FUNCTION_9_26();
          OUTLINED_FUNCTION_0_10();
          uint64_t v32 = v31;
          MEMORY[0x270FA5388](v33);
          OUTLINED_FUNCTION_37_2();
          (*(void (**)(uint64_t))(v32 + 16))(v3);
          sub_25751CEEC();
          sub_2576A8AB0();
          if ((v41[0] & 0x100000000) == 0)
          {
            (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v3, v7);
            int v9 = v41[0];
            goto LABEL_15;
          }
          v41[0] = 0;
          v41[1] = 0xE000000000000000;
          sub_2576A8730();
          sub_2576A92D0();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_11_21();
          OUTLINED_FUNCTION_17_17();
          sub_2576A7B00();
          goto LABEL_42;
        }
        sub_257581970((uint64_t)v43, trunc(v42[0]));
        if (BYTE4(v43[0]))
        {
          OUTLINED_FUNCTION_4_27();
          goto LABEL_41;
        }
      }
LABEL_4:
      char v8 = 0;
      int v9 = v43[0];
LABEL_16:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
      int v44 = v9;
      char v45 = v8;
      uint64_t v10 = (uint64_t *)&unk_26A003138;
LABEL_17:
      __swift_instantiateConcreteTypeFromMangledName(v10);
      char v16 = OUTLINED_FUNCTION_14_21();
      if ((v16 & 1) == 0) {
        LODWORD(v43[0]) = 0;
      }
      uint64_t v14 = SLODWORD(v43[0]);
      uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      if ((v16 & 1) == 0) {
        goto LABEL_83;
      }
      char v15 = 1;
LABEL_73:
      *(void *)a2 = v14;
      *(void *)(a2 + 8) = 0;
      *(unsigned char *)(a2 + 16) = v15;
      return result;
    case 8:
      if (OUTLINED_FUNCTION_5_24((uint64_t)&protocol witness table for Float) == MEMORY[0x263F8E9F8])
      {
        OUTLINED_FUNCTION_12_20();
        uint64_t v18 = &qword_26A001878;
        goto LABEL_69;
      }
      OUTLINED_FUNCTION_12_20();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
      if (OUTLINED_FUNCTION_0_35())
      {
        char v11 = 0;
        short float v12 = *(short float *)v43;
        goto LABEL_68;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003130);
      if (OUTLINED_FUNCTION_0_35())
      {
        sub_257479260(v43, (uint64_t)v42);
        __swift_project_boxed_opaque_existential_1(v42, *(uint64_t *)&v42[3]);
        OUTLINED_FUNCTION_0_10();
        MEMORY[0x270FA5388](v20);
        OUTLINED_FUNCTION_37_2();
        (*(void (**)(uint64_t))(v21 + 16))(v3);
        sub_257586EFC();
        short float v12 = v22;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A003128);
        if (!OUTLINED_FUNCTION_0_35()) {
          goto LABEL_43;
        }
        OUTLINED_FUNCTION_8_25();
        OUTLINED_FUNCTION_0_10();
        uint64_t v24 = v23;
        __n128 v26 = MEMORY[0x270FA5388](v25);
        (*(void (**)(char *, __n128))(v24 + 16))((char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v26);
        if (sub_2576A85D0() <= 64)
        {
          char v34 = sub_2576A85E0();
          uint64_t v35 = sub_2576A85C0();
          uint64_t v36 = OUTLINED_FUNCTION_19_14();
          v37(v36);
          if (v34) {
            short float v12 = (short float)v35;
          }
          else {
            short float v12 = (short float)(unint64_t)v35;
          }
        }
        else
        {
          sub_25751CF38();
          sub_25751CF84();
          sub_2576A7770();
          uint64_t v28 = OUTLINED_FUNCTION_19_14();
          v29(v28);
          short float v12 = *(short float *)v41;
        }
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
      char v11 = 0;
      goto LABEL_68;
    case 10:
      uint64_t v14 = a3;
      char v15 = 3;
      goto LABEL_73;
    case 12:
      if (OUTLINED_FUNCTION_5_24((uint64_t)&protocol witness table for Float) == MEMORY[0x263F8D4F8])
      {
        OUTLINED_FUNCTION_12_20();
        uint64_t v19 = &qword_26A001878;
        goto LABEL_60;
      }
      OUTLINED_FUNCTION_12_20();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
      if (OUTLINED_FUNCTION_0_35())
      {
        char v13 = v43[0];
        goto LABEL_59;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A003130);
      if (OUTLINED_FUNCTION_0_35())
      {
        OUTLINED_FUNCTION_9_26();
        char v13 = (sub_2576A7880() & 1) == 0;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
        goto LABEL_59;
      }
      if (OUTLINED_FUNCTION_0_35()) {
        goto LABEL_37;
      }
      if (OUTLINED_FUNCTION_0_35()) {
        goto LABEL_46;
      }
      if (OUTLINED_FUNCTION_0_35()) {
        goto LABEL_54;
      }
      if (OUTLINED_FUNCTION_0_35() || OUTLINED_FUNCTION_0_35()) {
        goto LABEL_76;
      }
      if (OUTLINED_FUNCTION_0_35())
      {
LABEL_37:
        int v30 = LOBYTE(v43[0]);
      }
      else if (OUTLINED_FUNCTION_0_35())
      {
LABEL_46:
        int v30 = LOWORD(v43[0]);
      }
      else
      {
        if (!OUTLINED_FUNCTION_0_35())
        {
          if (!OUTLINED_FUNCTION_0_35())
          {
            char v13 = 2;
            goto LABEL_59;
          }
LABEL_76:
          BOOL v38 = *(void *)&v43[0] == 0;
LABEL_56:
          char v13 = !v38;
LABEL_59:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
          LOBYTE(v44) = v13;
          uint64_t v19 = (uint64_t *)&unk_26A003148;
LABEL_60:
          __swift_instantiateConcreteTypeFromMangledName(v19);
          if ((OUTLINED_FUNCTION_14_21() & 1) == 0) {
            LOBYTE(v43[0]) = 2;
          }
          int v39 = LOBYTE(v43[0]);
          uint64_t result = (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
          if (v39 != 2)
          {
            char v15 = 0;
            uint64_t v14 = v39 & 1;
            goto LABEL_73;
          }
LABEL_83:
          v46[0] = 0;
          v46[1] = 0xE000000000000000;
          sub_2576A8730();
          sub_2576A7B00();
          sub_2576A8040();
          sub_2576A7B00();
          sub_2576A92D0();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          char v47 = 9;
          sub_25746BE6C();
        }
LABEL_54:
        int v30 = v43[0];
      }
      BOOL v38 = v30 == 0;
      goto LABEL_56;
    default:
      goto LABEL_83;
  }
}

uint64_t sub_25751C980(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  int v7 = *((unsigned __int8 *)a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_30;
      }
      uint64_t v12 = OUTLINED_FUNCTION_10_17();
      uint64_t v14 = OUTLINED_FUNCTION_3_27(v12, v13, 1);
      char v16 = 1;
      goto LABEL_25;
    case 2:
      if (v7 != 2) {
        goto LABEL_30;
      }
      uint64_t v17 = OUTLINED_FUNCTION_10_17();
      uint64_t v19 = OUTLINED_FUNCTION_3_27(v17, v18, 2);
      sub_257476E0C(v19, v20, 2);
      BOOL v21 = *(short float *)&v2 == *(short float *)&v5;
      goto LABEL_26;
    case 3:
      if (v7 != 3) {
        goto LABEL_30;
      }
      uint64_t v22 = OUTLINED_FUNCTION_10_17();
      uint64_t v24 = OUTLINED_FUNCTION_3_27(v22, v23, 3);
      sub_257476E0C(v24, v25, 3);
      BOOL v21 = *(float *)&v2 == *(float *)&v5;
      goto LABEL_26;
    case 4:
      if (v7 != 4) {
        goto LABEL_29;
      }
      if (v2 == v5 && v3 == v6)
      {
        char v4 = 1;
      }
      else
      {
        OUTLINED_FUNCTION_10_17();
        char v4 = sub_2576A8F60();
      }
      sub_257476DB4(v5, v6, 4);
      sub_257476DB4(v2, v3, 4);
      uint64_t v29 = OUTLINED_FUNCTION_3_27(v2, v3, 4);
      char v31 = 4;
      goto LABEL_34;
    case 5:
      if (v7 != 5) {
        goto LABEL_29;
      }
      sub_257654B3C(*a1, *a2);
      uint64_t v27 = OUTLINED_FUNCTION_16_19();
      sub_257476DB4(v27, v28, 5);
      sub_257476DB4(v2, v3, 5);
      uint64_t v29 = OUTLINED_FUNCTION_3_27(v2, v3, 5);
      char v31 = 5;
      goto LABEL_34;
    case 6:
      if (v7 != 6) {
        goto LABEL_29;
      }
      sub_257654D3C(*a1, *a2);
      uint64_t v32 = OUTLINED_FUNCTION_16_19();
      sub_257476DB4(v32, v33, 6);
      sub_257476DB4(v2, v3, 6);
      uint64_t v29 = OUTLINED_FUNCTION_3_27(v2, v3, 6);
      char v31 = 6;
      goto LABEL_34;
    case 7:
      if (v7 != 7)
      {
LABEL_29:
        sub_2576A7810();
        goto LABEL_30;
      }
      sub_257654B3C(*a1, *a2);
      uint64_t v34 = OUTLINED_FUNCTION_16_19();
      sub_257476DB4(v34, v35, 7);
      sub_257476DB4(v2, v3, 7);
      uint64_t v29 = OUTLINED_FUNCTION_3_27(v2, v3, 7);
      char v31 = 7;
LABEL_34:
      sub_257476E0C(v29, v30, v31);
      break;
    case 8:
      if (v7 == 8)
      {
        sub_257476DB4(*a2, a2[1], 8);
        sub_257476DB4(v2, v3, 8);
        uint64_t v14 = OUTLINED_FUNCTION_3_27(v2, v3, 8);
        char v16 = 8;
LABEL_25:
        sub_257476E0C(v14, v15, v16);
        BOOL v21 = v2 == v5;
LABEL_26:
        char v4 = v21;
      }
      else
      {
        swift_unknownObjectRetain();
LABEL_30:
        sub_257476DB4(v5, v6, v7);
        uint64_t v36 = OUTLINED_FUNCTION_10_17();
        uint64_t v38 = OUTLINED_FUNCTION_3_27(v36, v37, v4);
        sub_257476E0C(v38, v39, v7);
        char v4 = 0;
      }
      break;
    default:
      if (*((unsigned char *)a2 + 16)) {
        goto LABEL_30;
      }
      uint64_t v8 = OUTLINED_FUNCTION_10_17();
      uint64_t v10 = OUTLINED_FUNCTION_3_27(v8, v9, 0);
      sub_257476E0C(v10, v11, 0);
      char v4 = ((v2 & 1) == 0) ^ v5;
      return v4 & 1;
  }
  return v4 & 1;
}

uint64_t sub_25751CC84()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 16))
  {
    case 1:
    case 8:
      uint64_t result = sub_2576A90A0();
      break;
    case 2:
      uint64_t result = sub_2576A90C0();
      break;
    case 3:
      uint64_t result = sub_2576A90D0();
      break;
    case 4:
      uint64_t result = sub_2576A78E0();
      break;
    case 5:
      uint64_t v3 = *(void *)(v1 + 16);
      uint64_t result = sub_2576A90A0();
      if (v3)
      {
        uint64_t v4 = v1 + 32;
        do
        {
          v4 += 8;
          uint64_t result = sub_2576A90A0();
          --v3;
        }
        while (v3);
      }
      break;
    case 6:
      uint64_t v5 = *(void *)(v1 + 16);
      uint64_t result = sub_2576A90A0();
      if (v5)
      {
        uint64_t v6 = v1 + 32;
        do
        {
          v6 += 4;
          uint64_t result = sub_2576A90D0();
          --v5;
        }
        while (v5);
      }
      break;
    case 7:
      uint64_t v7 = *(void *)(v1 + 16);
      uint64_t result = sub_2576A90A0();
      if (v7)
      {
        uint64_t v8 = v1 + 32;
        do
        {
          v8 += 8;
          uint64_t result = sub_2576A90A0();
          --v7;
        }
        while (v7);
      }
      break;
    default:
      uint64_t result = sub_2576A90B0();
      break;
  }
  return result;
}

uint64_t sub_25751CDEC()
{
  return sub_2576A9100();
}

uint64_t sub_25751CE48()
{
  return sub_2576A9100();
}

unint64_t sub_25751CEA0()
{
  unint64_t result = qword_26A003120;
  if (!qword_26A003120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003120);
  }
  return result;
}

unint64_t sub_25751CEEC()
{
  unint64_t result = qword_26A003140;
  if (!qword_26A003140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003140);
  }
  return result;
}

unint64_t sub_25751CF38()
{
  unint64_t result = qword_26A003158;
  if (!qword_26A003158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003158);
  }
  return result;
}

unint64_t sub_25751CF84()
{
  unint64_t result = qword_26A003160;
  if (!qword_26A003160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003160);
  }
  return result;
}

uint64_t destroy for AttributeValue(uint64_t a1)
{
  return sub_257476E0C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14NeuralNetworks14AttributeValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_257476DB4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AttributeValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_257476DB4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_257476E0C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for AttributeValue(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_257476E0C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributeValue(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xF8 && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 247;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 8) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AttributeValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 248;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AttributeValue()
{
  return &type metadata for AttributeValue;
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_39()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_27(uint64_t a1, uint64_t a2, char a3)
{
  sub_257476E0C(a1, a2, a3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_4_27()
{
  *(void *)(v0 - 264) = 0;
  *(void *)(v0 - 256) = 0xE000000000000000;
  return sub_2576A8730();
}

uint64_t OUTLINED_FUNCTION_5_24@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 160) = v1;
  *(void *)(v2 - 152) = a1;
  *(_DWORD *)(v2 - 184) = v3;
  __swift_project_boxed_opaque_existential_1((void *)(v2 - 184), v1);
  return swift_getDynamicType();
}

uint64_t OUTLINED_FUNCTION_6_24()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_7_22()
{
  uint64_t v1 = *(void *)(v0 - 256);
  *(void *)(v0 - 264) = *(void *)(v0 - 264);
  *(void *)(v0 - 256) = v1;
  return 1634692166;
}

void *OUTLINED_FUNCTION_8_25()
{
  sub_257479260((long long *)(v0 - 264), v0 - 304);
  uint64_t v1 = *(void *)(v0 - 280);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 304), v1);
}

void *OUTLINED_FUNCTION_9_26()
{
  sub_257479260((long long *)(v0 - 264), v0 - 304);
  uint64_t v1 = *(void *)(v0 - 280);
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 304), v1);
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_12_20()
{
  return sub_25746B3D0(v0 - 184, v0 - 224);
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_17()
{
  return sub_2576A7B00();
}

uint64_t sub_25751D384()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 48);
  *(void *)(v1 + 32) = *(void *)(v0 + 40);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25751D3E0(int a1, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5, uint64_t a6)
{
  uint64_t v8 = *a4;
  char v9 = *a5;
  if (!a3) {
    a1 = sub_25761B148(0x7475706E69, 0xE500000000000000);
  }
  *(_DWORD *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = v8;
  *(unsigned char *)(v6 + 48) = v9;
  sub_257469238(a6, v6 + 56);
  return v6;
}

uint64_t sub_25751D448()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25751D470()
{
  sub_25751D448();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InputOperation()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_4_28()
{
  return 0x7475706E69;
}

uint64_t sub_25751D4E0()
{
  return sub_25751D4F8();
}

uint64_t sub_25751D4F8()
{
  if (qword_26A000920 != -1) {
    swift_once();
  }
  return dword_26A030A80;
}

uint64_t sub_25751D544()
{
  return sub_2576A78E0();
}

uint64_t sub_25751D558()
{
  return sub_25751D544();
}

uint64_t sub_25751D570(uint64_t a1)
{
  uint64_t result = sub_25751D5F8(&qword_26A0018C0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25751D5B4(uint64_t a1)
{
  uint64_t result = sub_25751D5F8(&qword_26A003168);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25751D5F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for InputOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25751D638(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    if (a1)
    {
      sub_2576A7810();
      Tensor.init(stacking:alongAxis:scalarType:)();
      Tensor.sum()();
    }
    else
    {
      sub_2576A7810();
      Tensor.init(stacking:alongAxis:scalarType:)();
      Tensor.mean()();
    }
    return swift_release();
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

void sub_25751D734(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (uint64_t *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 8);
  if (!*(void *)(v3 + 16)
    || (sub_257654B3C(*(void *)(*(void *)(*(void *)(v3 + 32) + 16) + 152), *(void *)(*(void *)(v2 + 16) + 152)) & 1) != 0&& (uint64_t v5 = Tensor.scalarType.getter(), v5 == Tensor.scalarType.getter()))
  {
    swift_retain();
    sub_2574712E8();
    uint64_t v6 = *(void *)(*v4 + 16);
    sub_257471868();
    uint64_t v7 = *v4;
    *(void *)(v7 + 16) = v6 + 1;
    *(void *)(v7 + 8 * v6 + 32) = v2;
    uint64_t *v4 = v7;
  }
  else
  {
    sub_2576A8B60();
    __break(1u);
  }
}

int *sub_25751D834@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(a9, a1, a10);
  uint64_t result = (int *)type metadata accessor for TrainingLoop();
  *(unsigned char *)(a9 + result[9]) = a2;
  uint64_t v19 = (void *)(a9 + result[10]);
  *uint64_t v19 = a3;
  v19[1] = a4;
  uint64_t v20 = (void *)(a9 + result[11]);
  *uint64_t v20 = a5;
  v20[1] = a6;
  BOOL v21 = (void *)(a9 + result[12]);
  void *v21 = a7;
  v21[1] = a8;
  return result;
}

uint64_t sub_25751D904(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)v30 - v7;
  uint64_t v9 = sub_2576A84C0();
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v30 - v11;
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v35 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v4;
  uint64_t v37 = v3;
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v17 = (char *)v30 - v16;
  uint64_t v38 = (int *)a1;
  uint64_t v18 = *(int *)(a1 + 40);
  uint64_t v40 = v1;
  uint64_t v19 = (uint64_t (**)(uint64_t))(v1 + v18);
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v1 + v18);
  uint64_t v34 = v19;
  if (v20(1))
  {
    uint64_t v21 = v38[9];
    uint64_t v22 = v13 + 16;
    uint64_t v32 = *(void (**)(char *))(v13 + 16);
    uint64_t v33 = v21;
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v24 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
    v30[1] = v22;
    char v31 = (void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v25 = 1;
    uint64_t v26 = 1;
    while (2)
    {
      if (*(unsigned char *)(v40 + v33)) {
        uint64_t v25 = 1;
      }
      v32(v35);
      sub_2576A7C00();
      swift_getAssociatedConformanceWitness();
      while (1)
      {
        sub_2576A8500();
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness) == 1) {
          break;
        }
        (*v23)(v8, v12, AssociatedTypeWitness);
        char v27 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v40 + v38[12]))(v26, v25, v8);
        uint64_t result = (*v24)(v8, AssociatedTypeWitness);
        if ((v27 & 1) == 0)
        {
          (*v31)(v17, v39);
          return (*(uint64_t (**)(uint64_t))(*((void *)v38 - 1) + 8))(v40);
        }
        BOOL v29 = __OFADD__(v25++, 1);
        if (v29)
        {
          __break(1u);
LABEL_17:
          __break(1u);
          return result;
        }
      }
      (*v31)(v17, v39);
      uint64_t result = (*(uint64_t (**)(uint64_t))(v40 + v38[11]))(v26);
      if ((result & 1) == 0) {
        return (*(uint64_t (**)(uint64_t))(*((void *)v38 - 1) + 8))(v40);
      }
      BOOL v29 = __OFADD__(v26++, 1);
      if (v29) {
        goto LABEL_17;
      }
      if ((*v34)(v26)) {
        continue;
      }
      break;
    }
  }
  return (*(uint64_t (**)(uint64_t))(*((void *)v38 - 1) + 8))(v40);
}

uint64_t EvaluationResults.loss.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t TrainingCount.description.getter()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    uint64_t v1 = 0x207368636F7045;
  }
  else {
    uint64_t v1 = 0x207370657453;
  }
  uint64_t v3 = v1;
  sub_2576A8EA0();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  return v3;
}

BOOL static TrainingAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TrainingAction.hash(into:)()
{
  return sub_2576A90A0();
}

uint64_t TrainingAction.hashValue.getter()
{
  return sub_2576A9100();
}

uint64_t train<A, B, C, D>(_:on:using:count:evaluatingOn:criterion:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v70 = a8;
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v73 = a1;
  uint64_t v68 = a3;
  uint64_t v69 = a2;
  sub_2576A84C0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v74 = v19;
  uint64_t v75 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v76 = (char *)&v59 - v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v22 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v24 = v23;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  char v31 = (char *)&v59 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v59 - v32;
  uint64_t v67 = *a4;
  int v34 = *((unsigned __int8 *)a4 + 8);
  uint64_t v35 = *(void (**)(void))(v24 + 16);
  int v66 = v34;
  if ((v34 & 1) == 0)
  {
    uint64_t v65 = a5;
    OUTLINED_FUNCTION_2_28();
    v35();
    OUTLINED_FUNCTION_6_25((uint64_t)v33);
    if (v36)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v33, v22);
    }
    else
    {
      int v37 = v33[*(int *)(TupleTypeMetadata2 + 48) + 8];
      OUTLINED_FUNCTION_9_13();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v33, a11);
      if (v37 == 1)
      {
        uint64_t result = sub_2576A8B60();
        __break(1u);
        return result;
      }
    }
  }
  OUTLINED_FUNCTION_2_28();
  v35();
  OUTLINED_FUNCTION_6_25((uint64_t)v31);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v22);
    uint64_t v41 = 1;
    uint64_t v40 = (uint64_t)v76;
  }
  else
  {
    OUTLINED_FUNCTION_9_13();
    uint64_t v40 = (uint64_t)v76;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v76, v31, a11);
    uint64_t v41 = 0;
  }
  uint64_t v63 = a15;
  uint64_t v64 = a16;
  uint64_t v61 = a13;
  uint64_t v62 = a14;
  uint64_t v60 = a12;
  uint64_t v65 = a9;
  __swift_storeEnumTagSinglePayload(v40, v41, 1, a11);
  OUTLINED_FUNCTION_2_28();
  v35();
  OUTLINED_FUNCTION_6_25((uint64_t)v28);
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v22);
    uint64_t v43 = 0;
    char v44 = -1;
  }
  else
  {
    uint64_t v42 = &v28[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v43 = *(void *)v42;
    char v44 = v42[8];
    OUTLINED_FUNCTION_9_13();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v28, a11);
  }
  uint64_t v46 = swift_allocObject();
  *(unsigned char *)(v46 + 16) = 0;
  *(void *)(v46 + 24) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(unsigned char *)(v47 + 16) = 0;
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  *(&v59 - 22) = a10;
  *(&v59 - 21) = a11;
  uint64_t v49 = v61;
  *(&v59 - 20) = v60;
  *(&v59 - 19) = v49;
  uint64_t v50 = v63;
  *(&v59 - 18) = v62;
  *(&v59 - 17) = v50;
  uint64_t v51 = v68;
  *(&v59 - 16) = v64;
  *(&v59 - 15) = v51;
  *(&v59 - 14) = v69;
  char v52 = v66;
  *((unsigned char *)&v59 - 104) = v66;
  uint64_t v53 = v67;
  *(&v59 - 12) = v48;
  *(&v59 - 11) = v53;
  *((unsigned char *)&v59 - 80) = v52;
  uint64_t v54 = v70;
  *(&v59 - 9) = v46;
  *(&v59 - 8) = v54;
  float v55 = v76;
  *(&v59 - 7) = v65;
  *(&v59 - 6) = (uint64_t)v55;
  *(&v59 - 5) = v43;
  *((unsigned char *)&v59 - 32) = v44;
  uint64_t v56 = v72;
  *(&v59 - 3) = v71;
  uint64_t v58 = v56;
  sub_2575E6708();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v55, v75);
  swift_release();
  return swift_release();
}

uint64_t sub_25751E328()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25751E360()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

BOOL sub_25751E370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_2576A84C0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = *(void *)a1;
  int v18 = *(unsigned __int8 *)(a1 + 8);
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 16) == 2) {
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v16, 1, a7);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  BOOL result = 0;
  if (EnumTagSinglePayload != 1 && a5 != 255)
  {
    if (v18)
    {
      if (a5)
      {
        if (a4 != -1)
        {
          if (!a4) {
            return v17 == 0;
          }
          return v17 % a4 == 0;
        }
        return 1;
      }
    }
    else if ((a5 & 1) == 0)
    {
      if (a4 != -1)
      {
        if (!a4) {
          return v17 == 0;
        }
        return v17 % a4 == 0;
      }
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_25751E51C()
{
  return sub_2575E6708();
}

uint64_t sub_25751E5DC()
{
  return sub_25751E51C();
}

uint64_t sub_25751E650(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  void (*v66)(uint64_t *__return_ptr, long long *);
  uint64_t v67;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(uint64_t, char *, uint64_t);
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t *__return_ptr, long long *);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;

  uint64_t v96 = a7;
  uint64_t v97 = (void (*)(uint64_t *__return_ptr, long long *))a8;
  uint64_t v85 = a6;
  uint64_t v87 = a5;
  uint64_t v98 = a4;
  uint64_t v82 = a3;
  __int16 v80 = a1;
  long long v91 = a13;
  uint64_t v92 = a14;
  char v93 = a12;
  uint64_t v94 = a11;
  uint64_t v89 = a22;
  char v100 = a21;
  uint64_t v79 = a15;
  uint64_t v88 = a10;
  unint64_t v104 = a9;
  uint64_t v99 = a19;
  uint64_t v86 = a20;
  unint64_t v101 = a18;
  v102 = a16;
  uint64_t v95 = sub_2576A84C0();
  uint64_t v103 = *(void **)(v95 - 8);
  uint64_t v24 = v103[8];
  uint64_t v25 = MEMORY[0x270FA5388](v95);
  long long v90 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v24;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v70 - v27;
  uint64_t v72 = (char *)&v70 - v27;
  uint64_t v29 = *(void *)(a17 - 8);
  MEMORY[0x270FA5388](v26);
  char v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v77 = v31;
  uint64_t v83 = type metadata accessor for TrainingLoop();
  char v81 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  char v78 = (uint64_t)&v70 - v32;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  uint64_t v84 = a17;
  v33(v31, a2, a17);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a4;
  uint64_t v35 = v87;
  *(void *)(v34 + 24) = v87;
  v85 &= 1u;
  *(unsigned char *)(v34 + 32) = v85;
  uint64_t v36 = (uint64_t)v97;
  *(void *)(v34 + 40) = v96;
  *(void *)(v34 + 48) = v36;
  *(void *)(v34 + 56) = v104;
  int v37 = v103;
  uint64_t v76 = (void (*)(char *, uint64_t, uint64_t))v103[2];
  v76(v28, v88, v95);
  uint64_t v38 = *((unsigned __int8 *)v37 + 80);
  uint64_t v39 = (v38 + 120) & ~v38;
  uint64_t v73 = v38 | 7;
  uint64_t v71 = (v39 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = (v39 + v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v102;
  *(void *)(v41 + 24) = a17;
  uint64_t v42 = v99;
  *(void *)(v41 + 32) = v101;
  *(void *)(v41 + 40) = v42;
  uint64_t v43 = v100;
  *(void *)(v41 + 48) = v86;
  *(void *)(v41 + 56) = v43;
  uint64_t v44 = v89;
  *(void *)(v41 + 64) = v89;
  *(void *)(v41 + 72) = v35;
  *(unsigned char *)(v41 + 80) = v85;
  *(void *)(v41 + 88) = v98;
  *(void *)(v41 + 96) = v36;
  uint64_t v45 = v96;
  *(void *)(v41 + 104) = v104;
  *(void *)(v41 + 112) = v45;
  uint64_t v46 = (void (*)(uint64_t, char *, uint64_t))v103[4];
  v103 += 4;
  uint64_t v74 = v46;
  uint64_t v47 = v95;
  v46(v41 + v39, v72, v95);
  unint64_t v48 = v41 + v71;
  *(void *)unint64_t v48 = v94;
  *(unsigned char *)(v48 + 8) = v93;
  uint64_t v49 = v90;
  *(void *)(v41 + v70) = v91;
  uint64_t v50 = (void *)(v41 + v40);
  uint64_t v51 = v79;
  *uint64_t v50 = v92;
  v50[1] = v51;
  v76(v49, v88, v47);
  uint64_t v52 = (v38 + 152) & ~v38;
  unint64_t v53 = (v75 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v84;
  *(void *)(v54 + 16) = v102;
  *(void *)(v54 + 24) = v55;
  uint64_t v56 = v99;
  *(void *)(v54 + 32) = v101;
  *(void *)(v54 + 40) = v56;
  uint64_t v57 = v100;
  *(void *)(v54 + 48) = v86;
  *(void *)(v54 + 56) = v57;
  uint64_t v58 = v98;
  *(void *)(v54 + 64) = v44;
  *(void *)(v54 + 72) = v58;
  *(void *)(v54 + 80) = v87;
  *(unsigned char *)(v54 + 88) = v85;
  uint64_t v60 = v96;
  uint64_t v59 = (uint64_t)v97;
  *(void *)(v54 + 96) = v96;
  *(void *)(v54 + 104) = v59;
  uint64_t v61 = v90;
  uint64_t v62 = v91;
  *(void *)(v54 + 112) = v104;
  *(void *)(v54 + 120) = v62;
  uint64_t v63 = v92;
  *(void *)(v54 + 128) = v80;
  *(void *)(v54 + 136) = v63;
  *(void *)(v54 + 144) = v51;
  v74(v54 + v52, v61, v95);
  unint64_t v64 = v54 + v53;
  *(void *)unint64_t v64 = v94;
  *(unsigned char *)(v64 + 8) = v93;
  uint64_t v69 = v55;
  uint64_t v65 = v78;
  sub_25751D834((uint64_t)v77, v82, (uint64_t)sub_257520D80, v34, (uint64_t)sub_257520E90, v41, (uint64_t)sub_257521074, v54, v78, v69);
  swift_retain();
  swift_retain();
  int v66 = v97;
  uint64_t v67 = v104;
  sub_25747A4D0((uint64_t)v97);
  swift_retain();
  sub_25747A4D0((uint64_t)v66);
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_25747A4D0((uint64_t)v66);
  swift_retain();
  sub_25751FAC4(v66, v67, v65, v60);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 8))(v65, v83);
}

BOOL sub_25751EC9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void (*a6)(unsigned __int8 *__return_ptr, void *))
{
  int v11 = a4 & 1;
  uint64_t v12 = (unsigned char *)(a2 + 16);
  swift_beginAccess();
  int v13 = *(unsigned __int8 *)(a2 + 16);
  BOOL result = v13 != 2;
  if (v13 != 2 && v11 != 0)
  {
    if (a3 >= a1)
    {
      swift_beginAccess();
      *(void *)(a5 + 24) = MEMORY[0x263F8EE78];
      swift_bridgeObjectRelease();
      if (a6)
      {
        v18[0] = a1;
        v18[1] = 0x1000000000000000;
        a6(&v17, v18);
        int v16 = v17;
      }
      else
      {
        int v16 = 0;
      }
      swift_beginAccess();
      *uint64_t v12 = v16;
      return v16 != 2;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_25751EDA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(char *__return_ptr, uint64_t *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, void (*a12)(long long *__return_ptr, char *, char *), uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20)
{
  void (*v55)(long long *__return_ptr, char *, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;

  unint64_t v64 = a6;
  uint64_t v65 = a8;
  uint64_t v63 = *(void *)(a14 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v62 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_2576A84C0();
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v50 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v33 = (char *)&v50 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) == 0) {
    return 1;
  }
  uint64_t v54 = v31;
  uint64_t v53 = v30;
  uint64_t v58 = a19;
  uint64_t v59 = a18;
  uint64_t v60 = a17;
  uint64_t v61 = a20;
  uint64_t v57 = a16;
  LODWORD(v55) = a10;
  uint64_t v56 = a4;
  uint64_t v35 = (unsigned char *)(a4 + 16);
  uint64_t v36 = a9;
  swift_beginAccess();
  if (*v35 != 1 && a5)
  {
    swift_beginAccess();
    uint64_t v51 = a9;
    char v37 = *(unsigned char *)(a7 + 16);
    uint64_t v38 = *(void *)(a7 + 24);
    uint64_t v52 = v33;
    sub_25747A4D0((uint64_t)a5);
    sub_2576A7810();
    sub_25751D638(v37, v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = v67;
    uint64_t v67 = a1;
    uint64_t v68 = v39 | 0x2000000000000000;
    a5(&v66, &v67);
    uint64_t v33 = v52;
    sub_25747A4E0((uint64_t)a5);
    uint64_t v36 = v51;
    swift_release();
    LOBYTE(v38) = v66;
    swift_beginAccess();
    unsigned char *v35 = v38;
  }
  uint64_t v67 = a1;
  LOBYTE(v68) = 1;
  uint64_t v40 = v56;
  uint64_t v41 = v65;
  if (sub_25751E370((uint64_t)&v67, v56, v65, v36, v55, a14, a15))
  {
    uint64_t v42 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v29, v41, v26);
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, a15) == 1)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v26);
    }
    else
    {
      uint64_t v43 = v40;
      uint64_t v65 = a13;
      uint64_t v55 = a12;
      uint64_t v44 = v53;
      (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v33, v29, a15);
      uint64_t v46 = (uint64_t)v62;
      uint64_t v45 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, a11, a14);
      uint64_t v47 = (void *)swift_allocObject();
      uint64_t v48 = v64;
      v47[2] = a5;
      v47[3] = v48;
      v47[4] = v43;
      sub_25747A4D0((uint64_t)a5);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      swift_retain();
      sub_2575200BC((void *(*)(uint64_t *__return_ptr, long long *))sub_257521D24, (uint64_t)v47, (uint64_t)v33, v46, v55, v65, a14, a15, v60, AssociatedConformanceWitness, v59, v61);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, a14);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v33, a15);
    }
  }
  swift_beginAccess();
  return *v35 != 2;
}

void *evaluate<A, B, C>(_:on:criterion:eventHandler:)(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, char *, char *), uint64_t a4, void *(*a5)(uint64_t *__return_ptr, long long *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12)
{
  return sub_2575200BC(a5, a6, a2, a1, a3, a4, a7, a8, a9, a10, a11, a12);
}

BOOL sub_25751F30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void (*a8)(uint64_t *__return_ptr, uint64_t *), uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(long long *__return_ptr, char *, char *), uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char *a21,uint64_t a22,uint64_t a23)
{
  void (*v43)(uint64_t *__return_ptr, uint64_t *);
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t AssociatedConformanceWitness;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(long long *__return_ptr, char *, char *);
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v77;
  char v78;
  uint64_t v79[3];
  uint64_t v80;
  uint64_t v81;

  uint64_t v75 = a3;
  uint64_t v76 = a8;
  uint64_t v72 = *(void *)(a17 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v71 = (char *)&v57 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_2576A84C0();
  uint64_t v73 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v57 - v31;
  uint64_t v70 = *(void *)(a18 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v74 = (uint64_t)&v57 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = (char *)(a4 + 16);
  swift_beginAccess();
  BOOL result = 0;
  int v36 = *(unsigned __int8 *)(a4 + 16);
  BOOL v38 = (a6 & 1) == 0 && a5 < a2;
  if (v36 == 2 || v38) {
    return result;
  }
  if (v36 == 1) {
    return 1;
  }
  uint64_t v69 = a19;
  uint64_t v62 = a16;
  uint64_t v61 = a15;
  uint64_t v63 = a14;
  uint64_t v39 = a13;
  uint64_t v60 = a12;
  unint64_t v64 = a7 + 16;
  uint64_t v59 = a10;
  if ((a6 & 1) == 0)
  {
    swift_beginAccess();
    *(void *)(a7 + 24) = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
  }
  uint64_t v68 = a23;
  int v66 = a22;
  uint64_t v65 = a21;
  uint64_t v67 = a20;
  uint64_t v58 = a9;
  if (v76)
  {
    __int16 v80 = a2;
    char v81 = 0x3000000000000000;
    v76(v79, &v80);
    int v40 = LOBYTE(v79[0]);
    if (LOBYTE(v79[0]) == 1)
    {
LABEL_22:
      swift_beginAccess();
      uint64_t v44 = *v34;
      goto LABEL_23;
    }
  }
  else
  {
    int v40 = 0;
  }
  uint64_t v41 = v75;
  uint64_t v75 = a13;
  sub_25751F974(v59, v41, a11, (uint64_t)v60, a13, a17, v69, v67, &v80, v66, v68);
  uint64_t v42 = v80;
  swift_beginAccess();
  v79[0] = v42;
  sub_25751D734(v79);
  swift_endAccess();
  if (v76)
  {
    __int16 v80 = a2;
    char v81 = v42 | 0x4000000000000000;
    uint64_t v43 = v76;
    swift_retain();
    v43(v79, &v80);
    swift_release_n();
    int v40 = LOBYTE(v79[0]);
  }
  else
  {
    swift_release();
  }
  uint64_t v39 = v75;
  if (v40 != 2) {
    goto LABEL_22;
  }
  uint64_t v44 = 2;
LABEL_23:
  swift_beginAccess();
  *(unsigned char *)(a4 + 16) = v44;
  __int16 v77 = a2;
  char v78 = 0;
  uint64_t v45 = v63;
  if (sub_25751E370((uint64_t)&v77, a4, v63, v61, v62, a17, a18))
  {
    uint64_t v46 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v32, v45, v29);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, a18) == 1)
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v29);
    }
    else
    {
      uint64_t v47 = v70;
      (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v74, v32, a18);
      uint64_t v49 = (uint64_t)v71;
      uint64_t v48 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v71, v59, a17);
      uint64_t v50 = (void *)swift_allocObject();
      uint64_t v51 = (uint64_t)v76;
      uint64_t v52 = v58;
      v50[2] = v76;
      v50[3] = v52;
      v50[4] = a4;
      sub_25747A4D0(v51);
      uint64_t v53 = v39;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      swift_retain();
      uint64_t v56 = AssociatedConformanceWitness;
      uint64_t v55 = v74;
      sub_2575200BC((void *(*)(uint64_t *__return_ptr, long long *))sub_257521174, (uint64_t)v50, v74, v49, v60, v53, a17, a18, v67, v56, v65, v68);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, a17);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v55, a18);
    }
  }
  swift_beginAccess();
  return *v34 != 2;
}

void sub_25751F974(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v18 = (void *)MEMORY[0x25A2BA130]();
  sub_25751FC8C(a1, a2, a4, a5, a3, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_25751FA24@<X0>(long long *a1@<X0>, void (*a2)(void *__return_ptr, long long *)@<X1>, uint64_t a3@<X3>, unsigned char *a4@<X8>)
{
  uint64_t v5 = (char *)(a3 + 16);
  if (!a2)
  {
    char v6 = 0;
    goto LABEL_5;
  }
  long long v10 = *a1;
  a2(v9, &v10);
  char v6 = v9[0];
  if (LOBYTE(v9[0]) != 2)
  {
LABEL_5:
    swift_beginAccess();
    char v7 = *v5;
    goto LABEL_6;
  }
  char v7 = 2;
LABEL_6:
  uint64_t result = swift_beginAccess();
  *uint64_t v5 = v7;
  *a4 = v6;
  return result;
}

uint64_t sub_25751FAC4(void (*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for TrainingLoop();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v14 - v9;
  if (a1)
  {
    long long v15 = xmmword_2576B30D0;
    swift_retain();
    a1(v14, &v15);
    if (!LOBYTE(v14[0]))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
      sub_25751D904(v7);
    }
    swift_beginAccess();
    char v11 = *(unsigned char *)(a4 + 16);
    uint64_t v12 = *(void *)(a4 + 24);
    sub_2576A7810();
    sub_25751D638(v11, v12);
    swift_bridgeObjectRelease();
    v14[1] = 0;
    a1(&v16, (long long *)v14);
    sub_25747A4E0((uint64_t)a1);
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
    return sub_25751D904(v7);
  }
}

uint64_t sub_25751FC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v26 = a9;
  uint64_t v24 = a1;
  uint64_t v25 = a5;
  uint64_t v23 = a4;
  uint64_t v16 = *(void *)(a6 - 8);
  MEMORY[0x270FA5388](a1);
  int v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v18);
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v29 = a8;
  uint64_t v30 = a10;
  uint64_t v31 = a11;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v34 = v23;
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = valueWithGradient<A>(at:of:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a6);
  uint64_t v20 = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 48))(v24, v19, a7, a10);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v26 = v20;
  return result;
}

uint64_t sub_25751FE34@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v24 = a5;
  uint64_t v25 = a1;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v26 = a6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v10 = (char *)&AssociatedConformanceWitness - v9;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v22 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v22);
  uint64_t v14 = (char *)&AssociatedConformanceWitness - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&AssociatedConformanceWitness - v15;
  uint64_t v17 = v24;
  (*(void (**)(uint64_t, uint64_t))(a7 + 24))(v24, a7);
  Layer.callAsFunction(_:)((uint64_t)v10, a4, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(a7 + 32))(v17, a7);
  v28(v16, v14);
  int v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v19 = v22;
  v18(v14, v22);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v19);
}

void *sub_2575200BC(void *(*a1)(uint64_t *__return_ptr, long long *), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(long long *__return_ptr, char *, char *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12)
{
  void (*v67)(long long *__return_ptr, char *, char *);
  char *v68;
  uint64_t v69;
  void (**v70)(char *, uint64_t);
  void (*v71)(void *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *(*v80)(uint64_t *__return_ptr, long long *);
  char v81;
  long long v82;
  uint64_t v83;
  uint64_t v84;

  uint64_t v62 = a6;
  uint64_t v66 = a4;
  uint64_t v67 = a5;
  uint64_t v75 = a3;
  uint64_t v79 = a2;
  __int16 v80 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v68 = (char *)&v52 - v14;
  uint64_t v64 = a10;
  uint64_t v60 = a7;
  uint64_t v63 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void (***)(char *, uint64_t))(v63 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v63);
  uint64_t v61 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v76 = (char *)&v52 - v18;
  char v78 = *(void *)(a9 - 8);
  MEMORY[0x270FA5388](v17);
  __int16 v77 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = a9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v20 = sub_2576A84C0();
  uint64_t v73 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (uint64_t *)((char *)&v52 - v24);
  uint64_t v72 = sub_2576A8BE0();
  MEMORY[0x270FA5388](v72);
  uint64_t v26 = a8;
  uint64_t v74 = a11;
  uint64_t v27 = sub_2576A8BD0();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v52 - v29;
  BYTE1(v83) = 0;
  uint64_t v84 = MEMORY[0x263F8EE78];
  uint64_t v82 = xmmword_2576B30E0;
  uint64_t result = v80(&v83, &v82);
  if (!(_BYTE)v83)
  {
    uint64_t v52 = v28;
    MEMORY[0x25A2B8250](v26, v74);
    sub_2576A8BB0();
    uint64_t v74 = v30;
    uint64_t v75 = v27;
    sub_2576A8BC0();
    uint64_t v32 = *(void (**)(void *, uint64_t, uint64_t))(v73 + 32);
    uint64_t v73 = v20;
    uint64_t v71 = v32;
    v32(v25, (uint64_t)v23, v20);
    uint64_t v33 = TupleTypeMetadata2;
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, TupleTypeMetadata2);
    uint64_t v36 = (uint64_t)v68;
    uint64_t v35 = v69;
    char v37 = v77;
    uint64_t v38 = v78;
    uint64_t v72 = (uint64_t)v23;
    if (EnumTagSinglePayload != 1)
    {
      uint64_t v39 = *(uint64_t (**)(void, void, void))(v78 + 32);
      uint64_t v57 = a12 + 24;
      uint64_t v56 = (void (**)(uint64_t, uint64_t))(v70 + 1);
      uint64_t v59 = a12;
      uint64_t v55 = a12 + 32;
      ++v54;
      v78 += 32;
      uint64_t v70 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v58 = v39;
      do
      {
        uint64_t v40 = *v25;
        uint64_t v41 = v25;
        uint64_t v42 = v33;
        uint64_t v43 = v41;
        uint64_t result = (void *)v39(v37, (char *)v41 + *(int *)(v33 + 48), v35);
        if (__OFADD__(v40, 1))
        {
          __break(1u);
          return result;
        }
        *(void *)&uint64_t v82 = v40 + 1;
        *((void *)&v82 + 1) = 0x6000000000000000;
        v80((uint64_t *)&v81, &v82);
        LOBYTE(v83) = v81;
        if (v81 == 1)
        {
          (*v70)(v37, v35);
        }
        else
        {
          uint64_t v44 = v59;
          (*(void (**)(uint64_t, uint64_t))(v59 + 24))(v35, v59);
          Layer.prediction(from:)(v36, v60);
          (*v56)(v36, AssociatedTypeWitness);
          uint64_t v45 = v61;
          (*(void (**)(uint64_t, uint64_t))(v44 + 32))(v35, v44);
          v67(&v82, v76, v45);
          uint64_t v46 = *v54;
          uint64_t v47 = v63;
          (*v54)(v45, v63);
          uint64_t v48 = v82;
          sub_25751D734((uint64_t *)&v82);
          *(void *)&uint64_t v82 = v40 + 1;
          *((void *)&v82 + 1) = v48 | 0x7000000000000000;
          swift_retain();
          v80((uint64_t *)&v81, &v82);
          uint64_t v49 = v76;
          uint64_t v50 = v77;
          uint64_t v36 = (uint64_t)v68;
          swift_release_n();
          v46(v49, v47);
          uint64_t v35 = v69;
          uint64_t v39 = v58;
          char v37 = v50;
          (*v70)(v50, v69);
          LOBYTE(v83) = v81;
          uint64_t v33 = v42;
          if (v81 != 1)
          {
            uint64_t v25 = v43;
            if (v81 == 2) {
              break;
            }
            goto LABEL_11;
          }
        }
        LOBYTE(v83) = 0;
        uint64_t v25 = v43;
LABEL_11:
        uint64_t v51 = v72;
        sub_2576A8BC0();
        v71(v25, v51, v73);
      }
      while (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v33) != 1);
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v74, v75);
    if (v83 == 2)
    {
      return (void *)swift_bridgeObjectRelease();
    }
    else
    {
      sub_25751D638(SBYTE1(v83), v84);
      swift_bridgeObjectRelease();
      *((void *)&v82 + 1) = 0x5000000000000000;
      v80((uint64_t *)&v81, &v82);
      return (void *)swift_release();
    }
  }
  return result;
}

unint64_t sub_2575208B8()
{
  unint64_t result = qword_26A003170[0];
  if (!qword_26A003170[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A003170);
  }
  return result;
}

void type metadata accessor for EvaluationResults()
{
}

void type metadata accessor for TrainingCount()
{
}

unsigned char *storeEnumTagSinglePayload for TrainingAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2575209E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for TrainingAction()
{
}

uint64_t *initializeBufferWithCopyOfBuffer for TrainingEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_257520A5C(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_257520A5C(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 60)
  {
    case 0uLL:
    case 2uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for TrainingEvent(uint64_t a1)
{
  return sub_257520AC0(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t sub_257520AC0(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 60)
  {
    case 0uLL:
    case 2uLL:
    case 4uLL:
    case 5uLL:
    case 7uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *assignWithCopy for TrainingEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_257520A5C(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_257520AC0(v5, v6);
  return a1;
}

uint64_t *assignWithTake for TrainingEvent(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_257520AC0(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainingEvent(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x78 && *(unsigned char *)(a1 + 16))
    {
      unsigned int v2 = *(_DWORD *)a1 + 119;
    }
    else
    {
      unsigned int v2 = ((*(void *)(a1 + 8) >> 60) & 0x8F | (16 * (*(void *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x77) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for TrainingEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x77)
  {
    *(void *)uint64_t result = a2 - 120;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x78) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_257520C34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (v1 <= 7) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 8);
  }
}

uint64_t sub_257520C50(uint64_t result)
{
  *(void *)(result + 8) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_257520C60(void *result, uint64_t a2)
{
  if (a2 < 8)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 60);
  }
  else
  {
    *uint64_t result = (a2 - 8);
    result[1] = 0x8000000000000000;
  }
  return result;
}

void type metadata accessor for TrainingEvent()
{
}

uint64_t sub_257520C94(uint64_t a1)
{
  return sub_25751E650(a1, *(void *)(v1 + 72), *(unsigned __int8 *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned __int8 *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(unsigned char *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40),
           *(void *)(v1 + 48),
           *(void *)(v1 + 56),
           *(void *)(v1 + 64));
}

uint64_t type metadata accessor for TrainingLoop()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257520D30()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 64, 7);
}

BOOL sub_257520D80(uint64_t a1)
{
  return sub_25751EC9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(unsigned __int8 *__return_ptr, void *))(v1 + 48));
}

uint64_t sub_257520D94()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_36(v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  swift_release();
  if (*(void *)(v0 + 96)) {
    swift_release();
  }
  swift_release();
  if (!OUTLINED_FUNCTION_5_25())
  {
    OUTLINED_FUNCTION_9_13();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v2);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((((v7 + ((v5 + 120) & ~v5) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5 | 7);
}

BOOL sub_257520E90(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  long long v14 = *(_OWORD *)(v1 + 48);
  long long v15 = *(_OWORD *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_36(v6);
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 120) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v12 = v11 + *(void *)(v10 + 64);
  return sub_25751EDA0(a1, *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88), *(void (**)(char *__return_ptr, uint64_t *))(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), v1 + v11, *(void *)(v1 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v12 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(long long *__return_ptr, char *, char *))(v1+ ((((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v4, v3, v15, *((uint64_t *)&v15 + 1), (char *)v14,
           *((uint64_t *)&v14 + 1),
           v5);
}

uint64_t sub_257520F8C()
{
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_36(v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(v6 + 64);
  swift_release();
  swift_release();
  if (*(void *)(v0 + 104)) {
    swift_release();
  }
  swift_release();
  if (!OUTLINED_FUNCTION_5_25())
  {
    OUTLINED_FUNCTION_9_13();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v2);
  }
  return MEMORY[0x270FA0238](v0, ((v7 + ((v5 + 152) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v5 | 7);
}

BOOL sub_257521074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  long long v18 = *(_OWORD *)(v3 + 48);
  long long v19 = *(_OWORD *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 64);
  uint64_t v10 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_36(v10);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 152) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_25751F30C(a1, a2, a3, *(void *)(v3 + 72), *(void *)(v3 + 80), *(unsigned char *)(v3 + 88), *(void *)(v3 + 96), *(void (**)(uint64_t *__return_ptr, uint64_t *))(v3 + 104), *(void *)(v3 + 112), *(void *)(v3 + 120), *(void *)(v3 + 128), *(void (**)(long long *__return_ptr, char *, char *))(v3 + 136), *(void *)(v3 + 144), v3 + v15, *(void *)(v3 + v16), *(unsigned char *)(v3 + v16 + 8), v8, v7, v19,
           *((uint64_t *)&v19 + 1),
           (char *)v18,
           *((uint64_t *)&v18 + 1),
           v9);
}

uint64_t sub_257521174@<X0>(long long *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_25751FA24(a1, *(void (**)(void *__return_ptr, long long *))(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_257521194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25751FE34(a1, *(void (**)(char *, char *))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 32), a2, *(void *)(v2 + 48));
}

uint64_t objectdestroy_25Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_257521214()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2575212C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || (((((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
    unint64_t v10 = ((unint64_t)v4 + v6) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 16);
    *(void *)(v10 + 8) = *(void *)(v11 + 8);
    *(void *)(v10 + 16) = v12;
    uint64_t v13 = (void *)((v10 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)((v11 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    unint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = (void *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v18 = v17[1];
    *unint64_t v16 = *v17;
    v16[1] = v18;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_257521404(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_257521490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 16);
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = v9;
  unint64_t v10 = (void *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = v11[1];
  *unint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_257521554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(void *)(v9 + 8) = *(void *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v9 + 16) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = (void *)((v9 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v13 = (void *)((v10 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = (void *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_257521634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  *(unsigned char *)uint64_t v7 = *(unsigned char *)v8;
  v7 &= 0xFFFFFFFFFFFFFFF8;
  v8 &= 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  unint64_t v9 = (_OWORD *)((v7 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((v8 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v9 = *v10;
  *(_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2575216DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  unint64_t v7 = v6 + a1;
  unint64_t v8 = v6 + a2;
  *(unsigned char *)unint64_t v7 = *(unsigned char *)v8;
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v8 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_release();
  uint64_t v11 = (_OWORD *)((v9 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (_OWORD *)((v10 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v11 = *v12;
  swift_release();
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2575217A0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2575218E4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2575218F8(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = (((((v9 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if ((((((v9 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
  }
  if (a2 > v8)
  {
    if ((((((v9 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if ((((((v9 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, (((((v9 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x257521AD8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (unint64_t)&a1[v9] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            *(void *)(v17 + 16) = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          *(void *)(v17 + 8) = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t initializeBufferWithCopyOfBuffer for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_2576A7810();
  return a1;
}

uint64_t assignWithCopy for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EvaluationMetricLogger(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EvaluationMetricLogger()
{
  return &type metadata for EvaluationMetricLogger;
}

unsigned char *storeEnumTagSinglePayload for EvaluationMetricLogger.ReductionKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257521C94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EvaluationMetricLogger.ReductionKind()
{
  return &type metadata for EvaluationMetricLogger.ReductionKind;
}

unint64_t sub_257521CD0()
{
  unint64_t result = qword_26A0031F8;
  if (!qword_26A0031F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0031F8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_36(uint64_t a1)
{
  return a1 - 8;
}

uint64_t OUTLINED_FUNCTION_5_25()
{
  return __swift_getEnumTagSinglePayload(v1 + v2, 1, v0);
}

uint64_t OUTLINED_FUNCTION_6_25(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

unint64_t sub_257521D94(uint64_t *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v4 = *a1;
  char v5 = v2;
  return (unint64_t)sub_257522A08((unsigned __int8 *)&v4) & 1;
}

uint64_t sub_257521DCC(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = *a2;
  uint64_t v8 = *a1;
  unsigned __int8 v7 = v3;
  if ((v3 - 1) > 0xA) {
    Swift::Int v4 = 1;
  }
  else {
    Swift::Int v4 = qword_2576B3340[(char)(v3 - 1)];
  }
  uint64_t v5 = sub_257521F00((uint64_t)&v8, &v7, v4);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 32) = v3;
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = v2;
  *(void *)(result + 40) = sub_257522B3C;
  *(void *)(result + 48) = 0;
  return result;
}

void sub_257521E68()
{
  OUTLINED_FUNCTION_0_37();
  sub_257522760(0);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_2574BA884();
  uint64_t v2 = OUTLINED_FUNCTION_1_40();
  v1(v2);
  sub_257522858(0);
}

uint64_t sub_257521EE4(uint64_t *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *a1;
  *(unsigned char *)(v5 + 32) = *a2;
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = a5;
  return v5;
}

uint64_t sub_257521F00(uint64_t a1, unsigned __int8 *a2, Swift::Int a3)
{
  int v4 = *a2;
  if ((v4 - 1) > 0xA) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = qword_2576B3340[(char)(v4 - 1)];
  }
  if (v5 > a3) {
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (v6)
  {
    unsigned __int8 v7 = (uint64_t *)(*(void *)a1 + 32);
    uint64_t v8 = 1;
    while (1)
    {
      uint64_t v9 = *v7++;
      uint64_t v10 = v8 * v9;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 != (v8 * v9) >> 63) {
        break;
      }
      uint64_t v8 = v10;
      if (!--v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = 1;
LABEL_11:
  if ((unsigned __int128)(v10 * (__int128)v5) >> 64 != (v10 * v5) >> 63) {
    goto LABEL_17;
  }
  unsigned int v11 = (void *)*MEMORY[0x263F0ED50];
  uint64_t v12 = MEMORY[0x25A2B99B0](*MEMORY[0x263F0ED50]);
  int v13 = (void *)*MEMORY[0x263F0ED30];
  Swift::Int v14 = MEMORY[0x25A2B99B0](*MEMORY[0x263F0ED30], v12);
  Swift::Int v15 = v14;
  if (v5 < a3) {
    Swift::Int v15 = roundUp(_:toMultipleOf:)(v14, a3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576B32E0;
  unint64_t v17 = (void *)*MEMORY[0x263F0EF50];
  *(void *)(inited + 32) = *MEMORY[0x263F0EF50];
  *(void *)(inited + 40) = v10;
  uint64_t v18 = (void *)*MEMORY[0x263F0EDF8];
  *(void *)(inited + 48) = *MEMORY[0x263F0EDF8];
  *(void *)(inited + 56) = 1;
  long long v19 = (void *)*MEMORY[0x263F0ED48];
  *(void *)(inited + 64) = *MEMORY[0x263F0ED48];
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = v11;
  *(void *)(inited + 88) = v12;
  *(void *)(inited + 96) = v13;
  *(void *)(inited + 104) = v15;
  type metadata accessor for CFString(0);
  sub_257522AEC();
  id v20 = v17;
  id v21 = v18;
  id v22 = v19;
  id v23 = v11;
  id v24 = v13;
  sub_2576A77E0();
  CFDictionaryRef v25 = (const __CFDictionary *)sub_2576A7790();
  swift_bridgeObjectRelease();
  IOSurfaceRef v26 = IOSurfaceCreate(v25);

  if (v26) {
    return (uint64_t)v26;
  }
  sub_2576A7810();
  sub_2576A8730();
  sub_2576A7B00();
  uint64_t v28 = sub_2576A7810();
  MEMORY[0x25A2B83F0](v28, MEMORY[0x263F8D6C8]);
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  sub_2576A7B00();
  sub_2576A8A30();
  sub_2576A7B00();
LABEL_20:
  uint64_t result = sub_2576A8B60();
  __break(1u);
  return result;
}

uint64_t sub_25752225C(unint64_t *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  unint64_t v11 = *a1;
  int v12 = *a2;
  type metadata accessor for IOSurfaceTensorStorage();
  unint64_t v35 = v11;
  LOBYTE(v38) = v12;
  uint64_t v13 = (uint64_t)qword_2576B3340;
  unint64_t v34 = v11;
  uint64_t v14 = a4;
  if ((v12 - 1) > 0xA) {
    Swift::Int v15 = 1;
  }
  else {
    Swift::Int v15 = qword_2576B3340[(char)(v12 - 1)];
  }
  int v16 = (__IOSurface *)sub_257521F00((uint64_t)&v35, (unsigned __int8 *)&v38, v15);
  IOSurfaceLock(v16, 0, 0);
  BaseAddress = IOSurfaceGetBaseAddress(v16);
  if (!BaseAddress) {
    goto LABEL_20;
  }
  a4 = *(void *)(a5 + 16);
  if (a4)
  {
    uint64_t v18 = (uint64_t *)(a5 + 32);
    uint64_t v19 = 1;
    uint64_t v20 = *(void *)(a5 + 16);
    while (1)
    {
      uint64_t v21 = *v18++;
      uint64_t v22 = v19 * v21;
      if ((unsigned __int128)(v19 * (__int128)v21) >> 64 != (v19 * v21) >> 63) {
        break;
      }
      uint64_t v19 = v22;
      if (!--v20) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = 1;
LABEL_11:
  if ((a6 - 1) > 0xAu) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = qword_2576B3340[(char)(a6 - 1)];
  }
  if ((unsigned __int128)(v22 * (__int128)v13) >> 64 != (v22 * v13) >> 63) {
    goto LABEL_19;
  }
  id v23 = sub_257559F74((uint64_t)BaseAddress, v22 * v13, 1, 0, 0);
  if (!v23)
  {
LABEL_21:
    unint64_t v35 = 0;
    unint64_t v36 = 0xE000000000000000;
    sub_2576A8730();
    swift_bridgeObjectRelease();
    unint64_t v35 = 0xD000000000000027;
    unint64_t v36 = 0x80000002576C9400;
    if (a4) {
      goto LABEL_26;
    }
    uint64_t v30 = 1;
LABEL_23:
    uint64_t v31 = v30 * v13;
    if ((unsigned __int128)(v30 * (__int128)v13) >> 64 == (v30 * v13) >> 63)
    {
LABEL_31:
      uint64_t v38 = v31;
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      char v37 = 9;
      sub_25746BE6C();
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    uint64_t v31 = a5 + 32;
    uint64_t v32 = 1;
    while (1)
    {
      uint64_t v33 = *(void *)v31;
      v31 += 8;
      uint64_t v30 = v32 * v33;
      if ((unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63) {
        break;
      }
      uint64_t v32 = v30;
      if (!--a4) {
        goto LABEL_23;
      }
    }
    __break(1u);
    goto LABEL_31;
  }
  id v24 = v23;
  if (!objc_msgSend(*(id *)(v14 + 24), sel_commandBuffer)) {
    goto LABEL_25;
  }
  swift_getObjectType();
  id v25 = objc_msgSend(v24, sel_length);
  uint64_t v26 = sub_2575A01E4();
  uint64_t v27 = sub_2575A01E4();
  sub_257648244(a7, v26, (uint64_t)v24, v27, (uint64_t)v25);
  sub_257648204();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  IOSurfaceUnlock(v16, 0, 0);
  uint64_t v28 = swift_allocObject();
  *(unsigned char *)(v28 + 32) = v12;
  *(void *)(v28 + 16) = v16;
  *(void *)(v28 + 24) = v34;
  *(void *)(v28 + 40) = sub_2575225B8;
  *(void *)(v28 + 48) = 0;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v28;
}

uint64_t sub_2575225B8(__IOSurface *a1)
{
  return IOSurfaceSetPurgeable(a1, 2u, 0);
}

uint64_t sub_2575225C4()
{
  uint64_t v1 = *(void (**)(void))(v0 + 40);
  if (v1) {
    v1(*(void *)(v0 + 16));
  }

  swift_bridgeObjectRelease();
  sub_25747A4E0(*(void *)(v0 + 40));
  return v0;
}

uint64_t sub_257522618()
{
  sub_2575225C4();
  return swift_deallocClassInstance();
}

uint64_t sub_25752264C(uint64_t a1)
{
  sub_257522760(1);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(a1 + 16));
  sub_2574BA884();
  sub_2574DB6C0();
  uint64_t v2 = sub_2576A6F90();
  sub_257522858(1);
  return v2;
}

void sub_2575226EC()
{
  OUTLINED_FUNCTION_0_37();
  sub_257522760(1);
  IOSurfaceGetBaseAddress(*(IOSurfaceRef *)(v0 + 16));
  sub_2574BA884();
  uint64_t v2 = OUTLINED_FUNCTION_1_40();
  v1(v2);
  sub_257522858(1);
}

uint64_t sub_257522760(char a1)
{
  int v3 = *(__IOSurface **)(v1 + 16);
  IOSurfaceIncrementUseCount(v3);
  uint64_t result = IOSurfaceLock(v3, a1 & 1, 0);
  if (result)
  {
    sub_2576A8320();
    if (qword_26A0008E8 != -1) {
      swift_once();
    }
    sub_2576A7570();
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

void sub_257522858(char a1)
{
  uint64_t v2 = *(__IOSurface **)(v1 + 16);
  if (IOSurfaceUnlock(v2, a1 & 1, 0))
  {
    sub_2576A8320();
    if (qword_26A0008E8 != -1) {
      swift_once();
    }
    sub_2576A7570();
    sub_2576A8B60();
    __break(1u);
  }
  else
  {
    IOSurfaceDecrementUseCount(v2);
  }
}

Swift::Int __swiftcall roundUp(_:toMultipleOf:)(Swift::Int _, Swift::Int toMultipleOf)
{
  if (!toMultipleOf)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (_ == 0x8000000000000000 && toMultipleOf == -1) {
    goto LABEL_13;
  }
  Swift::Int v3 = _ % toMultipleOf;
  if (!(_ % toMultipleOf)) {
    return _;
  }
  Swift::Int v4 = _ + toMultipleOf;
  if (__OFADD__(_, toMultipleOf)) {
    goto LABEL_11;
  }
  _ = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  return _;
}

uint64_t type metadata accessor for IOSurfaceTensorStorage()
{
  return self;
}

void sub_2575229C0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t sub_2575229CC@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return sub_2576A7810();
}

void sub_2575229D8()
{
}

void sub_2575229F0()
{
}

unsigned __int8 *sub_257522A08(unsigned __int8 *result)
{
  int v1 = result[8];
  uint64_t v2 = *(void *)(*(void *)result + 16);
  if (v2)
  {
    Swift::Int v3 = (uint64_t *)(*(void *)result + 32);
    uint64_t v4 = 1;
    while (1)
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = v4 * v5;
      if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63) {
        break;
      }
      uint64_t v4 = v6;
      if (!--v2) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v6 = 1;
LABEL_7:
    uint64_t result = (unsigned __int8 *)MEMORY[0x25A2B9A10](*MEMORY[0x263F0EF50]);
    if (v6 < 1 || (uint64_t)result < v6) {
      return 0;
    }
    if ((v1 - 1) > 0xA) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = qword_2576B3340[(char)(v1 - 1)];
    }
    if ((unsigned __int128)(v6 * (__int128)v8) >> 64 == (v6 * v8) >> 63)
    {
      uint64_t v9 = *MEMORY[0x263F0ED50];
      uint64_t v10 = MEMORY[0x25A2B99B0](*MEMORY[0x263F0ED50]);
      return (unsigned __int8 *)(MEMORY[0x25A2B9A10](v9) >= v10);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_257522AEC()
{
  unint64_t result = qword_26A000C38;
  if (!qword_26A000C38)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A000C38);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_40()
{
  return v0;
}

uint64_t Collection<>.collated()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v3, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v11, a1, a2, AssociatedTypeWitness, a3);
}

uint64_t Tensor.init<A>(collating:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_8();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = &v16[-v12];
  sub_2576A8150();
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v19 = a1;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_2574CA830(1, (uint64_t)sub_257522E6C, (uint64_t)v16, AssociatedTypeWitness, (uint64_t)&type metadata for Tensor, AssociatedConformanceWitness);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  char v20 = 13;
  Tensor.init(stacking:alongAxis:scalarType:)();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  *a4 = v21;
  return result;
}

uint64_t sub_257522E00@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (uint64_t (*)(uint64_t *, void))sub_2576A8200();
  uint64_t v4 = *v3;
  swift_retain();
  uint64_t result = v2(&v6, 0);
  *a1 = v4;
  return result;
}

uint64_t sub_257522E6C@<X0>(void *a1@<X8>)
{
  return sub_257522E00(a1);
}

uint64_t dispatch thunk of Collatable.init<A>(collating:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_257522E90()
{
}

uint64_t sub_257522EF0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  uint64_t v13 = *a11;
  char v14 = *((unsigned char *)a11 + 8);
  *(_DWORD *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = a6;
  *(void *)(v12 + 64) = a7;
  *(void *)(v12 + 72) = a8;
  *(void *)(v12 + 80) = a9;
  *(void *)(v12 + 88) = a10;
  *(void *)(v12 + 96) = v13;
  *(unsigned char *)(v12 + 104) = v14;
  sub_257469238(a12, v12 + 112);
  return v12;
}

uint64_t sub_257522F40()
{
  (*(void (**)(void))(*(void *)v0 + 136))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  return sub_2576A90A0();
}

uint64_t sub_257522FE4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257523014()
{
  sub_257522FE4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Base2DPoolOperation()
{
  return self;
}

uint64_t sub_25752306C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_257523090()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t sub_2575230B4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_2575230F8()
{
  return sub_25761B124();
}

uint64_t sub_257523144()
{
  return OUTLINED_FUNCTION_7_23(0x5F677661u);
}

#error "2575231B0: call analysis failed (funcsize=29)"

uint64_t sub_2575231C8()
{
  return sub_2576A90B0();
}

uint64_t sub_2575231F8()
{
  return sub_257523390();
}

uint64_t type metadata accessor for Average2DPoolOperation()
{
  return self;
}

uint64_t sub_257523224()
{
  return OUTLINED_FUNCTION_3_28(0x5F677661u);
}

#error "257523298: call analysis failed (funcsize=30)"

uint64_t sub_2575232B0()
{
  return sub_2576A90B0();
}

uint64_t sub_2575232E0()
{
  return sub_257523490();
}

uint64_t type metadata accessor for Average2DPoolGradientOperation()
{
  return self;
}

uint64_t sub_25752330C()
{
  return OUTLINED_FUNCTION_7_23(0x5F78616Du);
}

#error "257523370: call analysis failed (funcsize=27)"

uint64_t sub_257523388()
{
  return sub_257523390();
}

uint64_t sub_257523390()
{
  sub_257522FE4();
  sub_25747A4E0(*(void *)(v0 + 176));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Max2DPoolOperation()
{
  return self;
}

uint64_t sub_2575233FC()
{
  return OUTLINED_FUNCTION_3_28(0x5F78616Du);
}

#error "257523470: call analysis failed (funcsize=31)"

uint64_t sub_257523488()
{
  return sub_257523490();
}

uint64_t sub_257523490()
{
  sub_257522FE4();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Max2DPoolGradientOperation()
{
  return self;
}

uint64_t sub_2575234FC(uint64_t a1)
{
  uint64_t result = sub_2575236B4(&qword_26A001838, (void (*)(void))type metadata accessor for Max2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257523554(uint64_t a1)
{
  uint64_t result = sub_2575236B4(&qword_26A001840, (void (*)(void))type metadata accessor for Max2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2575235AC(uint64_t a1)
{
  uint64_t result = sub_2575236B4(&qword_26A001848, (void (*)(void))type metadata accessor for Average2DPoolGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257523604(uint64_t a1)
{
  uint64_t result = sub_2575236B4(&qword_26A001850, (void (*)(void))type metadata accessor for Average2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752365C(uint64_t a1)
{
  uint64_t result = sub_2575236B4(&qword_26A003208, (void (*)(void))type metadata accessor for Base2DPoolOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2575236B4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_38(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_3_28(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_4_29(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_7_23(unsigned int a1)
{
  return a1 | 0x6C6F6F7000000000;
}

uint64_t OUTLINED_FUNCTION_8_26(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t a12)
{
  return sub_257522EF0(a1, a2, a3, a5, a6, a7, v12, a8, a9, a10, a11, a12);
}

id sub_257523804(uint64_t *a1)
{
  swift_retain();
  sub_257523C40();
  *((unsigned char *)a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 0;
  OUTLINED_FUNCTION_1_42();
  id v2 = sub_257524544(a1);
  swift_endAccess();
  swift_release();
  return v2;
}

uint64_t sub_257523890()
{
  OUTLINED_FUNCTION_0_39();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 0;
  OUTLINED_FUNCTION_1_42();
  sub_2576A7160();
  return swift_endAccess();
}

uint64_t sub_257523908(uint64_t a1, uint64_t a2, uint64_t *a3, char *a4)
{
  uint64_t v7 = *a3;
  char v8 = *a4;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) = 0;
  *(_OWORD *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data) = xmmword_2576B2EB0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_isSynchronizedWithSource) = 1;
  uint64_t v9 = v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url;
  uint64_t v10 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a1, v10);
  *(void *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_offset) = a2;
  *(void *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape) = v7;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType) = v8;
  return v4;
}

uint64_t sub_2575239E4(uint64_t a1)
{
  sub_257523C40();
  id v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data);
  swift_beginAccess();
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v4 >> 32 < (int)v4)
      {
        __break(1u);
        JUMPOUT(0x257523B8CLL);
      }
      sub_2574ADB28(v4, v3);
      uint64_t v8 = sub_2575249F8((int)v4, v4 >> 32);
      goto LABEL_6;
    case 2uLL:
      uint64_t v9 = *(void *)(v4 + 16);
      uint64_t v10 = *(void *)(v4 + 24);
      sub_2574ADB28(v4, v3);
      swift_retain();
      swift_retain();
      uint64_t v8 = sub_2575249F8(v9, v10);
      swift_release();
      swift_release();
LABEL_6:
      sub_25747F154(v4, v3);
      return v8;
    case 3uLL:
      uint64_t v7 = 0;
      uint64_t v6 = 0;
      uint64_t v5 = 0;
      goto LABEL_8;
    default:
      uint64_t v5 = BYTE6(v3);
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
      uint64_t v7 = v4;
LABEL_8:
      uint64_t v8 = sub_257524AB8(v7, v6, v5);
      sub_25747F154(v4, v3);
      return v8;
  }
}

uint64_t sub_257523B9C()
{
  OUTLINED_FUNCTION_0_39();
  int v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data);
  swift_beginAccess();
  uint64_t v3 = *v1;
  unint64_t v2 = v1[1];
  sub_2574ADB28(v3, v2);
  sub_2576A7140();
  return sub_25747F154(v3, v2);
}

void sub_257523C40()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) & 1) == 0) {
    sub_257523D98();
  }
}

void sub_257523D98()
{
  uint64_t v2 = v0;
  v33[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_2576A70E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2574A4924(0, (unint64_t *)&qword_26A001288);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url, v3);
  id v7 = sub_257524044((uint64_t)v6);
  if (!v1)
  {
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_offset);
    v33[0] = 0;
    unsigned int v10 = objc_msgSend(v7, sel_seekToOffset_error_, v9, v33);
    id v11 = v33[0];
    if (!v10) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      char v14 = (uint64_t *)(v12 + 32);
      uint64_t v15 = 1;
      while (1)
      {
        uint64_t v16 = *v14++;
        uint64_t v17 = v15 * v16;
        if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63) {
          break;
        }
        uint64_t v15 = v17;
        if (!--v13) {
          goto LABEL_9;
        }
      }
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v17 = 1;
LABEL_9:
    unsigned int v18 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType) - 1;
    if (v18 > 0xA) {
      uint64_t v19 = 1;
    }
    else {
      uint64_t v19 = qword_2576B36C0[(char)v18];
    }
    if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63) {
LABEL_20:
    }
      __break(1u);
    id v20 = v33[0];
    uint64_t v21 = sub_2576A8300();
    uint64_t v23 = v22;
    if (v22 >> 60 != 15)
    {
      uint64_t v24 = v21;
      id v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data);
      swift_beginAccess();
      uint64_t v26 = *v25;
      unint64_t v27 = v25[1];
      *id v25 = v24;
      v25[1] = v23;
      sub_25747F154(v26, v27);
    }
    id v32 = 0;
    unsigned __int8 v28 = objc_msgSend(v8, sel_closeAndReturnError_, &v32);
    id v11 = v32;
    if (v28)
    {
      id v29 = v32;

      *(unsigned char *)(v2 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_initializationState) = 1;
    }
    else
    {
LABEL_17:
      id v30 = v11;
      sub_2576A7030();

      swift_willThrow();
    }
  }
}

id sub_257524044(uint64_t a1)
{
  v11[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = (void *)sub_2576A7080();
  v11[0] = 0;
  id v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  id v4 = v11[0];
  if (v3)
  {
    uint64_t v5 = sub_2576A70E0();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    id v7 = v4;
    v6(a1, v5);
  }
  else
  {
    id v8 = v11[0];
    sub_2576A7030();

    swift_willThrow();
    uint64_t v9 = sub_2576A70E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_25752419C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_url;
  uint64_t v2 = sub_2576A70E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_25747F154(*(void *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data), *(void *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_data + 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257524224()
{
  sub_25752419C();
  return swift_deallocClassInstance();
}

uint64_t sub_25752427C()
{
  return type metadata accessor for DataSourceTensorStorage();
}

uint64_t type metadata accessor for DataSourceTensorStorage()
{
  uint64_t result = qword_26A003210;
  if (!qword_26A003210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2575242CC()
{
  uint64_t result = sub_2576A70E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DataSourceTensorStorage.InitializationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257524464);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataSourceTensorStorage.InitializationState()
{
  return &type metadata for DataSourceTensorStorage.InitializationState;
}

unint64_t sub_2575244A0()
{
  unint64_t result = qword_26A003220;
  if (!qword_26A003220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003220);
  }
  return result;
}

void sub_2575244EC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType);
}

uint64_t sub_257524500@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_shape);
  return sub_2576A7810();
}

uint64_t sub_257524514()
{
  return sub_257523B9C();
}

uint64_t sub_25752452C()
{
  return sub_257523890();
}

id sub_257524544(uint64_t *a1)
{
  uint64_t v34 = *MEMORY[0x263EF8340];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  swift_retain_n();
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_2576B2EB0;
      swift_retain_n();
      uint64_t v10 = v3 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_13;
      }
      if (v10 < (int)v3) {
        goto LABEL_22;
      }
      if (sub_2576A6FB0() && __OFSUB__((int)v3, sub_2576A6FE0())) {
        goto LABEL_23;
      }
      sub_2576A6FF0();
      swift_allocObject();
      uint64_t v24 = sub_2576A6FA0();
      swift_release();
      uint64_t v9 = v24;
LABEL_13:
      if (v10 < (int)v3) {
        goto LABEL_20;
      }
      swift_retain();
      uint64_t v25 = sub_2576A6FB0();
      if (!v25) {
        goto LABEL_25;
      }
      uint64_t v26 = v25;
      uint64_t v27 = sub_2576A6FE0();
      if (__OFSUB__((int)v3, v27)) {
        goto LABEL_21;
      }
      uint64_t v28 = v26 + (int)v3 - v27;
      sub_2576A6FD0();
      sub_2574A4924(0, &qword_26A001C10);
      uint64_t v29 = sub_2576A7810();
      uint64_t v30 = sub_25746D770(v29);
      swift_bridgeObjectRelease();
      uint64_t v31 = sub_25754E0F0();
      id v7 = sub_25754E1EC(v30, v28, v31);
      swift_release_n();
      unint64_t v20 = v9 | 0x4000000000000000;
      break;
    case 2uLL:
      *(void *)&long long v33 = v3;
      *((void *)&v33 + 1) = v2 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      sub_2576A70F0();
      uint64_t v11 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v3 + 16);
      swift_retain();
      uint64_t v13 = sub_2576A6FB0();
      if (!v13)
      {
        __break(1u);
LABEL_25:
        __break(1u);
        JUMPOUT(0x2575249E8);
      }
      uint64_t v14 = v13;
      uint64_t v15 = sub_2576A6FE0();
      if (__OFSUB__(v12, v15))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
      uint64_t v16 = v14 + v12 - v15;
      sub_2576A6FD0();
      sub_2574A4924(0, &qword_26A001C10);
      uint64_t v17 = sub_2576A7810();
      uint64_t v18 = sub_25746D770(v17);
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_25754E0F0();
      id v7 = sub_25754E1EC(v18, v16, v19);
      swift_release_n();
      unint64_t v20 = v11 | 0x8000000000000000;
      break;
    case 3uLL:
      *(void *)((char *)&v33 + 7) = 0;
      *(void *)&long long v33 = 0;
      sub_2574A4924(0, &qword_26A001C10);
      swift_retain_n();
      uint64_t v21 = sub_2576A7810();
      uint64_t v22 = sub_25746D770(v21);
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_25754E0F0();
      id v7 = sub_25754E1EC(v22, (uint64_t)&v33, v23);
      swift_release_n();
      goto LABEL_18;
    default:
      *(void *)&long long v33 = v3;
      WORD4(v33) = v2;
      BYTE10(v33) = BYTE2(v2);
      BYTE11(v33) = BYTE3(v2);
      BYTE12(v33) = BYTE4(v2);
      BYTE13(v33) = BYTE5(v2);
      BYTE14(v33) = BYTE6(v2);
      sub_2574A4924(0, &qword_26A001C10);
      swift_retain_n();
      uint64_t v4 = sub_2576A7810();
      uint64_t v5 = sub_25746D770(v4);
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_25754E0F0();
      id v7 = sub_25754E1EC(v5, (uint64_t)&v33, v6);
      swift_release_n();
      unint64_t v8 = DWORD2(v33) | ((unint64_t)BYTE12(v33) << 32) | ((unint64_t)BYTE13(v33) << 40) | ((unint64_t)BYTE14(v33) << 48);
      *a1 = v33;
      a1[1] = v8;
      goto LABEL_18;
  }
  *a1 = v3;
  a1[1] = v20;
LABEL_18:
  swift_release_n();
  return v7;
}

uint64_t sub_2575249F8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2576A6FB0();
  if (!result || (uint64_t result = sub_2576A6FE0(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_2576A6FD0();
      sub_2574DB6C0();
      return sub_2576A6F90();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_257524AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = *MEMORY[0x263EF8340];
  uint64_t v4 = a1;
  __int16 v5 = a2;
  char v6 = BYTE2(a2);
  char v7 = BYTE3(a2);
  char v8 = BYTE4(a2);
  char v9 = BYTE5(a2);
  uint64_t v10 = &v4;
  uint64_t v11 = (char *)&v4 + a3;
  sub_2574DB6C0();
  return sub_2576A6F90();
}

void OUTLINED_FUNCTION_0_39()
{
  sub_257523C40();
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  return swift_beginAccess();
}

uint64_t MaxPool1D.stride.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t MaxPool1D.padding.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

NeuralNetworks::MaxPool1D __swiftcall MaxPool1D.init(kernelSize:stride:padding:)(Swift::Int kernelSize, Swift::Int_optional stride, Swift::Int padding)
{
  if (stride.is_nil) {
    stride.value = kernelSize;
  }
  *(void *)&stride.is_nil = padding;
  result.stride = stride.value;
  LOBYTE(result.padding) = stride.is_nil;
  *(_DWORD *)((char *)&result.padding + 1) = *(_DWORD *)((char *)&v3 + 1);
  *(_WORD *)((char *)&result.padding + 5) = *(_WORD *)((char *)&v3 + 5);
  HIBYTE(result.padding) = HIBYTE(v3);
  result.kernelSize = kernelSize;
  return result;
}

uint64_t MaxPool1D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Tensor.expandingShape(at:)();
  OUTLINED_FUNCTION_28_9();
  maxPool2D(_:kernelSize:stride:padding:)(v7, 1, a2, 1, a3, 0, a4, v8);
  swift_release();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

uint64_t sub_257524CD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69536C656E72656BLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656469727473 && a2 == 0xE600000000000000;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_2576A8F60();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_257524E2C()
{
  return sub_2575262DC(*v0);
}

uint64_t sub_257524E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257524CD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257524E5C(uint64_t a1)
{
  unint64_t v2 = sub_257525024();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257524E98(uint64_t a1)
{
  unint64_t v2 = sub_257525024();
  return MEMORY[0x270FA00B8](a1, v2);
}

void MaxPool1D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  v10[1] = v1;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003228);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_257525024();
  sub_2576A9230();
  sub_2576A8E30();
  if (!v0)
  {
    OUTLINED_FUNCTION_17_18();
    sub_2576A8E30();
    sub_2576A8E30();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  OUTLINED_FUNCTION_7_1();
}

unint64_t sub_257525024()
{
  unint64_t result = qword_26A003230;
  if (!qword_26A003230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003230);
  }
  return result;
}

uint64_t MaxPool1D.init(from:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003238);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = a1[3];
  OUTLINED_FUNCTION_24_14(a1);
  sub_257525024();
  sub_2576A91F0();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_21_17();
  OUTLINED_FUNCTION_16_20();
  OUTLINED_FUNCTION_26_12();
  OUTLINED_FUNCTION_16_20();
  uint64_t v5 = OUTLINED_FUNCTION_20_17();
  v6(v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_2575251B8(uint64_t a1)
{
  return MaxPool1D.forward(_:)(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_2575251C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = MaxPool1D.init(from:)(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

void sub_2575251F4()
{
}

uint64_t MaxPool2D.kernelSize.getter()
{
  return *(void *)v0;
}

uint64_t MaxPool2D.stride.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t MaxPool2D.padding.getter()
{
  return *(void *)(v0 + 32);
}

void __swiftcall MaxPool2D.init(kernelSize:stride:padding:)(NeuralNetworks::MaxPool2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int kernelSize, Swift::tuple_Int_Int_optional stride, Swift::tuple_Int_Int padding)
{
  retstr->kernelSize = kernelSize;
  if (stride.is_nil) {
    Swift::Int width = kernelSize.width;
  }
  else {
    Swift::Int width = stride.value._1;
  }
  if (stride.is_nil) {
    Swift::Int height = kernelSize.height;
  }
  else {
    Swift::Int height = stride.value._0;
  }
  retstr->stride.y = height;
  retstr->stride.x = width;
  retstr->padding = (Swift::tuple_y_Int_x_Int)padding;
}

uint64_t MaxPool2D.forward(_:)()
{
  OUTLINED_FUNCTION_15_16();
  return maxPool2D(_:kernelSize:stride:padding:)(&v8, v0, v1, v2, v3, v4, v5, v6);
}

double sub_257525274@<D0>(_OWORD *a1@<X8>)
{
  MaxPool2D.init(from:)();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void MaxPool2D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003240);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25752541C();
  OUTLINED_FUNCTION_5_6();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
    sub_2574B3A28(&qword_26A001B08);
    OUTLINED_FUNCTION_1_43();
    OUTLINED_FUNCTION_1_43();
    OUTLINED_FUNCTION_1_43();
    uint64_t v4 = OUTLINED_FUNCTION_12_21();
    v5(v4);
    OUTLINED_FUNCTION_11_22();
  }
  OUTLINED_FUNCTION_7_1();
}

unint64_t sub_25752541C()
{
  unint64_t result = qword_26A003248;
  if (!qword_26A003248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003248);
  }
  return result;
}

uint64_t sub_257525468(void *a1)
{
  return MaxPool2D.encode(to:)(a1);
}

uint64_t MaxPool2D.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003250);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_24_14(a1);
  sub_25752541C();
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
  sub_2574B3A28(&qword_26A001B18);
  OUTLINED_FUNCTION_2_29();
  if (!v1)
  {
    OUTLINED_FUNCTION_2_29();
    OUTLINED_FUNCTION_2_29();
  }
  uint64_t v4 = OUTLINED_FUNCTION_13_19();
  return v5(v4);
}

uint64_t sub_2575255C8()
{
  return sub_257526274();
}

uint64_t sub_2575255E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_257573E24(*a1, *a2);
}

uint64_t sub_2575255F4()
{
  return sub_2576A369C(*v0);
}

uint64_t sub_2575255FC(uint64_t a1)
{
  return sub_25746F6E8(a1, *v1);
}

uint64_t sub_257525604(uint64_t a1)
{
  return sub_2575EEA34(a1, *v1);
}

uint64_t sub_25752560C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257526274();
  *a1 = result;
  return result;
}

uint64_t sub_257525644@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2575255C8();
  *a1 = result;
  return result;
}

uint64_t sub_25752566C(uint64_t a1)
{
  unint64_t v2 = sub_25752541C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575256A8(uint64_t a1)
{
  unint64_t v2 = sub_25752541C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AveragePool1D.stride.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AveragePool1D.padding.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t AveragePool1D.countIncludesPadding.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

NeuralNetworks::AveragePool1D __swiftcall AveragePool1D.init(kernelSize:stride:padding:countIncludesPadding:)(Swift::Int kernelSize, Swift::Int_optional stride, Swift::Int padding, Swift::Bool countIncludesPadding)
{
  if (stride.is_nil) {
    stride.value = kernelSize;
  }
  Swift::Bool v5 = countIncludesPadding;
  *(void *)&stride.is_nil = padding;
  result.stride = stride.value;
  LOBYTE(result.padding) = stride.is_nil;
  *(_DWORD *)((char *)&result.padding + 1) = *(_DWORD *)((char *)&v6 + 1);
  *(_WORD *)((char *)&result.padding + 5) = *(_WORD *)((char *)&v6 + 5);
  HIBYTE(result.padding) = HIBYTE(v6);
  result.kernelSize = kernelSize;
  result.countIncludesPadding = v5;
  return result;
}

uint64_t AveragePool1D.forward(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  Tensor.expandingShape(at:)();
  OUTLINED_FUNCTION_28_9();
  averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(v9, a2, 1, a3, 1, a4, 0, a5, v10);
  swift_release();
  Tensor.squeezingShape(at:)();
  return swift_release();
}

uint64_t sub_2575257D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x69536C656E72656BLL && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656469727473 && a2 == 0xE600000000000000;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x676E6964646170 && a2 == 0xE700000000000000;
      if (v7 || (sub_2576A8F60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000002576C9710)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = sub_2576A8F60();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_25752598C()
{
  return 4;
}

unint64_t sub_257525994(char a1)
{
  unint64_t result = 0x69536C656E72656BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656469727473;
      break;
    case 2:
      unint64_t result = 0x676E6964646170;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_257525A2C()
{
  return sub_257525994(*v0);
}

uint64_t sub_257525A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2575257D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257525A5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25752598C();
  *a1 = result;
  return result;
}

uint64_t sub_257525A84(uint64_t a1)
{
  unint64_t v2 = sub_257525C80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257525AC0(uint64_t a1)
{
  unint64_t v2 = sub_257525C80();
  return MEMORY[0x270FA00B8](a1, v2);
}

void AveragePool1D.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  v10[1] = v1;
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003258);
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_257525C80();
  sub_2576A9230();
  sub_2576A8E30();
  if (!v0)
  {
    OUTLINED_FUNCTION_17_18();
    sub_2576A8E30();
    sub_2576A8E30();
    sub_2576A8E10();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  OUTLINED_FUNCTION_7_1();
}

unint64_t sub_257525C80()
{
  unint64_t result = qword_26A003260;
  if (!qword_26A003260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003260);
  }
  return result;
}

void AveragePool1D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003268);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_24_14(v1);
  sub_257525C80();
  sub_2576A91F0();
  OUTLINED_FUNCTION_14_22();
  OUTLINED_FUNCTION_21_17();
  OUTLINED_FUNCTION_14_22();
  OUTLINED_FUNCTION_26_12();
  OUTLINED_FUNCTION_14_22();
  sub_2576A8D20();
  uint64_t v3 = OUTLINED_FUNCTION_104_1();
  v4(v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257525E34(uint64_t a1)
{
  return AveragePool1D.forward(_:)(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_257525E44(uint64_t a1@<X8>)
{
  AveragePool1D.init(from:)();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6 & 1;
  }
}

void sub_257525E7C()
{
}

uint64_t AveragePool2D.kernelSize.getter()
{
  return *(void *)v0;
}

uint64_t AveragePool2D.stride.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AveragePool2D.padding.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t AveragePool2D.countIncludesPadding.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall AveragePool2D.init(kernelSize:stride:padding:countIncludesPadding:)(NeuralNetworks::AveragePool2D *__return_ptr retstr, Swift::tuple_height_Int_width_Int kernelSize, Swift::tuple_Int_Int_optional stride, Swift::tuple_Int_Int padding, Swift::Bool countIncludesPadding)
{
  retstr->kernelSize = kernelSize;
  if (stride.is_nil) {
    Swift::Int width = kernelSize.width;
  }
  else {
    Swift::Int width = stride.value._1;
  }
  if (stride.is_nil) {
    Swift::Int height = kernelSize.height;
  }
  else {
    Swift::Int height = stride.value._0;
  }
  retstr->stride.y = height;
  retstr->stride.x = width;
  retstr->padding = (Swift::tuple_y_Int_x_Int)padding;
  retstr->countIncludesPadding = countIncludesPadding;
}

uint64_t AveragePool2D.forward(_:)()
{
  OUTLINED_FUNCTION_15_16();
  return averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(&v9, v1, v2, v3, v4, v5, v6, *(unsigned char *)(v0 + 48), v7);
}

double sub_257525F10@<D0>(uint64_t a1@<X8>)
{
  AveragePool2D.init(from:)();
  if (!v1)
  {
    *(_OWORD *)a1 = v4;
    *(_OWORD *)(a1 + 16) = v5;
    double result = *(double *)&v6;
    *(_OWORD *)(a1 + 32) = v6;
    *(unsigned char *)(a1 + 48) = v7;
  }
  return result;
}

void AveragePool2D.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003270);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2575260C8();
  OUTLINED_FUNCTION_5_6();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
    sub_2574B3A28(&qword_26A001B08);
    OUTLINED_FUNCTION_1_43();
    OUTLINED_FUNCTION_1_43();
    OUTLINED_FUNCTION_1_43();
    uint64_t v6 = OUTLINED_FUNCTION_12_21();
    v7(v6);
    OUTLINED_FUNCTION_11_22();
    *(unsigned char *)(v4 + 48) = 0;
  }
  OUTLINED_FUNCTION_7_1();
}

unint64_t sub_2575260C8()
{
  unint64_t result = qword_26A003278;
  if (!qword_26A003278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003278);
  }
  return result;
}

uint64_t sub_257526114(void *a1)
{
  return AveragePool2D.encode(to:)(a1);
}

uint64_t AveragePool2D.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003280);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_24_14(a1);
  sub_2575260C8();
  OUTLINED_FUNCTION_18_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001B00);
  sub_2574B3A28(&qword_26A001B18);
  OUTLINED_FUNCTION_2_29();
  if (!v1)
  {
    OUTLINED_FUNCTION_2_29();
    OUTLINED_FUNCTION_2_29();
  }
  uint64_t v4 = OUTLINED_FUNCTION_13_19();
  return v5(v4);
}

uint64_t sub_257526274()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_2575262BC()
{
  return sub_257526274();
}

uint64_t sub_2575262DC(char a1)
{
  if (!a1) {
    return 0x69536C656E72656BLL;
  }
  if (a1 == 1) {
    return 0x656469727473;
  }
  return 0x676E6964646170;
}

uint64_t sub_257526334@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257526274();
  *a1 = result;
  return result;
}

uint64_t sub_25752636C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2575262DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_257526398@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2575262BC();
  *a1 = result;
  return result;
}

uint64_t sub_2575263C0(uint64_t a1)
{
  unint64_t v2 = sub_2575260C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575263FC(uint64_t a1)
{
  unint64_t v2 = sub_2575260C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GlobalAveragePool1D.forward(_:)()
{
  return Tensor.mean(squeezingAxes:)(&unk_27065EB10);
}

uint64_t sub_25752647C(uint64_t a1)
{
  unint64_t v2 = sub_257526B58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575264B8(uint64_t a1)
{
  unint64_t v2 = sub_257526B58();
  return MEMORY[0x270FA00B8](a1, v2);
}

#error "257526524: call analysis failed (funcsize=12)"

uint64_t GlobalAveragePool1D.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_25_13(a1);
}

uint64_t sub_257526554(uint64_t a1)
{
  return GlobalMaxPool1D.init(from:)(a1);
}

uint64_t sub_25752656C()
{
  return GlobalAveragePool1D.encode(to:)();
}

uint64_t GlobalAveragePool2D.forward(_:)(uint64_t *a1)
{
  OUTLINED_FUNCTION_9_28(a1);
  if (!(!v3 & v2) || v1 == 3)
  {
    OUTLINED_FUNCTION_7_24();
    OUTLINED_FUNCTION_10_18();
  }
  uint64_t v4 = (uint64_t *)OUTLINED_FUNCTION_6_27();
  uint64_t v12 = averagePool2D(_:kernelSize:stride:padding:countIncludesPadding:)(v4, v5, v6, v7, v8, v9, v10, 0, v11);
  OUTLINED_FUNCTION_8_27(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
  sub_2576A7810();
  sub_25746EC14();
  OUTLINED_FUNCTION_18_17(v20);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257526648(uint64_t a1)
{
  unint64_t v2 = sub_257526BA4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_257526684(uint64_t a1)
{
  unint64_t v2 = sub_257526BA4();
  return MEMORY[0x270FA00B8](a1, v2);
}

#error "2575266F0: call analysis failed (funcsize=12)"

uint64_t GlobalAveragePool2D.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_25_13(a1);
}

uint64_t sub_257526720()
{
  return GlobalAveragePool2D.encode(to:)();
}

uint64_t GlobalMaxPool1D.forward(_:)()
{
  return Tensor.max(squeezingAxes:)(&unk_27065EAE8);
}

uint64_t sub_257526778()
{
  return 1;
}

uint64_t sub_257526798()
{
  return 0;
}

uint64_t sub_2575267A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257526778();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2575267D0(uint64_t a1)
{
  unint64_t v2 = sub_257526BF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_25752680C(uint64_t a1)
{
  unint64_t v2 = sub_257526BF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

#error "257526878: call analysis failed (funcsize=12)"

uint64_t GlobalMaxPool1D.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_25_13(a1);
}

uint64_t sub_2575268A8()
{
  return GlobalMaxPool1D.encode(to:)();
}

uint64_t GlobalMaxPool2D.forward(_:)(uint64_t *a1)
{
  OUTLINED_FUNCTION_9_28(a1);
  if (!(!v3 & v2) || v1 == 3)
  {
    OUTLINED_FUNCTION_7_24();
    OUTLINED_FUNCTION_10_18();
  }
  uint64_t v4 = (uint64_t *)OUTLINED_FUNCTION_6_27();
  uint64_t v12 = maxPool2D(_:kernelSize:stride:padding:)(v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_8_27(v12, v13, v14, v15, v16, v17, v18, v19, v22, v23);
  sub_2576A7810();
  sub_25746EC14();
  OUTLINED_FUNCTION_18_17(v20);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_257526980(uint64_t a1)
{
  unint64_t v2 = sub_257526C3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575269BC(uint64_t a1)
{
  unint64_t v2 = sub_257526C3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

#error "257526A28: call analysis failed (funcsize=12)"

void sub_257526A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v26);
  OUTLINED_FUNCTION_0_8();
  uint64_t v29 = v28;
  MEMORY[0x270FA5388](v30);
  id v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  v23();
  sub_2576A9230();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
  OUTLINED_FUNCTION_7_1();
}

uint64_t GlobalMaxPool2D.init(from:)(uint64_t a1)
{
  return OUTLINED_FUNCTION_25_13(a1);
}

uint64_t sub_257526B40()
{
  return GlobalMaxPool2D.encode(to:)();
}

unint64_t sub_257526B58()
{
  unint64_t result = qword_26A003290;
  if (!qword_26A003290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003290);
  }
  return result;
}

unint64_t sub_257526BA4()
{
  unint64_t result = qword_26A0032A0;
  if (!qword_26A0032A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032A0);
  }
  return result;
}

unint64_t sub_257526BF0()
{
  unint64_t result = qword_26A0032B0;
  if (!qword_26A0032B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032B0);
  }
  return result;
}

unint64_t sub_257526C3C()
{
  unint64_t result = qword_26A0032C0;
  if (!qword_26A0032C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032C0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MaxPool1D(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MaxPool1D(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for MaxPool1D()
{
}

void type metadata accessor for MaxPool2D()
{
}

uint64_t getEnumTagSinglePayload for AveragePool1D(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragePool1D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for AveragePool1D()
{
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for AveragePool2D(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragePool2D(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

void type metadata accessor for AveragePool2D()
{
}

void type metadata accessor for GlobalAveragePool1D()
{
}

void type metadata accessor for GlobalAveragePool2D()
{
}

void type metadata accessor for GlobalMaxPool1D()
{
}

void type metadata accessor for GlobalMaxPool2D()
{
}

ValueMetadata *type metadata accessor for GlobalMaxPool2D.CodingKeys()
{
  return &type metadata for GlobalMaxPool2D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalMaxPool1D.CodingKeys()
{
  return &type metadata for GlobalMaxPool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalAveragePool2D.CodingKeys()
{
  return &type metadata for GlobalAveragePool2D.CodingKeys;
}

ValueMetadata *type metadata accessor for GlobalAveragePool1D.CodingKeys()
{
  return &type metadata for GlobalAveragePool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for AveragePool2D.CodingKeys()
{
  return &type metadata for AveragePool2D.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AveragePool1D.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257526FA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragePool1D.CodingKeys()
{
  return &type metadata for AveragePool1D.CodingKeys;
}

ValueMetadata *type metadata accessor for MaxPool2D.CodingKeys()
{
  return &type metadata for MaxPool2D.CodingKeys;
}

unsigned char *_s14NeuralNetworks13AveragePool2DV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2575270B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaxPool1D.CodingKeys()
{
  return &type metadata for MaxPool1D.CodingKeys;
}

unint64_t sub_2575270F4()
{
  unint64_t result = qword_26A0032C8;
  if (!qword_26A0032C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032C8);
  }
  return result;
}

unint64_t sub_257527144()
{
  unint64_t result = qword_26A0032D0;
  if (!qword_26A0032D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032D0);
  }
  return result;
}

unint64_t sub_257527194()
{
  unint64_t result = qword_26A0032D8;
  if (!qword_26A0032D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032D8);
  }
  return result;
}

unint64_t sub_2575271E4()
{
  unint64_t result = qword_26A0032E0;
  if (!qword_26A0032E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032E0);
  }
  return result;
}

unint64_t sub_257527234()
{
  unint64_t result = qword_26A0032E8;
  if (!qword_26A0032E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032E8);
  }
  return result;
}

unint64_t sub_257527284()
{
  unint64_t result = qword_26A0032F0;
  if (!qword_26A0032F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032F0);
  }
  return result;
}

unint64_t sub_2575272D4()
{
  unint64_t result = qword_26A0032F8;
  if (!qword_26A0032F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0032F8);
  }
  return result;
}

unint64_t sub_257527324()
{
  unint64_t result = qword_26A003300;
  if (!qword_26A003300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003300);
  }
  return result;
}

unint64_t sub_257527374()
{
  unint64_t result = qword_26A003308;
  if (!qword_26A003308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003308);
  }
  return result;
}

unint64_t sub_2575273C4()
{
  unint64_t result = qword_26A003310;
  if (!qword_26A003310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003310);
  }
  return result;
}

unint64_t sub_257527414()
{
  unint64_t result = qword_26A003318;
  if (!qword_26A003318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003318);
  }
  return result;
}

unint64_t sub_257527464()
{
  unint64_t result = qword_26A003320;
  if (!qword_26A003320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003320);
  }
  return result;
}

unint64_t sub_2575274B4()
{
  unint64_t result = qword_26A003328;
  if (!qword_26A003328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003328);
  }
  return result;
}

unint64_t sub_257527504()
{
  unint64_t result = qword_26A003330;
  if (!qword_26A003330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003330);
  }
  return result;
}

unint64_t sub_257527554()
{
  unint64_t result = qword_26A003338;
  if (!qword_26A003338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003338);
  }
  return result;
}

unint64_t sub_2575275A4()
{
  unint64_t result = qword_26A003340;
  if (!qword_26A003340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003340);
  }
  return result;
}

unint64_t sub_2575275F4()
{
  unint64_t result = qword_26A003348;
  if (!qword_26A003348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003348);
  }
  return result;
}

unint64_t sub_257527644()
{
  unint64_t result = qword_26A003350;
  if (!qword_26A003350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003350);
  }
  return result;
}

unint64_t sub_257527694()
{
  unint64_t result = qword_26A003358;
  if (!qword_26A003358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003358);
  }
  return result;
}

unint64_t sub_2575276E4()
{
  unint64_t result = qword_26A003360;
  if (!qword_26A003360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003360);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_43()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_6_27()
{
  return v0 - 40;
}

uint64_t OUTLINED_FUNCTION_7_24()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_8_27(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return *(void *)(*(void *)(a10 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_9_28(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *(void *)(v1 - 40) = *a1;
  return *(void *)(*(void *)(v2 + 16) + 152);
}

void OUTLINED_FUNCTION_10_18()
{
  sub_25746BF88();
}

__n128 OUTLINED_FUNCTION_11_22()
{
  *(_OWORD *)(v2 - 144) = *(_OWORD *)(v2 - 96);
  __swift_destroy_boxed_opaque_existential_1(v0);
  long long v3 = *(_OWORD *)(v2 - 128);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v1 + 16) = v3;
  __n128 result = *(__n128 *)(v2 - 144);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_22()
{
  return sub_2576A8D40();
}

uint64_t OUTLINED_FUNCTION_16_20()
{
  return sub_2576A8D40();
}

uint64_t OUTLINED_FUNCTION_17_18()
{
  *(unsigned char *)(v0 - 66) = 1;
  return *(void *)(v0 - 88);
}

uint64_t OUTLINED_FUNCTION_18_17(uint64_t a1)
{
  *(void *)(v2 - 40) = a1;
  return Tensor.reshaped(to:)((uint64_t *)(v2 - 40), v1);
}

uint64_t OUTLINED_FUNCTION_20_17()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_21_17()
{
  *(unsigned char *)(v0 - 66) = 1;
  return v0 - 66;
}

void *OUTLINED_FUNCTION_24_14(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_25_13(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t OUTLINED_FUNCTION_26_12()
{
  *(unsigned char *)(v0 - 67) = 2;
  return v0 - 67;
}

__n128 *sub_2575279D4(void *a1, id *a2)
{
  switch(*(unsigned char *)(v2 + 152))
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v10 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v19 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_subtractionWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v11 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v26 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_multiplicationWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v12 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v27 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_divisionWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 4:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v13 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v28 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_powerWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 5:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v14 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v29 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_maximumWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v15 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v30 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_minimumWithPrimaryTensor_secondaryTensor_name_;
      goto LABEL_50;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v16 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v31 = a2[5];
      }
      uint64_t v20 = OUTLINED_FUNCTION_1_35();
      uint64_t v25 = &selRef_moduloWithPrimaryTensor_secondaryTensor_name_;
LABEL_50:
      id v18 = OUTLINED_FUNCTION_6_28(v20, v21, v22, v23, v24, (SEL *)v25);
      break;
    default:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v8, (__n128)xmmword_2576AC2A0);
      if (v5) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v9 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v5) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v17 = a2[5];
      }
      OUTLINED_FUNCTION_1_35();
      id v18 = sub_2574A4718((uint64_t)v4, (uint64_t)a2, v3, v2, a1);
      break;
  }
  unint64_t v32 = (unint64_t)v18;

  v8[2].n128_u64[0] = v32;
  sub_2576A7E20();
  return v8;
}

__n128 *sub_257527D6C(void *a1, id *a2)
{
  return sub_2575279D4(a1, a2);
}

uint64_t sub_257527D84(void *a1, uint64_t a2)
{
  id v6 = sub_257527E2C(a1, a2);
  if (!v3)
  {
    uint64_t v7 = v6;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    uint64_t v4 = OUTLINED_FUNCTION_1_4();
    *(_OWORD *)(v4 + 16) = xmmword_2576AC2A0;
    uint64_t v9 = *(void *)(v2 + 24);
    uint64_t v8 = *(void *)(v2 + 32);
    sub_2576A7810();
    *(void *)(v4 + 32) = sub_25752849C((uint64_t)v7, 2147483656, v9, v8, a1);
    sub_2576A7E20();
  }
  return v4;
}

id sub_257527E2C(void *a1, uint64_t a2)
{
  sub_2576A7810();
  sub_2576A7B00();
  swift_bridgeObjectRelease();
  switch(*(unsigned char *)(v2 + 130))
  {
    case 1:
      unint64_t v9 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v10 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v10;
      sub_257582858(1, v9 == 0, a2);
      if (v9) {
        id v11 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v11 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v11;
      uint64_t v25 = &selRef_greaterThanWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 2:
      unint64_t v12 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v13 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v13;
      sub_257582858(1, v12 == 0, a2);
      if (v12) {
        id v14 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v14 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v14;
      uint64_t v25 = &selRef_greaterThanOrEqualToWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 3:
      unint64_t v15 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v16 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v16 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v16;
      sub_257582858(1, v15 == 0, a2);
      if (v15) {
        id v17 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v17 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v17;
      uint64_t v25 = &selRef_lessThanWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 4:
      unint64_t v18 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v19 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v19;
      sub_257582858(1, v18 == 0, a2);
      if (v18) {
        id v20 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v20 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v20;
      uint64_t v25 = &selRef_lessThanOrEqualToWithPrimaryTensor_secondaryTensor_name_;
      break;
    case 5:
      unint64_t v21 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v22 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v22 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v22;
      sub_257582858(1, v21 == 0, a2);
      if (v21) {
        id v23 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v23 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v23;
      uint64_t v25 = &selRef_notEqualWithPrimaryTensor_secondaryTensor_name_;
      break;
    default:
      unint64_t v5 = a2 & 0xC000000000000001;
      sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
      if ((a2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x25A2B8DB0](0, a2);
      }
      else {
        id v6 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v6;
      sub_257582858(1, v5 == 0, a2);
      if (v5) {
        id v8 = (id)MEMORY[0x25A2B8DB0](1, a2);
      }
      else {
        id v8 = *(id *)(a2 + 40);
      }
      uint64_t v24 = v8;
      uint64_t v25 = &selRef_equalWithPrimaryTensor_secondaryTensor_name_;
      break;
  }
  id v26 = sub_257479CB4((uint64_t)v7, (uint64_t)v24, 1600483952, v28, a1, (SEL *)v25);

  return v26;
}

uint64_t sub_2575281CC(void *a1, uint64_t a2)
{
  return sub_257527D84(a1, a2);
}

__n128 *sub_2575281E4(uint64_t a1, id *a2)
{
  if (*(unsigned char *)(v2 + 130))
  {
    if (*(unsigned char *)(v2 + 130) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      id v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v6, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v7 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v4) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v10 = a2[5];
      }
      uint64_t v11 = OUTLINED_FUNCTION_1_35();
      id v16 = &selRef_logicalORWithPrimaryTensor_secondaryTensor_name_;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      id v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_0_40(v6, (__n128)xmmword_2576AC2A0);
      if (v4) {
        OUTLINED_FUNCTION_2_26();
      }
      else {
        id v9 = a2[4];
      }
      OUTLINED_FUNCTION_1_44();
      if (v4) {
        OUTLINED_FUNCTION_5_27();
      }
      else {
        id v18 = a2[5];
      }
      uint64_t v11 = OUTLINED_FUNCTION_1_35();
      id v16 = &selRef_logicalXORWithPrimaryTensor_secondaryTensor_name_;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
    id v6 = (__n128 *)OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_0_40(v6, (__n128)xmmword_2576AC2A0);
    if (v4) {
      OUTLINED_FUNCTION_2_26();
    }
    else {
      id v8 = a2[4];
    }
    OUTLINED_FUNCTION_1_44();
    if (v4) {
      OUTLINED_FUNCTION_5_27();
    }
    else {
      id v17 = a2[5];
    }
    uint64_t v11 = OUTLINED_FUNCTION_1_35();
    id v16 = &selRef_logicalANDWithPrimaryTensor_secondaryTensor_name_;
  }
  id v19 = OUTLINED_FUNCTION_6_28(v11, v12, v13, v14, v15, (SEL *)v16);

  v6[2].n128_u64[0] = (unint64_t)v19;
  sub_2576A7E20();
  return v6;
}

__n128 *sub_257528364(uint64_t a1, id *a2)
{
  return sub_2575281E4(a1, a2);
}

uint64_t sub_25752837C(uint64_t a1)
{
  uint64_t result = sub_257528448(&qword_26A001D50, (void (*)(uint64_t))type metadata accessor for BinaryLogicalOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2575283C0(uint64_t a1)
{
  uint64_t result = sub_257528448((unint64_t *)&qword_26A001D48, (void (*)(uint64_t))type metadata accessor for BinaryComparisonOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257528404(uint64_t a1)
{
  uint64_t result = sub_257528448((unint64_t *)&qword_26A003368, (void (*)(uint64_t))type metadata accessor for BinaryArithmeticOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257528448(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_25752849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(a5, sel_castTensor_toType_name_, a1, a2, v8);

  return v9;
}

id sub_257528520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_257479CB4(a1, a2, a3, a4, a5, (SEL *)&selRef_subtractionWithPrimaryTensor_secondaryTensor_name_);
}

uint64_t OUTLINED_FUNCTION_0_40(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_257582858(0, (v2 & 0xC000000000000001) == 0, v2);
}

uint64_t OUTLINED_FUNCTION_1_44()
{
  return sub_257582858(1, v1 == 0, v0);
}

void OUTLINED_FUNCTION_5_27()
{
  JUMPOUT(0x25A2B8DB0);
}

id OUTLINED_FUNCTION_6_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  return sub_257479CB4(v10, v9, v7, v6, v8, a6);
}

uint64_t sub_2575285B0()
{
  uint64_t result = 2;
  switch(*v0)
  {
    case 1:
      uint64_t result = 6;
      break;
    case 2:
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 9;
      break;
    case 5:
      uint64_t result = 10;
      break;
    case 6:
      uint64_t result = 11;
      break;
    case 7:
      uint64_t result = 12;
      break;
    case 8:
      return result;
    case 9:
      sub_2576A8B60();
      __break(1u);
      JUMPOUT(0x25752868CLL);
    case 0xA:
      uint64_t result = 3;
      break;
    case 0xB:
      uint64_t result = 4;
      break;
    case 0xC:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 5;
      break;
  }
  return result;
}

void sub_2575286C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_2574E7194();
    unint64_t v5 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v7 = *v5++;
      unint64_t v6 = v7;
      if ((v7 & 0x8000000000000000) != 0) {
        break;
      }
      if (v6 >= *(void *)(a2 + 16)) {
        goto LABEL_10;
      }
      uint64_t v8 = a2 + 32 + 32 * v6;
      uint64_t v9 = *(void *)(v8 + 16);
      uint64_t v10 = *(void *)(v8 + 24);
      unint64_t v12 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      sub_2576A7810();
      if (v12 >= v11 >> 1) {
        sub_2574E7194();
      }
      *(void *)(v14 + 16) = v12 + 1;
      uint64_t v13 = v14 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
      if (!--v3) {
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_2575287DC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    OUTLINED_FUNCTION_55_3();
    OUTLINED_FUNCTION_12_22();
    if (v2)
    {
      OUTLINED_FUNCTION_51_5();
      if (!v3)
      {
        OUTLINED_FUNCTION_3_29();
        if (v4)
        {
          do
          {
            OUTLINED_FUNCTION_51_5();
            if (v3) {
              break;
            }
            OUTLINED_FUNCTION_3_29();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

void sub_257528848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_37_4();
    sub_2576A78E0();
    sub_2576A9100();
    OUTLINED_FUNCTION_2_30();
    if (v4)
    {
      OUTLINED_FUNCTION_19_17();
      BOOL v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_18_18() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_45();
        if (v7)
        {
          do
          {
            OUTLINED_FUNCTION_19_17();
            if (v6 && v8 == v3) {
              break;
            }
            if (OUTLINED_FUNCTION_18_18()) {
              break;
            }
            OUTLINED_FUNCTION_1_45();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
}

void sub_25752890C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_33_8();
    OUTLINED_FUNCTION_37_4();
    sub_2576A78E0();
    sub_2576A9100();
    OUTLINED_FUNCTION_2_30();
    if (v4)
    {
      OUTLINED_FUNCTION_19_17();
      BOOL v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_18_18() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_45();
        if (v7)
        {
          do
          {
            OUTLINED_FUNCTION_19_17();
            if (v6 && v8 == v3) {
              break;
            }
            if (OUTLINED_FUNCTION_18_18()) {
              break;
            }
            OUTLINED_FUNCTION_1_45();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
}

void sub_2575289D0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    OUTLINED_FUNCTION_55_3();
    OUTLINED_FUNCTION_12_22();
    if (v2)
    {
      OUTLINED_FUNCTION_51_5();
      if (!v3)
      {
        OUTLINED_FUNCTION_3_29();
        if (v4)
        {
          do
          {
            OUTLINED_FUNCTION_51_5();
            if (v3) {
              break;
            }
            OUTLINED_FUNCTION_3_29();
          }
          while ((v5 & 1) != 0);
        }
      }
    }
  }
}

void sub_257528A3C()
{
  uint64_t v1 = v0;
  char v2 = (void *)MEMORY[0x25A2BA130]();
  sub_25752C3A8(v1, &v3);
}

void sub_257528AA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void (*v52)(id *__return_ptr, void (*)(uint64_t@<X0>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  SEL v57;
  uint64_t v58;
  id v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  SEL v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  SEL v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void v75[8];
  id v76;
  unsigned char v77[8];
  id v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v12 = v4 + 48;
  OUTLINED_FUNCTION_56_3();
  sub_2576A7810();
  sub_2575E8610((uint64_t)v77, a2, (uint64_t)a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  switch(v11)
  {
    case 1:
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v9);
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      if (v82)
      {
        id v16 = 0;
LABEL_31:
        uint64_t v62 = OUTLINED_FUNCTION_53_3(Strong, sel_constantScalar_dataType_name_location_, (uint64_t)v18, 7);
LABEL_42:

LABEL_43:
        goto LABEL_44;
      }
      OUTLINED_FUNCTION_13_20();
      sub_2574A4924(0, &qword_26A003398);
      uint64_t v60 = OUTLINED_FUNCTION_7_25();
      if (((v12 | a4) & 0x8000000000000000) == 0)
      {
        id v16 = OUTLINED_FUNCTION_4_30(v60, v61);
        goto LABEL_31;
      }
      goto LABEL_49;
    case 2:
      _H8 = v9;
      uint64_t v14 = (void *)swift_unknownObjectUnownedLoadStrong();
      __asm { FCVT            S8, H8 }
      id v25 = objc_allocWithZone(NSNumber);
      LODWORD(v26) = _S8;
      id v15 = objc_msgSend(v25, sel_initWithFloat_, v26);
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      if (v82)
      {
        id v16 = 0;
LABEL_34:
        uint64_t v65 = (void *)OUTLINED_FUNCTION_46_5();
        uint64_t v59 = OUTLINED_FUNCTION_53_3(v65, v66, v67, 2);
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_13_20();
      sub_2574A4924(0, &qword_26A003398);
      uint64_t v63 = OUTLINED_FUNCTION_7_25();
      if (((v12 | a4) & 0x8000000000000000) == 0)
      {
        id v16 = OUTLINED_FUNCTION_4_30(v63, v64);
        goto LABEL_34;
      }
      goto LABEL_50;
    case 3:
      int v27 = v9;
      uint64_t v14 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v28 = objc_allocWithZone(NSNumber);
      LODWORD(v29) = v27;
      id v15 = objc_msgSend(v28, sel_initWithFloat_, v29);
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      if (v82)
      {
        id v16 = 0;
LABEL_37:
        uint64_t v70 = (void *)OUTLINED_FUNCTION_46_5();
        uint64_t v59 = OUTLINED_FUNCTION_53_3(v70, v71, v72, 3);
        goto LABEL_38;
      }
      OUTLINED_FUNCTION_13_20();
      sub_2574A4924(0, &qword_26A003398);
      uint64_t v68 = OUTLINED_FUNCTION_7_25();
      if (((v12 | a4) & 0x8000000000000000) == 0)
      {
        id v16 = OUTLINED_FUNCTION_4_30(v68, v69);
        goto LABEL_37;
      }
      goto LABEL_51;
    case 4:
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      id v18 = (id)sub_2576A79C0();
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      if (v82)
      {
        id v16 = 0;
LABEL_41:
        uint64_t v62 = objc_msgSend(Strong, sel_constantScalar_name_location_, v18, a3, v16);
        goto LABEL_42;
      }
      OUTLINED_FUNCTION_13_20();
      sub_2574A4924(0, &qword_26A003398);
      uint64_t v73 = OUTLINED_FUNCTION_7_25();
      if (((v12 | a4) & 0x8000000000000000) == 0)
      {
        id v16 = OUTLINED_FUNCTION_4_30(v73, v74);
        goto LABEL_41;
      }
      goto LABEL_52;
    case 5:
      id v30 = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_25746D770(v9);
      sub_2574A4924(0, (unint64_t *)&qword_26A001870);
      id v31 = (void *)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_2576AC2A0;
      OUTLINED_FUNCTION_30_10((uint64_t)objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v9 + 16)));
      id v18 = (id)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      id v16 = 0;
      if (v82) {
        goto LABEL_15;
      }
      uint64_t v32 = v80;
      uint64_t v33 = v81;
      sub_2574A4924(0, &qword_26A003398);
      unint64_t v34 = OUTLINED_FUNCTION_28_10();
      if (((v33 | v32) & 0x8000000000000000) == 0)
      {
        id v16 = OUTLINED_FUNCTION_4_30(v34, v35);
LABEL_15:
        id v36 = OUTLINED_FUNCTION_37_5(v30, sel_constantTensorWithScalars_shape_dataType_name_location_, (uint64_t)v31);
LABEL_20:

        goto LABEL_43;
      }
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    case 6:
      id v30 = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_25746DE64(v9);
      sub_2574A4924(0, (unint64_t *)&qword_26A001870);
      id v31 = (void *)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_2576AC2A0;
      OUTLINED_FUNCTION_30_10((uint64_t)objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v9 + 16)));
      id v18 = (id)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      id v16 = 0;
      if (v82) {
        goto LABEL_19;
      }
      uint64_t v37 = v80;
      uint64_t v38 = v81;
      sub_2574A4924(0, &qword_26A003398);
      unint64_t v39 = OUTLINED_FUNCTION_28_10();
      if ((v38 | v37) < 0) {
        goto LABEL_53;
      }
      id v16 = OUTLINED_FUNCTION_4_30(v39, v40);
LABEL_19:
      id v36 = objc_msgSend(v30, sel_constantTensorWithScalars_shape_dataType_name_location_, v31, v18, 3, a3, v16);
      goto LABEL_20;
    case 7:
      uint64_t v76 = (id)swift_unknownObjectUnownedLoadStrong();
      uint64_t v41 = sub_2576A7810();
      sub_25746D770(v41);
      sub_2574A4924(0, (unint64_t *)&qword_26A001870);
      uint64_t v42 = (void *)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_2576AC2A0;
      uint64_t v43 = *(void *)(v9 + 16);
      sub_257476E0C(v9, v10, 7);
      OUTLINED_FUNCTION_30_10((uint64_t)objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v43));
      id v18 = (id)OUTLINED_FUNCTION_24_15();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      id v16 = 0;
      if (v82) {
        goto LABEL_24;
      }
      uint64_t v44 = v80;
      uint64_t v45 = v81;
      char v46 = v79;
      sub_2574A4924(0, &qword_26A003398);
      unint64_t v47 = OUTLINED_FUNCTION_26_13();
      unint64_t v49 = sub_2575BC408(v47, v48, v46);
      if ((v45 | v44) < 0) {
        goto LABEL_47;
      }
      id v16 = OUTLINED_FUNCTION_4_30(v49, v50);
LABEL_24:

      goto LABEL_43;
    case 8:
      uint64_t ObjectType = swift_getObjectType();
      MEMORY[0x270FA5388](ObjectType);
      v75[2] = v5;
      v75[3] = v9;
      v75[4] = v10;
      v75[5] = a2;
      v75[6] = a3;
      v75[7] = a4;
      uint64_t v52 = *(void (**)(id *__return_ptr, void (*)(uint64_t@<X0>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t))(v10 + 64);
      uint64_t v53 = sub_2574A4924(0, &qword_26A0033A0);
      swift_unknownObjectRetain();
      v52(&v78, sub_25752D2F0, v75, v53, ObjectType, v10);

      sub_257476E0C(v9, v10, 8);
      return;
    default:
      uint64_t v13 = v9 & 1;
      uint64_t v14 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v13);
      OUTLINED_FUNCTION_11_23();
      OUTLINED_FUNCTION_5_28();
      if (v82)
      {
        id v16 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_13_20();
        sub_2574A4924(0, &qword_26A003398);
        uint64_t v54 = OUTLINED_FUNCTION_7_25();
        if ((v13 | a4) < 0)
        {
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          JUMPOUT(0x2575292C4);
        }
        id v16 = OUTLINED_FUNCTION_4_30(v54, v55);
      }
      uint64_t v56 = (void *)OUTLINED_FUNCTION_46_5();
      uint64_t v59 = OUTLINED_FUNCTION_53_3(v56, v57, v58, 0);
LABEL_38:

LABEL_44:
      return;
  }
}

id sub_2575292E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  char v7 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithFilename_line_column_, v7, a3, a4);

  return v8;
}

uint64_t sub_257529374@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_30_4();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4) {
    sub_25747C54C(v3 + 240 * v4 - 208, (uint64_t)v7);
  }
  else {
    bzero(v7, 0xECuLL);
  }
  sub_25752D228((uint64_t)v7, (uint64_t)v6);
  if (v6[0])
  {
    memcpy(a1, v6, 0xECuLL);
    return sub_25752D290((uint64_t)v7);
  }
  else
  {
    uint64_t result = sub_25752D290((uint64_t)v6);
    __break(1u);
  }
  return result;
}

uint64_t sub_257529410()
{
  uint64_t result = sub_2574872FC((uint64_t)&unk_27065CF18);
  qword_26A003370 = result;
  return result;
}

uint64_t sub_257529438(uint64_t a1, void *a2, char a3, char a4)
{
  uint64_t v9 = MEMORY[0x263F8EE88];
  *(void *)(v4 + 32) = 0;
  *(void *)(v4 + 40) = v9;
  *(void *)(v4 + 48) = v9;
  uint64_t v10 = MEMORY[0x263F8EE78];
  *(void *)(v4 + 64) = sub_2576A77E0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EF0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2576ABB10;
  sub_25747C54C(a1, v11 + 32);
  *(void *)(v4 + 16) = v11;
  sub_25747F1AC(a1);
  *(void *)(v4 + 56) = v10;
  swift_unknownObjectUnownedInit();

  *(unsigned char *)(v4 + 72) = a3;
  *(unsigned char *)(v4 + 73) = a4;
  return v4;
}

uint64_t sub_257529518()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectUnownedDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257529568()
{
  sub_257529518();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MILFunctionBuilder()
{
  return self;
}

unint64_t sub_2575295C0()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_30_4();
  uint64_t v2 = sub_25768B684(*(void *)(v0 + 56));
  if (v2
    && (uint64_t v3 = v2,
        uint64_t v4 = swift_retain(),
        unint64_t v5 = sub_2574BB184(v4, 0, 0, v3),
        uint64_t v7 = v6,
        swift_release(),
        swift_bridgeObjectRelease(),
        v7))
  {
    if (*(unsigned char *)(v1 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_41();
      sub_2576A7B30();
      if (v8)
      {
        OUTLINED_FUNCTION_10_19();
        do
        {
          OUTLINED_FUNCTION_36_7();
          if (!v9) {
            swift_once();
          }
          OUTLINED_FUNCTION_14_23();
          if ((v10 & 1) == 0) {
            OUTLINED_FUNCTION_21_18();
          }
          swift_bridgeObjectRelease();
          sub_2576A7B30();
          OUTLINED_FUNCTION_50_4();
        }
        while (v11);
        unint64_t v5 = 0;
      }
      else
      {
        unint64_t v5 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_257529374(v28);
    uint64_t v12 = v29;
    uint64_t v13 = v30;
    uint64_t v14 = sub_2576136DC();
    unint64_t v5 = sub_2574A779C(v14, v15, v12, v13);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17)
    {
      uint64_t v18 = v31;
      uint64_t v19 = v32;
      uint64_t v20 = sub_2576136DC();
      unint64_t v5 = sub_2574A779C(v20, v21, v18, v19);
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      if (!v23) {
        unint64_t v5 = sub_2576136DC();
      }
    }
    sub_25747F1AC((uint64_t)v28);
    if (*(unsigned char *)(v1 + 73))
    {
      OUTLINED_FUNCTION_0_41();
      sub_2576A7B30();
      if (v24)
      {
        OUTLINED_FUNCTION_10_19();
        do
        {
          OUTLINED_FUNCTION_36_7();
          if (!v9) {
            swift_once();
          }
          OUTLINED_FUNCTION_14_23();
          if ((v25 & 1) == 0) {
            OUTLINED_FUNCTION_21_18();
          }
          swift_bridgeObjectRelease();
          sub_2576A7B30();
          OUTLINED_FUNCTION_50_4();
        }
        while (v26);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v5;
}

uint64_t sub_257529824(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 64);
  if (*(void *)(v5 + 16))
  {
    sub_2576A7810();
    unint64_t v6 = sub_25747588C(a1, a2);
    if (v7) {
      uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 8 * v6);
    }
    else {
      uint64_t v8 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = 0;
  }
  uint64_t result = swift_endAccess();
  if (__OFADD__(v8, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_56_3();
    sub_2576A7810();
    OUTLINED_FUNCTION_37_4();
    sub_2575CDE04(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_2576A7810();
    sub_2576A7B00();
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    return a1;
  }
  return result;
}

void sub_257529954(uint64_t a1)
{
  if (!sub_257613788()
    || (uint64_t v3 = v2,
        uint64_t ObjectType = swift_getObjectType(),
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 48))(v19, ObjectType, v3),
        swift_unknownObjectRelease(),
        sub_257469238((uint64_t)v19, (uint64_t)&v20),
        (v24 & 1) != 0))
  {
    id v5 = 0;
LABEL_6:
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_25746D770(*(void *)(a1 + 152));
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    uint64_t v14 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
    sub_2575285B0();
    sub_2575295C0();
    uint64_t v15 = (void *)sub_2576A79C0();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)OUTLINED_FUNCTION_46_5();
    id v18 = [v16 v17];

    return;
  }
  uint64_t v6 = v22;
  uint64_t v7 = v23;
  char v8 = v21;
  sub_2574A4924(0, &qword_26A003398);
  unint64_t v9 = OUTLINED_FUNCTION_26_13();
  unint64_t v11 = sub_2575BC408(v9, v10, v8);
  if (((v7 | v6) & 0x8000000000000000) == 0)
  {
    id v5 = sub_2575292E8(v11, v12, v6, v7);
    goto LABEL_6;
  }
  __break(1u);
}

void sub_257529AFC(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  OUTLINED_FUNCTION_30_4();
  uint64_t v11 = *(void *)(v4 + 48);
  sub_2576A7810();
  sub_257528848(a2, (uint64_t)a3, v11);
  char v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    v14[0] = v8;
    v14[1] = v9;
    char v15 = v10;
    sub_257528AA0((uint64_t)v14, a2, a3, a4);
  }
}

void sub_257529BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_56_3();
  sub_2576A7810();
  sub_2575E8610((uint64_t)&v22, a2, a3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  char v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
  char v13 = (void *)sub_2576A79C0();
  sub_257469238(a4, (uint64_t)v23);
  id v14 = 0;
  if (v27) {
    goto LABEL_4;
  }
  unint64_t v15 = v23[0];
  uint64_t v16 = v23[1];
  uint64_t v17 = v25;
  uint64_t v18 = v26;
  char v19 = v24;
  sub_2574A4924(0, &qword_26A003398);
  unint64_t v20 = sub_2575BC408(v15, v16, v19);
  if (((v18 | v17) & 0x8000000000000000) == 0)
  {
    id v14 = sub_2575292E8(v20, v21, v17, v18);
LABEL_4:

    return;
  }
  __break(1u);
}

void sub_257529D28(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X7>, void *a4@<X8>)
{
  uint64_t v26 = (void *)a3;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v21, ObjectType, a2);
  sub_25746D770(v21[0]);
  swift_bridgeObjectRelease();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v8 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v21, ObjectType, a2);
  uint64_t v9 = sub_2575285B0();
  char v10 = (void *)sub_2576A79C0();
  sub_257469238((uint64_t)v26, (uint64_t)v21);
  id v11 = 0;
  if (v25) {
    goto LABEL_4;
  }
  uint64_t v26 = Strong;
  unint64_t v12 = v21[0];
  uint64_t v13 = v21[1];
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v16 = v22;
  sub_2574A4924(0, &qword_26A003398);
  unint64_t v17 = sub_2575BC408(v12, v13, v16);
  if (((v15 | v14) & 0x8000000000000000) == 0)
  {
    id v11 = sub_2575292E8(v17, v18, v14, v15);
    uint64_t Strong = v26;
LABEL_4:
    id v19 = objc_msgSend(Strong, sel_constantTensorWithBytes_shape_dataType_name_location_, a1, v8, v9, v10, v11);

    *a4 = v19;
    return;
  }
  __break(1u);
}

void sub_257529F0C(unsigned char *a1, uint64_t a2, void *a3, float _S0)
{
  switch(*a1)
  {
    case 1:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_55;
      }
      if (v22 <= -32769.0) {
        goto LABEL_63;
      }
      if (v22 >= 32768.0) {
        goto LABEL_71;
      }
      int v23 = (int)v22;
      uint64_t v24 = MEMORY[0x263F8E4F0];
      char v25 = &protocol witness table for Int16;
      goto LABEL_37;
    case 2:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_51;
      }
      if (v15 <= -2147500000.0) {
        goto LABEL_60;
      }
      if (v15 >= 2147500000.0) {
        goto LABEL_68;
      }
      uint64_t v32 = (int)v15;
      uint64_t v33 = 0;
      char v16 = 1;
      char v34 = 1;
      long long v35 = 0u;
      long long v36 = 0u;
      memset(v37, 0, sizeof(v37));
LABEL_46:
      char v38 = v16;
      sub_257529AFC(&v32, a2, a3, (uint64_t)&v35);
      return;
    case 3:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_53;
      }
      if (v17 <= -9.2234e18) {
        goto LABEL_61;
      }
      if (v17 >= 9.2234e18) {
        goto LABEL_69;
      }
      uint64_t v18 = (uint64_t)v17;
      uint64_t v19 = MEMORY[0x263F8E5C0];
      unint64_t v20 = &protocol witness table for Int64;
      goto LABEL_27;
    case 4:
      OUTLINED_FUNCTION_6_29();
      if (_ZF)
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
LABEL_74:
        *(void *)&long long v35 = 0;
        *((void *)&v35 + 1) = 0xE000000000000000;
        sub_2576A8730();
        sub_2576A7B00();
        LOBYTE(v32) = 9;
        sub_2576A8A30();
        sub_2576A7B00();
        char v39 = 9;
        sub_25746BE6C();
      }
      OUTLINED_FUNCTION_42_4();
      if (_NF ^ _VF | _ZF) {
        goto LABEL_59;
      }
      OUTLINED_FUNCTION_35_7();
      if (!_NF) {
        goto LABEL_67;
      }
      int v10 = (int)v13;
      uint64_t v11 = MEMORY[0x263F8E778];
      unint64_t v12 = &protocol witness table for UInt8;
LABEL_12:
      *((void *)&v36 + 1) = v11;
      *(void *)uint64_t v37 = v12;
      LOBYTE(v35) = v10;
LABEL_48:
      sub_25751BDA4((uint64_t)&v35, (uint64_t)&v32);
      v30[0] = v32;
      v30[1] = v33;
      char v31 = v34;
      OUTLINED_FUNCTION_29_10();
      char v38 = v29;
      sub_257529AFC(v30, a2, a3, (uint64_t)&v35);
      OUTLINED_FUNCTION_25_14();
      return;
    case 5:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_56;
      }
      OUTLINED_FUNCTION_42_4();
      if (_NF ^ _VF | _ZF) {
        goto LABEL_64;
      }
      OUTLINED_FUNCTION_35_7();
      if (!_NF) {
        goto LABEL_72;
      }
      int v23 = (int)v26;
      uint64_t v24 = MEMORY[0x263F8E888];
      char v25 = &protocol witness table for UInt16;
LABEL_37:
      *((void *)&v36 + 1) = v24;
      *(void *)uint64_t v37 = v25;
      LOWORD(v35) = v23;
      goto LABEL_48;
    case 6:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_57;
      }
      OUTLINED_FUNCTION_42_4();
      if (_NF ^ _VF | _ZF) {
        goto LABEL_65;
      }
      OUTLINED_FUNCTION_35_7();
      if (!_NF) {
        goto LABEL_73;
      }
      *((void *)&v36 + 1) = MEMORY[0x263F8E8F8];
      *(void *)uint64_t v37 = &protocol witness table for UInt32;
      LODWORD(v35) = v27;
      goto LABEL_48;
    case 7:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_54;
      }
      OUTLINED_FUNCTION_42_4();
      if (_NF ^ _VF | _ZF) {
        goto LABEL_62;
      }
      OUTLINED_FUNCTION_35_7();
      if (!_NF) {
        goto LABEL_70;
      }
      uint64_t v18 = (unint64_t)v21;
      uint64_t v19 = MEMORY[0x263F8E970];
      unint64_t v20 = &protocol witness table for UInt64;
LABEL_27:
      *((void *)&v36 + 1) = v19;
      *(void *)uint64_t v37 = v20;
      *(void *)&long long v35 = v18;
      goto LABEL_48;
    case 8:
      __asm { FCVT            H0, S0; jumptable 0000000257529F50 case 8 }
      uint64_t v32 = LODWORD(_S0);
      uint64_t v33 = 0;
      char v14 = 2;
      goto LABEL_44;
    case 9:
      goto LABEL_74;
    case 0xA:
      uint64_t v32 = LODWORD(_S0);
      uint64_t v33 = 0;
      char v14 = 3;
LABEL_44:
      char v34 = v14;
      goto LABEL_45;
    case 0xB:
      *((void *)&v36 + 1) = MEMORY[0x263F8D538];
      *(void *)uint64_t v37 = &protocol witness table for Double;
      *(double *)&long long v35 = _S0;
      goto LABEL_48;
    case 0xC:
      uint64_t v32 = _S0 > 0.0;
      uint64_t v33 = 0;
      char v34 = 0;
LABEL_45:
      OUTLINED_FUNCTION_29_10();
      goto LABEL_46;
    default:
      OUTLINED_FUNCTION_6_29();
      if (_ZF) {
        goto LABEL_52;
      }
      OUTLINED_FUNCTION_35_7();
      if (_NF ^ _VF | _ZF) {
        goto LABEL_58;
      }
      if (v7 >= 128.0) {
        goto LABEL_66;
      }
      int v10 = (int)v7;
      uint64_t v11 = MEMORY[0x263F8E498];
      unint64_t v12 = &protocol witness table for Int8;
      goto LABEL_12;
  }
}

uint64_t sub_25752A350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9 = a7;
  uint64_t v10 = a6;
  uint64_t v11 = a5;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v14 = *(void *)(a3 + 16);
  if (v14)
  {
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v16 = a3 + 48;
    uint64_t v17 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v19 = *(void *)(v16 - 16);
      uint64_t v18 = *(void *)(v16 - 8);
      sub_2576A7810();
      swift_retain();
      unint64_t v20 = sub_2575295C0();
      uint64_t v22 = v21;
      sub_2576A7810();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257472DB0();
        uint64_t v17 = v25;
      }
      unint64_t v23 = *(void *)(v17 + 16);
      if (v23 >= *(void *)(v17 + 24) >> 1)
      {
        sub_257472DB0();
        uint64_t v17 = v26;
      }
      *(void *)(v17 + 16) = v23 + 1;
      uint64_t v24 = (void *)(v17 + 32 * v23);
      v24[4] = v19;
      v24[5] = v18;
      v24[6] = v20;
      v24[7] = v22;
      swift_release();
      swift_bridgeObjectRelease();
      v16 += 24;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = a6;
    uint64_t v9 = a7;
    uint64_t v12 = a2;
    uint64_t v11 = a5;
    uint64_t v13 = a1;
  }
  else
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v34 = sub_2576A77E0();
  sub_257470E14();
  sub_25752A558(v13, v12, v17, v34, v11, v10, v9, v27, a9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_25752A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_2574A4924(0, &qword_26A0033A8);
  unint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v90 = sub_2576A77E0();
  sub_257541014(a3, a4);
  sub_2576A89E0();
  swift_release();
  swift_retain();
  sub_2576A8C80();
  uint64_t v12 = v94;
  if (v94)
  {
    uint64_t v13 = v93;
    uint64_t v84 = a4;
    do
    {
      while (1)
      {
        unint64_t v92 = v11;
        uint64_t v88 = v13;
        if (*(void *)(a4 + 16)
          && (unint64_t v14 = sub_25747588C(v13, v12), (v15 & 1) != 0)
          && *(void *)(*(void *)(*(void *)(a4 + 56) + 8 * v14) + 16))
        {
          sub_2576A7810();
          sub_2576A7810();
          uint64_t v16 = sub_2576A7810();
          sub_2575286C0(v16, a3);
          unint64_t v18 = v17;
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v18 = v11;
        }
        uint64_t v19 = *(void *)(v18 + 16);
        if (v19)
        {
          sub_2574A4924(0, &qword_26A0033A0);
          unint64_t v20 = (uint64_t *)(v18 + 40);
          do
          {
            uint64_t v21 = *(v20 - 1);
            uint64_t v22 = *v20;
            OUTLINED_FUNCTION_56_3();
            swift_bridgeObjectRetain_n();
            sub_2575E8610((uint64_t)&v91, v21, v22);
            swift_endAccess();
            swift_bridgeObjectRelease();
            sub_25752C7E8(v21, v22, (SEL *)&selRef_initWithName_);
            MEMORY[0x25A2B83B0]();
            if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_2576A7E70();
            }
            v20 += 2;
            sub_2576A7ED0();
            sub_2576A7E20();
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease();
          unint64_t v23 = v92;
          a4 = v84;
          unint64_t v11 = MEMORY[0x263F8EE78];
        }
        else
        {
          swift_bridgeObjectRelease();
          unint64_t v23 = v11;
        }
        if (!(v23 >> 62)) {
          break;
        }
        sub_2576A7810();
        uint64_t v40 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
        if (!v40) {
          goto LABEL_17;
        }
        sub_2576A7810();
        uint64_t v41 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
        if (v41 == 1)
        {
LABEL_20:
          if ((v23 & 0xC000000000000001) != 0)
          {
            id v25 = (id)MEMORY[0x25A2B8DB0](0, v23);
          }
          else
          {
            if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_77;
            }
            id v25 = *(id *)(v23 + 32);
          }
          goto LABEL_25;
        }
        sub_2576A7810();
        sub_2576A8B80();
LABEL_24:
        swift_bridgeObjectRelease();
        sub_2574A4924(0, &qword_26A0033C0);
        id v25 = sub_25752AF78();
LABEL_25:
        id v26 = v25;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v93 = v90;
        unint64_t v27 = sub_25747588C(v88, v12);
        if (__OFADD__(*(void *)(v90 + 16), (v28 & 1) == 0)) {
          goto LABEL_76;
        }
        unint64_t v29 = v27;
        char v30 = v28;
        id v82 = v26;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033B0);
        if (sub_2576A8AD0())
        {
          unint64_t v31 = sub_25747588C(v88, v12);
          if ((v30 & 1) != (v32 & 1)) {
            goto LABEL_81;
          }
          unint64_t v29 = v31;
        }
        uint64_t v90 = v93;
        if (v30)
        {
          uint64_t v33 = *(void *)(v93 + 56);

          *(void *)(v33 + 8 * v29) = v82;
        }
        else
        {
          OUTLINED_FUNCTION_38_6(v93 + 8 * (v29 >> 6));
          long long v36 = (uint64_t *)(v35 + 16 * v29);
          *long long v36 = v88;
          v36[1] = v12;
          *(void *)(*(void *)(v34 + 56) + 8 * v29) = v26;
          uint64_t v37 = *(void *)(v34 + 16);
          BOOL v38 = __OFADD__(v37, 1);
          uint64_t v39 = v37 + 1;
          if (v38) {
            goto LABEL_78;
          }
          *(void *)(v34 + 16) = v39;
          sub_2576A7810();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2576A8C80();
        uint64_t v13 = v93;
        uint64_t v12 = v94;
        unint64_t v11 = MEMORY[0x263F8EE78];
        if (!v94) {
          goto LABEL_39;
        }
      }
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24)
      {
        if (v24 == 1) {
          goto LABEL_20;
        }
        swift_bridgeObjectRetain_n();
        sub_2576A8F90();
        goto LABEL_24;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2576A8C80();
      uint64_t v13 = v93;
      uint64_t v12 = v94;
    }
    while (v94);
  }
LABEL_39:
  swift_release_n();
  uint64_t v42 = *(void *)(a5 + 16);
  if (!v42) {
    goto LABEL_51;
  }
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v43 = (char *)(a5 + 64);
  do
  {
    uint64_t v85 = v42;
    uint64_t v44 = *((void *)v43 - 4);
    uint64_t v45 = *((void *)v43 - 3);
    uint64_t v47 = *((void *)v43 - 1);
    char v48 = *v43;
    uint64_t v93 = *((void *)v43 - 2);
    uint64_t v46 = v93;
    uint64_t v94 = v47;
    char v95 = v48;
    sub_2576A7810();
    sub_257476DB4(v46, v47, v48);
    sub_2576A7810();
    sub_257476DB4(v46, v47, v48);
    id v87 = sub_2574BA4C0();
    OUTLINED_FUNCTION_25_14();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v93 = v90;
    uint64_t v89 = v44;
    unint64_t v49 = sub_25747588C(v44, v45);
    if (__OFADD__(*(void *)(v90 + 16), (v50 & 1) == 0))
    {
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    unint64_t v51 = v49;
    char v52 = v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033B0);
    if (sub_2576A8AD0())
    {
      unint64_t v53 = sub_25747588C(v89, v45);
      if ((v52 & 1) != (v54 & 1)) {
        goto LABEL_81;
      }
      unint64_t v51 = v53;
    }
    uint64_t v90 = v93;
    if (v52)
    {
      uint64_t v55 = *(void *)(v93 + 56);

      *(void *)(v55 + 8 * v51) = v87;
    }
    else
    {
      OUTLINED_FUNCTION_38_6(v93 + 8 * (v51 >> 6));
      uint64_t v58 = (uint64_t *)(v57 + 16 * v51);
      *uint64_t v58 = v89;
      v58[1] = v45;
      *(void *)(*(void *)(v56 + 56) + 8 * v51) = v87;
      uint64_t v59 = *(void *)(v56 + 16);
      BOOL v38 = __OFADD__(v59, 1);
      uint64_t v60 = v59 + 1;
      if (v38) {
        goto LABEL_75;
      }
      *(void *)(v56 + 16) = v60;
      sub_2576A7810();
    }
    v43 += 40;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_25_14();
    uint64_t v42 = v85 - 1;
  }
  while (v85 != 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v61 = *(void *)(a7 + 16);
  uint64_t v62 = MEMORY[0x263F8EE78];
  if (v61)
  {
    uint64_t v93 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v63 = 0;
    uint64_t v86 = v61;
    while (2)
    {
      uint64_t v64 = a7 + 32 + 32 * v63;
      uint64_t v65 = *(void *)(v64 + 16);
      uint64_t v66 = *(unsigned __int8 *)(v64 + 24);
      uint64_t v67 = *(void *)(v65 + 16);
      if (v67)
      {
        uint64_t v91 = v62;
        sub_2576A7810();
        sub_2576A7810();
        sub_2576A88E0();
        uint64_t v68 = v65 + 32;
        do
        {
          v68 += 8;
          sub_2576A80E0();
          sub_2576A88A0();
          sub_2576A88F0();
          sub_2576A8900();
          sub_2576A88C0();
          --v67;
        }
        while (v67);
        uint64_t v69 = v91;
        uint64_t v61 = v86;
      }
      else
      {
        sub_2576A7810();
        sub_2576A7810();
        uint64_t v69 = v62;
      }
      ++v63;
      uint64_t v70 = 2;
      switch(v66)
      {
        case 1:
          uint64_t v70 = 6;
          goto LABEL_69;
        case 2:
        case 3:
          uint64_t v70 = 7;
          goto LABEL_69;
        case 4:
          uint64_t v70 = 9;
          goto LABEL_69;
        case 5:
          uint64_t v70 = 10;
          goto LABEL_69;
        case 6:
          uint64_t v70 = 11;
          goto LABEL_69;
        case 7:
          uint64_t v70 = 12;
          goto LABEL_69;
        case 8:
          goto LABEL_69;
        case 9:
          goto LABEL_80;
        case 10:
          uint64_t v70 = 3;
          goto LABEL_69;
        case 11:
          uint64_t v70 = 4;
          goto LABEL_69;
        case 12:
          uint64_t v70 = 0;
          goto LABEL_69;
        default:
          uint64_t v70 = 5;
LABEL_69:
          sub_2576A7810();
          id v71 = objc_allocWithZone((Class)SNNMILValueDescriptor);
          sub_25752D178(v69, v70);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2576A88A0();
          sub_2576A88F0();
          sub_2576A8900();
          sub_2576A88C0();
          if (v63 == v61) {
            break;
          }
          continue;
      }
      break;
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v73 = (void *)sub_2576A79C0();
  uint64_t v74 = (void *)sub_2576A7790();
  swift_bridgeObjectRelease();
  sub_2574A4924(0, &qword_26A0033B8);
  uint64_t v75 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  sub_257469238(a9, (uint64_t)&v93);
  id v76 = 0;
  if ((v98 & 1) == 0)
  {
    uint64_t v77 = v96;
    uint64_t v78 = v97;
    sub_2574A4924(0, &qword_26A003398);
    unint64_t v79 = OUTLINED_FUNCTION_28_10();
    if (((v78 | v77) & 0x8000000000000000) == 0)
    {
      id v76 = sub_2575292E8(v79, v80, v77, v78);
      goto LABEL_73;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    sub_2576A8B60();
    __break(1u);
LABEL_81:
    sub_2576A9020();
    __break(1u);
    JUMPOUT(0x25752AF44);
  }
LABEL_73:
}

id sub_25752AF78()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_2574A4924(0, &qword_26A0033A8);
  uint64_t v1 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithValues_, v1);

  return v2;
}

uint64_t sub_25752B000(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 88) >> 62)
  {
    OUTLINED_FUNCTION_43_5();
    sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 152) >> 62)
  {
    OUTLINED_FUNCTION_43_5();
    sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v27;
  OUTLINED_FUNCTION_47_6();
  sub_257471608();
  uint64_t v6 = *(void *)(*(void *)(v27 + 16) + 16);
  sub_257471904();
  uint64_t v7 = *(void *)(v27 + 16);
  *(void *)(v7 + 16) = v6 + 1;
  sub_25747C54C(a1, v7 + 240 * v6 + 32);
  swift_endAccess();
  OUTLINED_FUNCTION_47_6();
  sub_2576A7810();
  sub_2574715CC();
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 16);
  sub_257471B5C();
  uint64_t v9 = *(void *)(v5 + 56);
  *(void *)(v9 + 16) = v8 + 1;
  *(void *)(v9 + 8 * v8 + 32) = a2;
  swift_endAccess();
  sub_257529374(v25);
  uint64_t v10 = v26;
  sub_2576A7810();
  sub_25747F1AC((uint64_t)v25);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(v10 + 40);
    while (1)
    {
      uint64_t v13 = *(v12 - 1);
      uint64_t v14 = *v12;
      swift_getObjectType();
      if (!dynamic_cast_existential_1_conditional(v13))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(ObjectType, v14);
        uint64_t v22 = v21;
        sub_25752CE48();
        swift_allocError();
        *(void *)uint64_t v23 = v20;
        *(void *)(v23 + 8) = v22;
        *(void *)(v23 + 16) = 0;
        *(void *)(v23 + 24) = 0;
        *(unsigned char *)(v23 + 32) = 0;
        swift_willThrow();
        goto LABEL_13;
      }
      uint64_t v16 = v15;
      uint64_t v17 = swift_getObjectType();
      unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
      swift_unknownObjectRetain_n();
      v18(v27, v17, v16);
      if (v2) {
        break;
      }
      swift_unknownObjectRelease_n();
      v12 += 2;
      if (!--v11) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_13:
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return sub_25752B27C();
}

uint64_t sub_25752B27C()
{
  swift_beginAccess();
  sub_2574B7B08();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_2574B7BA0(v1);
  swift_endAccess();
  return sub_25747F1AC((uint64_t)v1);
}

uint64_t sub_25752B30C(char a1, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9)
{
  uint64_t v13 = *a8;
  HIDWORD(v48) = *((unsigned __int8 *)a8 + 8);
  uint64_t v14 = sub_25755C80C(a1);
  uint64_t v54 = v15;
  uint64_t v57 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FA8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v17 = OUTLINED_FUNCTION_22_17(inited, (__n128)xmmword_2576ABB30);
  v17[3].n128_u64[0] = a2;
  v17[3].n128_u64[1] = a3;
  v17[4].n128_u64[0] = 121;
  v17[4].n128_u64[1] = v18;
  v17[5].n128_u64[0] = a4;
  v17[5].n128_u64[1] = a5;
  sub_2576A7810();
  sub_2576A7810();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v61 = OUTLINED_FUNCTION_23_15();
  sub_25746E400((uint64_t)inited, v20, v21, v22, v23, v24, v25, v26, v44, v46, v48, a6, a7, v54, v57, a9, v60);
  uint64_t v28 = v27;
  uint64_t v29 = swift_bridgeObjectRelease();
  sub_257470E14(v29);
  uint64_t v30 = v61;
  uint64_t v62 = OUTLINED_FUNCTION_23_15();
  sub_257470F58();
  uint64_t v31 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v32 = swift_initStackObject();
  *(_OWORD *)(v32 + 16) = xmmword_2576ABB10;
  *(void *)(v32 + 32) = v51;
  *(void *)(v32 + 40) = v53;
  *(void *)(v32 + 48) = v13;
  *(unsigned char *)(v32 + 56) = BYTE4(v49);
  sub_2576A7810();
  sub_2576A7810();
  OUTLINED_FUNCTION_23_15();
  uint64_t v33 = sub_25746D92C(v32);
  uint64_t v34 = swift_bridgeObjectRelease();
  sub_257470930(v34, v35, v36, v37, v38, v39, v40, v41, v45, v47, v49, v51, v53, v55);
  sub_25752A558(v58, v56, v28, v30, v31, v62, v33, v42, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25752B508(char a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v9 = *a6;
  HIDWORD(v47) = *((unsigned __int8 *)a6 + 8);
  unint64_t v10 = sub_25755C8CC(a1);
  uint64_t v51 = v11;
  uint64_t v53 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FA8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v13 = OUTLINED_FUNCTION_22_17(inited, (__n128)xmmword_2576ABB10);
  v13[3].n128_u64[0] = a2;
  v13[3].n128_u64[1] = a3;
  sub_2576A7810();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v56 = OUTLINED_FUNCTION_16_21();
  sub_25746E400((uint64_t)inited, v15, v16, v17, v18, v19, v20, v21, v40, a5, 1, 2, v45, v47, a4, v51, v53);
  uint64_t v23 = v22;
  uint64_t v24 = swift_bridgeObjectRelease();
  sub_257470E14(v24);
  uint64_t v25 = v23;
  uint64_t v26 = v56;
  uint64_t v57 = OUTLINED_FUNCTION_16_21();
  sub_257470F58();
  uint64_t v27 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v28 = swift_initStackObject();
  *(_OWORD *)(v28 + 16) = v44;
  *(void *)(v28 + 32) = v50;
  *(void *)(v28 + 40) = v43;
  *(void *)(v28 + 48) = v9;
  *(unsigned char *)(v28 + 56) = BYTE4(v48);
  sub_2576A7810();
  sub_2576A7810();
  OUTLINED_FUNCTION_16_21();
  uint64_t v29 = sub_25746D92C(v28);
  uint64_t v30 = swift_bridgeObjectRelease();
  sub_257470930(v30, v31, v32, v33, v34, v35, v36, v37, v41, v43, v44, *((uint64_t *)&v44 + 1), v46, v48);
  sub_25752A558(v54, v52, v25, v26, v27, v57, v29, v38, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25752B6E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6 = *a4;
  int v7 = *((unsigned __int8 *)a4 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_22_17(inited, (__n128)xmmword_2576ABB10)[3].n128_u64[0] = a1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v57 = sub_2576A77E0();
  uint64_t v9 = sub_25746D748((uint64_t)inited);
  uint64_t v10 = swift_bridgeObjectRelease();
  sub_257470688(v10);
  uint64_t v11 = v57;
  uint64_t v45 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
  uint64_t v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_2576ABB10;
  *(void *)(v12 + 32) = 0x6570797464;
  *(void *)(v12 + 40) = 0xE500000000000000;
  char v13 = v7 - 2;
  if (v7 - 2) < 0xB && ((0x543u >> v13))
  {
    uint64_t v14 = v12;
    uint64_t v15 = *(void *)&aInt32_1[8 * v13];
    uint64_t v16 = qword_2576B4710[v13];
    *(void *)(v12 + 48) = v15;
    *(void *)(v12 + 56) = v16;
    *(unsigned char *)(v12 + 64) = 4;
    uint64_t v58 = OUTLINED_FUNCTION_54_3();
    sub_25746E2DC(v14, v17, v18, v19, v20, v21, v22, v23, v39, v41, v43, v45, a2, a3, a5, v54, 1, 2, v56);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    sub_257470F58();
    uint64_t v27 = v25;
    uint64_t v26 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
    uint64_t v28 = swift_initStackObject();
    *(_OWORD *)(v28 + 16) = v55;
    *(void *)(v28 + 32) = v49;
    *(void *)(v28 + 40) = v51;
    *(void *)(v28 + 48) = v6;
    *(unsigned char *)(v28 + 56) = v7;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v59 = OUTLINED_FUNCTION_54_3();
    uint64_t v29 = sub_25746D92C(v28);
    uint64_t v30 = swift_bridgeObjectRelease();
    sub_257470930(v30, v31, v32, v33, v34, v35, v36, v37, v40, v42, v44, v46, v49, v51);
    sub_25752A350(1953718627, 0xE400000000000000, v47, v11, v27, v26, v29, v59, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t sub_25752B9A4(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)a5;
  char v10 = *(unsigned char *)(a5 + 8);
  *(void *)uint64_t v15 = a3;
  *(void *)&v15[8] = a4;
  sub_2576A7810();
  sub_2576A7B00();
  long long v11 = *(_OWORD *)v15;
  LOBYTE(v13) = v10;
  memset(v15, 0, sizeof(v15));
  char v16 = 1;
  sub_257529F0C(&v13, v11, *((void **)&v11 + 1), -1.0);
  uint64_t v13 = v9;
  char v14 = v10;
  sub_25752B30C(2, a1, a2, v11, *((unint64_t *)&v11 + 1), a3, a4, &v13, (uint64_t)v15);
  return swift_bridgeObjectRelease();
}

void sub_25752BAB8()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A006420);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  *(void *)(v1 + 32) = sub_2575295C0();
  *(void *)(v1 + 40) = v2;
  id v3 = (id)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  objc_msgSend(Strong, sel_retainOutputsWithNames_, v3);
}

void sub_25752BB70(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
    if (a3 >> 62 == 1)
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_41_5();
      uint64_t v6 = OUTLINED_FUNCTION_27_11();
      v3(v6);
      sub_2576A78E0();
      sub_257476D6C(a2, a3);
      OUTLINED_FUNCTION_8_21();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_getObjectType();
      OUTLINED_FUNCTION_41_5();
      uint64_t v8 = OUTLINED_FUNCTION_27_11();
      v3(v8);
      sub_2576A78E0();
      swift_bridgeObjectRelease();
      sub_2576A90A0();
      OUTLINED_FUNCTION_37_4();
      OUTLINED_FUNCTION_8_21();
      sub_257476D6C(v9, v10);
    }
  }
  else
  {
    sub_2575CA350();
    sub_2576A90A0();
    OUTLINED_FUNCTION_8_21();
  }
}

uint64_t sub_25752BC8C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  if (!(a2 >> 62))
  {
    if (a5 >> 62) {
      goto LABEL_22;
    }
    uint64_t v25 = sub_2575CA350();
    BOOL v26 = v25 == sub_2575CA350();
LABEL_27:
    char v24 = v26;
    return v24 & 1;
  }
  if (a2 >> 62 != 1)
  {
    if (a5 >> 62 != 2) {
      goto LABEL_22;
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = *(uint64_t (**)(uint64_t, unint64_t))((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    sub_257476D90(a1, a2);
    sub_257476D90(a4, a5);
    int v29 = v28(ObjectType, a2 & 0x3FFFFFFFFFFFFFFFLL);
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    swift_getObjectType();
    uint64_t v34 = a3;
    OUTLINED_FUNCTION_34_8();
    if (v29 != v35())
    {
      OUTLINED_FUNCTION_17_19();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if (v31 == v36 && v33 == v37)
    {
      sub_257476D6C(a4, a5);
      sub_257476D6C(a1, a2);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v39 = sub_2576A8F60();
      OUTLINED_FUNCTION_17_19();
      swift_bridgeObjectRelease();
      char v24 = 0;
      if ((v39 & 1) == 0) {
        return v24 & 1;
      }
    }
    BOOL v26 = v34 == a6;
    goto LABEL_27;
  }
  if (a5 >> 62 != 1)
  {
LABEL_22:
    char v24 = 0;
    return v24 & 1;
  }
  uint64_t v12 = swift_getObjectType();
  uint64_t v13 = *(uint64_t (**)(uint64_t, unint64_t))((a2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  sub_257476D90(a1, a2);
  uint64_t v14 = OUTLINED_FUNCTION_26_13();
  sub_257476D90(v14, v15);
  LODWORD(v12) = v13(v12, a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  swift_getObjectType();
  OUTLINED_FUNCTION_34_8();
  if (v12 != v20())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v40 = OUTLINED_FUNCTION_26_13();
    sub_257476D6C(v40, v41);
    sub_257476D6C(a1, a2);
    goto LABEL_22;
  }
  if (v17 == v21 && v19 == v22) {
    char v24 = 1;
  }
  else {
    char v24 = sub_2576A8F60();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = OUTLINED_FUNCTION_26_13();
  sub_257476D6C(v42, v43);
  sub_257476D6C(a1, a2);
  return v24 & 1;
}

uint64_t sub_25752BF74(uint64_t a1, unint64_t a2)
{
  sub_2576A9090();
  if (a2 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_49_6();
    uint64_t v5 = OUTLINED_FUNCTION_9_29();
    v2(v5);
    OUTLINED_FUNCTION_52_3();
    if (a2 >> 62 == 1)
    {
      sub_257476D6C(a1, a2);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2576A90A0();
      sub_257476D6C(a1, a2);
    }
  }
  else
  {
    sub_2575CA350();
    sub_2576A90A0();
  }
  return sub_2576A9100();
}

uint64_t sub_25752C06C()
{
  return sub_25752BF74(*(void *)v0, *(void *)(v0 + 8));
}

void sub_25752C078(uint64_t a1)
{
  sub_25752BB70(a1, *(void *)v1, *(void *)(v1 + 8));
}

uint64_t sub_25752C084()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  sub_2576A9090();
  if (v3 >> 62)
  {
    swift_getObjectType();
    OUTLINED_FUNCTION_48_6();
    uint64_t v4 = OUTLINED_FUNCTION_9_29();
    v1(v4);
    OUTLINED_FUNCTION_52_3();
    if (v3 >> 62 == 1)
    {
      sub_257476D6C(v2, v3);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2576A90A0();
      sub_257476D6C(v2, v3);
    }
  }
  else
  {
    sub_2575CA350();
    sub_2576A90A0();
  }
  return sub_2576A9100();
}

uint64_t sub_25752C174(uint64_t a1, uint64_t a2)
{
  return sub_25752BC8C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

unsigned char *sub_25752C190(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_25747C54C(a1, (uint64_t)(v5 + 16));
  v5[314] = a2;
  v5[315] = a3;
  sub_257469238(a4, (uint64_t)(v5 + 256));
  sub_25752C20C(a2);
  LOBYTE(a4) = v10;
  sub_25747F1AC(a1);
  v5[316] = a4;
  return v5;
}

void sub_25752C20C(char a1)
{
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = 32;
    do
    {
      uint64_t v7 = *(void *)(v3 + v6);
      swift_getObjectType();
      uint64_t v8 = dynamic_cast_existential_1_conditional(v7);
      if (v8)
      {
        uint64_t v10 = v8;
        uint64_t v11 = v9;
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_25747202C();
          uint64_t v5 = v14;
        }
        unint64_t v12 = v5[2];
        if (v12 >= v5[3] >> 1)
        {
          sub_25747202C();
          uint64_t v5 = v15;
        }
        v5[2] = v12 + 1;
        uint64_t v13 = &v5[2 * v12];
        v13[4] = v10;
        v13[5] = v11;
      }
      v6 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v16 = v5[2];
  if (v16)
  {
    unsigned __int8 v17 = 0;
    uint64_t v18 = v5 + 5;
    do
    {
      uint64_t v19 = *v18;
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      unsigned __int8 v21 = sub_25758E590(a1 & 1, ObjectType, v19);
      swift_unknownObjectRelease();
      if (v17 <= v21) {
        unsigned __int8 v17 = v21;
      }
      v18 += 2;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_21();
}

void sub_25752C3A8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (char *)(a1 + 313);
  uint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x3531736F69;
  switch(*(unsigned char *)(a1 + 316))
  {
    case 1:
      uint64_t v5 = 0x3631736F69;
      break;
    case 2:
      uint64_t v5 = 0x3731736F69;
      break;
    case 3:
      uint64_t v4 = 0xEB000000006E6961;
      uint64_t v5 = 0x72745F3631736F69;
      break;
    default:
      break;
  }
  sub_2574A4924(0, &qword_26A003388);
  id v7 = sub_25752C7E8(v5, v4, (SEL *)&selRef_initWithOpsetName_);
  id v8 = 0;
  uint64_t v45 = *(void *)(a1 + 256);
  uint64_t v9 = *(void *)(a1 + 272);
  uint64_t v41 = *(void *)(a1 + 264);
  uint64_t v43 = a1;
  uint64_t v10 = *(void *)(a1 + 280);
  uint64_t v11 = *(void *)(a1 + 288);
  char v12 = *v3;
  if ((*v3 & 1) == 0)
  {
    sub_2574A4924(0, &qword_26A003398);
    unint64_t v13 = sub_2575BC408(v45, v41, v9);
    if ((v11 | v10) < 0)
    {
      __break(1u);
      goto LABEL_22;
    }
    id v8 = sub_2575292E8(v13, v14, v10, v11);
  }
  sub_2574A4924(0, &qword_26A003390);
  id v40 = v7;
  id v15 = sub_25752C854(v40, v8);
  uint64_t v16 = (void *)sub_2576A79C0();
  id v17 = 0;
  if (v12) {
    goto LABEL_11;
  }
  sub_2574A4924(0, &qword_26A003398);
  unint64_t v18 = sub_2575BC408(v45, v41, v9);
  if ((v11 | v10) < 0)
  {
LABEL_22:
    __break(1u);
    JUMPOUT(0x25752C7D8);
  }
  id v17 = sub_2575292E8(v18, v19, v10, v11);
LABEL_11:
  id v20 = objc_msgSend(v15, sel_functionWithName_location_, v16, v17);

  sub_25747C54C(v43 + 16, (uint64_t)v44);
  char v21 = v3[1];
  char v22 = v3[2];
  type metadata accessor for MILFunctionBuilder();
  swift_allocObject();
  id v23 = v20;
  uint64_t v45 = sub_257529438((uint64_t)v44, v23, v21, v22);
  uint64_t v24 = *(void *)(*(void *)(v43 + 136) + 16);
  if (v24)
  {
    uint64_t v38 = v23;
    uint64_t v42 = v15;
    uint64_t v25 = (uint64_t *)(sub_2576A7810() + 40);
    while (1)
    {
      uint64_t v27 = *(v25 - 1);
      uint64_t v26 = *v25;
      swift_getObjectType();
      if (!dynamic_cast_existential_1_conditional(v27))
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(ObjectType, v26);
        uint64_t v36 = v35;
        sub_25752CE48();
        swift_allocError();
        *(void *)uint64_t v37 = v34;
        *(void *)(v37 + 8) = v36;
        *(void *)(v37 + 16) = 0;
        *(void *)(v37 + 24) = 0;
        *(unsigned char *)(v37 + 32) = 0;
        swift_willThrow();
        goto LABEL_20;
      }
      uint64_t v29 = v28;
      uint64_t v30 = swift_getObjectType();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
      swift_unknownObjectRetain_n();
      v31(v45, v30, v29);
      if (v2) {
        break;
      }
      swift_unknownObjectRelease_n();
      v25 += 2;
      if (!--v24)
      {
        swift_bridgeObjectRelease();
        id v15 = v42;
        id v23 = v38;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_20:
    swift_unknownObjectRelease();

    swift_release();
  }
  else
  {
LABEL_17:
    sub_25752C8B0(v45);
    sub_25752CB18();
    id v32 = objc_msgSend(v15, sel_build);

    swift_release();
    *a2 = v32;
  }
}

id sub_25752C7E8(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)OUTLINED_FUNCTION_11_23();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, *a3, v5);

  return v6;
}

id sub_25752C854(void *a1, void *a2)
{
  id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_location_, a1, a2);

  return v4;
}

uint64_t sub_25752C8B0(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = v1[13];
  if (v3 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = sub_2576A7810();
  if (v4)
  {
    while (1)
    {
      if (v4 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = v2[15];
      uint64_t v7 = v2[16];
      swift_beginAccess();
      uint64_t v8 = 0;
      uint64_t v30 = v6 + 32;
      uint64_t v31 = v6;
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x25A2B8DB0](v8, v3);
        }
        else
        {
          uint64_t v9 = *(void *)(v3 + 8 * v8 + 32);
          swift_retain();
        }
        uint64_t v10 = sub_2576136DC();
        if (*(void *)(v7 + 16))
        {
          unint64_t v12 = sub_25747588C(v10, v11);
          if (v13) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v18 = v2[19];
        uint64_t v19 = v2[20];
        uint64_t v20 = sub_2576136DC();
        if (!*(void *)(v19 + 16) || (unint64_t v22 = sub_25747588C(v20, v21), (v23 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = sub_2576136DC();
          uint64_t v16 = v26;
          goto LABEL_20;
        }
        unint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
        if ((v24 & 0x8000000000000000) != 0) {
          goto LABEL_26;
        }
        if (v24 >= *(void *)(v18 + 16)) {
          goto LABEL_27;
        }
        uint64_t v25 = v18 + 16 * v24;
        uint64_t v17 = *(void *)(v25 + 32);
        uint64_t v16 = *(void *)(v25 + 40);
LABEL_18:
        sub_2576A7810();
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t v27 = *(void *)(a1 + 40);
        sub_2576A7810();
        sub_257528848(v17, v16, v27);
        char v29 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29) {
          sub_257529954(v9);
        }
        ++v8;
        swift_release();
        if (v4 == v8) {
          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v14 = *(void *)(*(void *)(v7 + 56) + 8 * v12);
      if ((v14 & 0x8000000000000000) == 0) {
        break;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      sub_2576A7810();
      uint64_t result = sub_2576A8BF0();
      uint64_t v4 = result;
      if (!result) {
        goto LABEL_29;
      }
    }
    if (v14 >= *(void *)(v31 + 16)) {
      goto LABEL_25;
    }
    id v15 = (uint64_t *)(v30 + 16 * v14);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    goto LABEL_18;
  }
LABEL_29:
  return swift_bridgeObjectRelease();
}

uint64_t sub_25752CB18()
{
  unint64_t v1 = *(void *)(v0 + 168);
  if (v1 >> 62)
  {
    sub_2576A7810();
    uint64_t result = sub_2576A8BF0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = sub_2576A7810();
    if (!v2) {
      goto LABEL_9;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      MEMORY[0x25A2B8DB0](i, v1);
    }
    else {
      swift_retain();
    }
    sub_25752BAB8();
    swift_release();
  }
LABEL_9:
  return swift_bridgeObjectRelease();
}

uint64_t sub_25752CC00()
{
  sub_25747F1AC(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MILProgramBuilder()
{
  return self;
}

uint64_t destroy for MILFunctionBuilder.AliasedIdentity(uint64_t a1)
{
  return sub_257476D6C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s14NeuralNetworks18MILFunctionBuilderC15AliasedIdentityOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_257476D90(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *assignWithCopy for MILFunctionBuilder.AliasedIdentity(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_257476D90(*a2, v4);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_257476D6C(v6, v7);
  return a1;
}

uint64_t *assignWithTake for MILFunctionBuilder.AliasedIdentity(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_257476D6C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MILFunctionBuilder.AliasedIdentity(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7E && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 125;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                              * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x7D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for MILFunctionBuilder.AliasedIdentity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(void *)(result + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_25752CE04(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 62;
}

uint64_t sub_25752CE10(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_25752CE20(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for MILFunctionBuilder.AliasedIdentity()
{
  return &type metadata for MILFunctionBuilder.AliasedIdentity;
}

unint64_t sub_25752CE48()
{
  unint64_t result = qword_26A003378;
  if (!qword_26A003378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003378);
  }
  return result;
}

unint64_t sub_25752CE94()
{
  sub_25752D160(v0, (uint64_t)&v3);
  switch(v4)
  {
    case 1:
      OUTLINED_FUNCTION_8_28();
      sub_2576A8730();
      OUTLINED_FUNCTION_44_5();
      OUTLINED_FUNCTION_15_17();
      OUTLINED_FUNCTION_20_18();
      OUTLINED_FUNCTION_39_7();
      OUTLINED_FUNCTION_31_8();
      break;
    case 2:
      OUTLINED_FUNCTION_8_28();
      sub_2576A8730();
      swift_bridgeObjectRelease();
      unint64_t v2 = 0xD000000000000019;
      OUTLINED_FUNCTION_20_18();
      OUTLINED_FUNCTION_39_7();
      OUTLINED_FUNCTION_31_8();
      break;
    case 3:
      OUTLINED_FUNCTION_8_28();
      sub_2576A8730();
      OUTLINED_FUNCTION_44_5();
      OUTLINED_FUNCTION_15_17();
      OUTLINED_FUNCTION_31_8();
      sub_2576A7B00();
      goto LABEL_8;
    case 4:
      OUTLINED_FUNCTION_8_28();
      sub_2576A8730();
      OUTLINED_FUNCTION_44_5();
      sub_2576A7B00();
      OUTLINED_FUNCTION_20_18();
      OUTLINED_FUNCTION_15_17();
LABEL_8:
      sub_2576A7B00();
      break;
    default:
      unint64_t v2 = 0;
      sub_2576A8730();
      OUTLINED_FUNCTION_44_5();
      OUTLINED_FUNCTION_15_17();
      OUTLINED_FUNCTION_20_18();
      break;
  }
  sub_2576A7B00();
  return v2;
}

unint64_t sub_25752D0CC()
{
  sub_25752D160(v0, (uint64_t)v2);
  return sub_25752CE94();
}

unint64_t sub_25752D114()
{
  unint64_t result = qword_26A003380;
  if (!qword_26A003380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003380);
  }
  return result;
}

uint64_t sub_25752D160(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

id sub_25752D178(uint64_t a1, uint64_t a2)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  char v4 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  unint64_t v5 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v2, sel_initWithShape_dataType_name_, v4, a2, v5);

  return v6;
}

uint64_t sub_25752D228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25752D290(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001BD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_25752D2F0(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_257529D28(a1, *(void *)(v2 + 32), *(void *)(v2 + 56), a2);
}

uint64_t sub_25752D314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_30_4();
  uint64_t v9 = sub_25768B684(*(void *)(a3 + 56));
  if (v9
    && (uint64_t v10 = v9,
        uint64_t v11 = swift_unknownObjectRetain(),
        uint64_t v12 = sub_2574BB184(v11, a5 | 0x8000000000000000, a2, v10),
        uint64_t v14 = v13,
        swift_unknownObjectRelease(),
        swift_bridgeObjectRelease(),
        v14))
  {
    if (*(unsigned char *)(a3 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_41();
      sub_2576A7B30();
      if (v15)
      {
        OUTLINED_FUNCTION_10_19();
        do
        {
          OUTLINED_FUNCTION_36_7();
          if (!v16) {
            swift_once();
          }
          OUTLINED_FUNCTION_14_23();
          if ((v17 & 1) == 0) {
            OUTLINED_FUNCTION_21_18();
          }
          swift_bridgeObjectRelease();
          sub_2576A7B30();
          OUTLINED_FUNCTION_50_4();
        }
        while (v18);
        uint64_t v12 = 0;
      }
      else
      {
        uint64_t v12 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_257529374(v30);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a5 + 72))(a2, a4, a5);
    uint64_t v20 = v19;
    uint64_t v21 = v31;
    uint64_t v22 = v32;
    sub_2576A7810();
    unint64_t v23 = sub_2574A779C(v12, v20, v21, v22);
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = v23;
    }
    sub_25747F1AC((uint64_t)v30);
    if (*(unsigned char *)(a3 + 73) == 1)
    {
      OUTLINED_FUNCTION_0_41();
      sub_2576A7B30();
      if (v26)
      {
        OUTLINED_FUNCTION_10_19();
        do
        {
          OUTLINED_FUNCTION_36_7();
          if (!v16) {
            swift_once();
          }
          OUTLINED_FUNCTION_14_23();
          if ((v27 & 1) == 0) {
            OUTLINED_FUNCTION_21_18();
          }
          swift_bridgeObjectRelease();
          sub_2576A7B30();
          OUTLINED_FUNCTION_50_4();
        }
        while (v28);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v12;
}

uint64_t sub_25752D594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 - 1 < 4)
  {
    sub_2576A7810();
    return sub_2576A7810();
  }
  if (!a5)
  {
    return sub_2576A7810();
  }
  return result;
}

uint64_t destroy for MILEncodingError(uint64_t a1)
{
  return sub_25752D60C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_25752D60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 - 1 < 4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a5)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MILEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_25752D594(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MILEncodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_25752D594(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_25752D60C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MILEncodingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_25752D60C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MILEncodingError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 33))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MILEncodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_25752D830(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_25752D838(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MILEncodingError()
{
  return &type metadata for MILEncodingError;
}

uint64_t OUTLINED_FUNCTION_0_41()
{
  return swift_bridgeObjectRetain_n();
}

id OUTLINED_FUNCTION_4_30(uint64_t a1, uint64_t a2)
{
  return sub_2575292E8(a1, a2, v2, v3);
}

uint64_t OUTLINED_FUNCTION_5_28()
{
  return sub_257469238(v0, v1 - 160);
}

unint64_t OUTLINED_FUNCTION_7_25()
{
  return sub_2575BC408(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_9_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_23()
{
  return sub_2576A79C0();
}

void OUTLINED_FUNCTION_14_23()
{
  uint64_t v4 = *(void *)(v2 + 880);
  sub_25752890C(v1, v0, v4);
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_16_21()
{
  return sub_2576A77E0();
}

uint64_t OUTLINED_FUNCTION_17_19()
{
  sub_257476D6C(v2, v3);
  sub_257476D6C(v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_18()
{
  return sub_2576A8F60();
}

uint64_t OUTLINED_FUNCTION_19_17()
{
  return *(void *)(v0 + 16 * v1);
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return sub_2576A7B00();
}

void OUTLINED_FUNCTION_21_18()
{
  JUMPOUT(0x25A2B80D0);
}

__n128 *OUTLINED_FUNCTION_22_17(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 120;
  result[2].n128_u64[1] = 0xE100000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_15()
{
  return sub_2576A77E0();
}

uint64_t OUTLINED_FUNCTION_24_15()
{
  return sub_2576A7DE0();
}

uint64_t OUTLINED_FUNCTION_25_14()
{
  return sub_257476E0C(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_26_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  return v0;
}

unint64_t OUTLINED_FUNCTION_28_10()
{
  return sub_2575BC408(v0, v1, v2);
}

double OUTLINED_FUNCTION_29_10()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_30_10(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  *(void *)(v2 - 160) = v1;
  return sub_2576A7E20();
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  return sub_2576A9090();
}

id OUTLINED_FUNCTION_37_5(id a1, SEL a2, uint64_t a3)
{
  return objc_msgSend(a1, a2, a3, v5, 7, v4, v3);
}

void OUTLINED_FUNCTION_38_6(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_43_5()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_6()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_48_6()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_49_6()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_52_3()
{
  return sub_2576A78E0();
}

id OUTLINED_FUNCTION_53_3(id a1, SEL a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, a2, a3, a4, v5, v4);
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return sub_2576A77E0();
}

uint64_t OUTLINED_FUNCTION_55_3()
{
  return sub_2576A9080();
}

uint64_t OUTLINED_FUNCTION_56_3()
{
  return swift_beginAccess();
}

uint64_t sub_25752DDC8()
{
  if (v0[15])
  {
    uint64_t v1 = v0[15];
  }
  else
  {
    uint64_t v1 = (*(uint64_t (**)(void))(*v0 + 200))();
    v0[15] = v1;
    sub_2576A7810();
    swift_bridgeObjectRelease();
  }
  sub_2576A7810();
  return v1;
}

uint64_t sub_25752DE44()
{
  uint64_t v1 = OUTLINED_FUNCTION_9_15();
  if (v2 <= 1)
  {
LABEL_4:
    OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_2_18();
  }
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t result = v3 * v4;
  if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
  {
    __break(1u);
    goto LABEL_4;
  }
  return result;
}

void sub_25752DEB8()
{
}

uint64_t sub_25752DEC8()
{
  return OUTLINED_FUNCTION_3_30(0x6432766E6F63);
}

uint64_t sub_25752DED8()
{
  return OUTLINED_FUNCTION_2_31();
}

unint64_t sub_25752DEE8()
{
  return 0xD000000000000013;
}

uint64_t sub_25752DF04()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = OUTLINED_FUNCTION_29_2();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 48);
  *(void *)(v1 + 32) = *(void *)(v0 + 40);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_25752DF7C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = *a8;
  char v17 = *((unsigned char *)a8 + 8);
  if (!a3) {
    a1 = sub_25761B148(0x6C756D74616DLL, 0xE600000000000000);
  }
  *(_DWORD *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  *(void *)(v11 + 48) = a6;
  *(unsigned char *)(v11 + 56) = a5 & 1;
  *(unsigned char *)(v11 + 57) = a7 & 1;
  *(void *)(v11 + 64) = v16;
  *(unsigned char *)(v11 + 72) = v17;
  *(void *)(v11 + 80) = a10;
  *(void *)(v11 + 88) = a11;
  sub_257469238(a9, v11 + 96);
  return v11;
}

uint64_t sub_25752E028()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25747A4E0(*(void *)(v0 + 80));
  return v0;
}

uint64_t sub_25752E068()
{
  sub_25752E028();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MatrixMultiplicationOperation()
{
  return self;
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return 0x6C756D74616DLL;
}

uint64_t sub_25752E0D8()
{
  return sub_25752E164();
}

uint64_t sub_25752E0F4()
{
  return sub_2576A90B0();
}

uint64_t sub_25752E13C()
{
  return sub_25752E0F4();
}

uint64_t sub_25752E164()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = OUTLINED_FUNCTION_29_2();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 72);
  *(void *)(v1 + 32) = *(void *)(v0 + 64);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25752E1B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = *a7;
  char v16 = *((unsigned char *)a7 + 8);
  if (!a3) {
    a1 = sub_25761B148(0x7261656E696CLL, 0xE600000000000000);
  }
  *(_DWORD *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  *(void *)(v10 + 48) = a5;
  *(void *)(v10 + 56) = a6;
  *(void *)(v10 + 64) = v15;
  *(unsigned char *)(v10 + 72) = v16;
  *(void *)(v10 + 80) = a9;
  *(void *)(v10 + 88) = a10;
  sub_257469238(a8, v10 + 96);
  return v10;
}

uint64_t sub_25752E250()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_25747A4E0(*(void *)(v0 + 80));
  return v0;
}

uint64_t sub_25752E298()
{
  sub_25752E250();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinearOperation()
{
  return self;
}

uint64_t sub_25752E2F0()
{
  return 0x7261656E696CLL;
}

uint64_t sub_25752E304()
{
  return sub_25752E794();
}

uint64_t sub_25752E31C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_25752E350()
{
  return sub_2576A90B0();
}

uint64_t sub_25752E38C()
{
  return sub_25752E350();
}

__n128 *sub_25752E3B0()
{
  unint64_t v2 = *(void *)(v0 + 64);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v3 = (__n128 *)swift_allocObject();
  if (v2)
  {
    uint64_t v4 = OUTLINED_FUNCTION_8_29(v3, (__n128)xmmword_2576B4770);
    v4[3].n128_u64[0] = v1;
    v4[3].n128_u64[1] = v2;
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_8_29(v3, (__n128)xmmword_2576ABB20);
    v4[3].n128_u64[0] = v1;
  }
  uint64_t v6 = v4;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v6;
}

uint64_t sub_25752E474(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a3) {
    a1 = sub_25761B148(0x675F7261656E696CLL, 0xEB00000000646172);
  }
  *(_DWORD *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  sub_257469238(a8, v8 + 80);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2576ABB30;
  char v15 = *(unsigned char *)(a5 + 160);
  *(void *)(v14 + 32) = *(void *)(a5 + 152);
  *(unsigned char *)(v14 + 40) = v15;
  char v16 = *(unsigned char *)(a6 + 160);
  *(void *)(v14 + 48) = *(void *)(a6 + 152);
  *(unsigned char *)(v14 + 56) = v16;
  if (a7)
  {
    uint64_t v17 = *(void *)(a7 + 152);
    char v18 = *(unsigned char *)(a7 + 160);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2576A7810();
    sub_2576A7810();
    sub_2576A7810();
    sub_257471D18();
    uint64_t v14 = v19;
    *(void *)(v19 + 16) = 3;
    *(void *)(v19 + 64) = v17;
    *(unsigned char *)(v19 + 72) = v18;
    swift_release();
    swift_release();
    swift_release();
    swift_release_n();
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
  }
  *(void *)(v8 + 72) = v14;
  return v8;
}

uint64_t sub_25752E5FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25752E644()
{
  sub_25752E5FC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LinearGradientOperation()
{
  return self;
}

uint64_t sub_25752E69C()
{
  return 0x675F7261656E696CLL;
}

uint64_t sub_25752E6C0()
{
  return sub_2576A7810();
}

uint64_t sub_25752E6C8()
{
  return sub_2576A90B0();
}

uint64_t sub_25752E710()
{
  return sub_25752E6C8();
}

void sub_25752E734()
{
}

uint64_t sub_25752E794()
{
  uint64_t v1 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  if (v1)
  {
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB20;
    uint64_t v3 = v0[6];
    *(void *)(v2 + 32) = v0[5];
    *(void *)(v2 + 40) = v3;
    *(void *)(v2 + 48) = v1;
  }
  else
  {
    uint64_t v2 = OUTLINED_FUNCTION_29_2();
    *(_OWORD *)(v2 + 16) = xmmword_2576ABB00;
    uint64_t v4 = v0[6];
    *(void *)(v2 + 32) = v0[5];
    *(void *)(v2 + 40) = v4;
  }
  uint64_t v6 = v2;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  swift_retain();
  return v6;
}

uint64_t sub_25752E84C()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_15();
  if (!v1)
  {
    sub_2576A7810();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v0 + 32);
}

uint64_t sub_25752E8BC()
{
  uint64_t v0 = OUTLINED_FUNCTION_9_15();
  if (v1 < 4)
  {
    OUTLINED_FUNCTION_1_46();
    OUTLINED_FUNCTION_2_18();
  }
  return *(void *)(v0 + 48);
}

uint64_t sub_25752E934(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(void *)(v12 + 32) = a3;
  *(void *)(v12 + 40) = a4;
  *(void *)(v12 + 48) = a5;
  *(void *)(v12 + 56) = a6;
  *(void *)(v12 + 64) = a7;
  *(void *)(v12 + 72) = a8;
  *(_OWORD *)(v12 + 80) = a9;
  *(_OWORD *)(v12 + 96) = a10;
  *(void *)(v12 + 112) = a11;
  *(void *)(v12 + 120) = 0;
  sub_257469238(a12, v12 + 128);
  return v12;
}

void sub_25752E97C()
{
}

uint64_t sub_25752E9DC()
{
  (*(void (**)(void))(*(void *)v0 + 160))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_25752E8BC();
  sub_2576A90A0();
  sub_25752E8BC();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  sub_2576A90A0();
  return sub_2576A90B0();
}

uint64_t sub_25752EAB8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25752EAF8()
{
  sub_25752EAB8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseConvolution2DOperation()
{
  return self;
}

uint64_t sub_25752EB50()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_25752EB74()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

__n128 sub_25752EB9C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 176);
  char v3 = *(unsigned char *)(v1 + 184);
  char v4 = *(unsigned char *)(v1 + 185);
  long long v5 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 160);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_25752EBC8()
{
  return sub_25752E9DC();
}

uint64_t sub_25752EBEC()
{
  return sub_25761B124();
}

uint64_t sub_25752EC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_4_31();
  OUTLINED_FUNCTION_7_26();
  *(void *)(v12 + 208) = v16;
  *(void *)(v12 + 216) = v15;
  if (!v17)
  {
    *(void *)&a9 = v14;
    *((void *)&a9 + 1) = v13;
    sub_25761B148(0x6432766E6F63, 0xE600000000000000);
  }
  OUTLINED_FUNCTION_6_30();
  return sub_25752E934(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12);
}

uint64_t sub_25752ECE4()
{
  sub_25752EF24();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Convolution2DOperation()
{
  return self;
}

uint64_t sub_25752ED3C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  sub_25747A4D0(v1);
  return v1;
}

#error "25752EDBC: call analysis failed (funcsize=17)"

uint64_t sub_25752EDD0()
{
  return swift_release();
}

uint64_t type metadata accessor for Convolution2DGradientOperation()
{
  return self;
}

uint64_t sub_25752EE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_4_31();
  OUTLINED_FUNCTION_7_26();
  *(_OWORD *)(v12 + 208) = v13;
  *(void *)(v12 + 224) = v15;
  *(void *)(v12 + 232) = v14;
  if (!v16)
  {
    uint64_t v17 = OUTLINED_FUNCTION_2_31();
    *(void *)&a9 = v18;
    *((void *)&a9 + 1) = v19;
    sub_25761B148(v17, v20);
  }
  OUTLINED_FUNCTION_6_30();
  return sub_25752E934(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

uint64_t sub_25752EEA0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = OUTLINED_FUNCTION_29_2();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 200);
  *(void *)(v1 + 32) = *(void *)(v0 + 192);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25752EEF4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 208);
  return sub_25747A4E0(v1);
}

uint64_t sub_25752EF24()
{
  sub_25752EAB8();
  swift_bridgeObjectRelease();
  sub_25747A4E0(*(void *)(v0 + 208));
  return v0;
}

uint64_t sub_25752EF50()
{
  sub_25752EF24();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConvolutionTranspose2DOperation()
{
  return self;
}

uint64_t sub_25752EFA8()
{
  unint64_t v0 = sub_25752E160();
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (v0 >> 62)
  {
    swift_retain();
    uint64_t v1 = sub_2576A8BF0();
  }
  else
  {
    uint64_t v1 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
  }
  uint64_t result = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    sub_2574FD024(result, 0);
    sub_2576A7E20();
    uint64_t v3 = swift_retain();
    sub_2575A01EC(v3);
    sub_2576A7810();
    sub_2575A0418();
    swift_release();
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

#error "25752F0C4: call analysis failed (funcsize=19)"

uint64_t sub_25752F0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  OUTLINED_FUNCTION_4_31();
  *(void *)(v29 + 192) = v31;
  if (!v32)
  {
    *(void *)&a9 = a21;
    *((void *)&a9 + 1) = v30;
    sub_25761B148(a28, a29);
  }
  OUTLINED_FUNCTION_6_30();
  return sub_25752E934(v33, v34, v35, v36, v37, v38, v39, v40, a9, a10, a11, a12);
}

uint64_t sub_25752F178()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB30;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = *(void *)(v2 + 152);
  LOBYTE(v2) = *(unsigned char *)(v2 + 160);
  *(void *)(v1 + 32) = v4;
  *(unsigned char *)(v1 + 40) = v2;
  LOBYTE(v2) = *(unsigned char *)(v3 + 160);
  *(void *)(v1 + 48) = *(void *)(v3 + 152);
  *(unsigned char *)(v1 + 56) = v2;
  uint64_t v5 = v0[7];
  if (v5)
  {
    uint64_t v6 = *(void *)(v5 + 152);
    char v7 = *(unsigned char *)(v5 + 160);
    sub_2576A7810();
    sub_2576A7810();
    swift_retain();
    sub_2576A7810();
    sub_257471D18();
    uint64_t v1 = v8;
    *(void *)(v8 + 16) = 3;
    *(void *)(v8 + 64) = v6;
    *(unsigned char *)(v8 + 72) = v7;
    swift_release();
  }
  else
  {
    sub_2576A7810();
    sub_2576A7810();
  }
  return v1;
}

uint64_t sub_25752F260()
{
  sub_25752EAB8();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConvolutionTranspose2DGradientOperation()
{
  return self;
}

uint64_t sub_25752F2C0(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001808, (void (*)(void))type metadata accessor for ConvolutionTranspose2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F318(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001810, (void (*)(void))type metadata accessor for ConvolutionTranspose2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F370(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001818, (void (*)(void))type metadata accessor for Convolution2DGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F3C8(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001820, (void (*)(void))type metadata accessor for Convolution2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F420(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001828, (void (*)(void))type metadata accessor for LinearGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F478(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A0033D8, (void (*)(void))type metadata accessor for LinearGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F4D0(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001830, (void (*)(void))type metadata accessor for LinearOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F528(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A001868, (void (*)(void))type metadata accessor for MatrixMultiplicationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F580(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A0033E0, (void (*)(void))type metadata accessor for MatrixMultiplicationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F5D8(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A0033E8, (void (*)(void))type metadata accessor for LinearOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F630(uint64_t a1)
{
  uint64_t result = sub_25752F688(&qword_26A0033F0, (void (*)(void))type metadata accessor for BaseConvolution2DOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25752F688(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_46()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_2_31()
{
  return 0x6172745F766E6F63;
}

uint64_t OUTLINED_FUNCTION_3_30(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0x675F000000000000;
}

void OUTLINED_FUNCTION_7_26()
{
  uint64_t v2 = *v0;
  char v3 = *((unsigned char *)v0 + 8);
  *(void *)(v1 + 192) = v2;
  *(unsigned char *)(v1 + 200) = v3;
}

__n128 *OUTLINED_FUNCTION_8_29(__n128 *result, __n128 a2)
{
  result[1] = a2;
  unint64_t v3 = *(void *)(v2 + 48);
  result[2].n128_u64[0] = *(void *)(v2 + 40);
  result[2].n128_u64[1] = v3;
  return result;
}

uint64_t *sub_25752F7C8(uint64_t a1)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v7 - 8);
  OUTLINED_FUNCTION_6_3();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_4_32();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_2575CA350();
  uint64_t v13 = sub_2574BAF20(v12, a1);
  if (!v13) {
    goto LABEL_8;
  }
  uint64_t v15 = v13;
  unint64_t v3 = v14;
  uint64_t v16 = sub_2575CA350();
  uint64_t v45 = sub_2574BAF20(v16, a1);
  if (!v45)
  {
LABEL_7:
    swift_unknownObjectRelease();
LABEL_8:
    sub_257480520();
    uint64_t v23 = swift_allocError();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B4C40, v23, v24);
    return v3;
  }
  uint64_t v43 = v17;
  uint64_t v44 = v3;
  uint64_t v18 = sub_2575CA350();
  uint64_t v19 = sub_2574BAF20(v18, a1);
  if (!v19)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  unint64_t v3 = v20;
  uint64_t v42 = v19;
  if (*(void *)(v1 + 136))
  {
    uint64_t v21 = sub_2575CA350();
    uint64_t v40 = sub_2574BAF20(v21, a1);
    uint64_t v41 = v22;
  }
  else
  {
    if (*(float *)(v1 + 116) != 0.0)
    {
      sub_257480520();
      uint64_t v36 = swift_allocError();
      OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B4C40, v36, v37);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v3;
    }
    uint64_t v40 = 0;
    uint64_t v41 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  ((void (*)(uint64_t *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), void, void, uint64_t, uint64_t *))v3[7])(&v46, sub_25752FB98, 0, MEMORY[0x263F8D5C8], ObjectType, v3);
  uint64_t v39 = v2;
  int v27 = v46;
  sub_2576A6DD0();
  uint64_t v28 = OUTLINED_FUNCTION_0_42();
  unint64_t v3 = &v39;
  MEMORY[0x270FA5388](v28);
  *((_DWORD *)&v39 - 4) = v27;
  *(&v39 - 1) = v1;
  uint64_t v29 = swift_getObjectType();
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = v43;
  *(&v39 - 8) = v45;
  *(&v39 - 7) = v30;
  uint64_t v32 = v40;
  uint64_t v31 = v41;
  *(&v39 - 6) = v4;
  *(&v39 - 5) = v32;
  *(&v39 - 4) = v31;
  *(&v39 - 3) = v5;
  *(&v39 - 2) = (uint64_t)sub_2575307E0;
  *(&v39 - 1) = (uint64_t)(&v39 - 4);
  uint64_t v33 = v39;
  sub_257648508((uint64_t)sub_257530800, (uint64_t)(&v39 - 10), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v33)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v5);
    sub_257480BC8(v4);
    sub_257480BC8((uint64_t)v11);
  }
  else
  {
    uint64_t v34 = v41;
    sub_257480BC8(v5);
    sub_257480BC8(v4);
    sub_257480BC8((uint64_t)v11);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
    unint64_t v3 = (uint64_t *)swift_allocObject();
    if (v32)
    {
      *((_OWORD *)v3 + 1) = xmmword_2576ABB30;
      uint64_t v35 = v44;
      v3[4] = v15;
      v3[5] = (uint64_t)v35;
      v3[6] = v32;
      v3[7] = v34;
    }
    else
    {
      *((_OWORD *)v3 + 1) = xmmword_2576ABB10;
      uint64_t v38 = v44;
      v3[4] = v15;
      v3[5] = (uint64_t)v38;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return v3;
}

_DWORD *sub_25752FB98@<X0>(_DWORD *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_257530414(a1, a2);
}

uint64_t sub_25752FBB0(const void *a1, const void *a2, uint64_t a3, uint64_t a4, float a5)
{
  uint64_t v25 = sub_2576A6C80();
  uint64_t v11 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x25A2B7250](0, 1, *(unsigned __int8 *)(a4 + 120), 0, 0, a5, *(float *)(a4 + 116), 1.0, 1.0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E68);
  uint64_t v14 = swift_allocObject();
  long long v26 = xmmword_2576ABB10;
  *(_OWORD *)(v14 + 16) = xmmword_2576ABB10;
  memcpy((void *)(v14 + 32), a1, 0xB0uLL);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = v26;
  memcpy((void *)(v15 + 32), a2, 0xB0uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003400);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v26;
  uint64_t v17 = inited + 32;
  sub_2574D1114(a3, inited + 32);
  sub_2574D1114(v17, (uint64_t)v28);
  sub_2574D1114((uint64_t)v28, (uint64_t)v29);
  if (sub_257530834((uint64_t)v29) == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)&long long v26 = v5;
    sub_257472E48();
    uint64_t v19 = v18;
    unint64_t v20 = *(void *)(v18 + 16);
    if (v20 >= *(void *)(v18 + 24) >> 1)
    {
      sub_257472E48();
      uint64_t v19 = v23;
    }
    sub_2574D1114((uint64_t)v28, (uint64_t)v27);
    *(void *)(v19 + 16) = v20 + 1;
    memcpy((void *)(v19 + 176 * v20 + 32), v27, 0xB0uLL);
    swift_bridgeObjectRelease();
  }
  sub_2576A8470();
  sub_2576A83D0();
  uint64_t v21 = v25;
  sub_2576A6980();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_25752FEA0(uint64_t a1)
{
  return sub_25752F7C8(a1);
}

__n128 *sub_25752FEB8(__n128 *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v6 - 8);
  OUTLINED_FUNCTION_6_3();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_4_32();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v58 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v58 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v58 - v15;
  uint64_t v17 = sub_2575CA350();
  uint64_t v18 = sub_2574BAF20(v17, (uint64_t)a1);
  if (!v18) {
    goto LABEL_17;
  }
  unint64_t v20 = (__n128 *)v18;
  uint64_t v70 = v19;
  uint64_t v21 = sub_2575CA350();
  uint64_t v22 = sub_2574BAF20(v21, (uint64_t)a1);
  if (!v22)
  {
LABEL_16:
    swift_unknownObjectRelease();
LABEL_17:
    sub_257480520();
    uint64_t v38 = swift_allocError();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B4C50, v38, v39);
    return a1;
  }
  uint64_t v68 = v23;
  id v71 = (__n128 *)v22;
  uint64_t v24 = sub_2575CA350();
  uint64_t v25 = sub_2574BAF20(v24, (uint64_t)a1);
  if (!v25)
  {
LABEL_15:
    swift_unknownObjectRelease();
    goto LABEL_16;
  }
  uint64_t v66 = v26;
  uint64_t v69 = (__n128 *)v25;
  uint64_t v27 = sub_2575CA350();
  uint64_t v28 = sub_2574BAF20(v27, (uint64_t)a1);
  if (!v28)
  {
    a1 = v20;
LABEL_14:
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  uint64_t v64 = v29;
  uint64_t v67 = (__n128 *)v28;
  uint64_t v30 = sub_2575CA350();
  uint64_t v31 = sub_2574BAF20(v30, (uint64_t)a1);
  if (!v31)
  {
    a1 = v71;
LABEL_13:
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v61 = v32;
  uint64_t v65 = v31;
  uint64_t v33 = sub_2575CA350();
  uint64_t v34 = sub_2574BAF20(v33, (uint64_t)a1);
  if (!v34)
  {
    swift_unknownObjectRelease();
    a1 = v69;
    goto LABEL_13;
  }
  uint64_t v59 = v35;
  uint64_t v62 = v34;
  if (*(void *)(v1 + 152))
  {
    uint64_t v36 = sub_2575CA350();
    uint64_t v63 = sub_2574BAF20(v36, (uint64_t)a1);
    unint64_t v60 = v37;
  }
  else
  {
    uint64_t v63 = 0;
    unint64_t v60 = 0;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v42 = v72;
  ((void (*)(char *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), void, void, uint64_t))v61[7])((char *)&v73 + 4, sub_25752FB98, 0, MEMORY[0x263F8D5C8], ObjectType);
  int v43 = HIDWORD(v73);
  uint64_t v44 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, _DWORD *(*)@<X0>(_DWORD *@<X0>, _DWORD *@<X8>), void, void, uint64_t))(v59 + 56))(&v73, sub_257530428, 0, MEMORY[0x263F8E548], v44);
  uint64_t v61 = v42;
  int v45 = v73;
  uint64_t v46 = sub_2576A6DD0();
  __swift_storeEnumTagSinglePayload((uint64_t)v16, 1, 1, v46);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, v46);
  uint64_t v47 = OUTLINED_FUNCTION_0_42();
  uint64_t v72 = &v58;
  unsigned __int32 v48 = MEMORY[0x270FA5388](v47).n128_u32[0];
  *((_DWORD *)&v58 - 8) = v43;
  *(uint64_t *)((char *)&v58 - 28) = v49;
  *((_DWORD *)&v58 - 5) = v45;
  *((_DWORD *)&v58 - 4) = v48;
  *(&v58 - 1) = v4;
  uint64_t v50 = swift_getObjectType();
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = v68;
  uint64_t v52 = v69;
  *(&v58 - 14) = (uint64_t)v71;
  *(&v58 - 13) = v51;
  *(&v58 - 12) = (uint64_t)v13;
  *(&v58 - 11) = (uint64_t)v52;
  a1 = v67;
  *(&v58 - 10) = v66;
  *(&v58 - 9) = (uint64_t)v10;
  uint64_t v53 = v64;
  *(&v58 - 8) = (uint64_t)a1;
  *(&v58 - 7) = v53;
  uint64_t v54 = v63;
  *(&v58 - 6) = v2;
  *(&v58 - 5) = v54;
  long long v55 = v61;
  *(&v58 - 4) = v60;
  *(&v58 - 3) = v3;
  *(&v58 - 2) = (uint64_t)sub_257530850;
  *(&v58 - 1) = (uint64_t)(&v58 - 6);
  sub_257648508((uint64_t)sub_25753087C, (uint64_t)(&v58 - 16), MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  if (v55)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_257480BC8(v3);
    sub_257480BC8(v2);
    sub_257480BC8((uint64_t)v10);
    sub_257480BC8((uint64_t)v13);
    sub_257480BC8((uint64_t)v16);
  }
  else
  {
    unint64_t v56 = v60;
    sub_257480BC8(v3);
    sub_257480BC8(v2);
    sub_257480BC8((uint64_t)v10);
    sub_257480BC8((uint64_t)v13);
    sub_257480BC8((uint64_t)v16);
    if (v63)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      a1 = (__n128 *)swift_allocObject();
      uint64_t v57 = OUTLINED_FUNCTION_1_47(a1, (__n128)xmmword_2576AE070);
      v57[5].n128_u64[0] = v63;
      v57[5].n128_u64[1] = v56;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      a1 = (__n128 *)swift_allocObject();
      OUTLINED_FUNCTION_1_47(a1, (__n128)xmmword_2576ABB50);
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return a1;
}

_DWORD *sub_257530414@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  if (result) {
    *a2 = *result;
  }
  else {
    __break(1u);
  }
  return result;
}

_DWORD *sub_257530428@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  if (result) {
    *a2 = *result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_25753043C(const void *a1, const void *a2, const void *a3, const void *a4, uint64_t a5)
{
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v8 = sub_2576A6AD0();
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A6AC0();
  sub_2576A6AB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E68);
  uint64_t v11 = (_OWORD *)swift_allocObject();
  v11[1] = xmmword_2576ABB30;
  memcpy(v11 + 2, a3, 0xB0uLL);
  memcpy(v11 + 13, a4, 0xB0uLL);
  uint64_t v21 = v11;
  sub_2574D1114(a5, (uint64_t)v19);
  if (sub_257530834((uint64_t)v19) != 1)
  {
    memcpy(v20, v19, sizeof(v20));
    sub_2575A0F60();
  }
  uint64_t v12 = swift_allocObject();
  long long v15 = xmmword_2576ABB10;
  *(_OWORD *)(v12 + 16) = xmmword_2576ABB10;
  memcpy((void *)(v12 + 32), v16, 0xB0uLL);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = v15;
  memcpy((void *)(v13 + 32), v17, 0xB0uLL);
  sub_2576A8470();
  sub_2576A83D0();
  sub_2576A6980();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

__n128 *sub_2575306EC(__n128 *a1)
{
  return sub_25752FEB8(a1);
}

uint64_t sub_257530704(uint64_t a1)
{
  uint64_t result = sub_25753078C((unint64_t *)&qword_26A001800, (void (*)(uint64_t))type metadata accessor for AdamOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257530748(uint64_t a1)
{
  uint64_t result = sub_25753078C((unint64_t *)&qword_26A0033F8, (void (*)(uint64_t))type metadata accessor for StochasticGradientDescentOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25753078C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2575307E0(const void *a1, const void *a2, uint64_t a3)
{
  return sub_25752FBB0(a1, a2, a3, *(void *)(v3 + 24), *(float *)(v3 + 16));
}

uint64_t sub_257530800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2574D0E90(a1, v2[5], v2[6], v2[7], v2[8], a2, v2[9]);
}

uint64_t sub_257530834(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257530850(const void *a1, const void *a2, const void *a3, const void *a4, uint64_t a5)
{
  return sub_25753043C(a1, a2, a3, a4, a5);
}

uint64_t sub_25753087C(uint64_t a1)
{
  return sub_2574C1018(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(_OWORD *)(v1 + 72), *(_OWORD *)(v1 + 88), *(_OWORD *)(v1 + 104), *(void *)(v1 + 120));
}

uint64_t OUTLINED_FUNCTION_0_42()
{
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v0);
  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v0);
}

__n128 *OUTLINED_FUNCTION_1_47(__n128 *result, __n128 a2)
{
  result[1] = a2;
  unint64_t v4 = *(void *)(v3 - 112);
  result[2].n128_u64[0] = v2;
  result[2].n128_u64[1] = v4;
  unint64_t v5 = *(void *)(v3 - 144);
  result[3].n128_u64[0] = *(void *)(v3 - 120);
  result[3].n128_u64[1] = v5;
  unint64_t v6 = *(void *)(v3 - 160);
  result[4].n128_u64[0] = *(void *)(v3 - 136);
  result[4].n128_u64[1] = v6;
  return result;
}

id sub_25753095C()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F13430]), sel_init);
  objc_msgSend(v1, sel_setBidirectional_, *(unsigned __int8 *)(v0 + 96));
  objc_msgSend(v1, sel_setProduceCell_, 1);
  objc_msgSend(v1, sel_setTraining_, 1);
  objc_msgSend(v1, sel_setInputGateActivation_, 3);
  objc_msgSend(v1, sel_setForgetGateActivation_, 3);
  objc_msgSend(v1, sel_setCellGateActivation_, 2);
  objc_msgSend(v1, sel_setOutputGateActivation_, 3);
  objc_msgSend(v1, sel_setActivation_, 2);
  objc_msgSend(v1, sel_setForgetGateLast_, 0);
  return v1;
}

uint64_t sub_257530A48(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_2574C3A2C();
  if (v5)
  {
    id v8 = 0;
  }
  else
  {
    uint64_t v6 = v4;
    sub_257582858(v4, (a2 & 0xC000000000000001) == 0, a2);
    if ((a2 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x25A2B8DB0](v6, a2);
    }
    else {
      id v7 = *(id *)(a2 + 8 * v6 + 32);
    }
    id v8 = v7;
  }
  uint64_t v9 = sub_2574C3A44();
  if (v10)
  {
    uint64_t v30 = 0;
  }
  else
  {
    uint64_t v11 = v9;
    sub_257582858(v9, (a2 & 0xC000000000000001) == 0, a2);
    if ((a2 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x25A2B8DB0](v11, a2);
    }
    else {
      id v12 = *(id *)(a2 + 8 * v11 + 32);
    }
    uint64_t v30 = v12;
  }
  uint64_t v13 = sub_2574C3A70();
  unint64_t v14 = a2 & 0xC000000000000001;
  BOOL v15 = (a2 & 0xC000000000000001) == 0;
  id v31 = a1;
  if (v16)
  {
    a1 = v8;
    id v20 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v17 = v13;
    sub_257582858(v13, v14 == 0, a2);
    if (v14) {
      id v18 = (id)MEMORY[0x25A2B8DB0](v17, a2);
    }
    else {
      id v18 = *(id *)(a2 + 8 * v17 + 32);
    }
    uint64_t v19 = v18;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
    }
    else
    {
      sub_257582858(v17 + 1, v14 == 0, a2);
      a1 = v8;
      if (!v14)
      {
        id v20 = *(id *)(a2 + 8 * (v17 + 1) + 32);
        BOOL v15 = 1;
        goto LABEL_18;
      }
    }
    id v20 = (id)MEMORY[0x25A2B8DB0](v17 + 1, a2);
    BOOL v15 = 0;
  }
LABEL_18:
  sub_257582858(0, v15, a2);
  if (v15) {
    id v21 = *(id *)(a2 + 32);
  }
  else {
    id v21 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  uint64_t v22 = v21;
  sub_257582858(1, v15, a2);
  if (v15) {
    id v23 = *(id *)(a2 + 40);
  }
  else {
    id v23 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  uint64_t v24 = v23;
  id v25 = sub_25753095C();
  sub_2576A7810();
  uint64_t v26 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v31, sel_LSTMWithSourceTensor_recurrentWeight_inputWeight_bias_initState_initCell_descriptor_name_, v22, v24, a1, v30, v19, v20, v25, v26);

  sub_257476D2C();
  uint64_t v28 = sub_2576A7DF0();

  return v28;
}

uint64_t sub_257530CE8(void *a1, uint64_t a2)
{
  return sub_257530A48(a1, a2);
}

uint64_t sub_257530D00(void *a1, unint64_t a2)
{
  unint64_t v5 = a2 & 0xC000000000000001;
  sub_257582858(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v5) {
    id v6 = (id)MEMORY[0x25A2B8DB0](0, a2);
  }
  else {
    id v6 = *(id *)(a2 + 32);
  }
  id v7 = v6;
  OUTLINED_FUNCTION_0_43();
  sub_257582858(1, v8, a2);
  if (v5) {
    id v9 = (id)MEMORY[0x25A2B8DB0](1, a2);
  }
  else {
    id v9 = *(id *)(a2 + 40);
  }
  id v10 = v9;
  OUTLINED_FUNCTION_0_43();
  sub_257582858(2, v11, a2);
  if (v5) {
    id v12 = (id)MEMORY[0x25A2B8DB0](2, a2);
  }
  else {
    id v12 = *(id *)(a2 + 48);
  }
  uint64_t v42 = v12;
  OUTLINED_FUNCTION_0_43();
  sub_257582858(3, v13, a2);
  if (v5) {
    id v14 = (id)MEMORY[0x25A2B8DB0](3, a2);
  }
  else {
    id v14 = *(id *)(a2 + 56);
  }
  uint64_t v40 = v14;
  OUTLINED_FUNCTION_0_43();
  sub_257582858(4, v15, a2);
  if (v5) {
    id v16 = (id)MEMORY[0x25A2B8DB0](4, a2);
  }
  else {
    id v16 = *(id *)(a2 + 64);
  }
  uint64_t v39 = v16;
  if (*(void *)(v2 + 64))
  {
    OUTLINED_FUNCTION_0_43();
    sub_257582858(5, v17, a2);
    if (v5) {
      id v18 = (id)MEMORY[0x25A2B8DB0](5, a2);
    }
    else {
      id v18 = *(id *)(a2 + 72);
    }
    uint64_t v38 = v18;
  }
  else
  {
    uint64_t v38 = 0;
  }
  uint64_t v19 = sub_257531038();
  uint64_t v41 = v10;
  if (v20)
  {
    id v23 = 0;
  }
  else
  {
    uint64_t v21 = v19;
    sub_257582858(v19, v5 == 0, a2);
    if (v5) {
      id v22 = (id)MEMORY[0x25A2B8DB0](v21, a2);
    }
    else {
      id v22 = *(id *)(a2 + 8 * v21 + 32);
    }
    id v23 = v22;
  }
  uint64_t v24 = sub_257531064();
  if (v25)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v26 = v24;
    sub_257582858(v24, v5 == 0, a2);
    if (v5) {
      id v27 = (id)MEMORY[0x25A2B8DB0](v26, a2);
    }
    else {
      id v27 = *(id *)(a2 + 8 * v26 + 32);
    }
    uint64_t v29 = v27;
    OUTLINED_FUNCTION_0_43();
    uint64_t v30 = v26 + 1;
    sub_257582858(v30, v31, a2);
    if (v5) {
      id v32 = (id)MEMORY[0x25A2B8DB0](v30, a2);
    }
    else {
      id v32 = *(id *)(a2 + 8 * v30 + 32);
    }
    uint64_t v28 = v32;
  }
  id v33 = sub_25753095C();
  sub_2576A7810();
  uint64_t v34 = (void *)sub_2576A79C0();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(a1, sel_LSTMGradientsWithSourceTensor_recurrentWeight_sourceGradient_zState_cellOutputFwd_inputWeight_bias_initState_initCell_descriptor_name_, v40, v39, v7, v42, v41, v38, v23, v29, v28, v33, v34);

  sub_257476D2C();
  uint64_t v36 = sub_2576A7DF0();

  return v36;
}

uint64_t sub_257531038()
{
  if (!*(void *)(v0 + 72)) {
    return 0;
  }
  if (*(void *)(v0 + 64)) {
    return 6;
  }
  return 5;
}

uint64_t sub_257531064()
{
  uint64_t result = sub_2574C29F0();
  if (result)
  {
    sub_2574C3AC0(result);
    uint64_t v2 = 5;
    if (*(void *)(v0 + 64)) {
      uint64_t v2 = 6;
    }
    if (*(void *)(v0 + 72)) {
      return v2 + 1;
    }
    else {
      return v2;
    }
  }
  return result;
}

uint64_t sub_2575310B4(void *a1, unint64_t a2)
{
  return sub_257530D00(a1, a2);
}

uint64_t sub_2575310CC(uint64_t a1)
{
  uint64_t result = sub_257531154((unint64_t *)&qword_26A001D60, (void (*)(uint64_t))type metadata accessor for LSTMLayerGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257531110(uint64_t a1)
{
  uint64_t result = sub_257531154(&qword_26A001D68, (void (*)(uint64_t))type metadata accessor for LSTMLayerOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257531154(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_2575311B4()
{
  id v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AE0]), sel_init);
    uint64_t v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_257531220(void *a1)
{
  sub_257531348((uint64_t)a1);
  if (!v1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_2575313F0((uint64_t)a1);
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24))(v5, v7, ObjectType, v4);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_257531548(v9, v11, a1);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_257531348(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = a1;
  if (!sub_257531DA0((void (*)(uint64_t *__return_ptr))sub_257531F04, (uint64_t)v2))
  {
    MEMORY[0x270FA5388](0);
    sub_257531CE8((void (*)(uint64_t *__return_ptr))sub_257531F20);
  }
}

uint64_t sub_2575313F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  v12[2] = a1;
  sub_2576A7810();
  sub_257597434((uint64_t)sub_257531EE4, (uint64_t)v12, v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(a1 + 88);
  if (v6 >> 62)
  {
    sub_2576A7810();
    uint64_t v7 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 == v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v14 = sub_2576A77E0();
    uint64_t v8 = sub_25746D748(v4);
    uint64_t v9 = swift_bridgeObjectRelease();
    uint64_t v13 = v8;
    sub_257470688(v9);
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_257531E98();
    swift_allocError();
    *uint64_t v11 = 0;
    return swift_willThrow();
  }
}

unint64_t sub_257531548(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = a3[19];
  if (v7 >> 62)
  {
LABEL_31:
    sub_2576A7810();
    uint64_t v36 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (v6 == v36)
    {
      sub_2576A7810();
      uint64_t v8 = sub_2576A8BF0();
      if (v8) {
        goto LABEL_4;
      }
      return swift_bridgeObjectRelease();
    }
LABEL_34:
    sub_257531E98();
    swift_allocError();
    *unint64_t v37 = 1;
    return swift_willThrow();
  }
  if (v6 != *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_34;
  }
  sub_2576A7810();
  uint64_t v8 = v6;
  if (!v6) {
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  unint64_t v40 = v6;
  unint64_t v45 = v7 & 0xC000000000000001;
  uint64_t v38 = v5 + 32;
  uint64_t v39 = v8;
  uint64_t v6 = 4;
  unint64_t v41 = v7;
  while (1)
  {
    if (v45)
    {
      uint64_t v9 = MEMORY[0x25A2B8DB0](v6 - 4, v7);
    }
    else
    {
      uint64_t v9 = *(void *)(v7 + 8 * v6);
      swift_retain();
    }
    uint64_t v10 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v12 = a3[13];
    uint64_t v11 = a3[14];
    uint64_t v13 = sub_2576136DC();
    unint64_t v7 = v14;
    if (*(void *)(v11 + 16))
    {
      unint64_t result = sub_25747588C(v13, v14);
      if (v16) {
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = a3[17];
    uint64_t v18 = a3[18];
    uint64_t v19 = sub_2576136DC();
    unint64_t v7 = v20;
    if (!*(void *)(v18 + 16) || (unint64_t result = sub_25747588C(v19, v20), (v21 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_2576136DC();
      uint64_t v24 = v25;
      goto LABEL_20;
    }
    unint64_t v17 = *(void *)(*(void *)(v18 + 56) + 8 * result);
    if ((v17 & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    if (v17 >= *(void *)(v12 + 16)) {
      goto LABEL_38;
    }
LABEL_18:
    uint64_t v22 = v12 + 16 * v17;
    uint64_t v23 = *(void *)(v22 + 32);
    uint64_t v24 = *(void *)(v22 + 40);
    sub_2576A7810();
    swift_bridgeObjectRelease();
LABEL_20:
    if (!*(void *)(a2 + 16)
      || (v5 = a2, unint64_t v26 = sub_25747588C(v23, v24), (v27 & 1) == 0)
      || (uint64_t v28 = *(void *)(*(void *)(a2 + 56) + 8 * v26), !*(void *)(v28 + 16)))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_257531E98();
      swift_allocError();
      unsigned char *v35 = 1;
      swift_willThrow();
      return swift_release();
    }
    unint64_t v29 = *(void *)(v28 + 32);
    if (v29 >= v40) {
      goto LABEL_30;
    }
    unint64_t v30 = v38 + 32 * v29;
    uint64_t v32 = *(void *)(v30 + 16);
    uint64_t v31 = *(void *)(v30 + 24);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_retain();
    id v33 = sub_257614628();
    objc_msgSend(v33, sel_lock);

    swift_beginAccess();
    sub_257486824(v9 + 40, (uint64_t)v44);
    if (!v44[105])
    {
      sub_257486824(v9 + 40, (uint64_t)v42);
      sub_257614AD0(v32, v31, (uint64_t)v43);
      sub_257486880((uint64_t)v42);
      swift_beginAccess();
      sub_2574A79A8((uint64_t)v43, v9 + 40);
      swift_endAccess();
    }
    sub_257486880((uint64_t)v44);
    uint64_t v5 = v9;
    id v34 = sub_257614628();
    objc_msgSend(v34, sel_unlock);
    swift_unknownObjectRelease_n();
    swift_release_n();

    ++v6;
    unint64_t v7 = v41;
    if (v10 == v39) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * result);
  if ((v17 & 0x8000000000000000) == 0)
  {
    if (v17 >= *(void *)(v12 + 16)) {
      goto LABEL_36;
    }
    goto LABEL_18;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_25753192C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  *a2 = sub_2575F29B0();
  a2[1] = v4;
  a2[2] = v3;
  return swift_retain();
}

uint64_t sub_25753197C()
{
  swift_release();

  return v0;
}

uint64_t sub_2575319A4()
{
  sub_25753197C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphBackend()
{
  return self;
}

uint64_t sub_2575319FC()
{
  uint64_t v1 = v0;
  if (qword_26A0008B8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_26A000DF0;
  type metadata accessor for LazyTensorFunctionExecutorCache();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_257558C10(v2);
  *(void *)(v1 + 24) = 0;
  return v1;
}

void sub_257531AA0(void *a1)
{
}

uint64_t sub_257531AB8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = a1 + 168;
  sub_25747B47C(a1 + 168, (uint64_t)&v14);
  if (*((void *)&v15 + 1))
  {
    uint64_t v6 = *((void *)&v16 + 1);
    if ((unint64_t)(*((void *)&v16 + 1) - 1) >= 2)
    {
      swift_unknownObjectRetain();
      sub_257486674((uint64_t)&v14);
      if (v6) {
        goto LABEL_8;
      }
    }
    else
    {
      sub_257486674((uint64_t)&v14);
    }
  }
  else
  {
    sub_25747B4E4((uint64_t)&v14);
  }
  id v7 = sub_2575B5668();
  if (v7)
  {
    uint64_t v6 = (uint64_t)v7;
LABEL_8:
    type metadata accessor for SharedMetalDevice();
    uint64_t v8 = sub_2575596FC(v6);
    if (v2) {
      return swift_unknownObjectRelease();
    }
    uint64_t v10 = v8;
    sub_25747C54C(a1, (uint64_t)&v14);
    type metadata accessor for MPSGraphExecutor();
    swift_allocObject();
    swift_retain();
    uint64_t v13 = sub_2575412E8(&v14, v10);
    sub_257476C7C(a1, (uint64_t)&v14);
    swift_retain();
    sub_257558B28(v13, (uint64_t)&off_270667460, (uint64_t)&v14);
    swift_unknownObjectRelease();
    uint64_t result = swift_release();
    *a2 = v13;
    a2[1] = (uint64_t)&off_270667460;
    return result;
  }
  sub_25747B47C(v5, (uint64_t)&v18);
  if (*((void *)&v19 + 1))
  {
    long long v14 = v18;
    long long v15 = v19;
    long long v16 = v20;
    int v17 = v21;
  }
  else
  {
    *((void *)&v16 + 1) = 0;
    *((void *)&v15 + 1) = &unk_270669348;
    *(void *)&long long v16 = &off_2706693C8;
    int v17 = sub_2575B5A88(0);
    sub_25747B4E4((uint64_t)&v18);
  }
  sub_257531F3C();
  swift_allocError();
  uint64_t v12 = v11;
  sub_2574866D0((uint64_t)&v14, v11);
  *(unsigned char *)(v12 + 108) = 19;
  swift_willThrow();
  return sub_257486674((uint64_t)&v14);
}

void sub_257531CE8(void (*a1)(uint64_t *__return_ptr))
{
  id v2 = sub_2575311B4();
  objc_msgSend(v2, sel_lock);

  a1(&v4);
  id v3 = sub_2575311B4();
  objc_msgSend(v3, sel_unlock);
}

uint64_t sub_257531DA0(void (*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  sub_257595364();
  a1(&v6);
  if (!v2) {
    a2 = v6;
  }
  sub_257595388();
  return a2;
}

void sub_257531E2C(void (*a1)(void))
{
}

unint64_t sub_257531E98()
{
  unint64_t result = qword_26A003408;
  if (!qword_26A003408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003408);
  }
  return result;
}

uint64_t sub_257531EE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25753192C(a1, a2);
}

uint64_t sub_257531F04@<X0>(uint64_t a1@<X8>)
{
  return sub_257558F58(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_257531F20@<X0>(uint64_t *a1@<X8>)
{
  return sub_257531AB8(*(void *)(v1 + 16), a1);
}

unint64_t sub_257531F3C()
{
  unint64_t result = qword_26A003990;
  if (!qword_26A003990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003990);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MPSGraphBackend.ResolutionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257532054);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPSGraphBackend.ResolutionError()
{
  return &type metadata for MPSGraphBackend.ResolutionError;
}

unint64_t sub_257532090()
{
  unint64_t result = qword_26A003410;
  if (!qword_26A003410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003410);
  }
  return result;
}

uint64_t sub_2575320DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v2 + 152);
  LOBYTE(v2) = *(unsigned char *)(v2 + 160);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v2;
  return sub_2576A7810();
}

void sub_2575320F4()
{
}

uint64_t sub_257532154()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2576ABB10;
  sub_2575320DC(v0 + 32);
  return v0;
}

uint64_t sub_2575321A4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_DWORD *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = a4;
  sub_257469238(a5, v5 + 48);
  return v5;
}

uint64_t sub_2575321D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_2575321FC()
{
  sub_2575321D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseUnaryElementwiseOperation()
{
  return self;
}

uint64_t sub_257532254()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_257532278()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

__n128 sub_2575322A0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  char v3 = *(unsigned char *)(v1 + 104);
  char v4 = *(unsigned char *)(v1 + 105);
  long long v5 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 80);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_2575322CC()
{
  return sub_25761B124();
}

uint64_t sub_257532318()
{
  return sub_25747A4E0(*(void *)(v0 + 112));
}

uint64_t sub_257532320()
{
  sub_2575321D4();
  sub_25747A4E0(*(void *)(v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnaryElementwiseOperation()
{
  return self;
}

uint64_t sub_257532380()
{
  uint64_t v1 = *(void *)(v0 + 112);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_2575323B4(uint64_t a1)
{
  uint64_t result = sub_257532464(&qword_26A003418, (void (*)(void))type metadata accessor for UnaryElementwiseOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25753240C(uint64_t a1)
{
  uint64_t result = sub_257532464(&qword_26A003420, (void (*)(void))type metadata accessor for BaseUnaryElementwiseOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257532464(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_2575324A8()
{
}

uint64_t sub_257532508(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, uint64_t *a8, uint64_t a9)
{
  char v10 = *a7;
  uint64_t v11 = *a8;
  char v12 = *((unsigned char *)a8 + 8);
  *(_DWORD *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = a6;
  *(unsigned char *)(v9 + 64) = v10;
  *(void *)(v9 + 72) = v11;
  *(unsigned char *)(v9 + 80) = v12;
  sub_257469238(a9, v9 + 88);
  return v9;
}

uint64_t sub_257532558()
{
  (*(void (**)(void))(*(void *)v0 + 128))();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  sub_2576A90A0();
  sub_2576A90A0();
  if (v0[64] == 2)
  {
    sub_2576A90A0();
  }
  else
  {
    sub_2576A90A0();
    sub_2576A90B0();
  }
  return sub_2576A90A0();
}

uint64_t sub_257532624()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257532654()
{
  sub_257532624();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseResizeOperation()
{
  return self;
}

uint64_t sub_2575326AC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t sub_2575326D0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_2575326F4()
{
  return sub_257532558();
}

uint64_t sub_257532718()
{
  return sub_25761B124();
}

uint64_t sub_257532764()
{
  return 0x657A69736572;
}

uint64_t sub_257532778(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v11 + 152) = a10;
  *(void *)(v11 + 160) = a11;
  if (!a3) {
    a1 = sub_25761B148(0x657A69736572, 0xE600000000000000);
  }
  return OUTLINED_FUNCTION_0_44(a1, a2, a3, a4, a5, a6, a7, a8, v13, v14, v15, v16, *(__int16 *)v17, *(__int16 *)&v17[2], v17[4], v17[5]);
}

uint64_t sub_2575327F4()
{
  return sub_25747A4E0(*(void *)(v0 + 152));
}

uint64_t sub_2575327FC()
{
  sub_257532624();
  sub_25747A4E0(*(void *)(v0 + 152));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResizeOperation()
{
  return self;
}

uint64_t sub_25753285C()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_25747A4D0(v1);
  return v1;
}

uint64_t sub_257532890()
{
  return OUTLINED_FUNCTION_1_48();
}

uint64_t sub_2575328A0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v1 + 32) = *(void *)(v0 + 152);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_257532920(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 152) = a4;
  if (!a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_1_48();
    a1 = sub_25761B148(v9, v10);
  }
  return OUTLINED_FUNCTION_0_44(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, v14, v15, *(__int16 *)v16, *(__int16 *)&v16[2], v16[4], v16[5]);
}

uint64_t sub_25753298C()
{
  return swift_release();
}

uint64_t sub_257532994()
{
  sub_257532624();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResizeGradientOperation()
{
  return self;
}

uint64_t sub_2575329F4(uint64_t a1)
{
  uint64_t result = sub_257532AFC(&qword_26A0012C0, (void (*)(void))type metadata accessor for ResizeGradientOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257532A4C(uint64_t a1)
{
  uint64_t result = sub_257532AFC((unint64_t *)&qword_26A0012C8, (void (*)(void))type metadata accessor for ResizeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257532AA4(uint64_t a1)
{
  uint64_t result = sub_257532AFC(&qword_26A003428, (void (*)(void))type metadata accessor for BaseResizeOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257532AFC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_44(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, __int16 a13, __int16 a14, char a15, char a16)
{
  a16 = v20;
  a11 = v21;
  a12 = v22;
  return sub_257532508(a1, a2, a3, v18, v17, v16, &a16, &a11, v19);
}

uint64_t OUTLINED_FUNCTION_1_48()
{
  return 0x675F657A69736572;
}

void sub_257532B98()
{
  uint64_t v0 = sub_2576A8A00();
  unint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  if (v1 < 2) {
    return;
  }
  unint64_t v2 = 0;
  unint64_t v3 = v1 >> 1;
  unint64_t v4 = v1 - 1;
  uint64_t v5 = 48 * v1 - 16;
  for (uint64_t i = 32; ; i += 48)
  {
    if (v2 == v4) {
      goto LABEL_11;
    }
    unint64_t v7 = *(void *)(v0 + 16);
    if (v2 >= v7) {
      break;
    }
    sub_257476E94(v0 + i, (uint64_t)v10, &qword_26A000E38);
    if (v4 >= v7) {
      goto LABEL_14;
    }
    sub_257476E94(v0 + v5, (uint64_t)v9, &qword_26A000E38);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257582A88();
      uint64_t v0 = v8;
    }
    if (v2 >= *(void *)(v0 + 16)) {
      goto LABEL_15;
    }
    sub_2575340FC((uint64_t)v9, v0 + i);
    if (v4 >= *(void *)(v0 + 16)) {
      goto LABEL_16;
    }
    sub_2575340FC((uint64_t)v10, v0 + v5);
LABEL_11:
    ++v2;
    --v4;
    v5 -= 48;
    if (v3 == v2) {
      return;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

void sub_257532CD0(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 3; ; --i)
  {
    if (v3 == i - 4) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 16);
    if (v3 >= v6) {
      break;
    }
    if (i - 4 >= v6) {
      goto LABEL_12;
    }
    uint64_t v7 = *(void *)(v1 + 8 * v3 + 32);
    uint64_t v8 = *(void *)(v1 + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257582A78();
      uint64_t v1 = v9;
    }
    *(void *)(v1 + 8 * v3 + 32) = v8;
    *(void *)(v1 + 8 * i) = v7;
LABEL_9:
    if (v4 == ++v3) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_257532D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_257694BEC(a1, a2);
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 < 2) {
    return;
  }
  unint64_t v4 = 0;
  unint64_t v5 = v3 >> 1;
  for (unint64_t i = v3 + 3; ; --i)
  {
    if (v4 == i - 4) {
      goto LABEL_9;
    }
    unint64_t v7 = *(void *)(v2 + 16);
    if (v4 >= v7) {
      break;
    }
    if (i - 4 >= v7) {
      goto LABEL_12;
    }
    uint64_t v8 = *(void *)(v2 + 8 * v4 + 32);
    uint64_t v9 = *(void *)(v2 + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257582BC4();
      uint64_t v2 = v10;
    }
    *(void *)(v2 + 8 * v4 + 32) = v9;
    *(void *)(v2 + 8 * i) = v8;
LABEL_9:
    if (v5 == ++v4) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_257532E4C(size_t a1, uint64_t a2)
{
  sub_2576A7810();
  sub_2576A7810();
  size_t v4 = sub_2575A92EC(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 < 2) {
    return;
  }
  unint64_t v6 = 0;
  unint64_t v7 = v5 >> 1;
  for (unint64_t i = v5 + 1; ; --i)
  {
    if (v6 == i - 2) {
      goto LABEL_9;
    }
    unint64_t v9 = *(void *)(v4 + 16);
    if (v6 >= v9) {
      break;
    }
    if (i - 2 >= v9) {
      goto LABEL_12;
    }
    long long v11 = *(_OWORD *)(v4 + 16 * i);
    long long v12 = *(_OWORD *)(v4 + 16 * v6 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_257582BF4();
      size_t v4 = v10;
    }
    *(_OWORD *)(v4 + 16 * v6 + 32) = v11;
    *(_OWORD *)(v4 + 16 * i) = v12;
LABEL_9:
    if (v7 == ++v6) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t matmul(_:transposed:_:transposed:)@<X0>(const char **a1@<X0>, char a2@<W1>, const char **a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_2576A8EF0();
  uint64_t v54 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(const char **)(*(void *)(*((void *)*a1 + 2) + 152) + 16);
  if ((unint64_t)v13 < 2) {
    goto LABEL_11;
  }
  uint64_t v14 = *a3;
  if (*(void *)(*(void *)(*((void *)*a3 + 2) + 152) + 16) < 2uLL)
  {
    uint64_t v59 = *(const char **)(*(void *)(*((void *)*a3 + 2) + 152) + 16);
    *(_OWORD *)unint64_t v60 = xmmword_2576B4FD0;
    v60[16] = 0;
    OUTLINED_FUNCTION_1_49((__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_46_0();
    goto LABEL_15;
  }
  char v15 = *a1;
  uint64_t v59 = *a1;
  Tensor.scalarType.getter();
  (*(void (**)(uint64_t *__return_ptr))(v16 + 32))(&v56);
  unsigned int v17 = v56;
  uint64_t v59 = v14;
  Tensor.scalarType.getter();
  (*(void (**)(const char **__return_ptr))(v18 + 32))(&v59);
  uint64_t v19 = v59;
  if (v17 == v59) {
    goto LABEL_8;
  }
  if (qword_26A000960 != -1) {
    swift_once();
  }
  uint64_t v13 = (const char *)qword_26A030AB8;
  unint64_t v20 = v19 + 13 * v17;
  if (v20 >= *(void *)(qword_26A030AB8 + 16))
  {
    __break(1u);
LABEL_11:
    uint64_t v59 = v13;
    *(_OWORD *)unint64_t v60 = xmmword_2576B4FE0;
    v60[16] = 0;
    OUTLINED_FUNCTION_1_49((__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_46_0();
    goto LABEL_15;
  }
  unsigned int v17 = *(unsigned __int8 *)(qword_26A030AB8 + v20 + 32);
  if (v17 == 13)
  {
LABEL_14:
    uint64_t v59 = v15;
    int v43 = Tensor.scalarType.getter();
    uint64_t v45 = v44;
    uint64_t v59 = v14;
    uint64_t v46 = Tensor.scalarType.getter();
    uint64_t v59 = (const char *)v43;
    *(void *)unint64_t v60 = v45;
    *(_OWORD *)&v60[8] = xmmword_2576B0250;
    v60[24] = 6;
    uint64_t v61 = (const char *)v46;
    uint64_t v62 = v47;
    long long v63 = xmmword_2576ACB30;
    char v64 = 6;
    char v65 = 1;
    OUTLINED_FUNCTION_46_0();
LABEL_15:
    sub_25746BF88();
  }
LABEL_8:
  uint64_t v53 = a5;
  uint64_t v56 = *(void *)(*((void *)v15 + 2) + 152);
  uint64_t v58 = *(void *)(*((void *)v14 + 2) + 152);
  int v52 = a2 & 1;
  int v51 = a4 & 1;
  sub_2576917E8(&v56, a2 & 1, &v58, a4 & 1, (uint64_t *)&v59);
  uint64_t v21 = v59;
  long long v55 = v14;
  if (!v59)
  {
    uint64_t v59 = 0;
    *(void *)unint64_t v60 = 0xE000000000000000;
    swift_retain();
    swift_retain();
    sub_2576A8730();
    sub_2576A7B00();
    uint64_t v40 = sub_2576A7810();
    uint64_t v41 = MEMORY[0x263F8D6C8];
    MEMORY[0x25A2B83F0](v40, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v42 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v42, v41);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A8B60();
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v59 = v15;
  uint64_t v56 = (uint64_t)v21;
  uint64_t v48 = (uint64_t)v21;
  sub_257599168(&v56, &v58);
  LOBYTE(v56) = v17;
  uint64_t v22 = *MEMORY[0x263F8E1F8];
  uint64_t v23 = v54;
  uint64_t v50 = v15;
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
  v49(v12, v22, v10);
  OUTLINED_FUNCTION_2_32();
  uint64_t v24 = *(void (**)(uint64_t))(v23 + 8);
  uint64_t v25 = OUTLINED_FUNCTION_3_31();
  v24(v25);
  swift_release();
  unint64_t v26 = v59;
  uint64_t v59 = v55;
  uint64_t v27 = v48;
  uint64_t v56 = v48;
  sub_257599168(&v56, &v58);
  LOBYTE(v56) = v17;
  v49(v12, v22, v10);
  OUTLINED_FUNCTION_2_32();
  uint64_t v28 = OUTLINED_FUNCTION_3_31();
  v24(v28);
  swift_release();
  uint64_t v29 = *((void *)v26 + 2);
  uint64_t v30 = *((void *)v59 + 2);
  uint64_t v56 = v27;
  char v57 = v17;
  uint64_t v31 = swift_allocObject();
  LOBYTE(v24) = v52;
  *(unsigned char *)(v31 + 16) = v52;
  LOBYTE(v23) = v51;
  *(unsigned char *)(v31 + 17) = v51;
  swift_retain();
  swift_retain();
  uint64_t v32 = sub_25761BED4((uint64_t)sub_257534068);
  uint64_t v34 = v33;
  swift_release();
  uint64_t v59 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NNOps.swift";
  *(_OWORD *)unint64_t v60 = xmmword_2576B22A0;
  *(_OWORD *)&v60[16] = xmmword_2576B4FC0;
  uint64_t v61 = "init(id:leftOperand:transposed:rightOperand:transposed:resultDescriptor:creationSite:backward:)";
  uint64_t v62 = 95;
  LOWORD(v63) = 2;
  type metadata accessor for MatrixMultiplicationOperation();
  swift_allocObject();
  uint64_t v35 = sub_25752DF7C(0, 0, 0, v29, (char)v24, v30, v23, &v56, (uint64_t)&v59, v32, v34);
  uint64_t v36 = (uint64_t (**)(void, void))sub_2575340B4(&qword_26A001868, (void (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  uint64_t v38 = v55;
  *(void *)(inited + 32) = v50;
  *(void *)(inited + 40) = v38;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2575B56B8(inited, "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Operations/LinearAlgebra.swift", 106, 2, 85, "matmul(_:transposed:_:transposed:)", 34, 2);
  swift_setDeallocating();
  sub_2575AEC4C();
  sub_257613838(v35, v36, 0, (uint64_t)&v56, v53);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_2575336A0(uint64_t result, void *a2, char a3, char a4)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = a2[2];
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v4 != 1)
  {
    uint64_t v5 = *(void *)(result + 32);
    uint64_t v6 = a2[4];
    uint64_t v7 = a2[5];
    if (a3)
    {
      if (a4)
      {
        uint64_t v17 = a2[5];
        uint64_t v18 = v5;
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 1, &v17, 1);
        uint64_t v8 = v19;
        uint64_t v17 = v5;
        uint64_t v18 = v6;
        uint64_t v9 = 1;
        uint64_t v10 = 1;
LABEL_13:
        matmul(_:transposed:_:transposed:)(&v19, &v18, v9, &v17, v10);
        uint64_t v11 = v19;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_2576ABB30;
        swift_retain();
        swift_retain();
        uint64_t v13 = sub_2574E8C6C();
        *(void *)(v12 + 32) = v8;
        *(void *)(v12 + 40) = v13;
        *(void *)(v12 + 48) = v14;
        swift_retain();
        swift_retain();
        uint64_t v15 = sub_2574E8C6C();
        *(void *)(v12 + 56) = v11;
        *(void *)(v12 + 64) = v15;
        *(void *)(v12 + 72) = v16;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return v12;
      }
      uint64_t v17 = *(void *)(result + 32);
      uint64_t v18 = v7;
      swift_retain();
      swift_retain();
      swift_retain();
      matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 1);
      uint64_t v8 = v19;
      uint64_t v17 = v5;
      uint64_t v18 = v6;
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v17 = a2[5];
      uint64_t v18 = v5;
      if (a4)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 0);
        uint64_t v8 = v19;
        uint64_t v17 = v6;
        uint64_t v18 = v5;
      }
      else
      {
        swift_retain();
        swift_retain();
        swift_retain();
        matmul(_:transposed:_:transposed:)(&v19, &v18, 0, &v17, 1);
        uint64_t v8 = v19;
        uint64_t v17 = v5;
        uint64_t v18 = v6;
      }
      uint64_t v9 = 1;
    }
    uint64_t v10 = 0;
    goto LABEL_13;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t Tensor.transposed(permutation:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  unint64_t v5 = *(void *)(a1 + 16);
  int64_t v6 = *(void *)(*(void *)(*(void *)(*v2 + 16) + 152) + 16);
  if (v6 < v5) {
    goto LABEL_16;
  }
  if (v5)
  {
    if (*(void *)(a1 + 32) >= v6) {
      goto LABEL_16;
    }
    if (v5 != 1)
    {
      uint64_t v8 = 5;
      while (1)
      {
        uint64_t v9 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        if (*(void *)(a1 + 8 * v8) >= v6) {
          goto LABEL_16;
        }
        ++v8;
        if (v9 == v5) {
          goto LABEL_9;
        }
      }
      __break(1u);
      while (1)
      {
LABEL_16:
        sub_2576A8B60();
        __break(1u);
      }
    }
  }
LABEL_9:
  uint64_t v18 = *(const char **)(*(void *)(*v2 + 16) + 152);
  sub_2576A7810();
  sub_25769198C((uint64_t)&v18, a1);
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_16;
  }
  uint64_t v10 = *(void *)(v4 + 16);
  if (*(void *)(*(void *)(v10 + 152) + 16) <= 1uLL)
  {
    swift_bridgeObjectRelease();
    *a2 = v4;
    return swift_retain();
  }
  else
  {
    char v11 = *(unsigned char *)(v10 + 160);
    uint64_t v18 = v20;
    char v19 = v11;
    *(void *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v12 = sub_25761BED4((uint64_t)sub_2575340AC);
    uint64_t v14 = v13;
    swift_release();
    unint64_t v20 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/TensorTransformationOps.swift";
    long long v21 = xmmword_2576B4FF0;
    long long v22 = xmmword_2576B5000;
    uint64_t v23 = "init(id:operand:permutation:resultDescriptor:creationSite:backward:)";
    uint64_t v24 = 68;
    __int16 v25 = 2;
    type metadata accessor for TransposeOperation();
    swift_allocObject();
    uint64_t v15 = sub_2575E398C(0, 0, 0, v10, a1, (uint64_t *)&v18, (uint64_t)&v20, v12, v14);
    uint64_t v16 = (uint64_t (**)(void, void))sub_2575340B4(&qword_26A003430, (void (*)(uint64_t))type metadata accessor for TransposeOperation);
    sub_257476E94(*(void *)(v4 + 16) + 168, (uint64_t)&v18, (uint64_t *)&unk_26A004250);
    return sub_257613838(v15, v16, 0, (uint64_t)&v18, a2);
  }
}

uint64_t sub_257533C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a1 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!*(void *)(a2 + 16))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    v16[1] = 0;
    id v16[2] = 0;
    v16[0] = v4;
    char v17 = -1;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v18 = v3;
    char v21 = -1;
    char v22 = 4;
    sub_25746BF88();
  }
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a3 + 16);
  swift_retain();
  swift_retain();
  uint64_t v7 = sub_257608D64(-1, v3);
  if (v3)
  {
    uint64_t v8 = 0;
    uint64_t v9 = a3 + 32;
    while (1)
    {
      uint64_t v4 = *(void *)(v9 + 8 * v8);
      if (v4 < 0)
      {
        if (v4 < -v3) {
          goto LABEL_19;
        }
        v4 += v3;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        if (v4 < 0) {
          goto LABEL_14;
        }
      }
      else
      {
        sub_257582A78();
        uint64_t v7 = v10;
        if (v4 < 0)
        {
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
      }
      if ((unint64_t)v4 >= *(void *)(v7 + 16)) {
        break;
      }
      *(void *)(v7 + 8 * v4 + 32) = v8++;
      if (v3 == v8) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2576ABB10;
  uint64_t v23 = v6;
  Tensor.transposed(permutation:)(v16, v7);
  swift_bridgeObjectRelease();
  uint64_t v12 = v16[0];
  swift_retain();
  uint64_t v13 = sub_2574E8C6C();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v13;
  *(void *)(v11 + 48) = v14;
  swift_release();
  swift_release();
  return v11;
}

uint64_t Tensor.transposed()@<X0>(uint64_t *a1@<X8>)
{
  sub_257532D8C(0, *(void *)(*(void *)(*(void *)(*(void *)v1 + 16) + 152) + 16));
  Tensor.transposed(permutation:)(v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t Tensor.gramMatrix(scale:)(float a1)
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t v2 = *v1;
  uint64_t v3 = *(unint64_t **)(*((void *)*v1 + 2) + 152);
  if (v3[2] != 4)
  {
    long long v15 = v3[2];
    *(void *)&long long v16 = 0;
    BYTE8(v16) = 6;
    long long v17 = xmmword_2576AD020;
    LOBYTE(v18) = 0;
    char v19 = 7;
    OUTLINED_FUNCTION_46_0();
    sub_25746BF88();
  }
  unint64_t v5 = v3[4];
  unint64_t v6 = v3[5];
  int64_t v7 = v3[6];
  int64_t v8 = v3[7];
  v14[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2576ABB50;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v6;
  if ((unsigned __int128)(v7 * (__int128)v8) >> 64 != (v7 * v8) >> 63) {
    __break(1u);
  }
  *(void *)(v9 + 48) = v7 * v8;
  uint64_t v13 = (const char *)v9;
  Tensor.reshaped(to:)((uint64_t *)&v13, (uint64_t *)&v15);
  swift_bridgeObjectRelease();
  uint64_t v13 = (const char *)v15;
  v14[0] = (const char *)v15;
  matmul(_:transposed:_:transposed:)(v14, 0, &v13, 1, (uint64_t *)&v15);
  uint64_t v13 = (const char *)v15;
  int v18 = 0;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v15 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(float *)(inited + 32) = a1;
  sub_257476E94((uint64_t)&v15, (uint64_t)v14, (uint64_t *)&unk_26A004250);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)&v15);
  *(void *)&long long v15 = v12;
  static Tensor.* infix(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_257534058()
{
  return MEMORY[0x270FA0238](v0, 18, 7);
}

uint64_t sub_257534068(uint64_t a1, void *a2)
{
  return sub_2575336A0(a1, a2, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17));
}

uint64_t sub_257534074()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2575340AC(uint64_t a1, uint64_t a2)
{
  return sub_257533C04(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2575340B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2575340FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_1_49(__n128 a1)
{
  *(__n128 *)(v1 - 168) = a1;
  *(unsigned char *)(v1 - 152) = 2;
  *(unsigned char *)(v1 - 92) = 7;
}

void OUTLINED_FUNCTION_2_32()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_3_31()
{
  return v0;
}

uint64_t static FeatureInputType.rgbImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v4 = 0x2000000000000000;
  if (a3) {
    uint64_t v4 = 0x2000000000000100;
  }
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t static FeatureInputType.bgrImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  return OUTLINED_FUNCTION_4_33(result, a2, a3, a4);
}

uint64_t static FeatureInputType.grayScaleImage(size:channelsFirst:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  return OUTLINED_FUNCTION_4_33(result, a2, a3, a4);
}

uint64_t static FeatureInputType.tensor(like:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return OUTLINED_FUNCTION_6_31(*(void *)(*(void *)(*(void *)a1 + 16) + 152), a2);
}

uint64_t static FeatureInputType.tensor(shape:scalarType:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return OUTLINED_FUNCTION_6_31(*a1, a2);
}

void *static FeatureInputType.tensor(shape:scalarType:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  void *(*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *result;
  uint64_t v10;
  uint64_t v11;

  uint64_t v7 = *a1;
  int64_t v8 = *(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 32);
  sub_2576A7810();
  uint64_t result = v8(&v11, a2, a3);
  uint64_t v10 = v11;
  *a4 = v7;
  a4[1] = v10;
  a4[2] = 0;
  return result;
}

uint64_t static FeatureInputType.tensor(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *a1;
  *(_OWORD *)(a2 + 8) = xmmword_2576B30D0;
  return swift_retain();
}

BOOL static FeatureInputType.ColorLayout.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeatureInputType.ColorLayout.hash(into:)()
{
  return sub_2576A90A0();
}

uint64_t sub_2575342E0@<X0>(uint64_t *a1@<X8>)
{
  void (*v6)(char *__return_ptr, uint64_t, unint64_t);
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t vars8;

  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  unint64_t v5 = v1[2];
  if ((v5 & 0x2000000000000000) != 0)
  {
    uint64_t v7 = v1[2];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
    int64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2576AE070;
    *(void *)(v8 + 32) = 1;
    if ((v5 & 0x100) != 0)
    {
      uint64_t v10 = 3;
      if (v7 >= 2) {
        uint64_t v10 = 1;
      }
      *(void *)(v8 + 40) = v10;
      *(void *)(v8 + 48) = v3;
      *(void *)(v8 + 56) = v4;
    }
    else
    {
      *(void *)(v8 + 40) = v3;
      *(void *)(v8 + 48) = v4;
      uint64_t v9 = 3;
      if (v7 >= 2) {
        uint64_t v9 = 1;
      }
      *(void *)(v8 + 56) = v9;
    }
    uint64_t v14 = v8;
    uint64_t v13 = 10;
    goto LABEL_13;
  }
  if (!(v5 >> 62))
  {
    uint64_t v14 = *v1;
    uint64_t v13 = v4;
    OUTLINED_FUNCTION_12_23();
    sub_257476E70(v3, v4, v5);
    return Tensor.init(zeros:scalarType:on:)(&v14, &v13, (uint64_t)&v12, a1);
  }
  if (v5 >> 62 == 1)
  {
    uint64_t v14 = *v1;
    unint64_t v6 = *(void (**)(char *__return_ptr, uint64_t, unint64_t))((v5 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
    sub_257476E70(v3, v4, v5);
    v6(&v13, v4, v5 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_13:
    OUTLINED_FUNCTION_12_23();
    return Tensor.init(zeros:scalarType:on:)(&v14, &v13, (uint64_t)&v12, a1);
  }
  *a1 = v3;
  return sub_257476E70(v3, v4, v5);
}

uint64_t sub_25753445C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[5] = a1;
  id v11[2] = a2;
  uint64_t v11[3] = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_2576A7830();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_257495BE0((void (*)(char *, uint64_t))sub_25753610C, (uint64_t)v11, v5, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v8);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 24))(v9, a2, a3);
}

uint64_t sub_2575345C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = TupleTypeMetadata2 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (char *)v14 - v7;
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(swift_getTupleTypeMetadata2() + 48));
  uint64_t v10 = a1 + *(int *)(v6 + 56);
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, AssociatedTypeWitness);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v10;
  uint64_t v12 = *(void *)(v10 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, AssociatedTypeWitness);
  *(_OWORD *)&v14[3] = *(_OWORD *)v14;
  v14[5] = v12;
  return sub_2575342E0(v9);
}

uint64_t sub_25753474C(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = (*(uint64_t (**)(void))(a2 + 32))();
  void v10[2] = a1;
  v10[3] = a2;
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  uint64_t v4 = sub_2576A7F50();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_257495BE0((void (*)(char *, uint64_t))sub_25753612C, (uint64_t)v10, v4, TupleTypeMetadata2, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v7);
  swift_bridgeObjectRelease();
  uint64_t v11 = v8;
  sub_2576A7F50();
  swift_getAssociatedConformanceWitness();
  swift_getWitnessTable();
  return sub_2576A77F0();
}

uint64_t sub_2575348FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = TupleTypeMetadata2 - 8;
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v10 = *(int *)(v6 + 56);
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v8, a1, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(a1 + v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v8, AssociatedTypeWitness);
  *(void *)uint64_t v9 = v12;
  *(_OWORD *)(v9 + 8) = xmmword_2576B30D0;
  return swift_retain();
}

uint64_t sub_257534A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003448);
  MEMORY[0x270FA5388](v4 - 8);
  OUTLINED_FUNCTION_3_3();
  uint64_t v56 = v5;
  sub_2576A7230();
  OUTLINED_FUNCTION_0_8();
  uint64_t v52 = v7;
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_8_0();
  uint64_t v10 = v9 - v8;
  sub_2576A7260();
  OUTLINED_FUNCTION_0_8();
  uint64_t v54 = v12;
  uint64_t v55 = v11;
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_8_0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_2576A7270();
  OUTLINED_FUNCTION_0_8();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_8_0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *v2;
  unint64_t v24 = v2[2];
  if ((v24 & 0x2000000000000000) != 0)
  {
    uint64_t v25 = *(void *)(a1 + 152);
    uint64_t v26 = *(void *)(v25 + 16);
    if ((unint64_t)(v26 - 5) < 0xFFFFFFFFFFFFFFFELL)
    {
      OUTLINED_FUNCTION_10_21();
      sub_2576A7810();
      sub_2576A8730();
      OUTLINED_FUNCTION_7_27();
      OUTLINED_FUNCTION_18_8();
      swift_bridgeObjectRelease();
LABEL_7:
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_2576A7B00();
LABEL_26:
      sub_2576A7B00();
      sub_25747C394();
      swift_allocError();
      void *v40 = v58;
      v40[1] = v59;
      return swift_willThrow();
    }
    uint64_t v49 = a1;
    uint64_t v51 = v2[1];
    uint64_t v27 = v26 - 2;
    uint64_t v28 = v26 - 1;
    uint64_t v29 = v26 == 4;
    if ((v24 & 0x100) == 0) {
      uint64_t v29 = v26 - 1;
    }
    uint64_t v50 = v29;
    if ((v24 & 0x100) != 0) {
      uint64_t v30 = v26 - 2;
    }
    else {
      uint64_t v30 = v26 - 3;
    }
    uint64_t v58 = v25;
    sub_2576A7810();
    if (TensorShape.subscript.getter(v30) != v23
      || ((v24 & 0x100) != 0 ? (v31 = v28) : (v31 = v27), uint64_t v58 = v25, TensorShape.subscript.getter(v31) != v51))
    {
      OUTLINED_FUNCTION_10_21();
      sub_2576A8730();
      OUTLINED_FUNCTION_18_8();
      sub_2576A7B00();
      sub_2576A7B00();
      TensorShape.subscript.getter(v30);
      sub_2576A8EA0();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      TensorShape.subscript.getter(v30);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_2_33();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_2_33();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      OUTLINED_FUNCTION_2_33();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    int v32 = v24;
    uint64_t v58 = v25;
    uint64_t v33 = TensorShape.subscript.getter(v50);
    if (v24 >= 2u) {
      uint64_t v34 = 1;
    }
    else {
      uint64_t v34 = 3;
    }
    if (v33 != v34)
    {
      OUTLINED_FUNCTION_10_21();
      sub_2576A8730();
      OUTLINED_FUNCTION_18_8();
      OUTLINED_FUNCTION_2_33();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_18_8();
      sub_2576A8A30();
      OUTLINED_FUNCTION_14_24();
      TensorShape.subscript.getter(v50);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_5_29();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = *MEMORY[0x263F53160];
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104);
    v36(v10, v35, v53);
    sub_2576A7250();
    if (v32)
    {
      uint64_t v37 = v56;
      if (v32 == 1)
      {
        uint64_t v38 = *MEMORY[0x263F53158];
        uint64_t v39 = v56;
LABEL_37:
        v36(v39, v38, v53);
        OUTLINED_FUNCTION_9_30();
        goto LABEL_38;
      }
      v36(v56, *MEMORY[0x263F53168], v53);
      OUTLINED_FUNCTION_9_30();
      if (*(unsigned char *)(v49 + 160) != 8)
      {
LABEL_38:
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(a2, v15, v55);
        uint64_t v47 = *MEMORY[0x263F531C0];
        sub_2576A7280();
        OUTLINED_FUNCTION_11_25();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 104))(a2, v47);
      }
      uint64_t v35 = *MEMORY[0x263F53150];
    }
    else
    {
      uint64_t v37 = v56;
    }
    uint64_t v39 = v37;
    uint64_t v38 = v35;
    goto LABEL_37;
  }
  if (v24 >> 62)
  {
    if (v24 >> 62 != 1)
    {
      uint64_t v44 = v2[1];
      Tensor.scalarType.getter();
      uint64_t v46 = v45;
      sub_257476E70(v23, v44, v24);
      sub_257535338(v46, v22);
      sub_2576A7810();
      sub_2576A7220();
      swift_bridgeObjectRelease();
      uint64_t v42 = v23;
      uint64_t v43 = v44;
      goto LABEL_30;
    }
    OUTLINED_FUNCTION_15_18();
    sub_257535338(v24 & 0x3FFFFFFFFFFFFFFFLL, v22);
  }
  else
  {
    OUTLINED_FUNCTION_15_18();
    sub_257535184(v22);
  }
  sub_2576A7220();
  uint64_t v42 = v23;
  uint64_t v43 = v15;
LABEL_30:
  sub_25747F200(v42, v43, v24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v22, v16);
}

uint64_t sub_257535184@<X0>(uint64_t a1@<X8>)
{
  switch(*v1)
  {
    case 2:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F53188];
      break;
    case 8:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F53198];
      break;
    case 9:
      sub_25746BE6C();
    case 0xA:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F531A0];
      break;
    case 0xB:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F53190];
      break;
    default:
      sub_25767AC64();
      sub_25746BF88();
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_2576A7270();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

uint64_t sub_257535338@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t *__return_ptr))(a1 + 32))(&v4);
  return sub_257535184(a2);
}

uint64_t _s14NeuralNetworks16FeatureInputTypeO11ColorLayoutO9hashValueSivg_0()
{
  return sub_2576A9100();
}

unint64_t sub_2575353D4()
{
  unint64_t result = qword_26A003438;
  if (!qword_26A003438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003438);
  }
  return result;
}

unint64_t sub_257535424()
{
  unint64_t result = qword_26A003440;
  if (!qword_26A003440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003440);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeatureInputType(void *a1, void *a2, uint64_t a3)
{
  return sub_25753560C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_257476E64);
}

uint64_t destroy for FeatureInputType(uint64_t a1)
{
  return sub_25747F200(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t *assignWithCopy for FeatureInputType(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_257535688(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_257476E64, (void (*)(uint64_t, uint64_t, uint64_t))sub_25747F200);
}

uint64_t *assignWithTake for FeatureInputType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25753570C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_25747F200);
}

uint64_t getEnumTagSinglePayload for FeatureInputType(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 7 && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 6;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 16) >> 59) >> 2) & 1 | (2
                                                                   * ((*(void *)(a1 + 16) >> 59) & 2 | (*(void *)(a1 + 16) >> 2) & 1))) ^ 7;
      if (v2 >= 6) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureInputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 6)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 7;
    if (a3 >= 7) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 7) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 3 | (4 * (-a2 & 7));
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = ((v3 << 59) | (4 * v3)) & 0x3000000000000004;
    }
  }
  return result;
}

uint64_t sub_25753558C(uint64_t a1)
{
  return (*(void *)(a1 + 16) >> 61) & 1;
}

uint64_t sub_257535598(uint64_t result)
{
  *(void *)(result + 16) &= ~0x2000000000000000uLL;
  return result;
}

uint64_t sub_2575355A8(uint64_t result, char a2)
{
  *(void *)(result + 16) = *(void *)(result + 16) & 0xCFFFFFFFFFFFFFFBLL | ((unint64_t)(a2 & 1) << 61);
  return result;
}

void type metadata accessor for FeatureInputType()
{
}

void type metadata accessor for FeatureInputType.ColorLayout()
{
}

void *initializeBufferWithCopyOfBuffer for FeatureInputType.TensorValueRepresentation(void *a1, void *a2, uint64_t a3)
{
  return sub_25753560C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_257476E70);
}

uint64_t destroy for FeatureInputType.TensorValueRepresentation(uint64_t a1)
{
  return sub_25747F20C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16));
}

void *sub_25753560C(void *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  a4(*a2, v6, v7);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  return a1;
}

uint64_t *assignWithCopy for FeatureInputType.TensorValueRepresentation(uint64_t *a1, void *a2, uint64_t a3)
{
  return sub_257535688(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_257476E70, (void (*)(uint64_t, uint64_t, uint64_t))sub_25747F20C);
}

uint64_t *sub_257535688(uint64_t *a1, void *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for FeatureInputType.TensorValueRepresentation(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_25753570C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_25747F20C);
}

uint64_t *sub_25753570C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v7 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v5;
  a4(v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureInputType.TensorValueRepresentation(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FE && *(unsigned char *)(a1 + 24))
    {
      unsigned int v2 = *(_DWORD *)a1 + 2045;
    }
    else
    {
      unsigned int v2 = (((*(void *)(a1 + 16) >> 53) >> 9) | (4
                                                               * ((*(void *)(a1 + 8) >> 60) & 0x8F | (16 * (*(void *)(a1 + 16) & 7)) | (*(void *)(a1 + 16) >> 53) & 0x180))) ^ 0x7FF;
      if (v2 >= 0x7FD) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for FeatureInputType.TensorValueRepresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 2046;
    if (a3 >= 0x7FE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      unint64_t v3 = (-a2 >> 2) & 0x1FF | ((-a2 & 0x7FF) << 9);
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = v3 << 60;
      *(void *)(result + 16) = ((v3 >> 4) | (v3 << 53)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_257535810(uint64_t a1)
{
  return *(void *)(a1 + 16) >> 62;
}

uint64_t sub_25753581C(uint64_t result)
{
  *(void *)(result + 16) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_25753582C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  *(void *)(result + 8) &= 0xFFFFFFFFFFFFFFFuLL;
  *(void *)(result + 16) = v2;
  return result;
}

void type metadata accessor for FeatureInputType.TensorValueRepresentation()
{
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeatureOutputType(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65282;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x25753591CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      default:
        break;
    }
  }
  unsigned int v7 = *((unsigned __int8 *)a1 + 1);
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeatureOutputType(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x257535A04);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)(result + 1) = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_257535A2C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 1);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_257535A48(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  return result;
}

void type metadata accessor for FeatureOutputType()
{
}

unsigned char *_s14NeuralNetworks16FeatureInputTypeO11ColorLayoutOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257535B44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for FeatureOutputType.ColorLayout()
{
}

uint64_t sub_257535B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_2576A7270();
  OUTLINED_FUNCTION_0_8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_8_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003448);
  MEMORY[0x270FA5388](v12 - 8);
  OUTLINED_FUNCTION_3_3();
  uint64_t v47 = v13;
  sub_2576A7230();
  OUTLINED_FUNCTION_0_8();
  uint64_t v48 = v15;
  uint64_t v49 = v14;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_8_0();
  uint64_t v18 = v17 - v16;
  sub_2576A7260();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v19);
  OUTLINED_FUNCTION_8_0();
  uint64_t v24 = v23 - v22;
  __int16 v25 = *v2;
  uint64_t v26 = *(void *)(a1 + 152);
  int v27 = *(unsigned __int8 *)(a1 + 160);
  if ((*v2 & 0xFF00) == 0x200)
  {
    sub_2576A7810();
    sub_257535184(v11);
    sub_2576A7220();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  uint64_t v29 = *(void *)(v26 + 16);
  if ((unint64_t)(v29 - 5) < 0xFFFFFFFFFFFFFFFELL)
  {
    OUTLINED_FUNCTION_10_21();
    sub_2576A7810();
    sub_2576A8730();
    OUTLINED_FUNCTION_7_27();
    OUTLINED_FUNCTION_18_8();
    swift_bridgeObjectRelease();
LABEL_22:
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    sub_2576A7B00();
    sub_2576A7B00();
    sub_25747C394();
    swift_allocError();
    *uint64_t v39 = v51;
    v39[1] = v52;
    return swift_willThrow();
  }
  uint64_t v45 = v20;
  uint64_t v46 = v24;
  uint64_t v44 = v21;
  uint64_t v30 = v29 - 1;
  if ((*v2 & 0x100) != 0) {
    uint64_t v31 = v29 == 4;
  }
  else {
    uint64_t v31 = v29 - 1;
  }
  uint64_t v51 = v26;
  sub_2576A7810();
  uint64_t v32 = TensorShape.subscript.getter(v31);
  if ((v25 & 0xFE) != 0) {
    uint64_t v33 = 1;
  }
  else {
    uint64_t v33 = 3;
  }
  if (v32 != v33)
  {
    OUTLINED_FUNCTION_10_21();
    sub_2576A8730();
    OUTLINED_FUNCTION_18_8();
    OUTLINED_FUNCTION_2_33();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_18_8();
    sub_2576A8A30();
    OUTLINED_FUNCTION_14_24();
    TensorShape.subscript.getter(v31);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_29();
    goto LABEL_22;
  }
  uint64_t v34 = v29 - 2;
  if ((v25 & 0x100) != 0) {
    uint64_t v35 = v29 - 2;
  }
  else {
    uint64_t v35 = v29 - 3;
  }
  if ((v25 & 0x100) != 0) {
    uint64_t v36 = v30;
  }
  else {
    uint64_t v36 = v34;
  }
  TensorShape.subscript.getter(v36);
  TensorShape.subscript.getter(v35);
  swift_bridgeObjectRelease();
  uint64_t v37 = *MEMORY[0x263F53160];
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 104);
  v50(v18, v37, v49);
  sub_2576A7250();
  if (!(_BYTE)v25)
  {
    uint64_t v38 = a2;
    uint64_t v40 = v47;
    v50(v47, v37, v49);
LABEL_26:
    __swift_storeEnumTagSinglePayload(v40, 0, 1, v49);
    goto LABEL_27;
  }
  uint64_t v38 = a2;
  if (v25 == 1)
  {
    v50(v47, *MEMORY[0x263F53158], v49);
    __swift_storeEnumTagSinglePayload(v47, 0, 1, v49);
LABEL_27:
    uint64_t v41 = v46;
    sub_2576A7240();
    goto LABEL_28;
  }
  uint64_t v40 = v47;
  v50(v47, *MEMORY[0x263F53168], v49);
  __swift_storeEnumTagSinglePayload(v47, 0, 1, v49);
  uint64_t v41 = v46;
  sub_2576A7240();
  if (v27 == 8)
  {
    v50(v47, *MEMORY[0x263F53150], v49);
    goto LABEL_26;
  }
LABEL_28:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v38, v41, v45);
  uint64_t v42 = *MEMORY[0x263F531C0];
  sub_2576A7280();
  OUTLINED_FUNCTION_11_25();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 104))(v38, v42);
}

uint64_t sub_25753610C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2575345C4(a1, a2);
}

uint64_t sub_25753612C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2575348FC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_2_33()
{
  return sub_2576A8EA0();
}

uint64_t OUTLINED_FUNCTION_4_33@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v5 = v4 & 0xFFFFFFFFFFFFLL | 0x2000000000000000;
  if (a3) {
    v5 |= 0x100uLL;
  }
  *a4 = result;
  a4[1] = a2;
  a4[2] = v5;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_29()
{
  *(void *)(v2 - 72) = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_31@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  a2[1] = v2;
  a2[2] = 0;
  return sub_2576A7810();
}

unint64_t OUTLINED_FUNCTION_7_27()
{
  uint64_t v1 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v1;
  return 0xD000000000000039;
}

uint64_t OUTLINED_FUNCTION_9_30()
{
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  return sub_2576A7240();
}

void OUTLINED_FUNCTION_10_21()
{
  *(void *)(v0 - 96) = 0;
  *(void *)(v0 - 88) = 0xE000000000000000;
}

double OUTLINED_FUNCTION_12_23()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_14_24()
{
  return sub_2576A7B00();
}

uint64_t OUTLINED_FUNCTION_15_18()
{
  return sub_257476E70(v2, v0, v1);
}

uint64_t sub_257536278(uint64_t a1)
{
  sub_2576A7810();
  OUTLINED_FUNCTION_0_45((uint64_t)sub_257536444, v1, v2, v3, v4, v5, v6, v7, v20);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v26 = sub_2576A77E0();
  uint64_t v10 = sub_25746D92C(v9);
  uint64_t v11 = swift_bridgeObjectRelease();
  sub_257470930(v11, v12, v13, v14, v15, v16, v17, v18, v21, v22, a1, v24, v10, v26);
  return v25;
}

uint64_t sub_25753632C(uint64_t a1)
{
  sub_2576A7810();
  OUTLINED_FUNCTION_0_45((uint64_t)sub_257536464, v1, v2, v3, v4, v5, v6, v7, v20);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v26 = sub_2576A77E0();
  uint64_t v10 = sub_25746D92C(v9);
  uint64_t v11 = swift_bridgeObjectRelease();
  sub_257470930(v11, v12, v13, v14, v15, v16, v17, v18, v21, v22, a1, v24, v10, v26);
  return v25;
}

uint64_t sub_2575363E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 152);
  char v4 = *(unsigned char *)(*(void *)a1 + 160);
  sub_2576A7810();
  uint64_t result = sub_2575F29B0();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  return result;
}

uint64_t sub_257536444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2575363E0(a1, a2);
}

uint64_t sub_257536464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257536444(a1, a2);
}

void OUTLINED_FUNCTION_0_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_257596B88(a1, (uint64_t)&a9, v9);
}

unsigned char *storeEnumTagSinglePayload for ComputePrecision(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257536568);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComputePrecision()
{
  return &type metadata for ComputePrecision;
}

uint64_t sub_2575365A0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 32))(&var1);
  if (var1 - 8 >= 3) {
    return 2;
  }
  else {
    return 0x10000u >> (8 * (var1 - 8));
  }
}

BOOL sub_2575365F8(char a1, char a2)
{
  return (a2 & 1u) < (a1 & 1u);
}

BOOL sub_25753660C(unsigned __int16 a1, unsigned __int16 a2)
{
  return a2 < a1;
}

BOOL sub_25753661C(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

uint64_t sub_25753662C(int a1)
{
  if (a1 == 2) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1 == 1) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_257536644(char a1)
{
  return (a1 & 1u) + 1;
}

uint64_t sub_257536650()
{
  return sub_2576A36A8();
}

uint64_t sub_257536658()
{
  return sub_2574702B4();
}

uint64_t sub_257536660()
{
  return sub_2575EF020();
}

uint64_t sub_257536668@<X0>(int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_25753662C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_257536694@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_257536644(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_2575366C4()
{
  unint64_t result = qword_26A003450;
  if (!qword_26A003450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003450);
  }
  return result;
}

BOOL sub_257536710(char a1, char a2)
{
  return (a1 & 1u) < (a2 & 1u);
}

BOOL sub_257536724(char *a1, char *a2)
{
  return sub_257536710(*a1, *a2);
}

BOOL sub_257536730(char *a1, char *a2)
{
  return sub_25753673C(*a1, *a2);
}

BOOL sub_25753673C(char a1, char a2)
{
  return (a2 & 1u) >= (a1 & 1u);
}

BOOL sub_257536750(unsigned __int16 a1, unsigned __int16 a2)
{
  return a2 >= a1;
}

BOOL sub_257536760(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_257536770(char *a1, char *a2)
{
  return sub_25753677C(*a1, *a2);
}

BOOL sub_25753677C(char a1, char a2)
{
  return (a1 & 1u) >= (a2 & 1u);
}

BOOL sub_257536790(unsigned __int16 a1, unsigned __int16 a2)
{
  return a1 >= a2;
}

BOOL sub_2575367A0(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_2575367B0(char *a1, char *a2)
{
  return sub_2575365F8(*a1, *a2);
}

uint64_t sub_2575367BC(char a1)
{
  if (a1) {
    return 0x656C676E6973;
  }
  else {
    return 1718378856;
  }
}

uint64_t sub_2575367E8()
{
  return sub_2575367BC(*v0);
}

uint64_t sub_2575367F0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB10;
  char v2 = *(unsigned char *)(v0 + 144);
  *(void *)(v1 + 32) = *(void *)(v0 + 136);
  *(unsigned char *)(v1 + 40) = v2;
  sub_2576A7810();
  return v1;
}

uint64_t sub_25753684C()
{
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25753688C()
{
  sub_25753684C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OneHotOperation()
{
  return self;
}

uint64_t sub_2575368E4()
{
  return 0x746F685F656E6FLL;
}

__n128 sub_257536900@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 200);
  char v3 = *(unsigned char *)(v1 + 208);
  char v4 = *(unsigned char *)(v1 + 209);
  long long v5 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 16) = v5;
  __n128 result = *(__n128 *)(v1 + 184);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v2;
  *(unsigned char *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 57) = v4;
  return result;
}

uint64_t sub_257536930()
{
  sub_2576A78E0();
  sub_2576A90A0();
  sub_25746B3D0(v0 + 56, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001878);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003460);
  uint64_t v1 = OUTLINED_FUNCTION_0_46();
  if (v1)
  {
    sub_257479260(&v18, (uint64_t)v22);
    __swift_project_boxed_opaque_existential_1(v22, v23);
    sub_2576A78D0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    OUTLINED_FUNCTION_1_50(v1, v2, v3, v4, v5, v6, v7, v8, v18, v19, v20);
  }
  sub_25746B3D0(v0 + 96, (uint64_t)v21);
  uint64_t v9 = OUTLINED_FUNCTION_0_46();
  if ((v9 & 1) == 0) {
    return OUTLINED_FUNCTION_1_50(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20);
  }
  sub_257479260(&v18, (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v23);
  sub_2576A78D0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_257536A60()
{
  return sub_257536930();
}

uint64_t sub_257536A84(uint64_t a1)
{
  uint64_t result = sub_257536B0C((unint64_t *)&qword_26A001CF0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257536AC8(uint64_t a1)
{
  uint64_t result = sub_257536B0C(&qword_26A003458);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257536B0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for OneHotOperation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_257536B4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26A003468);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_0_46()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_1_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11)
{
  a11 = 0;
  a9 = 0u;
  a10 = 0u;
  return sub_257536B4C((uint64_t)&a9);
}

uint64_t destroy for GradientStore()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14NeuralNetworks13GradientStoreVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_2576A7810();
  sub_2576A7810();
  return a1;
}

void *assignWithCopy for GradientStore(void *a1, void *a2)
{
  *a1 = *a2;
  sub_2576A7810();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  sub_2576A7810();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for GradientStore(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for KeyValuePairsCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257536D20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_2574E7EB8();
    uint64_t v2 = v12;
    uint64_t v4 = (_OWORD *)(a1 + 48);
    do
    {
      uint64_t v6 = *((void *)v4 - 2);
      uint64_t v5 = *((void *)v4 - 1);
      long long v11 = *v4;
      unint64_t v8 = *(void *)(v12 + 16);
      unint64_t v7 = *(void *)(v12 + 24);
      sub_2576A7810();
      swift_unknownObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_2574E7EB8();
      }
      *(void *)(v12 + 16) = v8 + 1;
      uint64_t v9 = v12 + 32 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      *(_OWORD *)(v9 + 48) = v11;
      uint64_t v4 = (_OWORD *)((char *)v4 + 40);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_257536E14()
{
  OUTLINED_FUNCTION_11_26();
  OUTLINED_FUNCTION_9_13();
  MEMORY[0x270FA5388](v0);
  sub_2576A7F90();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_8_30();
  v1();
  OUTLINED_FUNCTION_9_13();
  OUTLINED_FUNCTION_8_30();
  return v2();
}

uint64_t sub_257536F20()
{
  sub_2576A76F0();
  sub_2576A7810();
  swift_getTupleTypeMetadata2();
  sub_2576A7F50();
  swift_getWitnessTable();
  sub_2576A7C60();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_22();
  sub_2576A7F50();
  swift_getWitnessTable();
  uint64_t v0 = sub_2576A86F0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_257537048()
{
  uint64_t v1 = sub_2576A7810();
  uint64_t v2 = sub_257536D20(v1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    sub_2576A77E0();
    uint64_t v4 = sub_25746E1AC(v2);
    uint64_t v5 = swift_bridgeObjectRelease();
    sub_257470CD0(v5);
    return v4;
  }
  return result;
}

void sub_2575370F0()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v13 = MEMORY[0x25A2B7E20](&v17, v11, v7, v5, v12, v1);
  if (!v17) {
    goto LABEL_5;
  }
  if (!*(void *)(v17 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_5:
    OUTLINED_FUNCTION_10_22();
    sub_2576A7E90();
    goto LABEL_6;
  }
  MEMORY[0x270FA5388](v13);
  id v16[2] = v5;
  void v16[3] = v3;
  v16[4] = v1;
  v16[5] = v9;
  unsigned char v16[6] = v7;
  unint64_t v14 = sub_257539D44();
  sub_257495BE0((void (*)(char *, uint64_t))sub_257539D1C, (uint64_t)v16, v12, v3, MEMORY[0x263F8E628], v14, MEMORY[0x263F8E658], v15);
  swift_bridgeObjectRelease();
LABEL_6:
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_25753721C()
{
  OUTLINED_FUNCTION_2_34();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A000E08);
  OUTLINED_FUNCTION_3_32();
  sub_2576A7E90();
  sub_2576A77E0();
  swift_getTupleTypeMetadata2();
  swift_getTupleTypeMetadata2();
  uint64_t v0 = sub_2576A8A20();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for KeyValuePairsCollection();
  sub_257537648(v1);
  return v0;
}

uint64_t sub_2575372FC()
{
  OUTLINED_FUNCTION_2_34();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A000E08);
  OUTLINED_FUNCTION_3_32();
  sub_2576A7E90();
  sub_2576A77E0();
  uint64_t v1 = type metadata accessor for KeyValuePairsCollection();
  sub_257537648(v1);
  return v0;
}

uint64_t sub_257537384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v38 = a2;
  uint64_t v39 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v11 = (char *)v31 - v10;
  uint64_t v12 = *(void *)(a3 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v17;
  uint64_t v36 = a1;
  uint64_t v18 = *(int *)(v17 + 48);
  long long v19 = &v11[v18];
  uint64_t v20 = a1 + v18;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v31[1] = v12 + 16;
  v33(v11, a1, a3, v14);
  uint64_t v21 = *(void *)(a4 - 8);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v34 = v20;
  uint64_t v32 = v22;
  v22(v19, v20, a4);
  sub_2576A80C0();
  LOBYTE(v20) = sub_2576A8090();
  uint64_t v38 = v12;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v24 = a3;
  v23(v16, a3);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v26 = a4;
  v25(v19, a4);
  if ((v20 & 1) == 0) {
    return __swift_storeEnumTagSinglePayload(v39, 1, 1, v24);
  }
  int v27 = &v11[*(int *)(v35 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v33)(v11, v36, v24);
  uint64_t v28 = v26;
  v32(v27, v34, v26);
  uint64_t v29 = v39;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v39, v11, v24);
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v27, v28);
}

uint64_t sub_257537648(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v67 = a1;
  uint64_t v68 = v3;
  uint64_t v69 = v2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v73 = *(char **)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v66 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v52 - v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v52 - v10;
  MEMORY[0x270FA5388](v12);
  __n128 v14 = (char *)&v52 - v13;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = sub_2576A84C0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v71 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v70 = (uint64_t *)((char *)&v52 - v20);
  uint64_t v74 = v1;
  v79[1] = *v1;
  uint64_t v21 = sub_2576A7F50();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A2B8250](v79, v21, WitnessTable);
  uint64_t v78 = v79[0];
  sub_2576A8BE0();
  sub_2576A8BB0();
  uint64_t v24 = v70;
  uint64_t v23 = v71;
  uint64_t v65 = sub_2576A8BD0();
  sub_2576A8BC0();
  int v27 = *(void (**)(uint64_t *, char *, uint64_t))(v17 + 32);
  uint64_t v26 = v17 + 32;
  uint64_t v25 = v27;
  v27(v24, v23, v16);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v15) != 1)
  {
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32);
    uint64_t v59 = *v28;
    uint64_t v57 = v68 - 8;
    uint64_t v56 = v28 - 2;
    uint64_t v55 = v74 + 1;
    uint64_t v58 = v28;
    uint64_t v54 = (void (**)(char *, uint64_t))(v28 - 3);
    uint64_t v53 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v75 = v8;
    uint64_t v76 = TupleTypeMetadata2;
    uint64_t v63 = v15;
    char v64 = v11;
    uint64_t v77 = v14;
    uint64_t v62 = v16;
    uint64_t v61 = v26;
    unint64_t v60 = v25;
    do
    {
      uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v72 = &v14[v29];
      uint64_t v74 = (void *)*v24;
      uint64_t v30 = (char *)v24 + *(int *)(v15 + 48) + v29;
      uint64_t v31 = &v11[v29];
      uint64_t v32 = v69;
      uint64_t v33 = v59;
      ((void (*)(char *))v59)(v11);
      uint64_t v34 = v68;
      uint64_t v35 = *(void **)(v68 - 8);
      uint64_t v36 = (void (*)(char *, char *, uint64_t))v35[4];
      v36(v31, v30, v68);
      v33(v77, v11, v32);
      uint64_t v37 = v72;
      v36(v72, v31, v34);
      uint64_t v73 = &v75[*(int *)(v76 + 48)];
      uint64_t v38 = v73;
      uint64_t v39 = *v56;
      (*v56)(v75, v77, v32);
      uint64_t v40 = (void (*)(char *, char *, uint64_t))v35[2];
      v40(v38, v37, v34);
      uint64_t v41 = v66;
      uint64_t v42 = &v66[*(int *)(v76 + 48)];
      v39(v66, v77, v32);
      v40(v42, v37, v34);
      uint64_t v43 = *v55;
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
      MEMORY[0x25A2B7E20](v79, v41, v43, v32, v44, *(void *)(v67 + 32));
      if (v79[0]) {
        uint64_t v45 = v79[0];
      }
      else {
        uint64_t v45 = MEMORY[0x263F8EE78];
      }
      uint64_t v46 = (void (*)(char *, uint64_t))v35[1];
      uint64_t v47 = v42;
      uint64_t v48 = v71;
      v46(v47, v34);
      (*v54)(v41, v32);
      v79[0] = v45;
      sub_2575A0688((uint64_t)v74);
      TupleTypeMetadata2 = v76;
      __n128 v14 = v77;
      uint64_t v15 = v63;
      sub_2576A7830();
      sub_2576A7850();
      (*v53)(v14, TupleTypeMetadata2);
      uint64_t v49 = v62;
      uint64_t v50 = v34;
      uint64_t v24 = v70;
      v46(v73, v50);
      uint64_t v11 = v64;
      sub_2576A8BC0();
      v60(v24, v48, v49);
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v15) != 1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_257537C7C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (char *)&v10 - v7;
  sub_2576A7F90();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(a2 - 8) + 32))(a3, &v8[*(int *)(TupleTypeMetadata2 + 48)], a2);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(a1 - 8) + 8))(v8, a1);
}

uint64_t sub_257537DA8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_257537DD8(a1, a2, (uint64_t (*)(uint64_t, void, void, void))sub_25753721C, a3);
}

uint64_t sub_257537DC0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_257537DD8(a1, a2, (uint64_t (*)(uint64_t, void, void, void))sub_2575372FC, a3);
}

uint64_t sub_257537DD8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(a1, a2[2], a2[3], a2[4]);
  *a4 = result;
  a4[1] = v6;
  return result;
}

uint64_t sub_257537E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a6(a1, TupleTypeMetadata2);
}

uint64_t sub_257537E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a8(a1, a2, a3, TupleTypeMetadata2);
}

uint64_t sub_257537F00()
{
  return sub_2576A7EF0();
}

uint64_t sub_257537F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_257537E14(*v4, a2, *(void *)(a1 + 16), *(void *)(a1 + 24), a3, MEMORY[0x263F8D428]);
  *a4 = result;
  return result;
}

uint64_t sub_257537F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_257537E14(*v4, a2, *(void *)(a1 + 16), *(void *)(a1 + 24), a3, MEMORY[0x263F8D470]);
  *a4 = result;
  return result;
}

void (*sub_257537FE0(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)malloc(0x40uLL);
  *a1 = v5;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v5[4] = TupleTypeMetadata2;
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  v5[5] = v9;
  uint64_t v10 = (char *)malloc(*(void *)(v9 + 64));
  v5[6] = (uint64_t)v10;
  uint64_t v11 = sub_2575381D0(v5);
  uint64_t v13 = v12;
  v5[7] = (uint64_t)v11;
  (*(void (**)(char *))(*(void *)(v7 - 8) + 16))(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(&v10[*(int *)(TupleTypeMetadata2 + 48)], v13, v6);
  return sub_257538158;
}

void sub_257538158(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*(void *)(*a1 + 40) + 8))(*(void *)(*a1 + 48), *(void *)(*a1 + 32));
  uint64_t v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_2575381D0(uint64_t *a1))(void *a1)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  uint64_t v3 = *(void *)(TupleTypeMetadata2 - 8);
  a1[1] = v3;
  a1[2] = (uint64_t)malloc(*(void *)(v3 + 64));
  sub_257536E14();
  return sub_2574C41F8;
}

uint64_t sub_2575382D0()
{
  swift_getWitnessTable();
  return sub_2576A8110();
}

uint64_t sub_257538354@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_25753851C(*a1, *v5, a3, *(void *)(a2 + 16), *(void *)(a2 + 24), a4, MEMORY[0x263F8D450]);
  *a5 = result;
  return result;
}

uint64_t sub_2575383A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_25753851C(*a1, *v6, a3, *(void *)(a2 + 16), *(void *)(a2 + 24), a6, MEMORY[0x263F8D450]);
  *a1 = result;
  return result;
}

uint64_t sub_2575383EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v10 = sub_257537E14(v5, v8, v6, v7, v9, MEMORY[0x263F8D428]);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v4;
  a2[2] = v10;
  return result;
}

uint64_t sub_257538474(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F9E108](a1, WitnessTable);
}

uint64_t sub_2575384C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270F9E128](a1, WitnessTable);
}

uint64_t sub_25753851C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t))
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a7(a1, a2, TupleTypeMetadata2);
}

uint64_t sub_257538590@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_25753851C(*a1, *v5, a3, *(void *)(a2 + 16), *(void *)(a2 + 24), a4, MEMORY[0x263F8D458]);
  *a5 = result;
  return result;
}

uint64_t sub_2575385DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = sub_25753851C(*a1, *v6, a3, *(void *)(a2 + 16), *(void *)(a2 + 24), a6, MEMORY[0x263F8D458]);
  *a1 = result;
  return result;
}

uint64_t sub_257538628@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t *a6@<X8>)
{
  uint64_t result = sub_257537E80(*a1, a2, *v6, a4, *(void *)(a3 + 16), *(void *)(a3 + 24), a5, MEMORY[0x263F8D460]);
  *a6 = result;
  return result;
}

uint64_t sub_257538674@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_257537F00();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_2575386B8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_257537E80(*a1, *a2, *v7, a4, *(void *)(a3 + 16), *(void *)(a3 + 24), a7, MEMORY[0x263F8D468]);
}

void sub_2575386F8()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v76 = v0;
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  OUTLINED_FUNCTION_0_10();
  uint64_t v71 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v83 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_2576A84C0();
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v79 = (char *)&v66 - v19;
  uint64_t v91 = v14;
  uint64_t v92 = v12;
  uint64_t v77 = v12;
  OUTLINED_FUNCTION_10_22();
  type metadata accessor for KeyValuePairsCollection();
  swift_getWitnessTable();
  uint64_t v20 = sub_2576A81C0();
  uint64_t v91 = v10;
  uint64_t v92 = v8;
  uint64_t v78 = v8;
  if (v20 != sub_2576A81C0()) {
    goto LABEL_35;
  }
  uint64_t v91 = sub_257536F20();
  OUTLINED_FUNCTION_10_22();
  sub_2576A86E0();
  swift_getWitnessTable();
  uint64_t v21 = OUTLINED_FUNCTION_7_28();
  uint64_t v84 = v4;
  uint64_t v22 = v21;
  uint64_t v91 = sub_257536F20();
  OUTLINED_FUNCTION_7_28();
  sub_2576A7810();
  sub_2576A8060();
  swift_bridgeObjectRelease();
  char v23 = sub_2576A80A0();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    OUTLINED_FUNCTION_8_21();
    return;
  }
  uint64_t v24 = v6;
  uint64_t v75 = v14;
  uint64_t v25 = v10;
  if ((v22 & 0xC000000000000001) != 0)
  {
    sub_2576A8690();
    sub_2576A80B0();
    uint64_t v22 = v91;
    uint64_t v68 = v92;
    uint64_t v26 = v93;
    int v27 = v94;
    unint64_t v28 = v95;
  }
  else
  {
    int v27 = 0;
    uint64_t v29 = -1 << *(unsigned char *)(v22 + 32);
    uint64_t v30 = *(void *)(v22 + 56);
    uint64_t v68 = v22 + 56;
    uint64_t v26 = ~v29;
    uint64_t v31 = -v29;
    if (v31 < 64) {
      uint64_t v32 = ~(-1 << v31);
    }
    else {
      uint64_t v32 = -1;
    }
    unint64_t v28 = v32 & v30;
  }
  uint64_t v33 = v83;
  uint64_t v34 = (uint64_t)v79;
  uint64_t v69 = v22 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v66 = v26;
  int64_t v67 = (unint64_t)(v26 + 64) >> 6;
  uint64_t v70 = v71 + 16;
  uint64_t v74 = v71 + 32;
  uint64_t v72 = v71 + 8;
  uint64_t v35 = v84;
  uint64_t v73 = v22;
  while (1)
  {
    unint64_t v80 = v28;
    char v81 = v27;
    if ((v22 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v36 = v25;
    if (!sub_2576A86A0())
    {
      uint64_t v63 = OUTLINED_FUNCTION_12_24();
      __swift_storeEnumTagSinglePayload(v63, v64, v65, v24);
      OUTLINED_FUNCTION_4_34();
LABEL_38:
      sub_25748681C();
      goto LABEL_35;
    }
    sub_2576A8F40();
    swift_unknownObjectRelease();
    uint64_t v82 = v80;
    uint64_t v83 = v81;
LABEL_30:
    __swift_storeEnumTagSinglePayload(v34, 0, 1, v24);
    OUTLINED_FUNCTION_8_30();
    v42(v41);
    sub_2575370F0();
    uint64_t v44 = v43;
    sub_2575370F0();
    uint64_t v45 = v24;
    uint64_t v47 = v46;
    uint64_t v48 = v33;
    uint64_t v49 = MEMORY[0x25A2B84C0](v44, v35);
    if (v49 != MEMORY[0x25A2B84C0](v47, v35))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v58 = OUTLINED_FUNCTION_1_51();
      v59(v58);
LABEL_34:
      OUTLINED_FUNCTION_4_34();
      sub_25748681C();
      goto LABEL_35;
    }
    uint64_t v25 = v36;
    uint64_t v85 = v44;
    *(void *)&long long v89 = v47;
    uint64_t v50 = sub_2576A7F50();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_2576A9000();
    swift_bridgeObjectRelease();
    uint64_t v52 = swift_bridgeObjectRelease();
    long long v89 = v90;
    MEMORY[0x270FA5388](v52);
    uint64_t v53 = v84;
    *(&v66 - 4) = v45;
    *(&v66 - 3) = v53;
    uint64_t v54 = v76;
    *(&v66 - 2) = v2;
    *(&v66 - 1) = v54;
    uint64_t v85 = v50;
    uint64_t v86 = v50;
    uint64_t v87 = WitnessTable;
    uint64_t v88 = WitnessTable;
    sub_2576A87A0();
    swift_getWitnessTable();
    char v55 = sub_2576A7C50();
    uint64_t v35 = v84;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v56 = OUTLINED_FUNCTION_1_51();
    v57(v56);
    uint64_t v33 = v48;
    uint64_t v24 = v45;
    uint64_t v34 = (uint64_t)v79;
    uint64_t v22 = v73;
    unint64_t v28 = v82;
    int v27 = v83;
    if ((v55 & 1) == 0) {
      goto LABEL_34;
    }
  }
  uint64_t v36 = v25;
  if (v28)
  {
    uint64_t v82 = (v28 - 1) & v28;
    uint64_t v83 = v27;
    unint64_t v37 = __clz(__rbit64(v28)) | ((void)v27 << 6);
LABEL_29:
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v71 + 16))(v34, *(void *)(v22 + 48) + *(void *)(v71 + 72) * v37, v24);
    goto LABEL_30;
  }
  int64_t v38 = (int64_t)(v27 + 1);
  if (!__OFADD__(v27, 1))
  {
    if (v38 >= v67) {
      goto LABEL_36;
    }
    unint64_t v39 = *(void *)(v68 + 8 * v38);
    if (!v39)
    {
      if ((uint64_t)(v27 + 2) >= v67) {
        goto LABEL_36;
      }
      unint64_t v39 = *(void *)(v68 + 8 * (void)(v27 + 2));
      if (v39)
      {
        int64_t v38 = (int64_t)(v27 + 2);
      }
      else
      {
        int64_t v38 = (int64_t)(v27 + 3);
        if ((uint64_t)(v27 + 3) >= v67) {
          goto LABEL_36;
        }
        unint64_t v39 = *(void *)(v68 + 8 * v38);
        if (!v39)
        {
          int64_t v40 = (int64_t)(v27 + 4);
          while (v40 < v67)
          {
            unint64_t v39 = *(void *)(v68 + 8 * v40++);
            if (v39)
            {
              int64_t v38 = v40 - 1;
              goto LABEL_28;
            }
          }
LABEL_36:
          uint64_t v60 = OUTLINED_FUNCTION_12_24();
          __swift_storeEnumTagSinglePayload(v60, v61, v62, v24);
          goto LABEL_38;
        }
      }
    }
LABEL_28:
    uint64_t v82 = (v39 - 1) & v39;
    uint64_t v83 = (char *)v38;
    unint64_t v37 = __clz(__rbit64(v39)) + (v38 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

uint64_t sub_257538DC8()
{
  return sub_2576A7990() & 1;
}

void sub_257538E30()
{
}

void sub_257538E54()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v33 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v35 = v1;
  uint64_t v36 = (char *)&v27 - v20;
  uint64_t v43 = v11;
  uint64_t v37 = v9;
  uint64_t v38 = v7;
  uint64_t v39 = v5;
  uint64_t v40 = v3;
  uint64_t v34 = v3;
  uint64_t v41 = v1;
  sub_2576A7F50();
  sub_2576A7810();
  swift_getWitnessTable();
  uint64_t v21 = sub_2576A7CF0();
  swift_bridgeObjectRelease();
  sub_2576A7810();
  uint64_t v22 = sub_2576A7E00();
  swift_bridgeObjectRelease();
  uint64_t v43 = v22;
  if (v22 == MEMORY[0x25A2B8500](v21, TupleTypeMetadata2))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_21();
    return;
  }
  uint64_t v31 = &v36[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v32 = (void (**)(char *, uint64_t *, uint64_t))(v15 + 16);
  uint64_t v29 = v7 - 8;
  uint64_t v30 = v9 - 8;
  while (1)
  {
    char v23 = sub_2576A7EC0();
    sub_2576A7E40();
    if ((v23 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v36, v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v22, TupleTypeMetadata2);
LABEL_6:
    sub_2576A7810();
    MEMORY[0x25A2B8510](&v43, v21, TupleTypeMetadata2);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_8_30();
    v24();
    OUTLINED_FUNCTION_8_30();
    v25();
    sub_2576A78D0();
    sub_2576A78D0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, TupleTypeMetadata2);
    uint64_t v22 = v43;
    if (v22 == MEMORY[0x25A2B8500](v21, TupleTypeMetadata2)) {
      goto LABEL_2;
    }
  }
  uint64_t v26 = sub_2576A87C0();
  if (v28 == 8)
  {
    uint64_t v42 = v26;
    (*v32)(v36, &v42, TupleTypeMetadata2);
    swift_unknownObjectRelease();
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_2575391B4()
{
  return sub_2576A9100();
}

uint64_t sub_257539234()
{
  return sub_2575391B4();
}

void sub_25753924C()
{
}

uint64_t sub_257539264()
{
  return sub_2576A9100();
}

void sub_2575392C4()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v67 = v1;
  v50[0] = *(void *)(v2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0_10();
  uint64_t v65 = v4;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)v50 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v50 - v11;
  uint64_t v13 = swift_getTupleTypeMetadata2();
  uint64_t v66 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (void *)((char *)v50 - v20);
  uint64_t v64 = v0;
  uint64_t v74 = *v0;
  uint64_t v22 = sub_2576A7F50();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x25A2B8250](v72, v22, WitnessTable);
  uint64_t v70 = v72[0];
  sub_2576A8BE0();
  sub_2576A8BB0();
  uint64_t v60 = v22;
  uint64_t v24 = v50[0];
  uint64_t v59 = sub_2576A8BD0();
  sub_2576A8BC0();
  uint64_t v25 = *(void (**)(unint64_t *, char *, uint64_t))(v15 + 32);
  uint64_t v61 = v18;
  uint64_t v62 = v15 + 32;
  uint64_t v58 = v25;
  v25(v21, v18, v66);
  if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v13) != 1)
  {
    OUTLINED_FUNCTION_9_13();
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v26 += 32;
    char v55 = v27;
    uint64_t v52 = (void (**)(char *, char *, uint64_t))(v26 - 16);
    uint64_t v54 = v26;
    uint64_t v51 = (void (**)(unint64_t, char *, uint64_t))(v26 + 8);
    v50[1] = v65 + 8;
    uint64_t v57 = v13;
    uint64_t v56 = v12;
    uint64_t v53 = v21;
    do
    {
      unint64_t v28 = *v21;
      uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v30 = *(unint64_t *)((char *)v21 + *(int *)(v13 + 48) + v29);
      uint64_t v31 = v63;
      uint64_t v32 = v55;
      ((void (*)(char *))v55)(v63);
      *(void *)&v31[v29] = v30;
      uint64_t v33 = *(int *)(TupleTypeMetadata2 + 48);
      v32(v12, v31, v24);
      *(void *)&v12[v33] = v30;
      uint64_t v34 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v35 = v12;
      uint64_t v36 = v24;
      (*v52)(v7, v35, v24);
      uint64_t v37 = v7;
      *(void *)&v7[v34] = v30;
      uint64_t v38 = &protocol witness table for Int8;
      uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E498];
      switch(*(unsigned char *)(*(void *)(v30 + 16) + 160))
      {
        case 1:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E4F0];
          uint64_t v38 = &protocol witness table for Int16;
          break;
        case 2:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E548];
          uint64_t v38 = &protocol witness table for Int32;
          break;
        case 3:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8D6C8];
          uint64_t v38 = &protocol witness table for Int;
          break;
        case 4:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E778];
          uint64_t v38 = &protocol witness table for UInt8;
          break;
        case 5:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E888];
          uint64_t v38 = &protocol witness table for UInt16;
          break;
        case 6:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E8F8];
          uint64_t v38 = &protocol witness table for UInt32;
          break;
        case 7:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E970];
          uint64_t v38 = &protocol witness table for UInt64;
          break;
        case 8:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8E9F8];
          uint64_t v38 = &protocol witness table for Float16;
          break;
        case 9:
          uint64_t v38 = (_UNKNOWN **)sub_25748E668();
          uint64_t v39 = &type metadata for BFloat16;
          break;
        case 0xA:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8D5C8];
          uint64_t v38 = &protocol witness table for Float;
          break;
        case 0xB:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8D538];
          uint64_t v38 = &protocol witness table for Double;
          break;
        case 0xC:
          uint64_t v39 = (ValueMetadata *)MEMORY[0x263F8D4F8];
          uint64_t v38 = &protocol witness table for Bool;
          break;
        default:
          break;
      }
      swift_retain();
      char v40 = sub_2575365A0((uint64_t)v39, (uint64_t)v38);
      uint64_t v21 = v53;
      if (v40 != 2 && (v40 & 1) != 0 && *(void *)(v67 + 40) == 2)
      {
        sub_2574866D0(v67, (uint64_t)v72);
        uint64_t v70 = 0;
        unint64_t v71 = 0xE000000000000000;
        sub_2576A8730();
        sub_2576A7B00();
        uint64_t v49 = v73;
        if (v73 > 2)
        {
          uint64_t v68 = 5591111;
          unint64_t v69 = 0xE300000000000000;
          swift_unknownObjectRetain();
          sub_2576A7B00();
          swift_getObjectType();
          sub_2575B5A30();
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          sub_2574F9354(v49);
        }
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        sub_2576A7B00();
        sub_2576A7B00();
        sub_2576A92D0();
        sub_2576A7B00();
        swift_bridgeObjectRelease();
        sub_2576A7B00();
        sub_2576A8B60();
        __break(1u);
        JUMPOUT(0x257539A88);
      }
      v72[0] = v30;
      Tensor.place(on:)(v67);
      uint64_t v41 = v72[0];
      uint64_t v42 = v60;
      uint64_t v43 = v64;
      sub_2576A7E80();
      uint64_t v44 = *v43;
      sub_2575B7504(v28, *v43);
      uint64_t v45 = v65;
      unint64_t v46 = v44
          + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
          + *(void *)(v45 + 72) * v28;
      uint64_t v7 = v37;
      uint64_t v47 = v37;
      uint64_t v24 = v36;
      (*v51)(v46, v47, v36);
      *(void *)(v46 + *(int *)(TupleTypeMetadata2 + 48)) = v41;
      swift_release();
      nullsub_1(v42);
      uint64_t v12 = v56;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v56, TupleTypeMetadata2);
      uint64_t v48 = v61;
      sub_2576A8BC0();
      v58(v21, v48, v66);
      uint64_t v13 = v57;
    }
    while (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v57) != 1);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_257539ABC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_257539B3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_257539ABC(a1, *v2);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_257539B74()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539BBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539BD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539C3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539C58()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539CBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_257539CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_257537384(a1, v2[5], v2[2], v2[3], v2[4], a2);
}

uint64_t sub_257539CF8()
{
  return sub_257538DC8() & 1;
}

uint64_t sub_257539D1C@<X0>(uint64_t a1@<X8>)
{
  return sub_257537C7C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_257539D44()
{
  unint64_t result = qword_26A0034F0;
  if (!qword_26A0034F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A000E08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0034F0);
  }
  return result;
}

uint64_t sub_257539D98()
{
  return sub_2576A7920() & 1;
}

uint64_t OUTLINED_FUNCTION_1_51()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_32()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_7_28()
{
  return sub_2576A80D0();
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_26()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return v0;
}

uint64_t identity(_:)()
{
  swift_retain();
  sub_25761BED4((uint64_t)sub_25753A050);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v0 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v0, v1, v2, 13, v3, v4);
  unint64_t v5 = sub_257486A14();
  uint64_t v6 = OUTLINED_FUNCTION_9_31(v5);
  return OUTLINED_FUNCTION_1_52(v6);
}

void sqrt(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C634);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 21, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753A050(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v3 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v3 + 16) = xmmword_2576ABB10;
      swift_retain_n();
      swift_retain();
      swift_retain();
      uint64_t v4 = sub_2574E8C6C();
      *(void *)(v3 + 32) = v2;
      *(void *)(v3 + 40) = v4;
      *(void *)(v3 + 48) = v5;
      swift_release();
      swift_release();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void acos(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753A1E4);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 1, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753A1E4(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v13 = 0;
      memset(v12, 0, sizeof(v12));
      uint64_t v10 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)v12, (uint64_t)v9);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v12);
      uint64_t v4 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_2576ABB10;
      *(void *)&v12[0] = v2;
      static Tensor.- prefix(_:)((uint64_t *)v12);
      uint64_t v10 = v4;
      uint64_t v11 = v9[0];
      *(void *)&v12[0] = v3;
      Tensor.squared()();
      static Tensor.- infix(_:_:)();
      swift_release();
      rsqrt(_:)();
      swift_release();
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v6 = *(void *)&v12[0];
      swift_retain();
      uint64_t v7 = sub_2574E8C6C();
      *(void *)(v5 + 32) = v6;
      *(void *)(v5 + 40) = v7;
      *(void *)(v5 + 48) = v8;
      swift_release();
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void rsqrt(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C398);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 17, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

void acosh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753A56C);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 2, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753A56C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v12 = 0;
      memset(v11, 0, sizeof(v11));
      uint64_t v9 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)v11, (uint64_t)v8);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v11);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_2576ABB10;
      v8[0] = v2;
      *(void *)&v11[0] = v3;
      Tensor.squared()();
      uint64_t v9 = v10;
      static Tensor.- infix(_:_:)();
      swift_release();
      uint64_t v9 = *(void *)&v11[0];
      rsqrt(_:)();
      swift_release();
      uint64_t v9 = v10;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v5 = *(void *)&v11[0];
      swift_retain();
      uint64_t v6 = sub_2574E8C6C();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v6;
      *(void *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void asin(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753A7EC);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 3, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753A7EC(uint64_t a1, uint64_t a2)
{
  return sub_25753A91C(a1, a2, (uint64_t)&unk_27065EF50, (void (*)(void *__return_ptr, uint64_t *, void *))static Tensor.- infix(_:_:));
}

void asinh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753A8FC);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 4, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753A8FC(uint64_t a1, uint64_t a2)
{
  return sub_25753A91C(a1, a2, (uint64_t)&unk_27065EF78, (void (*)(void *__return_ptr, uint64_t *, void *))static Tensor.+ infix(_:_:));
}

uint64_t sub_25753A91C(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t *, void *))
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(void *)(result + 32);
      uint64_t v6 = *(void *)(a2 + 32);
      double v7 = OUTLINED_FUNCTION_12_25();
      OUTLINED_FUNCTION_32_10(v8, v7);
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_28_11();
      sub_25747B4E4((uint64_t)v17);
      uint64_t v9 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v10 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v10 + 16) = xmmword_2576ABB10;
      v14[1] = v5;
      uint64_t v16 = v9;
      v17[0] = v6;
      Tensor.squared()();
      v14[0] = v15;
      a4(v17, &v16, v14);
      swift_release();
      uint64_t v15 = v17[0];
      rsqrt(_:)();
      swift_release();
      OUTLINED_FUNCTION_29_11();
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v11 = v17[0];
      swift_retain();
      uint64_t v12 = sub_2574E8C6C();
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v12;
      *(void *)(v10 + 48) = v13;
      swift_release();
      swift_release();
      swift_release();
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void atan(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AB54);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 5, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753AB54(uint64_t a1, uint64_t a2)
{
  return sub_25753AC84(a1, a2, (uint64_t)&unk_27065EFA0, (void (*)(uint64_t *__return_ptr, void *, void *))static Tensor.+ infix(_:_:));
}

void atanh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AC64);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 6, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753AC64(uint64_t a1, uint64_t a2)
{
  return sub_25753AC84(a1, a2, (uint64_t)&unk_27065EFC8, (void (*)(uint64_t *__return_ptr, void *, void *))static Tensor.- infix(_:_:));
}

uint64_t sub_25753AC84(uint64_t result, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, void *, void *))
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(void *)(result + 32);
      uint64_t v6 = *(void *)(a2 + 32);
      double v7 = OUTLINED_FUNCTION_12_25();
      OUTLINED_FUNCTION_32_10(v8, v7);
      swift_retain();
      swift_retain();
      OUTLINED_FUNCTION_28_11();
      sub_25747B4E4((uint64_t)v16);
      uint64_t v9 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v10 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v10 + 16) = xmmword_2576ABB10;
      v14[1] = v5;
      uint64_t v15 = v6;
      v16[0] = v9;
      Tensor.squared()();
      v14[0] = v14[8];
      a4(&v15, v16, v14);
      swift_release();
      OUTLINED_FUNCTION_29_11();
      static Tensor./ infix(_:_:)();
      swift_release();
      uint64_t v11 = v16[0];
      swift_retain();
      uint64_t v12 = sub_2574E8C6C();
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v12;
      *(void *)(v10 + 48) = v13;
      swift_release();
      swift_release();
      swift_release();
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void ceil(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AEA0);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 7, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

void cos(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AF94);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 8, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753AF94(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_2576ABB10;
      uint64_t v8 = v2;
      swift_retain();
      swift_retain();
      static Tensor.- prefix(_:)(&v8);
      uint64_t v8 = v3;
      sin(_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v5 = v8;
      swift_retain();
      uint64_t v6 = sub_2574E8C6C();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v6;
      *(void *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sin(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C604);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 19, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

void cosh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753B27C);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 9, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753B27C(uint64_t a1, uint64_t a2)
{
  return sub_25753CC5C(a1, a2, (void (*)(void *__return_ptr, uint64_t *))sinh(_:));
}

void sinh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C61C);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 20, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

void exp(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753B474);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 10, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753B474(uint64_t a1, uint64_t a2)
{
  return sub_25753CC5C(a1, a2, (void (*)(void *__return_ptr, uint64_t *))exp(_:));
}

void exp2(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753B57C);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 11, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753B57C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      char v4 = *(unsigned char *)(*(void *)(v3 + 16) + 160);
      int v15 = 0;
      memset(v14, 0, sizeof(v14));
      uint64_t v12 = MEMORY[0x263F8EE78];
      char v11 = v4;
      sub_25747B47C((uint64_t)v14, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v14);
      uint64_t v5 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      *(void *)&v14[0] = v2;
      v10[0] = v3;
      exp2(_:)(&v13, v10);
      uint64_t v12 = v13;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v12 = v5;
      uint64_t v13 = v10[0];
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v7 = *(void *)&v14[0];
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t exp10(_:)()
{
  uint64_t v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v8[0] = v0;
    v8[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_22_18(v4, v6);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v8);
  v8[0] = v7;
  pow(_:_:)();
  return swift_release();
}

uint64_t expMinusOne(_:)()
{
  char v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v18[0] = v0;
    v18[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  exp(_:)();
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_23_16(v5, v7, v8, v9, v10, v11, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13), v14, v15, v17, v3);
  OUTLINED_FUNCTION_20_19();
  sub_25747B4E4((uint64_t)v18);
  v18[0] = v16;
  static Tensor.- infix(_:_:)();
  swift_release();
  return swift_release();
}

void floor(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AEA0);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 12, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

void log(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753BA98);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 14, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753BA98(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_2576ABB10;
      uint64_t v8 = v3;
      uint64_t v9 = v2;
      swift_retain();
      swift_retain();
      static Tensor./ infix(_:_:)(&v10, &v9, &v8);
      uint64_t v5 = v10;
      swift_retain();
      uint64_t v6 = sub_2574E8C6C();
      *(void *)(v4 + 32) = v5;
      *(void *)(v4 + 40) = v6;
      *(void *)(v4 + 48) = v7;
      swift_release();
      swift_release();
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t log2(_:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v17[0] = v0;
    v17[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  log(_:)();
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_23_16(v5, v7, v8, v9, v10, v11, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13), v14, v15, v16, v3);
  OUTLINED_FUNCTION_20_19();
  sub_25747B4E4((uint64_t)v17);
  OUTLINED_FUNCTION_31_9();
  swift_release();
  OUTLINED_FUNCTION_26_14();
  swift_release();
  return swift_release();
}

uint64_t log10(_:)()
{
  uint64_t v4 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v4);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v17[0] = v0;
    v17[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  log(_:)();
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_23_16(v5, v7, v8, v9, v10, v11, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13), v14, v15, v16, v3);
  OUTLINED_FUNCTION_20_19();
  sub_25747B4E4((uint64_t)v17);
  OUTLINED_FUNCTION_31_9();
  swift_release();
  OUTLINED_FUNCTION_26_14();
  swift_release();
  return swift_release();
}

uint64_t log(onePlus:)()
{
  char v3 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v3);
  OUTLINED_FUNCTION_11_27();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_27_12();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    v7[0] = v0;
    v7[1] = v1;
    OUTLINED_FUNCTION_15_19();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_22_18(v4, v6);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v7);
  static Tensor.+ infix(_:_:)();
  swift_release();
  log(_:)();
  return swift_release();
}

uint64_t log(oneMinusExp:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  v11[0] = *a1;
  uint64_t v3 = v11[0];
  static Tensor.- prefix(_:)(v11);
  OUTLINED_FUNCTION_12_25();
  OUTLINED_FUNCTION_22_18(v4, v7);
  OUTLINED_FUNCTION_21_19();
  sub_25747B4E4((uint64_t)v11);
  v11[0] = v10;
  log(_:)();
  swift_release();
  uint64_t v10 = v8[0];
  static Tensor..< infix(_:_:)();
  swift_release();
  swift_release();
  uint64_t v5 = v11[0];
  v8[0] = v3;
  swift_retain();
  Tensor.init(onesLike:)(v8, v11);
  v8[0] = v3;
  static Tensor.- prefix(_:)(v11);
  uint64_t v9 = v5;
  uint64_t v10 = v12;
  Tensor.replacing(with:where:)(&v10, &v9, (uint64_t)v11);
  swift_release();
  v8[0] = v11[0];
  exp(_:)();
  uint64_t v12 = v11[0];
  static Tensor.- prefix(_:)(&v12);
  swift_release();
  uint64_t v12 = v8[0];
  log(onePlus:)();
  swift_release();
  v8[0] = v11[0];
  uint64_t v10 = v3;
  expMinusOne(_:)();
  uint64_t v9 = v12;
  static Tensor.- prefix(_:)(&v9);
  swift_release();
  uint64_t v9 = v10;
  log(_:)();
  swift_release();
  uint64_t v9 = v5;
  uint64_t v10 = v12;
  Tensor.replacing(with:where:)(&v10, &v9, a2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void reciprocal(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C10C);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 15, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753C10C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v12 = 0;
      memset(v11, 0, sizeof(v11));
      uint64_t v9 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)v11, (uint64_t)v8);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v11);
      *(void *)&v11[0] = v10;
      static Tensor.- prefix(_:)((uint64_t *)v11);
      swift_release();
      uint64_t v10 = v8[0];
      *(void *)&v11[0] = v3;
      Tensor.squared()();
      static Tensor./ infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v9 = *(void *)&v11[0];
      uint64_t v10 = v2;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v4 = v8[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v6 = sub_2574E8C6C();
      *(void *)(v5 + 32) = v4;
      *(void *)(v5 + 40) = v6;
      *(void *)(v5 + 48) = v7;
      swift_release();
      swift_release();
      swift_release();
      return v5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void round(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AEA0);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 16, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753C398(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      int v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      uint64_t v4 = MEMORY[0x263F8EE78];
      uint64_t v12 = MEMORY[0x263F8EE78];
      sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v14);
      uint64_t v5 = v13;
      int v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      uint64_t v12 = v4;
      sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v14);
      int v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v14 = 0u;
      uint64_t v12 = v4;
      sub_25747B47C((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v14);
      uint64_t v6 = v13;
      uint64_t v13 = v5;
      *(void *)&long long v14 = v2;
      static Tensor.* infix(_:_:)();
      uint64_t v13 = v11[0];
      *(void *)&long long v14 = v6;
      uint64_t v12 = v3;
      pow(_:_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      static Tensor./ infix(_:_:)();
      swift_release();
      swift_release();
      uint64_t v7 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_2574E8C6C();
      *(void *)(v8 + 32) = v7;
      *(void *)(v8 + 40) = v9;
      *(void *)(v8 + 48) = v10;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_25753C604(uint64_t a1, uint64_t a2)
{
  return sub_25753CC5C(a1, a2, (void (*)(void *__return_ptr, uint64_t *))cos(_:));
}

uint64_t sub_25753C61C(uint64_t a1, uint64_t a2)
{
  return sub_25753CC5C(a1, a2, (void (*)(void *__return_ptr, uint64_t *))cosh(_:));
}

uint64_t sub_25753C634(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      v12[0] = *(void *)(a2 + 32);
      swift_retain();
      swift_retain();
      sqrt(_:)(&v16, v12);
      uint64_t v3 = v16;
      char v4 = *(unsigned char *)(*(void *)(v16 + 16) + 160);
      int v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v16 = 0u;
      uint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t v14 = MEMORY[0x263F8EE78];
      char v13 = v4;
      sub_25747B47C((uint64_t)&v16, (uint64_t)v12);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v16);
      uint64_t v6 = v15;
      char v7 = *(unsigned char *)(*(void *)(v3 + 16) + 160);
      int v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
      long long v16 = 0u;
      uint64_t v14 = v5;
      char v13 = v7;
      sub_25747B47C((uint64_t)&v16, (uint64_t)v12);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)&v16);
      v12[0] = v6;
      *(void *)&long long v16 = v15;
      uint64_t v14 = v3;
      static Tensor.* infix(_:_:)();
      uint64_t v14 = v15;
      static Tensor./ infix(_:_:)();
      swift_release();
      uint64_t v14 = v16;
      uint64_t v15 = v2;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v8 = v12[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_2576ABB10;
      swift_retain();
      swift_retain();
      uint64_t v10 = sub_2574E8C6C();
      *(void *)(v9 + 32) = v8;
      *(void *)(v9 + 40) = v10;
      *(void *)(v9 + 48) = v11;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void tan(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753C930);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 23, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753C930(uint64_t a1, uint64_t a2)
{
  return sub_25753CA50(a1, a2, (void (*)(uint64_t *__return_ptr, void *))cos(_:));
}

void tanh(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753CA38);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 24, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753CA38(uint64_t a1, uint64_t a2)
{
  return sub_25753CA50(a1, a2, (void (*)(uint64_t *__return_ptr, void *))cosh(_:));
}

uint64_t sub_25753CA50(uint64_t result, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v4 = *(void *)(result + 32);
      uint64_t v5 = *(void *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      v10[0] = v5;
      v10[1] = v4;
      swift_retain();
      swift_retain();
      a3(&v11, v10);
      Tensor.squared()();
      swift_release();
      static Tensor./ infix(_:_:)();
      swift_release();
      uint64_t v7 = v11;
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void abs(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753CC44);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 0, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753CC44(uint64_t a1, uint64_t a2)
{
  return sub_25753CC5C(a1, a2, (void (*)(void *__return_ptr, uint64_t *))sign(_:));
}

uint64_t sub_25753CC5C(uint64_t result, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t *))
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v4 = *(void *)(result + 32);
      uint64_t v5 = *(void *)(a2 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      v10[1] = v4;
      uint64_t v11 = v5;
      swift_retain();
      swift_retain();
      a3(v10, &v11);
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v7 = v11;
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sign(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753AEA0);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 18, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753CE2C(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v3 = OUTLINED_FUNCTION_24_16();
      *(_OWORD *)(v3 + 16) = xmmword_2576ABB10;
      uint64_t v7 = v2;
      swift_retain_n();
      swift_retain();
      Tensor.init(zerosLike:)(&v7, &v8);
      uint64_t v4 = v8;
      swift_retain();
      uint64_t v5 = sub_2574E8C6C();
      *(void *)(v3 + 32) = v4;
      *(void *)(v3 + 40) = v5;
      *(void *)(v3 + 48) = v6;
      swift_release();
      swift_release();
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void square(_:)()
{
  OUTLINED_FUNCTION_18_19();
  uint64_t v1 = OUTLINED_FUNCTION_3_33();
  OUTLINED_FUNCTION_8_31((uint64_t)v1);
  OUTLINED_FUNCTION_11_27();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_16_22();
    OUTLINED_FUNCTION_23_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    OUTLINED_FUNCTION_0_47();
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_17_20();
  sub_25761BED4((uint64_t)sub_25753CFD8);
  OUTLINED_FUNCTION_14_25();
  OUTLINED_FUNCTION_6_32();
  OUTLINED_FUNCTION_5_30();
  OUTLINED_FUNCTION_13_21();
  int v2 = OUTLINED_FUNCTION_2_35();
  OUTLINED_FUNCTION_4_35(v2, v3, v4, 22, v5, v6);
  unint64_t v7 = sub_257486A14();
  uint64_t v8 = OUTLINED_FUNCTION_9_31(v7);
  OUTLINED_FUNCTION_1_52(v8);
  OUTLINED_FUNCTION_19_18();
}

uint64_t sub_25753CFD8(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16))
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v2 = *(void *)(result + 32);
      uint64_t v3 = *(void *)(a2 + 32);
      char v4 = *(unsigned char *)(*(void *)(v3 + 16) + 160);
      int v15 = 0;
      memset(v14, 0, sizeof(v14));
      uint64_t v12 = MEMORY[0x263F8EE78];
      char v11 = v4;
      sub_25747B47C((uint64_t)v14, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_25747B4E4((uint64_t)v14);
      uint64_t v5 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2576ABB10;
      v10[0] = v2;
      *(void *)&v14[0] = v5;
      uint64_t v12 = v3;
      static Tensor.* infix(_:_:)();
      uint64_t v12 = v13;
      static Tensor.* infix(_:_:)();
      swift_release();
      uint64_t v7 = *(void *)&v14[0];
      swift_retain();
      uint64_t v8 = sub_2574E8C6C();
      *(void *)(v6 + 32) = v7;
      *(void *)(v6 + 40) = v8;
      *(void *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Tensor.clamped(to:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  uint64_t v8 = *v3;
  uint64_t v9 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_8_31((uint64_t)v9);
  OUTLINED_FUNCTION_11_27();
  if ((v4 & 1) == 0)
  {
    sub_25767AC64();
    OUTLINED_FUNCTION_23_11();
    v35[0] = a1;
    v35[1] = v35;
    v35[2] = 0;
    v35[3] = 0;
    char v36 = 6;
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0013D0);
    char v38 = 2;
    char v39 = 3;
    OUTLINED_FUNCTION_62_1();
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_25_15();
  char v10 = MEMORY[0x263F8EE78];
  char v33 = MEMORY[0x263F8EE78];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
  *(float *)(inited + 32) = a2;
  HIBYTE(v31) = v4;
  uint64_t v12 = sub_25747B47C((uint64_t)v35, (uint64_t)v34);
  OUTLINED_FUNCTION_30_11(v12, v13, v14, v15, v16, v17, v18, v19, 1, 2, v31, v33);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v35);
  OUTLINED_FUNCTION_25_15();
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = v30;
  *(float *)(v20 + 32) = a3;
  HIBYTE(v32) = v4;
  uint64_t v21 = sub_25747B47C((uint64_t)v35, (uint64_t)v34);
  OUTLINED_FUNCTION_30_11(v21, v22, v23, v24, v25, v26, v27, v28, v30, *((uint64_t *)&v30 + 1), v32, v10);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_25747B4E4((uint64_t)v35);
  v34[0] = v8;
  min(_:_:)();
  v34[0] = v35[0];
  max(_:_:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_1_52(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_257613838(v2, v3, 0, (uint64_t)va, v1);
}

uint64_t OUTLINED_FUNCTION_2_35()
{
  return 0;
}

void *OUTLINED_FUNCTION_3_33()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_4_35(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6)
{
  return sub_2574E01C8(a1, a2, a3, a4, v7, a6, v6, v8);
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return type metadata accessor for UnaryArithmeticOperation();
}

BOOL OUTLINED_FUNCTION_8_31(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

uint64_t OUTLINED_FUNCTION_9_31(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_25747B47C(v1 + 168, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_11_27()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_12_25()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_13_21()
{
  return swift_allocObject();
}

ValueMetadata *OUTLINED_FUNCTION_16_22()
{
  return sub_25767AC64();
}

uint64_t OUTLINED_FUNCTION_17_20()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_20_19()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_21_19()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_22_18@<X0>(char a1@<W8>, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v13 = v2;
  HIBYTE(v12) = a1;
  return sub_25747B47C((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_23_16@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, __int16 a9, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  a12 = v15;
  a11 = a1;
  return sub_25747B47C((uint64_t)&a15, (uint64_t)&a2);
}

uint64_t OUTLINED_FUNCTION_24_16()
{
  return swift_allocObject();
}

double OUTLINED_FUNCTION_25_15()
{
  *(_DWORD *)(v0 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)uint64_t v0 = 0u;
  return result;
}

void OUTLINED_FUNCTION_26_14()
{
  static Tensor./ infix(_:_:)();
}

ValueMetadata *OUTLINED_FUNCTION_27_12()
{
  return sub_25767AC64();
}

void OUTLINED_FUNCTION_28_11()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

char *OUTLINED_FUNCTION_30_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void OUTLINED_FUNCTION_31_9()
{
  log(_:)();
}

uint64_t OUTLINED_FUNCTION_32_10(uint64_t a1, ...)
{
  va_start(va1, a1);
  va_start(va, a1);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v12 = v1;
  return sub_25747B47C((uint64_t)va1, (uint64_t)va);
}

uint64_t sub_25753D688()
{
  unint64_t v0 = sub_2576A8CC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_25753D6D4(char a1)
{
  if (!a1) {
    return 6713957;
  }
  if (a1 == 1) {
    return 0x64696F6D676973;
  }
  return 0x4C6552796B61656CLL;
}

uint64_t sub_25753D728(unsigned __int8 *a1, char *a2)
{
  return sub_257574D28(*a1, *a2);
}

uint64_t sub_25753D734()
{
  return sub_2576A36E8();
}

uint64_t sub_25753D73C()
{
  return sub_257470008();
}

uint64_t sub_25753D744()
{
  return sub_2575EEED0();
}

uint64_t sub_25753D74C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_25753D688();
  *a1 = result;
  return result;
}

uint64_t sub_25753D77C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_25753D6D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_25753D7A8(void *a1@<X8>)
{
  *a1 = &unk_27065F288;
}

uint64_t sub_25753D7B8()
{
  uint64_t v1 = 0x64696F6D676973;
  if (*(unsigned char *)(v0 + 128) != 1) {
    uint64_t v1 = 0x4C6552796B61656CLL;
  }
  if (*(unsigned char *)(v0 + 128)) {
    return v1;
  }
  else {
    return 6713957;
  }
}

uint64_t sub_25753D810(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _OWORD *a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14)
{
  __n128 v15 = *(__n128 *)a8;
  __n128 v16 = *(__n128 *)((char *)a8 + 24);
  __n128 v17 = *(__n128 *)((char *)a8 + 40);
  *(unsigned char *)(v14 + 128) = a4;
  *(_DWORD *)(v14 + 132) = a6;
  *(unsigned char *)(v14 + 136) = BYTE4(a6) & 1;
  *(_DWORD *)(v14 + 140) = a7;
  *(unsigned char *)(v14 + 144) = BYTE4(a7) & 1;
  if (!a3)
  {
    __n128 v20 = v16;
    __n128 v21 = v15;
    __n128 v19 = v17;
    a1 = sub_2576641A0();
    __n128 v17 = v19;
    __n128 v16 = v20;
    __n128 v15 = v21;
  }
  return OUTLINED_FUNCTION_0_48(a1, a2, a3, v15, v16, v17, a4, a5, a6, a7, (uint64_t)a8, v19.n128_i64[0], v19.n128_i64[1], v20.n128_i64[0], v20.n128_i64[1], v21.n128_i64[0], v21.n128_i64[1], a12, v22,
           a13,
           a14,
           v23,
           SHIBYTE(v23));
}

uint64_t sub_25753D89C()
{
  return sub_25753DCB0();
}

uint64_t type metadata accessor for ActivationOperation()
{
  return self;
}

uint64_t sub_25753D8C8()
{
  sub_25753D7B8();
  sub_2576A78E0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 136) == 1)
  {
    sub_2576A90B0();
  }
  else
  {
    sub_2576A90B0();
    sub_2576A90D0();
  }
  if (*(unsigned char *)(v0 + 144) == 1) {
    return sub_2576A90B0();
  }
  sub_2576A90B0();
  return sub_2576A90D0();
}

uint64_t sub_25753D988()
{
  return sub_25753D8C8();
}

uint64_t sub_25753D9AC()
{
  return 1970038130;
}

uint64_t sub_25753D9BC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a3) {
    a1 = sub_25761B148(1970038130, 0xE400000000000000);
  }
  *(void *)(v7 + 112) = a6;
  *(void *)(v7 + 120) = a7;
  return sub_2575321A4(a1, a2, a3, a4, a5);
}

uint64_t sub_25753DA28()
{
  return sub_25753DCB0();
}

uint64_t type metadata accessor for ReLUOperation()
{
  return self;
}

uint64_t sub_25753DA54()
{
  return sub_2576A78E0();
}

uint64_t sub_25753DA64()
{
  return sub_25753DA54();
}

uint64_t sub_25753DA7C()
{
  return OUTLINED_FUNCTION_1_53();
}

uint64_t sub_25753DA8C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A004830);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2576ABB00;
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v1 + 32) = *(void *)(v0 + 112);
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v1;
  sub_2576A7E20();
  swift_retain();
  swift_retain();
  return v4;
}

uint64_t sub_25753DB0C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 112) = a4;
  if (!a3)
  {
    uint64_t v9 = OUTLINED_FUNCTION_1_53();
    a1 = sub_25761B148(v9, v10);
  }
  return sub_2575321A4(a1, a2, a3, a5, a6);
}

uint64_t sub_25753DB60()
{
  return swift_release();
}

uint64_t sub_25753DB68()
{
  sub_2575321D4();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReLUGradientOperation()
{
  return self;
}

uint64_t sub_25753DBD4()
{
  return sub_2576A78E0();
}

uint64_t sub_25753DBF0()
{
  return sub_25753DBD4();
}

uint64_t sub_25753DC08()
{
  return 0x78616D74666F73;
}

uint64_t sub_25753DC20(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, __n128 a12, __n128 a13, __n128 a14)
{
  __n128 v15 = *(__n128 *)a6;
  __n128 v16 = *(__n128 *)((char *)a6 + 24);
  __n128 v17 = *(__n128 *)((char *)a6 + 40);
  *(void *)(v14 + 128) = a5;
  if (!a3)
  {
    __n128 v20 = v16;
    __n128 v21 = v15;
    __n128 v19 = v17;
    a1 = sub_25761B148(0x78616D74666F73, 0xE700000000000000);
    __n128 v17 = v19;
    __n128 v16 = v20;
    __n128 v15 = v21;
  }
  return OUTLINED_FUNCTION_0_48(a1, a2, a3, v15, v16, v17, a4, a5, (uint64_t)a6, a7, a8, v19.n128_i64[0], v19.n128_i64[1], v20.n128_i64[0], v20.n128_i64[1], v21.n128_i64[0], v21.n128_i64[1], a12, v22,
           a13,
           a14,
           v23,
           SHIBYTE(v23));
}

uint64_t sub_25753DCA8()
{
  return sub_25753DCB0();
}

uint64_t sub_25753DCB0()
{
  uint64_t v0 = sub_2575321D4();
  sub_25747A4E0(*(void *)(v0 + 112));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SoftmaxOperation()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ActivationOperation.Operator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25753DDF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivationOperation.Operator()
{
  return &type metadata for ActivationOperation.Operator;
}

unint64_t sub_25753DE2C()
{
  unint64_t result = qword_26A0034F8;
  if (!qword_26A0034F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A003500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0034F8);
  }
  return result;
}

unint64_t sub_25753DE84()
{
  unint64_t result = qword_26A003508;
  if (!qword_26A003508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003508);
  }
  return result;
}

uint64_t sub_25753DED0()
{
  return sub_2576A90A0();
}

uint64_t sub_25753DF14()
{
  return sub_25753DED0();
}

uint64_t sub_25753DF38(uint64_t a1)
{
  uint64_t result = sub_25753DFC0(&qword_26A0011F0, (void (*)(void))type metadata accessor for SoftmaxOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25753DF7C(uint64_t a1)
{
  uint64_t result = sub_25753DFC0(&qword_26A001208, (void (*)(void))type metadata accessor for ActivationOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_25753DFC0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_48(int a1, uint64_t a2, uint64_t a3, __n128 a4, __n128 a5, __n128 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __n128 a18, uint64_t a19, __n128 a20,__n128 a21,char a22,char a23)
{
  a18 = a4;
  a19 = v27;
  a20 = a5;
  a21 = a6;
  a22 = v28;
  a23 = 0;
  *(void *)(v24 + 112) = v26;
  *(void *)(v24 + 120) = v25;
  return sub_2575321A4(a1, a2, a3, v23, (uint64_t)&a18);
}

uint64_t OUTLINED_FUNCTION_1_53()
{
  return 0x6172675F756C6572;
}

uint64_t sub_25753E060(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_2574E7194();
    uint64_t v2 = v11;
    unsigned int v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      sub_2576A7810();
      if (v8 >= v7 >> 1) {
        sub_2574E7194();
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_25753E138(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_2574E7EF8();
    uint64_t v3 = v9;
    uint64_t v4 = a1 + 48;
    do
    {
      sub_2576A7810();
      swift_unknownObjectRetain();
      swift_getAtKeyPath();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      long long v5 = v8;
      unint64_t v6 = *(void *)(v9 + 16);
      if (v6 >= *(void *)(v9 + 24) >> 1)
      {
        sub_2574E7EF8();
        long long v5 = v8;
      }
      *(void *)(v9 + 16) = v6 + 1;
      *(_OWORD *)(v9 + 16 * v6 + 32) = v5;
      v4 += 32;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_25753E27C()
{
  uint64_t v1 = v0;
  if (qword_26A0008C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = qword_26A000DF8;
  type metadata accessor for LazyTensorFunctionExecutorCache();
  swift_allocObject();
  *(void *)(v1 + 16) = sub_257558C10(v2);
  return v1;
}

uint64_t sub_25753E320(uint64_t a1)
{
  sub_25747C54C(a1, (uint64_t)v12);
  uint64_t v2 = sub_25753E578(v12);
  if (!v1)
  {
    sub_25753ECEC((uint64_t)v12, v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25753ED7C((uint64_t)v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = v13;
    if (v13 >> 62) {
      goto LABEL_15;
    }
    uint64_t v6 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v6; uint64_t v6 = sub_2576A8BF0())
    {
      uint64_t v7 = 4;
      while (1)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          MEMORY[0x25A2B8DB0](v7 - 4, v5);
        }
        else {
          swift_retain();
        }
        uint64_t v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        uint64_t v9 = sub_257613BDC();
        swift_release();
        swift_unknownObjectRelease();
        if (!v9)
        {
          swift_bridgeObjectRelease_n();
          sub_25753FD14();
          swift_allocError();
          uint64_t v11 = v10;
          sub_2576A8730();
          sub_2576A7B00();
          sub_2576A8A30();
          *(void *)uint64_t v11 = 0;
          *(void *)(v11 + 8) = 0xE000000000000000;
          *(unsigned char *)(v11 + 84) = 5;
          swift_willThrow();
          return sub_25747F1AC((uint64_t)v12);
        }
        ++v7;
        if (v8 == v6) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain_n();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
  }
  return sub_25747F1AC((uint64_t)v12);
}

uint64_t sub_25753E578(uint64_t *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = a1[11];
  if (v4 >> 62) {
    goto LABEL_35;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v5; uint64_t v5 = sub_2576A8BF0())
  {
    uint64_t v56 = v2;
    unint64_t v60 = v4 & 0xC000000000000001;
    uint64_t v57 = &v65;
    uint64_t v6 = MEMORY[0x263F8EE78];
    uint64_t v2 = 4;
    unint64_t v59 = v4;
    uint64_t v58 = v5;
    while (1)
    {
      if (v60)
      {
        uint64_t v7 = MEMORY[0x25A2B8DB0](v2 - 4, v4);
      }
      else
      {
        uint64_t v7 = *(void *)(v4 + 8 * v2);
        swift_retain();
      }
      uint64_t v8 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      uint64_t v10 = a1[13];
      uint64_t v9 = a1[14];
      uint64_t v11 = sub_2576136DC();
      unint64_t v4 = v12;
      if (*(void *)(v9 + 16))
      {
        unint64_t v13 = sub_25747588C(v11, v12);
        if (v14)
        {
          unint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * v13);
          if ((v15 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          if (v15 >= *(void *)(v10 + 16)) {
            goto LABEL_32;
          }
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = a1[17];
      uint64_t v16 = a1[18];
      uint64_t v17 = sub_2576136DC();
      unint64_t v4 = v18;
      if (*(void *)(v16 + 16))
      {
        unint64_t v19 = sub_25747588C(v17, v18);
        if (v20)
        {
          unint64_t v15 = *(void *)(*(void *)(v16 + 56) + 8 * v19);
          if ((v15 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          if (v15 >= *(void *)(v10 + 16)) {
            goto LABEL_34;
          }
LABEL_17:
          uint64_t v21 = v10 + 16 * v15;
          uint64_t v23 = *(void *)(v21 + 32);
          uint64_t v22 = *(void *)(v21 + 40);
          sub_2576A7810();
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_2576136DC();
      uint64_t v22 = v24;
LABEL_19:
      swift_retain();
      id v25 = sub_257614628();
      objc_msgSend(v25, sel_lock);

      swift_beginAccess();
      sub_257486824(v7 + 40, (uint64_t)&v63);
      if (v66 == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_25748692C((uint64_t)v57);
      }
      else
      {
        if (v66 != 2)
        {
          sub_257486880((uint64_t)&v63);
          id v31 = sub_257614628();
          objc_msgSend(v31, sel_unlock);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();

          sub_25753FD14();
          swift_allocError();
          uint64_t v33 = v32;
          unint64_t v63 = 0;
          uint64_t v64 = 0xE000000000000000;
          sub_2576A8730();
          swift_bridgeObjectRelease();
          unint64_t v63 = 0xD00000000000001FLL;
          uint64_t v64 = 0x80000002576CAA40;
          sub_2576A7B00();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          uint64_t v34 = v64;
          *(void *)uint64_t v33 = v63;
          *(void *)(v33 + 8) = v34;
          *(unsigned char *)(v33 + 84) = 5;
          swift_willThrow();
          return swift_release();
        }
        sub_257486880((uint64_t)&v63);
      }
      id v26 = sub_257614628();
      objc_msgSend(v26, sel_unlock);
      swift_release();

      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2574721C4();
        uint64_t v6 = v29;
      }
      unint64_t v27 = *(void *)(v6 + 16);
      if (v27 >= *(void *)(v6 + 24) >> 1)
      {
        sub_2574721C4();
        uint64_t v6 = v30;
      }
      *(void *)(v6 + 16) = v27 + 1;
      char v28 = (void *)(v6 + 24 * v27);
      v28[4] = v23;
      v28[5] = v22;
      v28[6] = v7;
      swift_release();
      ++v2;
      unint64_t v4 = v59;
      if (v8 == v58)
      {
        swift_bridgeObjectRelease();
        unint64_t v4 = a1[11];
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    sub_2576A7810();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x263F8EE78];
LABEL_37:
  uint64_t v36 = *(void *)(v6 + 16);
  if (v4 >> 62)
  {
    sub_2576A7810();
    uint64_t v37 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v36 == v37)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v64 = sub_2576A77E0();
    uint64_t v38 = sub_25746D748(v6);
    uint64_t v39 = swift_bridgeObjectRelease();
    unint64_t v63 = v38;
    sub_257470688(v39);
    return v63;
  }
  else
  {
    uint64_t v40 = sub_2576A7810();
    uint64_t v41 = sub_25753E060(v40);
    uint64_t v42 = swift_bridgeObjectRelease();
    unint64_t v43 = a1[11];
    MEMORY[0x270FA5388](v42);
    char v55 = a1;
    sub_2576A7810();
    sub_2575975D0((uint64_t)sub_25753FD60, (uint64_t)v54, v43);
    uint64_t v45 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_25753FD14();
    swift_allocError();
    uint64_t v47 = v46;
    unint64_t v63 = 0;
    uint64_t v64 = 0xE000000000000000;
    sub_2576A8730();
    uint64_t v48 = swift_bridgeObjectRelease();
    unint64_t v63 = 0xD00000000000001FLL;
    uint64_t v64 = 0x80000002576CAA80;
    uint64_t v61 = 8236;
    unint64_t v62 = 0xE200000000000000;
    MEMORY[0x270FA5388](v48);
    char v55 = &v61;
    sub_2576A7810();
    uint64_t v49 = sub_25753F698(0x7FFFFFFFFFFFFFFFLL, 1, sub_2574ADCC0, (uint64_t)v54, v45);
    swift_bridgeObjectRelease();
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EB8);
    MEMORY[0x25A2B83F0](v49, v50);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_2576A7B00();
    uint64_t v61 = 8236;
    unint64_t v62 = 0xE200000000000000;
    MEMORY[0x270FA5388](v51);
    char v55 = &v61;
    sub_2576A7810();
    uint64_t v52 = sub_25753F698(0x7FFFFFFFFFFFFFFFLL, 1, sub_25753FDE8, (uint64_t)v54, v41);
    swift_bridgeObjectRelease();
    MEMORY[0x25A2B83F0](v52, v50);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v53 = v64;
    *(void *)uint64_t v47 = v63;
    *(void *)(v47 + 8) = v53;
    *(unsigned char *)(v47 + 84) = 5;
    return swift_willThrow();
  }
}

uint64_t sub_25753ECEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_25753F154(a1);
  uint64_t v6 = v5;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a2, a3, ObjectType, v6);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_25753ED7C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EC8);
  swift_getKeyPath();
  swift_retain();
  uint64_t v2 = sub_2576A7810();
  uint64_t v3 = sub_25753E138(v2);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003518);
  *(void *)(swift_initStackObject() + 16) = v3;
  unint64_t v4 = *(void *)(a1 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A003520);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v3;
  *(void *)(inited + 24) = 0;
  sub_2576A7810();
  sub_2576A7810();
  swift_release();
  uint64_t result = sub_25753FC78();
  if (!result)
  {
LABEL_22:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = result;
  uint64_t v9 = v7;
  unint64_t v10 = 0;
  uint64_t v11 = (const char *)&off_26542C000;
  while (1)
  {
    if (v4 >> 62)
    {
      sub_2576A7810();
      uint64_t v12 = sub_2576A8BF0();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10 == v12)
    {
      swift_release();
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((v4 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t result = MEMORY[0x25A2B8DB0](v10, v4);
    uint64_t v13 = result;
LABEL_9:
    if (__OFADD__(v10, 1)) {
      goto LABEL_26;
    }
    swift_retain();
    id v14 = sub_257614628();
    [v14 *((SEL *)v11 + 401)];

    swift_beginAccess();
    sub_257486824(v13 + 40, (uint64_t)v21);
    if (v23)
    {
      if (v23 == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_25748692C((uint64_t)&v22);
      }
      else
      {
        sub_257486880((uint64_t)v21);
      }
      uint64_t v11 = (const char *)&off_26542C000;
      id v17 = sub_257614628();
      objc_msgSend(v17, sel_unlock);
    }
    else
    {
      sub_257486880((uint64_t)v21);
      id v15 = sub_257614628();
      objc_msgSend(v15, sel_unlock);
      swift_release();

      swift_retain();
      swift_unknownObjectRetain();
      id v16 = sub_257614628();
      [v16 v11 + 792];

      sub_257486824(v13 + 40, (uint64_t)v21);
      if (!v23)
      {
        sub_257486824(v13 + 40, (uint64_t)v19);
        sub_257614AD0(v8, v9, (uint64_t)v20);
        sub_257486880((uint64_t)v19);
        swift_beginAccess();
        sub_2574A79A8((uint64_t)v20, v13 + 40);
        swift_endAccess();
      }
      sub_257486880((uint64_t)v21);
      id v17 = sub_257614628();
      objc_msgSend(v17, sel_unlock);
      swift_unknownObjectRelease();
      uint64_t v11 = (const char *)&off_26542C000;
    }
    swift_unknownObjectRelease();
    swift_release_n();

    uint64_t result = sub_25753FC78();
    uint64_t v8 = result;
    uint64_t v9 = v18;
    ++v10;
    if (!result) {
      goto LABEL_22;
    }
  }
  if (v10 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(v4 + 8 * v10 + 32);
    uint64_t result = swift_retain();
    goto LABEL_9;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MILEspressoBackend()
{
  return self;
}

uint64_t sub_25753F13C(uint64_t a1)
{
  return sub_25753E320(a1);
}

uint64_t sub_25753F154(uint64_t a1)
{
  v8[2] = *(void *)(v1 + 16);
  v8[3] = a1;
  uint64_t v3 = sub_257531DA0((void (*)(uint64_t *__return_ptr))sub_257531F04, (uint64_t)v8);
  if (v3) {
    return v3;
  }
  type metadata accessor for EspressoV1Executor();
  sub_25747C54C(a1, (uint64_t)v9);
  sub_2574F2EC4();
  uint64_t v4 = v5;
  sub_257476C7C(a1, (uint64_t)v9);
  uint64_t v6 = swift_retain();
  sub_257558B28(v6, (uint64_t)&off_270664C78, (uint64_t)v9);
  return v4;
}

uint64_t sub_25753F21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return sub_2576A8F60() & 1;
  }
}

uint64_t sub_25753F260(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_0_4();
    goto LABEL_40;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v42 = v10 + 16;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_25753FA60(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    sub_2576A7810();
    swift_release();
LABEL_36:
    swift_release();
    return v13;
  }
  uint64_t v41 = a1;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_2576A7BD0();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_2576A7AC0();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_2576A7BF0();
      uint64_t v43 = v23;
      uint64_t v44 = v22;
      uint64_t v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257472C54();
        uint64_t v13 = v28;
      }
      unint64_t v25 = *(void *)(v13 + 16);
      if (v25 >= *(void *)(v13 + 24) >> 1)
      {
        sub_257472C54();
        uint64_t v13 = v29;
      }
      *(void *)(v13 + 16) = v25 + 1;
      id v26 = (void *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(void *)uint64_t v42 = v13;
    }
    uint64_t v27 = sub_2576A7AC0();
    unint64_t v14 = v27;
    *(void *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(void *)(v13 + 16) == v41) {
      break;
    }
    unint64_t v15 = v27;
    unint64_t v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v27;
  unint64_t v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    sub_2576A7810();
    swift_release();
    goto LABEL_36;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_2576A7BF0();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    sub_257471584();
    uint64_t v38 = *(void *)(*(void *)v42 + 16);
    sub_257471B14();
    uint64_t v13 = *(void *)v42;
    *(void *)(v13 + 16) = v38 + 1;
    uint64_t v39 = (void *)(v13 + 32 * v38);
    uint64_t v39[4] = v31;
    v39[5] = v33;
    v39[6] = v35;
    v39[7] = v37;
    *(void *)uint64_t v42 = v13;
    goto LABEL_35;
  }
LABEL_38:
  OUTLINED_FUNCTION_0_4();
LABEL_40:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25753F698(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5)
{
  if (a1 < 0) {
    goto LABEL_54;
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = MEMORY[0x263F8EE78];
  uint64_t v32 = v8 + 16;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  unint64_t v9 = *(void *)(a5 + 16);
  if (!a1 || !v9)
  {
    sub_25753FB68(*(void *)(a5 + 16), v34, a2 & 1, v8, a5);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v8 + 16);
    sub_2576A7810();
    swift_release();
LABEL_45:
    swift_release();
    return v12;
  }
  uint64_t v31 = a1;
  unint64_t v10 = 0;
  unint64_t v11 = 0;
  uint64_t v37 = a5 + 32;
  uint64_t v12 = MEMORY[0x263F8EE78];
  while (1)
  {
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    if (v10 >= *(void *)(a5 + 16)) {
      goto LABEL_48;
    }
    uint64_t v13 = (void *)(v37 + 16 * v10);
    uint64_t v14 = v13[1];
    v36[0] = *v13;
    v36[1] = v14;
    sub_2576A7810();
    char v15 = a3(v36);
    if (v5)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    char v16 = v15;
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (__OFADD__(v10++, 1)) {
        goto LABEL_49;
      }
      goto LABEL_28;
    }
    if (v11 != v10 || (a2 & 1) == 0) {
      break;
    }
    *(void *)(v34 + 16) = ++v10;
LABEL_27:
    unint64_t v11 = v10;
LABEL_28:
    if (v10 == v9) {
      goto LABEL_33;
    }
  }
  if ((uint64_t)v10 < (uint64_t)v11) {
    goto LABEL_54;
  }
  if ((v11 & 0x8000000000000000) != 0) {
    goto LABEL_50;
  }
  unint64_t v18 = *(void *)(a5 + 16);
  if (v18 < v11 || v18 < v10) {
    goto LABEL_51;
  }
  sub_2576A7810();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257472EEC();
    uint64_t v12 = v23;
  }
  unint64_t v20 = *(void *)(v12 + 16);
  if (v20 >= *(void *)(v12 + 24) >> 1)
  {
    sub_257472EEC();
    uint64_t v12 = v24;
  }
  *(void *)(v12 + 16) = v20 + 1;
  uint64_t v21 = (void *)(v12 + 32 * v20);
  uint64_t v22 = v37;
  v21[4] = a5;
  v21[5] = v22;
  v21[6] = v11;
  v21[7] = (2 * v10) | 1;
  *(void *)uint64_t v32 = v12;
  *(void *)(v34 + 16) = ++v10;
  if (*(void *)(v12 + 16) != v31) {
    goto LABEL_27;
  }
  unint64_t v11 = v10;
LABEL_33:
  if (v11 == v9 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    sub_2576A7810();
    swift_release();
    goto LABEL_45;
  }
  if ((uint64_t)v9 < (uint64_t)v11) {
    goto LABEL_54;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v25 = *(void *)(a5 + 16);
  if (v25 >= v11 && v25 >= v9)
  {
    sub_257471620();
    uint64_t v27 = *(void *)(*(void *)v32 + 16);
    sub_257471B98();
    uint64_t v12 = *(void *)v32;
    *(void *)(v12 + 16) = v27 + 1;
    uint64_t v28 = (void *)(v12 + 32 * v27);
    uint64_t v29 = v37;
    v28[4] = a5;
    v28[5] = v29;
    v28[6] = v11;
    v28[7] = (2 * v9) | 1;
    *(void *)uint64_t v32 = v12;
    goto LABEL_44;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25753FA60(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_2576A7BF0();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_257471584();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_257471B14();
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    char v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    unsigned char v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25753FB68(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(void *)(a2 + 16);
  int v6 = (v5 == a1) & a3;
  if (v6 == 1) {
    return v6 ^ 1u;
  }
  if ((uint64_t)v5 <= a1)
  {
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v8 = *(void *)(a5 + 16);
      if (v8 >= v5 && (uint64_t)v8 >= a1)
      {
        uint64_t v10 = (uint64_t *)(a4 + 16);
        uint64_t v11 = (2 * a1) | 1;
        sub_2576A7810();
        sub_257471620();
        uint64_t v12 = *(void *)(*v10 + 16);
        sub_257471B98();
        uint64_t v13 = *v10;
        *(void *)(v13 + 16) = v12 + 1;
        uint64_t v14 = (void *)(v13 + 32 * v12);
        v14[4] = a5;
        v14[5] = a5 + 32;
        void v14[6] = v5;
        v14[7] = v11;
        *uint64_t v10 = v13;
        return v6 ^ 1u;
      }
    }
    __break(1u);
  }
  uint64_t result = sub_2576A8B50();
  __break(1u);
  return result;
}

uint64_t sub_25753FC78()
{
  unint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(*(void *)(v0 + 16) + 16);
  if (v1 == v2) {
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 24) = v1 + 1;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_25753FCD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  unint64_t v4 = *(void *)(v3 + 16);
  if (v2 == v4)
  {
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 8) = 0;
  }
  else if (v2 >= v4)
  {
    __break(1u);
  }
  else
  {
    uint64_t v5 = v3 + 16 * v2;
    uint64_t v6 = *(void *)(v5 + 32);
    LOBYTE(v5) = *(unsigned char *)(v5 + 40);
    *(void *)a1 = v6;
    *(unsigned char *)(a1 + 8) = v5;
    *(void *)(v1 + 24) = v2 + 1;
    return sub_2576A7810();
  }
  return result;
}

unint64_t sub_25753FD14()
{
  unint64_t result = qword_26A003510;
  if (!qword_26A003510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003510);
  }
  return result;
}

uint64_t sub_25753FD60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2575F29B0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_25753FDA0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25753FDD8()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25753FDE8(uint64_t *a1)
{
  return sub_2574ADCC0(a1) & 1;
}

uint64_t sub_25753FE08(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v21[-v9];
  uint64_t v11 = sub_257479E14();
  sub_257582858(0, (v11 & 0xC000000000000001) == 0, v11);
  if ((v11 & 0xC000000000000001) != 0) {
    MEMORY[0x25A2B8DB0](0, v11);
  }
  else {
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_2575CA350();
  swift_release();
  if (!sub_2574BAF20(v12, a1))
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_2576AD000;
    *(unsigned char *)(v20 + 16) = 2;
    swift_willThrow();
    return (uint64_t)v10;
  }
  type metadata accessor for NativeTensorStorage();
  uint64_t result = sub_257479E80();
  if (*(void *)(result + 16))
  {
    uint64_t v14 = *(void *)(result + 32);
    sub_2576A7810();
    swift_bridgeObjectRelease();
    uint64_t v23 = v14;
    uint64_t result = sub_257479E80();
    if (*(void *)(result + 16))
    {
      char v15 = *(unsigned char *)(result + 40);
      swift_bridgeObjectRelease();
      char v22 = v15;
      sub_25754DDC0(&v23, (uint64_t)&v22, 0);
      uint64_t v17 = v16;
      uint64_t v23 = *(void *)(*(void *)(v3 + 40) + 152);
      sub_2576A7810();
      sub_25758A634(&v23, 0, 0, (uint64_t)v10);
      uint64_t v18 = sub_2576A6DD0();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v18);
      uint64_t v23 = *(void *)(v17 + 16);
      sub_2576A7810();
      sub_25758A634(&v23, 0, 0, (uint64_t)v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v18);
      uint64_t ObjectType = swift_getObjectType();
      MEMORY[0x270FA5388](ObjectType);
      *(void *)&v21[-48] = v17;
      *(void *)&v21[-40] = &off_270667760;
      *(void *)&v21[-32] = v7;
      *(void *)&v21[-24] = sub_257540174;
      *(void *)&v21[-16] = 0;
      sub_257648508((uint64_t)sub_257480BA4, (uint64_t)&v21[-64], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
      if (v2)
      {
        swift_release();
        swift_unknownObjectRelease();
        sub_257480BC8((uint64_t)v7);
        sub_257480BC8((uint64_t)v10);
      }
      else
      {
        sub_257480BC8((uint64_t)v7);
        sub_257480BC8((uint64_t)v10);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
        uint64_t v10 = (unsigned char *)swift_allocObject();
        *((_OWORD *)v10 + 1) = xmmword_2576ABB10;
        *((void *)v10 + 4) = v17;
        *((void *)v10 + 5) = &off_270667760;
        swift_unknownObjectRelease();
      }
      return (uint64_t)v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_257540174()
{
  return sub_2576A6D50();
}

uint64_t sub_25754019C(uint64_t a1)
{
  return sub_25753FE08(a1);
}

unint64_t sub_2575401B4(uint64_t a1)
{
  unint64_t result = sub_2575401DC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2575401DC()
{
  unint64_t result = qword_26A001218;
  if (!qword_26A001218)
  {
    type metadata accessor for TileOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001218);
  }
  return result;
}

uint64_t sub_257540230(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    unint64_t v4 = (void **)(a1 + 48);
    do
    {
      uint64_t v5 = *v4;
      v4 += 3;
      id v6 = v5;
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void sub_2575402E0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v19 = MEMORY[0x263F8EE78];
      sub_2574E7254();
      if (v4 < 0) {
        break;
      }
      unint64_t v5 = a1 & 0xC000000000000001;
      uint64_t v6 = a2 + 40;
      swift_beginAccess();
      uint64_t v7 = 0;
      while (v7 != v4)
      {
        if (v5) {
          id v8 = (id)MEMORY[0x25A2B8DB0](v7, a1);
        }
        else {
          id v8 = *(id *)(a1 + 32 + 8 * v7);
        }
        uint64_t v9 = v8;
        uint64_t v10 = *(void *)(*(void *)v6 + 16);
        if (!v10)
        {
LABEL_18:
          sub_257547A80();
          swift_allocError();
          *uint64_t v16 = 1;
          swift_willThrow();
          swift_release();
          swift_release();

          return;
        }
        ++v7;
        uint64_t v11 = (id *)(*(void *)v6 + 48);
        while (*v11 != v8)
        {
          v11 += 3;
          if (!--v10) {
            goto LABEL_18;
          }
        }
        uint64_t v17 = v6;
        unint64_t v18 = v5;
        uint64_t v12 = (uint64_t)*(v11 - 2);
        uint64_t v13 = (uint64_t)*(v11 - 1);
        sub_2576A7810();
        unint64_t v14 = *(void *)(v19 + 16);
        if (v14 >= *(void *)(v19 + 24) >> 1) {
          sub_2574E7254();
        }
        *(void *)(v19 + 16) = v14 + 1;
        char v15 = (void *)(v19 + 24 * v14);
        v15[4] = v12;
        void v15[5] = v13;
        v15[6] = v9;
        unint64_t v5 = v18;
        uint64_t v6 = v17;
        if (v7 == v4) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      sub_2576A7810();
      uint64_t v4 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_release();
  }
}

uint64_t sub_257540508(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    sub_2574E7174();
    uint64_t v3 = v10;
    uint64_t v4 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      unint64_t v5 = *(void *)(v10 + 16);
      if (v5 >= *(void *)(v10 + 24) >> 1) {
        sub_2574E7174();
      }
      v4 += 32;
      *(void *)(v10 + 16) = v5 + 1;
      uint64_t v6 = v10 + 16 * v5;
      *(void *)(v6 + 32) = v8;
      *(unsigned char *)(v6 + 40) = v9;
      --v1;
    }
    while (v1);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_257540660(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_2576A89F0();
  unint64_t v24 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_44;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t v5 = v4 >= v3 ? v3 : v4;
    uint64_t v27 = MEMORY[0x263F8EE78];
    sub_2574E7294();
    sub_2576A7810();
    swift_retain();
    sub_2576A89E0();
    swift_release();
    if ((v5 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v23 = a2;
    if (!v5)
    {
LABEL_23:
      sub_2576A8C80();
      uint64_t v12 = v26;
      if (v26)
      {
        uint64_t v13 = v25;
        uint64_t v22 = a2 & 0xFFFFFFFFFFFFFF8;
        unint64_t v20 = a2 & 0xC000000000000001;
        while (1)
        {
          if (v24)
          {
            sub_2576A7810();
            uint64_t v3 = sub_2576A8BF0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v3 = *(void *)(v22 + 16);
          }
          if (v5 == v3) {
            break;
          }
          if (v20)
          {
            uint64_t v14 = MEMORY[0x25A2B8DB0](v5, a2);
          }
          else
          {
            if (v5 >= *(void *)(v22 + 16)) {
              goto LABEL_42;
            }
            uint64_t v14 = *(void *)(a2 + 8 * v5 + 32);
            swift_retain();
          }
          if (__OFADD__(v5, 1)) {
            goto LABEL_43;
          }
          uint64_t v15 = *(void *)(v14 + 152);
          char v16 = *(unsigned char *)(v14 + 160);
          sub_2576A7810();
          swift_release();
          unint64_t v17 = *(void *)(v27 + 16);
          if (v17 >= *(void *)(v27 + 24) >> 1) {
            sub_2574E7294();
          }
          *(void *)(v27 + 16) = v17 + 1;
          uint64_t v18 = v27 + 32 * v17;
          *(void *)(v18 + 32) = v13;
          *(void *)(v18 + 40) = v12;
          *(void *)(v18 + 48) = v15;
          *(unsigned char *)(v18 + 56) = v16;
          sub_2576A8C80();
          uint64_t v13 = v25;
          uint64_t v12 = v26;
          ++v5;
          a2 = v23;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      return v27;
    }
    unint64_t v6 = 0;
    uint64_t v21 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v19 = a2 & 0xC000000000000001;
    while (v5 != v6)
    {
      uint64_t result = sub_2576A8C80();
      if (!v26) {
        goto LABEL_47;
      }
      if (v24)
      {
        sub_2576A7810();
        uint64_t v3 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v3 = *(void *)(v21 + 16);
      }
      if (v6 == v3) {
        goto LABEL_46;
      }
      if (v19)
      {
        uint64_t v8 = MEMORY[0x25A2B8DB0](v6, a2);
      }
      else
      {
        if (v6 >= *(void *)(v21 + 16)) {
          goto LABEL_41;
        }
        uint64_t v8 = *(void *)(a2 + 8 * v6 + 32);
        swift_retain();
      }
      uint64_t v3 = *(void *)(v8 + 152);
      char v9 = *(unsigned char *)(v8 + 160);
      sub_2576A7810();
      swift_release();
      unint64_t v10 = *(void *)(v27 + 16);
      if (v10 >= *(void *)(v27 + 24) >> 1) {
        sub_2574E7294();
      }
      ++v6;
      *(void *)(v27 + 16) = v10 + 1;
      uint64_t v11 = v27 + 32 * v10;
      *(void *)(v11 + 32) = v25;
      *(void *)(v11 + 40) = v26;
      *(void *)(v11 + 48) = v3;
      *(unsigned char *)(v11 + 56) = v9;
      a2 = v23;
      if (v5 == v6) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    sub_2576A7810();
    uint64_t v4 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_46:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_257540A04(unint64_t a1, uint64_t a2)
{
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v4; uint64_t v4 = sub_2576A8BF0())
  {
    uint64_t v5 = a2 + 32;
    a2 = 4;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](a2 - 4, a1);
      }
      else {
        swift_retain();
      }
      uint64_t v6 = a2 - 3;
      if (__OFADD__(a2 - 4, 1)) {
        break;
      }
      uint64_t v7 = v4;
      uint64_t v8 = sub_2576136DC();
      uint64_t v10 = v9;
      swift_beginAccess();
      uint64_t v11 = *(void *)v5;
      if (*(void *)(*(void *)v5 + 16) && (unint64_t v12 = sub_25747588C(v8, v10), (v13 & 1) != 0))
      {
        uint64_t v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        id v15 = v14;
        swift_release();
        uint64_t v16 = swift_bridgeObjectRelease();
        MEMORY[0x25A2B83B0](v16);
        if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_2576A7E70();
        }
        sub_2576A7ED0();
        sub_2576A7E20();
      }
      else
      {
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = v7;
      ++a2;
      if (v6 == v7)
      {
        swift_bridgeObjectRelease();
        uint64_t v17 = v19;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    sub_2576A7810();
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8EE78];
LABEL_19:
  swift_release();
  return v17;
}

uint64_t sub_257540C0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (void **)(sub_2576A7810() + 48);
  uint64_t v3 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = (uint64_t)*(v2 - 2);
    uint64_t v4 = (uint64_t)*(v2 - 1);
    uint64_t v6 = *v2;
    swift_bridgeObjectRetain_n();
    id v7 = v6;
    char v8 = sub_2575E8610((uint64_t)&v14, v5, v4);
    swift_bridgeObjectRelease();

    if (v8)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257471F40();
        uint64_t v3 = v11;
      }
      unint64_t v9 = *(void *)(v3 + 16);
      if (v9 >= *(void *)(v3 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v9 + 1;
      uint64_t v10 = v3 + 16 * v9;
      *(void *)(v10 + 32) = v5;
      *(void *)(v10 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 3;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_257540D54(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = sub_2576A7810() + 48;
  uint64_t v3 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *(void *)(v2 - 16);
    uint64_t v4 = *(void *)(v2 - 8);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char v6 = sub_2575E8610((uint64_t)v12, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257471F40();
        uint64_t v3 = v9;
      }
      unint64_t v7 = *(void *)(v3 + 16);
      if (v7 >= *(void *)(v3 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v7 + 1;
      uint64_t v8 = v3 + 16 * v7;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_257540EB0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = sub_2576A7810() + 56;
  uint64_t v3 = MEMORY[0x263F8EE78];
  do
  {
    uint64_t v5 = *(void *)(v2 - 24);
    uint64_t v4 = *(void *)(v2 - 16);
    swift_bridgeObjectRetain_n();
    sub_2576A7810();
    char v6 = sub_2575E8610((uint64_t)&v12, v5, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_257471F40();
        uint64_t v3 = v9;
      }
      unint64_t v7 = *(void *)(v3 + 16);
      if (v7 >= *(void *)(v3 + 24) >> 1)
      {
        sub_257471F40();
        uint64_t v3 = v10;
      }
      *(void *)(v3 + 16) = v7 + 1;
      uint64_t v8 = v3 + 16 * v7;
      *(void *)(v8 + 32) = v5;
      *(void *)(v8 + 40) = v4;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v2 += 32;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_257540FFC(uint64_t a1, uint64_t a2)
{
  return sub_25754102C(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_257540D54);
}

uint64_t sub_257541014(uint64_t a1, uint64_t a2)
{
  return sub_25754102C(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_257540EB0);
}

uint64_t sub_25754102C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *))
{
  uint64_t v8 = MEMORY[0x263F8EE88];
  uint64_t v4 = sub_2576A7810();
  uint64_t v5 = a3(v4, &v8);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A003550);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_2575410B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    uint64_t v9 = (unsigned char *)(a3 + 56);
    while (1)
    {
      unint64_t v10 = *((void *)v9 - 1);
      char v4 = *v9;
      BOOL v11 = *((void *)v9 - 3) == a1 && *((void *)v9 - 2) == a2;
      if (v11 || (sub_2576A8F60() & 1) != 0) {
        break;
      }
      v9 += 32;
      if (!--v7) {
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_2576A7810();
    sub_2576A8730();
    unint64_t v10 = 0xD000000000000012;
    sub_2576A7B00();
    sub_2576A8A30();
    a4 = v13;
    sub_2576A7B00();
    sub_2576A8B60();
    __break(1u);
  }
  *a4 = v10;
  *((unsigned char *)a4 + 8) = v4;
  return sub_2576A7810();
}

unint64_t sub_257541228(char a1)
{
  unint64_t result = 0xD000000000000016;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696D207475706E49;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x6D2074757074754FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2575412D8()
{
  return sub_25748C614();
}

unint64_t sub_2575412E0()
{
  return sub_257541228(*v0);
}

uint64_t sub_2575412E8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v34 = *(void *)v2;
  uint64_t v5 = sub_2576A8340();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  uint64_t v6 = sub_2576A8360();
  OUTLINED_FUNCTION_0_8();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_2576A76D0();
  MEMORY[0x270FA5388](v13 - 8);
  OUTLINED_FUNCTION_8_0();
  sub_2574A4924(0, (unint64_t *)&qword_26A002008);
  sub_2576A76B0();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v12, *MEMORY[0x263F8F138], v6);
  sub_2574F92F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A002438);
  sub_2575458A0();
  sub_2576A8660();
  uint64_t v14 = (uint64_t)a1;
  *(void *)(v2 + 96) = sub_2576A8390();
  *(void *)(v2 + 16) = a2;
  swift_unownedRetain();
  sub_25754168C(a1, a2, &v40);
  if (v36)
  {
    sub_25747F1AC((uint64_t)a1);
    swift_release();
    swift_unownedRelease();

    swift_deallocPartialClassInstance();
  }
  else
  {
    long long v15 = v40;
    uint64_t v49 = *((void *)&v40 + 1);
    uint64_t v16 = v41;
    uint64_t v17 = v42;
    uint64_t v48 = v41;
    *(_OWORD *)(v3 + 24) = v40;
    uint64_t v18 = v43;
    *(void *)(v3 + 40) = v16;
    *(void *)(v3 + 48) = v17;
    *(void *)(v3 + 56) = v18;
    id v19 = (id)v15;
    sub_257518AC0((uint64_t)&v49);
    sub_257518AC0((uint64_t)&v48);
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v20 = sub_25754102C(v17, v18, (uint64_t (*)(uint64_t, uint64_t *))sub_257540C0C);
    unint64_t v21 = a1[19];
    sub_2576A7810();
    uint64_t v22 = sub_257540660(v20, v21);
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v39 = sub_2576A77E0();
    uint64_t v23 = sub_25746D92C(v22);
    uint64_t v24 = swift_bridgeObjectRelease();
    sub_257470930(v24, v25, v26, v27, v28, v29, v30, v31, v34, (uint64_t)a1, 0, v37, v23, v39);
    sub_25747F1AC(v14);
    swift_release();
    *(_OWORD *)(v3 + 64) = v38;
    uint64_t v32 = v45;
    uint64_t v46 = v45;
    uint64_t v47 = v44;
    *(void *)(v3 + 80) = v44;
    *(void *)(v3 + 88) = v32;
    sub_257518AC0((uint64_t)&v47);
    sub_257518AC0((uint64_t)&v46);
    sub_2575458F4((void **)&v40);
  }
  return v3;
}

double sub_25754168C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v76 = a1;
  uint64_t v64 = a3;
  uint64_t v71 = sub_2576A75E0();
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v71);
  unint64_t v63 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  char v66 = (char *)&v61 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v68 = (char *)&v61 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v62 = (char *)&v61 - v9;
  uint64_t v80 = sub_2576A75A0();
  uint64_t v10 = *(void *)(v80 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v80);
  uint64_t v67 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unint64_t v69 = (char *)&v61 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v72 = (char *)&v61 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)&v61 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v61 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v61 - v22;
  if (qword_26A000900 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_2576A75D0();
  __swift_project_value_buffer(v24, (uint64_t)qword_26A001FE8);
  sub_2576A7590();
  uint64_t v25 = sub_2576A75C0();
  os_signpost_type_t v26 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    uint64_t v27 = v10;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    os_signpost_id_t v29 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v25, v26, v29, "Build MPSGraph", "", v28, 2u);
    uint64_t v30 = v28;
    uint64_t v10 = v27;
    MEMORY[0x25A2BAC80](v30, -1, -1);
  }

  uint64_t v31 = v80;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v21, v23, v80);
  sub_2576A7610();
  swift_allocObject();
  sub_2576A7600();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
  v32(v23, v31);
  type metadata accessor for MPSGraphExecutor.MPSGraphExecutorComponentsBuilder();
  swift_initStackObject();
  uint64_t v33 = swift_retain();
  uint64_t v34 = sub_257545760(v33);
  uint64_t v35 = v76;
  sub_2575434CC(v76, v34);
  uint64_t v36 = v75;
  sub_257543CFC(v35, (uint64_t)v34);
  unint64_t v73 = v32;
  if (v36)
  {
    swift_release();
    uint64_t v37 = sub_2576A75C0();
    long long v38 = v72;
    sub_2576A75F0();
    os_signpost_type_t v39 = sub_2576A83B0();
    if (sub_2576A8480())
    {
      swift_retain();
      long long v40 = v68;
      sub_2576A7620();
      swift_release();
      uint64_t v41 = v70;
      uint64_t v42 = v71;
      if ((*(unsigned int (**)(char *, uint64_t))(v70 + 88))(v40, v71) == *MEMORY[0x263F90238])
      {
        uint64_t v43 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
        uint64_t v43 = "";
      }
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      os_signpost_id_t v45 = sub_2576A7580();
      _os_signpost_emit_with_name_impl(&dword_257455000, v37, v39, v45, "Build MPSGraph", v43, v44, 2u);
      uint64_t v31 = v80;
      MEMORY[0x25A2BAC80](v44, -1, -1);
    }

    v73(v38, v31);
    swift_release();
  }
  else
  {
    sub_257544834(v35, v34);
    sub_257545054((uint64_t)v77);
    swift_release();
    uint64_t v46 = sub_2576A75C0();
    uint64_t v47 = v65;
    sub_2576A75F0();
    os_signpost_type_t v48 = sub_2576A83B0();
    char v49 = sub_2576A8480();
    if (v49)
    {
      swift_retain();
      uint64_t v50 = v62;
      sub_2576A7620();
      swift_release();
      uint64_t v51 = v70;
      uint64_t v52 = v71;
      if ((*(unsigned int (**)(char *, uint64_t))(v70 + 88))(v50, v71) == *MEMORY[0x263F90238])
      {
        uint64_t v53 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
        uint64_t v53 = "";
      }
      char v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v55 = 0;
      uint64_t v56 = v65;
      os_signpost_id_t v57 = sub_2576A7580();
      _os_signpost_emit_with_name_impl(&dword_257455000, v46, v48, v57, "Build MPSGraph", v53, v55, 2u);
      uint64_t v58 = v55;
      uint64_t v47 = v56;
      MEMORY[0x25A2BAC80](v58, -1, -1);
      uint64_t v32 = v73;
    }

    v32(v47, v31);
    swift_release();
    long long v59 = v77[1];
    unint64_t v60 = v64;
    *uint64_t v64 = v77[0];
    v60[1] = v59;
    double result = *(double *)&v78;
    v60[2] = v78;
    *((void *)v60 + 6) = v79;
  }
  return result;
}

uint64_t sub_257541FC4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0026C8);
  uint64_t result = sub_2576A8370();
  if (!v0) {
    return v2;
  }
  return result;
}

void sub_257542044(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v110 = a3;
  unint64_t v93 = a2;
  uint64_t v94 = a4;
  uint64_t v5 = (void **)sub_2576A75D0();
  uint64_t v99 = (uint64_t)*(v5 - 1);
  MEMORY[0x270FA5388](v5);
  unint64_t v104 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_2576A75E0();
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  v102 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v95 = (char *)&v90 - v9;
  unint64_t v10 = sub_2576A75A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unint64_t v106 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v90 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v103 = (char *)&v90 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v90 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v90 - v22;
  uint64_t v112 = a1;
  swift_unownedRetainStrong();
  uint64_t v97 = sub_25755985C();
  swift_release();
  if (qword_26A000900 != -1) {
LABEL_42:
  }
    swift_once();
  char v98 = v15;
  uint64_t v105 = v5;
  uint64_t v24 = __swift_project_value_buffer((uint64_t)v5, (uint64_t)qword_26A001FE8);
  sub_2576A7590();
  uint64_t v107 = v24;
  uint64_t v25 = sub_2576A75C0();
  os_signpost_type_t v26 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    unint64_t v27 = v10;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    os_signpost_id_t v29 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v25, v26, v29, "Prepare MPSGraph Inputs", "", v28, 2u);
    uint64_t v30 = v28;
    unint64_t v10 = v27;
    MEMORY[0x25A2BAC80](v30, -1, -1);
  }

  (*(void (**)(char *, char *, unint64_t))(v11 + 16))(v20, v23, v10);
  sub_2576A7610();
  swift_allocObject();
  uint64_t v31 = sub_2576A7600();
  uint64_t v32 = *(void (**)(char *, unint64_t))(v11 + 8);
  unint64_t v109 = v10;
  v32(v23, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0035A0);
  uint64_t v33 = MEMORY[0x263F8EE78];
  *(void *)&long long v114 = sub_2576A77E0();
  uint64_t v117 = (char *)v33;
  uint64_t v116 = v33;
  uint64_t v34 = *(void **)(v112 + 32);
  unint64_t v10 = v34[2];
  uint64_t v111 = v11 + 8;
  uint64_t v108 = v32;
  if (!v10)
  {
    uint64_t v52 = (uint64_t)v104;
LABEL_20:
    uint64_t v53 = v107;
    uint64_t v54 = v103;
    swift_beginAccess();
    sub_2576A7810();
    sub_257694CC4();
    uint64_t v110 = v55;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v106 = v117;
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_2576A75C0();
    sub_2576A75F0();
    os_signpost_type_t v57 = sub_2576A83B0();
    if (sub_2576A8480())
    {
      swift_retain();
      uint64_t v58 = v95;
      sub_2576A7620();
      swift_release();
      uint64_t v59 = v100;
      uint64_t v60 = v101;
      if ((*(unsigned int (**)(char *, uint64_t))(v100 + 88))(v58, v101) == *MEMORY[0x263F90238])
      {
        uint64_t v61 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v60);
        uint64_t v61 = "";
      }
      unint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v63 = 0;
      uint64_t v54 = v103;
      os_signpost_id_t v64 = sub_2576A7580();
      _os_signpost_emit_with_name_impl(&dword_257455000, v56, v57, v64, "Prepare MPSGraph Inputs", v61, v63, 2u);
      MEMORY[0x25A2BAC80](v63, -1, -1);
      uint64_t v52 = (uint64_t)v104;
      uint64_t v53 = v107;
    }

    v108(v54, v109);
    swift_release();
    uint64_t v65 = v99 + 16;
    (*(void (**)(uint64_t, uint64_t, void **))(v99 + 16))(v52, v53, v105);
    uint64_t v66 = v112;
    swift_retain();
    sub_2576A7810();
    uint64_t v67 = v110;
    swift_retain();
    uint64_t v68 = (uint64_t)v106;
    sub_2576A7810();
    uint64_t v69 = (uint64_t)v98;
    sub_2576A7590();
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v70 = 0;
    uint64_t v71 = v113;
    uint64_t v112 = sub_257545B5C(v70, 2u, v52, v69, "Run MPSGraph", "", v66, v33, v67, v68, v97);
    uint64_t v113 = v71;
    uint64_t v72 = v52;
    unint64_t v73 = v109;
    uint64_t v74 = (void (**)(uint64_t, void **))(v65 - 8);
    if (v71)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v108((char *)v69, v73);
      (*v74)(v72, v105);
    }
    else
    {
      MEMORY[0x25A2BAC80](v70, -1, -1);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v108((char *)v69, v73);
      (*v74)(v72, v105);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
      *((void *)&v114 + 1) = sub_2576A77E0();
      uint64_t v75 = sub_25746E1AC(v112);
      uint64_t v76 = swift_bridgeObjectRelease();
      *(void *)&long long v114 = v75;
      sub_257470CD0(v76);
      *uint64_t v94 = v114;
    }
    return;
  }
  uint64_t v96 = v31;
  uint64_t v11 = *(void *)(v112 + 40);
  uint64_t v15 = (char *)v34[5];
  uint64_t v35 = (void *)v34[6];
  uint64_t v36 = v110;
  if (!*(void *)(v110 + 16))
  {
    sub_2576A7810();
    sub_2576A7810();
    unint64_t v62 = v109;
LABEL_24:
    uint64_t v20 = v35;
    sub_2576A7810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v23 = (char *)v34[4];
  swift_bridgeObjectRetain_n();
  id v37 = v35;
  sub_2576A7810();
  sub_2576A7810();
  uint64_t v20 = (char *)v37;
  unint64_t v38 = sub_25747588C((uint64_t)v23, (uint64_t)v15);
  if ((v39 & 1) == 0 || (v90 = v11, uint64_t v40 = *(void *)(*(void *)(v36 + 56) + 8 * v38), !*(void *)(v40 + 16)))
  {
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v62 = v109;
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_257547A80();
    swift_allocError();
    *uint64_t v77 = 1;
    swift_willThrow();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    long long v78 = sub_2576A75C0();
    uint64_t v79 = v106;
    sub_2576A75F0();
    os_signpost_type_t v80 = sub_2576A83B0();
    char v81 = sub_2576A8480();
    uint64_t v82 = v102;
    if (v81)
    {
      swift_retain();
      sub_2576A7620();
      swift_release();
      uint64_t v83 = v100;
      uint64_t v84 = v101;
      if ((*(unsigned int (**)(char *, uint64_t))(v100 + 88))(v82, v101) == *MEMORY[0x263F90238])
      {
        uint64_t v85 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v83 + 8))(v82, v84);
        uint64_t v85 = "";
      }
      uint64_t v86 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v86 = 0;
      uint64_t v87 = v106;
      os_signpost_id_t v88 = sub_2576A7580();
      _os_signpost_emit_with_name_impl(&dword_257455000, v78, v80, v88, "Prepare MPSGraph Inputs", v85, v86, 2u);
      uint64_t v79 = v87;
      MEMORY[0x25A2BAC80](v86, -1, -1);
    }

    v108(v79, v62);
    swift_release();
    return;
  }
  unint64_t v41 = 0;
  unint64_t v92 = v93 + 32;
  unint64_t v93 = *(void *)(v93 + 16);
  uint64_t v5 = (void **)(v34 + 9);
  unint64_t v91 = v10 - 1;
  while (1)
  {
    unint64_t v42 = *(void *)(v40 + 32);
    if (v42 >= v93)
    {
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v43 = *(void *)(v92 + 24 * v42 + 16);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_retain();
    id v44 = sub_257614628();
    objc_msgSend(v44, sel_lock, v90);

    uint64_t v45 = v113;
    sub_25761594C(v43, 0, 0, (uint64_t)v115);
    uint64_t v113 = v45;
    if (v45) {
      break;
    }
    id v46 = sub_257614628();
    objc_msgSend(v46, sel_unlock);
    swift_release();

    uint64_t v47 = (void *)sub_257542E4C(v115[0], (uint64_t)v115[1], v20, v112, (uint64_t *)&v114, (uint64_t)&v117);
    swift_unknownObjectRelease();
    id v48 = v47;
    MEMORY[0x25A2B83B0]();
    unint64_t v10 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10 >= *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_2576A7E70();
    }
    sub_2576A7ED0();
    sub_2576A7E20();
    swift_release();

    swift_bridgeObjectRelease();
    if (v91 == v41)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v116;
      uint64_t v52 = (uint64_t)v104;
      goto LABEL_20;
    }
    ++v41;
    uint64_t v11 = v111;
    if (v41 >= v34[2])
    {
      __break(1u);
      break;
    }
    uint64_t v15 = (char *)*(v5 - 1);
    uint64_t v35 = *v5;
    uint64_t v49 = v110;
    if (!*(void *)(v110 + 16))
    {
      unint64_t v62 = v109;
      goto LABEL_24;
    }
    uint64_t v23 = (char *)*(v5 - 2);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = v35;
    unint64_t v50 = sub_25747588C((uint64_t)v23, (uint64_t)v15);
    if (v51)
    {
      v5 += 3;
      uint64_t v40 = *(void *)(*(void *)(v49 + 56) + 8 * v50);
      if (*(void *)(v40 + 16)) {
        continue;
      }
    }
    goto LABEL_31;
  }
  id v89 = sub_257614628();
  objc_msgSend(v89, sel_unlock);
  swift_release();

  __break(1u);
}

uint64_t sub_257542D04(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_257542D64()
{
  swift_unownedRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_257542DDC()
{
  sub_257542D64();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphExecutor()
{
  return self;
}

uint64_t sub_257542E34()
{
  return sub_257541FC4();
}

uint64_t sub_257542E4C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  void (*v26)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void v45[9];
  uint64_t v46;
  uint64_t v47[4];

  if (object_getClass(a1) != (Class)_TtC14NeuralNetworks21MPSGraphTensorStorage || a1 == 0) {
    goto LABEL_11;
  }
  swift_unknownObjectRetain();
  uint64_t v13 = sub_2575C6344();
  if (!v13)
  {
    swift_unknownObjectRelease();
LABEL_11:
    uint64_t ObjectType = swift_getObjectType();
    MEMORY[0x270FA5388](ObjectType);
    v45[2] = a4;
    v45[3] = a3;
    v45[4] = a1;
    v45[5] = a2;
    v45[6] = a6;
    os_signpost_type_t v26 = *(void (**)(uint64_t *__return_ptr, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>), void *, uint64_t, uint64_t, uint64_t))(a2 + 64);
    unint64_t v27 = sub_2574A4924(0, &qword_26A0035B8);
    v26(v47, sub_257547B3C, v45, v27, ObjectType, a2);
    return v47[0];
  }
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(a4 + 16);
  swift_unownedRetainStrong();
  uint64_t v16 = sub_2575C63D0();
  uint64_t v19 = v16;
  unint64_t v20 = v17;
  unint64_t v21 = v18;
  if (v18 >> 62)
  {
    sub_257547B60(v16, v17, v18);
    swift_release();
  }
  else
  {
    id v46 = v14;
    uint64_t v22 = *(void **)(v15 + 16);
    swift_retain();
    id v23 = objc_msgSend(v22, sel_registryID);
    if (v23 != objc_msgSend(*(id *)(v21 + 16), sel_registryID))
    {
      swift_retain();
      id v24 = sub_2575598D0();
      goto LABEL_14;
    }
    if (v15 != v21)
    {
      swift_retain();
      id v24 = sub_257559930();
LABEL_14:
      os_signpost_id_t v29 = (uint64_t)v24;
      sub_257547B60(v19, v20, v21);
      swift_release();
      swift_release_n();
      swift_beginAccess();
      if (sub_2574BAF20(v29, *a5))
      {
        uint64_t v31 = v30;
        swift_endAccess();
        swift_unknownObjectRelease();
        if (v31 > v20) {
          unint64_t v20 = v31;
        }
      }
      else
      {
        swift_endAccess();
      }
      uint64_t v14 = v46;
      swift_beginAccess();
      uint64_t v32 = swift_unknownObjectRetain();
      sub_2575CE04C(v32, v20, v29, v33, v34, v35, v36, v37, v45[8], v46);
      swift_endAccess();
      swift_unknownObjectRelease();
      goto LABEL_20;
    }
    swift_release();
    sub_257547B60(v19, v20, v21);
    swift_release();
    uint64_t v14 = v46;
  }
LABEL_20:
  unint64_t v38 = sub_2575479AC(a3, (SEL *)&selRef_shape, (unint64_t *)&qword_26A001870);
  if (v38)
  {
    char v39 = v38;
  }
  else
  {
    uint64_t v40 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v47, v40, a2);
    char v39 = sub_25746D770(v47[0]);
    swift_bridgeObjectRelease();
  }
  unint64_t v41 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v47, v41, a2);
  unint64_t v42 = sub_25764701C();
  uint64_t v43 = objc_allocWithZone(MEMORY[0x263F13460]);
  uint64_t v28 = sub_257545970(v14, v39, v42);
  swift_unknownObjectRelease();
  return (uint64_t)v28;
}

uint64_t sub_2575431D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X6>, void *a7@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v34 = a7;
  uint64_t v12 = sub_2576A7110();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  id v31 = sub_2575597E0();
  uint64_t result = swift_release();
  if (a1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F06F00], v12);
    uint64_t v17 = MEMORY[0x25A2B7710](a1, a2 - a1, v15);
    unint64_t v19 = v18;
    uint64_t v20 = sub_2575479AC(v32, (SEL *)&selRef_shape, (unint64_t *)&qword_26A001870);
    if (v20)
    {
      uint64_t v21 = v20;
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(v33, ObjectType, a5);
      uint64_t v21 = sub_25746D770(v33[0]);
      swift_bridgeObjectRelease();
    }
    id v23 = v31;
    uint64_t v24 = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 8))(v33, v24, a5);
    uint64_t v25 = sub_25764701C();
    id v26 = objc_allocWithZone(MEMORY[0x263F13460]);
    id v27 = sub_257545A08(v23, v17, v19, v21, v25);
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_2574714FC();
    uint64_t v28 = *(void *)(*a6 + 16);
    sub_257471A98();
    uint64_t v29 = *a6;
    *(void *)(v29 + 16) = v28 + 1;
    uint64_t v30 = v29 + 16 * v28;
    *(void *)(v30 + 32) = a4;
    *(void *)(v30 + 40) = a5;
    uint64_t result = swift_endAccess();
    *uint64_t v34 = v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_257543448(unint64_t a1)
{
  if (a1 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0035C0);
    uint64_t v2 = sub_2576A8B80();
  }
  else
  {
    sub_2576A7810();
    sub_2576A8F90();
    uint64_t v2 = a1;
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2575434CC(void *a1, void *a2)
{
  unint64_t v2 = a1[11];
  if (v2 >> 62) {
    goto LABEL_87;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  while (2)
  {
    if (v3)
    {
      char v81 = a2 + 4;
      uint64_t v75 = (void *)a2[2];
      unint64_t v76 = v2 & 0xC000000000000001;
      uint64_t v79 = a2 + 5;
      swift_beginAccess();
      uint64_t v4 = 0;
      uint64_t v72 = (void *)(v2 + 32);
      unint64_t v73 = v2;
      uint64_t v74 = v3;
      while (1)
      {
        if (v76)
        {
          uint64_t v5 = MEMORY[0x25A2B8DB0](v4, v73);
        }
        else
        {
          uint64_t v5 = v72[v4];
          swift_retain();
        }
        BOOL v6 = __OFADD__(v4++, 1);
        if (v6) {
          goto LABEL_75;
        }
        uint64_t v8 = a1[13];
        uint64_t v7 = (void *)a1[14];
        uint64_t v9 = sub_2576136DC();
        if (v7[2])
        {
          unint64_t v2 = (unint64_t)v7;
          unint64_t v11 = sub_25747588C(v9, v10);
          if (v12) {
            break;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v8 = a1[17];
        uint64_t v14 = (void *)a1[18];
        uint64_t v15 = sub_2576136DC();
        if (v14[2])
        {
          unint64_t v2 = (unint64_t)v14;
          unint64_t v17 = sub_25747588C(v15, v16);
          if (v18)
          {
            unint64_t v13 = *(void *)(v14[7] + 8 * v17);
            if ((v13 & 0x8000000000000000) != 0) {
              goto LABEL_85;
            }
            if (v13 >= *(void *)(v8 + 16)) {
              goto LABEL_86;
            }
LABEL_18:
            uint64_t v19 = v8 + 16 * v13;
            uint64_t v21 = *(void *)(v19 + 32);
            uint64_t v20 = *(void *)(v19 + 40);
            sub_2576A7810();
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_2576136DC();
        uint64_t v20 = v22;
LABEL_20:
        sub_25746D770(*(void *)(v5 + 152));
        sub_2574A4924(0, (unint64_t *)&qword_26A001870);
        id v23 = (void *)sub_2576A7DE0();
        swift_bridgeObjectRelease();
        uint64_t v24 = 268435472;
        switch(*(unsigned char *)(v5 + 160))
        {
          case 1:
            uint64_t v24 = 536870928;
            goto LABEL_32;
          case 2:
            uint64_t v24 = 536870944;
            goto LABEL_32;
          case 3:
            uint64_t v24 = 536870976;
            goto LABEL_32;
          case 4:
            uint64_t v24 = 8;
            goto LABEL_32;
          case 5:
            uint64_t v24 = 16;
            goto LABEL_32;
          case 6:
            uint64_t v24 = 32;
            goto LABEL_32;
          case 7:
            uint64_t v24 = 64;
            goto LABEL_32;
          case 8:
            goto LABEL_32;
          case 9:
            uint64_t v24 = 2415919120;
            goto LABEL_32;
          case 0xA:
            uint64_t v24 = 268435488;
            goto LABEL_32;
          case 0xB:
            sub_2576A8B60();
            __break(1u);
            goto LABEL_89;
          case 0xC:
            uint64_t v24 = 2147483656;
            goto LABEL_32;
          default:
            uint64_t v24 = 536870920;
LABEL_32:
            id v25 = sub_25754793C((uint64_t)v23, v24, v21, v20, v75);

            unint64_t v2 = *(void *)(v5 + 152);
            int v78 = *(unsigned __int8 *)(v5 + 160);
            uint64_t v26 = *(void *)(*v79 + 16);
            if (!v26) {
              goto LABEL_40;
            }
            id v27 = (void **)(*v79 + 48);
            break;
        }
        while (1)
        {
          id v28 = *v27;
          BOOL v29 = *(v27 - 2) == (void *)v21 && *(v27 - 1) == (void *)v20;
          if (v29 || (sub_2576A8F60() & 1) != 0) {
            break;
          }
          v27 += 3;
          if (!--v26)
          {
LABEL_40:
            sub_2576A7810();
            swift_beginAccess();
            uint64_t v30 = *v79;
            sub_2576A7810();
            id v31 = v25;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v79 = v30;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2574722C8();
              uint64_t v30 = v69;
              *uint64_t v79 = v69;
            }
            unint64_t v33 = *(void *)(v30 + 16);
            if (v33 >= *(void *)(v30 + 24) >> 1)
            {
              sub_2574722C8();
              uint64_t v30 = v70;
              *uint64_t v79 = v70;
            }
            *(void *)(v30 + 16) = v33 + 1;
            uint64_t v34 = (void *)(v30 + 24 * v33);
            v34[4] = v21;
            v34[5] = v20;
            v34[6] = v31;
            swift_endAccess();
            uint64_t v35 = *(void *)(v2 + 16);
            if (v35)
            {
              uint64_t v36 = (uint64_t *)(v2 + 32);
              uint64_t v37 = 1;
              while (1)
              {
                uint64_t v38 = *v36++;
                uint64_t v39 = v37 * v38;
                if ((unsigned __int128)(v37 * (__int128)v38) >> 64 != (v37 * v38) >> 63) {
                  break;
                }
                uint64_t v37 = v39;
                if (!--v35) {
                  goto LABEL_50;
                }
              }
              __break(1u);
LABEL_75:
              __break(1u);
LABEL_76:
              __break(1u);
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
            uint64_t v39 = 1;
LABEL_50:
            if ((v78 - 1) > 0xA) {
              uint64_t v40 = 1;
            }
            else {
              uint64_t v40 = qword_2576B5BB8[(char)(v78 - 1)];
            }
            uint64_t v41 = v39 * v40;
            if ((unsigned __int128)(v39 * (__int128)v40) >> 64 != (v39 * v40) >> 63) {
              goto LABEL_77;
            }
            uint64_t v42 = a2[6];
            BOOL v6 = __OFADD__(v42, v41);
            uint64_t v43 = v42 + v41;
            if (v6)
            {
LABEL_78:
              __break(1u);
            }
            else
            {
              a2[6] = v43;
              uint64_t v44 = a2[3];
              swift_unownedRetainStrong();
              uint64_t v45 = *(void **)(v44 + 16);
              swift_unknownObjectRetain();
              swift_release();
              id v46 = objc_msgSend(v45, sel_heapBufferSizeAndAlignWithLength_options_, v41, 0);
              uint64_t v48 = v47;
              swift_unknownObjectRelease();
              uint64_t v49 = v48 - 1;
              if (!__OFSUB__(v48, 1))
              {
                if (!__OFADD__(v46, v49))
                {
                  unint64_t v50 = ((unint64_t)v46 + v49) & ~v49;
                  uint64_t v51 = a2[7];
                  BOOL v6 = __OFADD__(v51, v50);
                  uint64_t v52 = v51 + v50;
                  if (!v6)
                  {
                    a2[7] = v52;
                    swift_bridgeObjectRelease();
                    goto LABEL_61;
                  }
LABEL_81:
                  __break(1u);
LABEL_82:
                  __break(1u);
LABEL_83:
                  __break(1u);
                  goto LABEL_84;
                }
LABEL_80:
                __break(1u);
                goto LABEL_81;
              }
            }
            __break(1u);
            goto LABEL_80;
          }
        }
        sub_2576A7810();
        sub_2576A7810();
        id v53 = v28;
        if (v28 != v25) {
          goto LABEL_90;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_61:
        swift_bridgeObjectRelease();
        uint64_t v54 = sub_2576136DC();
        uint64_t v56 = v55;
        swift_beginAccess();
        id v57 = v25;
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v82 = (void *)*v81;
        unint64_t v2 = (unint64_t)v82;
        *char v81 = 0x8000000000000000;
        unint64_t v58 = sub_25747588C(v54, v56);
        if (__OFADD__(*(void *)(v2 + 16), (v59 & 1) == 0)) {
          goto LABEL_76;
        }
        unint64_t v60 = v58;
        char v61 = v59;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A003590);
        unint64_t v2 = (unint64_t)&v82;
        if (sub_2576A8AD0())
        {
          unint64_t v2 = (unint64_t)v82;
          unint64_t v62 = sub_25747588C(v54, v56);
          if ((v61 & 1) != (v63 & 1))
          {
LABEL_89:
            sub_2576A9020();
            __break(1u);
LABEL_90:
            sub_2576A8730();
            swift_bridgeObjectRelease();
            sub_2576A7B00();
            sub_2576A7B00();
            sub_25746BE6C();
          }
          unint64_t v60 = v62;
        }
        os_signpost_id_t v64 = v82;
        if (v61)
        {
          uint64_t v65 = v82[7];

          *(void *)(v65 + 8 * v60) = v57;
        }
        else
        {
          v82[(v60 >> 6) + 8] |= 1 << v60;
          uint64_t v66 = (uint64_t *)(v64[6] + 16 * v60);
          *uint64_t v66 = v54;
          v66[1] = v56;
          *(void *)(v64[7] + 8 * v60) = v57;
          uint64_t v67 = v64[2];
          BOOL v6 = __OFADD__(v67, 1);
          uint64_t v68 = v67 + 1;
          if (v6) {
            goto LABEL_82;
          }
          v64[2] = v68;
          sub_2576A7810();
        }
        unint64_t v2 = *v81;
        *char v81 = (unint64_t)v64;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();

        if (v4 == v74) {
          return swift_bridgeObjectRelease();
        }
      }
      unint64_t v13 = *(void *)(v7[7] + 8 * v11);
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_83;
      }
      if (v13 >= *(void *)(v8 + 16))
      {
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        swift_bridgeObjectRetain_n();
        uint64_t v3 = sub_2576A8BF0();
        swift_bridgeObjectRelease();
        continue;
      }
      goto LABEL_18;
    }
    break;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_257543CFC(void *a1, uint64_t a2)
{
  uint64_t result = a1[15];
  uint64_t v95 = *(void *)(result + 16);
  if (!v95) {
    return result;
  }
  uint64_t v105 = v2;
  v119 = (void *)(a2 + 32);
  uint64_t v108 = a2 + 88;
  uint64_t v99 = a2 + 64;
  uint64_t v97 = result + 32;
  uint64_t v4 = sub_2576A7810();
  unint64_t v5 = 0;
  uint64_t v96 = v4;
  while (1)
  {
    if (v5 >= *(void *)(v4 + 16)) {
      goto LABEL_123;
    }
    unint64_t v104 = v5;
    BOOL v6 = (uint64_t *)(v97 + 16 * v5);
    uint64_t v7 = *v6;
    uint64_t v8 = (void *)v6[1];
    swift_getObjectType();
    if (!dynamic_cast_existential_1_conditional(v7))
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      sub_257547A80();
      swift_allocError();
      *unint64_t v92 = 0;
      swift_willThrow();
      return swift_unknownObjectRelease();
    }
    uint64_t v10 = v9;
    uint64_t ObjectType = swift_getObjectType();
    char v12 = (uint64_t (*)(uint64_t, void *))v8[4];
    swift_unknownObjectRetain_n();
    unint64_t v13 = v12(ObjectType, v8);
    swift_retain();
    unint64_t v14 = sub_257540A04(v13, a2);
    swift_bridgeObjectRelease();
    unint64_t v98 = v14 >> 62;
    if (v14 >> 62)
    {
      sub_2576A7810();
      uint64_t v15 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v117 = ObjectType;
    unint64_t v16 = v12(ObjectType, v8);
    if (v16 >> 62) {
      uint64_t v17 = sub_2576A8BF0();
    }
    else {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v15 != v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_257547A80();
      swift_allocError();
      char v94 = 1;
LABEL_115:
      *unint64_t v93 = v94;
      swift_willThrow();
      return swift_unknownObjectRelease_n();
    }
    uint64_t v18 = swift_getObjectType();
    unint64_t v19 = (*(uint64_t (**)(void, unint64_t, uint64_t, uint64_t))(v10 + 24))(*(void *)(a2 + 16), v14, v18, v10);
    if (v105)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    unint64_t v109 = v14;
    uint64_t v105 = 0;
    unint64_t v116 = v19;
    uint64_t v102 = v18;
    if (v19 >> 62)
    {
      sub_2576A7810();
      uint64_t v20 = sub_2576A8BF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v21 = (uint64_t (*)(uint64_t, void *))v8[5];
    uint64_t v22 = v117;
    uint64_t v23 = *(void *)(v21(v117, v8) + 16);
    swift_bridgeObjectRelease();
    if (v20 != v23)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_257547A80();
      swift_allocError();
      char v94 = 3;
      goto LABEL_115;
    }
    uint64_t v100 = v10;
    uint64_t v24 = *(void *)(v21(v117, v8) + 16);
    swift_bridgeObjectRelease();
    unint64_t v25 = v116;
    if (v24)
    {
      unint64_t v26 = 0;
      uint64_t v112 = (uint64_t (*)(unint64_t, uint64_t, void *))v8[9];
      uint64_t v110 = v8;
      do
      {
        uint64_t v27 = v112(v26, v22, v8);
        uint64_t v29 = v28;
        if ((v116 & 0xC000000000000001) != 0)
        {
          id v30 = (id)MEMORY[0x25A2B8DB0](v26, v25);
        }
        else
        {
          if (v26 >= *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_119;
          }
          id v30 = *(id *)(v25 + 8 * v26 + 32);
        }
        id v31 = v30;
        swift_beginAccess();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v120 = (void *)*v119;
        void *v119 = 0x8000000000000000;
        unint64_t v32 = sub_25747588C(v27, v29);
        if (__OFADD__(v120[2], (v33 & 1) == 0))
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
          goto LABEL_121;
        }
        unint64_t v34 = v32;
        char v35 = v33;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A003590);
        if (sub_2576A8AD0())
        {
          unint64_t v36 = sub_25747588C(v27, v29);
          if ((v35 & 1) != (v37 & 1)) {
            goto LABEL_131;
          }
          unint64_t v34 = v36;
        }
        if (v35)
        {
          uint64_t v38 = v120[7];

          *(void *)(v38 + 8 * v34) = v31;
        }
        else
        {
          v120[(v34 >> 6) + 8] |= 1 << v34;
          uint64_t v39 = (uint64_t *)(v120[6] + 16 * v34);
          *uint64_t v39 = v27;
          v39[1] = v29;
          *(void *)(v120[7] + 8 * v34) = v31;
          uint64_t v40 = v120[2];
          BOOL v41 = __OFADD__(v40, 1);
          uint64_t v42 = v40 + 1;
          if (v41) {
            goto LABEL_118;
          }
          v120[2] = v42;
          sub_2576A7810();
        }
        ++v26;
        void *v119 = v120;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v8 = v110;
        uint64_t v22 = v117;
        unint64_t v25 = v116;
      }
      while (v24 != v26);
    }
    swift_bridgeObjectRelease();
    if ((*(uint64_t (**)(uint64_t))(v100 + 16))(v102)) {
      break;
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_108:
    unint64_t v5 = v104 + 1;
    swift_unknownObjectRelease();
    uint64_t v4 = v96;
    if (v104 + 1 == v95) {
      return swift_bridgeObjectRelease();
    }
  }
  unint64_t v43 = v12(v22, v8);
  unint64_t v44 = v109;
  unint64_t v111 = v43;
  if (v43 >> 62)
  {
    uint64_t v45 = sub_2576A8BF0();
    unint64_t v43 = v111;
    if (v45) {
      goto LABEL_32;
    }
LABEL_106:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  uint64_t v45 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v45) {
    goto LABEL_106;
  }
LABEL_32:
  unint64_t v118 = v43 & 0xC000000000000001;
  if ((v43 & 0xC000000000000001) != 0)
  {
    MEMORY[0x25A2B8DB0](0, v43);
  }
  else
  {
    if (!*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_130;
    }
    swift_retain();
  }
  if (!v98)
  {
    uint64_t v46 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v46) {
      goto LABEL_37;
    }
    goto LABEL_100;
  }
  sub_2576A7810();
  uint64_t v46 = sub_2576A8BF0();
  swift_bridgeObjectRelease();
  if (!v46)
  {
LABEL_100:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_107:
    swift_unknownObjectRelease();
    goto LABEL_108;
  }
LABEL_37:
  uint64_t v47 = a1[13];
  uint64_t v48 = a1[14];
  swift_beginAccess();
  swift_beginAccess();
  unint64_t v49 = 0;
  uint64_t v101 = v47 + 32;
  uint64_t v103 = v47;
  unint64_t v50 = 1;
  uint64_t v114 = v46;
  uint64_t v115 = v45;
  uint64_t v113 = v48;
  while (1)
  {
    if ((v109 & 0xC000000000000001) != 0)
    {
      id v51 = (id)MEMORY[0x25A2B8DB0](v49, v44);
    }
    else
    {
      if (v49 >= *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_124;
      }
      id v51 = *(id *)(v109 + 32 + 8 * v49);
    }
    uint64_t v52 = v51;
    uint64_t v53 = sub_2576136DC();
    if (*(void *)(v48 + 16) && (unint64_t v55 = sub_25747588C(v53, v54), (v56 & 1) != 0))
    {
      unint64_t v57 = *(void *)(*(void *)(v48 + 56) + 8 * v55);
      if ((v57 & 0x8000000000000000) != 0) {
        goto LABEL_126;
      }
      if (v57 >= *(void *)(v103 + 16)) {
        goto LABEL_127;
      }
      unint64_t v58 = (uint64_t *)(v101 + 16 * v57);
      uint64_t v60 = *v58;
      uint64_t v59 = v58[1];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = a1[17];
      uint64_t v61 = a1[18];
      uint64_t v63 = sub_2576136DC();
      if (!*(void *)(v61 + 16) || (unint64_t v65 = sub_25747588C(v63, v64), (v66 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = sub_2576136DC();
        uint64_t v59 = v69;
        goto LABEL_54;
      }
      unint64_t v67 = *(void *)(*(void *)(v61 + 56) + 8 * v65);
      if ((v67 & 0x8000000000000000) != 0) {
        goto LABEL_128;
      }
      if (v67 >= *(void *)(v62 + 16)) {
        goto LABEL_129;
      }
      uint64_t v68 = v62 + 16 * v67;
      uint64_t v60 = *(void *)(v68 + 32);
      uint64_t v59 = *(void *)(v68 + 40);
    }
    sub_2576A7810();
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v70 = *(void **)v108;
    uint64_t v71 = *(void *)(*(void *)v108 + 16);
    if (v71)
    {
      BOOL v72 = v70[4] == v60 && v70[5] == v59;
      if (v72 || (sub_2576A8F60() & 1) != 0) {
        goto LABEL_89;
      }
      if (v71 != 1) {
        break;
      }
    }
LABEL_69:
    uint64_t v77 = *(void **)v99;
    uint64_t v78 = *(void *)(*(void *)v99 + 16);
    if (v78)
    {
      BOOL v79 = v77[4] == v60 && v77[5] == v59;
      if (v79 || (sub_2576A8F60() & 1) != 0) {
        goto LABEL_89;
      }
      if (v78 != 1)
      {
        os_signpost_type_t v80 = v77 + 8;
        uint64_t v81 = 1;
        do
        {
          uint64_t v82 = v81 + 1;
          if (__OFADD__(v81, 1)) {
            goto LABEL_122;
          }
          BOOL v83 = *(v80 - 1) == v60 && *v80 == v59;
          if (v83 || (sub_2576A8F60() & 1) != 0) {
            goto LABEL_89;
          }
          v80 += 3;
          ++v81;
        }
        while (v82 != v78);
      }
    }
    swift_beginAccess();
    uint64_t v84 = *(void *)v108;
    sub_2576A7810();
    id v85 = v52;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)uint64_t v108 = v84;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2574722C8();
      uint64_t v84 = v90;
      *(void *)uint64_t v108 = v90;
    }
    unint64_t v87 = *(void *)(v84 + 16);
    if (v87 >= *(void *)(v84 + 24) >> 1)
    {
      sub_2574722C8();
      uint64_t v84 = v91;
      *(void *)uint64_t v108 = v91;
    }
    *(void *)(v84 + 16) = v87 + 1;
    os_signpost_id_t v88 = (void *)(v84 + 24 * v87);
    v88[4] = v60;
    v88[5] = v59;
    v88[6] = v85;
    swift_endAccess();
LABEL_89:

    swift_bridgeObjectRelease();
    swift_release();
    if (v50 == v115) {
      goto LABEL_106;
    }
    unint64_t v44 = v109;
    if (v118)
    {
      MEMORY[0x25A2B8DB0](v50, v111);
      uint64_t v48 = v113;
      uint64_t v89 = v114;
    }
    else
    {
      uint64_t v48 = v113;
      uint64_t v89 = v114;
      if (v50 >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_125;
      }
      swift_retain();
    }
    if (__OFADD__(v50, 1)) {
      goto LABEL_120;
    }
    unint64_t v49 = v50;
    BOOL v72 = v50++ == v89;
    if (v72) {
      goto LABEL_100;
    }
  }
  unint64_t v73 = v70 + 8;
  uint64_t v74 = 1;
  while (1)
  {
    uint64_t v75 = v74 + 1;
    if (__OFADD__(v74, 1)) {
      break;
    }
    BOOL v76 = *(v73 - 1) == v60 && *v73 == v59;
    if (v76 || (sub_2576A8F60() & 1) != 0) {
      goto LABEL_89;
    }
    v73 += 3;
    ++v74;
    if (v75 == v71) {
      goto LABEL_69;
    }
  }
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  __break(1u);
LABEL_130:
  __break(1u);
LABEL_131:
  uint64_t result = sub_2576A9020();
  __break(1u);
  return result;
}

uint64_t sub_257544834(void *a1, void *a2)
{
  unint64_t v2 = a1[19];
  if (v2 >> 62)
  {
LABEL_100:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = a2;
    uint64_t v4 = sub_2576A8BF0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v3 = a2;
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v89 = v3 + 4;
  unint64_t v90 = v2 & 0xC000000000000001;
  unint64_t v92 = v3 + 8;
  swift_beginAccess();
  uint64_t v86 = v3 + 11;
  swift_beginAccess();
  unint64_t v7 = 0;
  unint64_t v84 = v2;
  uint64_t v81 = (char *)(v2 + 32);
  uint64_t v82 = v2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v79 = v5 + 32;
  uint64_t v80 = v5;
  uint64_t v87 = v6;
  uint64_t v88 = v4;
  while (1)
  {
    if (v90)
    {
      uint64_t v8 = MEMORY[0x25A2B8DB0](v7, v84);
    }
    else
    {
      if (v7 >= *(void *)(v82 + 16)) {
        goto LABEL_93;
      }
      uint64_t v8 = *(void *)&v81[8 * v7];
      swift_retain();
    }
    BOOL v9 = __OFADD__(v7++, 1);
    if (v9) {
      goto LABEL_86;
    }
    uint64_t v10 = sub_2576136DC();
    unint64_t v2 = v11;
    if (*(void *)(v6 + 16) && (unint64_t v12 = sub_25747588C(v10, v11), (v13 & 1) != 0))
    {
      unint64_t v14 = *(void *)(*(void *)(v6 + 56) + 8 * v12);
      if ((v14 & 0x8000000000000000) != 0) {
        goto LABEL_95;
      }
      if (v14 >= *(void *)(v80 + 16)) {
        goto LABEL_96;
      }
      uint64_t v15 = (uint64_t *)(v79 + 16 * v14);
      uint64_t v16 = *v15;
      unint64_t v17 = v15[1];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = a1[17];
      uint64_t v19 = a1[18];
      uint64_t v20 = sub_2576136DC();
      unint64_t v2 = v21;
      if (!*(void *)(v19 + 16) || (unint64_t v22 = sub_25747588C(v20, v21), (v23 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = sub_2576136DC();
        unint64_t v17 = v26;
        goto LABEL_21;
      }
      unint64_t v24 = *(void *)(*(void *)(v19 + 56) + 8 * v22);
      if ((v24 & 0x8000000000000000) != 0) {
        goto LABEL_98;
      }
      if (v24 >= *(void *)(v18 + 16)) {
        goto LABEL_99;
      }
      uint64_t v25 = v18 + 16 * v24;
      uint64_t v16 = *(void *)(v25 + 32);
      unint64_t v17 = *(void *)(v25 + 40);
    }
    sub_2576A7810();
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v95 = v8;
    uint64_t v27 = sub_2576136DC();
    uint64_t v29 = v28;
    swift_beginAccess();
    uint64_t v30 = *v89;
    if (!*(void *)(*v89 + 16) || (unint64_t v31 = sub_25747588C(v27, v29), (v32 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_257547A80();
      swift_allocError();
      *uint64_t v77 = 3;
      swift_willThrow();
      return swift_release();
    }
    char v33 = *(void **)(*(void *)(v30 + 56) + 8 * v31);
    swift_endAccess();
    id v93 = v33;
    swift_bridgeObjectRelease();
    uint64_t v94 = *(void *)(v95 + 152);
    int v91 = *(unsigned __int8 *)(v95 + 160);
    unint64_t v34 = (void *)*v92;
    uint64_t v35 = *(void *)(*v92 + 16);
    if (v35)
    {
      unint64_t v2 = v34[5];
      unint64_t v36 = (void *)v34[6];
      if (v34[4] == v16 && v2 == v17)
      {
LABEL_59:
        unint64_t v2 = v17;
LABEL_60:
        sub_2576A7810();
        sub_2576A7810();
        if (v36 != v93)
        {
          sub_2576A8730();
          swift_bridgeObjectRelease();
          sub_2576A7B00();
          sub_2576A7B00();
          sub_25746BE6C();
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_72;
      }
      if (sub_2576A8F60()) {
        goto LABEL_60;
      }
      if (v35 != 1)
      {
        uint64_t v38 = (void **)(v34 + 9);
        uint64_t v39 = 1;
        do
        {
          uint64_t v40 = v39 + 1;
          if (__OFADD__(v39, 1)) {
            goto LABEL_87;
          }
          unint64_t v2 = (unint64_t)*(v38 - 1);
          unint64_t v36 = *v38;
          if (*(v38 - 2) == (void *)v16 && v2 == v17) {
            goto LABEL_59;
          }
          if (sub_2576A8F60()) {
            goto LABEL_60;
          }
          v38 += 3;
          ++v39;
        }
        while (v40 != v35);
      }
    }
    sub_2576A7810();
    uint64_t v42 = (void *)*v86;
    unint64_t v2 = *(void *)(*v86 + 16);
    if (v2) {
      break;
    }
LABEL_50:
    swift_beginAccess();
    unint64_t v2 = *v92;
    id v50 = v93;
    sub_2576A7810();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v92 = v2;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2574722C8();
      unint64_t v2 = v74;
      *unint64_t v92 = v74;
    }
    unint64_t v52 = *(void *)(v2 + 16);
    if (v52 >= *(void *)(v2 + 24) >> 1)
    {
      sub_2574722C8();
      unint64_t v2 = v75;
      *unint64_t v92 = v75;
    }
    *(void *)(v2 + 16) = v52 + 1;
    uint64_t v53 = (void *)(v2 + 24 * v52);
    v53[4] = v16;
    v53[5] = v17;
    v53[6] = v50;
    swift_endAccess();
    uint64_t v54 = *(void *)(v94 + 16);
    if (v54)
    {
      unint64_t v55 = (uint64_t *)(v94 + 32);
      uint64_t v56 = 1;
      unint64_t v57 = a2;
      while (1)
      {
        uint64_t v58 = *v55++;
        uint64_t v59 = v56 * v58;
        if ((unsigned __int128)(v56 * (__int128)v58) >> 64 != (v56 * v58) >> 63) {
          break;
        }
        uint64_t v56 = v59;
        if (!--v54) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    uint64_t v59 = 1;
    unint64_t v57 = a2;
LABEL_63:
    if ((v91 - 1) > 0xA) {
      uint64_t v60 = 1;
    }
    else {
      uint64_t v60 = qword_2576B5BB8[(char)(v91 - 1)];
    }
    unint64_t v2 = v59 * v60;
    if ((unsigned __int128)(v59 * (__int128)v60) >> 64 != (v59 * v60) >> 63) {
      goto LABEL_88;
    }
    uint64_t v61 = v57[9];
    BOOL v9 = __OFADD__(v61, v2);
    uint64_t v62 = (char *)(v61 + v2);
    if (v9) {
      goto LABEL_89;
    }
    v57[9] = v62;
    uint64_t v63 = v57[3];
    swift_unownedRetainStrong();
    uint64_t v64 = *(void **)(v63 + 16);
    swift_unknownObjectRetain();
    swift_release();
    unint64_t v2 = (unint64_t)objc_msgSend(v64, sel_heapBufferSizeAndAlignWithLength_options_, v2, 0);
    uint64_t v66 = v65;
    swift_unknownObjectRelease();
    uint64_t v67 = v66 - 1;
    if (__OFSUB__(v66, 1)) {
      goto LABEL_90;
    }
    if (__OFADD__(v2, v67)) {
      goto LABEL_91;
    }
    unint64_t v68 = (v2 + v67) & ~v67;
    uint64_t v69 = v57[10];
    BOOL v9 = __OFADD__(v69, v68);
    uint64_t v70 = v69 + v68;
    if (v9) {
      goto LABEL_92;
    }
    v57[10] = v70;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();

LABEL_72:
    uint64_t v6 = v87;
    if (v7 == v88) {
      return swift_bridgeObjectRelease();
    }
  }
  BOOL v43 = v42[4] == v16 && v42[5] == v17;
  if (v43 || (sub_2576A8F60() & 1) != 0)
  {
    unint64_t v44 = 0;
  }
  else
  {
    if (v2 == 1) {
      goto LABEL_50;
    }
    uint64_t v71 = v42 + 8;
    unint64_t v44 = 1;
    while (1)
    {
      BOOL v72 = *(v71 - 1) == v16 && *v71 == v17;
      if (v72 || (sub_2576A8F60() & 1) != 0) {
        break;
      }
      unint64_t v73 = (void *)(v44 + 1);
      if (__OFADD__(v44, 1)) {
        goto LABEL_94;
      }
      v71 += 3;
      ++v44;
      if (v73 == (void *)v2) {
        goto LABEL_50;
      }
    }
  }
  swift_beginAccess();
  unint64_t v2 = *v86;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_257582A98();
    unint64_t v2 = v76;
  }
  unint64_t v45 = *(void *)(v2 + 16);
  if (v44 >= v45) {
    goto LABEL_97;
  }
  unint64_t v46 = v45 - 1;
  uint64_t v47 = v45 - 1 - v44;
  if (v47 >= 0)
  {
    uint64_t v48 = (void *)(v2 + 24 * v44);
    unint64_t v49 = (void *)v48[6];
    memmove(v48 + 4, v48 + 7, 24 * v47);
    *(void *)(v2 + 16) = v46;
    *uint64_t v86 = v2;
    swift_endAccess();

    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  uint64_t result = sub_2576A8C60();
  __break(1u);
  return result;
}

void sub_257545054(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F13400]), sel_init);
  objc_msgSend(v3, sel_setCompilerOptions_, 6);
  objc_msgSend(v3, sel_setOptimizationLevel_, 0);
  unint64_t v98 = v3;
  objc_msgSend(v3, sel_setWaitForCompilationCompletion_, 0);
  sub_2574A4924(0, (unint64_t *)&qword_26A000E80);
  sub_2574A4924(0, &qword_26A003560);
  sub_257547A20();
  uint64_t v4 = sub_2576A77E0();
  uint64_t v88 = (uint64_t *)(v1 + 40);
  swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)(v1 + 40) + 16);
  if (v5)
  {
    uint64_t v85 = v1;
    uint64_t v6 = 48;
    uint64_t v7 = sub_2576A7810();
    uint64_t v101 = v7;
    while (1)
    {
      id v8 = *(id *)(v7 + v6);
      uint64_t v9 = sub_2575479AC(v8, (SEL *)&selRef_shape, (unint64_t *)&qword_26A001870);
      id v10 = objc_msgSend(v8, sel_dataType);
      id v11 = objc_allocWithZone(MEMORY[0x263F13450]);
      id v12 = sub_257545AD0(v9, (uint64_t)v10);
      unint64_t v13 = v4 & 0xC000000000000001;
      if (v12)
      {
        id v14 = v12;
        if (v13)
        {
          if (v4 >= 0) {
            v4 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          id v15 = v8;
          uint64_t v16 = sub_2576A8B20();
          if (__OFADD__(v16, 1)) {
            goto LABEL_40;
          }
          uint64_t v4 = sub_2575476FC(v4, v16 + 1);
        }
        else
        {
          id v25 = v8;
        }
        swift_isUniquelyReferenced_nonNull_native();
        unint64_t v26 = sub_2574758F0((uint64_t)v8);
        if (__OFADD__(*(void *)(v4 + 16), (v27 & 1) == 0))
        {
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          sub_2576A9020();
          __break(1u);
          return;
        }
        unint64_t v28 = v26;
        char v29 = v27;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A003570);
        if (sub_2576A8AD0())
        {
          unint64_t v30 = sub_2574758F0((uint64_t)v8);
          if ((v29 & 1) != (v31 & 1)) {
            goto LABEL_43;
          }
          unint64_t v28 = v30;
        }
        if (v29)
        {
          uint64_t v32 = *(void *)(v4 + 56);

          *(void *)(v32 + 8 * v28) = v14;
        }
        else
        {
          *(void *)(v4 + 8 * (v28 >> 6) + 64) |= 1 << v28;
          *(void *)(*(void *)(v4 + 48) + 8 * v28) = v8;
          *(void *)(*(void *)(v4 + 56) + 8 * v28) = v14;
          uint64_t v33 = *(void *)(v4 + 16);
          BOOL v34 = __OFADD__(v33, 1);
          uint64_t v35 = v33 + 1;
          if (v34) {
            goto LABEL_41;
          }
          *(void *)(v4 + 16) = v35;
          id v36 = v8;
        }

        swift_bridgeObjectRelease();
        uint64_t v7 = v101;
      }
      else
      {
        if (!v13)
        {
          id v37 = v8;
          sub_2576A7810();
          unint64_t v38 = sub_2574758F0((uint64_t)v37);
          char v40 = v39;
          swift_bridgeObjectRelease();
          if ((v40 & 1) == 0)
          {

            goto LABEL_31;
          }
          swift_isUniquelyReferenced_nonNull_native();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26A003570);
          sub_2576A8AD0();

          BOOL v41 = *(void **)(*(void *)(v4 + 56) + 8 * v38);
          sub_2576A8B00();

          goto LABEL_29;
        }
        if (v4 < 0) {
          uint64_t v17 = v4;
        }
        else {
          uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8;
        }
        id v18 = v8;
        sub_2576A7810();
        if (!sub_2576A8B30())
        {

LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_unknownObjectRelease();
        uint64_t v19 = sub_2576A8B20();
        uint64_t v20 = sub_2575476FC(v17, v19);
        swift_retain();
        unint64_t v21 = sub_2574758F0((uint64_t)v18);
        char v23 = v22;
        swift_release();
        if ((v23 & 1) == 0) {
          goto LABEL_42;
        }

        unint64_t v24 = *(void **)(*(void *)(v20 + 56) + 8 * v21);
        sub_2576A8B00();

        swift_bridgeObjectRelease();
        uint64_t v4 = v20;
      }
LABEL_31:
      v6 += 24;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = v85;
        break;
      }
    }
  }
  uint64_t v42 = *(void **)(v2 + 16);
  swift_unownedRetainStrong();
  id v43 = sub_2575597E0();
  swift_release();
  sub_2576A7810();
  unint64_t v44 = (void *)sub_2576A7790();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v45 = sub_2576A7810();
  sub_257540230(v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v46 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v42, sel_compileWithDevice_feeds_targetTensors_targetOperations_compilationDescriptor_, v43, v44, v46, 0, v98);

  uint64_t v48 = sub_2575479AC(v47, (SEL *)&selRef_feedTensors, (unint64_t *)&qword_26A000E80);
  if (v48)
  {
    unint64_t v49 = v48;
    swift_retain();
    sub_2575402E0(v49, v2);
    uint64_t v51 = v50;
    swift_bridgeObjectRelease();
    if (v95)
    {

      return;
    }
  }
  else
  {
    uint64_t v51 = *v88;
    sub_2576A7810();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  *((void *)&v104 + 1) = sub_2576A77E0();
  uint64_t v52 = sub_25746D808(v51);
  uint64_t v53 = swift_bridgeObjectRelease();
  *(void *)&long long v104 = v52;
  sub_2574707CC(v53, v54, v55, v56, v57, v58, v59, v60, v82, v85, (uint64_t)v88, a1, v95, (uint64_t)v98);
  long long v102 = v104;
  uint64_t v61 = *(void *)(v2 + 64);
  sub_2576A7810();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v62 = v2;
  *((void *)&v104 + 1) = sub_2576A77E0();
  uint64_t v63 = sub_25746D808(v61);
  uint64_t v64 = swift_bridgeObjectRelease();
  *(void *)&long long v104 = v63;
  sub_2574707CC(v64, v65, v66, v67, v68, v69, v70, v71, v83, v86, v89, v92, v96, v99);
  swift_beginAccess();
  uint64_t v72 = *(void *)(v62 + 88);
  sub_2576A7810();
  *((void *)&v103 + 1) = sub_2576A77E0();
  uint64_t v73 = sub_25746D808(v72);
  uint64_t v74 = swift_bridgeObjectRelease();
  *(void *)&long long v103 = v73;
  sub_2574707CC(v74, v75, v76, v77, v78, v79, v80, v81, v84, v87, v90, v93, v97, v100);
  *(void *)uint64_t v94 = v47;
  *(_OWORD *)(v94 + 8) = v102;
  *(_OWORD *)(v94 + 24) = v104;
  *(_OWORD *)(v94 + 40) = v103;
}

void *sub_257545760(uint64_t a1)
{
  void v1[2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F133F8]), sel_init);
  sub_2574A4924(0, (unint64_t *)&qword_26A000E80);
  uint64_t v3 = MEMORY[0x263F8EE78];
  uint64_t v4 = sub_2576A77E0();
  v1[5] = v3;
  v1[6] = 0;
  v1[7] = 0;
  v1[8] = v3;
  v1[9] = 0;
  v1[10] = 0;
  v1[11] = v3;
  v1[3] = a1;
  v1[4] = v4;
  swift_unownedRetain();
  swift_release();
  return v1;
}

uint64_t sub_257545804()
{
  swift_unownedRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_25754584C()
{
  sub_257545804();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MPSGraphExecutor.MPSGraphExecutorComponentsBuilder()
{
  return self;
}

unint64_t sub_2575458A0()
{
  unint64_t result = qword_26A003540;
  if (!qword_26A003540)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A002438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003540);
  }
  return result;
}

void **sub_2575458F4(void **a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

id sub_257545970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  uint64_t v6 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v3, sel_initWithMTLBuffer_shape_dataType_, a1, v6, a3);

  swift_unknownObjectRelease();
  return v7;
}

id sub_257545A08(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  id v10 = (void *)sub_2576A7150();
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  id v11 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v5, sel_initWithDevice_data_shape_dataType_, a1, v10, v11, a5);
  sub_25747F154(a2, a3);

  return v12;
}

id sub_257545AD0(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    sub_2574A4924(0, (unint64_t *)&qword_26A001870);
    uint64_t v4 = (void *)sub_2576A7DE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v5 = objc_msgSend(v2, sel_initWithShape_dataType_, v4, a2);

  return v5;
}

uint64_t sub_257545B5C(uint8_t *a1, uint32_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v141 = a8;
  uint64_t v142 = a9;
  uint64_t v129 = sub_2576A75E0();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v127 = (char *)v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_2576A75A0();
  uint64_t v143 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  char v136 = (char *)v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v152 = (char *)v125 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v153 = (char *)v125 - v22;
  char v23 = sub_2576A75C0();
  os_signpost_type_t v24 = sub_2576A83C0();
  uint64_t v131 = a4;
  uint64_t v25 = v142;
  os_signpost_id_t v26 = sub_2576A7580();
  char v137 = v23;
  uint64_t v133 = a5;
  uint64_t v135 = a6;
  unint64_t v132 = a1;
  uint32_t v134 = a2;
  _os_signpost_emit_with_name_impl(&dword_257455000, v23, v24, v26, a5, a6, a1, a2);
  uint64_t v157 = a7;
  uint64_t v27 = *(void *)(a7 + 16);
  swift_unownedRetainStrong();
  uint64_t v28 = *(void *)(v27 + 24);
  swift_unknownObjectRetain();
  uint64_t v158 = v27;
  swift_release();
  id v29 = objc_msgSend(self, sel_commandBufferFromCommandQueue_, v28);
  swift_unknownObjectRelease();
  uint64_t v30 = *(void *)(v25 + 16);
  if (v30)
  {
    sub_2576A7810();
    char v31 = (void *)(v25 + 40);
    do
    {
      objc_msgSend(v29, sel_encodeWaitForEvent_value_, *(v31 - 1), *v31);
      v31 += 2;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  id v140 = v29;
  uint64_t v139 = a10;
  uint64_t v32 = MEMORY[0x263F8EE78];
  unint64_t v168 = MEMORY[0x263F8EE78];
  uint64_t v33 = v157;
  uint64_t v34 = *(void *)(v157 + 48);
  sub_2574FD024(*(void *)(v34 + 16), 0);
  sub_2576A7E20();
  uint64_t v167 = v32;
  uint64_t v156 = v34;
  sub_2574FD024(*(void *)(v34 + 16), 0);
  uint64_t v35 = sub_2576A7E20();
  uint64_t v36 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v35);
  v125[-4] = MEMORY[0x263F8D310];
  v125[-3] = &type metadata for TensorDescriptor;
  uint64_t v123 = MEMORY[0x263F8D320];
  swift_getKeyPath();
  swift_retain();
  uint64_t v37 = sub_2576A7810();
  uint64_t v38 = v159;
  uint64_t v39 = sub_257540508(v37);
  uint64_t v40 = v38;
  swift_release();
  uint64_t v155 = v36;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0035A8);
  *(void *)(swift_initStackObject() + 16) = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0035B0);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v39;
  *(void *)(inited + 24) = 0;
  sub_2576A7810();
  swift_release();
  swift_retain();
  sub_25753FCD0((uint64_t)&aBlock);
  unint64_t v42 = aBlock;
  if (aBlock)
  {
    unsigned __int8 v43 = v161;
    while (2)
    {
      uint64_t v44 = *(void *)(v42 + 16);
      if (v44)
      {
        uint64_t v45 = (uint64_t *)(v42 + 32);
        uint64_t v46 = 1;
        while (1)
        {
          uint64_t v47 = *v45++;
          uint64_t v48 = v46 * v47;
          if ((unsigned __int128)(v46 * (__int128)v47) >> 64 != (v46 * v47) >> 63) {
            break;
          }
          uint64_t v46 = v48;
          if (!--v44) {
            goto LABEL_13;
          }
        }
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
      }
      else
      {
        uint64_t v48 = 1;
LABEL_13:
        if ((v43 - 1) > 0xAu) {
          uint64_t v49 = 1;
        }
        else {
          uint64_t v49 = qword_2576B5BB8[(char)(v43 - 1)];
        }
        NSUInteger v50 = v48 * v49;
        if ((unsigned __int128)(v48 * (__int128)v49) >> 64 == (v48 * v49) >> 63)
        {
          swift_unownedRetainStrong();
          unint64_t v51 = sub_257559990(v50, 0);
          swift_release();
          if (v51)
          {
            swift_unknownObjectRetain();
            uint64_t v52 = sub_2576A7810();
            uint64_t v53 = sub_25746D770(v52);
            swift_bridgeObjectRelease();
            uint64_t v54 = v43;
            uint64_t v55 = 268435472;
            switch(v54)
            {
              case 1:
                uint64_t v55 = 536870928;
                goto LABEL_30;
              case 2:
                uint64_t v55 = 536870944;
                goto LABEL_30;
              case 3:
                uint64_t v55 = 536870976;
                goto LABEL_30;
              case 4:
                uint64_t v55 = 8;
                goto LABEL_30;
              case 5:
                uint64_t v55 = 16;
                goto LABEL_30;
              case 6:
                uint64_t v55 = 32;
                goto LABEL_30;
              case 7:
                uint64_t v55 = 64;
                goto LABEL_30;
              case 8:
                goto LABEL_30;
              case 9:
                uint64_t v55 = 2415919120;
                goto LABEL_30;
              case 10:
                uint64_t v55 = 268435488;
                goto LABEL_30;
              case 11:
                int v124 = 0;
                uint64_t v123 = 60;
                goto LABEL_103;
              case 12:
                uint64_t v55 = 2147483656;
                goto LABEL_30;
              default:
                uint64_t v55 = 536870920;
LABEL_30:
                id v56 = objc_allocWithZone(MEMORY[0x263F13460]);
                id v57 = sub_257545970(v51, v53, v55);
                swift_bridgeObjectRelease();
                uint64_t v58 = swift_unknownObjectRetain();
                MEMORY[0x25A2B83B0](v58);
                if (*(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_2576A7E70();
                }
                sub_2576A7ED0();
                sub_2576A7E20();
                id v59 = v57;
                MEMORY[0x25A2B83B0]();
                if (*(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v167 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_2576A7E70();
                }
                sub_2576A7ED0();
                sub_2576A7E20();

                swift_unknownObjectRelease();
                sub_25753FCD0((uint64_t)&aBlock);
                unint64_t v42 = aBlock;
                unsigned __int8 v43 = v161;
                if (!aBlock) {
                  goto LABEL_35;
                }
                continue;
            }
          }
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_257547A80();
          swift_allocError();
          *uint64_t v108 = 2;
          swift_willThrow();
          swift_setDeallocating();
          swift_bridgeObjectRelease();
          swift_release();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return inited;
        }
      }
      break;
    }
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
LABEL_35:
  uint64_t v159 = v40;
  swift_release();
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  uint64_t v149 = sub_257543448(v168);
  uint64_t v61 = v60;
  uint64_t v62 = *(void **)(v157 + 24);
  sub_2574A4924(0, &qword_26A0035B8);
  uint64_t v63 = (void *)sub_2576A7DE0();
  uint64_t v148 = v61;
  uint64_t v64 = (void *)sub_2576A7DE0();
  id v65 = v140;

  swift_unownedRetainStrong();
  id v66 = sub_2575598D0();
  swift_release();
  objc_msgSend(v65, sel_encodeSignalEvent_value_, v66, a11);
  swift_unknownObjectRelease();
  swift_unownedRetainStrong();
  id v67 = sub_257559930();
  swift_release();
  uint64_t v154 = a11;
  objc_msgSend(v65, sel_encodeSignalEvent_value_, v67, a11);
  swift_unknownObjectRelease();
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = v139;
  uint64_t v164 = nullsub_1;
  uint64_t v165 = v68;
  unint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v161 = 1107296256;
  uint64_t v162 = sub_257542D04;
  int v163 = &block_descriptor_1;
  uint64_t v69 = _Block_copy(&aBlock);
  sub_2576A7810();
  swift_release();
  objc_msgSend(v65, sel_addCompletedHandler_, v69);
  _Block_release(v69);
  objc_msgSend(v65, sel_commit);
  if (qword_26A000900 != -1) {
LABEL_100:
  }
    swift_once();
  uint64_t v70 = sub_2576A75D0();
  uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_26A001FE8);
  uint64_t v72 = v153;
  sub_2576A7590();
  v125[1] = v71;
  uint64_t v73 = sub_2576A75C0();
  os_signpost_type_t v74 = sub_2576A83C0();
  if (sub_2576A8480())
  {
    uint64_t v75 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v75 = 0;
    os_signpost_id_t v76 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v73, v74, v76, "Prepare MPSGraph Outputs", "", v75, 2u);
    MEMORY[0x25A2BAC80](v75, -1, -1);
  }

  uint64_t v77 = v143;
  uint64_t v78 = v138;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v152, v72, v138);
  sub_2576A7610();
  swift_allocObject();
  uint64_t v130 = sub_2576A7600();
  uint64_t v79 = *(void (**)(char *, uint64_t))(v77 + 8);
  uint64_t v143 = v77 + 8;
  uint64_t v126 = v79;
  v79(v72, v78);
  uint64_t v80 = v156;
  uint64_t v153 = *(char **)(v156 + 16);
  if (v153)
  {
    uint64_t v81 = 0;
    v152 = (char *)(v156 + 32);
    unint64_t v151 = v149 & 0xC000000000000001;
    unint64_t v150 = v148 & 0xC000000000000001;
    uint64_t v147 = v149 & 0xFFFFFFFFFFFFFF8;
    uint64_t v145 = v149 + 32;
    uint64_t v146 = v148 & 0xFFFFFFFFFFFFFF8;
    uint64_t v144 = v148 + 32;
    uint64_t inited = MEMORY[0x263F8EE78];
    while (1)
    {
      if ((unint64_t)v81 >= *(void *)(v80 + 16)) {
        goto LABEL_96;
      }
      uint64_t v82 = (uint64_t *)&v152[24 * (void)v81];
      uint64_t v83 = *v82;
      uint64_t v84 = v82[1];
      if (v151)
      {
        sub_2576A7810();
        uint64_t v85 = MEMORY[0x25A2B8DB0](v81, v149);
      }
      else
      {
        if ((unint64_t)v81 >= *(void *)(v147 + 16)) {
          goto LABEL_98;
        }
        uint64_t v85 = *(void *)(v145 + 8 * (void)v81);
        sub_2576A7810();
        swift_unknownObjectRetain();
      }
      if (v150)
      {
        id v86 = (id)MEMORY[0x25A2B8DB0](v81, v148);
      }
      else
      {
        if ((unint64_t)v81 >= *(void *)(v146 + 16)) {
          goto LABEL_99;
        }
        id v86 = *(id *)(v144 + 8 * (void)v81);
      }
      uint64_t v87 = v86;
      sub_2576A7810();
      sub_2575410B8(v83, v84, v155, &aBlock);
      swift_bridgeObjectRelease();
      uint64_t v88 = aBlock;
      uint64_t v89 = *(void *)(aBlock + 16);
      if (v89)
      {
        uint64_t v90 = (uint64_t *)(aBlock + 32);
        uint64_t v91 = 1;
        while (1)
        {
          uint64_t v92 = *v90++;
          uint64_t v93 = v91 * v92;
          if ((unsigned __int128)(v91 * (__int128)v92) >> 64 != (v91 * v92) >> 63) {
            break;
          }
          uint64_t v91 = v93;
          if (!--v89) {
            goto LABEL_55;
          }
        }
        __break(1u);
        goto LABEL_95;
      }
      uint64_t v93 = 1;
LABEL_55:
      sub_2574F946C();
      if (v93 != v94)
      {
        unint64_t aBlock = 0;
        unint64_t v161 = 0xE000000000000000;
        sub_2576A8730();
        swift_bridgeObjectRelease();
        unint64_t aBlock = 0xD00000000000002BLL;
        unint64_t v161 = 0x80000002576CAF10;
        sub_2576A7B00();
        sub_2576A7B00();
        char v166 = 4;
        sub_25746BE6C();
      }
      unint64_t v95 = sub_25746D770(v88);
      swift_bridgeObjectRelease();
      uint64_t v96 = v159;
      sub_257654468(v95);
      unint64_t v98 = v97;
      swift_bridgeObjectRelease();
      unint64_t aBlock = v98;
      unsigned int v99 = objc_msgSend(v87, sel_dataType);
      switch(v99)
      {
        case 0x80000008:
          char v100 = 12;
          break;
        case 0x90000010:
          char v100 = 9;
          break;
        case 8u:
          char v100 = 4;
          break;
        case 0x10u:
          char v100 = 5;
          break;
        case 0x20u:
          char v100 = 6;
          break;
        case 0x40u:
          goto LABEL_78;
        case 0x10000010u:
          char v100 = 8;
          break;
        case 0x10000020u:
          char v100 = 10;
          break;
        case 0x20000008u:
          char v100 = 0;
          break;
        case 0x20000010u:
          char v100 = 1;
          break;
        case 0x20000020u:
          char v100 = 2;
          break;
        case 0x20000040u:
LABEL_78:
          char v100 = 3;
          break;
        default:
          while (1)
          {
            int v124 = 0;
            uint64_t v123 = 35;
LABEL_103:
            sub_2576A8B60();
            __break(1u);
          }
      }
      LOBYTE(v168) = v100;
      uint64_t v101 = v158;
      swift_unownedRetainStrong();
      type metadata accessor for MPSGraphTensorStorage();
      swift_allocObject();
      swift_unknownObjectRetain();
      uint64_t v102 = sub_2575C64C8(&aBlock, (char *)&v168, v85, v154, v101);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v159 = v96;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_257472F20();
        uint64_t inited = v106;
      }
      unint64_t v104 = *(void *)(inited + 16);
      if (v104 >= *(void *)(inited + 24) >> 1)
      {
        sub_257472F20();
        uint64_t inited = v107;
      }
      ++v81;
      *(void *)(inited + 16) = v104 + 1;
      uint64_t v105 = (void *)(inited + 32 * v104);
      v105[4] = v83;
      v105[5] = v84;
      v105[6] = v102;
      v105[7] = &off_270669E00;

      swift_release();
      swift_unknownObjectRelease();
      uint64_t v80 = v156;
      if (v81 == v153) {
        goto LABEL_87;
      }
    }
  }
  uint64_t inited = MEMORY[0x263F8EE78];
LABEL_87:
  unint64_t v109 = sub_2576A75C0();
  uint64_t v110 = v136;
  sub_2576A75F0();
  os_signpost_type_t v111 = sub_2576A83B0();
  if (sub_2576A8480())
  {
    swift_retain();
    uint64_t v112 = v127;
    sub_2576A7620();
    swift_release();
    uint64_t v113 = v128;
    uint64_t v114 = v129;
    if ((*(unsigned int (**)(char *, uint64_t))(v128 + 88))(v112, v129) == *MEMORY[0x263F90238])
    {
      uint64_t v115 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v113 + 8))(v112, v114);
      uint64_t v115 = "";
    }
    uint64_t v110 = v136;
    unint64_t v116 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v116 = 0;
    os_signpost_id_t v117 = sub_2576A7580();
    _os_signpost_emit_with_name_impl(&dword_257455000, v109, v111, v117, "Prepare MPSGraph Outputs", v115, v116, 2u);
    MEMORY[0x25A2BAC80](v116, -1, -1);
  }

  v126(v110, v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  os_signpost_type_t v118 = sub_2576A83B0();
  os_signpost_id_t v119 = sub_2576A7580();
  os_signpost_type_t v120 = v118;
  v121 = v137;
  _os_signpost_emit_with_name_impl(&dword_257455000, v137, v120, v119, v133, v135, v132, v134);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return inited;
}

uint64_t sub_257546DE4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003578);
  uint64_t v6 = sub_2576A8C30();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = v2;
    uint64_t v35 = v5 + 64;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      uint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * i);
      uint64_t v22 = *(void **)(*(void *)(v5 + 56) + 8 * i);
      if ((a2 & 1) == 0)
      {
        id v23 = v21;
        id v24 = v22;
      }
      uint64_t result = sub_2576A8450();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) == 0)
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v25) >> 6;
        while (++v27 != v30 || (v29 & 1) == 0)
        {
          BOOL v31 = v27 == v30;
          if (v27 == v30) {
            unint64_t v27 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v27);
          if (v32 != -1)
          {
            unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return result;
      }
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      *(void *)(*(void *)(v7 + 48) + 8 * v28) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v28) = v22;
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v17 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_41;
      }
      if (v17 >= v11) {
        break;
      }
      uint64_t v18 = (void *)(v5 + 64);
      unint64_t v19 = *(void *)(v35 + 8 * v17);
      ++v14;
      if (!v19)
      {
        int64_t v14 = v17 + 1;
        if (v17 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v35 + 8 * v14);
        if (!v19)
        {
          int64_t v20 = v17 + 2;
          if (v20 >= v11)
          {
LABEL_32:
            swift_release();
            uint64_t v3 = v34;
            if ((a2 & 1) == 0) {
              goto LABEL_39;
            }
            goto LABEL_35;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v14 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_42;
              }
              if (v14 >= v11) {
                goto LABEL_32;
              }
              unint64_t v19 = *(void *)(v35 + 8 * v14);
              ++v20;
              if (v19) {
                goto LABEL_18;
              }
            }
          }
          int64_t v14 = v20;
        }
      }
LABEL_18:
      unint64_t v10 = (v19 - 1) & v19;
    }
    swift_release();
    uint64_t v3 = v34;
    uint64_t v18 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_39;
    }
LABEL_35:
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    if (v33 >= 64) {
      sub_2575E85F4(0, (unint64_t)(v33 + 63) >> 6, v18);
    }
    else {
      *uint64_t v18 = -1 << v33;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_2575470A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0035D0);
  char v35 = a2;
  uint64_t v6 = sub_2576A8C30();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  if (!v10) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v12 << 6))
  {
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * i);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * i);
    if ((v35 & 1) == 0)
    {
      sub_2576A7810();
      swift_retain();
    }
    sub_2576A9090();
    sub_2576A78E0();
    unint64_t v23 = sub_2576A9100() & ~(-1 << *(unsigned char *)(v7 + 32));
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_3_34();
      while (++v25 != v26 || (v24 & 1) == 0)
      {
        BOOL v27 = v25 == v26;
        if (v25 == v26) {
          uint64_t v25 = 0;
        }
        v24 |= v27;
        if (*(void *)(v11 + 8 * v25) != -1)
        {
          OUTLINED_FUNCTION_2_36();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_4_36();
LABEL_30:
    OUTLINED_FUNCTION_5_31();
    *(void *)(v11 + v28) |= v29;
    BOOL v31 = (void *)(*(void *)(v7 + 48) + 16 * v30);
    *BOOL v31 = v21;
    v31[1] = v20;
    *(void *)(*(void *)(v7 + 56) + 8 * v30) = v22;
    ++*(void *)(v7 + 16);
    if (v10) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v33)
    {
      swift_release();
      uint64_t v16 = (void *)(v5 + 64);
      goto LABEL_34;
    }
    uint64_t v16 = (void *)(v5 + 64);
    unint64_t v17 = *(void *)(v34 + 8 * v15);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v33) {
        goto LABEL_32;
      }
      unint64_t v17 = *(void *)(v34 + 8 * v12);
      if (!v17) {
        break;
      }
    }
LABEL_18:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v15 + 2;
  if (v18 < v33)
  {
    unint64_t v17 = *(void *)(v34 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v12 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          goto LABEL_42;
        }
        if (v12 >= v33) {
          goto LABEL_32;
        }
        unint64_t v17 = *(void *)(v34 + 8 * v12);
        ++v18;
        if (v17) {
          goto LABEL_18;
        }
      }
    }
    int64_t v12 = v18;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
LABEL_34:
  if (v35)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
    if (v32 >= 64) {
      sub_2575E85F4(0, (unint64_t)(v32 + 63) >> 6, v16);
    }
    else {
      *uint64_t v16 = -1 << v32;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  swift_release();
  *uint64_t v3 = v7;
}

void sub_257547380(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v48 = sub_2576A73C0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_8_0();
  uint64_t v47 = v9 - v8;
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001AA0);
  char v46 = a2;
  uint64_t v11 = sub_2576A8C30();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_40;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  unsigned __int8 v43 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & *(void *)(v10 + 64);
  int64_t v42 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v44 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v16 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v17 = v11 + 64;
  swift_retain();
  int64_t v18 = 0;
  if (!v15) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v18 << 6))
  {
    uint64_t v25 = *(void *)(v10 + 56);
    uint64_t v26 = v10;
    BOOL v27 = (uint64_t *)(*(void *)(v10 + 48) + 16 * i);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = *(void *)(v45 + 72);
    uint64_t v31 = v25 + v30 * i;
    if (v46)
    {
      (*v16)(v47, v31, v48);
    }
    else
    {
      (*v44)(v47, v31, v48);
      sub_2576A7810();
    }
    sub_2576A9090();
    sub_2576A78E0();
    unint64_t v32 = sub_2576A9100() & ~(-1 << *(unsigned char *)(v12 + 32));
    if (((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6))) == 0)
    {
      OUTLINED_FUNCTION_3_34();
      while (++v34 != v35 || (v33 & 1) == 0)
      {
        BOOL v36 = v34 == v35;
        if (v34 == v35) {
          uint64_t v34 = 0;
        }
        v33 |= v36;
        if (*(void *)(v17 + 8 * v34) != -1)
        {
          OUTLINED_FUNCTION_2_36();
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    OUTLINED_FUNCTION_4_36();
LABEL_31:
    OUTLINED_FUNCTION_5_31();
    *(void *)(v17 + v37) |= v38;
    uint64_t v40 = (void *)(*(void *)(v12 + 48) + 16 * v39);
    void *v40 = v28;
    v40[1] = v29;
    (*v16)(*(void *)(v12 + 56) + v30 * v39, v47, v48);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v26;
    if (v15) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_42;
    }
    if (v21 >= v42)
    {
      swift_release();
      uint64_t v3 = v2;
      uint64_t v22 = v43;
      goto LABEL_35;
    }
    uint64_t v22 = v43;
    unint64_t v23 = v43[v21];
    ++v18;
    if (!v23)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v18];
      if (!v23) {
        break;
      }
    }
LABEL_18:
    unint64_t v15 = (v23 - 1) & v23;
  }
  int64_t v24 = v21 + 2;
  if (v24 < v42)
  {
    unint64_t v23 = v43[v24];
    if (!v23)
    {
      while (1)
      {
        int64_t v18 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_43;
        }
        if (v18 >= v42) {
          goto LABEL_33;
        }
        unint64_t v23 = v43[v18];
        ++v24;
        if (v23) {
          goto LABEL_18;
        }
      }
    }
    int64_t v18 = v24;
    goto LABEL_18;
  }
LABEL_33:
  swift_release();
  uint64_t v3 = v2;
LABEL_35:
  if (v46)
  {
    uint64_t v41 = 1 << *(unsigned char *)(v10 + 32);
    if (v41 >= 64) {
      sub_2575E85F4(0, (unint64_t)(v41 + 63) >> 6, v22);
    }
    else {
      *uint64_t v22 = -1 << v41;
    }
    *(void *)(v10 + 16) = 0;
  }
LABEL_40:
  swift_release();
  *uint64_t v3 = v12;
}

uint64_t sub_2575476FC(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003578);
  uint64_t v2 = sub_2576A8C40();
  uint64_t v17 = v2;
  sub_2576A8B10();
  uint64_t v3 = sub_2576A8B40();
  if (!v3)
  {
LABEL_16:
    swift_release();
    return v2;
  }
  uint64_t v4 = v3;
  sub_2574A4924(0, (unint64_t *)&qword_26A000E80);
  while (1)
  {
    swift_dynamicCast();
    sub_2574A4924(0, &qword_26A003560);
    swift_dynamicCast();
    uint64_t v2 = v17;
    unint64_t v5 = *(void *)(v17 + 16);
    if (*(void *)(v17 + 24) <= v5)
    {
      sub_257546DE4(v5 + 1, 1);
      uint64_t v2 = v17;
    }
    uint64_t result = sub_2576A8450();
    uint64_t v7 = v2 + 64;
    uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    if (((-1 << v9) & ~*(void *)(v2 + 64 + 8 * (v9 >> 6))) == 0) {
      break;
    }
    unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v2 + 64 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v2 + 48) + 8 * v11) = v16;
    *(void *)(*(void *)(v2 + 56) + 8 * v11) = v4;
    ++*(void *)(v2 + 16);
    uint64_t v4 = sub_2576A8B40();
    if (!v4) {
      goto LABEL_16;
    }
  }
  char v12 = 0;
  unint64_t v13 = (unint64_t)(63 - v8) >> 6;
  while (++v10 != v13 || (v12 & 1) == 0)
  {
    BOOL v14 = v10 == v13;
    if (v10 == v13) {
      unint64_t v10 = 0;
    }
    v12 |= v14;
    uint64_t v15 = *(void *)(v7 + 8 * v10);
    if (v15 != -1)
    {
      unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

id sub_25754793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = (void *)sub_2576A79C0();
  id v9 = objc_msgSend(a5, sel_placeholderWithShape_dataType_name_, a1, a2, v8);

  return v9;
}

uint64_t sub_2575479AC(void *a1, SEL *a2, unint64_t *a3)
{
  id v4 = [a1 *a2];
  if (!v4) {
    return 0;
  }
  unint64_t v5 = v4;
  sub_2574A4924(0, a3);
  uint64_t v6 = sub_2576A7DF0();

  return v6;
}

unint64_t sub_257547A20()
{
  unint64_t result = qword_26A003568;
  if (!qword_26A003568)
  {
    sub_2574A4924(255, (unint64_t *)&qword_26A000E80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003568);
  }
  return result;
}

unint64_t sub_257547A80()
{
  unint64_t result = qword_26A003580;
  if (!qword_26A003580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003580);
  }
  return result;
}

void sub_257547ACC(_OWORD *a1@<X8>)
{
  sub_257542044(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_257547AEC()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_257547B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_2575431D8(a1, a2, *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(uint64_t **)(v3 + 48), a3);
}

uint64_t sub_257547B60(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3 >> 62;
  if (a3 >> 62 == 2)
  {
LABEL_5:
    return swift_release();
  }
  if (v4 != 1)
  {
    if (v4) {
      return result;
    }
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_257547BC4(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *a3;
  *(void *)(v5 + 16) = result + 1;
  uint64_t v6 = v5 + 16 * result;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a5;
  return result;
}

unsigned char *storeEnumTagSinglePayload for MPSGraphExecutor.ExecutionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257547CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPSGraphExecutor.ExecutionError()
{
  return &type metadata for MPSGraphExecutor.ExecutionError;
}

unint64_t sub_257547CE8()
{
  unint64_t result = qword_26A0035D8[0];
  if (!qword_26A0035D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0035D8);
  }
  return result;
}

uint64_t Sequential.isEveryParameterInitialized.getter(uint64_t a1)
{
  OUTLINED_FUNCTION_0_10();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  uint64_t v8 = v7 - v6;
  char v10 = (*(uint64_t (**)(void))(*(void *)(v9 + 32) + 48))(*(void *)(v9 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v8, v1, a1);
  if (v10) {
    char v11 = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 48))(*(void *)(a1 + 24));
  }
  else {
    char v11 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, a1);
  return v11 & 1;
}

uint64_t Sequential.init(_:_:)()
{
  OUTLINED_FUNCTION_23_17();
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 32))(v2);
  uint64_t v4 = type metadata accessor for Sequential();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 32))(v2 + *(int *)(v4 + 52), v1, v0);
}

uint64_t type metadata accessor for Sequential()
{
  return swift_getGenericMetadata();
}

uint64_t Sequential.init(layers:)(uint64_t (*a1)(void))
{
  return a1();
}

void Sequential.initializeParameters(for:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v1;
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v15 = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_21_20();
  uint64_t v8 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v12 = v11;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v13);
  OUTLINED_FUNCTION_30_12();
  Layer.callAsFunction(_:)(v15, v4, v14);
  Layer.callAsFunction(_:)(v0, v9, v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, AssociatedTypeWitness);
  (*(void (**)(void *, uint64_t))(v12 + 8))(&associated type descriptor for Layer.Output, v10);
  OUTLINED_FUNCTION_8_21();
}

void Sequential.forward(_:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_30_12();
  Layer.callAsFunction(_:)(v4, v6, v5);
  Layer.callAsFunction(_:)(v0, *(void *)(v2 + 24), *(void *)(v2 + 40));
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, AssociatedTypeWitness);
  OUTLINED_FUNCTION_8_21();
}

uint64_t sub_2575481C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x31726579616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x32726579616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2575482AC(char a1)
{
  if (a1) {
    return 0x32726579616CLL;
  }
  else {
    return 0x31726579616CLL;
  }
}

BOOL sub_2575482D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25747A6C8(*a1, *a2);
}

uint64_t sub_2575482EC()
{
  return sub_25747A7E4();
}

uint64_t sub_257548300()
{
  return sub_257470648();
}

uint64_t sub_257548314()
{
  return sub_2576A9100();
}

uint64_t sub_257548360()
{
  return sub_2575482AC(*v0);
}

uint64_t sub_257548374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2575481C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2575483A8()
{
  return sub_25747A82C();
}

uint64_t sub_2575483D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257478A88();
  *a1 = result;
  return result;
}

uint64_t sub_257548408(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_25754845C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void Sequential.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_22();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v26 = sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v28 = v27;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&a9 - v30;
  uint64_t v32 = *(void *)(v25 + 24);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v33);
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_0_10();
  uint64_t v35 = v34;
  MEMORY[0x270FA5388](v36);
  OUTLINED_FUNCTION_8_0();
  uint64_t v39 = v38 - v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v21, v20 + *(int *)(v25 + 52), v32);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v25);
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v39, v31, v25);
    uint64_t v41 = Sequential.count.getter(v25);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v39, v25);
    if (!__OFADD__(v41, 1)) {
      goto LABEL_6;
    }
    __break(1u);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v31, 1, 1, v25);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v26);
LABEL_6:
  OUTLINED_FUNCTION_8_21();
}

uint64_t Sequential.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_2575486A0(a1, 0, a2, a3);
}

uint64_t sub_2575486A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = sub_2576A84C0();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *(void *)(a3 + 24);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 - 8);
  __n128 v21 = MEMORY[0x270FA5388](v17);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  if (a1 == a2)
  {
    uint64_t v24 = *(void *)(a3 + 16);
    uint64_t v25 = *(void *)(a3 + 32);
    a4[3] = v24;
    a4[4] = v25;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
    return v27(boxed_opaque_existential_0, v4, v24);
  }
  else
  {
    uint64_t v29 = v20;
    uint64_t v31 = v18;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16))(v15, v4 + *(int *)(a3 + 52), v12, v21);
    if (swift_dynamicCast())
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, a3);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v11, a3);
      if (!__OFADD__(a2, 1))
      {
        sub_2575486A0(v32, a2 + 1, a3);
        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, a3);
      }
      __break(1u);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
    uint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_2576A8730();
    swift_bridgeObjectRelease();
    uint64_t v34 = 0x60207865646E49;
    unint64_t v35 = 0xE700000000000000;
    uint64_t v33 = v32;
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t result = sub_2576A8B60();
    __break(1u);
  }
  return result;
}

uint64_t Sequential.removingLast()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

void Layer.appending<A>(_:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v4);
  OUTLINED_FUNCTION_32_11();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v6, v2);
  uint64_t v7 = OUTLINED_FUNCTION_25_16();
  v8(v7);
  OUTLINED_FUNCTION_20_20();
  OUTLINED_FUNCTION_8_21();
}

uint64_t Sequential<>.encode(to:)(void *a1)
{
  type metadata accessor for Sequential.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_2576A8E70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_21_20();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2576A9230();
  sub_2576A8E40();
  if (!v8) {
    sub_2576A8E40();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
}

uint64_t type metadata accessor for Sequential.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t Sequential<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v45 = a7;
  uint64_t v50 = a5;
  uint64_t v43 = a8;
  OUTLINED_FUNCTION_0_10();
  uint64_t v42 = v13;
  MEMORY[0x270FA5388](v14);
  OUTLINED_FUNCTION_3_3();
  uint64_t v44 = v15;
  OUTLINED_FUNCTION_0_10();
  uint64_t v47 = v16;
  MEMORY[0x270FA5388](v17);
  OUTLINED_FUNCTION_3_3();
  uint64_t v51 = v18;
  type metadata accessor for Sequential.CodingKeys();
  swift_getWitnessTable();
  uint64_t v53 = sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v46 = v19;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t v48 = a3;
  uint64_t v49 = a2;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v57 = a6;
  uint64_t v23 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v41 = v24;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v40 - v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v52 = v22;
  uint64_t v28 = v58;
  sub_2576A91F0();
  if (v28) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v47;
  uint64_t v29 = v48;
  uint64_t v31 = v27;
  LOBYTE(v54) = 0;
  uint64_t v32 = v49;
  sub_2576A8D50();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
  uint64_t v58 = v31;
  v33(v31, v51, v32);
  LOBYTE(v54) = 1;
  uint64_t v34 = v44;
  sub_2576A8D50();
  uint64_t v35 = OUTLINED_FUNCTION_38_7();
  v36(v35);
  uint64_t v37 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(&v58[*(int *)(v23 + 52)], v34, v29);
  uint64_t v38 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 16))(v43, v37, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v23);
}

uint64_t sub_25754908C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Sequential<>.init(from:)(a1, a2[2], a2[3], a2[4], *(void *)(a3 - 8), a2[5], *(void *)(a3 - 24), a4);
}

uint64_t sub_2575490C0(void *a1)
{
  return Sequential<>.encode(to:)(a1);
}

uint64_t _s14NeuralNetworks17SequentialBuilderV24buildLimitedAvailabilityyxxAA5LayerRzlFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

void static SequentialBuilder.buildBlock<A, B>(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_23_17();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v1);
  OUTLINED_FUNCTION_36_3();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_32_11();
  (*(void (**)(uint64_t))(v3 + 16))(v0);
  uint64_t v4 = OUTLINED_FUNCTION_25_16();
  v5(v4);
  OUTLINED_FUNCTION_20_20();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C>(_:_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v23 = v1;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v24 = v6;
  OUTLINED_FUNCTION_0_10();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_8_0();
  uint64_t v12 = v11 - v10;
  OUTLINED_FUNCTION_0_10();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_8_0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v21 = v20;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v22);
  OUTLINED_FUNCTION_33_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v18, v23, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v24, v3);
  Sequential.init(_:_:)();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0, v19);
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D>(_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v62 = v24;
  uint64_t v63 = v25;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v58 = v30;
  uint64_t v59 = v31;
  uint64_t v60 = v32;
  uint64_t v61 = a24;
  v56[1] = a23;
  v56[2] = v26;
  v56[3] = v33;
  OUTLINED_FUNCTION_0_10();
  v56[9] = v35;
  uint64_t v57 = v34;
  v56[7] = a21;
  v56[8] = a22;
  MEMORY[0x270FA5388](v34);
  OUTLINED_FUNCTION_11_28(v36, v56[0]);
  OUTLINED_FUNCTION_0_10();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  OUTLINED_FUNCTION_8_0();
  uint64_t v42 = v41 - v40;
  uint64_t v43 = OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_0_10();
  v56[5] = v44;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v45);
  OUTLINED_FUNCTION_33_9();
  v56[4] = (uint64_t)&protocol conformance descriptor for Sequential<A, B>;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v64 = v43;
  uint64_t v65 = v27;
  uint64_t v47 = OUTLINED_FUNCTION_15_20(WitnessTable);
  OUTLINED_FUNCTION_0_10();
  uint64_t v49 = v48;
  OUTLINED_FUNCTION_44_0();
  __n128 v51 = MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)v56 - v52;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v38 + 16))(v42, v57, v29, v51);
  OUTLINED_FUNCTION_9_32();
  v54();
  Sequential.init(_:_:)();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v55();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v53, v47);
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E>(_:_:_:_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v1 = v0;
  uint64_t v27 = v2;
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_11_28(v4, v26);
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_31_10();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v10);
  OUTLINED_FUNCTION_33_9();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v11);
  OUTLINED_FUNCTION_37_6();
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  __n128 v13 = MEMORY[0x270FA5388](v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16))(v9, v27, v1, v13);
  OUTLINED_FUNCTION_9_32();
  v22(v14, v15, v16, v17, v18, v19, v20, v21, WitnessTable);
  Sequential.init(_:_:)();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v23();
  OUTLINED_FUNCTION_26_15();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v24();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v25();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F>(_:_:_:_:_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v0);
  OUTLINED_FUNCTION_11_28(v1, v15);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v2);
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v3);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v4);
  swift_getWitnessTable();
  type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v6);
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_15_20(WitnessTable);
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_37_6();
  swift_getWitnessTable();
  type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_9_32();
  v9();
  OUTLINED_FUNCTION_9_32();
  v10();
  OUTLINED_FUNCTION_28_12();
  Sequential.init(_:_:)();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v11();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v12();
  OUTLINED_FUNCTION_10_23();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_14_0();
  v13();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v14();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v90 = v33;
  uint64_t v101 = v34;
  uint64_t v102 = v35;
  uint64_t v99 = v36;
  uint64_t v100 = v37;
  uint64_t v97 = v38;
  uint64_t v98 = v39;
  uint64_t v103 = v40;
  uint64_t v105 = a33;
  uint64_t v106 = v41;
  uint64_t v104 = a26;
  v70[1] = a25;
  uint64_t v107 = a32;
  uint64_t v75 = a31;
  uint64_t v74 = a24;
  uint64_t v82 = a23;
  uint64_t v83 = a30;
  uint64_t v88 = a29;
  uint64_t v87 = a22;
  OUTLINED_FUNCTION_0_10();
  uint64_t v96 = v42;
  uint64_t v92 = a27;
  uint64_t v93 = a28;
  MEMORY[0x270FA5388](v43);
  OUTLINED_FUNCTION_3_3();
  uint64_t v95 = v44;
  OUTLINED_FUNCTION_0_10();
  uint64_t v91 = v45;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v47);
  uint64_t v85 = OUTLINED_FUNCTION_16_23();
  OUTLINED_FUNCTION_0_10();
  uint64_t v94 = v48;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v49);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v50);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v80 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v89 = v51;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_8_32();
  uint64_t v78 = v53;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v108 = v80;
  uint64_t v109 = a23;
  uint64_t v110 = v81;
  uint64_t v111 = a30;
  uint64_t v54 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v84 = v55;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v56);
  uint64_t v72 = (char *)v70 - v57;
  uint64_t v77 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v108 = v54;
  uint64_t v109 = a24;
  uint64_t v110 = v73;
  uint64_t v111 = a31;
  uint64_t v58 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v79 = v59;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_21_20();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v108 = v58;
  uint64_t v109 = a25;
  OUTLINED_FUNCTION_13_22(v71);
  OUTLINED_FUNCTION_0_10();
  uint64_t v76 = v61;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v62);
  OUTLINED_FUNCTION_9_32();
  v63();
  OUTLINED_FUNCTION_9_32();
  v64();
  Sequential.init(_:_:)();
  OUTLINED_FUNCTION_26_15();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v65();
  OUTLINED_FUNCTION_24_17();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_14_0();
  v66();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_14_0();
  v67();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v68();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_41_6();
  OUTLINED_FUNCTION_14_0();
  v69();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H>(_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v116 = v36;
  uint64_t v117 = v37;
  uint64_t v114 = v38;
  uint64_t v115 = v39;
  uint64_t v112 = v40;
  uint64_t v113 = v41;
  uint64_t v111 = v42;
  uint64_t v119 = v43;
  uint64_t v120 = a36;
  uint64_t v121 = v44;
  uint64_t v118 = a28;
  uint64_t v122 = a27;
  uint64_t v123 = a35;
  uint64_t v82 = a34;
  uint64_t v89 = a33;
  uint64_t v81 = a26;
  uint64_t v88 = a25;
  uint64_t v95 = a32;
  uint64_t v100 = a31;
  uint64_t v94 = a24;
  uint64_t v99 = a23;
  uint64_t v104 = a22;
  OUTLINED_FUNCTION_0_10();
  uint64_t v110 = v45;
  uint64_t v107 = a30;
  uint64_t v106 = a29;
  MEMORY[0x270FA5388](v46);
  OUTLINED_FUNCTION_3_3();
  uint64_t v109 = v47;
  uint64_t v103 = v48;
  OUTLINED_FUNCTION_0_10();
  uint64_t v105 = v49;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_3_3();
  uint64_t v102 = v51;
  uint64_t v97 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_10();
  uint64_t v108 = v52;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v53);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v54);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v92 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v101 = v55;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v56);
  OUTLINED_FUNCTION_8_32();
  uint64_t v90 = v57;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v124 = v92;
  uint64_t v125 = a24;
  uint64_t v126 = v93;
  uint64_t v127 = a32;
  uint64_t v86 = OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  uint64_t v96 = v58;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v59);
  uint64_t v87 = OUTLINED_FUNCTION_22_19((uint64_t)&v78 - v60);
  uint64_t v124 = a32;
  uint64_t v125 = a25;
  uint64_t v126 = v87;
  uint64_t v127 = a33;
  uint64_t v61 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v91 = v62;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_29_12(v64, v78);
  uint64_t v84 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v80 = swift_getWitnessTable();
  uint64_t v124 = v61;
  uint64_t v125 = a26;
  uint64_t v65 = OUTLINED_FUNCTION_15_20(v80);
  OUTLINED_FUNCTION_0_10();
  uint64_t v85 = v66;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v67);
  uint64_t v79 = swift_getWitnessTable();
  uint64_t v124 = v65;
  uint64_t v125 = v122;
  OUTLINED_FUNCTION_13_22(v79);
  OUTLINED_FUNCTION_0_10();
  uint64_t v83 = v68;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_21_20();
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_9_32();
  v70();
  OUTLINED_FUNCTION_9_32();
  v71();
  Sequential.init(_:_:)();
  OUTLINED_FUNCTION_28_12();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v72();
  OUTLINED_FUNCTION_19_19();
  OUTLINED_FUNCTION_10_23();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v73();
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_14_26();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v74();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_41_6();
  OUTLINED_FUNCTION_14_0();
  v75();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_27_13();
  OUTLINED_FUNCTION_14_0();
  v76();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v77();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H, I>(_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v123 = v40;
  uint64_t v124 = v41;
  uint64_t v121 = v42;
  uint64_t v122 = v43;
  uint64_t v119 = v44;
  uint64_t v120 = v45;
  uint64_t v118 = v46;
  uint64_t v128 = v47;
  uint64_t v126 = v48;
  uint64_t v127 = a30;
  uint64_t v132 = a29;
  uint64_t v133 = a38;
  uint64_t v131 = a37;
  uint64_t v129 = a39;
  uint64_t v130 = a28;
  uint64_t v93 = a27;
  uint64_t v94 = a36;
  uint64_t v99 = a35;
  uint64_t v98 = a26;
  uint64_t v103 = a25;
  uint64_t v104 = a34;
  uint64_t v109 = a33;
  uint64_t v115 = a32;
  uint64_t v114 = a31;
  uint64_t v108 = a24;
  uint64_t v112 = a23;
  OUTLINED_FUNCTION_0_10();
  uint64_t v117 = v49;
  uint64_t v125 = a21;
  MEMORY[0x270FA5388](v50);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v51);
  uint64_t v111 = v52;
  OUTLINED_FUNCTION_0_10();
  uint64_t v113 = v53;
  MEMORY[0x270FA5388](v54);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v55);
  uint64_t v106 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_10();
  uint64_t v116 = v56;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v57);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v58);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint32_t v134 = v39;
  uint64_t v135 = a24;
  uint64_t v136 = WitnessTable;
  uint64_t v137 = a33;
  uint64_t v101 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_10();
  uint64_t v110 = v59;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_19_12((uint64_t)v86 - v61);
  uint64_t v102 = swift_getWitnessTable();
  uint32_t v134 = v39;
  uint64_t v135 = a25;
  uint64_t v136 = v102;
  uint64_t v137 = a34;
  uint64_t v96 = OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  uint64_t v105 = v62;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v63);
  OUTLINED_FUNCTION_8_32();
  uint64_t v97 = OUTLINED_FUNCTION_22_19(v64);
  uint32_t v134 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v135 = a26;
  uint64_t v136 = v97;
  uint64_t v137 = a35;
  uint64_t v91 = OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  uint64_t v100 = v65;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_8_32();
  uint64_t v92 = OUTLINED_FUNCTION_22_19(v67);
  uint32_t v134 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v135 = a27;
  uint64_t v68 = OUTLINED_FUNCTION_15_20(v92);
  OUTLINED_FUNCTION_0_10();
  uint64_t v95 = v69;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v70);
  OUTLINED_FUNCTION_8_32();
  v86[1] = v71;
  uint64_t v89 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v87 = swift_getWitnessTable();
  uint32_t v134 = (void *)v68;
  uint64_t v135 = v130;
  uint64_t v72 = OUTLINED_FUNCTION_40_6(v87);
  OUTLINED_FUNCTION_0_10();
  uint64_t v90 = v73;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v74);
  OUTLINED_FUNCTION_30_12();
  v86[0] = swift_getWitnessTable();
  uint32_t v134 = (void *)v72;
  uint64_t v135 = v132;
  OUTLINED_FUNCTION_13_22(v86[0]);
  OUTLINED_FUNCTION_0_10();
  uint64_t v88 = v75;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_9_32();
  v77();
  OUTLINED_FUNCTION_9_32();
  v78();
  Sequential.init(_:_:)();
  OUTLINED_FUNCTION_24_17();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v79();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v80();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v81();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v82();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v83();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_14_0();
  v84();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_14_0();
  v85();
  OUTLINED_FUNCTION_8_21();
}

void static SequentialBuilder.buildBlock<A, B, C, D, E, F, G, H, I, J>(_:_:_:_:_:_:_:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v138 = v42;
  uint64_t v139 = v43;
  uint64_t v136 = v44;
  uint64_t v137 = v45;
  uint64_t v134 = v46;
  uint64_t v135 = v47;
  uint64_t v133 = v48;
  uint64_t v132 = v49;
  uint64_t v143 = v50;
  uint64_t v140 = a21;
  uint64_t v141 = a32;
  uint64_t v142 = a22;
  uint64_t v149 = a31;
  uint64_t v150 = a41;
  uint64_t v146 = a39;
  uint64_t v147 = a30;
  uint64_t v148 = a40;
  uint64_t v144 = a42;
  uint64_t v145 = a29;
  uint64_t v106 = a38;
  uint64_t v111 = a37;
  uint64_t v105 = a28;
  uint64_t v110 = a27;
  uint64_t v117 = a36;
  uint64_t v122 = a35;
  uint64_t v126 = a24;
  OUTLINED_FUNCTION_0_10();
  uint64_t v131 = v51;
  uint64_t v116 = a26;
  uint64_t v121 = a25;
  uint64_t v129 = a34;
  uint64_t v128 = a33;
  MEMORY[0x270FA5388](v52);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_19_12(v53);
  uint64_t v125 = v54;
  OUTLINED_FUNCTION_0_10();
  uint64_t v127 = v55;
  MEMORY[0x270FA5388](v56);
  OUTLINED_FUNCTION_3_3();
  uint64_t v124 = v57;
  uint64_t v58 = type metadata accessor for Sequential();
  uint64_t v119 = v58;
  OUTLINED_FUNCTION_0_10();
  uint64_t v130 = v59;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v60);
  OUTLINED_FUNCTION_8_32();
  OUTLINED_FUNCTION_19_12(v61);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v151 = v58;
  uint64_t v152 = a25;
  uint64_t v153 = WitnessTable;
  uint64_t v154 = a35;
  uint64_t v114 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_10();
  uint64_t v123 = v62;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v63);
  uint64_t v112 = (char *)&v93 - v64;
  uint64_t v115 = swift_getWitnessTable();
  uint64_t v151 = v58;
  uint64_t v152 = a26;
  uint64_t v153 = v115;
  uint64_t v154 = a36;
  uint64_t v108 = OUTLINED_FUNCTION_7_29();
  OUTLINED_FUNCTION_0_10();
  uint64_t v118 = v65;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v66);
  OUTLINED_FUNCTION_29_12(v67, v93);
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v151 = v58;
  uint64_t v152 = a27;
  uint64_t v153 = v109;
  uint64_t v154 = a37;
  uint64_t v103 = OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  uint64_t v113 = v68;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v69);
  OUTLINED_FUNCTION_8_32();
  uint64_t v104 = OUTLINED_FUNCTION_39_8(v70);
  uint64_t v151 = a37;
  uint64_t v152 = a28;
  uint64_t v153 = v104;
  uint64_t v154 = a38;
  uint64_t v100 = OUTLINED_FUNCTION_6_33();
  OUTLINED_FUNCTION_0_10();
  uint64_t v107 = v71;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v72);
  OUTLINED_FUNCTION_8_32();
  uint64_t v101 = OUTLINED_FUNCTION_39_8(v73);
  uint64_t v151 = a37;
  uint64_t v152 = v145;
  uint64_t v153 = v101;
  uint64_t v154 = v146;
  uint64_t v74 = type metadata accessor for Sequential();
  OUTLINED_FUNCTION_0_10();
  uint64_t v102 = v75;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v76);
  OUTLINED_FUNCTION_8_32();
  uint64_t v95 = v77;
  uint64_t v98 = &protocol conformance descriptor for Sequential<A, B>;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v151 = v74;
  uint64_t v152 = v147;
  uint64_t v78 = OUTLINED_FUNCTION_40_6(v96);
  OUTLINED_FUNCTION_0_10();
  uint64_t v99 = v79;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v80);
  uint64_t v94 = swift_getWitnessTable();
  uint64_t v151 = v78;
  uint64_t v152 = v149;
  OUTLINED_FUNCTION_13_22(v94);
  OUTLINED_FUNCTION_0_10();
  uint64_t v97 = v81;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v82);
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_9_32();
  v83();
  OUTLINED_FUNCTION_34_9();
  OUTLINED_FUNCTION_9_32();
  v84();
  Sequential.init(_:_:)();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_10_23();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v85();
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_14_26();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v86();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v87();
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v88();
  OUTLINED_FUNCTION_36_8();
  OUTLINED_FUNCTION_19_19();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v89();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v90();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_14_0();
  v91();
  swift_getWitnessTable();
  Layer.appending<A>(_:)();
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_14_0();
  v92();
  OUTLINED_FUNCTION_8_21();
}

uint64_t Array<A>.callAsFunction(_:)()
{
  return sub_2576A7CE0();
}

uint64_t sub_25754B780(uint64_t a1)
{
  return Layer.callAsFunction(_:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_25754B7B4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 24) = result;
  return result;
}

uint64_t sub_25754B7F0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_25754B8C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_25754BA98(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25754BD24);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

ValueMetadata *type metadata accessor for SequentialBuilder()
{
  return &type metadata for SequentialBuilder;
}

unsigned char *sub_25754BD5C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25754BE28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25754BE50()
{
  return swift_getWitnessTable();
}

uint64_t sub_25754BE6C()
{
  return swift_getWitnessTable();
}

uint64_t sub_25754BE88()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_6_33()
{
  return type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_7_29()
{
  return type metadata accessor for Sequential();
}

void OUTLINED_FUNCTION_11_28(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_13_22(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 128);
  *(void *)(v1 - 104) = a1;
  *(void *)(v1 - 96) = v3;
  return type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_15_20(uint64_t a1)
{
  *(void *)(v2 - 104) = a1;
  *(void *)(v2 - 96) = v1;
  return type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_16_23()
{
  *(void *)(v2 - 104) = v1;
  *(void *)(v2 - 96) = v0;
  return type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_20_20()
{
  return Sequential.init(_:_:)();
}

uint64_t OUTLINED_FUNCTION_22_19@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_25_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_13()
{
  return v0;
}

void OUTLINED_FUNCTION_29_12(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 496) = (char *)&a2 - a1;
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_7()
{
  return *(void *)(v0 - 128);
}

uint64_t OUTLINED_FUNCTION_39_8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_40_6(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 144);
  *(void *)(v1 - 104) = a1;
  *(void *)(v1 - 96) = v3;
  return type metadata accessor for Sequential();
}

uint64_t OUTLINED_FUNCTION_41_6()
{
  return v0;
}

uint64_t ResolutionDescriptor.init(traverseCapturedDependencies:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = result;
  *(void *)(a2 + 8) = MEMORY[0x263F8EE88];
  return result;
}

uint64_t ResolutionDescriptor.isTraversingCapturedDependencies.getter()
{
  return *v0;
}

ValueMetadata *type metadata accessor for ResolutionDescriptor()
{
  return &type metadata for ResolutionDescriptor;
}

uint64_t sub_25754C1DC@<X0>(float *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 128);
  if (v3 == 1)
  {
    unsigned int v4 = (unsigned int *)MEMORY[0x263F8CB48];
  }
  else
  {
    if (v3 != 2)
    {
      sub_25753D7B8();
      sub_2575B5BC0(1);
      sub_25746BE6C();
    }
    float v5 = *(float *)(v1 + 132);
    if (*(unsigned char *)(v1 + 136)) {
      float v5 = 0.0;
    }
    *a1 = v5;
    unsigned int v4 = (unsigned int *)MEMORY[0x263F8CB40];
  }
  uint64_t v6 = *v4;
  uint64_t v7 = sub_2576A6BF0();
  uint64_t v8 = *(uint64_t (**)(float *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
  return v8(a1, v6, v7);
}

void sub_25754C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void (*v43)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t);
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  void v74[2];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84[13];
  char v85;
  uint64_t v86;
  char v87;

  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v25 = v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v27 = OUTLINED_FUNCTION_24_9(v26);
  MEMORY[0x270FA5388](v27);
  OUTLINED_FUNCTION_6_2();
  uint64_t v81 = v28;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v29);
  uint64_t v80 = (char *)v74 - v30;
  uint64_t v79 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v32 = v31;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v74 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)v74 - v37;
  uint64_t v39 = sub_2575CA350();
  if (sub_2574BAF20(v39, v25))
  {
    uint64_t v41 = v40;
    uint64_t v77 = v21;
    uint64_t v82 = v35;
    uint64_t v83 = v38;
    uint64_t v78 = v32;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v43 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 16);
    v43(v84, ObjectType, v41);
    uint64_t v44 = *(void *)(v84[0] + 16);
    swift_bridgeObjectRelease();
    uint64_t v45 = v41;
    if (v44 < 2)
    {
      uint64_t v47 = v41;
      uint64_t v46 = ObjectType;
      uint64_t v76 = 1;
    }
    else
    {
      uint64_t v46 = ObjectType;
      uint64_t v47 = v45;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v43)(&v86, ObjectType);
      if (!*(void *)(v86 + 16))
      {
        OUTLINED_FUNCTION_1_54();
        OUTLINED_FUNCTION_2_37();
      }
      uint64_t v76 = *(void *)(v86 + 32);
      swift_bridgeObjectRelease();
    }
    type metadata accessor for NativeTensorStorage();
    uint64_t v75 = v20;
    sub_2575320DC((uint64_t)v84);
    OUTLINED_FUNCTION_10_24();
    uint64_t v52 = v87;
    swift_bridgeObjectRelease();
    uint64_t v85 = v52;
    uint64_t v53 = v77;
    sub_25754DDC0(&a10, (uint64_t)&v85, 0);
    uint64_t v55 = v54;
    uint64_t v77 = v53;
    v84[0] = *(void *)(v54 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(v84, (uint64_t)v83);
    v74[0] = v46;
    v74[1] = v47;
    v43(v84, v46, v47);
    OUTLINED_FUNCTION_8_1(v84, (uint64_t)v82);
    uint64_t v56 = v78;
    uint64_t v57 = *(void (**)(void))(v78 + 16);
    uint64_t v58 = (uint64_t)v80;
    uint64_t v59 = v79;
    OUTLINED_FUNCTION_9_18();
    v57();
    __swift_storeEnumTagSinglePayload(v58, 0, 1, v59);
    uint64_t v60 = v81;
    OUTLINED_FUNCTION_9_18();
    v57();
    uint64_t v61 = __swift_storeEnumTagSinglePayload(v60, 0, 1, v59);
    MEMORY[0x270FA5388](v61);
    OUTLINED_FUNCTION_11_29();
    uint64_t v62 = v76;
    *(void *)(v63 - 16) = v75;
    *(void *)(v63 - 8) = v62;
    MEMORY[0x270FA5388](v64);
    OUTLINED_FUNCTION_49_2();
    *(void *)(v65 - 48) = v55;
    *(void *)(v65 - 40) = &off_270667760;
    *(void *)(v65 - 32) = v60;
    *(void *)(v65 - 24) = sub_25754DC44;
    *(void *)(v65 - 16) = v66;
    swift_retain();
    uint64_t v67 = v53;
    uint64_t v68 = v77;
    sub_257648508((uint64_t)sub_2574C6170, v67, MEMORY[0x263F8EE60] + 8, (uint64_t)&a17);
    if (v68)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      sub_257480BC8(v60);
      sub_257480BC8(v58);
      uint64_t v69 = *(void (**)(uint64_t))(v56 + 8);
      uint64_t v70 = OUTLINED_FUNCTION_20_21();
      v69(v70);
      ((void (*)(char *, uint64_t))v69)(v83, v59);
    }
    else
    {
      swift_release();
      sub_257480BC8(v60);
      sub_257480BC8(v58);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v71 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v71 + 16) = xmmword_2576ABB10;
      *(void *)(v71 + 32) = v55;
      *(void *)(v71 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      uint64_t v72 = *(void (**)(uint64_t))(v56 + 8);
      uint64_t v73 = OUTLINED_FUNCTION_20_21();
      v72(v73);
      ((void (*)(char *, uint64_t))v72)(v83, v59);
    }
  }
  else
  {
    uint64_t v48 = sub_25753D7B8();
    uint64_t v50 = v49;
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *(void *)uint64_t v51 = v48;
    *(void *)(v51 + 8) = v50;
    *(unsigned char *)(v51 + 16) = 2;
    swift_willThrow();
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25754C7CC()
{
  uint64_t v0 = sub_2576A6BF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = (float *)((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_25754C1DC(v3);
  sub_2576A8470();
  sub_2576A83D0();
  sub_2576A6B70();
  return (*(uint64_t (**)(float *, uint64_t))(v1 + 8))(v3, v0);
}

#error "25754C900: call analysis failed (funcsize=6)"

void sub_25754C90C()
{
  void (*v17)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  __n128 *v20;
  uint64_t v21;
  uint64_t *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46[3];
  uint64_t v47[3];

  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v4 = OUTLINED_FUNCTION_24_9(v3);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v39 - v8;
  uint64_t v43 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v45 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_2575CA350();
  if (sub_2574BAF20(v13, v2))
  {
    uint64_t v15 = v14;
    uint64_t v40 = v0;
    uint64_t ObjectType = swift_getObjectType();
    BOOL v17 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 16);
    v17(v46, ObjectType, v15);
    unsigned int v18 = *(void *)(v46[0] + 16);
    swift_bridgeObjectRelease();
    uint64_t v41 = ObjectType;
    uint64_t v42 = v15;
    if (v18 < 2)
    {
      uint64_t v39 = 1;
    }
    else
    {
      v17(v47, ObjectType, v15);
      if (!*(void *)(v47[0] + 16))
      {
        OUTLINED_FUNCTION_1_54();
        OUTLINED_FUNCTION_2_37();
      }
      uint64_t v39 = *(void *)(v47[0] + 32);
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = (uint64_t)v44;
    type metadata accessor for NativeTensorStorage();
    sub_2575320DC((uint64_t)v46);
    OUTLINED_FUNCTION_10_24();
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t *)OUTLINED_FUNCTION_8_33();
    uint64_t v23 = v40;
    sub_25754DDC0(v22, v24, v25);
    uint64_t v27 = v26;
    uint64_t v44 = v23;
    v46[0] = *(void *)(v26 + 16);
    sub_2576A7810();
    OUTLINED_FUNCTION_8_1(v46, v45);
    uint64_t v28 = *(void (**)(void))(v10 + 16);
    OUTLINED_FUNCTION_9_18();
    v28();
    OUTLINED_FUNCTION_2_6(v21);
    OUTLINED_FUNCTION_9_18();
    v28();
    uint64_t v29 = OUTLINED_FUNCTION_2_6((uint64_t)v6);
    MEMORY[0x270FA5388](v29);
    OUTLINED_FUNCTION_11_29();
    *(void *)(v30 - 16) = v39;
    MEMORY[0x270FA5388](v31);
    OUTLINED_FUNCTION_49_2();
    *(void *)(v32 - 48) = v27;
    *(void *)(v32 - 40) = &off_270667760;
    *(void *)(v32 - 32) = v6;
    *(void *)(v32 - 24) = sub_25754DC60;
    *(void *)(v32 - 16) = v33;
    swift_retain();
    uint64_t v34 = (uint64_t)v23;
    uint64_t v35 = v44;
    sub_257648508((uint64_t)sub_2574C6170, v34, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v35)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      sub_257480BC8((uint64_t)v6);
      sub_257480BC8(v21);
    }
    else
    {
      swift_release();
      sub_257480BC8((uint64_t)v6);
      sub_257480BC8(v21);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v38 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v38 + 16) = xmmword_2576ABB10;
      *(void *)(v38 + 32) = v27;
      *(void *)(v38 + 40) = &off_270667760;
      swift_unknownObjectRelease();
    }
    uint64_t v36 = OUTLINED_FUNCTION_22_20();
    v37(v36);
  }
  else
  {
    sub_257480520();
    int v19 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B5EC0, v19, v20);
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25754CCF0()
{
  uint64_t v0 = sub_2576A6BF0();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x263F8CB38], v0, v2);
  sub_2576A8470();
  sub_2576A83D0();
  sub_2576A6B70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_25754CE34()
{
}

void sub_25754CE4C()
{
  void (*v28)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *__return_ptr, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  __n128 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(void);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  uint64_t v58;
  void v59[2];
  uint64_t v60;
  char *v61;
  void (*v62)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[14];
  uint64_t v74[3];

  OUTLINED_FUNCTION_9_1();
  uint64_t v70 = v1;
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v6 = OUTLINED_FUNCTION_24_9(v5);
  MEMORY[0x270FA5388](v6);
  OUTLINED_FUNCTION_6_2();
  uint64_t v71 = v7;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v59 - v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v59 - v12;
  uint64_t v14 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  int v19 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_2575CA350();
  uint64_t v21 = sub_2574BAF20(v20, v4);
  uint64_t v72 = v22;
  if (!v21) {
    goto LABEL_10;
  }
  uint64_t v23 = sub_2575CA350();
  uint64_t v24 = sub_2574BAF20(v23, v4);
  if (!v24)
  {
    swift_unknownObjectRelease();
LABEL_10:
    sub_257480520();
    uint64_t v34 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B5ED0, v34, v35);
    goto LABEL_14;
  }
  uint64_t v26 = v24;
  uint64_t v69 = v25;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v28 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v72 + 8);
  uint64_t v64 = ObjectType;
  uint64_t v63 = (void *)(v72 + 8);
  uint64_t v62 = v28;
  ((void (*)(uint64_t *__return_ptr))v28)(v73);
  if (LOBYTE(v73[0]) <= 0xCu && ((1 << SLOBYTE(v73[0])) & 0x1777) != 0)
  {
    uint64_t v65 = v19;
    uint64_t v68 = v10;
    uint64_t v61 = v13;
    uint64_t v66 = v16;
    uint64_t v29 = v26;
    uint64_t v30 = swift_getObjectType();
    uint64_t v31 = v69;
    uint64_t v32 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v69 + 16);
    v32(v73, v30, v69);
    uint64_t v33 = *(void *)(v73[0] + 16);
    swift_bridgeObjectRelease();
    uint64_t v67 = v29;
    if (v33 >= 2)
    {
      v32(v74, v30, v31);
      if (!*(void *)(v74[0] + 16))
      {
        OUTLINED_FUNCTION_1_54();
        OUTLINED_FUNCTION_2_37();
      }
      uint64_t v36 = v14;
      uint64_t v60 = *(void *)(v74[0] + 32);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = v14;
      uint64_t v60 = 1;
    }
    uint64_t v37 = v66;
    type metadata accessor for NativeTensorStorage();
    sub_2575320DC((uint64_t)v73);
    OUTLINED_FUNCTION_10_24();
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t *)OUTLINED_FUNCTION_8_33();
    uint64_t v39 = v70;
    sub_25754DDC0(v38, v40, v41);
    uint64_t v43 = v42;
    uint64_t v70 = v39;
    v73[0] = *(void *)(v42 + 16);
    sub_2576A7810();
    uint64_t v44 = (uint64_t)v65;
    OUTLINED_FUNCTION_8_1(v73, (uint64_t)v65);
    uint64_t v45 = *(void (**)(void))(v37 + 16);
    v59[0] = v2;
    uint64_t v46 = (uint64_t)v61;
    OUTLINED_FUNCTION_9_18();
    v45();
    __swift_storeEnumTagSinglePayload(v46, 0, 1, v36);
    uint64_t v47 = (uint64_t)v68;
    OUTLINED_FUNCTION_9_18();
    v45();
    __swift_storeEnumTagSinglePayload(v47, 0, 1, v36);
    uint64_t v48 = v71;
    OUTLINED_FUNCTION_9_18();
    v45();
    v59[1] = v36;
    __swift_storeEnumTagSinglePayload(v48, 0, 1, v36);
    swift_retain();
    v62(v73, v64, v72);
    uint64_t v49 = sub_25758B4C0();
    uint64_t v63 = v59;
    MEMORY[0x270FA5388](v49);
    LODWORD(v59[-4]) = v50;
    v59[-3] = v44;
    uint64_t v51 = v60;
    v59[-2] = v59[0];
    v59[-1] = v51;
    MEMORY[0x270FA5388](v50);
    uint64_t v52 = v69;
    v59[-8] = v67;
    v59[-7] = v52;
    v59[-6] = v47;
    v59[-5] = v43;
    v59[-4] = &off_270667760;
    v59[-3] = v48;
    v59[-2] = sub_25754DC7C;
    v59[-1] = v53;
    uint64_t v54 = v70;
    sub_257648508((uint64_t)sub_257480E80, (uint64_t)&v59[-10], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v54)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release_n();
      OUTLINED_FUNCTION_16_24();
      sub_257480BC8((uint64_t)v68);
      sub_257480BC8(v46);
    }
    else
    {
      swift_release();
      OUTLINED_FUNCTION_16_24();
      sub_257480BC8((uint64_t)v68);
      sub_257480BC8(v46);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v57 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v57 + 16) = xmmword_2576ABB10;
      *(void *)(v57 + 32) = v43;
      *(void *)(v57 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    uint64_t v55 = OUTLINED_FUNCTION_5_32();
    v56(v55);
  }
  else
  {
    sub_257480520();
    OUTLINED_FUNCTION_33_0();
    *(_OWORD *)uint64_t v58 = xmmword_2576B5ED0;
    *(unsigned char *)(v58 + 16) = 3;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
LABEL_14:
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25754D414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a7;
  uint64_t v8 = sub_2576A6BF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2576A6DD0();
  __n128 v13 = MEMORY[0x270FA5388](v12);
  (*(void (**)(char *, uint64_t, __n128))(v15 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v13);
  sub_2576A83F0();
  sub_2576A6B50();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8CB38], v8);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6B40())
  {
    sub_2576A69A0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_2576B5ED0;
    *(unsigned char *)(v17 + 16) = 4;
    return swift_willThrow();
  }
}

void sub_25754D670()
{
}

void sub_25754D688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_9_1();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v20;
  uint64_t v26 = v25;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  uint64_t v28 = OUTLINED_FUNCTION_24_9(v27);
  MEMORY[0x270FA5388](v28);
  OUTLINED_FUNCTION_6_2();
  uint64_t v62 = v29;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v59 - v31;
  uint64_t v33 = sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  uint64_t v65 = v34;
  MEMORY[0x270FA5388](v35);
  OUTLINED_FUNCTION_6_2();
  uint64_t v63 = v36;
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x270FA5388](v37);
  uint64_t v64 = (uint64_t)&v59 - v38;
  uint64_t v39 = sub_2575CA350();
  if (sub_2574BAF20(v39, v26))
  {
    uint64_t v41 = v40;
    type metadata accessor for NativeTensorStorage();
    sub_2575320DC((uint64_t)&v68);
    a10 = v68;
    sub_2575320DC((uint64_t)v67);
    char v42 = v67[8];
    swift_bridgeObjectRelease();
    char v66 = v42;
    sub_25754DDC0(&a10, (uint64_t)&v66, 0);
    uint64_t v44 = v43;
    uint64_t v61 = v21;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v41 + 16))(&v68, ObjectType, v41);
    uint64_t v59 = v41;
    sub_25758A634(&v68, 0, 3, v64);
    uint64_t v68 = *(void *)(v44 + 16);
    sub_2576A7810();
    sub_25758A634(&v68, 0, 3, v63);
    uint64_t v45 = *(void (**)(void))(v65 + 16);
    OUTLINED_FUNCTION_9_18();
    v45();
    OUTLINED_FUNCTION_2_6((uint64_t)v32);
    uint64_t v46 = v62;
    OUTLINED_FUNCTION_9_18();
    v45();
    uint64_t v47 = OUTLINED_FUNCTION_2_6(v46);
    MEMORY[0x270FA5388](v47);
    OUTLINED_FUNCTION_11_29();
    *(void *)(v48 - 16) = v24;
    *(void *)(v48 - 8) = 1;
    MEMORY[0x270FA5388](v49);
    OUTLINED_FUNCTION_49_2();
    *(void *)(v50 - 48) = v44;
    *(void *)(v50 - 40) = &off_270667760;
    *(void *)(v50 - 32) = v46;
    *(void *)(v50 - 24) = sub_25754DCA0;
    *(void *)(v50 - 16) = v51;
    swift_retain();
    uint64_t v52 = v21;
    uint64_t v53 = v61;
    sub_257648508((uint64_t)sub_2574C6170, v52, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v53)
    {
      swift_unknownObjectRelease();
      swift_release_n();
      sub_257480BC8(v46);
      sub_257480BC8((uint64_t)v32);
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v54(v63, v33);
      v54(v64, v33);
    }
    else
    {
      swift_release();
      sub_257480BC8(v46);
      sub_257480BC8((uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
      uint64_t v57 = OUTLINED_FUNCTION_29_2();
      *(_OWORD *)(v57 + 16) = xmmword_2576ABB10;
      *(void *)(v57 + 32) = v44;
      *(void *)(v57 + 40) = &off_270667760;
      swift_unknownObjectRelease();
      uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v58(v63, v33);
      v58(v64, v33);
    }
  }
  else
  {
    sub_257480520();
    uint64_t v55 = OUTLINED_FUNCTION_33_0();
    OUTLINED_FUNCTION_6_17((__n128)xmmword_2576B5EE0, v55, v56);
  }
  OUTLINED_FUNCTION_31_5();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25754DA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_2576A6BF0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2576A6B50();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8CB50], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2576ABB10;
  *(void *)(v8 + 32) = *(void *)(a3 + 128);
  sub_2576A8470();
  sub_2576A83D0();
  if (sub_2576A6B30())
  {
    sub_2576A69B0();
    return swift_release();
  }
  else
  {
    sub_257480520();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_2576B5EE0;
    *(unsigned char *)(v10 + 16) = 4;
    return swift_willThrow();
  }
}

#error "25754DC38: call analysis failed (funcsize=6)"

uint64_t sub_25754DC44()
{
  return sub_25754C7CC();
}

uint64_t sub_25754DC60()
{
  return sub_25754CCF0();
}

uint64_t sub_25754DC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_25754D414(a1, a2, a3, *(unsigned int *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_25754DCA0(uint64_t a1, uint64_t a2)
{
  return sub_25754DA58(a1, a2, *(void *)(v2 + 16));
}

void OUTLINED_FUNCTION_1_54()
{
  *(void *)(v0 - 216) = 0;
  *(void *)(v0 - 208) = 0;
  *(void *)(v0 - 200) = 0;
  *(unsigned char *)(v0 - 192) = -1;
  *(void *)(v0 - 176) = 0;
  *(void *)(v0 - 168) = 0;
  *(void *)(v0 - 184) = 0;
  *(unsigned char *)(v0 - 160) = -1;
  *(unsigned char *)(v0 - 108) = 4;
}

void OUTLINED_FUNCTION_2_37()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_5_32()
{
  return *(void *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  *(unsigned char *)(v1 - 105) = v0;
  return v1 - 72;
}

uint64_t OUTLINED_FUNCTION_10_24()
{
  *(void *)(v0 - 72) = *(void *)(v0 - 216);
  return sub_2575320DC(v0 - 104);
}

uint64_t OUTLINED_FUNCTION_16_24()
{
  uint64_t v2 = *(void *)(v0 - 232);
  return sub_257480BC8(v2);
}

uint64_t OUTLINED_FUNCTION_20_21()
{
  return *(void *)(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  return v0;
}

void sub_25754DDC0(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v8 = *a1;
  OUTLINED_FUNCTION_31_11();
  if (!v11 & v10) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = qword_2576B5FF0[v9];
  }
  uint64_t v13 = *(void *)(v8 + 16);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(v8 + 32);
    uint64_t v15 = 1;
    while (1)
    {
      uint64_t v16 = *v14++;
      uint64_t v17 = v15 * v16;
      if ((unsigned __int128)(v15 * (__int128)v16) >> 64 != (v15 * v16) >> 63) {
        break;
      }
      uint64_t v15 = v17;
      if (!--v13) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v17 = 1;
LABEL_10:
  if ((unsigned __int128)(v17 * (__int128)v12) >> 64 != (v17 * v12) >> 63) {
    goto LABEL_16;
  }
  sub_2576A8540();
  OUTLINED_FUNCTION_36_9();
  if (a3 && (swift_retain(), a3(v4, v5), sub_25747A4E0((uint64_t)a3), sub_25747A4E0((uint64_t)a3), v3))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v8;
    char v18 = v6;
    sub_25754E28C(&v19, &v18, v4, v5, v12);
  }
}

uint64_t sub_25754DF0C()
{
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + 24))
  {
    case 1:
      uint64_t result = 6;
      break;
    case 2:
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 9;
      break;
    case 5:
      uint64_t result = 10;
      break;
    case 6:
      uint64_t result = 11;
      break;
    case 7:
      uint64_t result = 12;
      break;
    case 8:
      return result;
    case 9:
      OUTLINED_FUNCTION_37_7();
      OUTLINED_FUNCTION_14_27();
      __break(1u);
      JUMPOUT(0x25754DFC8);
    case 0xA:
      uint64_t result = 3;
      break;
    case 0xB:
      uint64_t result = 4;
      break;
    case 0xC:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 5;
      break;
  }
  return result;
}

uint64_t sub_25754E000()
{
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      uint64_t result = 6;
      break;
    case 2:
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 9;
      break;
    case 5:
      uint64_t result = 10;
      break;
    case 6:
      uint64_t result = 11;
      break;
    case 7:
      uint64_t result = 12;
      break;
    case 8:
      return result;
    case 9:
      OUTLINED_FUNCTION_37_7();
      OUTLINED_FUNCTION_14_27();
      __break(1u);
      JUMPOUT(0x25754E0BCLL);
    case 0xA:
      uint64_t result = 3;
      break;
    case 0xB:
      uint64_t result = 4;
      break;
    case 0xC:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 5;
      break;
  }
  return result;
}

uint64_t sub_25754E0F0()
{
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC14NeuralNetworks23DataSourceTensorStorage_scalarType))
  {
    case 1:
      uint64_t result = 6;
      break;
    case 2:
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 9;
      break;
    case 5:
      uint64_t result = 10;
      break;
    case 6:
      uint64_t result = 11;
      break;
    case 7:
      uint64_t result = 12;
      break;
    case 8:
      return result;
    case 9:
      OUTLINED_FUNCTION_37_7();
      OUTLINED_FUNCTION_14_27();
      __break(1u);
      JUMPOUT(0x25754E1B8);
    case 0xA:
      uint64_t result = 3;
      break;
    case 0xB:
      uint64_t result = 4;
      break;
    case 0xC:
      uint64_t result = 0;
      break;
    default:
      uint64_t result = 5;
      break;
  }
  return result;
}

id sub_25754E1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_2574A4924(0, (unint64_t *)&qword_26A001870);
  char v6 = (void *)sub_2576A7DE0();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithShape_bytes_dataType_, v6, a2, a3);

  return v7;
}

uint64_t sub_25754E28C(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_2576A7110();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a2;
  uint64_t v18 = *a1;
  HIBYTE(v17) = v13;
  (*(void (**)(char *, void))(v14 + 104))(v12, *MEMORY[0x263F06EF0]);
  uint64_t v15 = swift_allocObject();
  sub_25754E46C(&v18, (char *)&v17 + 7, a3, a4, a5, (uint64_t)v12);
  return v15;
}

uint64_t sub_25754E390(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v2 = sub_2576A7810();
  uint64_t v3 = sub_25746D770(v2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v1)
  {
    sub_2574A4924(0, &qword_26A001C10);
    uint64_t v5 = sub_25754DF0C();
    id v6 = sub_25754E1EC(v3, v1, v5);
    swift_release();
    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_25754E438(uint64_t (*a1)(void, void))
{
  return a1(*(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_25754E46C(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v8 = *a2;
  *(void *)(v6 + 16) = *a1;
  *(unsigned char *)(v6 + 24) = v8;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a3;
  *(void *)(v6 + 48) = a4;
  uint64_t v9 = v6 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator;
  uint64_t v10 = sub_2576A7110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a6, v10);
  return v6;
}

uint64_t sub_25754E4F8()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_2_9();
  uint64_t v2 = sub_2576A7110();
  OUTLINED_FUNCTION_0_8();
  uint64_t v4 = v3;
  __n128 v6 = MEMORY[0x270FA5388](v5);
  char v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v8, v1 + OBJC_IVAR____TtC14NeuralNetworks19NativeTensorStorage_deallocator, v2, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v8, v2);
  if (result != *MEMORY[0x263F06F10])
  {
    if (result == *MEMORY[0x263F06EE0])
    {
      uint64_t v11 = *(void *)(v1 + 40);
      if (v11)
      {
        MEMORY[0x25A2BAFA0](*MEMORY[0x263EF8960], v11, *(void *)(v1 + 48) - v11);
        goto LABEL_17;
      }
      goto LABEL_19;
    }
    if (result == *MEMORY[0x263F06F08])
    {
      uint64_t v12 = *(void **)(v1 + 40);
      if (v12)
      {
        size_t v13 = *(void *)(v1 + 48) - (void)v12;
LABEL_16:
        munmap(v12, v13);
        goto LABEL_17;
      }
    }
    else
    {
      if (result == *MEMORY[0x263F06EF0])
      {
        uint64_t v14 = *(void *)(v1 + 40);
        if (v14) {
          MEMORY[0x25A2BAC80](v14, -1, -1);
        }
        goto LABEL_17;
      }
      if (result == *MEMORY[0x263F06F00])
      {
LABEL_17:
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
        return v1;
      }
      v15[2] = 0;
      v15[3] = 0xE000000000000000;
      sub_2576A8730();
      sub_2576A7B00();
      v15[1] = v1;
      sub_2576A8A30();
      sub_2576A7B00();
      uint64_t v12 = (void *)sub_2576A8B60();
      __break(1u);
    }
    size_t v13 = 0;
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v4 + 96))(v8, v2);
  uint64_t result = *(void *)(v1 + 40);
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t))v8)(result, *(void *)(v1 + 48) - result);
    swift_release();
    goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_25754E7A8()
{
  sub_25754E4F8();
  OUTLINED_FUNCTION_2_9();
  return swift_deallocClassInstance();
}

uint64_t sub_25754E7E0()
{
  return type metadata accessor for NativeTensorStorage();
}

uint64_t type metadata accessor for NativeTensorStorage()
{
  uint64_t result = qword_26A0036E0;
  if (!qword_26A0036E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25754E830()
{
  uint64_t result = sub_2576A7110();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_25754E8F0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *a2;
  if ((v5 - 1) > 0xA) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = qword_2576B5FF0[(char)(v5 - 1)];
  }
  if (v6 > a3)
  {
LABEL_15:
    v13[1] = 0;
    void v13[2] = 0;
    v13[0] = a3;
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_44_6();
  if (v8)
  {
    OUTLINED_FUNCTION_43_6();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v9) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v9) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v7);
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = sub_2576A8540();
  v13[0] = v3;
  char v14 = v5;
  return sub_25754E28C(v13, &v14, v10, v11, a3);
}

uint64_t sub_25754E9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  OUTLINED_FUNCTION_21_21();
  if (!v10 & v9) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = qword_2576B5FF0[v8];
  }
  if (v11 > v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_44_6();
  if (v13)
  {
    OUTLINED_FUNCTION_43_6();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v10) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v10) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = (unsigned char *)sub_2576A8540();
  sub_2575610BC(v14, v15, a5);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  else {
    return OUTLINED_FUNCTION_12_26(v16, v17, v18, v19, v20, v21, v22, v23, v25);
  }
}

void sub_25754EAEC()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_11_30(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_10_25();
  if (!v11 & v10) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = qword_2576B5FF0[v9];
  }
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_7_30(v12);
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v1 + 16))
  {
    OUTLINED_FUNCTION_42_5();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v11) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v11) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_2576A8540();
  OUTLINED_FUNCTION_30_13();
  uint64_t v13 = OUTLINED_FUNCTION_13_23();
  v14(v13);
  OUTLINED_FUNCTION_18_20();
  sub_2574D16BC();
  uint64_t v15 = OUTLINED_FUNCTION_17_21();
  v16(v15);
  OUTLINED_FUNCTION_9_33();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_7_1();
}

#error "25754ECC0: call analysis failed (funcsize=57)"

uint64_t sub_25754ED08()
{
  OUTLINED_FUNCTION_22_21();
  if (!v4 & v3) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = qword_2576B5FF0[v2];
  }
  if (v5 > v0)
  {
LABEL_17:
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_33_10();
  if (v7)
  {
    OUTLINED_FUNCTION_32_12();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v4) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v4) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v6);
  if (!v4)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v8 = (void *)sub_2576A8540();
  sub_2575A4D28(v8, v9);
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return OUTLINED_FUNCTION_29_13(v10, v11, v12, v13, v14, v15, v16, v17, v19);
  }
}

void sub_25754EE00()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_11_30(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_10_25();
  if (!v11 & v10) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = qword_2576B5FF0[v9];
  }
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_7_30(v12);
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v1 + 16))
  {
    OUTLINED_FUNCTION_42_5();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v11) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v11) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_2576A8540();
  OUTLINED_FUNCTION_30_13();
  uint64_t v13 = OUTLINED_FUNCTION_13_23();
  v14(v13);
  OUTLINED_FUNCTION_18_20();
  sub_2574D5154();
  uint64_t v15 = OUTLINED_FUNCTION_17_21();
  v16(v15);
  OUTLINED_FUNCTION_9_33();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_7_1();
}

void sub_25754EF2C()
{
  OUTLINED_FUNCTION_28_13();
  OUTLINED_FUNCTION_39_9();
  if (!v4 & v3) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = qword_2576B5FF0[v2];
  }
  if (v5 > v1)
  {
LABEL_14:
    OUTLINED_FUNCTION_6_34();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v0 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v4) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_10:
  OUTLINED_FUNCTION_4_37(v5);
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = v6;
  sub_2576A8540();
  OUTLINED_FUNCTION_36_9();
  sub_25757A25C();
  OUTLINED_FUNCTION_38_8();
  sub_25754E28C(v8, v9, v10, v11, v7);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_26_16();
}

void sub_25754F050()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_35_8();
  if (!v7 & v6) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = qword_2576B5FF0[v5];
  }
  if (v8 > v4)
  {
LABEL_14:
    OUTLINED_FUNCTION_8_34(v4, v8);
    swift_release();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v3 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v7) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_13;
  }
LABEL_10:
  OUTLINED_FUNCTION_4_37(v8);
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v16 = v4;
  uint64_t v9 = sub_2576A8540();
  uint64_t v11 = v10;
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x270FA5388](ObjectType);
  OUTLINED_FUNCTION_47_7();
  *(void *)(v13 - 32) = v9;
  *(void *)(v13 - 24) = v11;
  *(void *)(v13 - 16) = v2;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v0 + 56))(sub_2575500D4);
  uint64_t v14 = (uint64_t *)OUTLINED_FUNCTION_41_7();
  sub_25754E28C(v14, v15, v9, v11, v16);
  OUTLINED_FUNCTION_48_7();
  swift_release();
  OUTLINED_FUNCTION_7_1();
}

void sub_25754F1DC()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_35_8();
  if (!v8 & v7) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = qword_2576B5FF0[v6];
  }
  if (v9 > v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_8_34(v5, v9);
    swift_release();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v4 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v8) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v8) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_10:
  OUTLINED_FUNCTION_4_37(v9);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = v5;
  uint64_t v10 = sub_2576A8540();
  uint64_t v12 = v11;
  uint64_t ObjectType = swift_getObjectType();
  MEMORY[0x270FA5388](ObjectType);
  OUTLINED_FUNCTION_47_7();
  *(void *)(v14 - 32) = v3;
  *(void *)(v14 - 24) = v10;
  *(void *)(v14 - 16) = v12;
  (*(void (**)(uint64_t (*)(uint64_t, uint64_t)))(v1 + 56))(sub_25755011C);
  if (v0)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = (uint64_t *)OUTLINED_FUNCTION_41_7();
    sub_25754E28C(v15, v16, v10, v12, v17);
    OUTLINED_FUNCTION_48_7();
    swift_release();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25754F38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  a22 = v26;
  a23 = v28;
  uint64_t v30 = v29;
  int v32 = *v31;
  if ((v32 - 1) > 0xA) {
    uint64_t v33 = 1;
  }
  else {
    uint64_t v33 = qword_2576B5FF0[(char)(v32 - 1)];
  }
  if (v33 > v27)
  {
LABEL_15:
    OUTLINED_FUNCTION_8_34(v27, v33);
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_33_10();
  if (v35)
  {
    OUTLINED_FUNCTION_32_12();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v36) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v36) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v34);
  if (!v36)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v37 = v27;
  sub_2576A8540();
  OUTLINED_FUNCTION_36_9();
  uint64_t ObjectType = swift_getObjectType();
  __n128 v39 = MEMORY[0x270FA5388](ObjectType);
  (*(void (**)(uint64_t (*)(), __n128))(v30 + 56))(sub_257550100, v39);
  uint64_t v40 = v23;
  a13 = v32;
  sub_25754E28C(&v40, &a13, v24, v25, v37);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_7_1();
}

void sub_25754F51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  OUTLINED_FUNCTION_28_13();
  a38 = v43;
  a39 = v44;
  uint64_t v45 = v40;
  unint64_t v47 = v46;
  uint64_t v49 = v48;
  OUTLINED_FUNCTION_46_6();
  if (!v52 & v51) {
    uint64_t v53 = 1;
  }
  else {
    uint64_t v53 = qword_2576B5FF0[v50];
  }
  if (v53 > v39) {
    goto LABEL_23;
  }
  OUTLINED_FUNCTION_33_10();
  if (v55)
  {
    OUTLINED_FUNCTION_32_12();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v52) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v52) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v54);
  if (!v52)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    a12 = 0;
    a13 = 0;
    a11 = v39;
    OUTLINED_FUNCTION_6_34();
    OUTLINED_FUNCTION_45_6();
    OUTLINED_FUNCTION_0_49();
  }
  uint64_t v56 = sub_2576A8540();
  uint64_t v58 = v57;
  a26 = v42;
  switch(v47 >> 62)
  {
    case 1uLL:
      if (v49 >> 32 < (int)v49) {
        goto LABEL_22;
      }
      swift_retain();
      sub_2575C9CA8((int)v49, v49 >> 32);
      if (v40) {
        goto LABEL_25;
      }
      OUTLINED_FUNCTION_45_6();
      break;
    case 2uLL:
      uint64_t v59 = *(void *)(v49 + 16);
      uint64_t v60 = *(void *)(v49 + 24);
      swift_retain();
      swift_retain();
      sub_2575C9CA8(v59, v60);
      if (v45)
      {
        swift_release();
        swift_release();
        __break(1u);
LABEL_25:
        OUTLINED_FUNCTION_45_6();
        __break(1u);
        JUMPOUT(0x25754F74CLL);
      }
      swift_release();
      swift_release();
      break;
    default:
      sub_2575C9D54();
      break;
  }
  a11 = v41;
  a29 = a26;
  sub_25754E28C(&a11, &a29, v56, v58, v39);
  OUTLINED_FUNCTION_45_6();
  OUTLINED_FUNCTION_40_7();
  OUTLINED_FUNCTION_26_16();
}

uint64_t sub_25754F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  OUTLINED_FUNCTION_21_21();
  if (!v10 & v9) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = qword_2576B5FF0[v8];
  }
  if (v11 > v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_44_6();
  if (v13)
  {
    OUTLINED_FUNCTION_43_6();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v10) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v10) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = (unsigned char *)sub_2576A8540();
  uint64_t v16 = sub_2575A4C78(v14, v15, a5 & 1);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  else {
    return OUTLINED_FUNCTION_12_26((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v25);
  }
}

void sub_25754F85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  OUTLINED_FUNCTION_28_13();
  a38 = v41;
  a39 = v42;
  uint64_t v44 = v43;
  OUTLINED_FUNCTION_39_9();
  if (!v48 & v47) {
    uint64_t v49 = 1;
  }
  else {
    uint64_t v49 = qword_2576B5FF0[v46];
  }
  if (v49 > v44)
  {
LABEL_17:
    a12 = 0;
    a13 = 0;
    a11 = v44;
    OUTLINED_FUNCTION_6_34();
    swift_release();
    OUTLINED_FUNCTION_0_49();
  }
  uint64_t v50 = *v45;
  if (*(void *)(*v45 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v48) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v48) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_10:
  OUTLINED_FUNCTION_4_37(v49);
  if (!v48)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v54 = v52;
  uint64_t v55 = v53;
  uint64_t v56 = v51;
  uint64_t v57 = sub_2576A8540();
  uint64_t v59 = v58;
  sub_257571114(v57, v58, v56, v54, v55);
  if (v39)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    a11 = v50;
    a29 = v40;
    sub_25754E28C(&a11, &a29, v57, v59, v44);
    swift_release();
  }
  OUTLINED_FUNCTION_26_16();
}

void sub_25754F9AC()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_11_30(v2, v3, v4, v5, v6, v7);
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v8);
  OUTLINED_FUNCTION_10_25();
  if (!v11 & v10) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = qword_2576B5FF0[v9];
  }
  if (v12 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_7_30(v12);
    OUTLINED_FUNCTION_0_49();
  }
  if (*(void *)(*(void *)v1 + 16))
  {
    OUTLINED_FUNCTION_42_5();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v11) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v11) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_2576A8540();
  OUTLINED_FUNCTION_30_13();
  uint64_t v13 = OUTLINED_FUNCTION_13_23();
  v14(v13);
  OUTLINED_FUNCTION_18_20();
  sub_2574D5248();
  uint64_t v15 = OUTLINED_FUNCTION_17_21();
  v16(v15);
  OUTLINED_FUNCTION_9_33();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_10();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25754FAD8(float a1)
{
  OUTLINED_FUNCTION_22_21();
  if (!v8 & v7) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = qword_2576B5FF0[v6];
  }
  if (v9 > v1)
  {
LABEL_17:
    v16[1] = 0;
    id v16[2] = 0;
    v16[0] = v1;
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_33_10();
  if (v11)
  {
    OUTLINED_FUNCTION_32_12();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v8) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v8) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v10);
  if (!v8)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v12 = (float *)sub_2576A8540();
  uint64_t v14 = v13;
  sub_2575A4048(v12, v13, a1);
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  v16[0] = v3;
  char v17 = v4;
  return sub_25754E28C(v16, &v17, (uint64_t)v12, v14, v1);
}

uint64_t sub_25754FBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_21_21();
  if (!v10 & v9) {
    uint64_t v11 = 1;
  }
  else {
    uint64_t v11 = qword_2576B5FF0[v8];
  }
  if (v11 > v5)
  {
LABEL_17:
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_44_6();
  if (v13)
  {
    OUTLINED_FUNCTION_43_6();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v10) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v10) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v12);
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = (void *)sub_2576A8540();
  uint64_t v16 = sub_2575A421C(v14, v15, a5);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  else {
    return OUTLINED_FUNCTION_12_26((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v25);
  }
}

void sub_25754FCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  OUTLINED_FUNCTION_27_14();
  a36 = v39;
  a37 = v40;
  uint64_t v42 = v41;
  OUTLINED_FUNCTION_46_6();
  if (!v46 & v45) {
    uint64_t v47 = 1;
  }
  else {
    uint64_t v47 = qword_2576B5FF0[v44];
  }
  if (v47 > v37)
  {
LABEL_16:
    a10 = 0;
    a11 = 0;
    a9 = v37;
    OUTLINED_FUNCTION_2_38();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_0_49();
  }
  uint64_t v48 = *v43;
  if (*(void *)(*v43 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v46) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v46) {
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_10:
  OUTLINED_FUNCTION_4_37(v47);
  if (!v46)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v49 = sub_2576A8540();
  if (!v49)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v51 = (void *)v49;
  uint64_t v52 = v50;
  id v53 = objc_msgSend((id)swift_unknownObjectRetain(), sel_contents);
  v42;
  memmove(v51, v53, v52 - (void)v51);
  a9 = v48;
  a27 = v38;
  sub_25754E28C(&a9, &a27, (uint64_t)v51, v52, v37);
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_24_18();
}

void sub_25754FE4C()
{
  OUTLINED_FUNCTION_28_13();
  OUTLINED_FUNCTION_39_9();
  if (!v3 & v2) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = qword_2576B5FF0[v1];
  }
  if (v4 > v0)
  {
LABEL_15:
    OUTLINED_FUNCTION_6_34();
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_0_49();
  }
  OUTLINED_FUNCTION_33_10();
  if (v6)
  {
    OUTLINED_FUNCTION_32_12();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v3) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v3) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v5);
  if (!v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v8 = v7;
  sub_2576A8540();
  OUTLINED_FUNCTION_36_9();
  sub_2574F71A0();
  OUTLINED_FUNCTION_38_8();
  sub_25754E28C(v9, v10, v11, v12, v8);
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_26_16();
}

void sub_25754FF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  OUTLINED_FUNCTION_27_14();
  a36 = v41;
  a37 = v42;
  char v44 = v43;
  uint64_t v46 = v45;
  OUTLINED_FUNCTION_31_11();
  if (!v50 & v49) {
    uint64_t v51 = 1;
  }
  else {
    uint64_t v51 = qword_2576B5FF0[v48];
  }
  if (v51 > v46)
  {
LABEL_18:
    a10 = 0;
    a11 = 0;
    a9 = v46;
    OUTLINED_FUNCTION_2_38();
    OUTLINED_FUNCTION_0_49();
  }
  uint64_t v52 = *v47;
  if (*(void *)(*v47 + 16))
  {
    OUTLINED_FUNCTION_42_5();
    while (1)
    {
      OUTLINED_FUNCTION_1_55();
      if (!v50) {
        break;
      }
      OUTLINED_FUNCTION_5_33();
      if (v50) {
        goto LABEL_11;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_37(v51);
  if (!v50)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_2576A8540();
  OUTLINED_FUNCTION_36_9();
  v44();
  if (v37)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    a9 = v52;
    a27 = v40;
    sub_25754E28C(&a9, &a27, v38, v39, v46);
  }
  OUTLINED_FUNCTION_24_18();
}

void sub_25755008C(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t sub_257550098@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return sub_2576A7810();
}

uint64_t sub_2575500A4(uint64_t (*a1)(void))
{
  return sub_25748082C(a1);
}

uint64_t sub_2575500BC(uint64_t (*a1)(void, void))
{
  return sub_25754E438(a1);
}

uint64_t sub_2575500D4(uint64_t a1, uint64_t a2)
{
  return sub_257550148(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_257683170);
}

uint64_t sub_257550100()
{
  return sub_257612364();
}

uint64_t sub_25755011C(uint64_t a1, uint64_t a2)
{
  return sub_257550148(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_257684BF8);
}

uint64_t sub_257550148(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

void OUTLINED_FUNCTION_0_49()
{
  sub_25746BF88();
}

uint64_t OUTLINED_FUNCTION_4_37@<X0>(uint64_t a1@<X8>)
{
  return v1 * a1;
}

uint64_t OUTLINED_FUNCTION_7_30@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 184) = 0;
  *(void *)(v2 - 176) = 0;
  *(void *)(v2 - 192) = v1;
  *(unsigned char *)(v2 - 168) = -1;
  *(void *)(v2 - 152) = 0;
  *(void *)(v2 - 144) = 0;
  *(void *)(v2 - 160) = a1;
  *(unsigned char *)(v2 - 136) = -1;
  *(unsigned char *)(v2 - 84) = 13;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_8_34(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(void *)(v2 - 184) = 0;
  *(void *)(v2 - 176) = 0;
  *(void *)(v2 - 192) = a1;
  *(unsigned char *)(v2 - 168) = -1;
  *(void *)(v2 - 152) = 0;
  *(void *)(v2 - 144) = 0;
  *(void *)(v2 - 160) = a2;
  *(unsigned char *)(v2 - 136) = -1;
  *(unsigned char *)(v2 - 84) = 13;
}

uint64_t OUTLINED_FUNCTION_9_33()
{
  *(void *)(v5 - 192) = v2;
  *(unsigned char *)(v5 - 65) = v1;
  return sub_25754E28C((uint64_t *)(v5 - 192), (char *)(v5 - 65), v3, v4, v0);
}

uint64_t OUTLINED_FUNCTION_11_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(v7 - 208) = a4;
  *(void *)(v7 - 200) = v6;
  *(_DWORD *)(v7 - 72) = a6;
  return sub_2576A8EF0();
}

uint64_t OUTLINED_FUNCTION_12_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a9 = v10;
  *(unsigned char *)(v14 - 65) = v13;
  return sub_25754E28C(&a9, (char *)(v14 - 65), v11, v12, v9);
}

uint64_t OUTLINED_FUNCTION_13_23()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_15_21()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a9 = v9;
  *(unsigned char *)(v14 - 65) = v13;
  return sub_25754E28C(&a9, (char *)(v14 - 65), v11, v12, v10);
}

uint64_t OUTLINED_FUNCTION_29_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  a9 = v10;
  *(unsigned char *)(v14 - 49) = v13;
  return sub_25754E28C(&a9, (char *)(v14 - 49), v11, v12, v9);
}

void OUTLINED_FUNCTION_30_13()
{
  *(unsigned char *)(v0 - 192) = *(_DWORD *)(v0 - 72);
}

uint64_t OUTLINED_FUNCTION_34_10()
{
  return v0;
}

void OUTLINED_FUNCTION_38_8()
{
  *(unsigned char *)(v1 - 65) = v0;
}

uint64_t OUTLINED_FUNCTION_40_7()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_7()
{
  *(unsigned char *)(v0 - 65) = *(_DWORD *)(v0 - 72);
  return v0 - 192;
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return sub_25747F154(v0, v1);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  return swift_unknownObjectRelease();
}

uint64_t RecurrentLayerInput.input.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_12_27(*v1, a1);
}

uint64_t RecurrentLayerInput.input.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *unint64_t v1 = v2;
  return result;
}

uint64_t (*RecurrentLayerInput.input.modify())(void)
{
  return nullsub_1;
}

uint64_t RecurrentLayerInput.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  sub_2576A84C0();
  OUTLINED_FUNCTION_16_1();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  return v7(a2, v4, v5);
}

uint64_t RecurrentLayerInput.state.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  sub_2576A84C0();
  OUTLINED_FUNCTION_16_1();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  return v7(v4, a1, v5);
}

uint64_t (*RecurrentLayerInput.state.modify())(void)
{
  return nullsub_1;
}

uint64_t RecurrentLayerInput.init(input:state:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = (uint64_t)a4 + *(int *)(type metadata accessor for RecurrentLayerInput() + 28);
  __swift_storeEnumTagSinglePayload(v8, 1, 1, a3);
  *a4 = v7;
  sub_2576A84C0();
  OUTLINED_FUNCTION_16_1();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  return v11(v8, a2, v9);
}

uint64_t type metadata accessor for RecurrentLayerInput()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25755083C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_257550924(char a1)
{
  if (a1) {
    return 0x6574617473;
  }
  else {
    return 0x7475706E69;
  }
}

BOOL sub_25755094C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_25747A6C8(*a1, *a2);
}

uint64_t sub_25755095C()
{
  return sub_25747A7E4();
}

uint64_t sub_257550980()
{
  return sub_257470648();
}

uint64_t sub_257550990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_257550D50(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_257470648);
}

uint64_t sub_2575509A8()
{
  return sub_257550924(*v0);
}

uint64_t sub_2575509B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_25755083C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2575509E4(uint64_t a1, uint64_t a2)
{
  return sub_257550DFC(a1, a2, (uint64_t (*)(void, void))sub_25747A82C);
}

uint64_t sub_2575509FC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_257478A88();
  *a1 = result;
  return result;
}

uint64_t sub_257550A28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_257550A7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t (*RecurrentLayerOutput.output.modify())(void)
{
  return nullsub_1;
}

uint64_t RecurrentLayerOutput.state.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t RecurrentLayerOutput.state.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 28), a1);
}

uint64_t (*RecurrentLayerOutput.state.modify())(void)
{
  return nullsub_1;
}

uint64_t RecurrentLayerOutput.init(output:state:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = *a1;
  uint64_t v6 = (char *)a4 + *(int *)(type metadata accessor for RecurrentLayerOutput() + 28);
  char v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for RecurrentLayerOutput()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_257550C28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74757074756FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_257550D08(char a1)
{
  if (a1) {
    return 0x6574617473;
  }
  else {
    return 0x74757074756FLL;
  }
}

uint64_t sub_257550D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_257550D50(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_2574770C4);
}

uint64_t sub_257550D50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void))
{
  sub_2576A9090();
  a4(v8, *v4, *(void *)(a2 + 16));
  return sub_2576A9100();
}

uint64_t sub_257550DA8()
{
  return sub_257550D08(*v0);
}

uint64_t sub_257550DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257550C28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257550DE4(uint64_t a1, uint64_t a2)
{
  return sub_257550DFC(a1, a2, (uint64_t (*)(void, void))sub_2574A0674);
}

uint64_t sub_257550DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  return a3(*v3, *(void *)(a1 + 16));
}

uint64_t sub_257550E28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_257550E7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void RecurrentLayerInput<A>.encode(to:)()
{
}

uint64_t type metadata accessor for RecurrentLayerInput.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void RecurrentLayerInput<A>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v48 = v10;
  uint64_t v43 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v40 = v16;
  sub_2576A84C0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v46 = v18;
  uint64_t v47 = v17;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v19);
  uint64_t v42 = (char *)&v38 - v20;
  type metadata accessor for RecurrentLayerInput.CodingKeys();
  swift_getWitnessTable();
  uint64_t v44 = sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v41 = v21;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = type metadata accessor for RecurrentLayerInput();
  OUTLINED_FUNCTION_0_10();
  uint64_t v39 = v24;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t *)((char *)&v38 - v26);
  uint64_t v45 = (uint64_t)&v38 + *(int *)(v28 + 28) - v26;
  __swift_storeEnumTagSinglePayload(v45, 1, 1, v13);
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t v29 = v48;
  sub_2576A91F0();
  if (v29)
  {
    uint64_t v32 = v46;
    uint64_t v31 = v47;
    uint64_t v33 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v31);
  }
  else
  {
    uint64_t v48 = v23;
    uint64_t v30 = v42;
    char v49 = 0;
    sub_257490B4C();
    sub_2576A8D50();
    *uint64_t v27 = a10;
    OUTLINED_FUNCTION_26_17();
    sub_2576A8D00();
    uint64_t v34 = OUTLINED_FUNCTION_29_14();
    v35(v34);
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v45, v30, v47);
    uint64_t v36 = v39;
    uint64_t v37 = v48;
    (*(void (**)(uint64_t, void *, uint64_t))(v39 + 16))(v40, v27, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    (*(void (**)(void *, uint64_t))(v36 + 8))(v27, v37);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25755124C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecurrentLayerInput<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_25755126C()
{
}

void RecurrentLayerOutput<A>.encode(to:)()
{
}

void sub_2575512DC()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v15 = v1;
  uint64_t v16 = v0;
  uint64_t v3 = v2;
  v14[0] = v4;
  v14[1] = *(void *)(v4 + 16);
  void v14[2] = v5;
  v6(255);
  swift_getWitnessTable();
  uint64_t v7 = sub_2576A8E70();
  OUTLINED_FUNCTION_0_10();
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v14 - v11;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2576A9230();
  char v17 = 0;
  sub_257490B00();
  uint64_t v13 = v16;
  sub_2576A8E40();
  if (!v13)
  {
    OUTLINED_FUNCTION_26_17();
    v15();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  OUTLINED_FUNCTION_7_1();
}

uint64_t type metadata accessor for RecurrentLayerOutput.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void RecurrentLayerOutput<A>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v44 = v10;
  uint64_t v41 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v38 = v16;
  OUTLINED_FUNCTION_0_10();
  uint64_t v37 = v17;
  MEMORY[0x270FA5388](v18);
  OUTLINED_FUNCTION_8_0();
  uint64_t v40 = v20 - v19;
  type metadata accessor for RecurrentLayerOutput.CodingKeys();
  swift_getWitnessTable();
  uint64_t v43 = sub_2576A8DA0();
  OUTLINED_FUNCTION_0_10();
  uint64_t v39 = v21;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v36 - v23;
  uint64_t v25 = type metadata accessor for RecurrentLayerOutput();
  OUTLINED_FUNCTION_0_10();
  uint64_t v36 = v26;
  OUTLINED_FUNCTION_44_0();
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v36 - v28;
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t v42 = v24;
  uint64_t v30 = v44;
  sub_2576A91F0();
  if (v30)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    uint64_t v44 = v25;
    uint64_t v31 = v40;
    char v45 = 0;
    sub_257490B4C();
    sub_2576A8D50();
    *(void *)uint64_t v29 = a10;
    OUTLINED_FUNCTION_26_17();
    sub_2576A8D50();
    uint64_t v32 = OUTLINED_FUNCTION_30_14();
    v33(v32);
    uint64_t v34 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(&v29[*(int *)(v44 + 28)], v31, v13);
    uint64_t v35 = v36;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v38, v29, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v34);
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_257551734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  RecurrentLayerOutput<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_257551754()
{
}

void LSTM.learningPhase.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *LSTM.learningPhase.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*LSTM.learningPhase.modify())(void)
{
  return nullsub_1;
}

uint64_t LSTM.unitCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t LSTM.isBidirectional.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t LSTM.recurrentWeight.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_28_3();
  if (v2)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_16_7();
    __break(1u);
    return result;
  }
  if ((v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_8;
  }
  *unint64_t v1 = v0 & 0x7FFFFFFFFFFFFFFFLL;
  return sub_257486C84();
}

uint64_t sub_257551850@<X0>(void *a1@<X8>)
{
  uint64_t result = LSTM.recurrentWeight.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_2575518FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain();
  return LSTM.recurrentWeight.setter(&v2);
}

uint64_t LSTM.recurrentWeight.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  return Parameter.wrappedValue.setter(&v2);
}

uint64_t (*LSTM.recurrentWeight.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 24));
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_257551A28;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t (*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t sub_257551A28(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v3 = *a1;
    swift_retain();
    Parameter.wrappedValue.setter(&v3);
    return swift_release();
  }
  else
  {
    uint64_t v3 = *a1;
    return Parameter.wrappedValue.setter(&v3);
  }
}

uint64_t LSTM.$recurrentWeight.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  char v3 = *(unsigned char *)(v1 + 33);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_retain();
}

void LSTM.inputWeight.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 50) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  *char v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  sub_257486C84();
}

uint64_t LSTM.inputWeight.setter(uint64_t *a1)
{
  uint64_t result = *a1;
  if (*(unsigned char *)(v1 + 50) == 1)
  {
    if (result)
    {
      uint64_t v3 = result;
      return Parameter.wrappedValue.setter(&v3);
    }
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_8;
  }
  if (result)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_131_0();
    __break(1u);
  }
  return result;
}

uint64_t *(*LSTM.inputWeight.modify(uint64_t *a1))(uint64_t *result, char a2)
{
  a1[1] = v1;
  if (*(unsigned char *)(v1 + 50) != 1)
  {
    *a1 = 0;
    return sub_257551CE0;
  }
  uint64_t v3 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 40));
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_257551CE0;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t *(*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t *sub_257551CE0(uint64_t *result, char a2)
{
  uint64_t v2 = *result;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(result[1] + 50))
    {
      if (v2)
      {
        uint64_t v3 = *result;
        return (uint64_t *)Parameter.wrappedValue.setter(&v3);
      }
      goto LABEL_14;
    }
    if (!v2) {
      return result;
    }
    swift_release();
LABEL_16:
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  if (!*(unsigned char *)(result[1] + 50))
  {
    if (!v2) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!v2)
  {
LABEL_14:
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
LABEL_17:
    uint64_t result = (uint64_t *)OUTLINED_FUNCTION_131_0();
    __break(1u);
    return result;
  }
  uint64_t v3 = *result;
  swift_retain();
  Parameter.wrappedValue.setter(&v3);
LABEL_9:
  return (uint64_t *)swift_release();
}

uint64_t LSTM.$inputWeight.getter@<X0>(uint64_t a1@<X8>)
{
  if (v1[50] == 1)
  {
    if (v1[49]) {
      __int16 v3 = 256;
    }
    else {
      __int16 v3 = 0;
    }
    __int16 v4 = v3 | v1[48];
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v4 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

void LSTM.bias.getter(void *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 66) != 1)
  {
    *a1 = 0;
    return;
  }
  uint64_t v2 = OUTLINED_FUNCTION_28_3();
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
LABEL_10:
    OUTLINED_FUNCTION_16_7();
    __break(1u);
    return;
  }
  if ((v2 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_10;
  }
  *__int16 v3 = v2 & 0x7FFFFFFFFFFFFFFFLL;
  sub_257486C84();
}

void *sub_257551EEC@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X3>, void *a2@<X8>)
{
  uint64_t result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_257551F9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v7 = *a1;
  swift_retain();
  return a5(&v7);
}

uint64_t LSTM.bias.setter(uint64_t *a1)
{
  uint64_t result = *a1;
  if (*(unsigned char *)(v1 + 66) == 1)
  {
    if (result)
    {
      uint64_t v3 = result;
      return Parameter.wrappedValue.setter(&v3);
    }
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
    goto LABEL_8;
  }
  if (result)
  {
    swift_release();
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
LABEL_8:
    uint64_t result = OUTLINED_FUNCTION_131_0();
    __break(1u);
  }
  return result;
}

uint64_t *(*LSTM.bias.modify(uint64_t *a1))(uint64_t *result, char a2)
{
  a1[1] = v1;
  if (*(unsigned char *)(v1 + 66) != 1)
  {
    *a1 = 0;
    return sub_257552154;
  }
  uint64_t v3 = OUTLINED_FUNCTION_18_7(*(void *)(v1 + 56));
  if (v4)
  {
    OUTLINED_FUNCTION_5_11();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_50_0();
  }
  else
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_257486C84();
      return sub_257552154;
    }
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
  }
  uint64_t result = (uint64_t *(*)(uint64_t *, char))OUTLINED_FUNCTION_16_7();
  __break(1u);
  return result;
}

uint64_t *sub_257552154(uint64_t *result, char a2)
{
  uint64_t v2 = *result;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(result[1] + 66))
    {
      if (v2)
      {
        uint64_t v3 = *result;
        return (uint64_t *)Parameter.wrappedValue.setter(&v3);
      }
      goto LABEL_14;
    }
    if (!v2) {
      return result;
    }
    swift_release();
LABEL_16:
    OUTLINED_FUNCTION_22_6();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_17;
  }
  if (!*(unsigned char *)(result[1] + 66))
  {
    if (!v2) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
  if (!v2)
  {
LABEL_14:
    OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_37_1();
LABEL_17:
    uint64_t result = (uint64_t *)OUTLINED_FUNCTION_131_0();
    __break(1u);
    return result;
  }
  uint64_t v3 = *result;
  swift_retain();
  Parameter.wrappedValue.setter(&v3);
LABEL_9:
  return (uint64_t *)swift_release();
}

uint64_t LSTM.$bias.getter@<X0>(uint64_t a1@<X8>)
{
  if (v1[66] == 1)
  {
    if (v1[65]) {
      __int16 v3 = 256;
    }
    else {
      __int16 v3 = 0;
    }
    __int16 v4 = v3 | v1[64];
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
    __int16 v4 = 0;
  }
  *(void *)a1 = result;
  *(_WORD *)(a1 + 8) = v4;
  return result;
}

uint64_t LSTM.init(unitCount:recurrentWeightInitializer:inputWeightInitializer:biasInitializer:isBidirectional:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  OUTLINED_FUNCTION_25_18();
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_25748FBC8(v8);
  OUTLINED_FUNCTION_25_18();
  swift_allocObject();
  swift_retain();
  if (a2)
  {
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_25748FBC8(v10);
  }
  else
  {
    uint64_t v11 = sub_25748FC24(0);
  }
  uint64_t v12 = v11;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_25_18();
  swift_allocObject();
  if (a3) {
    uint64_t v13 = sub_25748FBC8(a3);
  }
  else {
    uint64_t v13 = OUTLINED_FUNCTION_20_7();
  }
  uint64_t v14 = v13;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)a5 = 0;
  *(void *)(a5 + 8) = a1;
  *(unsigned char *)(a5 + 16) = a4 & 1;
  *(void *)(a5 + 24) = v9;
  *(_WORD *)(a5 + 32) = 256;
  *(void *)(a5 + 40) = v12;
  *(_WORD *)(a5 + 48) = 256;
  *(unsigned char *)(a5 + 50) = a2 != 0;
  *(void *)(a5 + 56) = v14;
  *(_WORD *)(a5 + 64) = 256;
  *(unsigned char *)(a5 + 66) = a3 != 0;
  return result;
}

uint64_t LSTM.init(recurrentWeight:inputWeight:bias:isBidirectional:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t v9 = *a3;
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  swift_initStackObject();
  OUTLINED_FUNCTION_20_7();
  uint64_t v10 = 2;
  if (a4) {
    uint64_t v10 = 3;
  }
  uint64_t v11 = *(void **)(*(void *)(v7 + 16) + 152);
  if (v11[2] != v10) {
    goto LABEL_35;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  if (a4)
  {
    uint64_t v12 = v11[6];
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_2576ABB50;
    *(void *)(v13 + 32) = 2;
    OUTLINED_FUNCTION_39_10();
    if (!v15)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      OUTLINED_FUNCTION_35_9();
      OUTLINED_FUNCTION_15_22();
      goto LABEL_40;
    }
    uint64_t v16 = v14;
    *(void *)(v14 + 40) = 4 * v12;
    *(void *)(v14 + 48) = v12;
  }
  else
  {
    uint64_t v12 = v11[5];
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2576ABB30;
    OUTLINED_FUNCTION_39_10();
    if (!v15) {
      goto LABEL_34;
    }
    uint64_t v16 = v17;
    *(void *)(v17 + 32) = 4 * v12;
    *(void *)(v17 + 40) = v12;
  }
  if ((sub_257654B3C(v11, v16) & 1) == 0) {
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = OUTLINED_FUNCTION_14_28();
  uint64_t v26 = OUTLINED_FUNCTION_10_26(v18, v19, v20, v21, v22, v23, v24, v25, v54, v56, v58);
  uint64_t v27 = v26;
  uint64_t v28 = 8 * v12;
  if (!v8) {
    goto LABEL_19;
  }
  uint64_t v29 = *(void *)(*(void *)(v8 + 16) + 152);
  if (*(void *)(v29 + 16) != 2) {
    goto LABEL_39;
  }
  if (a4)
  {
    uint64_t v30 = 8 * v12;
    if ((unint64_t)(v12 - 0x1000000000000000) >> 61 == 7) {
      goto LABEL_18;
    }
    __break(1u);
  }
  uint64_t v30 = 4 * v12;
LABEL_18:
  if (*(void *)(v29 + 32) != v30) {
    goto LABEL_41;
  }
LABEL_19:
  if (v9)
  {
    uint64_t v59 = v9;
    uint64_t v31 = *(void *)(*(void *)(v9 + 16) + 152);
    if (*(void *)(v31 + 16) == 1)
    {
      uint64_t v32 = v8;
      uint64_t v33 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
      if (a4)
      {
        if ((unint64_t)(v12 - 0x1000000000000000) >> 61 == 7) {
          goto LABEL_25;
        }
        __break(1u);
      }
      uint64_t v28 = 4 * v12;
LABEL_25:
      *(void *)(inited + 32) = v28;
      if (sub_257654B3C(v31, inited))
      {
        swift_setDeallocating();
        uint64_t v27 = v33;
        uint64_t v8 = v32;
        uint64_t v9 = v59;
        goto LABEL_27;
      }
LABEL_41:
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_35_1();
      uint64_t result = sub_2576A8B60();
      __break(1u);
      return result;
    }
LABEL_39:
    OUTLINED_FUNCTION_35_9();
    swift_retain();
    OUTLINED_FUNCTION_15_22();
LABEL_40:
    sub_25746BF88();
  }
LABEL_27:
  swift_release();
  if (v8)
  {
    uint64_t v35 = OUTLINED_FUNCTION_14_28();
    uint64_t v43 = OUTLINED_FUNCTION_10_26(v35, v36, v37, v38, v39, v40, v41, v42, v55, v57, v59);
  }
  else
  {
    OUTLINED_FUNCTION_14_28();
    uint64_t v43 = OUTLINED_FUNCTION_20_7();
  }
  uint64_t v44 = v43;
  swift_release();
  if (v9)
  {
    uint64_t v45 = OUTLINED_FUNCTION_14_28();
    uint64_t result = OUTLINED_FUNCTION_10_26(v45, v46, v47, v48, v49, v50, v51, v52, v55, v57, v59);
  }
  else
  {
    OUTLINED_FUNCTION_14_28();
    uint64_t result = OUTLINED_FUNCTION_20_7();
  }
  *(unsigned char *)a5 = 0;
  *(void *)(a5 + 8) = v12;
  *(unsigned char *)(a5 + 16) = a4 & 1;
  *(void *)(a5 + 24) = v27;
  *(_WORD *)(a5 + 32) = 256;
  *(void *)(a5 + 40) = v44;
  *(_WORD *)(a5 + 48) = 256;
  *(unsigned char *)(a5 + 50) = v8 != 0;
  *(void *)(a5 + 56) = result;
  *(_WORD *)(a5 + 64) = 256;
  *(unsigned char *)(a5 + 66) = v9 != 0;
  return result;
}

uint64_t sub_257552880(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if (v2[2] < 2uLL)
  {
LABEL_12:
    sub_2576A7810();
    sub_25746BF88();
  }
  uint64_t v3 = *(void *)(v1 + 8);
  int v4 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v6 = v2[4];
  uint64_t v5 = v2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = v7;
  *(_OWORD *)(v7 + 16) = xmmword_2576ABB50;
  *(void *)(v7 + 32) = v6;
  *(void *)(v7 + 40) = v5;
  if (!v4)
  {
    *(void *)(v7 + 48) = v3;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2576ABB50;
    *(void *)(v12 + 32) = v6;
    *(void *)(v12 + 40) = v5;
    if ((unint64_t)(v3 - 0x2000000000000000) >> 62 == 3)
    {
      uint64_t v10 = v12;
      char v11 = 2;
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  if (v3 + 0x4000000000000000 < 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(void *)(v7 + 48) = 2 * v3;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_2576ABB50;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v5;
  if ((unint64_t)(v3 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = v9;
  char v11 = 3;
LABEL_8:
  *(void *)(v10 + 48) = v3 << v11;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2576ABB50;
  *(void *)(v13 + 32) = v8;
  *(unsigned char *)(v13 + 40) = 10;
  *(void *)(v13 + 48) = v8;
  *(unsigned char *)(v13 + 56) = 10;
  *(void *)(v13 + 64) = v10;
  *(unsigned char *)(v13 + 72) = 10;
  sub_2576A7810();
  return v13;
}

uint64_t sub_257552A70(uint64_t a1, void *a2, uint64_t a3, char a4, char a5, char a6)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v6 = a2[2];
  if (!v6)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v6 == 1)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v6 < 3)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    sub_257472D74();
    uint64_t v48 = v83;
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = a2 + 4;
  uint64_t v15 = a2[4];
  uint64_t v16 = a2[5];
  uint64_t v17 = a2[6];
  if (a5)
  {
    if (v6 < 4)
    {
      __break(1u);
      goto LABEL_39;
    }
    if ((a6 & 1) == 0)
    {
      uint64_t v26 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v16 + 16);
      uint64_t v25 = *(void *)(v17 + 16);
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      uint64_t v87 = 0;
      uint64_t v24 = swift_retain();
      goto LABEL_17;
    }
    uint64_t v91 = a2[7];
    swift_retain();
    unint64_t v18 = 4;
  }
  else
  {
    if ((a6 & 1) == 0)
    {
      uint64_t v27 = 0;
      uint64_t v88 = 0;
      uint64_t v89 = 0;
      uint64_t v87 = 0;
      uint64_t v26 = *(void *)(v15 + 16);
      uint64_t v22 = *(void *)(v16 + 16);
      uint64_t v24 = 0;
      uint64_t v25 = *(void *)(v17 + 16);
      goto LABEL_19;
    }
    uint64_t v91 = 0;
    unint64_t v18 = 3;
  }
  if (v18 >= v6)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  if (v18 + 1 >= v6)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v90 = a3;
  uint64_t v19 = *(void *)(v14[v18] + 16);
  uint64_t v20 = *(void *)(v14[v18 + 1] + 16);
  uint64_t v21 = *(void *)(v15 + 16);
  uint64_t v22 = *(void *)(v16 + 16);
  uint64_t v23 = *(void *)(v17 + 16);
  uint64_t v87 = v14[v18];
  swift_retain();
  swift_retain();
  uint64_t v88 = v19;
  swift_retain();
  uint64_t v89 = v20;
  swift_retain();
  uint64_t v24 = v91;
  if (v91)
  {
    uint64_t v25 = v23;
    uint64_t v26 = v21;
    a3 = v90;
LABEL_17:
    uint64_t v27 = *(void *)(v24 + 16);
    swift_retain();
    goto LABEL_19;
  }
  uint64_t v27 = 0;
  uint64_t v25 = v23;
  uint64_t v26 = v21;
  a3 = v90;
LABEL_19:
  uint64_t v28 = *(void *)(v13 + 16);
  uint64_t v29 = *(void *)(a3 + 16);
  if (!v29)
  {
LABEL_41:
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2574C3AC0(v87);
    sub_2574C3AC0(v88);
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v92 = v24;
  uint64_t v30 = *(void *)(v29 + 16);
  uint64_t v31 = *(void *)(a3 + 24);
  if (!v31)
  {
LABEL_42:
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2574C3AC0(v87);
    uint64_t result = sub_2574C3AC0(v88);
    __break(1u);
    return result;
  }
  uint64_t v32 = *(void *)(v31 + 16);
  long long v100 = xmmword_2576AD930;
  long long v101 = xmmword_2576B60A0;
  uint64_t v99 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/LSTMLayerOps.swift";
  uint64_t v102 = "init(id:input:recurrentWeight:inputWeight:bias:state:isBidirectional:gradient:zState:cellOutputForward:creationSite:)";
  uint64_t v103 = 117;
  __int16 v104 = 2;
  type metadata accessor for LSTMLayerGradientOperation();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_257557474(v88);
  uint64_t v10 = sub_2574C3464(0, 0, 0, v26, v22, v25, v27, v88, v89, a4 & 1, v28, v30, v32, (uint64_t)&v99);
  sub_25747B47C(v28 + 168, (uint64_t)v98);
  sub_25747B47C((uint64_t)v98, (uint64_t)v97);
  sub_25747B47C((uint64_t)v97, (uint64_t)v96);
  type metadata accessor for ContextManager();
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v33 = v95;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v34 = v94;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  type metadata accessor for TensorRepresentation();
  uint64_t v35 = swift_allocObject();
  v93[0] = 1;
  uint64_t v36 = sub_257584598(v10, 0, v96, 0x100000000, v33, v34, v35);
  type metadata accessor for TensorHandle();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v97);
  sub_25747B47C((uint64_t)v98, (uint64_t)v97);
  sub_25747B47C((uint64_t)v97, (uint64_t)v96);
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v38 = v95;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v39 = v94;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  uint64_t v40 = swift_allocObject();
  v93[0] = 1;
  uint64_t v41 = sub_257584598(v10, 1, v96, 0x100000000, v38, v39, v40);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  swift_retain();
  sub_2576139A8();
  swift_release();
  sub_25747B4E4((uint64_t)v97);
  sub_2575574B4();
  sub_25747B47C((uint64_t)v98, (uint64_t)v97);
  sub_25747B47C((uint64_t)v97, (uint64_t)v96);
  swift_retain_n();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v43 = v95;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v44 = v94;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  uint64_t v45 = swift_allocObject();
  v93[0] = 1;
  uint64_t v46 = sub_257584598(v10, 2, v96, 0x100000000, v43, v44, v45);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  swift_retain();
  sub_2576139A8();
  swift_release();
  swift_release();
  sub_25747B4E4((uint64_t)v97);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001080);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2576ABB50;
  swift_retain();
  swift_retain();
  uint64_t v49 = sub_2574E8C6C();
  *(void *)(v48 + 32) = v37;
  *(void *)(v48 + 40) = v49;
  *(void *)(v48 + 48) = v50;
  swift_retain();
  swift_retain();
  uint64_t v51 = sub_2574E8C6C();
  *(void *)(v48 + 56) = v42;
  *(void *)(v48 + 64) = v51;
  *(void *)(v48 + 72) = v52;
  swift_retain();
  swift_retain();
  uint64_t v53 = sub_2574E8C6C();
  *(void *)(v48 + 80) = v47;
  *(void *)(v48 + 88) = v53;
  *(void *)(v48 + 96) = v54;
  if (!v92)
  {
    uint64_t v61 = 3;
    goto LABEL_25;
  }
  sub_25747B47C((uint64_t)v98, (uint64_t)v97);
  sub_25747B47C((uint64_t)v97, (uint64_t)v96);
  swift_retain_n();
  swift_retain();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v55 = v95;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  sub_2575D60A8();
  sub_2575D614C((uint64_t)v93);
  swift_release();
  uint64_t v56 = v94;
  swift_retain();
  sub_2574718B0((uint64_t)v93);
  uint64_t v57 = swift_allocObject();
  v93[0] = 1;
  uint64_t v58 = sub_257584598(v10, 3, v96, 0x100000000, v55, v56, v57);
  unint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v58;
  swift_retain();
  sub_2576139A8();
  swift_release();
  swift_release();
  sub_25747B4E4((uint64_t)v97);
  swift_retain();
  uint64_t v7 = sub_2574E8C6C();
  uint64_t v8 = v59;
  unint64_t v11 = *(void *)(v48 + 16);
  unint64_t v9 = v11 + 1;
  if (v11 >= *(void *)(v48 + 24) >> 1) {
    goto LABEL_37;
  }
LABEL_23:
  *(void *)(v48 + 16) = v9;
  uint64_t v60 = (void *)(v48 + 24 * v11);
  v60[4] = v6;
  v60[5] = v7;
  v60[6] = v8;
  swift_release();
  uint64_t v61 = 4;
LABEL_25:
  if (v87)
  {
    sub_25747B47C((uint64_t)v98, (uint64_t)v97);
    sub_25747B47C((uint64_t)v97, (uint64_t)v96);
    swift_retain();
    sub_257557474(v87);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v93);
    swift_release();
    uint64_t v62 = v95;
    swift_retain();
    sub_2574718B0((uint64_t)v93);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v93);
    swift_release();
    uint64_t v63 = v94;
    swift_retain();
    sub_2574718B0((uint64_t)v93);
    uint64_t v64 = swift_allocObject();
    v93[0] = 1;
    uint64_t v65 = sub_257584598(v10, v61, v96, 0x100000000, v62, v63, v64);
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v65;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v97);
    swift_retain();
    uint64_t v67 = sub_2574E8C6C();
    uint64_t v69 = v68;
    unint64_t v70 = *(void *)(v48 + 16);
    if (v70 >= *(void *)(v48 + 24) >> 1)
    {
      sub_257472D74();
      uint64_t v48 = v84;
    }
    *(void *)(v48 + 16) = v70 + 1;
    uint64_t v71 = (void *)(v48 + 24 * v70);
    v71[4] = v66;
    v71[5] = v67;
    v71[6] = v69;
    sub_25747B47C((uint64_t)v98, (uint64_t)v97);
    sub_25747B47C((uint64_t)v97, (uint64_t)v96);
    swift_retain();
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v93);
    swift_release();
    uint64_t v72 = v95;
    swift_retain();
    sub_2574718B0((uint64_t)v93);
    sub_2575D60A8();
    sub_2575D614C((uint64_t)v93);
    swift_release();
    uint64_t v73 = v94;
    swift_retain();
    sub_2574718B0((uint64_t)v93);
    uint64_t v74 = swift_allocObject();
    v93[0] = 1;
    uint64_t v75 = sub_257584598(v10, v61 + 1, v96, 0x100000000, v72, v73, v74);
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v75;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v97);
    swift_retain();
    uint64_t v77 = sub_2574E8C6C();
    uint64_t v79 = v78;
    unint64_t v80 = *(void *)(v48 + 16);
    if (v80 >= *(void *)(v48 + 24) >> 1)
    {
      sub_257472D74();
      uint64_t v48 = v85;
    }
    *(void *)(v48 + 16) = v80 + 1;
    uint64_t v81 = (void *)(v48 + 24 * v80);
    v81[4] = v76;
    v81[5] = v77;
    v81[6] = v79;
    sub_2574C3AC0(v87);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2574C3AC0(v87);
    sub_2574C3AC0(v88);
    sub_25747B4E4((uint64_t)v98);
  }
  else
  {
    sub_25747B4E4((uint64_t)v98);
    sub_2574C3AC0(v88);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  return v48;
}

void *LSTM.State.init(hidden:cell:)@<X0>(void *result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a2;
  *a3 = *result;
  a3[1] = v3;
  return result;
}

__n128 LSTM.forward(_:)@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  memcpy(__dst, v3, 0x43uLL);
  type metadata accessor for LSTMLayerOperationBackwardContext();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  *(void *)(v8 + 24) = 0;
  swift_retain();
  swift_retain();
  sub_257557474(v6);
  sub_257518BEC((uint64_t)__dst);
  sub_2575D5AF4(__src, v5, v6, v7, __dst, v8);
  __n128 v12 = (__n128)__src[0];
  unint64_t v9 = *(void *)&__src[1];
  type metadata accessor for ContextManager();
  sub_2575D60A8();
  sub_2575D614C((uint64_t)__src);
  swift_release();
  memcpy(v13, __src, 0x88uLL);
  if (!v13[10])
  {
    sub_2574718B0((uint64_t)v13);
LABEL_8:
    swift_release();
    goto LABEL_9;
  }
  int v10 = *(unsigned __int8 *)(v13[10] + 24);
  sub_2574718B0((uint64_t)v13);
  if (v10 != 1) {
    goto LABEL_8;
  }
  if (*(void *)(v8 + 24))
  {
    swift_retain_n();
    swift_retain();
    OUTLINED_FUNCTION_37_8();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  if (!*(void *)(v8 + 16)) {
    goto LABEL_8;
  }
  swift_retain_n();
  swift_retain();
  OUTLINED_FUNCTION_37_8();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
LABEL_9:
  __n128 result = v12;
  *a2 = v12;
  a2[1].n128_u64[0] = v9;
  return result;
}

void sub_257553898()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v0;
  uint64_t v261 = v4;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  if (v1)
  {
    uint64_t v13 = *(void *)(v1 + 16);
    uint64_t v14 = *(void *)(v2 + 16);
    swift_retain();
    swift_retain();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  memcpy(__dst, (const void *)v6, 0x43uLL);
  uint64_t v15 = *(void *)(v8 + 16);
  v291 = *(const char **)(v15 + 152);
  swift_retain();
  uint64_t v253 = sub_257552880(&v291);
  uint64_t v16 = *(void *)(*(void *)(v6 + 24) + 32);
  if ((~v16 & 0xF000000000000007) == 0) {
    goto LABEL_17;
  }
  uint64_t v216 = v10;
  if ((v16 & 0x8000000000000000) == 0) {
    goto LABEL_18;
  }
  uint64_t v17 = v15;
  uint64_t v18 = *(void *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  if ((*(unsigned char *)(v6 + 50) & 1) == 0)
  {
    uint64_t v19 = 0;
    goto LABEL_11;
  }
  uint64_t v20 = *(void *)(*(void *)(v6 + 40) + 32);
  if ((~v20 & 0xF000000000000007) == 0) {
    goto LABEL_17;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
LABEL_18:
    OUTLINED_FUNCTION_0_18();
    OUTLINED_FUNCTION_17_0();
    OUTLINED_FUNCTION_35_1();
    goto LABEL_19;
  }
  uint64_t v19 = swift_retain();
LABEL_11:
  char v21 = *(unsigned char *)(v6 + 66);
  uint64_t v234 = v12;
  uint64_t v244 = v3;
  uint64_t v225 = v8;
  uint64_t v198 = v19;
  if ((v21 & 1) == 0)
  {
    uint64_t v189 = 0;
LABEL_16:
    unsigned __int8 v23 = *(unsigned char *)(v6 + 16);
    HIDWORD(v180) = v23;
    BOOL v24 = v13 != 0;
    uint64_t v25 = v13;
    uint64_t v26 = swift_allocObject();
    memcpy((void *)(v26 + 16), (const void *)v6, 0x43uLL);
    *(void *)(v26 + 88) = v261;
    *(unsigned char *)(v26 + 96) = v23;
    *(unsigned char *)(v26 + 97) = v21 & 1;
    *(unsigned char *)(v26 + 98) = v24;
    swift_retain();
    swift_retain();
    sub_257518BEC(v6);
    swift_retain();
    uint64_t v27 = sub_25761BED4((uint64_t)sub_25755745C);
    uint64_t v29 = v28;
    swift_release();
    long long v292 = xmmword_2576AD930;
    long long v293 = xmmword_2576AD940;
    v291 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/LSTMLayerOps.swift";
    v294 = "init(id:input:recurrentWeight:inputWeight:bias:hiddenWeight:state:isBidirectional:resultDescriptors:creationSite:backward:)";
    uint64_t v295 = 123;
    __int16 v296 = 2;
    type metadata accessor for LSTMLayerOperation();
    swift_allocObject();
    sub_257557474(v25);
    uint64_t v30 = sub_2574C30A4(0, 0, 0, v17, v18, v198, v189, 0, v25, v14, v23, v253, (uint64_t)&v291, v27, v29);
    OUTLINED_FUNCTION_9_34(v30, v31, v32, v33, v34, v35, v36, v37, v117, v126, v135, v144, v153, v162, v171, v180, v189, v198, v25,
      v216,
      v225,
      v234,
      v244,
      v253,
      v261,
      v271,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      v281,
      v282,
      v283,
      v284,
      v285,
      v286,
      v287,
      v288,
      v289);
    type metadata accessor for ContextManager();
    swift_retain();
    uint64_t v38 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v38, v39, v40, v41, v42, v43, v44, v45, v118, v127, v136, v145, v154, v163, v172, v181, v190, v199, v207,
      v217,
      v226,
      v235,
      v245,
      v254,
      v262,
      v272,
      __dst[0]);
    swift_release();
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    uint64_t v46 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v46, v47, v48, v49, v50, v51, v52, v53, v119, v128, v137, v146, v155, v164, v173, v182, v191, v200, v208,
      v218,
      v227,
      v236,
      v246,
      v255,
      v263,
      v273,
      __dst[0]);
    swift_release();
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    type metadata accessor for TensorRepresentation();
    swift_allocObject();
    LOBYTE(__dst[0]) = 1;
    uint64_t v54 = OUTLINED_FUNCTION_28_14();
    uint64_t v55 = sub_257584788(v54, 0);
    type metadata accessor for TensorHandle();
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v55;
    swift_retain();
    sub_2576139A8();
    swift_release();
    uint64_t v57 = sub_25747B4E4((uint64_t)v290);
    OUTLINED_FUNCTION_9_34(v57, v58, v59, v60, v61, v62, v63, v64, v120, v129, v138, v147, v156, v165, v174, v183, v192, v201, v209,
      v219,
      v228,
      v237,
      v247,
      v256,
      v264,
      v274,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      v281,
      v282,
      v283,
      v284,
      v285,
      v286,
      v287,
      v288,
      v289);
    swift_retain();
    uint64_t v65 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v65, v66, v67, v68, v69, v70, v71, v72, v121, v130, v139, v148, v157, v166, v175, v184, v193, v202, v210,
      v220,
      v229,
      v238,
      v248,
      v257,
      v265,
      v275,
      __dst[0]);
    swift_release();
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    uint64_t v73 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v73, v74, v75, v76, v77, v78, v79, v80, v122, v131, v140, v149, v158, v167, v176, v185, v194, v203, v211,
      v221,
      v230,
      v239,
      v249,
      v258,
      v266,
      v276,
      __dst[0]);
    swift_release();
    uint64_t v81 = v281;
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    swift_allocObject();
    LOBYTE(__dst[0]) = 1;
    uint64_t v82 = OUTLINED_FUNCTION_28_14();
    sub_257584788(v82, 1);
    uint64_t v83 = OUTLINED_FUNCTION_42_6();
    *(void *)(v83 + 16) = v81;
    swift_retain();
    sub_2576139A8();
    swift_release();
    uint64_t v84 = sub_25747B4E4((uint64_t)v290);
    OUTLINED_FUNCTION_9_34(v84, v85, v86, v87, v88, v89, v90, v91, v123, v132, v141, v150, v159, v168, v177, v186, v195, v204, v212,
      v222,
      v231,
      v240,
      v250,
      v259,
      v267,
      v277,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      v281,
      v282,
      v283,
      v284,
      v285,
      v286,
      v287,
      v288,
      v289);
    swift_retain();
    uint64_t v92 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v92, v93, v94, v95, v96, v97, v98, v99, v124, v133, v142, v151, v160, v169, v178, v187, v196, v205, v213,
      v223,
      v232,
      v241,
      v251,
      v30,
      v268,
      v278,
      __dst[0]);
    swift_release();
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    long long v100 = sub_2575D60A8();
    OUTLINED_FUNCTION_21_22((uint64_t)v100, v101, v102, v103, v104, v105, v106, v107, v125, v134, v143, v152, v161, v170, v179, v188, v197, v206, v214,
      v224,
      v233,
      v242,
      v252,
      v260,
      v269,
      v279,
      __dst[0]);
    swift_release();
    uint64_t v108 = v281;
    swift_retain();
    sub_2574718B0((uint64_t)__dst);
    swift_allocObject();
    LOBYTE(__dst[0]) = 1;
    uint64_t v109 = OUTLINED_FUNCTION_28_14();
    sub_257584788(v109, 2);
    uint64_t v110 = OUTLINED_FUNCTION_42_6();
    *(void *)(v110 + 16) = v108;
    swift_retain();
    sub_2576139A8();
    swift_release();
    sub_25747B4E4((uint64_t)v290);
    *(void *)(v270 + 24) = v83;
    swift_retain();
    swift_release();
    *(void *)(v270 + 16) = v110;
    swift_retain();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A003970);
    uint64_t v111 = swift_allocObject();
    uint64_t v112 = MEMORY[0x263F8D6C8];
    *(_OWORD *)(v111 + 16) = xmmword_2576ABB10;
    *(void *)(v111 + 56) = v112;
    *(void *)(v111 + 64) = &protocol witness table for Int;
    *(void *)(v111 + 32) = -1;
    v290[0] = v56;
    swift_retain();
    Tensor.subscript.getter();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v113 = __dst[0];
    uint64_t v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_2576ABB10;
    *(void *)(v114 + 56) = v112;
    *(void *)(v114 + 64) = &protocol witness table for Int;
    *(void *)(v114 + 32) = -1;
    v290[0] = v83;
    swift_retain();
    Tensor.subscript.getter();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v115 = __dst[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t v116 = swift_allocObject();
    *(_OWORD *)(v116 + 16) = xmmword_2576B32E0;
    *(void *)(v116 + 32) = v115;
    *(void *)(v116 + 40) = v113;
    *(void *)(v116 + 48) = v56;
    *(void *)(v116 + 56) = v83;
    *(void *)(v116 + 64) = v110;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2575CA228(v116);
    swift_release();
    swift_release();
    sub_2574C3AC0(v215);
    swift_setDeallocating();
    sub_2575AEC4C();
    v243[1] = v113;
    v243[2] = v115;
    uint64_t *v243 = v56;
    OUTLINED_FUNCTION_7_1();
    return;
  }
  uint64_t v22 = *(void *)(*(void *)(v6 + 56) + 32);
  if ((~v22 & 0xF000000000000007) != 0)
  {
    if (v22 < 0)
    {
      uint64_t v189 = *(void *)((v22 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_17:
  OUTLINED_FUNCTION_5_11();
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_50_0();
LABEL_19:
  sub_2576A8B60();
  __break(1u);
}

uint64_t sub_257553F78(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char a6, char a7)
{
  return sub_257552A70(a1, a2, a4, a5, a6, a7);
}

uint64_t sub_257553FB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 16);
  if (v2 != 3)
  {
LABEL_21:
    uint64_t v17 = v2;
    long long v18 = xmmword_2576AD000;
    char v19 = 0;
    long long v20 = xmmword_2576AD010;
    char v21 = 0;
    char v22 = 7;
    sub_25746BF88();
  }
  uint64_t v3 = *(void *)(v1 + 8);
  int v4 = *(unsigned __int8 *)(v1 + 50);
  int v5 = *(unsigned __int8 *)(v1 + 66);
  int v6 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(*(void *)a1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
  if (v6 == 1)
  {
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2576ABB50;
    *(void *)(v8 + 32) = 2;
    if ((unint64_t)(v3 - 0x2000000000000000) >> 62 == 3)
    {
      *(void *)(v8 + 40) = 4 * v3;
      *(void *)(v8 + 48) = v3;
      uint64_t v17 = v8;
      swift_retain();
      sub_25748FC8C(&v17);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = 8 * v3;
      if (!v4) {
        goto LABEL_7;
      }
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_2576ABB30;
      if ((unint64_t)(v3 - 0x1000000000000000) >> 61 == 7)
      {
        *(void *)(v11 + 32) = v10;
        *(void *)(v11 + 40) = v7;
        uint64_t v17 = v11;
        swift_retain();
        sub_25748FC8C(&v17);
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
        if (!v5) {
          return result;
        }
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_2576ABB10;
        if ((unint64_t)(v3 - 0x1000000000000000) >> 61 == 7)
        {
          *(void *)(v12 + 32) = v10;
LABEL_15:
          uint64_t v17 = v12;
          swift_retain();
          sub_25748FC8C(&v17);
          swift_release();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_20;
      }
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2576ABB30;
  if ((unint64_t)(v3 - 0x2000000000000000) >> 62 != 3) {
    goto LABEL_18;
  }
  uint64_t v16 = v7;
  uint64_t v17 = v13;
  uint64_t v14 = 4 * v3;
  *(void *)(v13 + 32) = 4 * v3;
  *(void *)(v13 + 40) = v3;
  swift_retain();
  sub_25748FC8C(&v17);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2576ABB30;
    *(void *)(v15 + 32) = v14;
    *(void *)(v15 + 40) = v16;
    uint64_t v17 = v15;
    swift_retain();
    sub_25748FC8C(&v17);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (v5)
  {
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2576ABB10;
    *(void *)(v12 + 32) = v14;
    goto LABEL_15;
  }
  return result;
}

uint64_t LSTM.initializeParameters(for:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)v1 + 1);
  char v4 = v1[16];
  uint64_t v5 = *((void *)v1 + 3);
  char v6 = v1[32];
  char v7 = v1[33];
  uint64_t v8 = *((void *)v1 + 5);
  char v9 = v1[48];
  char v10 = v1[49];
  char v11 = v1[50];
  uint64_t v12 = *((void *)v1 + 7);
  char v13 = v1[64];
  char v14 = v1[65];
  char v15 = v1[66];
  char v18 = *v1;
  uint64_t v19 = v3;
  char v20 = v4;
  uint64_t v21 = v5;
  char v22 = v6;
  char v23 = v7;
  uint64_t v24 = v8;
  char v25 = v9;
  char v26 = v10;
  char v27 = v11;
  uint64_t v28 = v12;
  char v29 = v13;
  char v30 = v14;
  char v31 = v15;
  uint64_t v17 = *(void *)(*(void *)(v2 + 16) + 152);
  return sub_257553FB4((uint64_t)&v17);
}

uint64_t sub_257554370(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E696E7261656CLL && a2 == 0xED00006573616850;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E756F4374696E75 && a2 == 0xE900000000000074;
    if (v6 || (sub_2576A8F60() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6572696469427369 && a2 == 0xEF6C616E6F697463;
      if (v7 || (sub_2576A8F60() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E65727275636572 && a2 == 0xEF74686769655774;
        if (v8 || (sub_2576A8F60() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6965577475706E69 && a2 == 0xEB00000000746867;
          if (v9 || (sub_2576A8F60() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 1935763810 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_2576A8F60();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_257554660(char a1)
{
  uint64_t result = 0x676E696E7261656CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E756F4374696E75;
      break;
    case 2:
      uint64_t result = 0x6572696469427369;
      break;
    case 3:
      uint64_t result = 0x6E65727275636572;
      break;
    case 4:
      uint64_t result = 0x6965577475706E69;
      break;
    case 5:
      uint64_t result = 1935763810;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_257554754()
{
  return sub_257554660(*v0);
}

uint64_t sub_25755475C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257554370(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257554784(uint64_t a1)
{
  unint64_t v2 = sub_25755545C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575547C0(uint64_t a1)
{
  unint64_t v2 = sub_25755545C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LSTM.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0036F0);
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_25755545C();
  sub_2576A9230();
  sub_2575554A8();
  sub_2576A8E40();
  if (!v0)
  {
    OUTLINED_FUNCTION_31_12();
    sub_2576A8E30();
    OUTLINED_FUNCTION_31_12();
    sub_2576A8E10();
    sub_2574B3990();
    OUTLINED_FUNCTION_31_12();
    sub_2576A8E40();
    sub_2575554F4();
    OUTLINED_FUNCTION_19_21();
    OUTLINED_FUNCTION_19_21();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_7_1();
}

void LSTM.init(from:)()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003710);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v5);
  OUTLINED_FUNCTION_8_0();
  type metadata accessor for LayerVariableReference();
  swift_initStackObject();
  sub_25748FC24(0);
  swift_initStackObject();
  sub_25748FC24(0);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_25755545C();
  sub_2576A91F0();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_257555540();
    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_40_8();
    OUTLINED_FUNCTION_24_19(1);
    uint64_t v9 = sub_2576A8D40();
    OUTLINED_FUNCTION_24_19(2);
    char v8 = sub_2576A8D20();
    sub_2574B3944();
    OUTLINED_FUNCTION_36_10();
    OUTLINED_FUNCTION_40_8();
    sub_25755558C();
    swift_retain();
    OUTLINED_FUNCTION_36_10();
    sub_2576A8D50();
    swift_retain();
    swift_release();
    OUTLINED_FUNCTION_36_10();
    sub_2576A8D50();
    uint64_t v6 = OUTLINED_FUNCTION_13_24();
    v7(v6);
    swift_retain();
    swift_release();
    *(unsigned char *)uint64_t v4 = v10;
    *(void *)(v4 + 8) = v9;
    *(unsigned char *)(v4 + 16) = v8 & 1;
    *(void *)(v4 + 24) = v10;
    *(unsigned char *)(v4 + 32) = v11;
    *(unsigned char *)(v4 + 33) = v12;
    *(void *)(v4 + 40) = v10;
    *(unsigned char *)(v4 + 48) = v11;
    *(unsigned char *)(v4 + 49) = v12;
    *(unsigned char *)(v4 + 50) = v13;
    *(void *)(v4 + 56) = v10;
    *(unsigned char *)(v4 + 64) = v11;
    *(unsigned char *)(v4 + 65) = v12;
    *(unsigned char *)(v4 + 66) = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_release();
  }
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_7_1();
}

unsigned char *sub_257554E40(char *a1)
{
  char v2 = *a1;
  return LSTM.learningPhase.setter(&v2);
}

void sub_257554E6C()
{
}

void sub_257554E84()
{
}

uint64_t LSTM.State.hidden.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_12_27(*v1, a1);
}

uint64_t LSTM.State.hidden.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *uint64_t v1 = v2;
  return result;
}

uint64_t (*LSTM.State.hidden.modify())(void)
{
  return nullsub_1;
}

uint64_t LSTM.State.cell.getter@<X0>(void *a1@<X8>)
{
  return OUTLINED_FUNCTION_12_27(*(void *)(v1 + 8), a1);
}

uint64_t LSTM.State.cell.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = v2;
  return result;
}

uint64_t (*LSTM.State.cell.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_257554F44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6564646968 && a2 == 0xE600000000000000;
  if (v2 || (sub_2576A8F60() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819043171 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_2576A8F60();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_25755501C(char a1)
{
  if (a1) {
    return 1819043171;
  }
  else {
    return 0x6E6564646968;
  }
}

uint64_t sub_257555048()
{
  return sub_25755501C(*v0);
}

uint64_t sub_257555050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_257554F44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_257555078(uint64_t a1)
{
  unint64_t v2 = sub_2575555D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2575550B4(uint64_t a1)
{
  unint64_t v2 = sub_2575555D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void LSTM.State.encode(to:)()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A003728);
  OUTLINED_FUNCTION_0_10();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  OUTLINED_FUNCTION_3_8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2575555D8();
  sub_2576A9230();
  sub_257490B00();
  OUTLINED_FUNCTION_19_21();
  if (!v0) {
    OUTLINED_FUNCTION_19_21();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_7_1();
}

void LSTM.State.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_9_1();
  char v12 = v11;
  char v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A003738);
  OUTLINED_FUNCTION_0_10();
  MEMORY[0x270FA5388](v15);
  OUTLINED_FUNCTION_8_0();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_2575555D8();
  sub_2576A91F0();
  if (v10)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_257490B4C();
    OUTLINED_FUNCTION_17_22();
    swift_retain();
    OUTLINED_FUNCTION_17_22();
    uint64_t v16 = OUTLINED_FUNCTION_38_9();
    v17(v16);
    void *v14 = a10;
    v14[1] = a10;
    swift_retain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_2575553AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  LSTM.State.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_2575553C4()
{
}

uint64_t LSTMLayerOperationBackwardContext.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t LSTMLayerOperationBackwardContext.__deallocating_deinit()
{
  LSTMLayerOperationBackwardContext.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LSTMLayerOperationBackwardContext()
{
  return self;
}

unint64_t sub_25755545C()
{
  unint64_t result = qword_26A0036F8;
  if (!qword_26A0036F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0036F8);
  }
  return result;
}

unint64_t sub_2575554A8()
{
  unint64_t result = qword_26A003700;
  if (!qword_26A003700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003700);
  }
  return result;
}

unint64_t sub_2575554F4()
{
  unint64_t result = qword_26A003708;
  if (!qword_26A003708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003708);
  }
  return result;
}

unint64_t sub_257555540()
{
  unint64_t result = qword_26A003718;
  if (!qword_26A003718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003718);
  }
  return result;
}

unint64_t sub_25755558C()
{
  unint64_t result = qword_26A003720;
  if (!qword_26A003720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003720);
  }
  return result;
}

unint64_t sub_2575555D8()
{
  unint64_t result = qword_26A003730;
  if (!qword_26A003730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003730);
  }
  return result;
}

void *sub_25755562C@<X0>(void *a1@<X8>)
{
  return sub_257551EEC((void *(*)(uint64_t *__return_ptr))LSTM.inputWeight.getter, a1);
}

uint64_t sub_257555658(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257551F9C(a1, a2, a3, a4, LSTM.inputWeight.setter);
}

void *sub_257555684@<X0>(void *a1@<X8>)
{
  return sub_257551EEC((void *(*)(uint64_t *__return_ptr))LSTM.bias.getter, a1);
}

uint64_t sub_2575556B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_257551F9C(a1, a2, a3, a4, LSTM.bias.setter);
}

uint64_t sub_2575556DC()
{
  uint64_t result = sub_2576A84C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25755577C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  int v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = v7;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v9 = *(void *)(v5 + 64);
  }
  else {
    size_t v9 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v10 = ((v7 + 8) & ~(unint64_t)v7) + v9;
  int v11 = v7 & 0x100000;
  uint64_t v12 = *a2;
  *a1 = *a2;
  if (v8 > 7 || v11 != 0 || v10 > 0x18)
  {
    a1 = (uint64_t *)(v12 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v15 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
    uint64_t v16 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
    swift_retain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v4))
    {
      memcpy(v15, v16, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_2575558C4(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v4 - 8);
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t result = __swift_getEnumTagSinglePayload(v5, 1, v4);
  if (!result)
  {
    int v7 = *(uint64_t (**)(unint64_t, uint64_t))(v8 + 8);
    return v7(v5, v4);
  }
  return result;
}

void *sub_257555984(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  int v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  swift_retain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v9 = *(void *)(v5 + 64);
    }
    else {
      size_t v9 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

void *sub_257555A70(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  size_t v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
    int v13 = *(_DWORD *)(v7 + 84);
    size_t v14 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 24))(v9, v10, v6);
      return a1;
    }
    uint64_t v16 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v15 = v7 + 8;
    v16(v9, v6);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v9, v10, v17);
  return a1;
}

void *sub_257555BD0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  uint64_t v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4))
  {
    if (*(_DWORD *)(v5 + 84)) {
      size_t v9 = *(void *)(v5 + 64);
    }
    else {
      size_t v9 = *(void *)(v5 + 64) + 1;
    }
    memcpy(v7, v8, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v4);
  }
  return a1;
}

void *sub_257555CB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  size_t v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  unint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v6);
      return a1;
    }
    int v13 = *(_DWORD *)(v7 + 84);
    size_t v14 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(v9, v10, v6);
      return a1;
    }
    uint64_t v16 = *(void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v15 = v7 + 8;
    v16(v9, v6);
    int v13 = *(_DWORD *)(v15 + 76);
    size_t v14 = *(void *)(v15 + 56);
  }
  if (v13) {
    size_t v17 = v14;
  }
  else {
    size_t v17 = v14 + 1;
  }
  memcpy(v9, v10, v17);
  return a1;
}

uint64_t sub_257555E10(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = v7;
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v6) {
    ++v10;
  }
  if (!a2) {
    return 0;
  }
  int v11 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_28;
  }
  uint64_t v12 = v10 + ((v9 + 8) & ~v9);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v16 < 2)
    {
LABEL_28:
      if ((v7 & 0x80000000) != 0)
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(((unint64_t)a1 + v9 + 8) & ~v9, v6, v4);
        if (EnumTagSinglePayload >= 2) {
          return EnumTagSinglePayload - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v18 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v18) = -1;
        }
        return (v18 + 1);
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_28;
  }
LABEL_20:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v12 | v17) + 1;
}

void sub_257555FD0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  unsigned int v10 = v9 - 1;
  if (!v9) {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = (v12 + 8) & ~v12;
  size_t v14 = *(void *)(*(void *)(v7 - 8) + 64);
  if (!v9) {
    ++v14;
  }
  size_t v15 = v13 + v14;
  char v16 = 8 * (v13 + v14);
  BOOL v17 = a3 >= v11;
  unsigned int v18 = a3 - v11;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v19 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v19))
      {
        int v6 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v19 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v11 < a2)
  {
    unsigned int v20 = ~v11 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v22 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v15] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v21;
        return;
      case 3:
        goto LABEL_59;
      case 4:
        *(_DWORD *)&a1[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x2575562BCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        if ((v10 & 0x80000000) != 0)
        {
          uint64_t v24 = (unsigned char *)((unint64_t)&a1[v12 + 8] & ~v12);
          if (v10 >= a2)
          {
            uint64_t v28 = a2 + 1;
            unint64_t v29 = (unint64_t)&a1[v12 + 8] & ~v12;
            __swift_storeEnumTagSinglePayload(v29, v28, v9, v7);
          }
          else
          {
            if (v14 <= 3) {
              int v25 = ~(-1 << (8 * v14));
            }
            else {
              int v25 = -1;
            }
            if (v14)
            {
              int v26 = v25 & (~v10 + a2);
              if (v14 <= 3) {
                int v27 = v14;
              }
              else {
                int v27 = 4;
              }
              bzero(v24, v14);
              switch(v27)
              {
                case 2:
                  *(_WORD *)uint64_t v24 = v26;
                  break;
                case 3:
                  *(_WORD *)uint64_t v24 = v26;
                  void v24[2] = BYTE2(v26);
                  break;
                case 4:
                  *(_DWORD *)uint64_t v24 = v26;
                  break;
                default:
                  unsigned char *v24 = v26;
                  break;
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v23 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v23 = a2 - 1;
          }
          *(void *)a1 = v23;
        }
      }
      return;
  }
}

uint64_t sub_2575562F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_257556394(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    size_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_257556498(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_25755650C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_25755659C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_25755662C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_25755669C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_257556724(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 8) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return __swift_getEnumTagSinglePayload(((unint64_t)a1 + v7 + 8) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_2575568B4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 8) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x257556AFCLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 8] & ~v10;
          __swift_storeEnumTagSinglePayload(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v20 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t destroy for LSTM()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LSTM(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LSTM(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  return a1;
}

void *__swift_memcpy67_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x43uLL);
}

uint64_t assignWithTake for LSTM(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  return a1;
}

uint64_t getEnumTagSinglePayload for LSTM(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 67))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LSTM(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 67) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 67) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LSTM()
{
  return &type metadata for LSTM;
}

uint64_t destroy for LSTM.State()
{
  swift_release();
  return swift_release();
}

void *_s14NeuralNetworks4LSTMV5StateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for LSTM.State(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LSTM.State(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LSTM.State()
{
  return &type metadata for LSTM.State;
}

uint64_t method lookup function for LSTMLayerOperationBackwardContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LSTMLayerOperationBackwardContext);
}

ValueMetadata *type metadata accessor for LSTM.State.CodingKeys()
{
  return &type metadata for LSTM.State.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LSTM.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x257557050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LSTM.CodingKeys()
{
  return &type metadata for LSTM.CodingKeys;
}

uint64_t sub_257557088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *_s14NeuralNetworks4LSTMV5StateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25755715CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_257557184()
{
  return swift_getWitnessTable();
}

uint64_t sub_2575571A0()
{
  return swift_getWitnessTable();
}

unint64_t sub_2575571C0()
{
  unint64_t result = qword_26A003940;
  if (!qword_26A003940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003940);
  }
  return result;
}

unint64_t sub_257557210()
{
  unint64_t result = qword_26A003948;
  if (!qword_26A003948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003948);
  }
  return result;
}

unint64_t sub_257557260()
{
  unint64_t result = qword_26A003950;
  if (!qword_26A003950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003950);
  }
  return result;
}

unint64_t sub_2575572B0()
{
  unint64_t result = qword_26A003958;
  if (!qword_26A003958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003958);
  }
  return result;
}

unint64_t sub_257557300()
{
  unint64_t result = qword_26A003960;
  if (!qword_26A003960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003960);
  }
  return result;
}

unint64_t sub_257557350()
{
  unint64_t result = qword_26A003968;
  if (!qword_26A003968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003968);
  }
  return result;
}

uint64_t sub_25755739C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2575573B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2575573D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2575573F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_25755740C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 99, 7);
}

uint64_t sub_25755745C(uint64_t a1, void *a2)
{
  return sub_257553F78(a1, a2, v2 + 16, *(void *)(v2 + 88), *(unsigned char *)(v2 + 96), *(unsigned char *)(v2 + 97), *(unsigned char *)(v2 + 98));
}

uint64_t sub_257557474(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_2575574B4()
{
  unint64_t result = qword_26A001D60;
  if (!qword_26A001D60)
  {
    type metadata accessor for LSTMLayerGradientOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001D60);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  *(_DWORD *)(v44 - 176) = 0;
  *(_OWORD *)(v44 - 208) = 0u;
  *(_OWORD *)(v44 - 192) = 0u;
  *(_OWORD *)(v44 - 224) = 0u;
  return sub_25747B47C(v44 - 224, (uint64_t)&a44);
}

uint64_t OUTLINED_FUNCTION_10_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  return sub_25748FB58((uint64_t *)va, 0x100000000);
}

uint64_t OUTLINED_FUNCTION_12_27@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_24()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_28()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_17_22()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_19_21()
{
  return sub_2576A8E40();
}

uint64_t OUTLINED_FUNCTION_21_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  return sub_2575D614C((uint64_t)&a27);
}

uint64_t OUTLINED_FUNCTION_24_19@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 184) = a1;
  return v1 - 184;
}

uint64_t OUTLINED_FUNCTION_25_18()
{
  return v0;
}

void OUTLINED_FUNCTION_26_17()
{
  *(unsigned char *)(v0 - 82) = 1;
}

uint64_t OUTLINED_FUNCTION_28_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_29_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_30_14()
{
  return v0;
}

id OUTLINED_FUNCTION_37_8()
{
  return sub_2576140FC(v0, v0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  return sub_2576A8D50();
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return swift_allocObject();
}

uint64_t sub_25755774C@<X0>(uint64_t a1@<X8>)
{
  switch(*(unsigned char *)(v1 + 152))
  {
    case 1:
      int v3 = (unsigned int *)MEMORY[0x263F8CCB0];
      break;
    case 2:
      int v3 = (unsigned int *)MEMORY[0x263F8CCA8];
      break;
    case 3:
      int v3 = (unsigned int *)MEMORY[0x263F8CCA0];
      break;
    case 4:
      int v3 = (unsigned int *)MEMORY[0x263F8CC98];
      break;
    case 5:
      int v3 = (unsigned int *)MEMORY[0x263F8CC88];
      break;
    case 6:
      int v3 = (unsigned int *)MEMORY[0x263F8CC90];
      break;
    case 7:
      int v3 = (unsigned int *)MEMORY[0x263F8CC78];
      break;
    default:
      int v3 = (unsigned int *)MEMORY[0x263F8CC80];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_2576A6D00();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

uint64_t sub_257557858(uint64_t a1)
{
  sub_2576A6D00();
  OUTLINED_FUNCTION_0_8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_2575CA350();
  uint64_t v10 = sub_2574BAF20(v9, a1);
  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v33 = v2;
  uint64_t v14 = sub_2575CA350();
  uint64_t v15 = sub_2574BAF20(v14, a1);
  if (!v15)
  {
    swift_unknownObjectRelease();
LABEL_6:
    uint64_t v23 = sub_257664718();
    uint64_t v25 = v24;
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v26 = v23;
    *(void *)(v26 + 8) = v25;
    *(unsigned char *)(v26 + 16) = 2;
    swift_willThrow();
    return v5;
  }
  uint64_t v17 = v15;
  v32[0] = v16;
  v32[1] = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A0063F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2576ABB10;
  sub_25755774C((uint64_t)v8);
  uint64_t v35 = *(void *)(v1 + 56);
  unsigned __int8 v34 = *(unsigned char *)(v1 + 64);
  sub_2576A7810();
  uint64_t v18 = v33;
  uint64_t v19 = sub_257557A60((uint64_t)v8, v12, v13, v17, v32[0], &v35, &v34);
  if (v18)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = OUTLINED_FUNCTION_3_35();
    v22(v21);
    *(void *)(v5 + 16) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    uint64_t v28 = v19;
    uint64_t v29 = v20;
    swift_bridgeObjectRelease();
    uint64_t v30 = OUTLINED_FUNCTION_3_35();
    v31(v30);
    *(void *)(v5 + 32) = v28;
    *(void *)(v5 + 40) = v29;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  return v5;
}

uint64_t sub_257557A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, unsigned __int8 *a7)
{
  void (*v44)(uint64_t *__return_ptr);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v65;
  void (*v66)(void);
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void v73[2];
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  void (*v79)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void v96[2];
  uint64_t v97;

  uint64_t v92 = a4;
  uint64_t v93 = a5;
  uint64_t v82 = a1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0012D0);
  MEMORY[0x270FA5388](v11 - 8);
  OUTLINED_FUNCTION_3_25();
  uint64_t v14 = v12 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)v73 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v73 - v18;
  uint64_t v20 = sub_2576A6B00();
  OUTLINED_FUNCTION_0_8();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  OUTLINED_FUNCTION_3_25();
  uint64_t v81 = v24 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)v73 - v27;
  sub_2576A6DD0();
  OUTLINED_FUNCTION_0_8();
  MEMORY[0x270FA5388](v29);
  OUTLINED_FUNCTION_3_25();
  uint64_t v32 = v30 - v31;
  MEMORY[0x270FA5388](v33);
  MEMORY[0x270FA5388](v34);
  unsigned int v39 = *a7;
  if (v39 <= 0xC && ((1 << v39) & 0x1777) != 0)
  {
    v73[0] = v22;
    v73[1] = v20;
    uint64_t v77 = v14;
    uint64_t v74 = *a6;
    uint64_t v89 = v36;
    uint64_t v90 = v37;
    uint64_t v40 = (char *)v73 - v35;
    uint64_t v87 = v38;
    uint64_t v88 = (char *)v73 - v35;
    uint64_t v41 = v38;
    uint64_t v86 = v32;
    uint64_t v75 = v39;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v91 = v28;
    uint64_t v83 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 16);
    uint64_t v43 = ObjectType;
    v83(&v97, ObjectType, a3);
    sub_25758A634(&v97, 0, 2, (uint64_t)v40);
    swift_getObjectType();
    uint64_t v84 = a3;
    uint64_t v85 = a2;
    uint64_t v78 = v19;
    uint64_t v44 = *(void (**)(uint64_t *__return_ptr))(v93 + 16);
    v44(&v97);
    sub_25758A634(&v97, 0, 2, v41);
    uint64_t v76 = v43;
    v83(&v97, v43, a3);
    v96[0] = v97;
    uint64_t v45 = OUTLINED_FUNCTION_6_35();
    v44((uint64_t *)v45);
    uint64_t v94 = v95;
    sub_257558168((uint64_t)v96, (uint64_t)&v94, (uint64_t)v91);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = OUTLINED_FUNCTION_6_35();
    v44((uint64_t *)v46);
    uint64_t v47 = (uint64_t)v78;
    v96[0] = v97;
    v83(&v95, v43, v84);
    uint64_t v94 = v95;
    uint64_t v48 = v81;
    sub_257558168((uint64_t)v96, (uint64_t)&v94, v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v74;
    uint64_t v97 = v74;
    sub_2576A7810();
    sub_25758A634(&v97, 0, 2, v86);
    type metadata accessor for NativeTensorStorage();
    uint64_t v97 = v49;
    LOBYTE(v96[0]) = v75;
    sub_2576A7810();
    uint64_t v50 = v79;
    sub_25754DDC0(&v97, (uint64_t)v96, 0);
    a3 = v51;
    uint64_t v83 = v50;
    uint64_t v52 = v89;
    uint64_t v53 = *(void (**)(void))(v90 + 16);
    OUTLINED_FUNCTION_5_34();
    v53();
    __swift_storeEnumTagSinglePayload(v47, 0, 1, v52);
    uint64_t v54 = (uint64_t)v80;
    OUTLINED_FUNCTION_5_34();
    v53();
    __swift_storeEnumTagSinglePayload(v54, 0, 1, v52);
    uint64_t v55 = v77;
    OUTLINED_FUNCTION_5_34();
    v53();
    uint64_t v56 = __swift_storeEnumTagSinglePayload(v55, 0, 1, v52);
    MEMORY[0x270FA5388](v56);
    uint64_t v57 = v92;
    v73[-8] = v91;
    v73[-7] = v48;
    uint64_t v58 = v84;
    uint64_t v59 = v85;
    v73[-6] = v82;
    v73[-5] = v59;
    v73[-4] = v58;
    v73[-3] = v57;
    v73[-2] = v93;
    v73[-1] = a3;
    MEMORY[0x270FA5388](v60);
    v73[-8] = v61;
    v73[-7] = v62;
    v73[-6] = v54;
    v73[-5] = a3;
    v73[-4] = &off_270667760;
    v73[-3] = v55;
    v73[-2] = sub_2575589C4;
    v73[-1] = v63;
    swift_retain();
    uint64_t v64 = v83;
    sub_257648508((uint64_t)sub_257480E80, (uint64_t)&v73[-10], MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
    if (v64) {
      swift_release_n();
    }
    else {
      swift_release();
    }
    sub_257480BC8(v55);
    sub_257480BC8(v54);
    sub_257480BC8(v47);
    uint64_t v65 = v90;
    uint64_t v66 = *(void (**)(void))(v90 + 8);
    OUTLINED_FUNCTION_1_56();
    v66();
    OUTLINED_FUNCTION_1_56();
    v66();
    OUTLINED_FUNCTION_1_56();
    v66();
    uint64_t v67 = OUTLINED_FUNCTION_2_39();
    ((void (*)(uint64_t))v66)(v67);
    ((void (*)(char *, uint64_t))v66)(v91, v65 + 8);
  }
  else
  {
    uint64_t v69 = sub_25758BB90();
    uint64_t v71 = v70;
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v72 = v69;
    *(void *)(v72 + 8) = v71;
    *(unsigned char *)(v72 + 16) = 3;
    swift_willThrow();
  }
  return a3;
}

uint64_t sub_2575580F8(uint64_t a1)
{
  return sub_257557858(a1);
}

uint64_t sub_257558110(uint64_t a1)
{
  uint64_t result = sub_257558A68((unint64_t *)&qword_26A003368, (void (*)(uint64_t))type metadata accessor for BinaryArithmeticOperation);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_257558168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = *(void *)(*(void *)a1 + 16);
  unint64_t v5 = *(void *)(*(void *)a2 + 16);
  if (v4 && v4 == v5)
  {
    if (*(uint64_t *)(*(void *)a1 + 32) <= 1)
    {
LABEL_4:
      uint64_t v6 = (unsigned int *)MEMORY[0x263F8CA80];
      goto LABEL_7;
    }
  }
  else if (v5 >= v4)
  {
    goto LABEL_4;
  }
  uint64_t v6 = (unsigned int *)MEMORY[0x263F8CA78];
LABEL_7:
  uint64_t v7 = *v6;
  uint64_t v8 = sub_2576A6B00();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);
  return v9(a3, v7, v8);
}

uint64_t sub_257558218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v59 = a8;
  v58[2] = a7;
  uint64_t v70 = a6;
  uint64_t v63 = a5;
  uint64_t v62 = a4;
  uint64_t v69 = a3;
  uint64_t v68 = a2;
  uint64_t v67 = a1;
  uint64_t v66 = sub_2576A6BF0();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v64 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_2576A6D00();
  uint64_t v12 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_2576A6B00();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v58 - v20;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v58 - v23;
  uint64_t v60 = sub_2576A6CE0();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v25(v24, v62, v15);
  v25(v21, v63, v15);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F8CA78], v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v70, v61);
  sub_2576A8470();
  sub_2576A83D0();
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, *MEMORY[0x263F8CB58], v66);
  uint64_t v26 = v67;
  uint64_t v27 = v68;
  uint64_t v28 = sub_2576A6CD0();
  if (!v28)
  {
    uint64_t v36 = sub_25758BB90();
    uint64_t v38 = v37;
    sub_257480520();
    swift_allocError();
    *(void *)uint64_t v39 = v36;
    *(void *)(v39 + 8) = v38;
    *(unsigned char *)(v39 + 16) = 4;
    return swift_willThrow();
  }
  uint64_t v29 = v28;
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v59 + 16))(&v74, ObjectType);
  uint64_t v31 = v74;
  uint64_t v32 = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a10 + 16))(&v73, v32, a10);
  uint64_t v33 = v73;
  uint64_t v34 = *(void *)(a11 + 16);
  unint64_t v35 = *(void *)(v34 + 16);
  uint64_t v66 = v29;
  if (v35 > 1) {
    uint64_t v41 = *(void *)(v34 + 32);
  }
  else {
    uint64_t v41 = 1;
  }
  sub_257558A00(v26 + 136, (uint64_t)v77);
  sub_257558A00((uint64_t)v77, (uint64_t)&v78);
  uint64_t v42 = v78;
  if (!v78
    || (sub_257558A00(v27 + 136, (uint64_t)v76), sub_257558A00((uint64_t)v76, (uint64_t)&v79), (uint64_t v43 = v79) == 0)
    || (sub_257558A00(v69 + 136, (uint64_t)v75), sub_257558A00((uint64_t)v75, (uint64_t)&v80), (uint64_t v44 = v80) == 0))
  {
    uint64_t v51 = sub_2576A6D60();
    sub_257558A68((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v51 - 8) + 104))(v52, *MEMORY[0x263F8CCC8], v51);
    sub_2576A7810();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  size_t v45 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
  *(void *)(inited + 32) = v42;
  uint64_t v47 = (const void **)(inited + 32);
  *(void *)(inited + 40) = v43;
  sub_2576A7810();
  uint64_t v48 = (void *)sub_2576A6D70();
  uint64_t v49 = *(void *)(v31 + 16);
  uint64_t v70 = v31;
  if (v49)
  {
    uint64_t v71 = v31;
    uint64_t result = sub_257654DF0();
    if (!*(void *)(result + 16))
    {
      __break(1u);
      goto LABEL_27;
    }
    size_t v50 = *(void *)(result + 32);
    swift_bridgeObjectRelease();
  }
  else
  {
    size_t v50 = 0;
  }
  v72[0] = v50;
  if (*(void *)(v33 + 16))
  {
    uint64_t v71 = v33;
    uint64_t result = sub_257654DF0();
    if (*(void *)(result + 16))
    {
      size_t v53 = *(void *)(result + 32);
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  size_t v53 = 0;
LABEL_18:
  v72[1] = v53;
  if (!*(void *)(v34 + 16))
  {
    size_t v54 = 0;
    goto LABEL_22;
  }
  uint64_t v71 = v34;
  uint64_t result = sub_257654DF0();
  if (!*(void *)(result + 16))
  {
LABEL_28:
    __break(1u);
    return result;
  }
  size_t v54 = *(void *)(result + 32);
  swift_bridgeObjectRelease();
LABEL_22:
  int v55 = BNNSArithmeticFilterApplyBatch(v48, v45, 2uLL, v47, v72, v44, v54);
  swift_bridgeObjectRelease();
  if (v55)
  {
    uint64_t v56 = sub_2576A6D60();
    sub_257558A68((unint64_t *)&qword_26A001D40, MEMORY[0x263F8CCD0]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v56 - 8) + 104))(v57, *MEMORY[0x263F8CCB8], v56);
    swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2575589C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_257558218(a1, a2, a3, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8], v3[9]);
}

uint64_t sub_257558A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A001D38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_257558A68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_35()
{
  return v0;
}

uint64_t sub_257558B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    MEMORY[0x270FA5388](a1);
    v8[0] = v3;
    v8[1] = a3;
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    sub_257531E2C((void (*)(void))sub_257559588);
  }
  else
  {
    MEMORY[0x270FA5388](0);
    uint64_t v9 = v3;
    uint64_t v10 = a3;
    sub_257531DA0((void (*)(uint64_t *__return_ptr))sub_25755956C, (uint64_t)v8);
  }
  swift_unknownObjectRelease();
  return sub_257476CD8(a3);
}

void *sub_257558C10(uint64_t a1)
{
  uint64_t v2 = v1;
  v2[2] = MEMORY[0x263F8EE80];
  swift_weakInit();
  swift_weakInit();
  v2[6] = a1;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  v2[5] = sub_2575952D0();
  return v2;
}

uint64_t sub_257558C80(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 16) + 16))
  {
    sub_257475C80(a2);
    if (v9) {
      return swift_endAccess();
    }
  }
  swift_endAccess();
  if (*(void *)(a1 + 48) <= *(void *)(*(void *)(a1 + 16) + 16))
  {
    uint64_t v16 = v4;
    uint64_t Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      v14[0] = 0xD000000000000036;
      v14[1] = 0x80000002576CB710;
      char v15 = 9;
      sub_25746BE6C();
    }
    uint64_t v12 = Strong;
    if (swift_weakLoadStrong())
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      swift_release();
    }
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_release();
    if (swift_weakLoadStrong())
    {
      swift_weakAssign();
      swift_release();
    }
    swift_beginAccess();
    sub_2575595A8((uint64_t *)(v12 + 16));
    swift_endAccess();
    swift_release();
    swift_release();
  }
  sub_257476C7C((uint64_t)a2, (uint64_t)v14);
  swift_weakLoadStrong();
  type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_257559438(v14, a3, a4);
  if (swift_weakLoadStrong())
  {
    swift_weakAssign();
    swift_release();
  }
  swift_weakAssign();
  uint64_t v13 = swift_weakLoadStrong();
  swift_release();
  if (!v13) {
    swift_weakAssign();
  }
  swift_beginAccess();
  swift_retain();
  sub_2575CE064();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_257558F58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_257475C80(a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_endAccess();
    uint64_t Strong = swift_weakLoadStrong();
    swift_retain();
    if (!Strong || (swift_release(), Strong != v9))
    {
      uint64_t v11 = swift_weakLoadStrong();
      if (v11)
      {
        uint64_t v12 = v11;
        swift_release();
        if (v9 == v12)
        {
          swift_weakLoadStrong();
          swift_weakAssign();
          swift_release();
        }
      }
      if (swift_weakLoadStrong())
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
        swift_release();
      }
      if (swift_weakLoadStrong())
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
        swift_release();
      }
      swift_weakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (swift_weakLoadStrong())
      {
        swift_weakAssign();
        swift_release();
      }
      swift_weakAssign();
    }
    long long v14 = *(_OWORD *)(v9 + 104);
    swift_unknownObjectRetain();
    uint64_t result = swift_release();
    *(_OWORD *)a3 = v14;
  }
  else
  {
    uint64_t result = swift_endAccess();
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  return result;
}

uint64_t sub_257559154@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_257475C80(a2), (v8 & 1) == 0))
  {
    uint64_t result = swift_endAccess();
LABEL_6:
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  if (swift_weakLoadStrong())
  {
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_retain();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  if (swift_weakLoadStrong())
  {
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_release();
    swift_release();
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    swift_release();
    if (v12 == v9)
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (swift_weakLoadStrong())
      {
        swift_weakAssign();
        swift_release();
      }
    }
  }
  uint64_t v13 = swift_weakLoadStrong();
  if (v13)
  {
    uint64_t v14 = v13;
    swift_release();
    if (v14 == v9)
    {
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (swift_weakLoadStrong())
      {
        swift_weakAssign();
        swift_release();
      }
    }
  }
  swift_beginAccess();
  uint64_t v15 = sub_2575595A8(a2);
  swift_endAccess();
  uint64_t result = swift_release();
  if (!v15) {
    goto LABEL_6;
  }
  long long v16 = *(_OWORD *)(v15 + 104);
  swift_unknownObjectRetain();
  uint64_t result = swift_release();
  *(_OWORD *)a3 = v16;
  return result;
}

uint64_t sub_2575593A8()
{
  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  swift_release();
  return v0;
}

uint64_t sub_2575593E0()
{
  sub_2575593A8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LazyTensorFunctionExecutorCache()
{
  return self;
}

void *sub_257559438(const void *a1, uint64_t a2, uint64_t a3)
{
  swift_weakInit();
  swift_weakInit();
  memcpy(v3 + 2, a1, 0x58uLL);
  v3[13] = a2;
  v3[14] = a3;
  swift_weakAssign();
  swift_release();
  swift_weakAssign();
  swift_release();
  return v3;
}

uint64_t sub_2575594E0()
{
  sub_257476CD8(v0 + 16);
  swift_unknownObjectRelease();
  swift_weakDestroy();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_257559518()
{
  sub_2575594E0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue()
{
  return self;
}

uint64_t sub_25755956C@<X0>(void *a1@<X8>)
{
  return sub_257559154(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_257559588()
{
  return sub_257558C80(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_2575595A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_2576A7810();
  unint64_t v4 = sub_257475C80(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A004460);
  sub_2576A8AD0();
  sub_257476CD8(*(void *)(v8 + 48) + 88 * v4);
  uint64_t v6 = *(void *)(*(void *)(v8 + 56) + 8 * v4);
  type metadata accessor for LazyTensorFunctionExecutorCache.CacheValue();
  sub_2575596B0();
  sub_2576A8B00();
  *uint64_t v2 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_2575596B0()
{
  unint64_t result = qword_26A003978;
  if (!qword_26A003978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A003978);
  }
  return result;
}

uint64_t sub_2575596FC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_26A000918 != -1) {
    a1 = swift_once();
  }
  uint64_t v3 = qword_26A003980;
  MEMORY[0x270FA5388](a1);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_25755A1E0((uint64_t *)(v3 + 16), &v5);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  if (!v1) {
    uint64_t v2 = v5;
  }
  swift_release();
  return v2;
}

id sub_2575597E0()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    id v3 = objc_msgSend(self, sel_deviceWithMTLDevice_, *(void *)(v0 + 16));
    unint64_t v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_25755985C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_257559EA8((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

id sub_2575598D0()
{
  if (*(void *)(v0 + 56))
  {
    id v1 = *(id *)(v0 + 56);
  }
  else
  {
    id v1 = sub_257559B24(v0);
    *(void *)(v0 + 56) = v1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

id sub_257559930()
{
  if (*(void *)(v0 + 64))
  {
    id v1 = *(id *)(v0 + 64);
  }
  else
  {
    id v1 = sub_257559C0C(v0);
    *(void *)(v0 + 64) = v1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

unint64_t sub_257559990(NSUInteger a1, int a2)
{
  uint64_t v4 = swift_retain();
  id v5 = (void *)MEMORY[0x25A2BA130](v4);
  sub_257559E34();
  sub_257595364();
  sub_257559A9C();
  unint64_t v6 = sub_2574B6114(a1, a2);
  swift_release();
  sub_257595388();
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_257559A30()
{
  type metadata accessor for SharedMetalDevice();
  uint64_t v0 = sub_2576A77E0();
  __swift_instantiateConcreteTypeFromMangledName(qword_26A0039A8);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = v0;
  qword_26A003980 = result;
  return result;
}

uint64_t sub_257559A9C()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for MPSAllocator();
    swift_allocObject();
    uint64_t v3 = swift_unknownObjectRetain();
    uint64_t v1 = sub_2574B6028(v3);
    *(void *)(v2 + 48) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

id sub_257559B24(uint64_t a1)
{
  id result = objc_msgSend(*(id *)(a1 + 16), sel_newSharedEvent);
  if (!result)
  {
    sub_2576A8730();
    sub_2576A7B00();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0039A0);
    sub_2576A8A30();
    sub_25746BE6C();
  }
  return result;
}

id sub_257559C0C(uint64_t a1)
{
  id result = objc_msgSend(*(id *)(a1 + 16), sel_newEvent);
  if (!result)
  {
    sub_2576A8730();
    sub_2576A7B00();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0039A0);
    sub_2576A8A30();
    sub_25746BE6C();
  }
  return result;
}

uint64_t sub_257559CF4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003998);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(void *)(v3 + 16) = 0;
  *(void *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 16) = a1;
  id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_newCommandQueue);
  if (!v4)
  {
    sub_2576A8730();
    sub_2576A7B00();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0039A0);
    sub_2576A8A30();
    sub_25746BE6C();
  }
  id v5 = v4;
  swift_unknownObjectRelease();
  *(void *)(v1 + 24) = v5;
  return v1;
}

uint64_t sub_257559E34()
{
  if (*(void *)(v0 + 72))
  {
    uint64_t v1 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v2 = v0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    uint64_t v1 = sub_2575952D0();
    *(void *)(v2 + 72) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t *sub_257559EA8@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result == -1)
  {
    __break(1u);
  }
  else
  {
    ++*result;
    *a2 = v2;
  }
  return result;
}

uint64_t sub_257559EC4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_257559F1C()
{
  sub_257559EC4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SharedMetalDevice()
{
  return self;
}

id sub_257559F74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  uint64_t v11 = sub_25747A4D0(a4);
  uint64_t v12 = (void *)MEMORY[0x25A2BA130](v11);
  uint64_t v13 = sub_257559E34();
  id v14 = sub_257594E5C(v13, v5, a1, a2, a3, a4, a5);
  swift_release();
  return v14;
}

id sub_25755A020(uint64_t a1, char a2)
{
  uint64_t v5 = swift_retain();
  unint64_t v6 = (void *)MEMORY[0x25A2BA130](v5);
  uint64_t v7 = sub_257559E34();
  id v8 = sub_257594F88(v7, v2, a1, a2);
  swift_release();
  return v8;
}

uint64_t sub_25755A0A0@<X0>(id a1@<X1>, uint64_t *a2@<X0>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2574BB1CC((uint64_t)objc_msgSend(a1, sel_registryID), *a2);
  if (result)
  {
    *a3 = result;
  }
  else if (MPSSupportsMTLDevice(a1))
  {
    type metadata accessor for SharedMetalDevice();
    swift_allocObject();
    uint64_t v6 = swift_unknownObjectRetain();
    uint64_t v7 = sub_257559CF4(v6);
    objc_msgSend(a1, sel_registryID);
    swift_retain();
    uint64_t result = sub_2575CE0B0();
    *a3 = v7;
  }
  else
  {
    id v14 = a1;
    uint64_t v12 = &unk_270669348;
    uint64_t v13 = &off_2706693C8;
    uint64_t v8 = swift_unknownObjectRetain_n();
    int v15 = sub_2575B5A88(v8);
    sub_257531F3C();
    swift_allocError();
    uint64_t v10 = v9;
    sub_2574866D0((uint64_t)v11, v9);
    *(unsigned char *)(v10 + 108) = 19;
    swift_willThrow();
    return sub_257486674((uint64_t)v11);
  }
  return result;
}

uint64_t sub_25755A1E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_25755A0A0(*(id *)(v2 + 16), a1, a2);
}

void static Tensor..< infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B7A0);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 3);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    sub_2575B56B8(v15, v16, v17, v18, 23, v19, 8, 2);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..<= infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B810);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 4);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    OUTLINED_FUNCTION_48_8(v15, v16, v17, v18, 43, v19);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..> infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B810);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 1);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    sub_2575B56B8(v15, v16, v17, v18, 63, v19, 8, 2);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..>= infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B810);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 2);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    OUTLINED_FUNCTION_48_8(v15, v16, v17, v18, 83, v19);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..< infix<A>(_:_:)()
{
}

{
  sub_25755AEDC();
}

uint64_t static Tensor..<= infix<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v8[3] = a3;
  v8[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  Tensor.scalarType.getter();
  Tensor.init(coercing:scalarType:on:)();
  static Tensor..<= infix(_:_:)();
  return swift_release();
}

void static Tensor..> infix<A>(_:_:)()
{
}

{
  sub_25755AEDC();
}

void static Tensor..>= infix<A>(_:_:)()
{
}

{
  sub_25755AEDC();
}

void sub_25755AD68()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v19 = v3;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_6_36();
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = OUTLINED_FUNCTION_2_40(v7, v8, v9);
  v11(v10);
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_23_18();
  v12();
  uint64_t v13 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_39_11((uint64_t)v13);
  OUTLINED_FUNCTION_51_6();
  if ((v0 & 1) != 0
    && (id v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_38_10((uint64_t)v14),
        OUTLINED_FUNCTION_50_5(),
        (v2 & 1) != 0)
    || (v5 == 12 ? (BOOL v15 = v1 == 12) : (BOOL v15 = 0), !v15 ? (v16 = v5 == 12) : (v16 = 0), v16))
  {
    OUTLINED_FUNCTION_15_23();
    v18();
    OUTLINED_FUNCTION_29_15();
    OUTLINED_FUNCTION_27_15();
  }
  else
  {
    OUTLINED_FUNCTION_49_7();
    OUTLINED_FUNCTION_15_23();
    v17();
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_8_35();
  }
  v19(&v20, v5);
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..<= infix<A>(_:_:)()
{
}

void sub_25755AEDC()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v19 = v3;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_6_36();
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = OUTLINED_FUNCTION_2_40(v7, v8, v9);
  v11(v10);
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_23_18();
  v12();
  uint64_t v13 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_39_11((uint64_t)v13);
  OUTLINED_FUNCTION_51_6();
  if ((v0 & 1) != 0
    && (id v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_38_10((uint64_t)v14),
        OUTLINED_FUNCTION_50_5(),
        (v2 & 1) != 0)
    || (v5 == 12 ? (BOOL v15 = v1 == 12) : (BOOL v15 = 0), !v15 ? (v16 = v5 == 12) : (v16 = 0), v16))
  {
    OUTLINED_FUNCTION_15_23();
    v18();
    OUTLINED_FUNCTION_29_15();
    OUTLINED_FUNCTION_27_15();
  }
  else
  {
    OUTLINED_FUNCTION_49_7();
    OUTLINED_FUNCTION_15_23();
    v17();
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_8_35();
  }
  v19(v5, &v20);
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..== infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B810);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 0);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    OUTLINED_FUNCTION_48_8(v15, v16, v17, v18, 200, v19);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..!= infix(_:_:)()
{
  OUTLINED_FUNCTION_9_22();
  OUTLINED_FUNCTION_0_50(v5);
  if (!v7)
  {
    OUTLINED_FUNCTION_40_9(v6);
    uint64_t v20 = OUTLINED_FUNCTION_32_13();
    void *v4 = v0;
    v4[1] = v2;
    OUTLINED_FUNCTION_30_15((unint64_t)v20, v21, (__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_36_11(v22, (__n128)xmmword_2576ACB30);
    OUTLINED_FUNCTION_14_29();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_3_36();
  if (!*v4)
  {
    void *v4 = v2;
    OUTLINED_FUNCTION_22_22((__n128)xmmword_2576B0250);
    OUTLINED_FUNCTION_31_13(v23, (__n128)xmmword_2576ACB30);
    sub_2576A7810();
    OUTLINED_FUNCTION_14_29();
LABEL_10:
    sub_25746BF88();
  }
  OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_5_35();
  uint64_t v8 = *v4;
  uint64_t v9 = OUTLINED_FUNCTION_1_57(*(void *)(v3 + 16));
  MEMORY[0x270FA5388](v9);
  OUTLINED_FUNCTION_21_23();
  OUTLINED_FUNCTION_37_9((uint64_t (*)(void *))sub_25755B810);
  OUTLINED_FUNCTION_35_10();
  if (v1)
  {
    uint64_t v10 = OUTLINED_FUNCTION_1_57(*(void *)(v8 + 16));
    MEMORY[0x270FA5388](v10);
    OUTLINED_FUNCTION_16_25();
    OUTLINED_FUNCTION_45_7((uint64_t (*)(void *))sub_25755B810);
    OUTLINED_FUNCTION_18_21();
    if ((OUTLINED_FUNCTION_13_25() & 1) == 0)
    {
      OUTLINED_FUNCTION_28_15();
      OUTLINED_FUNCTION_17_0();
      OUTLINED_FUNCTION_12_28();
      OUTLINED_FUNCTION_45_0();
    }
    OUTLINED_FUNCTION_7_31();
    OUTLINED_FUNCTION_25_19();
    sub_25747B4E4((uint64_t)&v24);
    swift_release();
    swift_release();
    OUTLINED_FUNCTION_24_20();
  }
  else
  {
    OUTLINED_FUNCTION_4_38();
    void *v4 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/BinaryElementwiseOps.swift";
    *(_OWORD *)(v4 + 1) = xmmword_2576B68F0;
    OUTLINED_FUNCTION_9_35((uint64_t)"init(id:operator:leftOperand:rightOperand:resultDescriptor:creationSite:)", (__n128)xmmword_2576B6900);
    OUTLINED_FUNCTION_44_7();
    OUTLINED_FUNCTION_43_7();
    swift_retain();
    uint64_t v11 = OUTLINED_FUNCTION_17_23();
    OUTLINED_FUNCTION_34_11(v11, v12, v13, 5);
    sub_25755B7C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_33_11(inited, (__n128)xmmword_2576ABB30);
    swift_retain();
    swift_retain();
    uint64_t v15 = OUTLINED_FUNCTION_26_18();
    OUTLINED_FUNCTION_48_8(v15, v16, v17, v18, 220, v19);
    swift_setDeallocating();
    sub_2575AEC4C();
    OUTLINED_FUNCTION_10_27();
    swift_release();
    swift_release();
    swift_release();
  }
  OUTLINED_FUNCTION_8_21();
}

void static Tensor..== infix<A>(_:_:)()
{
}

{
  sub_25755B68C();
}

void static Tensor..!= infix<A>(_:_:)()
{
}

{
  sub_25755B68C();
}

void sub_25755B548()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v19 = v3;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_6_36();
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = OUTLINED_FUNCTION_2_40(v7, v8, v9);
  v11(v10);
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_23_18();
  v12();
  uint64_t v13 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_39_11((uint64_t)v13);
  OUTLINED_FUNCTION_51_6();
  if ((v0 & 1) != 0
    && (id v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_38_10((uint64_t)v14),
        OUTLINED_FUNCTION_50_5(),
        (v2 & 1) != 0)
    || (v5 == 12 ? (BOOL v15 = v1 == 12) : (BOOL v15 = 0), !v15 ? (v16 = v5 == 12) : (v16 = 0), v16))
  {
    OUTLINED_FUNCTION_15_23();
    v18();
    OUTLINED_FUNCTION_29_15();
    OUTLINED_FUNCTION_27_15();
  }
  else
  {
    OUTLINED_FUNCTION_49_7();
    OUTLINED_FUNCTION_15_23();
    v17();
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_8_35();
  }
  v19(&v20, v5);
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

void sub_25755B68C()
{
  OUTLINED_FUNCTION_9_22();
  uint64_t v19 = v3;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_6_36();
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = OUTLINED_FUNCTION_2_40(v7, v8, v9);
  v11(v10);
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_23_18();
  v12();
  uint64_t v13 = OUTLINED_FUNCTION_47_8();
  OUTLINED_FUNCTION_39_11((uint64_t)v13);
  OUTLINED_FUNCTION_51_6();
  if ((v0 & 1) != 0
    && (id v14 = static ScalarType.integerTypes.getter(),
        OUTLINED_FUNCTION_38_10((uint64_t)v14),
        OUTLINED_FUNCTION_50_5(),
        (v2 & 1) != 0)
    || (v5 == 12 ? (BOOL v15 = v1 == 12) : (BOOL v15 = 0), !v15 ? (v16 = v5 == 12) : (v16 = 0), v16))
  {
    OUTLINED_FUNCTION_15_23();
    v18();
    OUTLINED_FUNCTION_29_15();
    OUTLINED_FUNCTION_27_15();
  }
  else
  {
    OUTLINED_FUNCTION_49_7();
    OUTLINED_FUNCTION_15_23();
    v17();
    Tensor.scalarType.getter();
    OUTLINED_FUNCTION_8_35();
  }
  v19(v5, &v20);
  swift_release();
  OUTLINED_FUNCTION_8_21();
}

BOOL sub_25755B7A0(uint64_t *a1)
{
  return sub_2575AECF4(a1, *(uint64_t **)(v1 + 16));
}

unint64_t sub_25755B7C0()
{
  unint64_t result = qword_26A001D48;
  if (!qword_26A001D48)
  {
    type metadata accessor for BinaryComparisonOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A001D48);
  }
  return result;
}

BOOL sub_25755B810(uint64_t *a1)
{
  return sub_25755B7A0(a1);
}

void OUTLINED_FUNCTION_0_50(uint64_t a1@<X8>)
{
  *(void *)(v1 - 352) = a1;
}

uint64_t OUTLINED_FUNCTION_1_57@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = *(void *)(a1 + 152);
  *uint64_t v1 = result;
  *(void *)(v2 - 280) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t OUTLINED_FUNCTION_3_36()
{
  *(void *)(v2 - 280) = *(void *)(v0 + 152);
  *(void *)(v2 - 216) = *(void *)(v1 + 152);
  return static ShapeInference.broadcasting(_:_:)();
}

void OUTLINED_FUNCTION_4_38()
{
  *(void *)(v1 - 280) = v0;
  *(unsigned char *)(v1 - 272) = 12;
}

uint64_t OUTLINED_FUNCTION_5_35()
{
  *(void *)(v2 - 280) = v0;
  *(void *)(v2 - 216) = v1;
  return sub_257599168((void *)(v2 - 216), (void *)(v2 - 208));
}

uint64_t OUTLINED_FUNCTION_7_31()
{
  *(void *)(v1 - 336) = v0;
  *(unsigned char *)(v1 - 337) = 12;
  return sub_25747B47C(v1 - 208, v1 - 280);
}

void OUTLINED_FUNCTION_8_35()
{
  *(_DWORD *)(v0 - 144) = 0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  Tensor.init(coercing:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_9_35@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + 24) = a2;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 73;
  *(_WORD *)(v2 + 56) = 2;
  return type metadata accessor for BinaryComparisonOperation();
}

uint64_t OUTLINED_FUNCTION_10_27()
{
  uint64_t v4 = *(uint64_t **)(v2 - 352);
  return sub_257613838(v0, v1, 0, v2 - 280, v4);
}

uint64_t OUTLINED_FUNCTION_11_31()
{
  *(void *)(v2 - 280) = v0;
  *(void *)(v2 - 216) = v1;
  return sub_257599168((void *)(v2 - 216), (void *)(v2 - 208));
}

uint64_t OUTLINED_FUNCTION_12_28()
{
  return sub_2576A8B60();
}

uint64_t OUTLINED_FUNCTION_13_25()
{
  *(_DWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)uint64_t v1 = 0u;
  return sub_2575A0064(0, v0);
}

uint64_t OUTLINED_FUNCTION_16_25()
{
  return sub_2576A7810();
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_23()
{
  return sub_2576A7810();
}

void OUTLINED_FUNCTION_22_22(__n128 a1)
{
  *(__n128 *)(v2 + 8) = a1;
  *(unsigned char *)(v3 - 184) = 6;
  *(void *)(v2 + 32) = v1;
}

void OUTLINED_FUNCTION_24_20()
{
  **(void **)(v0 - 352) = *(void *)(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_25_19()
{
  return sub_2575A1C54();
}

uint64_t OUTLINED_FUNCTION_26_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_15()
{
  return Tensor.init<A>(_:scalarType:on:)(v1 - 192, v0, (void *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_29_15()
{
  *(_DWORD *)(v1 - 144) = 0;
  *(_OWORD *)(v1 - 176) = 0u;
  *(_OWORD *)(v1 - 160) = 0u;
  *(_OWORD *)(v1 - 192) = 0u;
  return nullsub_1(v0);
}

unint64_t OUTLINED_FUNCTION_30_15(unint64_t result, unint64_t a2, __n128 a3)
{
  v3[1] = a3;
  *(unsigned char *)(v4 - 176) = 6;
  v3[2].n128_u64[1] = result;
  v3[3].n128_u64[0] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_31_13@<X0>(char a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + 40) = a2;
  *(unsigned char *)(v3 - 152) = a1;
  *(unsigned char *)(v3 - 100) = 8;
  return sub_2576A7810();
}

ValueMetadata *OUTLINED_FUNCTION_32_13()
{
  *(unsigned char *)(v1 - 208) = v0;
  return sub_25767AC64();
}

uint64_t OUTLINED_FUNCTION_33_11(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v2;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_34_11(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_257664D90(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_35_10()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_36_11(char a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + 56) = a2;
  *(unsigned char *)(v3 - 136) = a1;
  *(unsigned char *)(v3 - 100) = 0;
}

uint64_t OUTLINED_FUNCTION_37_9(uint64_t (*a1)(void *))
{
  return sub_2575AAD50(a1);
}

BOOL OUTLINED_FUNCTION_38_10(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

BOOL OUTLINED_FUNCTION_39_11(uint64_t a1)
{
  return sub_2575A0094(v1, a1);
}

ValueMetadata *OUTLINED_FUNCTION_40_9@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 208) = a1;
  return sub_25767AC64();
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_44_7()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_45_7(uint64_t (*a1)(void *))
{
  return sub_2575AAD50(a1);
}

void *OUTLINED_FUNCTION_47_8()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_48_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_2575B56B8(a1, a2, a3, a4, a5, a6, 9, 2);
}

uint64_t *OUTLINED_FUNCTION_49_7()
{
  *(void *)(v2 - 104) = v0;
  *(void *)(v2 - 96) = v1;
  return __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_51_6()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_25755BDD4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_25755BE24(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    sub_2576A88E0();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      swift_retain();
      sub_2576A88A0();
      sub_2576A88F0();
      sub_2576A8900();
      sub_2576A88C0();
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

void sub_25755BED8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
    sub_2574E76F4();
    uint64_t v3 = sub_25756F588(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v16 = v1;
          int v17 = v4;
          uint64_t v7 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v8 = *v7;
          uint64_t v9 = v7[1];
          uint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
          uint64_t v11 = v10[1];
          uint64_t v18 = v8;
          uint64_t v19 = *v10;
          unint64_t v13 = *(void *)(v20 + 16);
          unint64_t v12 = *(void *)(v20 + 24);
          sub_2576A7810();
          sub_2576A7810();
          if (v13 >= v12 >> 1) {
            sub_2574E76F4();
          }
          *(void *)(v20 + 16) = v13 + 1;
          id v14 = (void *)(v20 + 32 * v13);
          v14[4] = v18;
          v14[5] = v9;
          void v14[6] = v19;
          v14[7] = v11;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v17 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v15 = sub_2576A8680();
          --v1;
          if (v16 == 1) {
            return;
          }
          unint64_t v5 = v15;
          if ((v15 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v15 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

void sub_25755C0B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_2574E7734();
    uint64_t v3 = sub_25756F588(a1);
    if ((v3 & 0x8000000000000000) == 0)
    {
      unint64_t v5 = v3;
      if (v3 < 1 << *(unsigned char *)(a1 + 32))
      {
        uint64_t v6 = a1 + 64;
        while ((*(void *)(v6 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
        {
          if (v4 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_18;
          }
          uint64_t v14 = v1;
          int v15 = v4;
          uint64_t v7 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
          uint64_t v8 = v7[1];
          uint64_t v16 = *v7;
          uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
          unint64_t v11 = *(void *)(v17 + 16);
          unint64_t v10 = *(void *)(v17 + 24);
          sub_2576A7810();
          swift_retain();
          if (v11 >= v10 >> 1) {
            sub_2574E7734();
          }
          *(void *)(v17 + 16) = v11 + 1;
          unint64_t v12 = (void *)(v17 + 24 * v11);
          void v12[4] = v16;
          v12[5] = v8;
          void v12[6] = v9;
          if ((uint64_t)v5 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_19;
          }
          uint64_t v6 = a1 + 64;
          if ((*(void *)(a1 + 64 + 8 * (v5 >> 6)) & (1 << v5)) == 0) {
            goto LABEL_20;
          }
          if (v15 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_21;
          }
          uint64_t v13 = sub_2576A8680();
          --v1;
          if (v14 == 1) {
            return;
          }
          unint64_t v5 = v13;
          if ((v13 & 0x8000000000000000) == 0)
          {
            int v4 = *(_DWORD *)(a1 + 36);
            if (v13 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_22;
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
      }
    }
LABEL_22:
    __break(1u);
  }
}

uint64_t sub_25755C284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  sub_2574E7274();
  uint64_t v4 = *(void *)(a1 + 16);
  sub_2576A7810();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v7 = *((void *)v6 - 1);
      char v8 = *v6;
      sub_2576A7810();
      uint64_t v9 = sub_25756F634(a3, v5, a2, &qword_26A003A60, (void (*)(uint64_t))type metadata accessor for SplitOperation, (uint64_t)&unk_2576BA3B0, (uint64_t (*)(uint64_t))sub_257616AA4);
      uint64_t v11 = v10;
      unint64_t v12 = *(void *)(v17 + 16);
      if (v12 >= *(void *)(v17 + 24) >> 1) {
        sub_2574E7274();
      }
      ++v5;
      *(void *)(v17 + 16) = v12 + 1;
      uint64_t v13 = v17 + 32 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v11;
      *(void *)(v13 + 48) = v7;
      *(unsigned char *)(v13 + 56) = v8;
      v6 += 16;
    }
    while (v4 != v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v17;
}

uint64_t sub_25755C400(uint64_t a1)
{
  uint64_t v2 = sub_2576A8EF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a1;
  Tensor.scalarType.getter();
  (*(void (**)(uint64_t *__return_ptr))(v6 + 32))(&v15);
  int v7 = v15;
  uint64_t v8 = *(void *)(a1 + 16);
  swift_retain();
  if (v7 == 2)
  {
    uint64_t v9 = sub_2574BC148((uint64_t)sub_25756FACC, a1);
  }
  else
  {
    uint64_t v10 = swift_retain();
    sub_2576140FC(v10, v8, 0, 0);
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v14 = a1;
    v13[7] = 2;
    (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8E1F8], v2);
    Tensor.cast(to:roundingRule:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v9 = sub_25755C400(v15);
  }
  uint64_t v11 = v9;
  swift_release();
  return v11;
}

void *sub_25755C5C0(void *result, uint64_t a2, uint64_t a3)
{
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) + 152);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 32);
    uint64_t v6 = 1;
    int v7 = v5;
    uint64_t v8 = v4;
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v10 = v6 * v9;
      if ((unsigned __int128)(v6 * (__int128)v9) >> 64 != (v6 * v9) >> 63)
      {
        __break(1u);
        goto LABEL_14;
      }
      uint64_t v6 = v10;
      --v8;
    }
    while (v8);
    if ((unint64_t)(v10 - 0x2000000000000000) >> 62 != 3) {
      goto LABEL_15;
    }
    uint64_t v11 = 1;
    while (1)
    {
      uint64_t v12 = *v5++;
      uint64_t v13 = v11 * v12;
      if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63) {
        break;
      }
      uint64_t v11 = v13;
      if (!--v4) {
        return sub_257694B38((uint64_t)result, v13);
      }
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v13 = 1;
  return sub_257694B38((uint64_t)result, v13);
}

void sub_25755C67C()
{
  OUTLINED_FUNCTION_9_1();
  unint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  sub_2576A7810();
  for (; v2; uint64_t v2 = sub_2576A8BF0())
  {
    uint64_t v3 = 4;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        MEMORY[0x25A2B8DB0](v3 - 4, v1);
      }
      else {
        swift_retain();
      }
      uint64_t v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v5 = sub_2575CA350();
      if (v5 == sub_2575CA350())
      {
        swift_release();
      }
      else
      {
        uint64_t v6 = (void *)sub_257613788();
        if (!v6)
        {
          swift_bridgeObjectRelease();
          swift_release();
LABEL_17:
          swift_release();
          goto LABEL_21;
        }
        if (object_getClass(v6) != (Class)_TtC14NeuralNetworks17ConstantOperation)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_17;
        }
        swift_release();
        swift_unknownObjectRelease();
      }
      ++v3;
      if (v4 == v2) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    sub_2576A7810();
  }
LABEL_20:
  swift_release();
  swift_bridgeObjectRelease();
LABEL_21:
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_25755C80C(char a1)
{
  uint64_t result = 6579297;
  switch(a1)
  {
    case 1:
      uint64_t result = 6452595;
      break;
    case 2:
      uint64_t result = 7107949;
      break;
    case 3:
      uint64_t result = 0x7669645F6C616572;
      break;
    case 4:
      uint64_t result = 7827312;
      break;
    case 5:
      unsigned int v3 = 1769496941;
      goto LABEL_8;
    case 6:
      unsigned int v3 = 1768843629;
LABEL_8:
      uint64_t result = v3 | 0x6D756D00000000;
      break;
    case 7:
      uint64_t result = 6582125;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_25755C8CC(char a1)
{
  unint64_t result = 7235955;
  switch(a1)
  {
    case 1:
      return 1936679777;
    case 2:
      uint64_t v3 = 1936679777;
      goto LABEL_9;
    case 3:
      return 1852404577;
    case 4:
      uint64_t v3 = 1852404577;
      goto LABEL_9;
    case 5:
      return 1851880545;
    case 6:
      uint64_t v3 = 1851880545;
LABEL_9:
      unint64_t result = v3 & 0xFFFF0000FFFFFFFFLL | 0x6800000000;
      break;
    case 7:
      unint64_t result = 1818846563;
      break;
    case 8:
      unint64_t result = 7565155;
      break;
    case 9:
      unint64_t result = 1752395619;
      break;
    case 10:
      unint64_t result = 7370853;
      break;
    case 11:
      unint64_t result = 846231653;
      break;
    case 12:
      unint64_t result = 0x726F6F6C66;
      break;
    case 13:
      unint64_t result = 0x797469746E656469;
      break;
    case 14:
      unint64_t result = 6778732;
      break;
    case 15:
      unint64_t result = 0x636F727069636572;
      break;
    case 16:
      unint64_t result = 0x646E756F72;
      break;
    case 17:
      unint64_t result = 0x7472717372;
      break;
    case 18:
      unint64_t result = 1852270963;
      break;
    case 19:
      return result;
    case 20:
      unint64_t result = 1752066419;
      break;
    case 21:
      unint64_t result = 1953657203;
      break;
    case 22:
      unint64_t result = 0x657261757173;
      break;
    case 23:
      unint64_t result = 7233908;
      break;
    case 24:
      unint64_t result = 1752064372;
      break;
    default:
      unint64_t result = 7561825;
      break;
  }
  return result;
}

uint64_t sub_25755CB08(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v6 = a2();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2576A77E0();
  uint64_t v7 = a3(v6);
  uint64_t v8 = swift_bridgeObjectRelease();
  a4(v8);
  return v7;
}

uint64_t sub_25755CBC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void *)(v2 + 64);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000EC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A001C18);
  if (swift_dynamicCast())
  {
    sub_257479260(v20, (uint64_t)v16);
    uint64_t v6 = v18;
    uint64_t v7 = v19;
    uint64_t v8 = __swift_project_boxed_opaque_existential_1(v16, v18);
    uint64_t v9 = sub_25756F894(v2, a1, &qword_26A0018C8, (void (*)(uint64_t))type metadata accessor for ConstantOperation);
    uint64_t v11 = v10;
    sub_257469238(v2 + 88, (uint64_t)v20);
    sub_257529BA8((uint64_t)v8, v9, v11, (uint64_t)v20, v6, v7);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    sub_2574BADC0((uint64_t)v20);
    v16[0] = v4;
    v16[1] = v5;
    char v17 = 8;
    swift_unknownObjectRetain();
    uint64_t v13 = sub_25756F894(v2, a1, &qword_26A0018C8, (void (*)(uint64_t))type metadata accessor for ConstantOperation);
    uint64_t v15 = v14;
    sub_257469238(v2 + 88, (uint64_t)v20);
    sub_257528AA0((uint64_t)v16, v13, v15, (uint64_t)v20);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_25755CD90(uint64_t a1)
{
  return sub_25755CBC0(a1);
}

void sub_25755CDA8()
{
  OUTLINED_FUNCTION_9_1();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  swift_getObjectType();
  if (dynamic_cast_existential_1_conditional(v3))
  {
    uint64_t v6 = v5;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_unknownObjectRetain();
    v8(v2, ObjectType, v6);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v9 = swift_getObjectType();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v9, v4);
    uint64_t v12 = v11;
    sub_25752CE48();
    OUTLINED_FUNCTION_33_0();
    *(void *)uint64_t v13 = v10;
    *(void *)(v13 + 8) = v12;
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0;
    *(unsigned char *)(v13 + 32) = 0;
    swift_willThrow();
  }
  OUTLINED_FUNCTION_7_1();
}

void sub_25755CEAC()
{
}

uint64_t sub_25755CEC4()
{
  uint64_t v1 = 0x65725F796B61656CLL;
  if (*(unsigned char *)(v0 + 128) == 1) {
    uint64_t v1 = 0x64696F6D676973;
  }
  if (*(unsigned char *)(v0 + 128)) {
    return v1;
  }
  else {
    return 6713957;
  }
}

uint64_t sub_25755CF1C()
{
  if (*(unsigned char *)(v0 + 128) == 2)
  {
    if (*(unsigned char *)(v0 + 136))
    {
      sub_2576A8730();
      swift_bridgeObjectRelease();
      sub_25753D7B8();
      sub_2576A7B00();
      swift_bridgeObjectRelease();
      sub_2576A7B00();
      sub_25746BE6C();
    }
    uint64_t v1 = *(unsigned int *)(v0 + 132);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(void *)(inited + 32) = 0x6168706C61;
    *(void *)(inited + 40) = 0xE500000000000000;
    *(void *)(inited + 48) = v1;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    char v3 = sub_2576A77E0();
    sub_25746E2DC(inited, v4, v5, v6, v7, v8, v9, v10, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v3);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v34 = v12;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v13 = MEMORY[0x263F8EE78];
    char v14 = sub_2576A77E0();
    sub_25746E2DC(v13, v15, v16, v17, v18, v19, v20, v21, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v14);
    uint64_t v34 = v22;
  }
  sub_257470F58();
  return v34;
}

#error "25755D19C: call analysis failed (funcsize=134)"

uint64_t sub_25755D314()
{
  return sub_25755D0DC();
}

uint64_t sub_25755D32C()
{
  OUTLINED_FUNCTION_17_24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_0_51(inited, (__n128)xmmword_2576ABB10);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v2 = OUTLINED_FUNCTION_61_2();
  OUTLINED_FUNCTION_32_14(v2);
  uint64_t v3 = OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_31_14(v3);
  OUTLINED_FUNCTION_61_2();
  sub_257470F58();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v4 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_27_16(v4, v5, v6, v7, v8, v9, v10, v11, v34, v39, v12);
  v4[2].n128_u64[0] = OUTLINED_FUNCTION_185(v13, v14, v15, &qword_26A001200, (void (*)(uint64_t))type metadata accessor for ReLUOperation, (uint64_t)&unk_2576B4E70, sub_257616D58);
  v4[2].n128_u64[1] = v16;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v17 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_82_2(v17, (__n128)xmmword_2576ABB10);
  OUTLINED_FUNCTION_116_1();
  sub_2576A7810();
  sub_2575AEC10();
  uint64_t v18 = sub_2576A77E0();
  OUTLINED_FUNCTION_46_7(v18);
  uint64_t v19 = OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_65_2(v19, v20, v21, v22, v23, v24, v25, v26, v35, v36, 1, 2, v37, v38);
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_35_11(1970038130, 0xE400000000000000, v27, v28, v29, v30, v31, v32, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25755D514()
{
  return sub_25755D32C();
}

uint64_t sub_25755D52C(uint64_t a1)
{
  return sub_25755DEF0(a1, v1);
}

uint64_t sub_25755D548()
{
  swift_getKeyPath();
  sub_25756D07C();
  swift_release();
  sub_25755D67C(&v5);
  swift_release();
  sub_25764FC78();
  uint64_t v1 = v0;
  swift_release();
  swift_getKeyPath();
  sub_25756D07C();
  swift_release();
  sub_25755D67C(&v5);
  swift_release();
  uint64_t v2 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_2576ABB10;
  uint64_t v5 = v2;
  v1(&v5);
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

void sub_25755D67C(uint64_t *a1@<X8>)
{
  type metadata accessor for TensorHandle();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  swift_retain();
  sub_2576139A8();
  *a1 = v3;
}

uint64_t sub_25755D6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t), unint64_t *a7, void (*a8)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  uint64_t v17 = sub_2576A77E0();
  *(void *)(inited + 16) = a2;
  *(void *)(inited + 24) = v17;
  uint64_t v18 = a6(inited, a3, a4);
  if (v8)
  {
    swift_setDeallocating();
    sub_25756D644(MEMORY[0x263F8EED8]);
    return swift_deallocClassInstance();
  }
  uint64_t v20 = (void *)v18;
  uint64_t v44 = a7;
  uint64_t v21 = (void *)sub_2576A77E0();
  size_t v45 = (void (*)(uint64_t))v20[2];
  if (v45)
  {
    uint64_t v41 = a8;
    uint64_t v42 = a1;
    uint64_t v43 = a2;
    sub_2576A7810();
    a8 = 0;
    while (1)
    {
      uint64_t v22 = v20;
      swift_retain();
      a2 = sub_2576136DC();
      uint64_t v24 = v23;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v46[0] = v21;
      uint64_t v20 = v21;
      unint64_t v25 = sub_25747588C(a2, v24);
      uint64_t v27 = v21[2];
      BOOL v28 = (v26 & 1) == 0;
      uint64_t v21 = (void *)(v27 + v28);
      if (__OFADD__(v27, v28)) {
        break;
      }
      unint64_t v29 = v25;
      a1 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004480);
      uint64_t v20 = v46;
      if (sub_2576A8AD0())
      {
        uint64_t v20 = (void *)v46[0];
        unint64_t v30 = sub_25747588C(a2, v24);
        if ((a1 & 1) != (v31 & 1)) {
          goto LABEL_25;
        }
        unint64_t v29 = v30;
      }
      uint64_t v21 = (void *)v46[0];
      if (a1)
      {
        *(void *)(*(void *)(v46[0] + 56) + 8 * v29) = a8;
        uint64_t v20 = v22;
      }
      else
      {
        *(void *)(v46[0] + 8 * (v29 >> 6) + 64) |= 1 << v29;
        uint64_t v32 = (uint64_t *)(v21[6] + 16 * v29);
        *uint64_t v32 = a2;
        v32[1] = v24;
        *(void *)(v21[7] + 8 * v29) = a8;
        uint64_t v33 = v21[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_22;
        }
        uint64_t v20 = v22;
        uint64_t v21[2] = v35;
        sub_2576A7810();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a8 = (void (*)(uint64_t))((char *)a8 + 1);
      if (v45 == a8)
      {
        swift_bridgeObjectRelease();
        a2 = v43;
        a8 = v41;
        a1 = v42;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_26A000948 == -1) {
      goto LABEL_16;
    }
  }
  swift_once();
LABEL_16:
  sub_25755BE24((uint64_t)v20);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v46[0]) = 0;
  v46[1] = MEMORY[0x263F8EE88];
  unint64_t v36 = sub_2576A7810();
  if (sub_2575F21B0(v36, (char *)v46))
  {
    sub_2575F0098();
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v38 + 16))
  {
    sub_25747C54C(v38 + 32, (uint64_t)v46);
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_25756E8D4(v44, a8);
    uint64_t v40 = sub_25756D198();
    sub_2576A7810();
    sub_25756C3BC((uint64_t)v46, a2, v39, v40, (uint64_t)v21, a1);
    sub_25747F1AC((uint64_t)v46);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_2576A9020();
    __break(1u);
  }
  return result;
}

uint64_t sub_25755DAE0(uint64_t a1, uint64_t a2, float a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003AC0);
  uint64_t inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  uint64_t v8 = sub_2576A77E0();
  *(void *)(inited + 16) = a2;
  *(void *)(inited + 24) = v8;
  uint64_t v9 = sub_257569B2C(a3);
  if (v3)
  {
    swift_setDeallocating();
    sub_25756D644(MEMORY[0x263F8EED8]);
    return swift_deallocClassInstance();
  }
  uint64_t v11 = (void *)v9;
  __n128 v12 = (void *)sub_2576A77E0();
  uint64_t v35 = v11[2];
  if (v35)
  {
    uint64_t v33 = a1;
    uint64_t v34 = a2;
    sub_2576A7810();
    a2 = 0;
    while (1)
    {
      uint64_t v13 = v11;
      swift_retain();
      uint64_t v14 = sub_2576136DC();
      a1 = v15;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v36[0] = v12;
      uint64_t v11 = v12;
      unint64_t v16 = sub_25747588C(v14, a1);
      uint64_t v18 = v12[2];
      BOOL v19 = (v17 & 1) == 0;
      __n128 v12 = (void *)(v18 + v19);
      if (__OFADD__(v18, v19)) {
        break;
      }
      unint64_t v20 = v16;
      char v21 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004480);
      uint64_t v11 = v36;
      if (sub_2576A8AD0())
      {
        uint64_t v11 = (void *)v36[0];
        unint64_t v22 = sub_25747588C(v14, a1);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_25;
        }
        unint64_t v20 = v22;
      }
      __n128 v12 = (void *)v36[0];
      if (v21)
      {
        *(void *)(*(void *)(v36[0] + 56) + 8 * v20) = a2;
        uint64_t v11 = v13;
      }
      else
      {
        *(void *)(v36[0] + 8 * (v20 >> 6) + 64) |= 1 << v20;
        uint64_t v24 = (uint64_t *)(v12[6] + 16 * v20);
        uint64_t *v24 = v14;
        v24[1] = a1;
        *(void *)(v12[7] + 8 * v20) = a2;
        uint64_t v25 = v12[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_22;
        }
        uint64_t v11 = v13;
        v12[2] = v27;
        sub_2576A7810();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v35 == ++a2)
      {
        swift_bridgeObjectRelease();
        a2 = v34;
        a1 = v33;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_26A000948 == -1) {
      goto LABEL_16;
    }
  }
  swift_once();
LABEL_16:
  sub_25755BE24((uint64_t)v11);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v36[0]) = 0;
  v36[1] = MEMORY[0x263F8EE88];
  unint64_t v28 = sub_2576A7810();
  if (sub_2575F21B0(v28, (char *)v36))
  {
    sub_2575F0098();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v30 + 16))
  {
    sub_25747C54C(v30 + 32, (uint64_t)v36);
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_25756E8D4(&qword_26A003A30, (void (*)(uint64_t))type metadata accessor for BatchNormGradientOperation);
    uint64_t v32 = sub_25756D198();
    sub_2576A7810();
    sub_25756C3BC((uint64_t)v36, a2, v31, v32, (uint64_t)v12, a1);
    sub_25747F1AC((uint64_t)v36);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_2576A9020();
    __break(1u);
  }
  return result;
}

uint64_t sub_25755DEF0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003AA8);
  uint64_t inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  uint64_t v6 = sub_2576A77E0();
  *(void *)(inited + 16) = a2;
  *(void *)(inited + 24) = v6;
  uint64_t v7 = sub_25755D548();
  if (v2) {
    return swift_release();
  }
  unint64_t v9 = v7;
  uint64_t v10 = (void *)sub_2576A77E0();
  uint64_t v32 = *(void *)(v9 + 16);
  if (v32)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    sub_2576A7810();
    a2 = 0;
    while (1)
    {
      unint64_t v11 = v9;
      swift_retain();
      uint64_t v12 = sub_2576136DC();
      a1 = v13;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v33[0] = v10;
      unint64_t v14 = sub_25747588C(v12, a1);
      uint64_t v16 = v10[2];
      BOOL v17 = (v15 & 1) == 0;
      uint64_t v10 = (void *)(v16 + v17);
      if (__OFADD__(v16, v17)) {
        break;
      }
      unint64_t v9 = v14;
      char v18 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004480);
      if (sub_2576A8AD0())
      {
        unint64_t v19 = sub_25747588C(v12, a1);
        if ((v18 & 1) != (v20 & 1)) {
          goto LABEL_25;
        }
        unint64_t v9 = v19;
      }
      uint64_t v10 = (void *)v33[0];
      if (v18)
      {
        *(void *)(*(void *)(v33[0] + 56) + 8 * v9) = a2;
      }
      else
      {
        *(void *)(v33[0] + 8 * (v9 >> 6) + 64) |= 1 << v9;
        char v21 = (uint64_t *)(v10[6] + 16 * v9);
        uint64_t *v21 = v12;
        v21[1] = a1;
        *(void *)(v10[7] + 8 * v9) = a2;
        uint64_t v22 = v10[2];
        BOOL v23 = __OFADD__(v22, 1);
        uint64_t v24 = v22 + 1;
        if (v23) {
          goto LABEL_22;
        }
        void v10[2] = v24;
        sub_2576A7810();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++a2;
      unint64_t v9 = v11;
      if (v32 == a2)
      {
        swift_bridgeObjectRelease();
        a2 = v31;
        a1 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_26A000948 == -1) {
      goto LABEL_16;
    }
  }
  swift_once();
LABEL_16:
  sub_25755BE24(v9);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v33[0]) = 0;
  v33[1] = MEMORY[0x263F8EE88];
  unint64_t v25 = sub_2576A7810();
  if (sub_2575F21B0(v25, (char *)v33))
  {
    sub_2575F0098();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v27 + 16))
  {
    sub_25747C54C(v27 + 32, (uint64_t)v33);
    swift_bridgeObjectRelease();
    uint64_t v28 = sub_25756E8D4(&qword_26A0011F8, (void (*)(uint64_t))type metadata accessor for ReLUGradientOperation);
    uint64_t v29 = sub_25756D198();
    sub_2576A7810();
    sub_25756C3BC((uint64_t)v33, a2, v28, v29, (uint64_t)v10, a1);
    sub_25747F1AC((uint64_t)v33);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_2576A9020();
    __break(1u);
  }
  return result;
}

uint64_t sub_25755E2C8(uint64_t a1, uint64_t a2, char a3, float a4, float a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A003AB8);
  uint64_t inited = swift_initStackObject();
  type metadata accessor for TensorRepresentation();
  swift_retain();
  uint64_t v12 = sub_2576A77E0();
  *(void *)(inited + 16) = a2;
  *(void *)(inited + 24) = v12;
  uint64_t v13 = sub_257569640(a4, a5, inited, a3);
  if (v5)
  {
    swift_setDeallocating();
    sub_25756D644(MEMORY[0x263F8EED8]);
    return swift_deallocClassInstance();
  }
  char v15 = (void *)v13;
  uint64_t v16 = (void *)sub_2576A77E0();
  uint64_t v39 = v15[2];
  if (v39)
  {
    uint64_t v37 = a1;
    uint64_t v38 = a2;
    sub_2576A7810();
    a2 = 0;
    while (1)
    {
      BOOL v17 = v15;
      swift_retain();
      uint64_t v18 = sub_2576136DC();
      a1 = v19;
      swift_release();
      swift_isUniquelyReferenced_nonNull_native();
      v40[0] = v16;
      char v15 = v16;
      unint64_t v20 = sub_25747588C(v18, a1);
      uint64_t v22 = v16[2];
      BOOL v23 = (v21 & 1) == 0;
      uint64_t v16 = (void *)(v22 + v23);
      if (__OFADD__(v22, v23)) {
        break;
      }
      unint64_t v24 = v20;
      char v25 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A004480);
      char v15 = v40;
      if (sub_2576A8AD0())
      {
        char v15 = (void *)v40[0];
        unint64_t v26 = sub_25747588C(v18, a1);
        if ((v25 & 1) != (v27 & 1)) {
          goto LABEL_25;
        }
        unint64_t v24 = v26;
      }
      uint64_t v16 = (void *)v40[0];
      if (v25)
      {
        *(void *)(*(void *)(v40[0] + 56) + 8 * v24) = a2;
        char v15 = v17;
      }
      else
      {
        *(void *)(v40[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
        uint64_t v28 = (uint64_t *)(v16[6] + 16 * v24);
        *uint64_t v28 = v18;
        v28[1] = a1;
        *(void *)(v16[7] + 8 * v24) = a2;
        uint64_t v29 = v16[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_22;
        }
        char v15 = v17;
        void v16[2] = v31;
        sub_2576A7810();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v39 == ++a2)
      {
        swift_bridgeObjectRelease();
        a2 = v38;
        a1 = v37;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  else
  {
LABEL_15:
    if (qword_26A000948 == -1) {
      goto LABEL_16;
    }
  }
  swift_once();
LABEL_16:
  sub_25755BE24((uint64_t)v15);
  swift_bridgeObjectRelease();
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v40[0]) = 0;
  v40[1] = MEMORY[0x263F8EE88];
  unint64_t v32 = sub_2576A7810();
  if (sub_2575F21B0(v32, (char *)v40))
  {
    sub_2575F0098();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  if (*(void *)(v34 + 16))
  {
    sub_25747C54C(v34 + 32, (uint64_t)v40);
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_25756E8D4(&qword_26A003A38, (void (*)(uint64_t))type metadata accessor for BatchNormOperation);
    uint64_t v36 = sub_25756D198();
    sub_2576A7810();
    sub_25756C3BC((uint64_t)v40, a2, v35, v36, (uint64_t)v16, a1);
    sub_25747F1AC((uint64_t)v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
LABEL_25:
    uint64_t result = sub_2576A9020();
    __break(1u);
  }
  return result;
}

uint64_t sub_25755E6E8(uint64_t a1)
{
  return sub_25755D52C(a1);
}

#error "25755E7C0: call analysis failed (funcsize=135)"

uint64_t sub_25755E94C()
{
  return sub_25755E700();
}

uint64_t sub_25755E964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)sub_257613788();
  if (!v5
    || (Class = (__objc2_class *)object_getClass(v5),
        uint64_t result = swift_unknownObjectRelease(),
        Class != _TtC14NeuralNetworks17ConstantOperation))
  {
    sub_25752CE48();
    OUTLINED_FUNCTION_33_0();
    *(_OWORD *)uint64_t v8 = xmmword_2576B6910;
    *(void *)(v8 + 16) = a2;
    *(void *)(v8 + 24) = a3;
    *(unsigned char *)(v8 + 32) = 4;
    sub_2576A7810();
    return swift_willThrow();
  }
  return result;
}

void sub_25755EA10()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_170();
  if (!v3)
  {
    sub_25752CE48();
    OUTLINED_FUNCTION_33_0();
    *(_OWORD *)uint64_t v23 = xmmword_2576B6910;
    *(void *)(v23 + 16) = 0xD000000000000034;
    *(void *)(v23 + 24) = 0x80000002576CBD40;
    char v24 = 2;
LABEL_18:
    *(unsigned char *)(v23 + 32) = v24;
    swift_willThrow();
    goto LABEL_33;
  }
  uint64_t v4 = v0;
  uint64_t v5 = v2;
  uint64_t v6 = sub_2574C2A44();
  sub_257582858(1, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = MEMORY[0x25A2B8DB0](1, v6);
  }
  else
  {
    uint64_t v7 = *(void *)(v6 + 40);
    swift_retain();
  }
  uint64_t v8 = 0x685F746867696577;
  swift_bridgeObjectRelease();
  sub_25755E964(v7, 0x685F746867696577, 0xE900000000000068);
  swift_release();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
    uint64_t inited = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_22_17(inited, (__n128)xmmword_2576ABB30);
    uint64_t v10 = sub_2574C2A44();
    sub_257582858(0, (v10 & 0xC000000000000001) == 0, v10);
    if ((v10 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = MEMORY[0x25A2B8DB0](0, v10);
    }
    else
    {
      uint64_t v11 = *(void *)(v10 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    inited[3].n128_u64[0] = v11;
    inited[3].n128_u64[1] = 0x685F746867696577;
    inited[4].n128_u64[0] = 0xE900000000000068;
    uint64_t v12 = sub_2574C2A44();
    sub_257582858(1, (v12 & 0xC000000000000001) == 0, v12);
    if ((v12 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = MEMORY[0x25A2B8DB0](1, v12);
    }
    else
    {
      uint64_t v13 = *(void *)(v12 + 40);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    inited[4].n128_u64[1] = v13;
    type metadata accessor for TensorRepresentation();
    uint64_t v14 = sub_2576A77E0();
    sub_2574C3A2C();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = sub_2574C2A44();
      OUTLINED_FUNCTION_19_22(v16);
      OUTLINED_FUNCTION_105_2();
      uint64_t v8 = v114;
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_102_2();
      sub_25755E964(v17, v18, v19);
      swift_release();
      uint64_t v20 = sub_2574C2A44();
      OUTLINED_FUNCTION_19_22(v20);
      if (v8) {
        OUTLINED_FUNCTION_105_2();
      }
      else {
        OUTLINED_FUNCTION_135_0();
      }
      swift_bridgeObjectRelease();
      swift_isUniquelyReferenced_nonNull_native();
      OUTLINED_FUNCTION_168();
      OUTLINED_FUNCTION_102_2();
      sub_2575CF594();
      OUTLINED_FUNCTION_167();
    }
    sub_2574C3A44();
    if ((v21 & 1) == 0)
    {
      uint64_t v22 = sub_2574C2A44();
      OUTLINED_FUNCTION_19_22(v22);
      if (v8)
      {
        OUTLINED_FUNCTION_105_2();
        uint64_t v8 = v115;
      }
      else
      {
        OUTLINED_FUNCTION_134_0();
      }
      swift_bridgeObjectRelease();
      sub_25755E964(v8, 1935763810, 0xE400000000000000);
      swift_release();
      uint64_t v25 = sub_2574C2A44();
      OUTLINED_FUNCTION_19_22(v25);
      if (v8) {
        OUTLINED_FUNCTION_105_2();
      }
      else {
        OUTLINED_FUNCTION_135_0();
      }
      swift_bridgeObjectRelease();
      swift_isUniquelyReferenced_nonNull_native();
      OUTLINED_FUNCTION_168();
      sub_2575CF594();
      OUTLINED_FUNCTION_167();
    }
    uint64_t v26 = sub_2574C3A70();
    if (v27)
    {
      swift_bridgeObjectRelease();
      sub_25752CE48();
      OUTLINED_FUNCTION_33_0();
      *(_OWORD *)uint64_t v23 = xmmword_2576B6910;
      *(_OWORD *)(v23 + 16) = xmmword_2576B6920;
      char v24 = 3;
      goto LABEL_18;
    }
    uint64_t v28 = v26;
    uint64_t v29 = sub_2574C2A44();
    OUTLINED_FUNCTION_19_22(v29);
    if (v8)
    {
      OUTLINED_FUNCTION_105_2();
      uint64_t v8 = v116;
    }
    else
    {
      OUTLINED_FUNCTION_134_0();
    }
    swift_bridgeObjectRelease();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v197 = v14;
    OUTLINED_FUNCTION_165();
    sub_2575CF594();
    OUTLINED_FUNCTION_167();
    uint64_t v30 = sub_2574C2A44();
    if (__OFADD__(v28, 1))
    {
      __break(1u);
    }
    else
    {
      OUTLINED_FUNCTION_19_22(v30);
      if (!v8)
      {
        OUTLINED_FUNCTION_135_0();
LABEL_28:
        swift_bridgeObjectRelease();
        swift_isUniquelyReferenced_nonNull_native();
        uint64_t v197 = v14;
        OUTLINED_FUNCTION_165();
        sub_2575CF594();
        OUTLINED_FUNCTION_167();
        uint64_t v31 = 0x64726177726F66;
        if (*(unsigned char *)(v4 + 96)) {
          uint64_t v31 = 0x7463657269646962;
        }
        uint64_t v210 = v31;
        unint64_t v32 = 0xE700000000000000;
        if (*(unsigned char *)(v4 + 96)) {
          unint64_t v32 = 0xED00006C616E6F69;
        }
        uint64_t v195 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A001088);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_2576ABB50;
        *(void *)(v33 + 32) = sub_2574C3B20();
        *(void *)(v33 + 40) = sub_2574C3BE4();
        *(void *)(v33 + 48) = sub_2574C3C38();
        uint64_t v175 = OUTLINED_FUNCTION_29_2();
        *(_OWORD *)(v175 + 16) = xmmword_2576ABB30;
        *(void *)(v175 + 32) = sub_2574C3BE4();
        *(void *)(v175 + 40) = sub_2574C3C38();
        uint64_t v160 = OUTLINED_FUNCTION_29_2();
        *(_OWORD *)(v160 + 16) = xmmword_2576ABB30;
        *(void *)(v160 + 32) = sub_2574C3BE4();
        *(void *)(v160 + 40) = sub_2574C3C38();
        uint64_t v34 = (__n128 *)swift_allocObject();
        OUTLINED_FUNCTION_29_16(v34, v35, v36, v37, v38, v39, v40, v41, v117, v124, v131, v137, v143, v149, v155, v160, v165, v170, v175,
          v181,
          (uint64_t)v34,
          v186,
          v189,
          v192,
          v42);
        *(void *)(v43 + 32) = 1;
        v34[2].n128_u64[1] = sub_2574C3BE4();
        v34[3].n128_u64[0] = sub_2574C3C38();
        uint64_t v197 = sub_25756F894(v4, v5, &qword_26A001D68, (void (*)(uint64_t))type metadata accessor for LSTMLayerOperation);
        uint64_t v198 = v44;
        sub_2576A7B00();
        unint64_t v196 = v197;
        uint64_t v190 = v198;
        uint64_t v166 = sub_25755CB08(v14, (uint64_t (*)(void))sub_25755C0B0, sub_25746D748, (void (*)(uint64_t))sub_257470688);
        uint64_t v156 = v45;
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
        uint64_t v46 = swift_initStackObject();
        *(_OWORD *)(v46 + 16) = xmmword_2576B32E0;
        *(void *)(v46 + 32) = 0x6F69746365726964;
        *(void *)(v46 + 40) = 0xE90000000000006ELL;
        *(void *)(v46 + 48) = v210;
        *(void *)(v46 + 56) = v195;
        *(unsigned char *)(v46 + 64) = 4;
        *(void *)(v46 + 72) = 0xD000000000000014;
        *(void *)(v46 + 80) = 0x80000002576CBD80;
        *(_OWORD *)(v46 + 88) = xmmword_2576B6930;
        *(unsigned char *)(v46 + 104) = 4;
        *(void *)(v46 + 112) = 0x7463615F6C6C6563;
        *(void *)(v46 + 120) = 0xEF6E6F6974617669;
        *(_OWORD *)(v46 + 128) = xmmword_2576B6940;
        *(unsigned char *)(v46 + 144) = 4;
        *(void *)(v46 + 152) = 0x6974617669746361;
        *(void *)(v46 + 160) = 0xEA00000000006E6FLL;
        *(_OWORD *)(v46 + 168) = xmmword_2576B6940;
        *(unsigned char *)(v46 + 184) = 4;
        *(void *)(v46 + 192) = 0x735F74757074756FLL;
        *(void *)(v46 + 200) = 0xEF65636E65757165;
        *(_OWORD *)(v46 + 208) = xmmword_2576B0250;
        *(unsigned char *)(v46 + 224) = 0;
        sub_257476DB4(v210, v195, 4);
        uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
        uint64_t v198 = sub_2576A77E0();
        sub_25746E2DC(v46, v47, v48, v49, v50, v51, v52, v53, v118, v125, v132, v138, v144, v150, v156, v161, v166, v171, v176);
        OUTLINED_FUNCTION_41_8();
        uint64_t v197 = v14;
        sub_257470F58();
        uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
        size_t v54 = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_15_24(v54, v55, v56, v57, v58, v59, v60, v61, v119, v126, v198, v14, v145, v151, v157, v162, v167, v172, v177,
          v182,
          v184,
          v187,
          v190,
          (uint64_t)&unk_2576AFA18,
          v62);
        uint64_t v199 = sub_25756F634(v4, 0, v5, &qword_26A001D68, (void (*)(uint64_t))type metadata accessor for LSTMLayerOperation, v193, sub_257616DB8);
        uint64_t v200 = v63;
        uint64_t v201 = v33;
        char v202 = 10;
        unint64_t v203 = v196;
        uint64_t v204 = v191;
        uint64_t v205 = v163;
        char v206 = 10;
        sub_2576A7810();
        v207[0] = sub_25756F634(v4, 2, v5, &qword_26A001D68, (void (*)(uint64_t))type metadata accessor for LSTMLayerOperation, v193, sub_257616DB8);
        v207[1] = v64;
        v207[2] = v178;
        char v208 = 10;
        uint64_t v198 = sub_2576A77E0();
        sub_25746D92C(&v197);
        uint64_t v65 = OUTLINED_FUNCTION_106_2();
        uint64_t v197 = (uint64_t)sub_257616DB8;
        sub_257470930(v65, v66, v67, v68, v69, v70, v71, v72, v120, v127, v133, v139, (uint64_t)sub_257616DB8, (uint64_t)type metadata accessor for LSTMLayerOperation);
        uint64_t v73 = v197;
        uint64_t v74 = v198;
        sub_257469238(v4 + 104, (uint64_t)v209);
        sub_25752A350(1836348268, 0xE400000000000000, v168, v158, v140, v134, v73, v74, (uint64_t)v209);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FA8);
        uint64_t v75 = (__n128 *)swift_initStackObject();
        uint64_t v76 = OUTLINED_FUNCTION_22_17(v75, (__n128)xmmword_2576ABB10);
        v76[3].n128_u64[0] = v196;
        v76[3].n128_u64[1] = v191;
        uint64_t v77 = MEMORY[0x263F8D320];
        uint64_t v78 = sub_2576A77E0();
        sub_25755CB08(v78, (uint64_t (*)(void))sub_25755BED8, (uint64_t (*)(uint64_t))sub_25746E400, (void (*)(uint64_t))sub_257470E14);
        uint64_t v79 = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_8_36(v79, (__n128)xmmword_2576ABB10);
        v79[3].n128_u64[0] = v185;
        v79[3].n128_u64[1] = 0;
        v79[4].n128_u8[0] = 7;
        uint64_t v80 = v185;
        sub_2576A7810();
        uint64_t v198 = sub_2576A77E0();
        sub_25746E2DC((uint64_t)v79, v81, v82, v83, v84, v85, v86, v87, v121, v128, v134, v140, v146, v152, v158, v163, v168, v173, v4 + 104);
        OUTLINED_FUNCTION_106_2();
        uint64_t v197 = v77;
        sub_257470F58();
        uint64_t v88 = v198;
        uint64_t v89 = (__n128 *)swift_initStackObject();
        OUTLINED_FUNCTION_15_24(v89, v90, v91, v92, v93, v94, v95, v96, v122, v129, v135, v141, v147, v153, v159, v164, v169, v174, v179,
          v183,
          v185,
          v188,
          v191,
          v193,
          v97);
        uint64_t v199 = sub_25756F634(v4, 1, v5, &qword_26A001D68, v154, v194, v148);
        uint64_t v200 = v98;
        uint64_t v201 = v80;
        char v202 = 10;
        uint64_t v198 = sub_2576A77E0();
        sub_25746D92C(&v197);
        uint64_t v99 = OUTLINED_FUNCTION_69_2();
        uint64_t v197 = v4;
        sub_257470930(v99, v100, v101, v102, v103, v104, v105, v106, v123, v130, v136, v142, (uint64_t)v148, (uint64_t)v154);
        uint64_t v107 = v197;
        uint64_t v108 = v198;
        sub_257469238(v180, (uint64_t)v207);
        OUTLINED_FUNCTION_11_32();
        OUTLINED_FUNCTION_173();
        sub_25752A558(v109, v110, v111, v112, v113, v88, v107, v108, (uint64_t)v207);
        sub_257476E0C(v210, v195, 4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
    }
    OUTLINED_FUNCTION_105_2();
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_7_1();
}

void sub_25755F560()
{
}

void *sub_25755F578@<X0>(uint64_t a1@<X8>)
{
  sub_25767AC64();
  return sub_25751BF38(v2, a1, 0x2EDBE6FFu);
}

uint64_t sub_25755F5D0()
{
  OUTLINED_FUNCTION_17_24();
  int v2 = *(unsigned __int8 *)(v0 + 128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_0_51(inited, (__n128)xmmword_2576ABB10);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v5 = sub_2576A77E0();
  OUTLINED_FUNCTION_32_14(v5);
  uint64_t v6 = OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_31_14(v6);
  if (v2 == 17 || v2 == 14)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t v8 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_53_4(v8, v9, v10, v11, v12, v13, v14, v15, v62, v66, v87, v85, v16);
    *(void *)(v17 + 32) = 0x6E6F6C69737065;
    *(void *)(v17 + 40) = 0xE700000000000000;
    sub_25755F578(v17 + 48);
    uint64_t v18 = sub_2576A77E0();
    OUTLINED_FUNCTION_79_2(v18, v19, v20, v21, v22, v23, v24, v25, v63, v67, v71, v75, 1, 2, v80, v81, v82, v83, v84);
    OUTLINED_FUNCTION_18_2();
    uint64_t v86 = v1;
  }
  else
  {
    uint64_t v26 = sub_2576A77E0();
    OUTLINED_FUNCTION_79_2(v26, v27, v28, v29, v30, v31, v32, v33, v62, v66, v87, v85, 1, 2, v80, v81, v82, v83, v84);
    uint64_t v86 = v34;
  }
  sub_257470F58();
  uint64_t v35 = v87;
  unint64_t v68 = sub_25755C8CC(v2);
  uint64_t v37 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v38 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_53_4(v38, v39, v40, v41, v42, v43, v44, v45, v64, v68, v72, v76, v46);
  v38[2].n128_u64[0] = OUTLINED_FUNCTION_64_2(v47, v48, v49, (unint64_t *)&qword_26A0012E0, (void (*)(uint64_t))type metadata accessor for UnaryArithmeticOperation, (uint64_t)&unk_2576B4E70, sub_257616D58);
  v38[2].n128_u64[1] = v50;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26A000BE0);
  uint64_t v51 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_82_2(v51, v79);
  unsigned __int8 v52 = v51[2].n128_u8[8];
  v38[3].n128_u64[0] = v51[2].n128_u64[0];
  v38[3].n128_u8[8] = v52;
  swift_setDeallocating();
  sub_2576A7810();
  sub_2575AEC10();
  uint64_t v88 = sub_2576A77E0();
  sub_25746D92C(v38);
  uint64_t v53 = swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_124_1(v53, v54, v55, v56, v57, v58, v59, v60, v65, v69, v73, v77, v79.n128_i64[0], v79.n128_i64[1]);
  OUTLINED_FUNCTION_148();
  sub_25752A350(v70, v37, v78, v74, v86, v35, v86, v88, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25755F8B0()
{
  return sub_25755F5D0();
}

#error "25755F974: call analysis failed (funcsize=112)"

uint64_t sub_25755FAB0()
{
  return sub_25755F8C8();
}

uint64_t sub_25755FAC8()
{
  return OUTLINED_FUNCTION_147();
}

#error "25755FBD4: call analysis failed (funcsize=124)"

uint64_t sub_25755FD18()
{
  return sub_25755FB0C();
}

uint64_t sub_25755FD30()
{
  uint64_t result = 0x6C61757165;
  switch(*(unsigned char *)(v0 + 130))
  {
    case 1:
      uint64_t result = 0x72657461657267;
      break;
    case 2:
      uint64_t result = 0x5F72657461657267;
      break;
    case 3:
      uint64_t result = 1936942444;
      break;
    case 4:
      uint64_t result = 0x7571655F7373656CLL;
      break;
    case 5:
      uint64_t result = 0x617571655F746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_25755FE00()
{
  OUTLINED_FUNCTION_9_1();
  OUTLINED_FUNCTION_99_2();
  uint64_t v3 = v2;
  unint64_t v4 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v4 + 160) == 12)
  {
    unint64_t v306 = sub_2575295C0();
    unint64_t v6 = v5;
    uint64_t v315 = *(void *)(v1 + 48);
    unint64_t v7 = sub_2575295C0();
    uint64_t v236 = v8;
    uint64_t v250 = v7;
    uint64_t v319 = v3;
    *(void *)v329 = sub_25756F894(v1, v3, (unint64_t *)&qword_26A001D48, (void (*)(uint64_t))type metadata accessor for BinaryComparisonOperation);
    *(void *)&v329[8] = v9;
    sub_2576A7B00();
    long long v10 = *(_OWORD *)v329;
    *(void *)v329 = sub_25756F894(v1, v3, (unint64_t *)&qword_26A001D48, (void (*)(uint64_t))type metadata accessor for BinaryComparisonOperation);
    v329[8] = v11;
    sub_2576A7B00();
    uint64_t v264 = *(void *)v329;
    char v300 = v329[8];
    uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FA8);
    uint64_t inited = (__n128 *)swift_initStackObject();
    uint64_t v13 = OUTLINED_FUNCTION_157(inited, (__n128)xmmword_2576ABB10);
    v13[3].n128_u64[0] = v306;
    v13[3].n128_u64[1] = v6;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    *(void *)&v329[8] = OUTLINED_FUNCTION_61_2();
    sub_25746E400((uint64_t)inited, v15, v16, v17, v18, v19, v20, v21, v185, v198, v211, v223, v236, v250, v264, (uint64_t)&unk_2576BFA30, (uint64_t)type metadata accessor for BinaryComparisonOperation);
    uint64_t v22 = OUTLINED_FUNCTION_20_22();
    sub_257470E14(v22);
    uint64_t v23 = *(void *)&v329[8];
    *(void *)&v329[8] = OUTLINED_FUNCTION_61_2();
    sub_25746E2DC((uint64_t)&unk_27065D198, v24, v25, v26, v27, v28, v29, v30, v186, v199, v212, (uint64_t)&unk_2576BFA30, v237, v251, v265, v274, v284, *((uint64_t *)&v10 + 1), v300);
    *(void *)v329 = v31;
    sub_257470F58();
    long long v32 = *(_OWORD *)v329;
    uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
    uint64_t v33 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_15_24(v33, v34, v35, v36, v37, v38, v39, v40, v187, v200, v213, v224, v238, v252, v266, v275, v285, v294, v301,
      v307,
      v310,
      v10,
      v315,
      v319,
      v41);
    *(void *)(v42 + 32) = v313;
    *(void *)&v329[40] = v295;
    *(void *)&v329[48] = *(void *)(v4 + 152);
    v329[56] = 2;
    sub_2576A7810();
    sub_2576A7810();
    *(void *)&v329[8] = sub_2576A77E0();
    sub_25746D92C(v329);
    uint64_t v43 = OUTLINED_FUNCTION_5_36();
    *(void *)v329 = v4;
    sub_257470930(v43, v44, v45, v46, v47, v48, v49, v50, v188, v201, v214, v225, v239, v253);
    long long v51 = *(_OWORD *)v329;
    memset(v329, 0, sizeof(v329));
    char v330 = 1;
    uint64_t v52 = OUTLINED_FUNCTION_89_2();
    sub_25752A558(v52, v53, v226, v23, v32, *((uint64_t *)&v32 + 1), v51, *((uint64_t *)&v51 + 1), (uint64_t)v329);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v54 = swift_initStackObject();
    *(_OWORD *)(v54 + 16) = xmmword_2576ABB10;
    *(void *)(v54 + 32) = 120;
    *(void *)(v54 + 40) = 0xE100000000000000;
    *(void *)(v54 + 48) = v254;
    *(void *)(v54 + 56) = v240;
    sub_2576A77E0();
    sub_25746E400(v54, v55, v56, v57, v58, v59, v60, v61, v189, v202, v215, v226, v240, v254, v267, v276, v286);
    uint64_t v62 = OUTLINED_FUNCTION_18_2();
    sub_257470E14(v62);
    OUTLINED_FUNCTION_179();
    uint64_t v324 = sub_2576A77E0();
    sub_25746E2DC((uint64_t)&unk_27065D1E0, v63, v64, v65, v66, v67, v68, v69, v190, v203, v14, v227, v241, v255, v268, v277, v287, v295, v302);
    uint64_t v323 = v70;
    sub_257470F58();
    uint64_t v71 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_15_24(v71, v72, v73, v74, v75, v76, v77, v78, v191, v204, v216, v228, v242, v256, v269, v278, v288, v296, v303,
      v308,
      v311,
      v313,
      v316,
      v320,
      v79);
    *(void *)(v80 + 32) = v270;
    uint64_t v326 = v304;
    uint64_t v327 = *(void *)(v317 + 152);
    char v328 = 2;
    sub_2576A7810();
    sub_2576A7810();
    uint64_t v324 = sub_2576A77E0();
    sub_25746D92C(&v323);
    uint64_t v81 = OUTLINED_FUNCTION_106_2();
    uint64_t v323 = v14;
    sub_257470930(v81, v82, v83, v84, v85, v86, v87, v88, v192, v205, v217, v229, v243, v257);
    uint64_t v89 = v323;
    uint64_t v90 = v324;
    OUTLINED_FUNCTION_89_2();
    OUTLINED_FUNCTION_184();
    sub_25752A558(v91, v92, v93, v94, v95, v96, v89, v90, (uint64_t)v329);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v258 = sub_25755FD30();
    uint64_t v318 = v97;
    uint64_t v98 = (__n128 *)swift_initStackObject();
    uint64_t v99 = OUTLINED_FUNCTION_127(v98, (__n128)xmmword_2576ABB30);
    v99[3].n128_u64[0] = v100;
    v99[3].n128_u64[1] = v297;
    uint64_t v101 = OUTLINED_FUNCTION_111_1((uint64_t)v99);
    *(void *)(v101 + 80) = v270;
    *(void *)(v101 + 88) = v304;
    uint64_t v102 = MEMORY[0x263F8EE78];
    uint64_t v324 = sub_2576A77E0();
    sub_25746E400((uint64_t)v98, v103, v104, v105, v106, v107, v108, v109, v193, v206, v218, v230, v244, v258, v270, v279, v289);
    uint64_t v110 = OUTLINED_FUNCTION_18_2();
    uint64_t v323 = v1;
    sub_257470E14(v110);
    uint64_t v314 = v323;
    uint64_t v324 = sub_2576A77E0();
    sub_25746E2DC(v102, v111, v112, v113, v114, v115, v116, v117, v194, v207, v219, v231, v245, v259, v271, v280, v290, v297, v304);
    uint64_t v323 = v118;
    sub_257470F58();
    uint64_t v119 = (__n128 *)swift_initStackObject();
    OUTLINED_FUNCTION_15_24(v119, v120, v121, v122, v123, v124, v125, v126, v195, v208, v220, v232, v246, v260, v272, v281, v291, v298, v305,
      v309,
      v312,
      v314,
      v318,
      v321,
      v127);
    uint64_t v128 = OUTLINED_FUNCTION_42_7();
    uint64_t v325 = sub_25756F634(v128, v129, v322, (unint64_t *)&qword_26A001D48, v292, v282, v130);
    uint64_t v326 = v131;
    OUTLINED_FUNCTION_18_22(*(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
    uint64_t v324 = sub_2576A77E0();
    sub_25746D92C(&v323);
    uint64_t v132 = OUTLINED_FUNCTION_20_22();
    uint64_t v323 = v102;
    sub_257470930(v132, v133, v134, v135, v136, v137, v138, v139, v196, v209, v221, v233, v247, v261);
    sub_257469238(v1 + 72, (uint64_t)&v323);
    OUTLINED_FUNCTION_70_2();
    sub_25752A558(v140, v141, v142, v143, v144, v145, v146, v147, (uint64_t)&v323);
  }
  else
  {
    sub_25755FD30();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
    uint64_t v148 = (__n128 *)swift_initStackObject();
    uint64_t v149 = OUTLINED_FUNCTION_22_17(v148, (__n128)xmmword_2576ABB30);
    v149[3].n128_u64[0] = v4;
    v149[3].n128_u64[1] = 121;
    v149[4].n128_u64[0] = v150;
    v149[4].n128_u64[1] = *(void *)(v1 + 48);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
    uint64_t v151 = MEMORY[0x263F8EE78];
    OUTLINED_FUNCTION_175();
    sub_25746D748((uint64_t)v148);
    uint64_t v152 = OUTLINED_FUNCTION_5_36();
    sub_257470688(v152);
    *(void *)&v329[8] = OUTLINED_FUNCTION_175();
    sub_25746E2DC(v151, v153, v154, v155, v156, v157, v158, v159, v185, v198, v211, v223, v235, v249, v263, v273, v283, v293, v299);
    *(void *)v329 = v160;
    sub_257470F58();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
    uint64_t v161 = swift_initStackObject();
    *(_OWORD *)(v161 + 16) = xmmword_2576ABB10;
    uint64_t v162 = OUTLINED_FUNCTION_42_7();
    *(void *)(v161 + 32) = sub_25756F634(v162, v163, v3, v164, v165, v166, v167);
    *(void *)(v161 + 40) = v168;
    OUTLINED_FUNCTION_18_22(*(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
    OUTLINED_FUNCTION_179();
    *(void *)&v329[8] = sub_2576A77E0();
    sub_25746D92C(v161);
    uint64_t v169 = OUTLINED_FUNCTION_20_22();
    *(void *)v329 = v151;
    sub_257470930(v169, v170, v171, v172, v173, v174, v175, v176, v197, v210, v222, v234, v248, v262);
    sub_257469238(v1 + 72, (uint64_t)v329);
    OUTLINED_FUNCTION_70_2();
    sub_25752A350(v177, v178, v179, v180, v181, v182, v183, v184, (uint64_t)v329);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_1();
}

void sub_2575605C8()
{
}

#error "2575606B0: call analysis failed (funcsize=129)"

uint64_t sub_257560800()
{
  return sub_2575605E0();
}

uint64_t sub_257560818()
{
  OUTLINED_FUNCTION_59_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0010D8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_0_51(inited, (__n128)xmmword_2576ABB10);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  uint64_t v4 = OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_32_14(v4);
  uint64_t v5 = OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_31_14(v5);
  uint64_t v54 = v69[1];
  uint64_t v58 = v69[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
  unint64_t v6 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_8_36(v6, (__n128)xmmword_2576ABB10);
  v6[3].n128_u64[0] = *(void *)(v0 + 48);
  v6[3].n128_u64[1] = 0;
  v6[4].n128_u8[0] = 7;
  sub_2576A7810();
  uint64_t v7 = OUTLINED_FUNCTION_163();
  OUTLINED_FUNCTION_79_2(v7, v8, v9, v10, v11, v12, v13, v14, v48, v51, v54, v58, 1, 2, v64, v65, v66, v67, v68);
  OUTLINED_FUNCTION_18_2();
  OUTLINED_FUNCTION_123_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v15 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_53_4(v15, v16, v17, v18, v19, v20, v21, v22, v49, v52, v55, v59, v23);
  uint64_t v24 = OUTLINED_FUNCTION_42_7();
  uint64_t v30 = sub_25756F634(v24, v25, v1, v26, v27, v28, v29);
  OUTLINED_FUNCTION_72_2(v30, v31);
  uint64_t result = sub_2575E2390();
  if (*(void *)(result + 16))
  {
    OUTLINED_FUNCTION_4_39(result);
    swift_bridgeObjectRelease();
    uint64_t v33 = sub_2576A77E0();
    OUTLINED_FUNCTION_46_7(v33);
    uint64_t v34 = OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_124_1(v34, v35, v36, v37, v38, v39, v40, v41, v50, v53, v56, v60, v62, v63);
    sub_257469238(v0 + 56, (uint64_t)v69);
    uint64_t v42 = OUTLINED_FUNCTION_11_32();
    OUTLINED_FUNCTION_63_1(v42, v43, v61, v57, v44, v45, v46, v47, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_257560A2C()
{
  return sub_257560818();
}

void sub_257560A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_9_1();
  a22 = v25;
  a23 = v26;
  uint64_t v27 = v23;
  char v29 = v28;
  uint64_t v30 = *(void *)(v27 + 40);
  uint64_t v203 = *(void *)(v30 + 152);
  uint64_t v185 = *(void *)(v27 + 56);
  uint64_t v31 = *(void *)(v185 + 16);
  static ShapeInference.broadcasting(_:toRank:)((uint64_t)&v203, v31, v200);
  unint64_t v32 = *(void *)v200;
  if (!*(void *)v200)
  {
LABEL_5:
    *(void *)uint64_t v200 = 0;
    *(void *)&v200[8] = 0xE000000000000000;
    sub_2576A8730();
    OUTLINED_FUNCTION_129();
    sub_2576A7B00();
    uint64_t v130 = sub_2576A7810();
    MEMORY[0x25A2B83F0](v130, MEMORY[0x263F8D6C8]);
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2576A7B00();
    uint64_t v203 = v31;
    sub_2576A8EA0();
    sub_2576A7B00();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_129();
    sub_2576A7B00();
    char v202 = 3;
    OUTLINED_FUNCTION_54_4();
    sub_25746BE6C();
  }
  char v188 = v29;
  unint64_t v33 = sub_2575295C0();
  unint64_t v35 = v34;
  uint64_t v36 = sub_2574A25CC(0x6465706168736572, 0xE800000000000000);
  uint64_t v192 = v37;
  uint64_t v196 = v36;
  uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000FA8);
  uint64_t inited = (__n128 *)swift_initStackObject();
  uint64_t v39 = OUTLINED_FUNCTION_157(inited, (__n128)xmmword_2576ABB10);
  v39[3].n128_u64[0] = v33;
  v39[3].n128_u64[1] = v35;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  *(void *)&v200[8] = OUTLINED_FUNCTION_155();
  sub_25746E400((uint64_t)inited, v41, v42, v43, v44, v45, v46, v47, v131, v138, v24, v151, v158, v165, v27, v175, v180);
  uint64_t v48 = OUTLINED_FUNCTION_5_36();
  *(void *)uint64_t v200 = v33;
  sub_257470E14(v48);
  uint64_t v152 = *(void *)&v200[8];
  uint64_t v159 = *(void *)v200;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
  uint64_t v49 = (__n128 *)swift_initStackObject();
  uint64_t v50 = OUTLINED_FUNCTION_8_36(v49, (__n128)xmmword_2576ABB10);
  v50[3].n128_u64[0] = v32;
  v50[3].n128_u64[1] = 0;
  v50[4].n128_u8[0] = 7;
  sub_2576A7810();
  *(void *)&v200[8] = sub_2576A77E0();
  sub_25746E2DC((uint64_t)v49, v51, v52, v53, v54, v55, v56, v57, v132, v139, v145, v152, v159, v40, v171, v176, v181, v185, v188);
  OUTLINED_FUNCTION_18_2();
  *(void *)uint64_t v200 = v200;
  sub_257470F58();
  uint64_t v59 = *(void *)&v200[8];
  uint64_t v58 = *(void *)v200;
  uint64_t v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033C8);
  uint64_t v60 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_56_4(v60, v61, v62, v63, v64, v65, v66, v67, v133, v140, v146, v153, v160, v166, v172, v177, v182, v186, v189,
    v30,
    v192,
    v196,
    v68);
  *(void *)(v69 + 32) = v197;
  v60[2].n128_u64[1] = v193;
  unsigned __int8 v70 = *(unsigned char *)(v191 + 160);
  v60[3].n128_u64[0] = v32;
  v60[3].n128_u8[8] = v70;
  sub_2576A7810();
  *(void *)&v200[8] = OUTLINED_FUNCTION_155();
  sub_25746D92C(v60);
  uint64_t v71 = OUTLINED_FUNCTION_106_2();
  *(void *)uint64_t v200 = v32;
  sub_257470930(v71, v72, v73, v74, v75, v76, v77, v78, v134, v141, v147, v154, v161, v167);
  long long v79 = *(_OWORD *)v200;
  memset(v200, 0, sizeof(v200));
  char v201 = 1;
  uint64_t v80 = OUTLINED_FUNCTION_11_32();
  uint64_t v81 = v190;
  sub_25752A558(v80, v82, v162, v155, v58, v59, v79, *((uint64_t *)&v79 + 1), (uint64_t)v200);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_2574A25CC(0x746E6174736E6F63, 0xE800000000000000);
  uint64_t v84 = v83;
  uint64_t v203 = v187;
  a13 = *(unsigned char *)(v191 + 160);
  sub_2576A7810();
  uint64_t v85 = v173;
  uint64_t v86 = sub_257561024(&v203, &a13);
  uint64_t v88 = v87;
  swift_bridgeObjectRelease();
  uint64_t v203 = v86;
  uint64_t v204 = v88;
  char v205 = 8;
  swift_unknownObjectRetain();
  sub_257529AFC(&v203, v31, v84, (uint64_t)v200);
  swift_unknownObjectRelease();
  uint64_t v89 = (__n128 *)swift_initStackObject();
  uint64_t v90 = OUTLINED_FUNCTION_127(v89, (__n128)xmmword_2576ABB30);
  v90[3].n128_u64[0] = v91;
  v90[3].n128_u64[1] = v193;
  uint64_t v92 = OUTLINED_FUNCTION_111_1((uint64_t)v90);
  *(void *)(v92 + 80) = v31;
  *(void *)(v92 + 88) = v84;
  uint64_t v93 = MEMORY[0x263F8EE78];
  uint64_t v204 = sub_2576A77E0();
  sub_25746E400((uint64_t)v89, v94, v95, v96, v97, v98, v99, v100, v135, v142, v148, v155, v162, v168, v173, v178, v183);
  uint64_t v101 = OUTLINED_FUNCTION_5_36();
  uint64_t v203 = v31;
  sub_257470E14(v101);
  uint64_t v194 = v204;
  uint64_t v198 = v203;
  uint64_t v102 = OUTLINED_FUNCTION_139();
  uint64_t v203 = v93;
  uint64_t v204 = v102;
  sub_257470F58();
  uint64_t v103 = v203;
  uint64_t v104 = v204;
  uint64_t v105 = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_56_4(v105, v106, v107, v108, v109, v110, v111, v112, v136, v143, v149, v156, v163, v169, v174, v179, v184, v187, v190,
    v191,
    v194,
    v198,
    v113);
  v105[2].n128_u64[0] = OUTLINED_FUNCTION_77_2(v85, v114, v115, &qword_26A003A90, (void (*)(uint64_t))type metadata accessor for BroadcastOperation, (uint64_t)&unk_2576BA768, (uint64_t (*)(uint64_t))sub_257616AD8);
  v105[2].n128_u64[1] = v116;
  uint64_t v117 = *(void *)(v85 + 64);
  if (!*(void *)(v117 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v118 = v85;
  OUTLINED_FUNCTION_18_22(*(void *)(v117 + 32), *(unsigned char *)(v117 + 40));
  uint64_t v119 = sub_2576A77E0();
  OUTLINED_FUNCTION_22_23(v119);
  uint64_t v120 = OUTLINED_FUNCTION_41_8();
  uint64_t v203 = v81;
  sub_257470930(v120, v121, v122, v123, v124, v125, v126, v127, v137, v144, v150, v157, v164, v170);
  uint64_t v128 = v203;
  uint64_t v129 = v204;
  sub_257469238(v118 + 72, (uint64_t)&v203);
  sub_25752A558(7107949, 0xE300000000000000, v199, v195, v103, v104, v128, v129, (uint64_t)&v203);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7_1();
}

uint64_t sub_257561024(uint64_t *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  int v3 = *a2;
  uint64_t v4 = type metadata accessor for NativeTensorStorage();
  uint64_t v8 = v2;
  char v7 = v3;
  if ((v3 - 1) > 0xA) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = qword_2576B7280[(char)(v3 - 1)];
  }
  sub_2576A7810();
  return sub_25754E9EC((uint64_t)&v8, (uint64_t)&v7, v5, v4, v3);
}

void sub_2575610BC(unsigned char *a1, unsigned char *a2, char a3)
{
  switch(a3)
  {
    case 1:
      goto LABEL_5;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_12;
    case 4:
      goto LABEL_15;
    case 5:
      goto LABEL_18;
    case 6:
      if (!a1) {
        return;
      }
      int64_t v8 = a2 - a1;
      if (a2 - a1 >= -3) {
        goto LABEL_24;
      }
      goto LABEL_56;
    case 7:
      if (!a1) {
        return;
      }
      int64_t v9 = a2 - a1;
      if (a2 - a1 >= -7) {
        goto LABEL_28;
      }
      goto LABEL_57;
    case 8:
      if (!a1) {
        return;
      }
      OUTLINED_FUNCTION_158();
      if (v6 != v7) {
        goto LABEL_58;
      }
      if ((unint64_t)(v12 + 1) < 3) {
        return;
      }
      OUTLINED_FUNCTION_125_1();
      uint64_t v11 = &unk_2576B69E0;
      goto LABEL_46;
    case 9:
      if (!a1) {
        return;
      }
      OUTLINED_FUNCTION_158();
      if (v6 != v7) {
        goto LABEL_59;
      }
      if ((unint64_t)(v13 + 1) < 3) {
        return;
      }
      OUTLINED_FUNCTION_125_1();
      uint64_t v11 = &unk_2576B69F0;
      goto LABEL_46;
    case 10:
      if (!a1) {
        return;
      }
      int64_t v14 = a2 - a1;
      if (a2 - a1 < -3) {
        goto LABEL_60;
      }
      if ((unint64_t)(v14 + 3) < 7) {
        return;
      }
      size_t v10 = 4 * (v14 / 4);
      uint64_t v11 = &unk_2576B6A00;
      goto LABEL_46;
    case 11:
      if (!a1) {
        return;
      }
      int64_t v15 = a2 - a1;
      if (a2 - a1 < -7) {
        goto LABEL_61;
      }
      if ((unint64_t)(v15 + 7) < 0xF) {
        return;
      }
      size_t v10 = 8 * (v15 / 8);
      uint64_t v11 = &unk_2576B6A10;
      goto LABEL_46;
    case 12:
      if (!a1) {
        return;
      }
      size_t v4 = a2 - a1;
      BOOL v3 = a2 == a1;
      if (a2 - a1 >= 0) {
        goto LABEL_49;
      }
      goto LABEL_62;
    default:
      if (!a1) {
        return;
      }
      size_t v4 = a2 - a1;
      BOOL v3 = a2 == a1;
      if (a2 - a1 >= 0) {
        goto LABEL_49;
      }
      __break(1u);
LABEL_5:
      if (!a1) {
        return;
      }
      OUTLINED_FUNCTION_158();
      if (v6 == v7) {
        goto LABEL_20;
      }
      __break(1u);
LABEL_9:
      if (!a1) {
        return;
      }
      int64_t v8 = a2 - a1;
      if (a2 - a1 >= -3)
      {
LABEL_24:
        if ((unint64_t)(v8 + 3) < 7) {
          return;
        }
        size_t v10 = 4 * (v8 / 4);
        uint64_t v11 = &unk_2576B69C0;
        goto LABEL_46;
      }
      __break(1u);
LABEL_12:
      if (a1)
      {
        int64_t v9 = a2 - a1;
        if (a2 - a1 >= -7)
        {
LABEL_28:
          if ((unint64_t)(v9 + 7) < 0xF) {
            return;
          }
          size_t v10 = 8 * (v9 / 8);
          uint64_t v11 = &unk_2576B69B0;
          goto LABEL_46;
        }
        __break(1u);
LABEL_15:
        if (a1)
        {
          size_t v4 = a2 - a1;
          BOOL v3 = a2 == a1;
          if (a2 - a1 >= 0)
          {
LABEL_49:
            if (!v3)
            {
              memset(a1, 1, v4);
            }
          }
          else
          {
            __break(1u);
LABEL_18:
            if (a1)
            {
              OUTLINED_FUNCTION_158();
              if (v6 != v7)
              {
                __break(1u);
LABEL_56:
                __break(1u);
LABEL_57:
                __break(1u);
LABEL_58:
                __break(1u);
LABEL_59:
                __break(1u);
LABEL_60:
                __break(1u);
LABEL_61:
                __break(1u);
LABEL_62:
                __break(1u);
                JUMPOUT(0x2575612F8);
              }
LABEL_20:
              if ((unint64_t)(v5 + 1) >= 3)
              {
                OUTLINED_FUNCTION_125_1();
                uint64_t v11 = &unk_2576B69D0;
LABEL_46:
                memset_pattern16(a1, v11, v10);
              }
            }
          }
        }
      }
      return;
  }
}

#error "257561338: call analysis failed (funcsize=6)"

#error "257561528: call analysis failed (funcsize=208)"

uint64_t sub_2575616C0()
{
  return sub_257561344();
}

#error "257561778: call analysis failed (funcsize=151)"

uint64_t sub_257561968()
{
  return sub_2575616D8();
}

unint64_t sub_257561980()
{
  uint64_t v1 = 0x726568746167;
  if (*(unsigned char *)(v0 + 56) != 1) {
    uint64_t v1 = 0x6E5F726568746167;
  }
  if (*(unsigned char *)(v0 + 56)) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_2575619E0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!*(unsigned char *)(v0 + 56))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t inited = swift_initStackObject();
    uint64_t v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    uint64_t v5 = 1936291937;
    unint64_t v6 = 0xE400000000000000;
LABEL_6:
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 48) = v1;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 1;
    goto LABEL_7;
  }
  if (*(unsigned char *)(v0 + 56) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t inited = swift_initStackObject();
    uint64_t v3 = inited;
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    uint64_t v5 = 0x69645F6863746162;
    unint64_t v6 = 0xEA0000000000736DLL;
    goto LABEL_6;
  }
  uint64_t v2 = *(void *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_2576ABB30;
  *(void *)(v3 + 32) = 1936291937;
  *(void *)(v3 + 40) = 0xE400000000000000;
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 64) = 1;
  *(void *)(v3 + 72) = 0x69645F6863746162;
  *(void *)(v3 + 80) = 0xEA0000000000736DLL;
  *(void *)(v3 + 88) = v2;
  *(void *)(v3 + 96) = 0;
  *(unsigned char *)(v3 + 104) = 1;
LABEL_7:
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2576A77E0();
  sub_25746E2DC(v3, v7, v8, v9, v10, v11, v12, v13, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  sub_257470F58();
  return v15;
}

#error "257561CDC: call analysis failed (funcsize=125)"

uint64_t sub_257561D70()
{
  return sub_257561B60();
}

unint64_t sub_257561D88()
{
  uint64_t v1 = 0x72657474616373;
  if (*(unsigned char *)(v0 + 48) != 1) {
    uint64_t v1 = 0x5F72657474616373;
  }
  if (*(unsigned char *)(v0 + 48)) {
    return v1;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_257561DEC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (*(unsigned char *)(v0 + 48) && *(unsigned char *)(v0 + 48) != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB10;
    *(void *)(inited + 32) = 1701080941;
    *(void *)(inited + 40) = 0xE400000000000000;
    uint64_t v6 = *(char *)(v0 + 80);
    uint64_t v7 = qword_2576B72D8[v6];
    uint64_t v8 = qword_2576B7310[v6];
    *(void *)(inited + 48) = v7;
    *(void *)(inited + 56) = v8;
    *(unsigned char *)(inited + 64) = 4;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A0033D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2576ABB30;
    *(void *)(inited + 32) = 1936291937;
    *(void *)(inited + 40) = 0xE400000000000000;
    *(void *)(inited + 48) = v1;
    *(void *)(inited + 56) = 0;
    *(unsigned char *)(inited + 64) = 1;
    *(void *)(inited + 72) = 1701080941;
    *(void *)(inited + 80) = 0xE400000000000000;
    uint64_t v3 = *(char *)(v0 + 80);
    uint64_t v4 = qword_2576B72D8[v3];
    uint64_t v5 = qword_2576B7310[v3];
    *(void *)(inited + 88) = v4;
    *(void *)(inited + 96) = v5;
    *(unsigned char *)(inited + 104) = 4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A000E08);
  sub_2576A77E0();
  sub_25746E2DC(inited, v9, v10, v11, v12, v13, v14, v15, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_257470F58();
  return v17;
}