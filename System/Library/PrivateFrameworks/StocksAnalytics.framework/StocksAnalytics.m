uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t static NewsArticleData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t NewsArticleData.articleID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewsArticleData.articleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NewsArticleData.articleID.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publicationName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NewsArticleData.publicationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NewsArticleData.publicationName.modify())()
{
  return nullsub_1;
}

void NewsArticleData.articleAccessType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *NewsArticleData.articleAccessType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*NewsArticleData.articleAccessType.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publishDate.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t NewsArticleData.publishDate.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*NewsArticleData.publishDate.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.publisherArticleVersion.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t NewsArticleData.publisherArticleVersion.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*NewsArticleData.publisherArticleVersion.modify())()
{
  return nullsub_1;
}

void NewsArticleData.articleType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 64);
}

unsigned char *NewsArticleData.articleType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 64) = *result;
  return result;
}

uint64_t (*NewsArticleData.articleType.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.isVideoInFeedEligible.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t NewsArticleData.isVideoInFeedEligible.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

uint64_t (*NewsArticleData.isVideoInFeedEligible.modify())()
{
  return nullsub_1;
}

void NewsArticleData.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 66);
}

unsigned char *NewsArticleData.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 66) = *result;
  return result;
}

uint64_t (*NewsArticleData.role.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.isAudio.getter()
{
  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t NewsArticleData.isAudio.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 67) = result;
  return result;
}

uint64_t (*NewsArticleData.isAudio.modify())()
{
  return nullsub_1;
}

uint64_t NewsArticleData.init(articleID:publicationName:articleAccessType:publishDate:publisherArticleVersion:articleType:isVideoInFeedEligible:role:isAudio:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, char a11, char *a12, char a13)
{
  char v13 = *a5;
  char v14 = *a10;
  char v15 = *a12;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = v13;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(void *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 64) = v14;
  *(unsigned char *)(a9 + 65) = a11;
  *(unsigned char *)(a9 + 66) = v15;
  *(unsigned char *)(a9 + 67) = a13;
  return result;
}

unint64_t sub_20A9793F8(char a1)
{
  unint64_t result = 0x49656C6369747261;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746163696C627570;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x446873696C627570;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x54656C6369747261;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 1701605234;
      break;
    case 8:
      unint64_t result = 0x6F696475417369;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_20A979540(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A979554()
{
  return sub_20AB86D80();
}

uint64_t sub_20A97959C()
{
  return sub_20AB86D70();
}

uint64_t sub_20A9795C8()
{
  return sub_20AB86D80();
}

unint64_t sub_20A97960C()
{
  return sub_20A9793F8(*v0);
}

uint64_t sub_20A979614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A97AAE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A97963C()
{
  return 0;
}

void sub_20A979648(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_20A979654(uint64_t a1)
{
  unint64_t v2 = sub_20A979A04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A979690(uint64_t a1)
{
  unint64_t v2 = sub_20A979A04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NewsArticleData.encode(to:)(void *a1)
{
  sub_20A979FF0(0, &qword_26AC51880, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388]();
  v7 = (char *)&v12 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v21 = v8;
  int v19 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v18 = *(void *)(v1 + 40);
  int v17 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v16 = *(void *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 64);
  int v14 = *(unsigned __int8 *)(v1 + 65);
  int v15 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 66);
  int v12 = *(unsigned __int8 *)(v1 + 67);
  int v13 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A979A04();
  sub_20AB86DC0();
  char v34 = 0;
  uint64_t v9 = v22;
  sub_20AB86C10();
  if (!v9)
  {
    char v10 = v19;
    char v33 = 1;
    sub_20AB86C10();
    char v32 = v10;
    char v31 = 2;
    sub_20A979A58();
    sub_20AB86C50();
    char v30 = 3;
    sub_20AB86C00();
    char v29 = 4;
    sub_20AB86C70();
    char v28 = v15;
    char v27 = 5;
    sub_20A979AAC();
    sub_20AB86C50();
    char v26 = 6;
    sub_20AB86C20();
    char v25 = v13;
    char v24 = 7;
    sub_20A979B00();
    sub_20AB86C50();
    char v23 = 8;
    sub_20AB86C20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A979A04()
{
  unint64_t result = qword_26AC4F248;
  if (!qword_26AC4F248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F248);
  }
  return result;
}

unint64_t sub_20A979A58()
{
  unint64_t result = qword_26AC4F7E8;
  if (!qword_26AC4F7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7E8);
  }
  return result;
}

unint64_t sub_20A979AAC()
{
  unint64_t result = qword_26AC4EBA0;
  if (!qword_26AC4EBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBA0);
  }
  return result;
}

unint64_t sub_20A979B00()
{
  unint64_t result = qword_26AC51448;
  if (!qword_26AC51448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51448);
  }
  return result;
}

uint64_t NewsArticleData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A979FF0(0, &qword_26AC51788, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A979A04();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v46 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  uint64_t v34 = v10;
  char v45 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v15 = v14;
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  char v43 = 2;
  sub_20A97A054();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  uint64_t v31 = v15;
  LODWORD(v12) = v44;
  char v42 = 3;
  uint64_t v16 = sub_20AB86B30();
  int v28 = v17;
  uint64_t v29 = v16;
  int v30 = v12;
  char v41 = 4;
  uint64_t v19 = sub_20AB86BA0();
  char v39 = 5;
  sub_20A97A0A8();
  sub_20AB86B80();
  int v20 = v40;
  char v38 = 6;
  int v26 = sub_20AB86B50();
  int v27 = v20;
  char v36 = 7;
  sub_20A97A0FC();
  sub_20AB86B80();
  int v25 = v37;
  char v35 = 8;
  LOBYTE(v15) = sub_20AB86B50();
  LOBYTE(v20) = v26 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v21 = v15 & 1;
  uint64_t v22 = v33;
  *(void *)a2 = v34;
  *(void *)(a2 + 8) = v22;
  uint64_t v23 = v31;
  *(void *)(a2 + 16) = v32;
  *(void *)(a2 + 24) = v23;
  *(unsigned char *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = v29;
  *(unsigned char *)(a2 + 48) = v28 & 1;
  *(void *)(a2 + 56) = v19;
  *(unsigned char *)(a2 + 64) = v27;
  *(unsigned char *)(a2 + 65) = v20;
  *(unsigned char *)(a2 + 66) = v25;
  *(unsigned char *)(a2 + 67) = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20A979FF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A979A04();
    unint64_t v7 = a3(a1, &type metadata for NewsArticleData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A97A054()
{
  unint64_t result = qword_26AC4F7F8;
  if (!qword_26AC4F7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7F8);
  }
  return result;
}

unint64_t sub_20A97A0A8()
{
  unint64_t result = qword_26AC4EBB0;
  if (!qword_26AC4EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBB0);
  }
  return result;
}

unint64_t sub_20A97A0FC()
{
  unint64_t result = qword_26AC4E368;
  if (!qword_26AC4E368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E368);
  }
  return result;
}

unint64_t sub_20A97A154()
{
  unint64_t result = qword_26AC4F260;
  if (!qword_26AC4F260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F260);
  }
  return result;
}

unint64_t sub_20A97A1AC()
{
  unint64_t result = qword_26AC4F258;
  if (!qword_26AC4F258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F258);
  }
  return result;
}

uint64_t sub_20A97A200()
{
  return 0;
}

uint64_t sub_20A97A208()
{
  return sub_20AB85A40();
}

uint64_t sub_20A97A220()
{
  return sub_20AB85A50();
}

uint64_t sub_20A97A238()
{
  return sub_20AB85A30();
}

uint64_t sub_20A97A250@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NewsArticleData.init(from:)(a1, a2);
}

uint64_t sub_20A97A268(void *a1)
{
  return NewsArticleData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for NewsArticleData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for NewsArticleData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NewsArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NewsArticleData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  return a1;
}

__n128 __swift_memcpy68_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for NewsArticleData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(unsigned char *)(a1 + 67) = *(unsigned char *)(a2 + 67);
  return a1;
}

uint64_t getEnumTagSinglePayload for NewsArticleData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 68)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NewsArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 68) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 68) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleData()
{
  return &type metadata for NewsArticleData;
}

void type metadata accessor for UIBackgroundTaskIdentifier(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for NewsArticleData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NewsArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A97A6D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_20A97A6F8(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_20A97A700(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NewsArticleData.CodingKeys()
{
  return &type metadata for NewsArticleData.CodingKeys;
}

unint64_t sub_20A97A71C()
{
  unint64_t result = qword_267653818;
  if (!qword_267653818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653818);
  }
  return result;
}

void sub_20A97A770(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_20A97A77C()
{
  return MEMORY[0x270EF1CE0](*v0);
}

uint64_t sub_20A97A784(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x21052A250](a1, &v6);
  uint64_t v4 = v6;
  char v5 = v7;
  if (v7) {
    uint64_t v4 = 0;
  }
  *(void *)a2 = v4;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_20A97A7D8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_20AB867E0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_20A97A830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20AB867F0();
  *a1 = result;
  return result;
}

void *sub_20A97A858@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_20A97A868()
{
  return sub_20AB86AC0();
}

uint64_t sub_20A97A908()
{
  return sub_20A97A970(&qword_267653820);
}

uint64_t sub_20A97A93C()
{
  return sub_20A97A970(&qword_267653828);
}

uint64_t sub_20A97A970(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UIBackgroundTaskIdentifier(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A97A9B4()
{
  return MEMORY[0x270F9E010](*v0);
}

uint64_t sub_20A97A9BC()
{
  return sub_20AB86D70();
}

uint64_t sub_20A97A9E8(uint64_t a1)
{
  return MEMORY[0x270F9FC40](a1, *v1);
}

BOOL sub_20A97A9F0(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20A97AA04()
{
  return sub_20A97A970(&qword_267653830);
}

unint64_t sub_20A97AA3C()
{
  unint64_t result = qword_26AC4E120;
  if (!qword_26AC4E120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E120);
  }
  return result;
}

unint64_t sub_20A97AA94()
{
  unint64_t result = qword_26AC4F250;
  if (!qword_26AC4F250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F250);
  }
  return result;
}

uint64_t sub_20A97AAE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656C6369747261 && a2 == 0xE900000000000044;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746163696C627570 && a2 == 0xEF656D614E6E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7010 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446873696C627570 && a2 == 0xEB00000000657461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA7030 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54656C6369747261 && a2 == 0xEB00000000657079 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7050 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F696475417369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_20A97AEC8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

StocksAnalytics::MediaType_optional __swiftcall MediaType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t MediaType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F65646976;
      break;
    case 2:
      uint64_t result = 0x6567616D69;
      break;
    case 3:
      uint64_t result = 0x7972656C6C6167;
      break;
    case 4:
      uint64_t result = 0x6F69647561;
      break;
    case 5:
      uint64_t result = 7364973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A97B020(unsigned __int8 *a1, char *a2)
{
  return sub_20AA39C48(*a1, *a2);
}

unint64_t sub_20A97B030()
{
  unint64_t result = qword_267653848;
  if (!qword_267653848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653848);
  }
  return result;
}

uint64_t sub_20A97B084()
{
  return sub_20AB4C68C();
}

uint64_t sub_20A97B08C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A97B170()
{
  return sub_20AB4F2EC();
}

StocksAnalytics::MediaType_optional sub_20A97B178(Swift::String *a1)
{
  return MediaType.init(rawValue:)(*a1);
}

void sub_20A97B184(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6F65646976;
      goto LABEL_3;
    case 2:
      *a1 = 0x6567616D69;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x7972656C6C6167;
      a1[1] = 0xE700000000000000;
      break;
    case 4:
      *a1 = 0x6F69647561;
      a1[1] = 0xE500000000000000;
      break;
    case 5:
      *a1 = 7364973;
      a1[1] = 0xE300000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A97B248()
{
  return sub_20AB86750();
}

uint64_t sub_20A97B2A8()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for MediaType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MediaType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A97B454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaType()
{
  return &type metadata for MediaType;
}

unint64_t sub_20A97B48C()
{
  unint64_t result = qword_26AC51650;
  if (!qword_26AC51650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51650);
  }
  return result;
}

uint64_t sub_20A97B4E0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_20AB866E0();
  }
  sub_20A97B5B4();
  uint64_t result = sub_20AB868B0();
  qword_26AC51B60 = result;
  return result;
}

unint64_t sub_20A97B5B4()
{
  unint64_t result = qword_26AC51748;
  if (!qword_26AC51748)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC51748);
  }
  return result;
}

uint64_t sub_20A97B5F4()
{
  uint64_t v0 = sub_20AB86460();
  __swift_allocate_value_buffer(v0, qword_26AC63580);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC63580);
  if (qword_26AC51B68 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26AC51B60;
  return sub_20AB86470();
}

StocksAnalytics::ArticleType_optional __swiftcall ArticleType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t ArticleType.rawValue.getter()
{
  uint64_t v1 = 0x647261646E617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C65527373657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20A97B748(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA391F0(*a1, *a2);
}

unint64_t sub_20A97B758()
{
  unint64_t result = qword_267653850;
  if (!qword_267653850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653850);
  }
  return result;
}

uint64_t sub_20A97B7AC()
{
  return sub_20AB86D80();
}

uint64_t sub_20A97B860()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A97B900()
{
  return sub_20AB86D80();
}

StocksAnalytics::ArticleType_optional sub_20A97B9B0(Swift::String *a1)
{
  return ArticleType.init(rawValue:)(*a1);
}

void sub_20A97B9BC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEB00000000464E41;
  uint64_t v5 = 0x647261646E617473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6C65527373657270;
    unint64_t v4 = 0xEC00000065736165;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A97BA2C()
{
  return sub_20AB86750();
}

uint64_t sub_20A97BA8C()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for ArticleAccessType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A97BC38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleType()
{
  return &type metadata for ArticleType;
}

unint64_t sub_20A97BC70()
{
  unint64_t result = qword_26AC4EBA8;
  if (!qword_26AC4EBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBA8);
  }
  return result;
}

uint64_t sub_20A97BCC4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653858, MEMORY[0x263F24D10]);
}

uint64_t static SymbolDetailsViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653200, MEMORY[0x263F24D18], (uint64_t)qword_267653858, a1);
}

uint64_t static SymbolDetailsViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A97BD2C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653870, MEMORY[0x263F24DC8]);
}

uint64_t sub_20A97BD54(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  uint64_t v8 = *a4;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);

  return v9(v7, v8, v6);
}

uint64_t static SymbolDetailsViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653208, MEMORY[0x263F24DD8], (uint64_t)qword_267653870, a1);
}

uint64_t sub_20A97BE18()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653888);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653888);
  return sub_20AB85D30();
}

uint64_t static SymbolDetailsViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653210, MEMORY[0x263F24DE8], (uint64_t)qword_267653888, a1);
}

uint64_t sub_20A97BE9C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t SymbolDetailsViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

void sub_20A97BF54()
{
  if (!qword_26AC4E6C8)
  {
    sub_20AB85FC0();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F24E70];
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20A97C1C0(&qword_26AC4E6F8, v0);
    unint64_t v1 = sub_20AB85A60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC4E6C8);
    }
  }
}

uint64_t SymbolDetailsViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SymbolDetailsViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CFF4(type metadata accessor for SymbolDetailsViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for SymbolDetailsViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676538C0);
}

void sub_20A97C0F4()
{
  if (!qword_26AC4E6D0)
  {
    sub_20AB85FE0();
    uint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F24E90];
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    sub_20A97C1C0(&qword_26AC4E708, v0);
    unint64_t v1 = sub_20AB85A60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC4E6D0);
    }
  }
}

uint64_t sub_20A97C1C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.symbolPriceChangeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 24);
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A97C378()
{
  unint64_t result = qword_26AC50688;
  if (!qword_26AC50688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50688);
  }
  return result;
}

unint64_t sub_20A97C3CC()
{
  unint64_t result = qword_26AC50680;
  if (!qword_26AC50680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50680);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.symbolPriceChangeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 24);
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.symbolPriceChangeData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 28);
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A97C5C8()
{
  unint64_t result = qword_26AC4EB60;
  if (!qword_26AC4EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB60);
  }
  return result;
}

unint64_t sub_20A97C61C()
{
  unint64_t result = qword_26AC4EB58;
  if (!qword_26AC4EB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB58);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 28);
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.orientationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 32);
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A97C818()
{
  unint64_t result = qword_26AC4F290;
  if (!qword_26AC4F290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F290);
  }
  return result;
}

unint64_t sub_20A97C86C()
{
  unint64_t result = qword_26AC4F288;
  if (!qword_26AC4F288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F288);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.orientationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 32);
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.orientationData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 36);
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A97CA68(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A97CAE4()
{
  unint64_t result = qword_26AC4EC88;
  if (!qword_26AC4EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC88);
  }
  return result;
}

unint64_t sub_20A97CB38()
{
  unint64_t result = qword_26AC4EC80;
  if (!qword_26AC4EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC80);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent(0) + 36);
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SymbolDetailsViewEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t SymbolDetailsViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SymbolDetailsViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104);

  return v15(v13, v2, v14);
}

uint64_t SymbolDetailsViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t sub_20A97CF58@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, v2, v4);
}

uint64_t SymbolDetailsViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CFF4(type metadata accessor for SymbolDetailsViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A97CFF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for SymbolDetailsViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676538D0);
}

uint64_t sub_20A97D0A4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.symbolPriceChangeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SymbolDetailsViewEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SymbolDetailsViewEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SymbolDetailsViewEvent.Model.orientationData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.init(eventData:timedData:symbolPriceChangeData:symbolData:orientationData:viewEndData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, __int16 *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v12 = a3[2];
  uint64_t v13 = a3[3];
  uint64_t v14 = *a4;
  uint64_t v15 = a4[1];
  char v16 = *((unsigned char *)a4 + 16);
  uint64_t v17 = a4[3];
  uint64_t v25 = a4[4];
  __int16 v26 = *a5;
  char v27 = *a6;
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a7, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for SymbolDetailsViewEvent.Model(0);
  uint64_t v20 = a7 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v23 = (void *)(a7 + v19[6]);
  *uint64_t v23 = v10;
  v23[1] = v11;
  v23[2] = v12;
  v23[3] = v13;
  uint64_t v24 = a7 + v19[7];
  *(void *)uint64_t v24 = v14;
  *(void *)(v24 + 8) = v15;
  *(unsigned char *)(v24 + 16) = v16;
  *(void *)(v24 + 24) = v17;
  *(void *)(v24 + 32) = v25;
  *(_WORD *)(a7 + v19[8]) = v26;
  *(unsigned char *)(a7 + v19[9]) = v27;
  return result;
}

unint64_t sub_20A97D33C()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x61446C6F626D7973;
      break;
    case 4:
      unint64_t result = 0x7461746E6569726FLL;
      break;
    case 5:
      unint64_t result = 0x44646E4577656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A97D420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A980A00(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A97D448(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_20A97D454(uint64_t a1)
{
  unint64_t v2 = sub_20A97D814();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A97D490(uint64_t a1)
{
  unint64_t v2 = sub_20A97D814();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolDetailsViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A97DEBC(0, &qword_2676538A8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A97D814();
  sub_20AB86DC0();
  LOBYTE(v21) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SymbolDetailsViewEvent.Model(0);
    LOBYTE(v21) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    uint64_t v12 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    long long v21 = *v11;
    uint64_t v22 = v12;
    uint64_t v23 = v13;
    char v25 = 2;
    sub_20A97C3CC();
    sub_20AB86C50();
    uint64_t v14 = (uint64_t *)(v3 + v10[7]);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    char v17 = *((unsigned char *)v14 + 16);
    uint64_t v19 = v14[3];
    uint64_t v18 = v14[4];
    *(void *)&long long v21 = v15;
    *((void *)&v21 + 1) = v16;
    LOBYTE(v22) = v17;
    uint64_t v23 = v19;
    uint64_t v24 = v18;
    char v25 = 3;
    sub_20A97C61C();
    sub_20AB86C50();
    LOWORD(v21) = *(_WORD *)(v3 + v10[8]);
    char v25 = 4;
    sub_20A97C86C();
    sub_20AB86C50();
    LOBYTE(v21) = *(unsigned char *)(v3 + v10[9]);
    char v25 = 5;
    sub_20A97CB38();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A97D814()
{
  unint64_t result = qword_2676538B0;
  if (!qword_2676538B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676538B0);
  }
  return result;
}

uint64_t SymbolDetailsViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388]();
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388]();
  unsigned __int8 v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A97DEBC(0, &qword_2676538B8, MEMORY[0x263F8E040]);
  uint64_t v39 = v8;
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A97D814();
  char v38 = v10;
  uint64_t v14 = (uint64_t)v40;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v5;
  uint64_t v31 = (int *)v11;
  uint64_t v16 = (uint64_t)v13;
  unsigned __int8 v40 = a1;
  uint64_t v18 = v34;
  uint64_t v17 = v35;
  uint64_t v19 = v36;
  LOBYTE(v41) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v16, v37, v6);
  LOBYTE(v41) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  uint64_t v20 = v15;
  long long v21 = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16 + v31[5], v20, v19);
  char v45 = 2;
  sub_20A97C378();
  sub_20AB86B80();
  uint64_t v22 = v42;
  uint64_t v23 = v43;
  uint64_t v24 = v16 + v21[6];
  *(_OWORD *)uint64_t v24 = v41;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v23;
  char v45 = 3;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v25 = *((void *)&v41 + 1);
  char v26 = v42;
  uint64_t v27 = v43;
  uint64_t v28 = v44;
  uint64_t v29 = v16 + v21[7];
  *(void *)uint64_t v29 = v41;
  *(void *)(v29 + 8) = v25;
  *(unsigned char *)(v29 + 16) = v26;
  *(void *)(v29 + 24) = v27;
  *(void *)(v29 + 32) = v28;
  char v45 = 4;
  sub_20A97C818();
  sub_20AB86B80();
  *(_WORD *)(v16 + v21[8]) = v41;
  char v45 = 5;
  sub_20A97CAE4();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v39);
  *(unsigned char *)(v16 + v21[9]) = v41;
  sub_20A97DF20(v16, v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_20A97DF84(v16);
}

void sub_20A97DEBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A97D814();
    unint64_t v7 = a3(a1, &type metadata for SymbolDetailsViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A97DF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A97DF84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SymbolDetailsViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A97DFE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolDetailsViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A97DFF8(void *a1)
{
  return SymbolDetailsViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A97E010@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653200, MEMORY[0x263F24D18], (uint64_t)qword_267653858, a1);
}

uint64_t sub_20A97E048@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653208, MEMORY[0x263F24DD8], (uint64_t)qword_267653870, a1);
}

uint64_t sub_20A97E080@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653210, MEMORY[0x263F24DE8], (uint64_t)qword_267653888, a1);
}

uint64_t sub_20A97E0B8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_20A97E15C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v4, v15);
}

uint64_t *initializeBufferWithCopyOfBuffer for SymbolDetailsViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    long long v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    char v26 = (char *)a2 + v24;
    sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t destroy for SymbolDetailsViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);

  return v15(v13, v14);
}

uint64_t initializeWithCopy for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t initializeWithTake for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  return a1;
}

uint64_t assignWithTake for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A97F4C4);
}

uint64_t sub_20A97F4C4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_11:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_12;
  }
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_11;
  }
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_11;
  }
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_11;
  }
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[9];

  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for SymbolDetailsViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A97F7E8);
}

uint64_t sub_20A97F7E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  sub_20A97CA68(0, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_11;
  }
  sub_20A97CA68(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_11;
  }
  sub_20A97CA68(0, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_11;
  }
  sub_20A97CA68(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a4[9];

  return v21(v23, a2, a2, v22);
}

void sub_20A97FB04()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A97CA68(319, &qword_2676538A0, (void (*)(void))sub_20A97C378, (void (*)(void))sub_20A97C3CC);
      if (v2 <= 0x3F)
      {
        sub_20A97CA68(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
        if (v3 <= 0x3F)
        {
          sub_20A97CA68(319, (unint64_t *)&qword_26AC4E610, (void (*)(void))sub_20A97C818, (void (*)(void))sub_20A97C86C);
          if (v4 <= 0x3F)
          {
            sub_20A97CA68(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SymbolDetailsViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    uint64_t v16 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    uint64_t v20 = *((void *)v18 + 4);
    *((void *)v17 + 3) = *((void *)v18 + 3);
    *((void *)v17 + 4) = v20;
    uint64_t v21 = a3[9];
    *(_WORD *)((char *)a1 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 32);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  *(void *)(v16 + 32) = v19;
  uint64_t v20 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (unsigned char *)(a1 + v17);
  uint64_t v19 = (unsigned char *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t initializeWithTake for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  long long v13 = *(_OWORD *)(a2 + v11);
  long long v14 = *(_OWORD *)(a2 + v11 + 16);
  uint64_t v15 = (_OWORD *)(a1 + v11);
  *uint64_t v15 = v13;
  v15[1] = v14;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  return a1;
}

uint64_t assignWithTake for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  uint64_t v15 = *(void *)(v13 + 16);
  uint64_t v14 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = v15;
  *(void *)(v12 + 24) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  *(_WORD *)(a1 + a3[8]) = *(_WORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9804C4);
}

uint64_t sub_20A9804C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolDetailsViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9805F0);
}

uint64_t sub_20A9805F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A980704()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SymbolDetailsViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9808C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolDetailsViewEvent.Model.CodingKeys()
{
  return &type metadata for SymbolDetailsViewEvent.Model.CodingKeys;
}

unint64_t sub_20A9808FC()
{
  unint64_t result = qword_2676538E0;
  if (!qword_2676538E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676538E0);
  }
  return result;
}

unint64_t sub_20A980954()
{
  unint64_t result = qword_2676538E8;
  if (!qword_2676538E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676538E8);
  }
  return result;
}

unint64_t sub_20A9809AC()
{
  unint64_t result = qword_2676538F0;
  if (!qword_2676538F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676538F0);
  }
  return result;
}

uint64_t sub_20A980A00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7120 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEF617461446E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t static SessionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SessionData.utcOffset.getter()
{
  return *v0;
}

uint64_t SessionData.utcOffset.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SessionData.utcOffset.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.languageCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.languageCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SessionData.languageCode.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.countryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SessionData.countryCode.modify())()
{
  return nullsub_1;
}

void SessionData.iCloudAccountState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *SessionData.iCloudAccountState.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*SessionData.iCloudAccountState.modify())()
{
  return nullsub_1;
}

void SessionData.startMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *SessionData.startMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*SessionData.startMethod.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.productType.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.productType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*SessionData.productType.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationTreatmentIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationTreatmentIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationTreatmentIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.userSegmentationSegmentSetIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.userSegmentationSegmentSetIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*SessionData.userSegmentationSegmentSetIDs.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.isStoreDemoUser.getter()
{
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  sub_20AB85DB0();
  return v1;
}

uint64_t type metadata accessor for SessionData()
{
  uint64_t result = qword_26AC51F50;
  if (!qword_26AC51F50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A98107C@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t result = sub_20AB85DB0();
  *a1 = v3;
  return result;
}

uint64_t sub_20A9810FC()
{
  return sub_20AB85DC0();
}

uint64_t SessionData.isStoreDemoUser.setter()
{
  return sub_20AB85DC0();
}

uint64_t (*SessionData.isStoreDemoUser.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  v2[4] = sub_20AB85DA0();
  return sub_20A981280;
}

uint64_t SessionData.isPersonalizedAdsEnabled.getter()
{
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  sub_20AB85DB0();
  return v1;
}

uint64_t sub_20A9812F0@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t result = sub_20AB85DB0();
  *a1 = v3;
  return result;
}

uint64_t sub_20A981370()
{
  return sub_20AB85DC0();
}

uint64_t SessionData.isPersonalizedAdsEnabled.setter()
{
  return sub_20AB85DC0();
}

uint64_t (*SessionData.isPersonalizedAdsEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SessionData();
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  v2[4] = sub_20AB85DA0();
  return sub_20A981280;
}

void sub_20A9814F4(void *a1)
{
  unsigned __int8 v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t SessionData.appIntentType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SessionData();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t SessionData.appIntentType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for SessionData();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*SessionData.appIntentType.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.init(utcOffset:languageCode:countryCode:iCloudAccountState:startMethod:productType:userSegmentationTreatmentIDs:userSegmentationSegmentSetIDs:isStoreDemoUser:isPersonalizedAdsEnabled:appIntentType:)@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, uint64_t a12, char *a13)
{
  char v16 = *a6;
  char v17 = *a7;
  char v26 = *a13;
  uint64_t v18 = type metadata accessor for SessionData();
  uint64_t v19 = MEMORY[0x263F8D4F8];
  sub_20AB85D90();
  sub_20AB85D90();
  uint64_t v20 = *(int *)(v18 + 56);
  *(unsigned char *)(a9 + v20) = 5;
  *(_DWORD *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 40) = v16;
  *(unsigned char *)(a9 + 41) = v17;
  *(void *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a10;
  *(void *)(a9 + 72) = a11;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, v19, MEMORY[0x263F24DF8]);
  sub_20AB85DC0();
  uint64_t result = sub_20AB85DC0();
  *(unsigned char *)(a9 + v20) = v26;
  return result;
}

unint64_t sub_20A981774(char a1)
{
  unint64_t result = 0x657366664F637475;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x65676175676E616CLL;
      break;
    case 2:
      unint64_t result = 0x437972746E756F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x74654D7472617473;
      break;
    case 5:
      unint64_t result = 0x54746375646F7270;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0x4465726F74537369;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0x6E65746E49707061;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A981918()
{
  return sub_20A981774(*v0);
}

uint64_t sub_20A981920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A983804(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A981948(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_20A981954(uint64_t a1)
{
  unint64_t v2 = sub_20A981DF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A981990(uint64_t a1)
{
  unint64_t v2 = sub_20A981DF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SessionData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9826F0(0, &qword_26AC51830, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A981DF8();
  sub_20AB86DC0();
  LOBYTE(v12) = 0;
  sub_20AB86C60();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_20AB86BC0();
    LOBYTE(v12) = 2;
    sub_20AB86BC0();
    LOBYTE(v12) = *(unsigned char *)(v3 + 40);
    char v13 = 3;
    sub_20A981E4C();
    sub_20AB86C50();
    LOBYTE(v12) = *(unsigned char *)(v3 + 41);
    char v13 = 4;
    sub_20A981EA0();
    sub_20AB86C50();
    LOBYTE(v12) = 5;
    sub_20AB86C10();
    uint64_t v12 = *(void *)(v3 + 64);
    char v13 = 6;
    sub_20A981EF4(0, (unint64_t *)&qword_26AC51708, MEMORY[0x263F8E5C0], MEMORY[0x263F8D488]);
    sub_20A9827FC(&qword_26AC51710);
    sub_20AB86C50();
    uint64_t v12 = *(void *)(v3 + 72);
    char v13 = 7;
    sub_20A981EF4(0, (unint64_t *)&qword_26AC516F0, MEMORY[0x263F8E548], MEMORY[0x263F8D488]);
    sub_20A982880(&qword_26AC516F8);
    sub_20AB86C50();
    uint64_t v10 = type metadata accessor for SessionData();
    LOBYTE(v12) = 8;
    sub_20AB86BB0();
    LOBYTE(v12) = 9;
    sub_20AB86BB0();
    LOBYTE(v12) = *(unsigned char *)(v3 + *(int *)(v10 + 56));
    char v13 = 10;
    sub_20A981F40();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A981DF8()
{
  unint64_t result = qword_26AC4EC28;
  if (!qword_26AC4EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC28);
  }
  return result;
}

unint64_t sub_20A981E4C()
{
  unint64_t result = qword_26AC4FBA8;
  if (!qword_26AC4FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FBA8);
  }
  return result;
}

unint64_t sub_20A981EA0()
{
  unint64_t result = qword_26AC4EC50;
  if (!qword_26AC4EC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC50);
  }
  return result;
}

void sub_20A981EF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_20A981F40()
{
  unint64_t result = qword_26AC51B70;
  if (!qword_26AC51B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51B70);
  }
  return result;
}

uint64_t SessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v41 = v3;
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  sub_20A9826F0(0, &qword_26AC51768, MEMORY[0x263F8E040]);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for SessionData();
  char v13 = (int *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 8) = 0u;
  char v16 = &v15[v13[14]];
  LOBYTE(v42) = 2;
  unsigned __int8 v40 = v16;
  sub_20AB85D90();
  char v17 = &v15[v13[15]];
  LOBYTE(v42) = 2;
  char v38 = v17;
  sub_20AB85D90();
  uint64_t v18 = v13[16];
  v15[v18] = 5;
  uint64_t v19 = a1[3];
  unsigned __int8 v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_20A981DF8();
  uint64_t v20 = v36;
  sub_20AB86DA0();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v39 + 8);
    uint64_t v26 = v41;
    v25(v40, v41);
    return ((uint64_t (*)(char *, uint64_t))v25)(v38, v26);
  }
  else
  {
    uint64_t v32 = v18;
    uint64_t v21 = v8;
    uint64_t v36 = v6;
    uint64_t v22 = v34;
    LOBYTE(v42) = 0;
    *(_DWORD *)uint64_t v15 = sub_20AB86B90();
    LOBYTE(v42) = 1;
    *((void *)v15 + 1) = sub_20AB86AF0();
    *((void *)v15 + 2) = v23;
    LOBYTE(v42) = 2;
    *((void *)v15 + 3) = sub_20AB86AF0();
    *((void *)v15 + 4) = v24;
    char v43 = 3;
    sub_20A982754();
    sub_20AB86B80();
    v15[40] = v42;
    char v43 = 4;
    sub_20A9827A8();
    sub_20AB86B80();
    v15[41] = v42;
    LOBYTE(v42) = 5;
    *((void *)v15 + 6) = sub_20AB86B40();
    *((void *)v15 + 7) = v27;
    sub_20A981EF4(0, (unint64_t *)&qword_26AC51708, MEMORY[0x263F8E5C0], MEMORY[0x263F8D488]);
    char v43 = 6;
    sub_20A9827FC(&qword_26AC51718);
    sub_20AB86B80();
    *((void *)v15 + 8) = v42;
    sub_20A981EF4(0, (unint64_t *)&qword_26AC516F0, MEMORY[0x263F8E548], MEMORY[0x263F8D488]);
    char v43 = 7;
    sub_20A982880(&qword_26AC51700);
    sub_20AB86B80();
    *((void *)v15 + 9) = v42;
    LOBYTE(v42) = 8;
    sub_20AB86AE0();
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v39 + 40);
    v28(v40, v21, v41);
    LOBYTE(v42) = 9;
    sub_20AB86AE0();
    v28(v38, v36, v41);
    char v43 = 10;
    sub_20A982904();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v35);
    uint64_t v29 = v33;
    v15[v32] = v42;
    sub_20A982958((uint64_t)v15, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return sub_20A9829BC((uint64_t)v15);
  }
}

void sub_20A9826F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A981DF8();
    unint64_t v7 = a3(a1, &type metadata for SessionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A982754()
{
  unint64_t result = qword_26AC4FBB8;
  if (!qword_26AC4FBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FBB8);
  }
  return result;
}

unint64_t sub_20A9827A8()
{
  unint64_t result = qword_26AC4EC60;
  if (!qword_26AC4EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC60);
  }
  return result;
}

uint64_t sub_20A9827FC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A981EF4(255, (unint64_t *)&qword_26AC51708, MEMORY[0x263F8E5C0], MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A982880(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A981EF4(255, (unint64_t *)&qword_26AC516F0, MEMORY[0x263F8E548], MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A982904()
{
  unint64_t result = qword_2676538F8;
  if (!qword_2676538F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676538F8);
  }
  return result;
}

uint64_t sub_20A982958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9829BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SessionData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A982A18()
{
  return sub_20A982A80(&qword_26AC4E0E8);
}

uint64_t sub_20A982A4C()
{
  return sub_20A982A80(&qword_26AC4EC48);
}

uint64_t sub_20A982A80(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SessionData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A982AC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionData.init(from:)(a1, a2);
}

uint64_t sub_20A982ADC(void *a1)
{
  return SessionData.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for SessionData(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    *(_WORD *)(a1 + 40) = *((_WORD *)a2 + 20);
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = a3[12];
    uint64_t v18 = (char *)(a1 + v10);
    uint64_t v16 = a2[9];
    uint64_t v17 = (uint64_t)a2 + v10;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v16;
    sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
    uint64_t v12 = v11;
    char v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v18, v17, v12);
    v13(&v4[a3[13]], (uint64_t)a2 + a3[13], v12);
    v4[a3[14]] = *((unsigned char *)a2 + a3[14]);
  }
  return v4;
}

uint64_t destroy for SessionData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v6 = v5;
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v5 - 8), v4, v5);
  uint64_t v7 = a1 + *(int *)(a2 + 52);

  return v9(v7, v6);
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = a3[12];
  uint64_t v14 = a2 + v9;
  uint64_t v15 = a1 + v9;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v15, v14, v11);
  v12(a1 + a3[13], a2 + a3[13], v11);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[12];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v11(v7, v8, v9);
  v11(a1 + a3[13], a2 + a3[13], v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  uint64_t v7 = a3[12];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v12(v8, v9, v10);
  v12(a1 + a3[13], a2 + a3[13], v11);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[12];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v14(v10, v11, v12);
  v14(a1 + a3[13], a2 + a3[13], v13);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9832B0);
}

uint64_t sub_20A9832B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SessionData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A983398);
}

uint64_t sub_20A983398(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 56) = (a2 - 1);
  }
  else
  {
    sub_20A981EF4(0, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_20A983464()
{
  sub_20A981EF4(319, (unint64_t *)&qword_26AC52078, MEMORY[0x263F8D4F8], MEMORY[0x263F24DF8]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for SessionData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9836C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionData.CodingKeys()
{
  return &type metadata for SessionData.CodingKeys;
}

unint64_t sub_20A983700()
{
  unint64_t result = qword_267653900;
  if (!qword_267653900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653900);
  }
  return result;
}

unint64_t sub_20A983758()
{
  unint64_t result = qword_26AC4EC38;
  if (!qword_26AC4EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC38);
  }
  return result;
}

unint64_t sub_20A9837B0()
{
  unint64_t result = qword_26AC4EC30;
  if (!qword_26AC4EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC30);
  }
  return result;
}

uint64_t sub_20A983804(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657366664F637475 && a2 == 0xE900000000000074;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xEC00000065646F43 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA7140 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74654D7472617473 && a2 == 0xEB00000000646F68 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x54746375646F7270 && a2 == 0xEB00000000657079 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000020ABA7160 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000020ABA7180 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4465726F74537369 && a2 == 0xEF726573556F6D65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000020ABA71A0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E65746E49707061 && a2 == 0xED00006570795474)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_20A983CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A983DD8(a3, &v5);
  sub_20AB85B30();
  sub_20A98452C(&v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A983DD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  v83 = a2;
  uint64_t v3 = sub_20AB86370();
  uint64_t v98 = *(void *)(v3 - 8);
  uint64_t v99 = v3;
  MEMORY[0x270FA5388](v3);
  v96 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85140();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v101 = v5;
  uint64_t v102 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  v85 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v100 = (char *)&v78 - v9;
  uint64_t v10 = sub_20AB86190();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v93 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v92 = (char *)&v78 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v89 = (char *)&v78 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v78 - v18;
  uint64_t v20 = sub_20AB861C0();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v90 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v88 = (char *)&v78 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  v82 = (char *)&v78 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  int v30 = (char *)&v78 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v78 - v31;
  sub_20A984980(0, (unint64_t *)&qword_26AC4E740, MEMORY[0x263F7D2D0], MEMORY[0x263F7CEB0]);
  uint64_t v34 = v33;
  uint64_t v97 = a1;
  sub_20AB86290();
  sub_20AB861B0();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v91 = v20;
  v86 = v35;
  v35(v32, v20);
  uint64_t v36 = sub_20AB861A0();
  uint64_t v38 = v37;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v94 = v11 + 8;
  uint64_t v95 = v10;
  v39(v19, v10);
  v87 = v39;
  if (v38)
  {
    if (v36 == 0x746567646977 && v38 == 0xE600000000000000)
    {
      unint64_t v79 = 0xD000000000000017;
      swift_bridgeObjectRelease();
LABEL_7:
      unint64_t v41 = 0x800000020ABA7230;
      goto LABEL_9;
    }
    char v40 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v40)
    {
      unint64_t v79 = 0xD000000000000017;
      goto LABEL_7;
    }
  }
  unint64_t v79 = 0;
  unint64_t v41 = 0xE000000000000000;
LABEL_9:
  unint64_t v80 = v41;
  uint64_t v42 = v102;
  char v43 = v82;
  sub_20AB86290();
  uint64_t v44 = v85;
  sub_20AB86180();
  char v45 = v30;
  uint64_t v46 = v91;
  uint64_t v47 = v34;
  v48 = v86;
  v86(v45, v91);
  sub_20AB85100();
  v49 = *(char **)(v42 + 8);
  uint64_t v102 = v42 + 8;
  v85 = v49;
  ((void (*)(char *, uint64_t))v49)(v44, v101);
  uint64_t v84 = v47;
  sub_20AB86290();
  v50 = v89;
  sub_20AB861B0();
  v48(v43, v46);
  v82 = (char *)sub_20AB861A0();
  uint64_t v81 = v51;
  v52 = v50;
  uint64_t v53 = v95;
  v54 = v87;
  v87(v52, v95);
  v55 = v88;
  sub_20AB86290();
  v56 = v92;
  sub_20AB861B0();
  v48(v55, v46);
  v88 = (char *)sub_20AB861A0();
  v89 = v57;
  v54(v56, v53);
  v58 = v90;
  sub_20AB86290();
  v59 = v93;
  sub_20AB861B0();
  v48(v58, v46);
  uint64_t v60 = sub_20AB861A0();
  uint64_t v62 = v61;
  v54(v59, v53);
  v63 = v96;
  sub_20AB86280();
  uint64_t v64 = sub_20AB86360();
  unint64_t v66 = v65;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v99);
  if (v66)
  {
    swift_bridgeObjectRelease();
    unint64_t v67 = v64;
    v68 = v83;
  }
  else
  {
    v68 = v83;
    unint64_t v67 = v79;
    unint64_t v66 = v80;
  }
  v69 = (uint64_t (*)(char *, uint64_t))v85;
  v70 = v82;
  uint64_t v71 = v81;
  v72 = v88;
  v73 = v100;
  uint64_t v74 = sub_20AB85110();
  void *v68 = v70;
  v68[1] = v71;
  v75 = v89;
  v68[2] = v72;
  v68[3] = v75;
  v68[4] = v60;
  v68[5] = v62;
  v68[6] = v67;
  v68[7] = v66;
  v68[8] = v74;
  v68[9] = v76;
  return v69(v73, v101);
}

uint64_t sub_20A98452C(uint64_t *a1, uint64_t a2)
{
  uint64_t v37 = a2;
  sub_20A9848D0();
  uint64_t v38 = v3;
  uint64_t v36 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = a1[1];
  uint64_t v31 = *a1;
  uint64_t v25 = v5;
  uint64_t v6 = a1[3];
  uint64_t v30 = a1[2];
  uint64_t v26 = v6;
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[7];
  uint64_t v28 = a1[6];
  uint64_t v29 = v7;
  uint64_t v10 = a1[9];
  uint64_t v27 = a1[8];
  uint64_t v39 = v31;
  uint64_t v40 = v5;
  uint64_t v41 = v30;
  uint64_t v42 = v6;
  uint64_t v43 = v7;
  uint64_t v44 = v8;
  uint64_t v45 = v28;
  uint64_t v46 = v9;
  uint64_t v47 = v27;
  uint64_t v48 = v10;
  sub_20A984980(0, (unint64_t *)&qword_26AC51990, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v33 = v11;
  uint64_t v12 = sub_20AB85A70();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v34 = *(void *)(v13 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v32 = v14 | 7;
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20AB88020;
  unsigned int v24 = *MEMORY[0x263F24D40];
  uint64_t v17 = *(void (**)(uint64_t))(v13 + 104);
  v17(v16 + v15);
  sub_20A98492C();
  v23[1] = 0x800000020ABA71C0;
  sub_20AB85F60();
  swift_bridgeObjectRelease();
  uint64_t v39 = v31;
  uint64_t v40 = v25;
  uint64_t v41 = v30;
  uint64_t v42 = v26;
  uint64_t v43 = v29;
  uint64_t v44 = v8;
  uint64_t v45 = v28;
  uint64_t v46 = v9;
  uint64_t v47 = v27;
  uint64_t v48 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v35;
  sub_20AB85910();
  uint64_t v19 = v34;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_20AB88030;
  uint64_t v21 = v20 + v15;
  ((void (*)(uint64_t, void, uint64_t))v17)(v20 + v15, v24, v12);
  ((void (*)(uint64_t, void, uint64_t))v17)(v21 + v19, *MEMORY[0x263F24D48], v12);
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v18, v38);
}

void sub_20A9848D0()
{
  if (!qword_26AC4E538)
  {
    sub_20A98492C();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E538);
    }
  }
}

unint64_t sub_20A98492C()
{
  unint64_t result = qword_26AC4ED10;
  if (!qword_26AC4ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ED10);
  }
  return result;
}

void sub_20A984980(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t BundleSubscriptionStatus.feldsparValue.getter()
{
  return *v0;
}

uint64_t sub_20A9849EC()
{
  uint64_t v0 = sub_20AB86480();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v3 = sub_20A984C44;
  v3[1] = 0;
  uint64_t v4 = *MEMORY[0x263F7D230];
  uint64_t v5 = *(void (**)(void *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_20AB864A0();
  uint64_t v6 = *(void (**)(void *, uint64_t))(v1 + 8);
  v6(v3, v0);
  *uint64_t v3 = sub_20A984C50;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_20AB864A0();
  v6(v3, v0);
  *uint64_t v3 = sub_20A984C5C;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_20AB864A0();
  v6(v3, v0);
  *uint64_t v3 = sub_20A984CC8;
  v3[1] = 0;
  v5(v3, v4, v0);
  sub_20AB864A0();
  return ((uint64_t (*)(void *, uint64_t))v6)(v3, v0);
}

void sub_20A984C44()
{
}

void sub_20A984C50()
{
}

void sub_20A984C5C()
{
}

void sub_20A984C68(SEL *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7D0C0]), sel_init);
  [v2 *a1];
}

void sub_20A984CC8()
{
}

uint64_t sub_20A984CDC()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for DebugAssembly()
{
  return self;
}

uint64_t sub_20A984D10()
{
  uint64_t v0 = sub_20AB860E0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB86140();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20AB864B0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CDE0], v0);
  sub_20AB86390();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t Tracker.realtimeSubmit<A>(_:contentType:)()
{
  sub_20AB85F20();
  sub_20AB85F80();

  return MEMORY[0x270F0C6A0](0x656D69746C616572, 0xE800000000000000);
}

uint64_t AccessTracker.realtimeSubmit<A>(_:contentType:)()
{
  sub_20AB859B0();
  memset(v1, 0, sizeof(v1));
  sub_20AB85A00();
  sub_20A984F98((uint64_t)v1);
  return sub_20AB859C0();
}

uint64_t sub_20A984F98(uint64_t a1)
{
  sub_20A984FF4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A984FF4()
{
  if (!qword_26AC519F0)
  {
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC519F0);
    }
  }
}

StocksAnalytics::EndReason_optional __swiftcall EndReason.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t EndReason.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676B636142707061;
      break;
    case 2:
      uint64_t result = 0x6976614E72657375;
      break;
    case 3:
      uint64_t result = 0x6873617263;
      break;
    case 4:
      uint64_t result = 0x6975516563726F66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A985170(unsigned __int8 *a1, char *a2)
{
  return sub_20AA33C5C(*a1, *a2);
}

unint64_t sub_20A985180()
{
  unint64_t result = qword_267653908;
  if (!qword_267653908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653908);
  }
  return result;
}

uint64_t sub_20A9851D4()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9852E4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9853DC()
{
  return sub_20AB86D80();
}

StocksAnalytics::EndReason_optional sub_20A9854E8(Swift::String *a1)
{
  return EndReason.init(rawValue:)(*a1);
}

void sub_20A9854F4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000646E756F72;
      uint64_t v3 = 0x676B636142707061;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "userNavigation");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      *(void *)a1 = 0x6873617263;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 4:
      *(void *)a1 = 0x6975516563726F66;
      *(void *)(a1 + 8) = 0xE900000000000074;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20A9855C8()
{
  return sub_20AB86750();
}

uint64_t sub_20A985628()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for InterfaceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EndReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9857D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndReason()
{
  return &type metadata for EndReason;
}

unint64_t sub_20A98580C()
{
  unint64_t result = qword_26AC515C8;
  if (!qword_26AC515C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515C8);
  }
  return result;
}

StocksAnalytics::AudioEngagementStatus_optional __swiftcall AudioEngagementStatus.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t AudioEngagementStatus.rawValue.getter()
{
  uint64_t v1 = 0x64656761676E65;
  if (*v0 != 1) {
    uint64_t v1 = 0x6761676E45746F6ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20A98591C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA35F88(*a1, *a2);
}

unint64_t sub_20A98592C()
{
  unint64_t result = qword_267653910;
  if (!qword_267653910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653910);
  }
  return result;
}

uint64_t sub_20A985980()
{
  return sub_20AB86D80();
}

uint64_t sub_20A985A28()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A985ABC()
{
  return sub_20AB86D80();
}

StocksAnalytics::AudioEngagementStatus_optional sub_20A985B60(Swift::String *a1)
{
  return AudioEngagementStatus.init(rawValue:)(*a1);
}

void sub_20A985B6C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x64656761676E65;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6761676E45746F6ELL;
    unint64_t v4 = 0xEA00000000006465;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A985BD0()
{
  return sub_20AB86750();
}

uint64_t sub_20A985C30()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A985D4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementStatus()
{
  return &type metadata for AudioEngagementStatus;
}

unint64_t sub_20A985D84()
{
  unint64_t result = qword_267653918;
  if (!qword_267653918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653918);
  }
  return result;
}

uint64_t sub_20A985DD8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653920, MEMORY[0x263F24D10]);
}

uint64_t static AudioEngagementCompletedEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653218, MEMORY[0x263F24D18], (uint64_t)qword_267653920, a1);
}

uint64_t static AudioEngagementCompletedEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A985E40(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653938, MEMORY[0x263F24DC8]);
}

uint64_t static AudioEngagementCompletedEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653220, MEMORY[0x263F24DD8], (uint64_t)qword_267653938, a1);
}

uint64_t sub_20A985EA0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653950);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653950);
  return sub_20AB85D30();
}

uint64_t static AudioEngagementCompletedEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653228, MEMORY[0x263F24DE8], (uint64_t)qword_267653950, a1);
}

uint64_t AudioEngagementCompletedEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t sub_20A985F3C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20AB85FC0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AudioEngagementCompletedEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676539C8);
}

uint64_t AudioEngagementCompletedEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 20);
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A986280()
{
  unint64_t result = qword_26AC4EBD8;
  if (!qword_26AC4EBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBD8);
  }
  return result;
}

unint64_t sub_20A9862D4()
{
  unint64_t result = qword_26AC4EBD0;
  if (!qword_26AC4EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBD0);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 24);
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9864D0()
{
  unint64_t result = qword_26AC515F8;
  if (!qword_26AC515F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515F8);
  }
  return result;
}

unint64_t sub_20A986524()
{
  unint64_t result = qword_26AC515F0;
  if (!qword_26AC515F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515F0);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 28);
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A986720()
{
  unint64_t result = qword_26AC514D8;
  if (!qword_26AC514D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514D8);
  }
  return result;
}

unint64_t sub_20A986774()
{
  unint64_t result = qword_26AC514D0;
  if (!qword_26AC514D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514D0);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 32);
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A986970()
{
  unint64_t result = qword_267653970;
  if (!qword_267653970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653970);
  }
  return result;
}

unint64_t sub_20A9869C4()
{
  unint64_t result = qword_267653978;
  if (!qword_267653978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653978);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.trackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 36);
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.trackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A986BC0()
{
  unint64_t result = qword_26AC4E2D0;
  if (!qword_26AC4E2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E2D0);
  }
  return result;
}

unint64_t sub_20A986C14()
{
  unint64_t result = qword_26AC51550;
  if (!qword_26AC51550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51550);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 40);
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A986E10()
{
  unint64_t result = qword_267653988;
  if (!qword_267653988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653988);
  }
  return result;
}

unint64_t sub_20A986E64()
{
  unint64_t result = qword_267653990;
  if (!qword_267653990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653990);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 44);
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.audioEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A987060()
{
  unint64_t result = qword_26AC51618;
  if (!qword_26AC51618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51618);
  }
  return result;
}

unint64_t sub_20A9870B4()
{
  unint64_t result = qword_26AC51610;
  if (!qword_26AC51610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51610);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 48);
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9872B0()
{
  unint64_t result = qword_2676539A0;
  if (!qword_2676539A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539A0);
  }
  return result;
}

unint64_t sub_20A987304()
{
  unint64_t result = qword_2676539A8;
  if (!qword_2676539A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539A8);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 52);
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.playbackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A987500(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A98757C()
{
  unint64_t result = qword_26AC4EF80;
  if (!qword_26AC4EF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF80);
  }
  return result;
}

unint64_t sub_20A9875D0()
{
  unint64_t result = qword_26AC4EF78;
  if (!qword_26AC4EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF78);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent(0) + 56);
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngagementCompletedEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementCompletedEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioEngagementCompletedEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v10, v25);
}

uint64_t AudioEngagementCompletedEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AudioEngagementCompletedEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for AudioEngagementCompletedEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676539D8);
}

uint64_t AudioEngagementCompletedEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t sub_20A987E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 36));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 44);
  char v4 = *(unsigned char *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 20);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  __int16 v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngagementCompletedEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

float AudioEngagementCompletedEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngagementCompletedEvent.Model(0) + 52));
  *a1 = result;
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 AudioEngagementCompletedEvent.Model.init(eventData:newsArticleData:channelData:groupData:feedData:trackData:viewData:audioEngagementData:issueData:playbackData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, __n128 *a5@<X4>, int *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, int *a11, char *a12)
{
  long long v36 = *a2;
  uint64_t v14 = *((void *)a2 + 2);
  uint64_t v15 = *((void *)a2 + 3);
  char v16 = *((unsigned char *)a2 + 32);
  uint64_t v17 = *((void *)a2 + 5);
  char v18 = *((unsigned char *)a2 + 48);
  uint64_t v35 = *((void *)a2 + 7);
  char v34 = *((unsigned char *)a2 + 64);
  char v19 = *((unsigned char *)a2 + 65);
  char v20 = *((unsigned char *)a2 + 66);
  char v21 = *((unsigned char *)a2 + 67);
  long long v41 = *a3;
  uint64_t v39 = *((void *)a3 + 3);
  uint64_t v40 = *((void *)a3 + 2);
  char v37 = *((unsigned char *)a3 + 33);
  char v38 = *((unsigned char *)a3 + 32);
  long long v44 = a4[1];
  long long v45 = *a4;
  uint64_t v42 = *((void *)a4 + 5);
  uint64_t v43 = *((void *)a4 + 4);
  __n128 v47 = *a5;
  unint64_t v46 = a5[1].n128_u64[0];
  char v51 = *((unsigned char *)a6 + 4);
  int v52 = *a6;
  uint64_t v54 = a7[1];
  uint64_t v55 = *a7;
  __int16 v53 = *((_WORD *)a7 + 8);
  uint64_t v60 = a8[1];
  uint64_t v61 = *a8;
  int v58 = *((_DWORD *)a8 + 5);
  char v59 = *((unsigned char *)a8 + 16);
  int v22 = *a11;
  uint64_t v48 = a8[3];
  uint64_t v49 = a8[4];
  __int16 v50 = *((_WORD *)a8 + 20);
  uint64_t v56 = *a10;
  uint64_t v57 = a10[1];
  char v62 = *a12;
  uint64_t v23 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a9, a1, v23);
  uint64_t v24 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  uint64_t v25 = a9 + v24[5];
  *(void *)(v25 + 16) = v14;
  *(void *)(v25 + 24) = v15;
  *(unsigned char *)(v25 + 32) = v16;
  *(void *)(v25 + 40) = v17;
  *(_OWORD *)uint64_t v25 = v36;
  *(unsigned char *)(v25 + 48) = v18;
  *(void *)(v25 + 56) = v35;
  *(unsigned char *)(v25 + 64) = v34;
  *(unsigned char *)(v25 + 65) = v19;
  *(unsigned char *)(v25 + 66) = v20;
  *(unsigned char *)(v25 + 67) = v21;
  uint64_t v26 = a9 + v24[6];
  *(_OWORD *)uint64_t v26 = v41;
  *(void *)(v26 + 16) = v40;
  *(void *)(v26 + 24) = v39;
  *(unsigned char *)(v26 + 32) = v38;
  *(unsigned char *)(v26 + 33) = v37;
  uint64_t v27 = a9 + v24[7];
  *(_OWORD *)uint64_t v27 = v45;
  *(_OWORD *)(v27 + 16) = v44;
  *(void *)(v27 + 32) = v43;
  *(void *)(v27 + 40) = v42;
  uint64_t v28 = (__n128 *)(a9 + v24[8]);
  __n128 result = v47;
  *uint64_t v28 = v47;
  v28[1].n128_u64[0] = v46;
  uint64_t v30 = a9 + v24[9];
  *(_DWORD *)uint64_t v30 = v52;
  *(unsigned char *)(v30 + 4) = v51;
  uint64_t v31 = a9 + v24[10];
  *(void *)uint64_t v31 = v55;
  *(void *)(v31 + 8) = v54;
  *(_WORD *)(v31 + 16) = v53;
  uint64_t v32 = a9 + v24[11];
  *(void *)uint64_t v32 = v61;
  *(void *)(v32 + 8) = v60;
  *(unsigned char *)(v32 + 16) = v59;
  *(_DWORD *)(v32 + 20) = v58;
  *(void *)(v32 + 24) = v48;
  *(void *)(v32 + 32) = v49;
  *(_WORD *)(v32 + 40) = v50;
  uint64_t v33 = (void *)(a9 + v24[12]);
  *uint64_t v33 = v56;
  v33[1] = v57;
  *(_DWORD *)(a9 + v24[13]) = v22;
  *(unsigned char *)(a9 + v24[14]) = v62;
  return result;
}

uint64_t sub_20A988310(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x7461446B63617274;
      break;
    case 6:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 7:
    case 10:
      uint64_t result = 0xD000000000000013;
      break;
    case 8:
      uint64_t result = 0x7461446575737369;
      break;
    case 9:
      uint64_t result = 0x6B63616279616C70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A98846C()
{
  return sub_20A988310(*v0);
}

uint64_t sub_20A988474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A98DE54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A98849C(uint64_t a1)
{
  unint64_t v2 = sub_20A988A04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9884D8(uint64_t a1)
{
  unint64_t v2 = sub_20A988A04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioEngagementCompletedEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A989318(0, &qword_2676539B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v42 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A988A04();
  sub_20AB86DC0();
  LOBYTE(v44) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v44 = v12;
    *(void *)&long long v45 = v13;
    *((void *)&v45 + 1) = v14;
    LOBYTE(v46) = v15;
    *((void *)&v46 + 1) = v16;
    char v47 = v17;
    uint64_t v48 = v18;
    char v49 = v19;
    char v50 = v20;
    char v51 = v21;
    char v52 = (char)v11;
    char v43 = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    int v22 = (long long *)(v3 + v10[6]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v44 = v23;
    *(void *)&long long v45 = v24;
    *((void *)&v45 + 1) = v25;
    LOBYTE(v46) = v26;
    BYTE1(v46) = (_BYTE)v22;
    char v43 = 2;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v27 = (long long *)(v3 + v10[7]);
    long long v28 = v27[1];
    long long v44 = *v27;
    long long v45 = v28;
    long long v46 = v27[2];
    char v43 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v29 = (long long *)(v3 + v10[8]);
    uint64_t v30 = *((void *)v29 + 2);
    long long v44 = *v29;
    *(void *)&long long v45 = v30;
    char v43 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v31 = (int *)(v3 + v10[9]);
    int v32 = *v31;
    LOBYTE(v31) = *((unsigned char *)v31 + 4);
    LODWORD(v44) = v32;
    BYTE4(v44) = (_BYTE)v31;
    char v43 = 5;
    sub_20A9869C4();
    sub_20AB86C50();
    uint64_t v33 = (long long *)(v3 + v10[10]);
    __int16 v34 = *((_WORD *)v33 + 8);
    long long v44 = *v33;
    LOWORD(v45) = v34;
    char v43 = 6;
    sub_20A986C14();
    sub_20AB86BE0();
    uint64_t v35 = (long long *)(v3 + v10[11]);
    char v36 = *((unsigned char *)v35 + 16);
    int v37 = *((_DWORD *)v35 + 5);
    uint64_t v38 = *((void *)v35 + 3);
    uint64_t v39 = *((void *)v35 + 4);
    __int16 v40 = *((_WORD *)v35 + 20);
    long long v44 = *v35;
    LOBYTE(v45) = v36;
    DWORD1(v45) = v37;
    *((void *)&v45 + 1) = v38;
    *(void *)&long long v46 = v39;
    WORD4(v46) = v40;
    char v43 = 7;
    sub_20A986E64();
    sub_20AB86C50();
    long long v44 = *(_OWORD *)(v3 + v10[12]);
    char v43 = 8;
    sub_20A9870B4();
    sub_20AB86BE0();
    LODWORD(v44) = *(_DWORD *)(v3 + v10[13]);
    char v43 = 9;
    sub_20A987304();
    sub_20AB86C50();
    LOBYTE(v44) = *(unsigned char *)(v3 + v10[14]);
    char v43 = 10;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A988A04()
{
  unint64_t result = qword_2676539B8;
  if (!qword_2676539B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539B8);
  }
  return result;
}

uint64_t AudioEngagementCompletedEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v51 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A989318(0, &qword_2676539C0, MEMORY[0x263F8E040]);
  uint64_t v49 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v47 - v10;
  __int16 v53 = (int *)type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20A988A04();
  sub_20AB86DA0();
  uint64_t v50 = v5;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
  uint64_t v48 = a2;
  uint64_t v14 = v9;
  LOBYTE(v55) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  char v15 = v54;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v54, v7, v5);
  char v65 = 1;
  sub_20A97A154();
  sub_20AB86B80();
  long long v16 = v56;
  char v17 = v57;
  uint64_t v18 = *((void *)&v57 + 1);
  char v19 = v58;
  uint64_t v20 = v59;
  char v21 = v60;
  char v22 = v61;
  char v23 = v62;
  char v24 = v63;
  uint64_t v25 = v53;
  char v26 = &v15[v53[5]];
  *(_OWORD *)char v26 = v55;
  *((_OWORD *)v26 + 1) = v16;
  v26[32] = v17;
  *((void *)v26 + 5) = v18;
  v26[48] = v19;
  *((void *)v26 + 7) = v20;
  v26[64] = v21;
  v26[65] = v22;
  v26[66] = v23;
  v26[67] = v24;
  char v65 = 2;
  sub_20A986280();
  sub_20AB86B80();
  long long v27 = v56;
  char v28 = v57;
  char v29 = BYTE1(v57);
  uint64_t v30 = &v15[v25[6]];
  *(_OWORD *)uint64_t v30 = v55;
  *((_OWORD *)v30 + 1) = v27;
  v30[32] = v28;
  v30[33] = v29;
  char v65 = 3;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v31 = &v15[v25[7]];
  long long v32 = v56;
  *(_OWORD *)uint64_t v31 = v55;
  *((_OWORD *)v31 + 1) = v32;
  *((_OWORD *)v31 + 2) = v57;
  char v65 = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v33 = v56;
  __int16 v34 = &v15[v25[8]];
  *(_OWORD *)__int16 v34 = v55;
  *((void *)v34 + 2) = v33;
  char v65 = 5;
  sub_20A986970();
  sub_20AB86B80();
  char v35 = BYTE4(v55);
  char v36 = &v15[v25[9]];
  *(_DWORD *)char v36 = v55;
  v36[4] = v35;
  char v65 = 6;
  sub_20A986BC0();
  sub_20AB86B10();
  __int16 v37 = v56;
  uint64_t v38 = &v15[v25[10]];
  *(_OWORD *)uint64_t v38 = v55;
  *((_WORD *)v38 + 8) = v37;
  char v65 = 7;
  sub_20A986E10();
  sub_20AB86B80();
  int v64 = 1;
  char v39 = v56;
  int v40 = DWORD1(v56);
  uint64_t v41 = *((void *)&v56 + 1);
  uint64_t v42 = v57;
  __int16 v43 = WORD4(v57);
  long long v44 = &v15[v25[11]];
  *(_OWORD *)long long v44 = v55;
  v44[16] = v39;
  *((_DWORD *)v44 + 5) = v40;
  *((void *)v44 + 3) = v41;
  *((void *)v44 + 4) = v42;
  *((_WORD *)v44 + 20) = v43;
  char v65 = 8;
  sub_20A987060();
  sub_20AB86B10();
  *(_OWORD *)&v15[v25[12]] = v55;
  char v65 = 9;
  sub_20A9872B0();
  sub_20AB86B80();
  *(_DWORD *)&v54[v53[13]] = v55;
  char v65 = 10;
  sub_20A98757C();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v49);
  uint64_t v45 = (uint64_t)v54;
  v54[v53[14]] = v55;
  sub_20A9893C0(v45, v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return sub_20A989424(v45);
}

void sub_20A989318(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A988A04();
    unint64_t v7 = a3(a1, &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A98937C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A9893C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A989424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioEngagementCompletedEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A989480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementCompletedEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A989498(void *a1)
{
  return AudioEngagementCompletedEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9894B0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653218, MEMORY[0x263F24D18], (uint64_t)qword_267653920, a1);
}

uint64_t sub_20A9894E8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653220, MEMORY[0x263F24DD8], (uint64_t)qword_267653938, a1);
}

uint64_t sub_20A989520@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653228, MEMORY[0x263F24DE8], (uint64_t)qword_267653950, a1);
}

uint64_t sub_20A989558@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  long long v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    __int16 v34 = (char *)a2 + v32;
    sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    __int16 v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A98BBA0);
}

uint64_t sub_20A98BBA0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A98C190);
}

uint64_t sub_20A98C190(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_20A987500(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_20A987500(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_20A987500(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_20A987500(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_20A98C778()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A987500(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20A987500(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
      if (v2 <= 0x3F)
      {
        sub_20A987500(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20A987500(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20A987500(319, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
            if (v5 <= 0x3F)
            {
              sub_20A987500(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
              if (v6 <= 0x3F)
              {
                sub_20A987500(319, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
                if (v7 <= 0x3F)
                {
                  sub_20A987500(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                  if (v8 <= 0x3F)
                  {
                    sub_20A987500(319, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
                    if (v9 <= 0x3F)
                    {
                      sub_20A987500(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AudioEngagementCompletedEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)unint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    uint64_t v14 = (char *)a1 + v9;
    uint64_t v15 = (char *)a2 + v9;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    *((_WORD *)v14 + 16) = *((_WORD *)v15 + 16);
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21)
    {
      *uint64_t v19 = *v20;
      *((void *)v19 + 1) = *((void *)v20 + 1);
      *((void *)v19 + 2) = v21;
      *((void *)v19 + 3) = *((void *)v20 + 3);
      uint64_t v22 = *((void *)v20 + 5);
      *((void *)v19 + 4) = *((void *)v20 + 4);
      *((void *)v19 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v24 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v24;
      *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
    }
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *uint64_t v27 = *v28;
    uint64_t v29 = *((void *)v28 + 2);
    *((void *)v27 + 1) = *((void *)v28 + 1);
    *((void *)v27 + 2) = v29;
    uint64_t v30 = (char *)a1 + v26;
    uint64_t v31 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    v34[16] = v35[16];
    v34[17] = v35[17];
    uint64_t v37 = (char *)a1 + v33;
    uint64_t v38 = (char *)a2 + v33;
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    *((_DWORD *)v37 + 5) = *((_DWORD *)v38 + 5);
    uint64_t v39 = *((void *)v38 + 4);
    *((void *)v37 + 3) = *((void *)v38 + 3);
    *((void *)v37 + 4) = v39;
    v37[40] = v38[40];
    v37[41] = v38[41];
    uint64_t v40 = a3[12];
    uint64_t v41 = a3[13];
    uint64_t v42 = (void *)((char *)a1 + v40);
    uint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *(_DWORD *)((char *)a1 + v41) = *(_DWORD *)((char *)a2 + v41);
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
    *(void *)(v18 + 16) = v20;
    *(void *)(v18 + 24) = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 40);
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    *(void *)(v18 + 40) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  uint64_t v27 = *(void *)(v26 + 16);
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = v27;
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  uint64_t v34 = *(void *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v34;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  *(unsigned char *)(v32 + 17) = *(unsigned char *)(v33 + 17);
  uint64_t v35 = a1 + v31;
  uint64_t v36 = a2 + v31;
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  *(_DWORD *)(v35 + 20) = *(_DWORD *)(v36 + 20);
  uint64_t v37 = *(void *)(v36 + 32);
  *(void *)(v35 + 24) = *(void *)(v36 + 24);
  *(void *)(v35 + 32) = v37;
  *(unsigned char *)(v35 + 40) = *(unsigned char *)(v36 + 40);
  *(unsigned char *)(v35 + 41) = *(unsigned char *)(v36 + 41);
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = (void *)(a1 + v38);
  uint64_t v41 = (void *)(a2 + v38);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  *(_DWORD *)(a1 + v39) = *(_DWORD *)(a2 + v39);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(unsigned char *)(v12 + 33) = *(unsigned char *)(v13 + 33);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 16);
  uint64_t v18 = *(void *)(a2 + v14 + 16);
  if (v17)
  {
    if (v18)
    {
      *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
      *(void *)(v15 + 8) = *((void *)v16 + 1);
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
      *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
      *(void *)(v15 + 32) = *((void *)v16 + 4);
      *(void *)(v15 + 40) = *((void *)v16 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v15);
      long long v20 = v16[1];
      long long v19 = v16[2];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_OWORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
    *(void *)(v15 + 8) = *((void *)v16 + 1);
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    *(_DWORD *)(v15 + 24) = *((_DWORD *)v16 + 6);
    *(_DWORD *)(v15 + 28) = *((_DWORD *)v16 + 7);
    *(void *)(v15 + 32) = *((void *)v16 + 4);
    *(void *)(v15 + 40) = *((void *)v16 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = v16[2];
    *(_OWORD *)(v15 + 16) = v16[1];
    *(_OWORD *)(v15 + 32) = v22;
    *(_OWORD *)uint64_t v15 = v21;
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = *(void *)(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)(a2 + v29);
  *(void *)(v30 + 8) = *(void *)(a2 + v29 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  *(unsigned char *)(v30 + 17) = *(unsigned char *)(v31 + 17);
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(a2 + v32 + 16);
  *(_DWORD *)(v33 + 20) = *(_DWORD *)(a2 + v32 + 20);
  *(void *)(v33 + 24) = *(void *)(a2 + v32 + 24);
  *(void *)(v33 + 32) = *(void *)(a2 + v32 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 40) = *(unsigned char *)(v34 + 40);
  *(unsigned char *)(v33 + 41) = *(unsigned char *)(v34 + 41);
  uint64_t v35 = a3[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  *uint64_t v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_20A98D5B8(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  uint64_t v13 = a1 + v8;
  uint64_t v14 = a2 + v8;
  *(_WORD *)(v13 + 32) = *(_WORD *)(v14 + 32);
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (_OWORD *)(a1 + v16);
  long long v19 = (long long *)(a2 + v16);
  long long v20 = v19[2];
  long long v21 = *v19;
  v18[1] = v19[1];
  v18[2] = v20;
  *uint64_t v18 = v21;
  uint64_t v22 = a1 + v17;
  uint64_t v23 = (long long *)(a2 + v17);
  long long v24 = *v23;
  *(void *)(v22 + 16) = *((void *)v23 + 2);
  *(_OWORD *)uint64_t v22 = v24;
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(unsigned char *)(v27 + 4) = *(unsigned char *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_WORD *)(v29 + 16) = *(_WORD *)(v30 + 16);
  uint64_t v31 = a3[11];
  uint64_t v32 = a3[12];
  uint64_t v33 = (_OWORD *)(a1 + v31);
  uint64_t v34 = (_OWORD *)(a2 + v31);
  long long v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  *(_OWORD *)((char *)v33 + 26) = *(_OWORD *)((char *)v34 + 26);
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  uint64_t v36 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(unsigned char *)(v13 + 33) = *(unsigned char *)(v14 + 33);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  if (!*(void *)(a1 + v17 + 16)) {
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    sub_20A98D5B8(v18);
LABEL_5:
    long long v22 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v22;
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  *(void *)(v18 + 16) = v20;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 24) = *(void *)(v19 + 24);
  uint64_t v21 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v23 = a3[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = v27;
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(unsigned char *)(v30 + 4) = *(unsigned char *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  uint64_t v34 = *(void *)(a2 + v29);
  uint64_t v35 = *(void *)(a2 + v29 + 8);
  *(void *)uint64_t v32 = v34;
  *(void *)(v32 + 8) = v35;
  swift_bridgeObjectRelease();
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(_OWORD *)uint64_t v37 = *(_OWORD *)(a2 + v36);
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(a2 + v36 + 16);
  *(_DWORD *)(v37 + 20) = *(_DWORD *)(a2 + v36 + 20);
  uint64_t v39 = *(void *)(a2 + v36 + 32);
  *(void *)(v37 + 24) = *(void *)(a2 + v36 + 24);
  *(void *)(v37 + 32) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 40) = *(_WORD *)(v38 + 40);
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  *(_DWORD *)(a1 + a3[13]) = *(_DWORD *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A98D9BC);
}

uint64_t sub_20A98D9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A98DA94);
}

uint64_t sub_20A98DA94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A98DB54()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementCompletedEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A98DD14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementCompletedEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngagementCompletedEvent.Model.CodingKeys;
}

unint64_t sub_20A98DD50()
{
  unint64_t result = qword_2676539E8;
  if (!qword_2676539E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539E8);
  }
  return result;
}

unint64_t sub_20A98DDA8()
{
  unint64_t result = qword_2676539F0;
  if (!qword_2676539F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539F0);
  }
  return result;
}

unint64_t sub_20A98DE00()
{
  unint64_t result = qword_2676539F8;
  if (!qword_2676539F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676539F8);
  }
  return result;
}

uint64_t sub_20A98DE54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA72E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

StocksAnalytics::WatchlistType_optional __swiftcall WatchlistType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t WatchlistType.rawValue.getter()
{
  if (*v0) {
    return 0x6D6F74737563;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_20A98E3C8(char *a1, char *a2)
{
  return sub_20AA383C8(*a1, *a2);
}

unint64_t sub_20A98E3D8()
{
  unint64_t result = qword_267653A00;
  if (!qword_267653A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653A00);
  }
  return result;
}

uint64_t sub_20A98E42C()
{
  return sub_20AB86D80();
}

uint64_t sub_20A98E4AC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A98E518()
{
  return sub_20AB86D80();
}

StocksAnalytics::WatchlistType_optional sub_20A98E594(Swift::String *a1)
{
  return WatchlistType.init(rawValue:)(*a1);
}

void sub_20A98E5A0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C7561666564;
  if (*v1) {
    uint64_t v2 = 0x6D6F74737563;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A98E5DC()
{
  return sub_20AB86750();
}

uint64_t sub_20A98E63C()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for WatchlistType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WatchlistType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A98E7E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_20A98E810(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistType()
{
  return &type metadata for WatchlistType;
}

unint64_t sub_20A98E82C()
{
  unint64_t result = qword_26AC4EF90;
  if (!qword_26AC4EF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF90);
  }
  return result;
}

uint64_t sub_20A98E880(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653A08, MEMORY[0x263F24D10]);
}

uint64_t static ShareSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653230, MEMORY[0x263F24D18], (uint64_t)qword_267653A08, a1);
}

uint64_t static ShareSymbolEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A98E8E8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653A20, MEMORY[0x263F24DC8]);
}

uint64_t static ShareSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653238, MEMORY[0x263F24DD8], (uint64_t)qword_267653A20, a1);
}

uint64_t sub_20A98E948()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653A38);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653A38);
  return sub_20AB85D30();
}

uint64_t static ShareSymbolEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653240, MEMORY[0x263F24DE8], (uint64_t)qword_267653A38, a1);
}

uint64_t ShareSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ShareSymbolEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ShareSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ShareSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 20);
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareSymbolEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653A68);
}

uint64_t ShareSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 20);
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSymbolEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t ShareSymbolEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 24);
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A98ECE4(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A98ED60()
{
  unint64_t result = qword_26AC52270;
  if (!qword_26AC52270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52270);
  }
  return result;
}

unint64_t sub_20A98EDB4()
{
  unint64_t result = qword_26AC52278;
  if (!qword_26AC52278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52278);
  }
  return result;
}

uint64_t ShareSymbolEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent(0) + 24);
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareSymbolEvent.actionData.modify())()
{
  return nullsub_1;
}

uint64_t ShareSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for ShareSymbolEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t ShareSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ShareSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareSymbolEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareSymbolEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653A78);
}

uint64_t ShareSymbolEvent.Model.actionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShareSymbolEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ShareSymbolEvent.Model.init(eventData:symbolData:actionData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  char v11 = *a3;
  uint64_t v12 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a4, a1, v12);
  uint64_t result = type metadata accessor for ShareSymbolEvent.Model(0);
  uint64_t v14 = a4 + *(int *)(result + 20);
  *(void *)uint64_t v14 = v6;
  *(void *)(v14 + 8) = v7;
  *(unsigned char *)(v14 + 16) = v8;
  *(void *)(v14 + 24) = v9;
  *(void *)(v14 + 32) = v10;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = v11;
  return result;
}

uint64_t sub_20A98F1F8()
{
  uint64_t v1 = 0x61446C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 0x61446E6F69746361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20A98F260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9913B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A98F288(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20A98F294(uint64_t a1)
{
  unint64_t v2 = sub_20A98F534();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A98F2D0(uint64_t a1)
{
  unint64_t v2 = sub_20A98F534();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ShareSymbolEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A98F978(0, &qword_267653A50, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A98F534();
  sub_20AB86DC0();
  LOBYTE(v19) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for ShareSymbolEvent.Model(0);
    char v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v21 = v14;
    uint64_t v22 = v16;
    uint64_t v23 = v15;
    HIBYTE(v18) = 1;
    sub_20A97C61C();
    sub_20AB86C50();
    LOBYTE(v19) = *(unsigned char *)(v3 + *(int *)(v10 + 24));
    HIBYTE(v18) = 2;
    sub_20A98EDB4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A98F534()
{
  unint64_t result = qword_267653A58;
  if (!qword_267653A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653A58);
  }
  return result;
}

uint64_t ShareSymbolEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v26 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A98F978(0, &qword_267653A60, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for ShareSymbolEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A98F534();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v13 = v25;
  uint64_t v12 = v26;
  uint64_t v23 = v9;
  LOBYTE(v29) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  char v14 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  uint64_t v22 = v11;
  v14(v11, v27, v4);
  char v34 = 1;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v15 = v30;
  char v16 = v31;
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  uint64_t v19 = &v22[*(int *)(v23 + 20)];
  *(void *)uint64_t v19 = v29;
  *((void *)v19 + 1) = v15;
  v19[16] = v16;
  *((void *)v19 + 3) = v17;
  *((void *)v19 + 4) = v18;
  char v34 = 2;
  sub_20A98ED60();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v28);
  uint64_t v20 = (uint64_t)v22;
  v22[*(int *)(v23 + 24)] = v29;
  sub_20A98F9DC(v20, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A98FA40(v20);
}

void sub_20A98F978(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A98F534();
    unint64_t v7 = a3(a1, &type metadata for ShareSymbolEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A98F9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A98FA40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A98FA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A98FAB4(void *a1)
{
  return ShareSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A98FACC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653230, MEMORY[0x263F24D18], (uint64_t)qword_267653A08, a1);
}

uint64_t sub_20A98FB04@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653238, MEMORY[0x263F24DD8], (uint64_t)qword_267653A20, a1);
}

uint64_t sub_20A98FB3C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653240, MEMORY[0x263F24DE8], (uint64_t)qword_267653A38, a1);
}

uint64_t sub_20A98FB74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareSymbolEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ShareSymbolEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A990608);
}

uint64_t sub_20A990608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for ShareSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9907D8);
}

uint64_t sub_20A9907D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20A98ECE4(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20A98ECE4(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20A9909A0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A98ECE4(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    if (v1 <= 0x3F)
    {
      sub_20A98ECE4(319, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ShareSymbolEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareSymbolEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A990F6C);
}

uint64_t sub_20A990F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ShareSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A991044);
}

uint64_t sub_20A991044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A991104()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareSymbolEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A991270);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSymbolEvent.Model.CodingKeys()
{
  return &type metadata for ShareSymbolEvent.Model.CodingKeys;
}

unint64_t sub_20A9912AC()
{
  unint64_t result = qword_267653A88;
  if (!qword_267653A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653A88);
  }
  return result;
}

unint64_t sub_20A991304()
{
  unint64_t result = qword_267653A90;
  if (!qword_267653A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653A90);
  }
  return result;
}

unint64_t sub_20A99135C()
{
  unint64_t result = qword_267653A98;
  if (!qword_267653A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653A98);
  }
  return result;
}

uint64_t sub_20A9913B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static AdStateData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdStateData.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdStateData.state.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*AdStateData.state.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdStateData __swiftcall AdStateData.init(state:)(StocksAnalytics::AdStateData state)
{
  *unint64_t v1 = *(unsigned char *)state.state;
  return state;
}

uint64_t sub_20A991578()
{
  return 1;
}

uint64_t sub_20A991580()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9915C4()
{
  return sub_20AB86D70();
}

uint64_t sub_20A9915EC()
{
  return sub_20AB86D80();
}

uint64_t sub_20A99162C()
{
  return 0x6574617473;
}

uint64_t sub_20A991640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_20A9916D0(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20A9916DC(uint64_t a1)
{
  unint64_t v2 = sub_20A9918B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A991718(uint64_t a1)
{
  unint64_t v2 = sub_20A9918B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdStateData.encode(to:)(void *a1)
{
  sub_20A991AF0(0, &qword_26AC52258, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9918B0();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20A991904();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9918B0()
{
  unint64_t result = qword_26AC52100;
  if (!qword_26AC52100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52100);
  }
  return result;
}

unint64_t sub_20A991904()
{
  unint64_t result = qword_26AC52240;
  if (!qword_26AC52240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52240);
  }
  return result;
}

uint64_t AdStateData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20A991AF0(0, &qword_267653AA0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9918B0();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A991B54();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A991AF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9918B0();
    unint64_t v7 = a3(a1, &type metadata for AdStateData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A991B54()
{
  unint64_t result = qword_267653AA8;
  if (!qword_267653AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653AA8);
  }
  return result;
}

unint64_t sub_20A991BAC()
{
  unint64_t result = qword_26AC520E8;
  if (!qword_26AC520E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC520E8);
  }
  return result;
}

unint64_t sub_20A991C04()
{
  unint64_t result = qword_26AC52118;
  if (!qword_26AC52118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52118);
  }
  return result;
}

uint64_t sub_20A991C58@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdStateData.init(from:)(a1, a2);
}

uint64_t sub_20A991C70(void *a1)
{
  return AdStateData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FeedType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AdStateData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A991DE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdStateData()
{
  return &type metadata for AdStateData;
}

uint64_t getEnumTagSinglePayload for AdStateData.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for AdStateData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A991F08);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdStateData.CodingKeys()
{
  return &type metadata for AdStateData.CodingKeys;
}

unint64_t sub_20A991F44()
{
  unint64_t result = qword_267653AB0;
  if (!qword_267653AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653AB0);
  }
  return result;
}

unint64_t sub_20A991F9C()
{
  unint64_t result = qword_26AC52110;
  if (!qword_26AC52110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52110);
  }
  return result;
}

unint64_t sub_20A991FF4()
{
  unint64_t result = qword_26AC52108;
  if (!qword_26AC52108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52108);
  }
  return result;
}

uint64_t sub_20A992048(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653AB8, MEMORY[0x263F24D10]);
}

uint64_t static EditWatchListExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653248, MEMORY[0x263F24D18], (uint64_t)qword_267653AB8, a1);
}

uint64_t static EditWatchListExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9920B0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653AD0, MEMORY[0x263F24DC8]);
}

uint64_t static EditWatchListExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653250, MEMORY[0x263F24DD8], (uint64_t)qword_267653AD0, a1);
}

uint64_t sub_20A992110()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653AE8);
  return sub_20AB85D30();
}

uint64_t static EditWatchListExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653258, MEMORY[0x263F24DE8], (uint64_t)qword_267653AE8, a1);
}

uint64_t EditWatchListExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EditWatchListExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EditWatchListExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9926DC(type metadata accessor for EditWatchListExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for EditWatchListExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653B18);
}

uint64_t EditWatchListExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EditWatchListExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 24);
  sub_20A9923B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9923B8()
{
  if (!qword_26AC4E660)
  {
    sub_20A992420();
    sub_20A992474();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E660);
    }
  }
}

unint64_t sub_20A992420()
{
  unint64_t result = qword_26AC506B8;
  if (!qword_26AC506B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506B8);
  }
  return result;
}

unint64_t sub_20A992474()
{
  unint64_t result = qword_26AC506B0;
  if (!qword_26AC506B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC506B0);
  }
  return result;
}

uint64_t EditWatchListExposureEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent(0) + 24);
  sub_20A9923B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EditWatchListExposureEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t EditWatchListExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for EditWatchListExposureEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_20A9923B8();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t EditWatchListExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EditWatchListExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9926DC(type metadata accessor for EditWatchListExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9926DC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for EditWatchListExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653B28);
}

uint64_t EditWatchListExposureEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for EditWatchListExposureEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t EditWatchListExposureEvent.Model.init(eventData:timedData:watchedSymbolListData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a3;
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  uint64_t v10 = a4 + *(int *)(v9 + 20);
  uint64_t v11 = sub_20AB85FE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  *(void *)(a4 + *(int *)(v9 + 24)) = v7;
  return result;
}

uint64_t sub_20A9928A0()
{
  unint64_t v1 = 0x74614464656D6974;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20A992900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9948AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A992928(uint64_t a1)
{
  unint64_t v2 = sub_20A992BFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A992964(uint64_t a1)
{
  unint64_t v2 = sub_20A992BFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EditWatchListExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A99311C(0, &qword_267653B00, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v12[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A992BFC();
  sub_20AB86DC0();
  char v15 = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for EditWatchListExposureEvent.Model(0);
    char v14 = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_20A992474();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A992BFC()
{
  unint64_t result = qword_267653B08;
  if (!qword_267653B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653B08);
  }
  return result;
}

uint64_t EditWatchListExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_20AB85FC0();
  uint64_t v24 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v28 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A99311C(0, &qword_267653B10, MEMORY[0x263F8E040]);
  uint64_t v29 = v8;
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A992BFC();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = v11;
  uint64_t v22 = a1;
  uint64_t v14 = (uint64_t)v13;
  uint64_t v16 = v25;
  uint64_t v15 = v26;
  uint64_t v17 = v27;
  char v34 = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v14, v28, v30);
  char v33 = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v14 + *(int *)(v21 + 20), v6, v17);
  char v32 = 2;
  sub_20A992420();
  sub_20AB86B80();
  uint64_t v18 = (uint64_t)v22;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v29);
  *(void *)(v14 + *(int *)(v21 + 24)) = v31;
  sub_20A993180(v14, v23);
  __swift_destroy_boxed_opaque_existential_1(v18);
  return sub_20A9931E4(v14);
}

void sub_20A99311C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A992BFC();
    unint64_t v7 = a3(a1, &type metadata for EditWatchListExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A993180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9931E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditWatchListExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A993240@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EditWatchListExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A993258(void *a1)
{
  return EditWatchListExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A993270@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653248, MEMORY[0x263F24D18], (uint64_t)qword_267653AB8, a1);
}

uint64_t sub_20A9932A8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653250, MEMORY[0x263F24DD8], (uint64_t)qword_267653AD0, a1);
}

uint64_t sub_20A9932E0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653258, MEMORY[0x263F24DE8], (uint64_t)qword_267653AE8, a1);
}

uint64_t sub_20A993318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  sub_20A9923B8();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for EditWatchListExposureEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9923B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  sub_20A9923B8();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9923B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9923B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9923B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9923B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A993A9C);
}

uint64_t sub_20A993A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  sub_20A9923B8();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for EditWatchListExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A993BFC);
}

uint64_t sub_20A993BFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  sub_20A9923B8();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_20A993D54()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9923B8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EditWatchListExposureEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A994394);
}

uint64_t sub_20A994394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EditWatchListExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9944BC);
}

uint64_t sub_20A9944BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9945CC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EditWatchListExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A99476CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EditWatchListExposureEvent.Model.CodingKeys()
{
  return &type metadata for EditWatchListExposureEvent.Model.CodingKeys;
}

unint64_t sub_20A9947A8()
{
  unint64_t result = qword_267653B38;
  if (!qword_267653B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653B38);
  }
  return result;
}

unint64_t sub_20A994800()
{
  unint64_t result = qword_267653B40;
  if (!qword_267653B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653B40);
  }
  return result;
}

unint64_t sub_20A994858()
{
  unint64_t result = qword_267653B48;
  if (!qword_267653B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653B48);
  }
  return result;
}

uint64_t sub_20A9948AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::CellularRadioAccessTechnology_optional __swiftcall CellularRadioAccessTechnology.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t CellularRadioAccessTechnology.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1768319351;
      break;
    case 2:
      uint64_t result = 1851881335;
      break;
    case 3:
      uint64_t result = 0x67356E617777;
      break;
    case 4:
      uint64_t result = 0x6863616552746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A994B14(unsigned __int8 *a1, char *a2)
{
  return sub_20AA34D28(*a1, *a2);
}

unint64_t sub_20A994B24()
{
  unint64_t result = qword_267653B50;
  if (!qword_267653B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653B50);
  }
  return result;
}

uint64_t sub_20A994B78()
{
  return sub_20AB86D80();
}

uint64_t sub_20A994C64()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A994D38()
{
  return sub_20AB86D80();
}

StocksAnalytics::CellularRadioAccessTechnology_optional sub_20A994E20(Swift::String *a1)
{
  return CellularRadioAccessTechnology.init(rawValue:)(*a1);
}

void sub_20A994E2C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1768319351;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 1851881335;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 3:
      *(void *)a1 = 0x67356E617777;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "notReachable");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20A994EDC()
{
  return sub_20AB86750();
}

uint64_t sub_20A994F3C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for CellularRadioAccessTechnology(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A995058);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CellularRadioAccessTechnology()
{
  return &type metadata for CellularRadioAccessTechnology;
}

unint64_t sub_20A995090()
{
  unint64_t result = qword_26AC50F50;
  if (!qword_26AC50F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F50);
  }
  return result;
}

uint64_t sub_20A9950E4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653B58, MEMORY[0x263F24D10]);
}

uint64_t static UnwatchSymbolEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653260, MEMORY[0x263F24D18], (uint64_t)qword_267653B58, a1);
}

uint64_t static UnwatchSymbolEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A99514C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653B70, MEMORY[0x263F24DC8]);
}

uint64_t static UnwatchSymbolEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653268, MEMORY[0x263F24DD8], (uint64_t)qword_267653B70, a1);
}

uint64_t sub_20A9951AC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653B88);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653B88);
  return sub_20AB85D30();
}

uint64_t static UnwatchSymbolEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653270, MEMORY[0x263F24DE8], (uint64_t)qword_267653B88, a1);
}

uint64_t UnwatchSymbolEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t UnwatchSymbolEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*UnwatchSymbolEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 20);
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UnwatchSymbolEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653BB8);
}

uint64_t UnwatchSymbolEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 20);
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 24);
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t UnwatchSymbolEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 24);
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 28);
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9956F0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t UnwatchSymbolEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent(0) + 28);
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UnwatchSymbolEvent.watchlistData.modify())()
{
  return nullsub_1;
}

uint64_t UnwatchSymbolEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for UnwatchSymbolEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t UnwatchSymbolEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t UnwatchSymbolEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent.Model(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UnwatchSymbolEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653BC8);
}

uint64_t UnwatchSymbolEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for UnwatchSymbolEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t UnwatchSymbolEvent.Model.watchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for UnwatchSymbolEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

int *UnwatchSymbolEvent.Model.init(eventData:symbolData:watchedSymbolListData:watchlistData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  char v9 = *((unsigned char *)a2 + 16);
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = *a3;
  char v13 = *a4;
  uint64_t v14 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  uint64_t result = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
  uint64_t v16 = a5 + result[5];
  *(void *)uint64_t v16 = v7;
  *(void *)(v16 + 8) = v8;
  *(unsigned char *)(v16 + 16) = v9;
  *(void *)(v16 + 24) = v10;
  *(void *)(v16 + 32) = v11;
  *(void *)(a5 + result[6]) = v12;
  *(unsigned char *)(a5 + result[7]) = v13;
  return result;
}

unint64_t sub_20A995C30()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61446C6F626D7973;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x73696C6863746177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A995CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A998474(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A995D00(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_20A995D0C(uint64_t a1)
{
  unint64_t v2 = sub_20A995FF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A995D48(uint64_t a1)
{
  unint64_t v2 = sub_20A995FF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UnwatchSymbolEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9964B8(0, &qword_267653BA0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A995FF0();
  sub_20AB86DC0();
  LOBYTE(v19) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    char v14 = *((unsigned char *)v11 + 16);
    uint64_t v16 = v11[3];
    uint64_t v15 = v11[4];
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v21 = v14;
    uint64_t v22 = v16;
    uint64_t v23 = v15;
    HIBYTE(v18) = 1;
    sub_20A97C61C();
    sub_20AB86C50();
    uint64_t v19 = *(void *)(v3 + v10[6]);
    HIBYTE(v18) = 2;
    sub_20A992474();
    sub_20AB86C50();
    LOBYTE(v19) = *(unsigned char *)(v3 + v10[7]);
    HIBYTE(v18) = 3;
    sub_20A9875D0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A995FF0()
{
  unint64_t result = qword_267653BA8;
  if (!qword_267653BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653BA8);
  }
  return result;
}

uint64_t UnwatchSymbolEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_20AB85FC0();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v24 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9964B8(0, &qword_267653BB0, MEMORY[0x263F8E040]);
  uint64_t v25 = v5;
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = (int *)type metadata accessor for UnwatchSymbolEvent.Model(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A995FF0();
  uint64_t v9 = (uint64_t)v26;
  sub_20AB86DA0();
  if (v9) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v26 = a1;
  uint64_t v10 = (uint64_t)v8;
  uint64_t v11 = v23;
  LOBYTE(v27) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v13 = v24;
  uint64_t v12 = v25;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v10, v13, v3);
  char v32 = 1;
  sub_20A97C5C8();
  sub_20AB86B80();
  uint64_t v14 = v28;
  char v15 = v29;
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  uint64_t v18 = v10 + v6[5];
  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = v14;
  *(unsigned char *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = v16;
  *(void *)(v18 + 32) = v17;
  char v32 = 2;
  sub_20A992420();
  sub_20AB86B80();
  *(void *)(v10 + v6[6]) = v27;
  char v32 = 3;
  sub_20A98757C();
  sub_20AB86B80();
  (*(void (**)(void, uint64_t))(v22 + 8))(0, v12);
  *(unsigned char *)(v10 + v6[7]) = v27;
  sub_20A99651C(v10, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_20A996580(v10);
}

void sub_20A9964B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A995FF0();
    unint64_t v7 = a3(a1, &type metadata for UnwatchSymbolEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A99651C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnwatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A996580(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnwatchSymbolEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9965DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UnwatchSymbolEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9965F4(void *a1)
{
  return UnwatchSymbolEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A99660C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653260, MEMORY[0x263F24D18], (uint64_t)qword_267653B58, a1);
}

uint64_t sub_20A996644@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653268, MEMORY[0x263F24DD8], (uint64_t)qword_267653B70, a1);
}

uint64_t sub_20A99667C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653270, MEMORY[0x263F24DE8], (uint64_t)qword_267653B88, a1);
}

uint64_t sub_20A9966B4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for UnwatchSymbolEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for UnwatchSymbolEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9974BC);
}

uint64_t sub_20A9974BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for UnwatchSymbolEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A997710);
}

uint64_t sub_20A997710(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9956F0(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20A9956F0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20A9956F0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20A99795C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9956F0(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    if (v1 <= 0x3F)
    {
      sub_20A9956F0(319, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
      if (v2 <= 0x3F)
      {
        sub_20A9956F0(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for UnwatchSymbolEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[16] = v11[16];
    uint64_t v13 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v13;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UnwatchSymbolEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v12;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t initializeWithTake for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = (long long *)(a2 + v7);
  long long v11 = *v10;
  long long v12 = v10[1];
  *(void *)(v9 + 32) = *((void *)v10 + 4);
  *(_OWORD *)uint64_t v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 32);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  *(void *)(v8 + 32) = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A998024);
}

uint64_t sub_20A998024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UnwatchSymbolEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9980FC);
}

uint64_t sub_20A9980FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A9981BC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnwatchSymbolEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A998334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnwatchSymbolEvent.Model.CodingKeys()
{
  return &type metadata for UnwatchSymbolEvent.Model.CodingKeys;
}

unint64_t sub_20A998370()
{
  unint64_t result = qword_267653BD8;
  if (!qword_267653BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653BD8);
  }
  return result;
}

unint64_t sub_20A9983C8()
{
  unint64_t result = qword_267653BE0;
  if (!qword_267653BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653BE0);
  }
  return result;
}

unint64_t sub_20A998420()
{
  unint64_t result = qword_267653BE8;
  if (!qword_267653BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653BE8);
  }
  return result;
}

uint64_t sub_20A998474(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73696C6863746177 && a2 == 0xED00006174614474)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

StocksAnalytics::AdJournalEntryError_optional __swiftcall AdJournalEntryError.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t AdJournalEntryError.rawValue.getter()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F5464656C696166;
      break;
    case 2:
      unint64_t result = 0x4674736575716572;
      break;
    case 3:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A998768(unsigned __int8 *a1, char *a2)
{
  return sub_20AA36A48(*a1, *a2);
}

unint64_t sub_20A998778()
{
  unint64_t result = qword_267653BF0;
  if (!qword_267653BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653BF0);
  }
  return result;
}

uint64_t sub_20A9987CC()
{
  return sub_20AB4C788();
}

uint64_t sub_20A9987D4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9988B0()
{
  return sub_20AB4E8C8();
}

StocksAnalytics::AdJournalEntryError_optional sub_20A9988B8(Swift::String *a1)
{
  return AdJournalEntryError.init(rawValue:)(*a1);
}

void sub_20A9988C4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0x800000020ABA64B0;
  unint64_t v3 = 0xD000000000000015;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE007265646E6552;
      unint64_t v3 = 0x6F5464656C696166;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "requestFailed");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x726568746FLL;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20A998978()
{
  return sub_20AB86750();
}

uint64_t sub_20A9989D8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AdJournalEntryError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A998AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdJournalEntryError()
{
  return &type metadata for AdJournalEntryError;
}

unint64_t sub_20A998B2C()
{
  unint64_t result = qword_26AC4FDA0;
  if (!qword_26AC4FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FDA0);
  }
  return result;
}

uint64_t sub_20A998B80(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653BF8, MEMORY[0x263F24D10]);
}

uint64_t static DeleteWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653278, MEMORY[0x263F24D18], (uint64_t)qword_267653BF8, a1);
}

uint64_t static DeleteWatchlistEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A998BE8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653C10, MEMORY[0x263F24DC8]);
}

uint64_t static DeleteWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653280, MEMORY[0x263F24DD8], (uint64_t)qword_267653C10, a1);
}

uint64_t sub_20A998C48()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653C28);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653C28);
  return sub_20AB85D30();
}

uint64_t static DeleteWatchlistEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653288, MEMORY[0x263F24DE8], (uint64_t)qword_267653C28, a1);
}

uint64_t DeleteWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t DeleteWatchlistEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*DeleteWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t DeleteWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t DeleteWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t DeleteWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20A998E64()
{
  return 0x746144746E657665;
}

uint64_t sub_20A998E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746144746E657665 && a2 == 0xE900000000000061)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A998F24(uint64_t a1)
{
  unint64_t v2 = sub_20A999110();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A998F60(uint64_t a1)
{
  unint64_t v2 = sub_20A999110();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DeleteWatchlistEvent.Model.encode(to:)(void *a1)
{
  sub_20A9993FC(0, &qword_267653C40, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A999110();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A999110()
{
  unint64_t result = qword_267653C48;
  if (!qword_267653C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653C48);
  }
  return result;
}

uint64_t DeleteWatchlistEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9993FC(0, &qword_267653C50, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for DeleteWatchlistEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  long long v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A999110();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20A999480((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9993FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A999110();
    unint64_t v7 = a3(a1, &type metadata for DeleteWatchlistEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for DeleteWatchlistEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653C68);
}

uint64_t sub_20A999480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DeleteWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9994E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DeleteWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9994FC(void *a1)
{
  sub_20A9993FC(0, &qword_267653C40, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A999110();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A999670@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653278, MEMORY[0x263F24D18], (uint64_t)qword_267653BF8, a1);
}

uint64_t sub_20A9996A8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653280, MEMORY[0x263F24DD8], (uint64_t)qword_267653C10, a1);
}

uint64_t sub_20A9996E0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653288, MEMORY[0x263F24DE8], (uint64_t)qword_267653C28, a1);
}

uint64_t sub_20A999718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t initializeBufferWithCopyOfBuffer for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A9998C4(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t destroy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2)
{
  return sub_20A99994C(a1, a2, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t initializeWithCopy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A9999CC(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t assignWithCopy for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999A4C(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t initializeWithTake for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999ACC(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t assignWithTake for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999B4C(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t getEnumTagSinglePayload for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A999830);
}

uint64_t sub_20A999830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A99985C);
}

uint64_t sub_20A99985C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for DeleteWatchlistEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653C58);
}

uint64_t sub_20A999894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999D08(a1, a2, a3, (uint64_t (*)(uint64_t))sub_20A97BF54);
}

uint64_t initializeBufferWithCopyOfBuffer for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A9998C4(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A9998C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  unint64_t v7 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);

  return v7(a1, a2, v6);
}

uint64_t destroy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2)
{
  return sub_20A99994C(a1, a2, MEMORY[0x263F24E70]);
}

uint64_t sub_20A99994C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(a1, v4);
}

uint64_t initializeWithCopy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A9999CC(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A9999CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  return a1;
}

uint64_t assignWithCopy for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999A4C(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A999A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  return a1;
}

uint64_t initializeWithTake for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999ACC(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A999ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  return a1;
}

uint64_t assignWithTake for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999B4C(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A999B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A999BC8);
}

uint64_t sub_20A999BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for DeleteWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A999C64);
}

uint64_t sub_20A999C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_20A999CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A999D08(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t sub_20A999D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DeleteWatchlistEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A999E34);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeleteWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for DeleteWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_20A999E70()
{
  unint64_t result = qword_267653C78;
  if (!qword_267653C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653C78);
  }
  return result;
}

unint64_t sub_20A999EC8()
{
  unint64_t result = qword_267653C80;
  if (!qword_267653C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653C80);
  }
  return result;
}

unint64_t sub_20A999F20()
{
  unint64_t result = qword_267653C88;
  if (!qword_267653C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653C88);
  }
  return result;
}

uint64_t sub_20A999F74()
{
  uint64_t v0 = sub_20AB859A0();
  __swift_allocate_value_buffer(v0, qword_26AC52148);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC52148);
  *(void *)uint64_t v1 = 0x7364612E6D6F63;
  *(void *)(v1 + 8) = 0xE700000000000000;
  *(void *)(v1 + 16) = 3;
  *(unsigned char *)(v1 + 24) = 0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v2();
}

uint64_t static BannerAdImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52160, MEMORY[0x263F24D18], (uint64_t)qword_26AC52148, a1);
}

uint64_t static BannerAdImpressionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A99A060()
{
  uint64_t v0 = sub_20AB85C70();
  __swift_allocate_value_buffer(v0, qword_26AC52168);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC52168);
  uint64_t v2 = *MEMORY[0x263F24DC0];
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static BannerAdImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC52180, MEMORY[0x263F24DD8], (uint64_t)qword_26AC52168, a1);
}

uint64_t sub_20A99A120()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653C90);
  return sub_20AB85D30();
}

uint64_t static BannerAdImpressionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653290, MEMORY[0x263F24DE8], (uint64_t)qword_267653C90, a1);
}

uint64_t BannerAdImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t BannerAdImpressionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*BannerAdImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A99BCCC(type metadata accessor for BannerAdImpressionEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for BannerAdImpressionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52188);
}

uint64_t BannerAdImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adUserData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99A400()
{
  unint64_t result = qword_26AC4EB00;
  if (!qword_26AC4EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB00);
  }
  return result;
}

unint64_t sub_20A99A454()
{
  unint64_t result = qword_26AC4EAF8;
  if (!qword_26AC4EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAF8);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adUserData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 24);
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adUserData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 28);
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adStateData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BannerAdImpressionEvent.adStateData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 32);
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adStateData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPlacementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99A9A0()
{
  unint64_t result = qword_26AC4E118;
  if (!qword_26AC4E118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E118);
  }
  return result;
}

unint64_t sub_20A99A9F4()
{
  unint64_t result = qword_26AC4F0E0;
  if (!qword_26AC4F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F0E0);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adPlacementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 36);
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPlacementData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adSizeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99ABF0()
{
  unint64_t result = qword_26AC4EAD0;
  if (!qword_26AC4EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAD0);
  }
  return result;
}

unint64_t sub_20A99AC44()
{
  unint64_t result = qword_26AC4EAC8;
  if (!qword_26AC4EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAC8);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adSizeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 40);
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adSizeData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99AE40()
{
  unint64_t result = qword_26AC4EFE0;
  if (!qword_26AC4EFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFE0);
  }
  return result;
}

unint64_t sub_20A99AE94()
{
  unint64_t result = qword_26AC4EFD8;
  if (!qword_26AC4EFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFD8);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 44);
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adPositionData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adFeedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99B090()
{
  unint64_t result = qword_26AC4E0D8;
  if (!qword_26AC4E0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E0D8);
  }
  return result;
}

unint64_t sub_20A99B0E4()
{
  unint64_t result = qword_26AC4EAC0;
  if (!qword_26AC4EAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAC0);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adFeedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 48);
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adFeedData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.bannerAdData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A99B2E0()
{
  unint64_t result = qword_26AC52140;
  if (!qword_26AC52140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52140);
  }
  return result;
}

unint64_t sub_20A99B334()
{
  unint64_t result = qword_26AC52138;
  if (!qword_26AC52138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52138);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.bannerAdData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 52);
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.bannerAdData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.adGroupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A99B530(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A99B5AC()
{
  unint64_t result = qword_26AC4EB98;
  if (!qword_26AC4EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB98);
  }
  return result;
}

unint64_t sub_20A99B600()
{
  unint64_t result = qword_26AC4EB90;
  if (!qword_26AC4EB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB90);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.adGroupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent(0) + 56);
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*BannerAdImpressionEvent.adGroupData.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for BannerAdImpressionEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);

  return v26(v24, v10, v25);
}

uint64_t BannerAdImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t BannerAdImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A99BCCC(type metadata accessor for BannerAdImpressionEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A99BCCC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for BannerAdImpressionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653CC0);
}

uint64_t BannerAdImpressionEvent.Model.adUserData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t BannerAdImpressionEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t sub_20A99BE1C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adStateData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPlacementData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 36));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

double BannerAdImpressionEvent.Model.adSizeData.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + *(int *)(type metadata accessor for BannerAdImpressionEvent.Model(0) + 40));
  *a1 = result;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 44));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adFeedData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t BannerAdImpressionEvent.Model.bannerAdData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  uint64_t v4 = (char *)(v1 + *(int *)(result + 52));
  char v5 = *v4;
  char v6 = v4[1];
  LOBYTE(v4) = v4[2];
  *a1 = v5;
  a1[1] = v6;
  a1[2] = (_BYTE)v4;
  return result;
}

uint64_t BannerAdImpressionEvent.Model.adGroupData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for BannerAdImpressionEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

__n128 BannerAdImpressionEvent.Model.init(eventData:timedData:adUserData:channelData:adStateData:adPlacementData:adSizeData:adPositionData:adFeedData:bannerAdData:adGroupData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, int *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, char *a12)
{
  uint64_t v16 = *a3;
  uint64_t v17 = a3[1];
  __n128 v33 = *a4;
  unint64_t v19 = a4[1].n128_u64[0];
  unint64_t v18 = a4[1].n128_u64[1];
  unsigned __int16 v20 = a4[2].n128_u16[0];
  char v21 = *a5;
  uint64_t v35 = *a6;
  uint64_t v34 = a6[1];
  int v37 = *a8;
  char v36 = *((unsigned char *)a8 + 4);
  char v41 = *a11;
  char v40 = a11[1];
  char v38 = *a10;
  char v39 = a11[2];
  char v42 = *a12;
  uint64_t v22 = sub_20AB85FC0();
  uint64_t v23 = *a7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v24 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  uint64_t v25 = a9 + v24[5];
  uint64_t v26 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a2, v26);
  uint64_t v27 = (void *)(a9 + v24[6]);
  *uint64_t v27 = v16;
  v27[1] = v17;
  uint64_t v28 = (__n128 *)(a9 + v24[7]);
  __n128 result = v33;
  *uint64_t v28 = v33;
  v28[1].n128_u64[0] = v19;
  v28[1].n128_u64[1] = v18;
  v28[2].n128_u16[0] = v20;
  *(unsigned char *)(a9 + v24[8]) = v21;
  uint64_t v30 = (void *)(a9 + v24[9]);
  *uint64_t v30 = v35;
  v30[1] = v34;
  *(void *)(a9 + v24[10]) = v23;
  uint64_t v31 = a9 + v24[11];
  *(_DWORD *)uint64_t v31 = v37;
  *(unsigned char *)(v31 + 4) = v36;
  *(unsigned char *)(a9 + v24[12]) = v38;
  char v32 = (unsigned char *)(a9 + v24[13]);
  *char v32 = v41;
  v32[1] = v40;
  v32[2] = v39;
  *(unsigned char *)(a9 + v24[14]) = v42;
  return result;
}

uint64_t sub_20A99C1E8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      return 0x74614464656D6974;
    case 2:
      uint64_t v3 = 0x726573556461;
      goto LABEL_13;
    case 3:
      return 0x446C656E6E616863;
    case 4:
      return 0x4465746174536461;
    case 5:
      return 0x6D6563616C506461;
    case 6:
      uint64_t v3 = 0x657A69536461;
      goto LABEL_13;
    case 7:
      return 0x697469736F506461;
    case 8:
      uint64_t v3 = 0x646565466461;
LABEL_13:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6144000000000000;
      break;
    case 9:
      uint64_t result = 0x644172656E6E6162;
      break;
    case 10:
      uint64_t result = 0x4470756F72476461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A99C354()
{
  return sub_20A99C1E8(*v0);
}

uint64_t sub_20A99C35C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9A1874(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A99C384(uint64_t a1)
{
  unint64_t v2 = sub_20A99C8AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A99C3C0(uint64_t a1)
{
  unint64_t v2 = sub_20A99C8AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BannerAdImpressionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A99D168(0, &qword_267653CA8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A99C8AC();
  sub_20AB86DC0();
  LOBYTE(v26[0]) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
    LOBYTE(v26[0]) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *(void *)&v26[0] = v13;
    *((void *)&v26[0] + 1) = v12;
    char v28 = 2;
    sub_20A99A454();
    sub_20AB86C50();
    uint64_t v14 = v3 + v10[7];
    __int16 v15 = *(_WORD *)(v14 + 32);
    long long v16 = *(_OWORD *)(v14 + 16);
    v26[0] = *(_OWORD *)v14;
    v26[1] = v16;
    __int16 v27 = v15;
    char v28 = 3;
    sub_20A9862D4();
    sub_20AB86BE0();
    LOBYTE(v26[0]) = *(unsigned char *)(v3 + v10[8]);
    char v28 = 4;
    sub_20A991C04();
    sub_20AB86C50();
    uint64_t v17 = (uint64_t *)(v3 + v10[9]);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *(void *)&v26[0] = v19;
    *((void *)&v26[0] + 1) = v18;
    char v28 = 5;
    sub_20A99A9F4();
    sub_20AB86C50();
    *(void *)&v26[0] = *(void *)(v3 + v10[10]);
    char v28 = 6;
    sub_20A99AC44();
    sub_20AB86C50();
    unsigned __int16 v20 = (int *)(v3 + v10[11]);
    int v21 = *v20;
    LOBYTE(v20) = *((unsigned char *)v20 + 4);
    LODWORD(v26[0]) = v21;
    BYTE4(v26[0]) = (_BYTE)v20;
    char v28 = 7;
    sub_20A99AE94();
    sub_20AB86BE0();
    LOBYTE(v26[0]) = *(unsigned char *)(v3 + v10[12]);
    char v28 = 8;
    sub_20A99B0E4();
    sub_20AB86BE0();
    uint64_t v22 = (char *)(v3 + v10[13]);
    char v23 = *v22;
    char v24 = v22[1];
    LOBYTE(v22) = v22[2];
    LOBYTE(v26[0]) = v23;
    BYTE1(v26[0]) = v24;
    BYTE2(v26[0]) = (_BYTE)v22;
    char v28 = 9;
    sub_20A99B334();
    sub_20AB86C50();
    LOBYTE(v26[0]) = *(unsigned char *)(v3 + v10[14]);
    char v28 = 10;
    sub_20A99B600();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A99C8AC()
{
  unint64_t result = qword_267653CB0;
  if (!qword_267653CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CB0);
  }
  return result;
}

uint64_t BannerAdImpressionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85FC0();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A99D168(0, &qword_267653CB8, MEMORY[0x263F8E040]);
  uint64_t v37 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - v12;
  char v42 = (int *)type metadata accessor for BannerAdImpressionEvent.Model(0);
  MEMORY[0x270FA5388](v42);
  uint64_t v43 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  char v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20A99C8AC();
  char v36 = v13;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  uint64_t v34 = v11;
  LOBYTE(v44) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v16 = v7;
  uint64_t v18 = v43;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v43, v9, v16);
  LOBYTE(v44) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v19 = v39;
  sub_20AB86B80();
  unsigned __int16 v20 = v42;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v18[v42[5]], v6, v19);
  char v47 = 2;
  sub_20A99A400();
  sub_20AB86B80();
  uint64_t v21 = *((void *)&v44 + 1);
  uint64_t v22 = &v18[v20[6]];
  *(void *)uint64_t v22 = v44;
  *((void *)v22 + 1) = v21;
  char v47 = 3;
  sub_20A986280();
  sub_20AB86B10();
  __int16 v23 = v46;
  char v24 = &v18[v20[7]];
  long long v25 = v45;
  *(_OWORD *)char v24 = v44;
  *((_OWORD *)v24 + 1) = v25;
  *((_WORD *)v24 + 16) = v23;
  char v47 = 4;
  sub_20A991BAC();
  sub_20AB86B80();
  v18[v20[8]] = v44;
  char v47 = 5;
  sub_20A99A9A0();
  sub_20AB86B80();
  uint64_t v26 = *((void *)&v44 + 1);
  __int16 v27 = &v18[v20[9]];
  *(void *)__int16 v27 = v44;
  *((void *)v27 + 1) = v26;
  char v47 = 6;
  sub_20A99ABF0();
  sub_20AB86B80();
  *(void *)&v18[v20[10]] = v44;
  char v47 = 7;
  sub_20A99AE40();
  sub_20AB86B10();
  char v28 = BYTE4(v44);
  char v29 = &v18[v20[11]];
  *(_DWORD *)char v29 = v44;
  v29[4] = v28;
  char v47 = 8;
  sub_20A99B090();
  sub_20AB86B10();
  v18[v20[12]] = v44;
  char v47 = 9;
  sub_20A99B2E0();
  sub_20AB86B80();
  char v30 = BYTE1(v44);
  char v31 = BYTE2(v44);
  char v32 = &v43[v42[13]];
  *char v32 = v44;
  v32[1] = v30;
  v32[2] = v31;
  char v47 = 10;
  sub_20A99B5AC();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v37);
  uint64_t v33 = (uint64_t)v43;
  v43[v42[14]] = v44;
  sub_20A99D210(v33, v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_20A99D274(v33);
}

void sub_20A99D168(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A99C8AC();
    unint64_t v7 = a3(a1, &type metadata for BannerAdImpressionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A99D1CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A99D210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A99D274(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BannerAdImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A99D2D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BannerAdImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A99D2E8(void *a1)
{
  return BannerAdImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A99D300@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52160, MEMORY[0x263F24D18], (uint64_t)qword_26AC52148, a1);
}

uint64_t sub_20A99D338@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC52180, MEMORY[0x263F24DD8], (uint64_t)qword_26AC52168, a1);
}

uint64_t sub_20A99D370@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653290, MEMORY[0x263F24DE8], (uint64_t)qword_267653C90, a1);
}

uint64_t sub_20A99D3A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  __int16 v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104);

  return v27(v25, v11, v26);
}

uint64_t *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v48 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v48 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    long long v45 = (char *)a1 + v44;
    __int16 v46 = (char *)a2 + v44;
    sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);

  return v25(v23, v24);
}

uint64_t initializeWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A99F868);
}

uint64_t sub_20A99F868(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_22:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_21:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_22;
  }
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a3[14];

  return v24(v26, a2, v25);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A99FE20);
}

uint64_t sub_20A99FE20(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_22:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_21:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_22;
  }
  sub_20A99B530(0, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_21;
  }
  sub_20A99B530(0, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  uint64_t v27 = v25;
  uint64_t v28 = a1 + a4[14];

  return v26(v28, a2, a2, v27);
}

void sub_20A9A03D0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A99B530(319, &qword_26AC4E0A0, (void (*)(void))sub_20A99A400, (void (*)(void))sub_20A99A454);
      if (v2 <= 0x3F)
      {
        sub_20A99B530(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F)
        {
          sub_20A99B530(319, &qword_26AC520F0, (void (*)(void))sub_20A991BAC, (void (*)(void))sub_20A991C04);
          if (v4 <= 0x3F)
          {
            sub_20A99B530(319, &qword_26AC4E600, (void (*)(void))sub_20A99A9A0, (void (*)(void))sub_20A99A9F4);
            if (v5 <= 0x3F)
            {
              sub_20A99B530(319, &qword_26AC4E598, (void (*)(void))sub_20A99ABF0, (void (*)(void))sub_20A99AC44);
              if (v6 <= 0x3F)
              {
                sub_20A99B530(319, &qword_26AC4E5F0, (void (*)(void))sub_20A99AE40, (void (*)(void))sub_20A99AE94);
                if (v7 <= 0x3F)
                {
                  sub_20A99B530(319, &qword_26AC4E590, (void (*)(void))sub_20A99B090, (void (*)(void))sub_20A99B0E4);
                  if (v8 <= 0x3F)
                  {
                    sub_20A99B530(319, &qword_26AC520F8, (void (*)(void))sub_20A99B2E0, (void (*)(void))sub_20A99B334);
                    if (v9 <= 0x3F)
                    {
                      sub_20A99B530(319, &qword_26AC4E5A8, (void (*)(void))sub_20A99B5AC, (void (*)(void))sub_20A99B600);
                      if (v10 <= 0x3F) {
                        swift_initStructMetadata();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for BannerAdImpressionEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      uint64_t v20 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v20;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v22;
      *((_WORD *)v17 + 16) = *((_WORD *)v18 + 16);
    }
    uint64_t v23 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = a3[11];
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    uint64_t v30 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    *(_WORD *)uint64_t v31 = *(_WORD *)v32;
    v31[2] = v32[2];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = v18;
    uint64_t v19 = *(void *)(v17 + 24);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = v19;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v20;
    *(_WORD *)(v16 + 32) = *(_WORD *)(v17 + 32);
  }
  uint64_t v21 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  long long v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *long long v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(unsigned char *)(v26 + 4) = *(unsigned char *)(v27 + 4);
  uint64_t v28 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_WORD *)uint64_t v29 = *(_WORD *)v30;
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (long long *)(a2 + v14);
  uint64_t v17 = *(void *)(a1 + v14 + 8);
  uint64_t v18 = *(void *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = *((void *)v16 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 16) = *((void *)v16 + 2);
      *(void *)(v15 + 24) = *((void *)v16 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 32) = *((unsigned char *)v16 + 32);
      *(unsigned char *)(v15 + 33) = *((unsigned char *)v16 + 33);
    }
    else
    {
      sub_20A9A0F9C(v15);
      __int16 v19 = *((_WORD *)v16 + 16);
      long long v20 = v16[1];
      *(_OWORD *)uint64_t v15 = *v16;
      *(_OWORD *)(v15 + 16) = v20;
      *(_WORD *)(v15 + 32) = v19;
    }
  }
  else if (v18)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = *((void *)v16 + 1);
    *(void *)(v15 + 16) = *((void *)v16 + 2);
    *(void *)(v15 + 24) = *((void *)v16 + 3);
    *(unsigned char *)(v15 + 32) = *((unsigned char *)v16 + 32);
    *(unsigned char *)(v15 + 33) = *((unsigned char *)v16 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *v16;
    long long v22 = v16[1];
    *(_WORD *)(v15 + 32) = *((_WORD *)v16 + 16);
    *(_OWORD *)uint64_t v15 = v21;
    *(_OWORD *)(v15 + 16) = v22;
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v23 = a3[9];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[10];
  uint64_t v27 = (_DWORD *)(a1 + v26);
  uint64_t v28 = (_DWORD *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (int *)(a2 + v29);
  int v32 = *v31;
  *(unsigned char *)(v30 + 4) = *((unsigned char *)v31 + 4);
  *(_DWORD *)uint64_t v30 = v32;
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v33 = a3[13];
  uint64_t v34 = (unsigned char *)(a1 + v33);
  uint64_t v35 = (unsigned char *)(a2 + v33);
  *uint64_t v34 = *v35;
  v34[1] = v35[1];
  v34[2] = v35[2];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_20A9A0F9C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_WORD *)(v12 + 32) = *(_WORD *)(v13 + 32);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  uint64_t v19 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_WORD *)uint64_t v20 = *(_WORD *)v21;
  *(unsigned char *)(v20 + 2) = *(unsigned char *)(v21 + 2);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (!*(void *)(a1 + v16 + 8)) {
    goto LABEL_5;
  }
  uint64_t v19 = *(void *)(v18 + 8);
  if (!v19)
  {
    sub_20A9A0F9C(v17);
LABEL_5:
    long long v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
    goto LABEL_6;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  *(unsigned char *)(v17 + 33) = *(unsigned char *)(v18 + 33);
LABEL_6:
  uint64_t v22 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(unsigned char *)(v28 + 4) = *(unsigned char *)(v29 + 4);
  uint64_t v30 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v31 = (unsigned char *)(a1 + v30);
  int v32 = (unsigned char *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  v31[2] = v32[2];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t getEnumTagSinglePayload for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9A1310);
}

uint64_t sub_20A9A1310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9A143C);
}

uint64_t sub_20A9A143C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9A1550()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BannerAdImpressionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9A1734);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdImpressionEvent.Model.CodingKeys()
{
  return &type metadata for BannerAdImpressionEvent.Model.CodingKeys;
}

unint64_t sub_20A9A1770()
{
  unint64_t result = qword_267653CD0;
  if (!qword_267653CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CD0);
  }
  return result;
}

unint64_t sub_20A9A17C8()
{
  unint64_t result = qword_267653CD8;
  if (!qword_267653CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CD8);
  }
  return result;
}

unint64_t sub_20A9A1820()
{
  unint64_t result = qword_267653CE0;
  if (!qword_267653CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CE0);
  }
  return result;
}

uint64_t sub_20A9A1874(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6144726573556461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4465746174536461 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6563616C506461 && a2 == 0xEF61746144746E65 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6144657A69536461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x697469736F506461 && a2 == 0xEE00617461446E6FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6144646565466461 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x644172656E6E6162 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x4470756F72476461 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

StocksAnalytics::BadgeType_optional __swiftcall BadgeType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t BadgeType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1701736302;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x79726F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9A1E8C(unsigned __int8 *a1, char *a2)
{
  return sub_20AA33E58(*a1, *a2);
}

unint64_t sub_20A9A1E9C()
{
  unint64_t result = qword_267653CE8;
  if (!qword_267653CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CE8);
  }
  return result;
}

uint64_t sub_20A9A1EF0()
{
  return sub_20AB4C87C();
}

uint64_t sub_20A9A1EF8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9A1FB4()
{
  return sub_20AB4F10C();
}

StocksAnalytics::BadgeType_optional sub_20A9A1FBC(Swift::String *a1)
{
  return BadgeType.init(rawValue:)(*a1);
}

void sub_20A9A1FC8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1701736302;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000012;
      a1[1] = 0x800000020ABA64F0;
      break;
    case 3:
      *a1 = 0x79726F7473;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A9A205C()
{
  return sub_20AB86750();
}

uint64_t sub_20A9A20BC()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for BadgeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9A21D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BadgeType()
{
  return &type metadata for BadgeType;
}

unint64_t sub_20A9A2210()
{
  unint64_t result = qword_26AC515A0;
  if (!qword_26AC515A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515A0);
  }
  return result;
}

void __swiftcall ReferralData.init(originatingCampaignID:originatingCampaignType:originatingCreativeID:referringApplication:referringInboundUrl:)(StocksAnalytics::ReferralData *__return_ptr retstr, Swift::String_optional originatingCampaignID, Swift::String_optional originatingCampaignType, Swift::String_optional originatingCreativeID, Swift::String referringApplication, Swift::String referringInboundUrl)
{
  retstr->originatingCampaignID = originatingCampaignID;
  retstr->originatingCampaignType = originatingCampaignType;
  retstr->originatingCreativeID = originatingCreativeID;
  retstr->referringApplication = referringApplication;
  retstr->referringInboundUrl = referringInboundUrl;
}

uint64_t static ReferralData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ReferralData.originatingCampaignID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCampaignID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ReferralData.originatingCampaignID.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.originatingCampaignType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCampaignType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ReferralData.originatingCampaignType.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.originatingCreativeID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.originatingCreativeID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ReferralData.originatingCreativeID.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringApplication.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringApplication.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ReferralData.referringApplication.modify())()
{
  return nullsub_1;
}

uint64_t ReferralData.referringInboundUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReferralData.referringInboundUrl.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ReferralData.referringInboundUrl.modify())()
{
  return nullsub_1;
}

unint64_t sub_20A9A2530(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A9A25C8()
{
  return sub_20A9A2530(*v0);
}

uint64_t sub_20A9A25D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9A3328(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9A25F8(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_20A9A2604(uint64_t a1)
{
  unint64_t v2 = sub_20A9A28B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9A2640(uint64_t a1)
{
  unint64_t v2 = sub_20A9A28B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReferralData.encode(to:)(void *a1)
{
  sub_20A9A2CF4(0, &qword_26AC51850, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v14 - v6;
  uint64_t v8 = v1[2];
  v14[7] = v1[3];
  v14[8] = v8;
  uint64_t v9 = v1[4];
  v14[5] = v1[5];
  v14[6] = v9;
  uint64_t v10 = v1[6];
  v14[3] = v1[7];
  v14[4] = v10;
  uint64_t v11 = v1[8];
  v14[1] = v1[9];
  v14[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A28B4();
  sub_20AB86DC0();
  char v19 = 0;
  uint64_t v12 = v14[9];
  sub_20AB86BC0();
  if (!v12)
  {
    char v18 = 1;
    sub_20AB86BC0();
    char v17 = 2;
    sub_20AB86BC0();
    char v16 = 3;
    sub_20AB86C10();
    char v15 = 4;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9A28B4()
{
  unint64_t result = qword_26AC4ECF8;
  if (!qword_26AC4ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECF8);
  }
  return result;
}

uint64_t ReferralData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A9A2CF4(0, &qword_267653CF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A28B4();
  sub_20AB86DA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v39 = 0;
    uint64_t v10 = sub_20AB86AF0();
    uint64_t v13 = v12;
    uint64_t v34 = v10;
    char v38 = 1;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_20AB86AF0();
    uint64_t v16 = v15;
    uint64_t v32 = v14;
    uint64_t v33 = a2;
    char v37 = 2;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_20AB86AF0();
    uint64_t v19 = v18;
    uint64_t v31 = v17;
    char v36 = 3;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_20AB86B40();
    uint64_t v30 = v20;
    char v35 = 4;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_20AB86B40();
    uint64_t v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v28 = v21;
    v24(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v33;
    *uint64_t v33 = v34;
    v25[1] = v13;
    v25[2] = v32;
    v25[3] = v16;
    uint64_t v26 = v30;
    v25[4] = v31;
    v25[5] = v19;
    v25[6] = v29;
    v25[7] = v26;
    v25[8] = v28;
    v25[9] = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20A9A2CF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9A28B4();
    unint64_t v7 = a3(a1, &type metadata for ReferralData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9A2D5C()
{
  unint64_t result = qword_26AC4ED20;
  if (!qword_26AC4ED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ED20);
  }
  return result;
}

unint64_t sub_20A9A2DB4()
{
  unint64_t result = qword_26AC4ED18;
  if (!qword_26AC4ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ED18);
  }
  return result;
}

uint64_t sub_20A9A2E08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ReferralData.init(from:)(a1, a2);
}

uint64_t sub_20A9A2E20(void *a1)
{
  return ReferralData.encode(to:)(a1);
}

uint64_t destroy for ReferralData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ReferralData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ReferralData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

void *assignWithTake for ReferralData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReferralData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReferralData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData()
{
  return &type metadata for ReferralData;
}

unsigned char *storeEnumTagSinglePayload for ReferralData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9A31E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReferralData.CodingKeys()
{
  return &type metadata for ReferralData.CodingKeys;
}

unint64_t sub_20A9A3224()
{
  unint64_t result = qword_267653CF8;
  if (!qword_267653CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653CF8);
  }
  return result;
}

unint64_t sub_20A9A327C()
{
  unint64_t result = qword_26AC4ED08;
  if (!qword_26AC4ED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ED08);
  }
  return result;
}

unint64_t sub_20A9A32D4()
{
  unint64_t result = qword_26AC4ED00;
  if (!qword_26AC4ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ED00);
  }
  return result;
}

uint64_t sub_20A9A3328(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7340 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000020ABA7360 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7380 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA73A0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA73C0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20A9A3518(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653D00, MEMORY[0x263F24D10]);
}

uint64_t static SearchResultSelectEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653298, MEMORY[0x263F24D18], (uint64_t)qword_267653D00, a1);
}

uint64_t static SearchResultSelectEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9A3580(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653D18, MEMORY[0x263F24DC8]);
}

uint64_t static SearchResultSelectEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532A0, MEMORY[0x263F24DD8], (uint64_t)qword_267653D18, a1);
}

uint64_t sub_20A9A35E0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653D30);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653D30);
  return sub_20AB85D30();
}

uint64_t static SearchResultSelectEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532A8, MEMORY[0x263F24DE8], (uint64_t)qword_267653D30, a1);
}

uint64_t SearchResultSelectEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SearchResultSelectEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SearchResultSelectEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SearchResultSelectEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653DA8);
}

unint64_t sub_20A9A37D4()
{
  unint64_t result = qword_267653D50;
  if (!qword_267653D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D50);
  }
  return result;
}

unint64_t sub_20A9A3828()
{
  unint64_t result = qword_267653D58;
  if (!qword_267653D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D58);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 20);
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9A3A24()
{
  unint64_t result = qword_267653D68;
  if (!qword_267653D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D68);
  }
  return result;
}

unint64_t sub_20A9A3A78()
{
  unint64_t result = qword_267653D70;
  if (!qword_267653D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D70);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchSelectionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 24);
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchSelectionData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.searchResultsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9A3C74(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A9A3CF0()
{
  unint64_t result = qword_267653D80;
  if (!qword_267653D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D80);
  }
  return result;
}

unint64_t sub_20A9A3D44()
{
  unint64_t result = qword_267653D88;
  if (!qword_267653D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D88);
  }
  return result;
}

uint64_t SearchResultSelectEvent.searchResultsData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SearchResultSelectEvent(0) + 28);
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SearchResultSelectEvent.searchResultsData.modify())()
{
  return nullsub_1;
}

uint64_t SearchResultSelectEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SearchResultSelectEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t SearchResultSelectEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SearchResultSelectEvent.Model.searchData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 20));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SearchResultSelectEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653DB8);
}

uint64_t SearchResultSelectEvent.Model.searchSelectionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SearchResultSelectEvent.Model.searchResultsData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for SearchResultSelectEvent.Model(0) + 28));

  return swift_bridgeObjectRetain();
}

int *SearchResultSelectEvent.Model.init(eventData:searchData:searchSelectionData:searchResultsData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  char v11 = *((unsigned char *)a3 + 16);
  uint64_t v12 = *a4;
  uint64_t v13 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(a5, a1, v13);
  unint64_t result = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  uint64_t v15 = (void *)(a5 + result[5]);
  *uint64_t v15 = v7;
  v15[1] = v8;
  uint64_t v16 = a5 + result[6];
  *(void *)uint64_t v16 = v9;
  *(void *)(v16 + 8) = v10;
  *(unsigned char *)(v16 + 16) = v11;
  *(void *)(a5 + result[7]) = v12;
  return result;
}

unint64_t sub_20A9A4254()
{
  unint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6144686372616573;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9A42F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9A6A6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9A4320(uint64_t a1)
{
  unint64_t v2 = sub_20A9A4600();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9A435C(uint64_t a1)
{
  unint64_t v2 = sub_20A9A4600();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchResultSelectEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9A4AC0(0, &qword_267653D90, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A4600();
  sub_20AB86DC0();
  LOBYTE(v19) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
    char v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v19 = v13;
    uint64_t v20 = v12;
    char v22 = 1;
    sub_20A9A3828();
    sub_20AB86C50();
    uint64_t v14 = (uint64_t *)(v3 + v10[6]);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    LOBYTE(v14) = *((unsigned char *)v14 + 16);
    uint64_t v19 = v15;
    uint64_t v20 = v16;
    char v21 = (char)v14;
    char v22 = 2;
    sub_20A9A3A78();
    sub_20AB86C50();
    uint64_t v19 = *(void *)(v3 + v10[7]);
    char v22 = 3;
    sub_20A9A3D44();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9A4600()
{
  unint64_t result = qword_267653D98;
  if (!qword_267653D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653D98);
  }
  return result;
}

uint64_t SearchResultSelectEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v25 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9A4AC0(0, &qword_267653DA0, MEMORY[0x263F8E040]);
  uint64_t v27 = v6;
  uint64_t v24 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = (int *)type metadata accessor for SearchResultSelectEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A4600();
  uint64_t v28 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v25;
  LOBYTE(v29) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v26;
  uint64_t v15 = v27;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v32 = 1;
  sub_20A9A37D4();
  sub_20AB86B80();
  uint64_t v16 = v30;
  uint64_t v17 = (void *)(v12 + v9[5]);
  *uint64_t v17 = v29;
  v17[1] = v16;
  char v32 = 2;
  sub_20A9A3A24();
  sub_20AB86B80();
  uint64_t v18 = v30;
  char v19 = v31;
  uint64_t v20 = v12 + v9[6];
  *(void *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = v18;
  *(unsigned char *)(v20 + 16) = v19;
  char v32 = 3;
  sub_20A9A3CF0();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v15);
  *(void *)(v12 + v9[7]) = v29;
  sub_20A9A4B24(v12, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_20A9A4B88(v12);
}

void sub_20A9A4AC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9A4600();
    unint64_t v7 = a3(a1, &type metadata for SearchResultSelectEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9A4B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9A4B88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultSelectEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9A4BE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SearchResultSelectEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9A4BFC(void *a1)
{
  return SearchResultSelectEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9A4C14@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653298, MEMORY[0x263F24D18], (uint64_t)qword_267653D00, a1);
}

uint64_t sub_20A9A4C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532A0, MEMORY[0x263F24DD8], (uint64_t)qword_267653D18, a1);
}

uint64_t sub_20A9A4C84@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532A8, MEMORY[0x263F24DE8], (uint64_t)qword_267653D30, a1);
}

uint64_t sub_20A9A4CBC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9A5AC4);
}

uint64_t sub_20A9A5AC4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9A5D18);
}

uint64_t sub_20A9A5D18(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9A3C74(0, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20A9A3C74(0, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20A9A3C74(0, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20A9A5F64()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9A3C74(319, (unint64_t *)&qword_267653D48, (void (*)(void))sub_20A9A37D4, (void (*)(void))sub_20A9A3828);
    if (v1 <= 0x3F)
    {
      sub_20A9A3C74(319, &qword_267653D60, (void (*)(void))sub_20A9A3A24, (void (*)(void))sub_20A9A3A78);
      if (v2 <= 0x3F)
      {
        sub_20A9A3C74(319, &qword_267653D78, (void (*)(void))sub_20A9A3CF0, (void (*)(void))sub_20A9A3D44);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SearchResultSelectEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    v13[16] = v14[16];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SearchResultSelectEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9A661C);
}

uint64_t sub_20A9A661C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SearchResultSelectEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9A66F4);
}

uint64_t sub_20A9A66F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A9A67B4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchResultSelectEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9A692CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultSelectEvent.Model.CodingKeys()
{
  return &type metadata for SearchResultSelectEvent.Model.CodingKeys;
}

unint64_t sub_20A9A6968()
{
  unint64_t result = qword_267653DC8;
  if (!qword_267653DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653DC8);
  }
  return result;
}

unint64_t sub_20A9A69C0()
{
  unint64_t result = qword_267653DD0;
  if (!qword_267653DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653DD0);
  }
  return result;
}

unint64_t sub_20A9A6A18()
{
  unint64_t result = qword_267653DD8;
  if (!qword_267653DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653DD8);
  }
  return result;
}

uint64_t sub_20A9A6A6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6144686372616573 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA73E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7400)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

StocksAnalytics::ResultType_optional __swiftcall ResultType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t ResultType.rawValue.getter()
{
  uint64_t v1 = 0x73736563637573;
  if (*v0 != 1) {
    uint64_t v1 = 1818845542;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20A9A6CE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA398A0(*a1, *a2);
}

unint64_t sub_20A9A6CF4()
{
  unint64_t result = qword_267653DE0;
  if (!qword_267653DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653DE0);
  }
  return result;
}

uint64_t sub_20A9A6D48()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9A6DE4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9A6E6C()
{
  return sub_20AB86D80();
}

StocksAnalytics::ResultType_optional sub_20A9A6F04(Swift::String *a1)
{
  return ResultType.init(rawValue:)(*a1);
}

void sub_20A9A6F10(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73736563637573;
  if (v2 != 1)
  {
    uint64_t v5 = 1818845542;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A9A6F68()
{
  return sub_20AB86750();
}

uint64_t sub_20A9A6FC8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ResultType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9A70E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResultType()
{
  return &type metadata for ResultType;
}

unint64_t sub_20A9A711C()
{
  unint64_t result = qword_267653DE8;
  if (!qword_267653DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653DE8);
  }
  return result;
}

uint64_t sub_20A9A7170(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653DF0, MEMORY[0x263F24D10]);
}

uint64_t static ViewCalendarEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532B0, MEMORY[0x263F24D18], (uint64_t)qword_267653DF0, a1);
}

uint64_t static ViewCalendarEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9A71D8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653E08, MEMORY[0x263F24DC8]);
}

uint64_t static ViewCalendarEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532B8, MEMORY[0x263F24DD8], (uint64_t)qword_267653E08, a1);
}

uint64_t sub_20A9A7238()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653E20);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653E20);
  return sub_20AB85D30();
}

uint64_t static ViewCalendarEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532C0, MEMORY[0x263F24DE8], (uint64_t)qword_267653E20, a1);
}

uint64_t ViewCalendarEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ViewCalendarEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ViewCalendarEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ViewCalendarEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 20);
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ViewCalendarEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653E50);
}

uint64_t ViewCalendarEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 20);
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ViewCalendarEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 24);
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ViewCalendarEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 24);
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ViewCalendarEvent.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 28);
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9A777C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ViewCalendarEvent.symbolData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent(0) + 28);
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ViewCalendarEvent.symbolData.modify())()
{
  return nullsub_1;
}

uint64_t ViewCalendarEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ViewCalendarEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t ViewCalendarEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ViewCalendarEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ViewCalendarEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653E60);
}

uint64_t ViewCalendarEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t ViewCalendarEvent.Model.symbolData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ViewCalendarEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

int *ViewCalendarEvent.Model.init(eventData:feedData:viewData:symbolData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  char v7 = *a2;
  uint64_t v8 = *((void *)a2 + 1);
  uint64_t v9 = *((void *)a2 + 2);
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  __int16 v12 = *((_WORD *)a3 + 8);
  uint64_t v13 = *a4;
  uint64_t v14 = a4[1];
  char v22 = *((unsigned char *)a4 + 16);
  uint64_t v20 = a4[4];
  uint64_t v21 = a4[3];
  uint64_t v15 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a5, a1, v15);
  unint64_t result = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
  uint64_t v17 = a5 + result[5];
  *(unsigned char *)uint64_t v17 = v7;
  *(void *)(v17 + 8) = v8;
  *(void *)(v17 + 16) = v9;
  uint64_t v18 = a5 + result[6];
  *(void *)uint64_t v18 = v10;
  *(void *)(v18 + 8) = v11;
  *(_WORD *)(v18 + 16) = v12;
  uint64_t v19 = a5 + result[7];
  *(void *)uint64_t v19 = v13;
  *(void *)(v19 + 8) = v14;
  *(unsigned char *)(v19 + 16) = v22;
  *(void *)(v19 + 24) = v21;
  *(void *)(v19 + 32) = v20;
  return result;
}

uint64_t sub_20A9A7D1C()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 1684366694;
      goto LABEL_4;
    case 2:
      unsigned int v2 = 2003134838;
LABEL_4:
      uint64_t result = v2 | 0x6174614400000000;
      break;
    case 3:
      uint64_t result = 0x61446C6F626D7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9A7DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9AA640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9A7DD4(uint64_t a1)
{
  unint64_t v2 = sub_20A9A80D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9A7E10(uint64_t a1)
{
  unint64_t v2 = sub_20A9A80D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ViewCalendarEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9A85AC(0, &qword_267653E38, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A80D0();
  sub_20AB86DC0();
  LOBYTE(v25) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
    uint64_t v11 = (char *)(v3 + v10[5]);
    char v12 = *v11;
    uint64_t v14 = *((void *)v11 + 1);
    uint64_t v13 = *((void *)v11 + 2);
    LOBYTE(v25) = v12;
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    char v30 = 1;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v15 = (uint64_t *)(v3 + v10[6]);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    LOWORD(v15) = *((_WORD *)v15 + 8);
    uint64_t v25 = v16;
    uint64_t v26 = v17;
    LOWORD(v27) = (_WORD)v15;
    char v30 = 2;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v18 = (uint64_t *)(v3 + v10[7]);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    char v21 = *((unsigned char *)v18 + 16);
    uint64_t v23 = v18[3];
    uint64_t v22 = v18[4];
    uint64_t v25 = v19;
    uint64_t v26 = v20;
    LOBYTE(v27) = v21;
    uint64_t v28 = v23;
    uint64_t v29 = v22;
    char v30 = 3;
    sub_20A97C61C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9A80D0()
{
  unint64_t result = qword_267653E40;
  if (!qword_267653E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E40);
  }
  return result;
}

uint64_t ViewCalendarEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9A85AC(0, &qword_267653E48, MEMORY[0x263F8E040]);
  uint64_t v33 = v6;
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = (int *)type metadata accessor for ViewCalendarEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9A80D0();
  uint64_t v34 = v8;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v28 = a1;
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v31;
  LOBYTE(v35) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v32;
  uint64_t v15 = v33;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v14, v4);
  char v40 = 1;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v16 = v36;
  uint64_t v17 = v37;
  uint64_t v18 = v12 + v9[5];
  *(unsigned char *)uint64_t v18 = v35;
  *(void *)(v18 + 8) = v16;
  *(void *)(v18 + 16) = v17;
  char v40 = 2;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v19 = v36;
  __int16 v20 = v37;
  uint64_t v21 = v12 + v9[6];
  *(void *)uint64_t v21 = v35;
  *(void *)(v21 + 8) = v19;
  *(_WORD *)(v21 + 16) = v20;
  char v40 = 3;
  sub_20A97C5C8();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v34, v15);
  uint64_t v22 = v36;
  char v23 = v37;
  uint64_t v24 = v38;
  uint64_t v25 = v39;
  uint64_t v26 = v12 + v9[7];
  *(void *)uint64_t v26 = v35;
  *(void *)(v26 + 8) = v22;
  *(unsigned char *)(v26 + 16) = v23;
  *(void *)(v26 + 24) = v24;
  *(void *)(v26 + 32) = v25;
  sub_20A9A8610(v12, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return sub_20A9A8674(v12);
}

void sub_20A9A85AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9A80D0();
    unint64_t v7 = a3(a1, &type metadata for ViewCalendarEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9A8610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9A8674(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewCalendarEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9A86D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewCalendarEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9A86E8(void *a1)
{
  return ViewCalendarEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9A8700@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532B0, MEMORY[0x263F24D18], (uint64_t)qword_267653DF0, a1);
}

uint64_t sub_20A9A8738@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532B8, MEMORY[0x263F24DD8], (uint64_t)qword_267653E08, a1);
}

uint64_t sub_20A9A8770@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532C0, MEMORY[0x263F24DE8], (uint64_t)qword_267653E20, a1);
}

uint64_t sub_20A9A87A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewCalendarEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ViewCalendarEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for ViewCalendarEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewCalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9A95B0);
}

uint64_t sub_20A9A95B0(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for ViewCalendarEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9A9804);
}

uint64_t sub_20A9A9804(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9A777C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20A9A777C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20A9A777C(0, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20A9A9A50()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9A777C(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    if (v1 <= 0x3F)
    {
      sub_20A9A777C(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
      if (v2 <= 0x3F)
      {
        sub_20A9A777C(319, &qword_26AC4E5A0, (void (*)(void))sub_20A97C5C8, (void (*)(void))sub_20A97C61C);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ViewCalendarEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    uint64_t v12 = *((void *)v11 + 2);
    *((void *)v10 + 1) = *((void *)v11 + 1);
    *((void *)v10 + 2) = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    *((_WORD *)v13 + 8) = *((_WORD *)v14 + 8);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    uint64_t v20 = *((void *)v18 + 4);
    *((void *)v17 + 3) = *((void *)v18 + 3);
    *((void *)v17 + 4) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ViewCalendarEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  uint64_t v11 = *(void *)(v10 + 16);
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  *(void *)(v9 + 16) = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = *(void *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(void *)(v12 + 8) = v14;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = v18;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 32);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  *(void *)(v16 + 32) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  *(unsigned char *)(v11 + 17) = *(unsigned char *)(v12 + 17);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)(a2 + v13);
  *(void *)(v14 + 8) = *(void *)(a2 + v13 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(void *)(v14 + 24) = *(void *)(v15 + 24);
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = (long long *)(a2 + v7);
  long long v11 = *v10;
  *(void *)(v9 + 16) = *((void *)v10 + 2);
  *(_OWORD *)uint64_t v9 = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  return a1;
}

uint64_t assignWithTake for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)(a2 + v12 + 8);
  *(void *)uint64_t v13 = *(void *)(a2 + v12);
  *(void *)(v13 + 8) = v15;
  swift_bridgeObjectRelease();
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  uint64_t v20 = *(void *)(v18 + 32);
  *(void *)(v17 + 24) = *(void *)(v18 + 24);
  *(void *)(v17 + 32) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9AA1F4);
}

uint64_t sub_20A9AA1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ViewCalendarEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9AA2CC);
}

uint64_t sub_20A9AA2CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A9AA38C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ViewCalendarEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AA500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewCalendarEvent.Model.CodingKeys()
{
  return &type metadata for ViewCalendarEvent.Model.CodingKeys;
}

unint64_t sub_20A9AA53C()
{
  unint64_t result = qword_267653E70;
  if (!qword_267653E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E70);
  }
  return result;
}

unint64_t sub_20A9AA594()
{
  unint64_t result = qword_267653E78;
  if (!qword_267653E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E78);
  }
  return result;
}

unint64_t sub_20A9AA5EC()
{
  unint64_t result = qword_267653E80;
  if (!qword_267653E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E80);
  }
  return result;
}

uint64_t sub_20A9AA640(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x61446C6F626D7973 && a2 == 0xEA00000000006174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t static AudioEngagementData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AudioEngagementData.timePlayed.getter()
{
  return *(void *)v0;
}

uint64_t AudioEngagementData.timePlayed.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*AudioEngagementData.timePlayed.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.deltaTimePlayed.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AudioEngagementData.deltaTimePlayed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*AudioEngagementData.deltaTimePlayed.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.userAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *AudioEngagementData.userAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AudioEngagementData.userAction.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.position.getter()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t AudioEngagementData.position.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*AudioEngagementData.position.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.engagementID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AudioEngagementData.engagementID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AudioEngagementData.engagementID.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.playMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 40);
}

unsigned char *AudioEngagementData.playMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 40) = *result;
  return result;
}

uint64_t (*AudioEngagementData.playMethod.modify())()
{
  return nullsub_1;
}

void AudioEngagementData.listeningSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 41);
}

unsigned char *AudioEngagementData.listeningSource.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 41) = *result;
  return result;
}

uint64_t (*AudioEngagementData.listeningSource.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngagementData.init(timePlayed:deltaTimePlayed:userAction:position:engagementID:playMethod:listeningSource:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  char v9 = *a3;
  char v10 = *a7;
  char v11 = *a8;
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v9;
  *(_DWORD *)(a9 + 20) = a4;
  *(void *)(a9 + 24) = a5;
  *(void *)(a9 + 32) = a6;
  *(unsigned char *)(a9 + 40) = v10;
  *(unsigned char *)(a9 + 41) = v11;
  return result;
}

uint64_t sub_20A9AAA04()
{
  uint64_t result = 0x79616C50656D6974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D695461746C6564;
      break;
    case 2:
      uint64_t result = 0x6974634172657375;
      break;
    case 3:
      uint64_t result = 0x6E6F697469736F70;
      break;
    case 4:
      uint64_t result = 0x656D656761676E65;
      break;
    case 5:
      uint64_t result = 0x6874654D79616C70;
      break;
    case 6:
      uint64_t result = 0x6E696E657473696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9AAB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9AB91C(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9AAB34(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_20A9AAB40(uint64_t a1)
{
  unint64_t v2 = sub_20A9AAE74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9AAB7C(uint64_t a1)
{
  unint64_t v2 = sub_20A9AAE74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioEngagementData.encode(to:)(void *a1)
{
  sub_20A9AB300(0, &qword_267653E88, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v20 = *(void *)(v1 + 8);
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v18 = *(_DWORD *)(v1 + 20);
  int v19 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v9;
  int v15 = *(unsigned __int8 *)(v1 + 40);
  char v10 = *(unsigned char *)(v1 + 41);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AAE74();
  sub_20AB86DC0();
  char v31 = 0;
  uint64_t v11 = v21;
  sub_20AB86C70();
  if (!v11)
  {
    char v12 = v19;
    char v30 = 1;
    sub_20AB86C70();
    char v29 = v12;
    char v28 = 2;
    sub_20A9AAEC8();
    sub_20AB86C50();
    char v27 = 3;
    sub_20AB86C60();
    char v26 = 4;
    sub_20AB86C10();
    char v25 = v15;
    char v24 = 5;
    sub_20A9AAF1C();
    sub_20AB86BE0();
    char v23 = v10;
    char v22 = 6;
    sub_20A9AAF70();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9AAE74()
{
  unint64_t result = qword_267653E90;
  if (!qword_267653E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E90);
  }
  return result;
}

unint64_t sub_20A9AAEC8()
{
  unint64_t result = qword_267653E98;
  if (!qword_267653E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653E98);
  }
  return result;
}

unint64_t sub_20A9AAF1C()
{
  unint64_t result = qword_267653EA0;
  if (!qword_267653EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EA0);
  }
  return result;
}

unint64_t sub_20A9AAF70()
{
  unint64_t result = qword_267653EA8;
  if (!qword_267653EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EA8);
  }
  return result;
}

uint64_t AudioEngagementData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9AB300(0, &qword_267653EB0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AAE74();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v33 = 0;
  uint64_t v10 = sub_20AB86BA0();
  char v32 = 1;
  uint64_t v11 = sub_20AB86BA0();
  char v30 = 2;
  sub_20A9AB364();
  sub_20AB86B80();
  int v23 = v31;
  char v29 = 3;
  int v22 = sub_20AB86B90();
  char v28 = 4;
  uint64_t v12 = sub_20AB86B40();
  uint64_t v14 = v13;
  uint64_t v20 = v12;
  char v26 = 5;
  sub_20A9AB3B8();
  swift_bridgeObjectRetain();
  uint64_t v21 = v14;
  sub_20AB86B10();
  int v19 = v27;
  char v24 = 6;
  sub_20A9AB40C();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v16 = v25;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v23;
  *(_DWORD *)(a2 + 20) = v22;
  uint64_t v17 = v21;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v17;
  *(unsigned char *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 41) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20A9AB300(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9AAE74();
    unint64_t v7 = a3(a1, &type metadata for AudioEngagementData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9AB364()
{
  unint64_t result = qword_267653EB8;
  if (!qword_267653EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EB8);
  }
  return result;
}

unint64_t sub_20A9AB3B8()
{
  unint64_t result = qword_267653EC0;
  if (!qword_267653EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EC0);
  }
  return result;
}

unint64_t sub_20A9AB40C()
{
  unint64_t result = qword_267653EC8;
  if (!qword_267653EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EC8);
  }
  return result;
}

uint64_t sub_20A9AB468@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngagementData.init(from:)(a1, a2);
}

uint64_t sub_20A9AB480(void *a1)
{
  return AudioEngagementData.encode(to:)(a1);
}

uint64_t destroy for AudioEngagementData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AudioEngagementData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngagementData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngagementData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData()
{
  return &type metadata for AudioEngagementData;
}

uint64_t getEnumTagSinglePayload for DeviceOrientation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AB7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementData.CodingKeys()
{
  return &type metadata for AudioEngagementData.CodingKeys;
}

unint64_t sub_20A9AB818()
{
  unint64_t result = qword_267653ED0;
  if (!qword_267653ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653ED0);
  }
  return result;
}

unint64_t sub_20A9AB870()
{
  unint64_t result = qword_267653ED8;
  if (!qword_267653ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653ED8);
  }
  return result;
}

unint64_t sub_20A9AB8C8()
{
  unint64_t result = qword_267653EE0;
  if (!qword_267653EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EE0);
  }
  return result;
}

uint64_t sub_20A9AB91C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D695461746C6564 && a2 == 0xEF646579616C5065 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634172657375 && a2 == 0xEA00000000006E6FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D656761676E65 && a2 == 0xEC0000004449746ELL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6874654D79616C70 && a2 == 0xEA0000000000646FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E696E657473696CLL && a2 == 0xEF656372756F5367)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t Tracker.chain(eventPath:)()
{
  EventPath.rawValue.getter();
  uint64_t v0 = sub_20AB85F70();
  swift_bridgeObjectRelease();
  return v0;
}

StocksAnalytics::AdEngagementType_optional __swiftcall AdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t AdEngagementType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x615472656E6E6162;
      break;
    case 2:
      unint64_t result = 0x616C506F65646976;
      break;
    case 3:
      unint64_t result = 0x7561506F65646976;
      break;
    case 4:
      unint64_t result = 0x7365526F65646976;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x696B536F65646976;
      break;
    case 7:
      unint64_t result = 0x6974737265746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9ABE58(unsigned __int8 *a1, char *a2)
{
  return sub_20AA3799C(*a1, *a2);
}

unint64_t sub_20A9ABE68()
{
  unint64_t result = qword_267653EE8;
  if (!qword_267653EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EE8);
  }
  return result;
}

uint64_t sub_20A9ABEBC()
{
  return sub_20AB4E42C();
}

uint64_t sub_20A9ABEC8()
{
  return sub_20AB4D9BC();
}

uint64_t sub_20A9ABED0()
{
  return sub_20AB4E42C();
}

StocksAnalytics::AdEngagementType_optional sub_20A9ABED8(Swift::String *a1)
{
  return AdEngagementType.init(rawValue:)(*a1);
}

unint64_t sub_20A9ABEE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AdEngagementType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A9ABF0C()
{
  return sub_20AB86750();
}

uint64_t sub_20A9ABF6C()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for SymbolType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AdEngagementType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AC118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdEngagementType()
{
  return &type metadata for AdEngagementType;
}

unint64_t sub_20A9AC150()
{
  unint64_t result = qword_267653EF0;
  if (!qword_267653EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653EF0);
  }
  return result;
}

uint64_t static AdSizeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdSizeData.width.getter()
{
  return *v0;
}

uint64_t AdSizeData.width.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*AdSizeData.width.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.height.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t AdSizeData.height.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*AdSizeData.height.modify())()
{
  return nullsub_1;
}

uint64_t AdSizeData.init(width:height:)@<X0>(uint64_t result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

BOOL sub_20A9AC214(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20A9AC22C()
{
  if (*v0) {
    return 0x746867696568;
  }
  else {
    return 0x6874646977;
  }
}

uint64_t sub_20A9AC260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9AC998(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9AC288(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20A9AC294(uint64_t a1)
{
  unint64_t v2 = sub_20A9AC488();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9AC2D0(uint64_t a1)
{
  unint64_t v2 = sub_20A9AC488();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdSizeData.encode(to:)(void *a1)
{
  sub_20A9AC68C(0, &qword_26AC51A50, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v10 - v7;
  int v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AC488();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C60();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9AC488()
{
  unint64_t result = qword_26AC51A20;
  if (!qword_26AC51A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A20);
  }
  return result;
}

uint64_t AdSizeData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20A9AC68C(0, &qword_267653EF8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AC488();
  sub_20AB86DA0();
  if (!v2)
  {
    char v15 = 0;
    int v10 = sub_20AB86B90();
    char v14 = 1;
    int v12 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9AC68C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9AC488();
    unint64_t v7 = a3(a1, &type metadata for AdSizeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9AC6F8@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return AdSizeData.init(from:)(a1, a2);
}

uint64_t sub_20A9AC710(void *a1)
{
  return AdSizeData.encode(to:)(a1);
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AdSizeData(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AdSizeData(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AdSizeData()
{
  return &type metadata for AdSizeData;
}

unsigned char *storeEnumTagSinglePayload for AdSizeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AC858);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdSizeData.CodingKeys()
{
  return &type metadata for AdSizeData.CodingKeys;
}

unint64_t sub_20A9AC894()
{
  unint64_t result = qword_267653F00;
  if (!qword_267653F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F00);
  }
  return result;
}

unint64_t sub_20A9AC8EC()
{
  unint64_t result = qword_26AC51A30;
  if (!qword_26AC51A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A30);
  }
  return result;
}

unint64_t sub_20A9AC944()
{
  unint64_t result = qword_26AC51A28;
  if (!qword_26AC51A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51A28);
  }
  return result;
}

uint64_t sub_20A9AC998(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::VideoAdLoadState_optional __swiftcall VideoAdLoadState.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t VideoAdLoadState.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6572676F72506E69;
      break;
    case 2:
      unint64_t result = 0x506F547964616572;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x54676E6964616F6CLL;
      break;
    case 5:
      unint64_t result = 0x64656C696166;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9ACBB8(unsigned __int8 *a1, char *a2)
{
  return sub_20AA37508(*a1, *a2);
}

unint64_t sub_20A9ACBC8()
{
  unint64_t result = qword_267653F08;
  if (!qword_267653F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F08);
  }
  return result;
}

uint64_t sub_20A9ACC1C()
{
  return sub_20AB4C950();
}

uint64_t sub_20A9ACC24()
{
  return sub_20AB4D8A4();
}

uint64_t sub_20A9ACC2C()
{
  return sub_20AB4E59C();
}

StocksAnalytics::VideoAdLoadState_optional sub_20A9ACC34(Swift::String *a1)
{
  return VideoAdLoadState.init(rawValue:)(*a1);
}

void sub_20A9ACC40(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007373;
      uint64_t v3 = 0x6572676F72506E69;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x506F547964616572;
      *(void *)(a1 + 8) = 0xEB0000000079616CLL;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000012;
      *(void *)(a1 + 8) = 0x800000020ABA65A0;
      break;
    case 4:
      strcpy((char *)a1, "loadingTimeout");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x64656C696166;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20A9ACD34()
{
  return sub_20AB86750();
}

uint64_t sub_20A9ACD94()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for VideoAdLoadState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9ACEB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdLoadState()
{
  return &type metadata for VideoAdLoadState;
}

unint64_t sub_20A9ACEE8()
{
  unint64_t result = qword_267653F10;
  if (!qword_267653F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F10);
  }
  return result;
}

uint64_t static FeedData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void FeedData.feedType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *FeedData.feedType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*FeedData.feedType.modify())()
{
  return nullsub_1;
}

uint64_t FeedData.feedID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedData.feedID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*FeedData.feedID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::FeedData __swiftcall FeedData.init(feedType:feedID:)(StocksAnalytics::FeedType feedType, Swift::String feedID)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)feedType;
  *(Swift::String *)(v2 + 8) = feedID;
  result.feedID = feedID;
  result.feedType = feedType;
  return result;
}

uint64_t sub_20A9AD014()
{
  if (*v0) {
    return 0x444964656566;
  }
  else {
    return 0x6570795464656566;
  }
}

uint64_t sub_20A9AD04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9AD960(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9AD074(uint64_t a1)
{
  unint64_t v2 = sub_20A9AD288();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9AD0B0(uint64_t a1)
{
  unint64_t v2 = sub_20A9AD288();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedData.encode(to:)(void *a1)
{
  sub_20A9AD500(0, &qword_26AC51948, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  v12[0] = *((void *)v1 + 2);
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AD288();
  sub_20AB86DC0();
  char v15 = v9;
  char v14 = 0;
  sub_20A9AD2DC();
  sub_20AB86C50();
  if (!v2)
  {
    char v13 = 1;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9AD288()
{
  unint64_t result = qword_26AC514B8;
  if (!qword_26AC514B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514B8);
  }
  return result;
}

unint64_t sub_20A9AD2DC()
{
  unint64_t result = qword_26AC514E0;
  if (!qword_26AC514E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514E0);
  }
  return result;
}

uint64_t FeedData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9AD500(0, &qword_26AC517E8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AD288();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    sub_20A9AD564();
    sub_20AB86B80();
    char v10 = v18;
    char v16 = 1;
    uint64_t v12 = sub_20AB86B40();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9AD500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9AD288();
    unint64_t v7 = a3(a1, &type metadata for FeedData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9AD564()
{
  unint64_t result = qword_26AC514F0;
  if (!qword_26AC514F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514F0);
  }
  return result;
}

uint64_t sub_20A9AD5C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedData.init(from:)(a1, a2);
}

uint64_t sub_20A9AD5D8(void *a1)
{
  return FeedData.encode(to:)(a1);
}

uint64_t destroy for FeedData()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15StocksAnalytics8FeedDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedData()
{
  return &type metadata for FeedData;
}

unsigned char *storeEnumTagSinglePayload for FeedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AD820);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedData.CodingKeys()
{
  return &type metadata for FeedData.CodingKeys;
}

unint64_t sub_20A9AD85C()
{
  unint64_t result = qword_267653F18;
  if (!qword_267653F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F18);
  }
  return result;
}

unint64_t sub_20A9AD8B4()
{
  unint64_t result = qword_26AC514C8;
  if (!qword_26AC514C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514C8);
  }
  return result;
}

unint64_t sub_20A9AD90C()
{
  unint64_t result = qword_26AC514C0;
  if (!qword_26AC514C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC514C0);
  }
  return result;
}

uint64_t sub_20A9AD960(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6570795464656566 && a2 == 0xE800000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444964656566 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t dispatch thunk of TimestampJitterFactoryType.makePrevailingJitter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20A9ADA60@<X0>(uint64_t a1@<X8>)
{
  v23[0] = a1;
  uint64_t v2 = sub_20AB85480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85B70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v10 = (void *)((char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (void *)((char *)v23 - v11);
  if (qword_26AC4E440 != -1) {
    swift_once();
  }
  if (sub_20AB85730())
  {
    if (qword_267653630 != -1) {
      swift_once();
    }
    sub_20A9AE0E8();
    sub_20AB856E0();
    int v13 = v24;
    if (qword_267653638 != -1) {
      swift_once();
    }
    sub_20AB856E0();
    uint64_t v14 = v23[2];
    if (qword_267653640 != -1) {
      swift_once();
    }
    sub_20AB856E0();
    if (v13)
    {
      uint64_t v15 = v23[1];
      *uint64_t v12 = v14;
      v12[1] = v15;
      char v16 = (unsigned int *)MEMORY[0x263F24D78];
    }
    else
    {
      char v16 = (unsigned int *)MEMORY[0x263F24D80];
    }
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v12, *v16, v6);
    return (*(uint64_t (**)(void, void *, uint64_t))(v7 + 32))(v23[0], v12, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration, v2);
    char v17 = self;
    if (objc_msgSend(v17, sel_enabledForCurrentLevel_, sub_20AB85420()))
    {
      sub_20AB85400();
      uint64_t v19 = v18;
      sub_20AB85410();
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      *char v10 = v19;
      v10[1] = v21;
      (*(void (**)(void *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x263F24D78], v6);
      return (*(uint64_t (**)(void, void *, uint64_t))(v7 + 32))(v23[0], v10, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (*(uint64_t (**)(void, void, uint64_t))(v7 + 104))(v23[0], *MEMORY[0x263F24D80], v6);
    }
  }
}

uint64_t sub_20A9ADE80()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15StocksAnalytics22TimestampJitterFactory_appConfiguration;
  uint64_t v2 = sub_20AB85480();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t sub_20A9ADF20()
{
  return type metadata accessor for TimestampJitterFactory();
}

uint64_t type metadata accessor for TimestampJitterFactory()
{
  uint64_t result = qword_26AC4E1A8;
  if (!qword_26AC4E1A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A9ADF74()
{
  uint64_t result = sub_20AB85480();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A9AE004@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9ADA60(a1);
}

uint64_t sub_20A9AE028()
{
  return sub_20AB856E0();
}

uint64_t sub_20A9AE058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return MEMORY[0x270F7A888](a1, a2, *v6, a6);
}

uint64_t sub_20A9AE088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return MEMORY[0x270F7A898](a1, a2, a3, *v7, a7);
}

uint64_t sub_20A9AE0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return MEMORY[0x270F7A880](a1, a2, a3, a4, *v8, a8);
}

unint64_t sub_20A9AE0E8()
{
  unint64_t result = qword_267653F20;
  if (!qword_267653F20)
  {
    type metadata accessor for TimestampJitterFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F20);
  }
  return result;
}

uint64_t static ANFComponentData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ANFComponentData.metadata.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ANFComponentData.metadata.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ANFComponentData.metadata.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ANFComponentData __swiftcall ANFComponentData.init(metadata:)(StocksAnalytics::ANFComponentData metadata)
{
  *uint64_t v1 = metadata;
  return metadata;
}

uint64_t sub_20A9AE1D8()
{
  return 0x617461646174656DLL;
}

uint64_t sub_20A9AE1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A9AE288(uint64_t a1)
{
  unint64_t v2 = sub_20A9AE44C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9AE2C4(uint64_t a1)
{
  unint64_t v2 = sub_20A9AE44C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ANFComponentData.encode(to:)(void *a1)
{
  sub_20A9AE624(0, &qword_267653F28, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AE44C();
  sub_20AB86DC0();
  sub_20AB86BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A9AE44C()
{
  unint64_t result = qword_267653F30;
  if (!qword_267653F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F30);
  }
  return result;
}

uint64_t ANFComponentData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A9AE624(0, &qword_267653F38, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AE44C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86AF0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9AE624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9AE44C();
    unint64_t v7 = a3(a1, &type metadata for ANFComponentData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9AE68C()
{
  unint64_t result = qword_26AC4F390;
  if (!qword_26AC4F390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F390);
  }
  return result;
}

unint64_t sub_20A9AE6E4()
{
  unint64_t result = qword_26AC4F388;
  if (!qword_26AC4F388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F388);
  }
  return result;
}

uint64_t sub_20A9AE738@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ANFComponentData.init(from:)(a1, a2);
}

uint64_t sub_20A9AE750(void *a1)
{
  sub_20A9AE624(0, &qword_267653F28, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AE44C();
  sub_20AB86DC0();
  sub_20AB86BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *initializeBufferWithCopyOfBuffer for IssueData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ViewData()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for IssueData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for IssueData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ANFComponentData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ANFComponentData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentData()
{
  return &type metadata for ANFComponentData;
}

unsigned char *storeEnumTagSinglePayload for ANFComponentData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9AEAA4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ANFComponentData.CodingKeys()
{
  return &type metadata for ANFComponentData.CodingKeys;
}

unint64_t sub_20A9AEAE0()
{
  unint64_t result = qword_267653F40;
  if (!qword_267653F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F40);
  }
  return result;
}

unint64_t sub_20A9AEB38()
{
  unint64_t result = qword_267653F48;
  if (!qword_267653F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F48);
  }
  return result;
}

unint64_t sub_20A9AEB90()
{
  unint64_t result = qword_267653F50;
  if (!qword_267653F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F50);
  }
  return result;
}

StocksAnalytics::AudioControlType_optional __swiftcall AudioControlType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AudioControlType.rawValue.getter()
{
  uint64_t v1 = 0x6574614C79616C70;
  if (*v0 != 1) {
    uint64_t v1 = 0x7478654E79616C70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20A9AECB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA37850(*a1, *a2);
}

unint64_t sub_20A9AECC8()
{
  unint64_t result = qword_267653F58;
  if (!qword_267653F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F58);
  }
  return result;
}

uint64_t sub_20A9AED1C()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9AEDD8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9AEE80()
{
  return sub_20AB86D80();
}

StocksAnalytics::AudioControlType_optional sub_20A9AEF38(Swift::String *a1)
{
  return AudioControlType.init(rawValue:)(*a1);
}

void sub_20A9AEF44(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEF7377654E6E4972;
  uint64_t v5 = 0x6574614C79616C70;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7478654E79616C70;
    unint64_t v4 = 0xEE007377654E6E49;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A9AEFBC()
{
  return sub_20AB86750();
}

uint64_t sub_20A9AF01C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AudioControlType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AF138);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioControlType()
{
  return &type metadata for AudioControlType;
}

unint64_t sub_20A9AF170()
{
  unint64_t result = qword_267653F60;
  if (!qword_267653F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F60);
  }
  return result;
}

StocksAnalytics::ICloudAccountState_optional __swiftcall ICloudAccountState.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t ICloudAccountState.rawValue.getter()
{
  uint64_t v1 = 0x6E49646567676F6CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x754F646567676F6CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20A9AF280(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA36BFC(*a1, *a2);
}

unint64_t sub_20A9AF290()
{
  unint64_t result = qword_267653F68;
  if (!qword_267653F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653F68);
  }
  return result;
}

uint64_t sub_20A9AF2E4()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9AF38C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9AF420()
{
  return sub_20AB86D80();
}

StocksAnalytics::ICloudAccountState_optional sub_20A9AF4C4(Swift::String *a1)
{
  return ICloudAccountState.init(rawValue:)(*a1);
}

void sub_20A9AF4D0(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x6E49646567676F6CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x754F646567676F6CLL;
    unint64_t v4 = 0xE900000000000074;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A9AF534()
{
  return sub_20AB86750();
}

uint64_t sub_20A9AF594()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ICloudAccountState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9AF6B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ICloudAccountState()
{
  return &type metadata for ICloudAccountState;
}

unint64_t sub_20A9AF6E8()
{
  unint64_t result = qword_26AC4FBB0;
  if (!qword_26AC4FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FBB0);
  }
  return result;
}

uint64_t sub_20A9AF73C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267653F70, MEMORY[0x263F24D10]);
}

uint64_t static ResetUserIDEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532C8, MEMORY[0x263F24D18], (uint64_t)qword_267653F70, a1);
}

uint64_t static ResetUserIDEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9AF7A4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267653F88, MEMORY[0x263F24DC8]);
}

uint64_t static ResetUserIDEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532D0, MEMORY[0x263F24DD8], (uint64_t)qword_267653F88, a1);
}

uint64_t sub_20A9AF804()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267653FA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653FA0);
  return sub_20AB85D30();
}

uint64_t static ResetUserIDEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532D8, MEMORY[0x263F24DE8], (uint64_t)qword_267653FA0, a1);
}

uint64_t ResetUserIDEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ResetUserIDEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ResetUserIDEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ResetUserIDEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t ResetUserIDEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ResetUserIDEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20A9AFA20(uint64_t a1)
{
  unint64_t v2 = sub_20A9AFC0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9AFA5C(uint64_t a1)
{
  unint64_t v2 = sub_20A9AFC0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResetUserIDEvent.Model.encode(to:)(void *a1)
{
  sub_20A9AFEF8(0, &qword_267653FB8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AFC0C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A9AFC0C()
{
  unint64_t result = qword_267653FC0;
  if (!qword_267653FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653FC0);
  }
  return result;
}

uint64_t ResetUserIDEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9AFEF8(0, &qword_267653FC8, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for ResetUserIDEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AFC0C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20A9AFF7C((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9AFEF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9AFC0C();
    unint64_t v7 = a3(a1, &type metadata for ResetUserIDEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for ResetUserIDEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653FE0);
}

uint64_t sub_20A9AFF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ResetUserIDEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9AFFE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ResetUserIDEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9AFFF8(void *a1)
{
  sub_20A9AFEF8(0, &qword_267653FB8, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9AFC0C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A9B016C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532C8, MEMORY[0x263F24D18], (uint64_t)qword_267653F70, a1);
}

uint64_t sub_20A9B01A4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532D0, MEMORY[0x263F24DD8], (uint64_t)qword_267653F88, a1);
}

uint64_t sub_20A9B01DC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532D8, MEMORY[0x263F24DE8], (uint64_t)qword_267653FA0, a1);
}

uint64_t getEnumTagSinglePayload for ResetUserIDEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9B0228);
}

uint64_t sub_20A9B0228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for ResetUserIDEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9B0254);
}

uint64_t sub_20A9B0254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for ResetUserIDEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267653FD0);
}

uint64_t getEnumTagSinglePayload for ResetUserIDEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9B02A0);
}

uint64_t sub_20A9B02A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for ResetUserIDEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9B02CC);
}

uint64_t sub_20A9B02CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for ResetUserIDEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9B0380);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResetUserIDEvent.Model.CodingKeys()
{
  return &type metadata for ResetUserIDEvent.Model.CodingKeys;
}

unint64_t sub_20A9B03BC()
{
  unint64_t result = qword_267653FF0;
  if (!qword_267653FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653FF0);
  }
  return result;
}

unint64_t sub_20A9B0414()
{
  unint64_t result = qword_267653FF8;
  if (!qword_267653FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267653FF8);
  }
  return result;
}

unint64_t sub_20A9B046C()
{
  unint64_t result = qword_267654000;
  if (!qword_267654000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654000);
  }
  return result;
}

uint64_t sub_20A9B04C0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654008, MEMORY[0x263F24D10]);
}

uint64_t static EOAGroupExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532E0, MEMORY[0x263F24D18], (uint64_t)qword_267654008, a1);
}

uint64_t static EOAGroupExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9B0528(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654020, MEMORY[0x263F24DC8]);
}

uint64_t static EOAGroupExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532E8, MEMORY[0x263F24DD8], (uint64_t)qword_267654020, a1);
}

uint64_t sub_20A9B0588()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654038);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654038);
  return sub_20AB85D30();
}

uint64_t static EOAGroupExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532F0, MEMORY[0x263F24DE8], (uint64_t)qword_267654038, a1);
}

uint64_t EOAGroupExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t EOAGroupExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*EOAGroupExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9B14A0(type metadata accessor for EOAGroupExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for EOAGroupExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654068);
}

uint64_t EOAGroupExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 24);
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 28);
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9B0BB8()
{
  unint64_t result = qword_26AC4F108;
  if (!qword_26AC4F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F108);
  }
  return result;
}

unint64_t sub_20A9B0C0C()
{
  unint64_t result = qword_26AC4F100;
  if (!qword_26AC4F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F100);
  }
  return result;
}

uint64_t EOAGroupExposureEvent.hostArticleViewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 32);
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleViewData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EOAGroupExposureEvent.hostArticleNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 36);
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9B0FB0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t EOAGroupExposureEvent.hostArticleChannelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent(0) + 40);
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EOAGroupExposureEvent.hostArticleChannelData.modify())()
{
  return nullsub_1;
}

uint64_t EOAGroupExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for EOAGroupExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v2, v16);
}

uint64_t EOAGroupExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t EOAGroupExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9B14A0(type metadata accessor for EOAGroupExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9B14A0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for EOAGroupExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654078);
}

uint64_t EOAGroupExposureEvent.Model.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v6 = *(void *)(v3 + 40);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = *(void *)(v3 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleViewData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 32));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t EOAGroupExposureEvent.Model.hostArticleChannelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EOAGroupExposureEvent.Model(0) + 40));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 EOAGroupExposureEvent.Model.init(eventData:timedData:groupData:feedData:hostArticleViewData:hostArticleNewsArticleData:hostArticleChannelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  char v12 = *a3;
  uint64_t v13 = *((void *)a3 + 1);
  uint64_t v14 = *((void *)a3 + 2);
  uint64_t v16 = *((void *)a3 + 4);
  uint64_t v15 = *((void *)a3 + 5);
  char v30 = *a4;
  uint64_t v17 = *((void *)a4 + 2);
  uint64_t v29 = *((void *)a4 + 1);
  uint64_t v31 = a5[1];
  uint64_t v32 = *a5;
  long long v43 = *a6;
  uint64_t v41 = *((void *)a6 + 3);
  uint64_t v42 = *((void *)a6 + 2);
  char v40 = *((unsigned char *)a6 + 32);
  uint64_t v39 = *((void *)a6 + 5);
  char v38 = *((unsigned char *)a6 + 48);
  uint64_t v37 = *((void *)a6 + 7);
  char v35 = *((unsigned char *)a6 + 65);
  char v36 = *((unsigned char *)a6 + 64);
  char v33 = *((unsigned char *)a6 + 67);
  char v34 = *((unsigned char *)a6 + 66);
  __n128 v48 = *a7;
  unint64_t v46 = a7[1].n128_u64[1];
  unint64_t v47 = a7[1].n128_u64[0];
  unsigned __int8 v44 = a7[2].n128_u8[1];
  unsigned __int8 v45 = a7[2].n128_u8[0];
  uint64_t v18 = sub_20AB85FC0();
  uint64_t v19 = *((void *)a3 + 3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a8, a1, v18);
  uint64_t v20 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
  uint64_t v21 = a8 + v20[5];
  uint64_t v22 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a2, v22);
  uint64_t v23 = a8 + v20[6];
  *(unsigned char *)uint64_t v23 = v12;
  *(void *)(v23 + 8) = v13;
  *(void *)(v23 + 16) = v14;
  *(void *)(v23 + 24) = v19;
  *(void *)(v23 + 32) = v16;
  *(void *)(v23 + 40) = v15;
  uint64_t v24 = a8 + v20[7];
  *(unsigned char *)uint64_t v24 = v30;
  *(void *)(v24 + 8) = v29;
  *(void *)(v24 + 16) = v17;
  char v25 = (void *)(a8 + v20[8]);
  *char v25 = v32;
  v25[1] = v31;
  uint64_t v26 = a8 + v20[9];
  *(_OWORD *)uint64_t v26 = v43;
  *(void *)(v26 + 16) = v42;
  *(void *)(v26 + 24) = v41;
  *(unsigned char *)(v26 + 32) = v40;
  *(void *)(v26 + 40) = v39;
  *(unsigned char *)(v26 + 48) = v38;
  *(void *)(v26 + 56) = v37;
  *(unsigned char *)(v26 + 64) = v36;
  *(unsigned char *)(v26 + 65) = v35;
  *(unsigned char *)(v26 + 66) = v34;
  *(unsigned char *)(v26 + 67) = v33;
  unsigned __int8 v27 = (__n128 *)(a8 + v20[10]);
  __n128 result = v48;
  *unsigned __int8 v27 = v48;
  v27[1].n128_u64[0] = v47;
  v27[1].n128_u64[1] = v46;
  v27[2].n128_u8[0] = v45;
  v27[2].n128_u8[1] = v44;
  return result;
}

unint64_t sub_20A9B199C(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0x74614470756F7267;
      break;
    case 3:
      unint64_t result = 0x6174614464656566;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A9B1A8C()
{
  return sub_20A9B199C(*v0);
}

uint64_t sub_20A9B1A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9B5A50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9B1ABC(uint64_t a1)
{
  unint64_t v2 = sub_20A9B1F34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9B1AF8(uint64_t a1)
{
  unint64_t v2 = sub_20A9B1F34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t EOAGroupExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9B2748(0, &qword_267654050, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B1F34();
  sub_20AB86DC0();
  LOBYTE(v39) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
    LOBYTE(v39) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = v3 + v10[6];
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
    LOBYTE(v39) = *(unsigned char *)v11;
    *((void *)&v39 + 1) = v12;
    uint64_t v40 = v13;
    uint64_t v41 = *(void *)(v11 + 24);
    long long v42 = *(_OWORD *)(v11 + 32);
    char v49 = 2;
    sub_20A986524();
    sub_20AB86C50();
    uint64_t v14 = (char *)(v3 + v10[7]);
    char v15 = *v14;
    uint64_t v17 = *((void *)v14 + 1);
    uint64_t v16 = *((void *)v14 + 2);
    LOBYTE(v39) = v15;
    *((void *)&v39 + 1) = v17;
    uint64_t v40 = v16;
    char v49 = 3;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v18 = (uint64_t *)(v3 + v10[8]);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    *(void *)&long long v39 = v20;
    *((void *)&v39 + 1) = v19;
    char v49 = 4;
    sub_20A9B0C0C();
    sub_20AB86C50();
    uint64_t v21 = (long long *)(v3 + v10[9]);
    long long v22 = *v21;
    uint64_t v23 = *((void *)v21 + 2);
    uint64_t v24 = *((void *)v21 + 3);
    char v25 = *((unsigned char *)v21 + 32);
    uint64_t v26 = *((void *)v21 + 5);
    char v27 = *((unsigned char *)v21 + 48);
    uint64_t v28 = *((void *)v21 + 7);
    char v29 = *((unsigned char *)v21 + 64);
    char v30 = *((unsigned char *)v21 + 65);
    char v31 = *((unsigned char *)v21 + 66);
    LOBYTE(v21) = *((unsigned char *)v21 + 67);
    long long v39 = v22;
    uint64_t v40 = v23;
    uint64_t v41 = v24;
    LOBYTE(v42) = v25;
    *((void *)&v42 + 1) = v26;
    char v43 = v27;
    uint64_t v44 = v28;
    char v45 = v29;
    char v46 = v30;
    char v47 = v31;
    char v48 = (char)v21;
    char v49 = 5;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v32 = (long long *)(v3 + v10[10]);
    long long v33 = *v32;
    uint64_t v34 = *((void *)v32 + 2);
    uint64_t v35 = *((void *)v32 + 3);
    char v36 = *((unsigned char *)v32 + 32);
    LOBYTE(v32) = *((unsigned char *)v32 + 33);
    long long v39 = v33;
    uint64_t v40 = v34;
    uint64_t v41 = v35;
    LOBYTE(v42) = v36;
    BYTE1(v42) = (_BYTE)v32;
    char v49 = 6;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9B1F34()
{
  unint64_t result = qword_267654058;
  if (!qword_267654058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654058);
  }
  return result;
}

uint64_t EOAGroupExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v49 = sub_20AB85FE0();
  uint64_t v45 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v46 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9B2748(0, &qword_267654060, MEMORY[0x263F8E040]);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v44 - v8;
  char v10 = (int *)type metadata accessor for EOAGroupExposureEvent.Model(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B1F34();
  uint64_t v51 = v9;
  uint64_t v13 = (uint64_t)v52;
  sub_20AB86DA0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v4;
  char v52 = a1;
  uint64_t v15 = v49;
  uint64_t v16 = (uint64_t)v12;
  LOBYTE(v53) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  uint64_t v17 = v48;
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v16, v50, v5);
  LOBYTE(v53) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v16 + v10[5], v14, v15);
  char v63 = 2;
  sub_20A9864D0();
  sub_20AB86B80();
  uint64_t v18 = v47;
  uint64_t v19 = *((void *)&v53 + 1);
  uint64_t v20 = v54;
  uint64_t v21 = v16 + v10[6];
  *(unsigned char *)uint64_t v21 = v53;
  *(void *)(v21 + 8) = v19;
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = v55;
  *(_OWORD *)(v21 + 32) = v56;
  char v63 = 3;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v22 = *((void *)&v53 + 1);
  uint64_t v23 = v54;
  uint64_t v24 = v16 + v10[7];
  *(unsigned char *)uint64_t v24 = v53;
  *(void *)(v24 + 8) = v22;
  *(void *)(v24 + 16) = v23;
  char v63 = 4;
  sub_20A9B0BB8();
  sub_20AB86B80();
  uint64_t v25 = *((void *)&v53 + 1);
  uint64_t v26 = (void *)(v16 + v10[8]);
  *uint64_t v26 = v53;
  v26[1] = v25;
  char v63 = 5;
  sub_20A97A154();
  sub_20AB86B80();
  uint64_t v27 = v54;
  uint64_t v28 = v55;
  char v29 = v56;
  uint64_t v30 = *((void *)&v56 + 1);
  char v31 = v57;
  uint64_t v32 = v58;
  char v33 = v59;
  char v34 = v60;
  char v35 = v61;
  char v36 = v62;
  uint64_t v37 = v16 + v10[9];
  *(_OWORD *)uint64_t v37 = v53;
  *(void *)(v37 + 16) = v27;
  *(void *)(v37 + 24) = v28;
  *(unsigned char *)(v37 + 32) = v29;
  *(void *)(v37 + 40) = v30;
  *(unsigned char *)(v37 + 48) = v31;
  *(void *)(v37 + 56) = v32;
  *(unsigned char *)(v37 + 64) = v33;
  *(unsigned char *)(v37 + 65) = v34;
  *(unsigned char *)(v37 + 66) = v35;
  *(unsigned char *)(v37 + 67) = v36;
  char v63 = 6;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v51, v17);
  uint64_t v38 = v54;
  uint64_t v39 = v55;
  char v40 = v56;
  char v41 = BYTE1(v56);
  uint64_t v42 = v16 + v10[10];
  *(_OWORD *)uint64_t v42 = v53;
  *(void *)(v42 + 16) = v38;
  *(void *)(v42 + 24) = v39;
  *(unsigned char *)(v42 + 32) = v40;
  *(unsigned char *)(v42 + 33) = v41;
  sub_20A9B27AC(v16, v44);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return sub_20A9B2810(v16);
}

void sub_20A9B2748(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9B1F34();
    unint64_t v7 = a3(a1, &type metadata for EOAGroupExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9B27AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9B2810(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EOAGroupExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9B286C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EOAGroupExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9B2884(void *a1)
{
  return EOAGroupExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9B289C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532E0, MEMORY[0x263F24D18], (uint64_t)qword_267654008, a1);
}

uint64_t sub_20A9B28D4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532E8, MEMORY[0x263F24DD8], (uint64_t)qword_267654020, a1);
}

uint64_t sub_20A9B290C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532F0, MEMORY[0x263F24DE8], (uint64_t)qword_267654038, a1);
}

uint64_t sub_20A9B2944@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v4, v17);
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9B4020);
}

uint64_t sub_20A9B4020(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9B43C8);
}

uint64_t sub_20A9B43C8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  sub_20A9B0FB0(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  sub_20A9B0FB0(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_20A9B4768()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9B0FB0(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
      if (v2 <= 0x3F)
      {
        sub_20A9B0FB0(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20A9B0FB0(319, &qword_26AC4E0B0, (void (*)(void))sub_20A9B0BB8, (void (*)(void))sub_20A9B0C0C);
          if (v4 <= 0x3F)
          {
            sub_20A9B0FB0(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
            if (v5 <= 0x3F)
            {
              sub_20A9B0FB0(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for EOAGroupExposureEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *uint64_t v14 = *v15;
    uint64_t v16 = *((void *)v15 + 2);
    *((void *)v14 + 1) = *((void *)v15 + 1);
    *((void *)v14 + 2) = v16;
    *((void *)v14 + 3) = *((void *)v15 + 3);
    uint64_t v17 = *((void *)v15 + 5);
    *((void *)v14 + 4) = *((void *)v15 + 4);
    *((void *)v14 + 5) = v17;
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)((char *)a1 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (char *)a1 + v22;
    uint64_t v27 = (char *)a2 + v22;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = *((void *)v27 + 3);
    *((void *)v26 + 2) = *((void *)v27 + 2);
    *((void *)v26 + 3) = v29;
    v26[32] = v27[32];
    *((void *)v26 + 5) = *((void *)v27 + 5);
    v26[48] = v27[48];
    *((void *)v26 + 7) = *((void *)v27 + 7);
    *((_DWORD *)v26 + 16) = *((_DWORD *)v27 + 16);
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = *((void *)v32 + 3);
    *((void *)v31 + 2) = *((void *)v32 + 2);
    *((void *)v31 + 3) = v34;
    v31[32] = v32[32];
    v31[33] = v32[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(unsigned char *)uint64_t v13 = *(unsigned char *)v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  *(void *)(v13 + 16) = v15;
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  uint64_t v16 = *(void *)(v14 + 40);
  *(void *)(v13 + 32) = *(void *)(v14 + 32);
  *(void *)(v13 + 40) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = a1 + v21;
  uint64_t v26 = a2 + v21;
  uint64_t v27 = *(void *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(void *)(v25 + 8) = v27;
  uint64_t v28 = *(void *)(v26 + 24);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = v28;
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  *(void *)(v25 + 40) = *(void *)(v26 + 40);
  *(unsigned char *)(v25 + 48) = *(unsigned char *)(v26 + 48);
  *(void *)(v25 + 56) = *(void *)(v26 + 56);
  *(_DWORD *)(v25 + 64) = *(_DWORD *)(v26 + 64);
  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(void *)(v30 + 8) = v32;
  uint64_t v33 = *(void *)(v31 + 24);
  *(void *)(v30 + 16) = *(void *)(v31 + 16);
  *(void *)(v30 + 24) = v33;
  *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
  *(unsigned char *)(v30 + 33) = *(unsigned char *)(v31 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(v12 + 24) = *(_DWORD *)(v13 + 24);
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v13 + 28);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)uint64_t v21 = *(void *)(a2 + v20);
  *(void *)(v21 + 8) = *(void *)(a2 + v20 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(void *)(v21 + 24) = *(void *)(v22 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v22 + 32);
  uint64_t v23 = *(void *)(v22 + 40);
  *(unsigned char *)(v21 + 48) = *(unsigned char *)(v22 + 48);
  *(void *)(v21 + 40) = v23;
  *(void *)(v21 + 56) = *(void *)(v22 + 56);
  *(unsigned char *)(v21 + 64) = *(unsigned char *)(v22 + 64);
  *(unsigned char *)(v21 + 65) = *(unsigned char *)(v22 + 65);
  *(unsigned char *)(v21 + 66) = *(unsigned char *)(v22 + 66);
  *(unsigned char *)(v21 + 67) = *(unsigned char *)(v22 + 67);
  uint64_t v24 = a3[10];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(void *)uint64_t v25 = *(void *)(a2 + v24);
  *(void *)(v25 + 8) = *(void *)(a2 + v24 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  *(void *)(v25 + 24) = *(void *)(v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v25 + 32) = *(unsigned char *)(v26 + 32);
  *(unsigned char *)(v25 + 33) = *(unsigned char *)(v26 + 33);
  return a1;
}

uint64_t initializeWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  uint64_t v18 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_DWORD *)(v19 + 64) = *(_DWORD *)(v20 + 64);
  long long v21 = *(_OWORD *)(v20 + 48);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v20 + 32);
  *(_OWORD *)(v19 + 48) = v21;
  long long v22 = *(_OWORD *)(v20 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (long long *)(a2 + v23);
  long long v26 = *v25;
  long long v27 = v25[1];
  *(_WORD *)(v24 + 32) = *((_WORD *)v25 + 16);
  *(_OWORD *)uint64_t v24 = v26;
  *(_OWORD *)(v24 + 16) = v27;
  return a1;
}

uint64_t assignWithTake for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (void *)(a2 + v11);
  *(unsigned char *)uint64_t v12 = *(unsigned char *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 16);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  *(void *)(v12 + 16) = v14;
  swift_bridgeObjectRelease();
  *(void *)(v12 + 24) = v13[3];
  uint64_t v15 = v13[5];
  *(void *)(v12 + 32) = v13[4];
  *(void *)(v12 + 40) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  long long v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *long long v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a2 + v26 + 8);
  *(void *)uint64_t v27 = *(void *)(a2 + v26);
  *(void *)(v27 + 8) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v28 + 24);
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  *(void *)(v27 + 24) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
  *(void *)(v27 + 40) = *(void *)(v28 + 40);
  *(unsigned char *)(v27 + 48) = *(unsigned char *)(v28 + 48);
  *(void *)(v27 + 56) = *(void *)(v28 + 56);
  *(unsigned char *)(v27 + 64) = *(unsigned char *)(v28 + 64);
  *(unsigned char *)(v27 + 65) = *(unsigned char *)(v28 + 65);
  *(unsigned char *)(v27 + 66) = *(unsigned char *)(v28 + 66);
  *(unsigned char *)(v27 + 67) = *(unsigned char *)(v28 + 67);
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = *(void *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  *(void *)(v32 + 8) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(v33 + 24);
  *(void *)(v32 + 16) = *(void *)(v33 + 16);
  *(void *)(v32 + 24) = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v32 + 32) = *(unsigned char *)(v33 + 32);
  *(unsigned char *)(v32 + 33) = *(unsigned char *)(v33 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9B550C);
}

uint64_t sub_20A9B550C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EOAGroupExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9B5638);
}

uint64_t sub_20A9B5638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 16) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9B574C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EOAGroupExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9B5910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EOAGroupExposureEvent.Model.CodingKeys()
{
  return &type metadata for EOAGroupExposureEvent.Model.CodingKeys;
}

unint64_t sub_20A9B594C()
{
  unint64_t result = qword_267654088;
  if (!qword_267654088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654088);
  }
  return result;
}

unint64_t sub_20A9B59A4()
{
  unint64_t result = qword_267654090;
  if (!qword_267654090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654090);
  }
  return result;
}

unint64_t sub_20A9B59FC()
{
  unint64_t result = qword_267654098;
  if (!qword_267654098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654098);
  }
  return result;
}

uint64_t sub_20A9B5A50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7470 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA7490 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA74B0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t static GalleryData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void GalleryData.galleryType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *GalleryData.galleryType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*GalleryData.galleryType.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GalleryData.galleryID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GalleryData.galleryID.modify())()
{
  return nullsub_1;
}

uint64_t GalleryData.galleryImageCount.getter()
{
  return *(unsigned int *)(v0 + 24);
}

uint64_t GalleryData.galleryImageCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GalleryData.galleryImageCount.modify())()
{
  return nullsub_1;
}

unsigned char *GalleryData.init(galleryType:galleryID:galleryImageCount:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  *(unsigned char *)a5 = *result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(_DWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t sub_20A9B5E40()
{
  unint64_t v1 = 0x497972656C6C6167;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000011;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x547972656C6C6167;
  }
}

uint64_t sub_20A9B5EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9B6948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9B5ED4(uint64_t a1)
{
  unint64_t v2 = sub_20A9B611C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9B5F10(uint64_t a1)
{
  unint64_t v2 = sub_20A9B611C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GalleryData.encode(to:)(void *a1)
{
  sub_20A9B640C(0, &qword_2676540A0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v12 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  v12[0] = *((void *)v1 + 2);
  v12[1] = v10;
  int v13 = *((_DWORD *)v1 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B611C();
  sub_20AB86DC0();
  char v17 = v9;
  char v16 = 0;
  sub_20A9B6170();
  sub_20AB86C50();
  if (!v2)
  {
    char v15 = 1;
    sub_20AB86C10();
    char v14 = 2;
    sub_20AB86C60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9B611C()
{
  unint64_t result = qword_2676540A8;
  if (!qword_2676540A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540A8);
  }
  return result;
}

unint64_t sub_20A9B6170()
{
  unint64_t result = qword_2676540B0;
  if (!qword_2676540B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540B0);
  }
  return result;
}

uint64_t GalleryData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9B640C(0, &qword_2676540B8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B611C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  sub_20A9B6470();
  sub_20AB86B80();
  int v10 = v22;
  char v20 = 1;
  uint64_t v11 = sub_20AB86B40();
  uint64_t v13 = v12;
  uint64_t v17 = v11;
  int v18 = v10;
  char v19 = 2;
  swift_bridgeObjectRetain();
  int v14 = sub_20AB86B90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(unsigned char *)a2 = v18;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v13;
  *(_DWORD *)(a2 + 24) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20A9B640C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9B611C();
    unint64_t v7 = a3(a1, &type metadata for GalleryData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9B6470()
{
  unint64_t result = qword_2676540C0;
  if (!qword_2676540C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540C0);
  }
  return result;
}

unint64_t sub_20A9B64C8()
{
  unint64_t result = qword_26AC4EBE8;
  if (!qword_26AC4EBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBE8);
  }
  return result;
}

unint64_t sub_20A9B6520()
{
  unint64_t result = qword_26AC4EBE0;
  if (!qword_26AC4EBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBE0);
  }
  return result;
}

uint64_t sub_20A9B6574@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GalleryData.init(from:)(a1, a2);
}

uint64_t sub_20A9B658C(void *a1)
{
  return GalleryData.encode(to:)(a1);
}

uint64_t initializeWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GalleryData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GalleryData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GalleryData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 28)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GalleryData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 28) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 28) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryData()
{
  return &type metadata for GalleryData;
}

unsigned char *storeEnumTagSinglePayload for GalleryData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9B6808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GalleryData.CodingKeys()
{
  return &type metadata for GalleryData.CodingKeys;
}

unint64_t sub_20A9B6844()
{
  unint64_t result = qword_2676540C8;
  if (!qword_2676540C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540C8);
  }
  return result;
}

unint64_t sub_20A9B689C()
{
  unint64_t result = qword_2676540D0;
  if (!qword_2676540D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540D0);
  }
  return result;
}

unint64_t sub_20A9B68F4()
{
  unint64_t result = qword_2676540D8;
  if (!qword_2676540D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540D8);
  }
  return result;
}

uint64_t sub_20A9B6948(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x547972656C6C6167 && a2 == 0xEB00000000657079;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x497972656C6C6167 && a2 == 0xE900000000000044 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA74D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static NetworkEventData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t NetworkEventData.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20AB851C0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t NetworkEventData.startTime.setter(uint64_t a1)
{
  uint64_t v3 = sub_20AB851C0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NetworkEventData.startTime.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.cacheState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for NetworkEventData()
{
  uint64_t result = qword_26AC4F4B0;
  if (!qword_26AC4F4B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NetworkEventData.cacheState.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for NetworkEventData();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cacheState.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.dnsDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 24));
}

uint64_t NetworkEventData.dnsDuration.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NetworkEventData.dnsDuration.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.connectDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 28));
}

uint64_t NetworkEventData.connectDuration.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*NetworkEventData.connectDuration.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.requestDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 32));
}

uint64_t NetworkEventData.requestDuration.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*NetworkEventData.requestDuration.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.responseDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 36));
}

uint64_t NetworkEventData.responseDuration.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseDuration.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.taskDuration.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 40));
}

uint64_t NetworkEventData.taskDuration.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  uint64_t v6 = v2 + *(int *)(result + 40);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.taskDuration.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.responseSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 44));
}

uint64_t NetworkEventData.responseSize.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*NetworkEventData.responseSize.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.statusCode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 48));
}

uint64_t NetworkEventData.statusCode.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*NetworkEventData.statusCode.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.errorCode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 52));
}

uint64_t NetworkEventData.errorCode.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(void *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*NetworkEventData.errorCode.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.eventType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 56));
  return result;
}

uint64_t NetworkEventData.eventType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for NetworkEventData();
  *(unsigned char *)(v1 + *(int *)(result + 56)) = v2;
  return result;
}

uint64_t (*NetworkEventData.eventType.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t NetworkEventData.cellularRadioAccessTechnology.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for NetworkEventData();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = v2;
  return result;
}

uint64_t (*NetworkEventData.cellularRadioAccessTechnology.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.dataSource.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetworkEventData.dataSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for NetworkEventData() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetworkEventData.dataSource.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.requestedItemCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 68));
}

uint64_t NetworkEventData.requestedItemCount.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  uint64_t v6 = v2 + *(int *)(result + 68);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.requestedItemCount.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.returnedItemCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 72));
}

uint64_t NetworkEventData.returnedItemCount.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  uint64_t v6 = v2 + *(int *)(result + 72);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*NetworkEventData.returnedItemCount.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.missingItemIDs.getter()
{
  type metadata accessor for NetworkEventData();

  return swift_bridgeObjectRetain();
}

uint64_t NetworkEventData.missingItemIDs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NetworkEventData() + 76);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetworkEventData.missingItemIDs.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.invalidItemIDs.getter()
{
  type metadata accessor for NetworkEventData();

  return swift_bridgeObjectRetain();
}

uint64_t NetworkEventData.invalidItemIDs.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NetworkEventData() + 80);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetworkEventData.invalidItemIDs.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.respondingPop.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetworkEventData.respondingPop.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for NetworkEventData() + 84));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetworkEventData.respondingPop.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.isProxyConnection.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NetworkEventData() + 88));
}

uint64_t NetworkEventData.isProxyConnection.setter(char a1)
{
  uint64_t result = type metadata accessor for NetworkEventData();
  *(unsigned char *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*NetworkEventData.isProxyConnection.modify())()
{
  return nullsub_1;
}

uint64_t NetworkEventData.init(startTime:cacheState:dnsDuration:connectDuration:requestDuration:responseDuration:taskDuration:responseSize:statusCode:errorCode:eventType:cellularRadioAccessTechnology:dataSource:requestedItemCount:returnedItemCount:missingItemIDs:invalidItemIDs:respondingPop:isProxyConnection:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char *a13, char *a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  char v27 = *a2;
  char v38 = *a13;
  char v39 = *a14;
  uint64_t v28 = (int *)type metadata accessor for NetworkEventData();
  uint64_t v29 = a9 + v28[10];
  uint64_t v30 = (void *)(a9 + v28[16]);
  uint64_t v31 = a9 + v28[17];
  uint64_t v32 = v28[19];
  uint64_t v33 = a9 + v28[18];
  uint64_t v37 = v28[20];
  uint64_t v34 = (void *)(a9 + v28[21]);
  uint64_t v35 = sub_20AB851C0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 32))(a9, a1, v35);
  *(unsigned char *)(a9 + v28[5]) = v27;
  *(void *)(a9 + v28[6]) = a3;
  *(void *)(a9 + v28[7]) = a4;
  *(void *)(a9 + v28[8]) = a5;
  *(void *)(a9 + v28[9]) = a6;
  *(void *)uint64_t v29 = a7;
  *(unsigned char *)(v29 + 8) = a8 & 1;
  *(void *)(a9 + v28[11]) = a10;
  *(void *)(a9 + v28[12]) = a11;
  *(void *)(a9 + v28[13]) = a12;
  *(unsigned char *)(a9 + v28[14]) = v38;
  *(unsigned char *)(a9 + v28[15]) = v39;
  *uint64_t v30 = a15;
  v30[1] = a16;
  *(void *)uint64_t v31 = a17;
  *(unsigned char *)(v31 + 8) = a18 & 1;
  *(void *)uint64_t v33 = a19;
  *(unsigned char *)(v33 + 8) = a20 & 1;
  *(void *)(a9 + v32) = a21;
  *(void *)(a9 + v37) = a22;
  *uint64_t v34 = a23;
  v34[1] = a24;
  *(unsigned char *)(a9 + v28[22]) = a25;
  return result;
}

uint64_t sub_20A9B7A74(char a1)
{
  uint64_t result = 0x6D69547472617473;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6174536568636163;
      break;
    case 2:
      uint64_t result = 0x7461727544736E64;
      break;
    case 3:
      uint64_t v3 = 0x63656E6E6F63;
      goto LABEL_6;
    case 4:
      uint64_t v3 = 0x736575716572;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x4474000000000000;
      break;
    case 5:
      uint64_t result = 0xD000000000000010;
      break;
    case 6:
      uint64_t result = 0x617275446B736174;
      break;
    case 7:
      uint64_t result = 0x65736E6F70736572;
      break;
    case 8:
      uint64_t result = 0x6F43737574617473;
      break;
    case 9:
      uint64_t result = 0x646F43726F727265;
      break;
    case 10:
      uint64_t result = 0x707954746E657665;
      break;
    case 11:
      uint64_t result = 0xD00000000000001DLL;
      break;
    case 12:
      uint64_t result = 0x72756F5361746164;
      break;
    case 13:
      uint64_t result = 0xD000000000000012;
      break;
    case 14:
    case 18:
      uint64_t result = 0xD000000000000011;
      break;
    case 15:
      uint64_t result = 0x49676E697373696DLL;
      break;
    case 16:
      uint64_t result = 0x4964696C61766E69;
      break;
    case 17:
      uint64_t result = 0x69646E6F70736572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9B7CEC()
{
  return sub_20A9B7A74(*v0);
}

uint64_t sub_20A9B7CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9B9E14(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9B7D1C(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_20A9B7D28(uint64_t a1)
{
  unint64_t v2 = sub_20A9B8320();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9B7D64(uint64_t a1)
{
  unint64_t v2 = sub_20A9B8320();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NetworkEventData.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9B8C8C(0, &qword_26AC51898, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B8320();
  sub_20AB86DC0();
  LOBYTE(v13) = 0;
  sub_20AB851C0();
  sub_20A9B8F9C(&qword_26AC4E3B0, MEMORY[0x263F07490]);
  sub_20AB86C50();
  if (!v2)
  {
    int v10 = (int *)type metadata accessor for NetworkEventData();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[5]);
    char v14 = 1;
    sub_20A9B8374();
    sub_20AB86C50();
    LOBYTE(v13) = 2;
    sub_20AB86C70();
    LOBYTE(v13) = 3;
    sub_20AB86C70();
    LOBYTE(v13) = 4;
    sub_20AB86C70();
    LOBYTE(v13) = 5;
    sub_20AB86C70();
    LOBYTE(v13) = 6;
    sub_20AB86C00();
    LOBYTE(v13) = 7;
    sub_20AB86C70();
    LOBYTE(v13) = 8;
    sub_20AB86C70();
    LOBYTE(v13) = 9;
    sub_20AB86C70();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[14]);
    char v14 = 10;
    sub_20A9B83C8();
    sub_20AB86C50();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[15]);
    char v14 = 11;
    sub_20A9B841C();
    sub_20AB86C50();
    LOBYTE(v13) = 12;
    sub_20AB86BC0();
    LOBYTE(v13) = 13;
    sub_20AB86C00();
    LOBYTE(v13) = 14;
    sub_20AB86C00();
    uint64_t v13 = *(void *)(v3 + v10[19]);
    char v14 = 15;
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516D8);
    sub_20AB86BE0();
    uint64_t v13 = *(void *)(v3 + v10[20]);
    char v14 = 16;
    sub_20AB86BE0();
    LOBYTE(v13) = 17;
    sub_20AB86BC0();
    LOBYTE(v13) = 18;
    sub_20AB86C20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9B8320()
{
  unint64_t result = qword_26AC4F480;
  if (!qword_26AC4F480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F480);
  }
  return result;
}

unint64_t sub_20A9B8374()
{
  unint64_t result = qword_26AC4EB08;
  if (!qword_26AC4EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB08);
  }
  return result;
}

unint64_t sub_20A9B83C8()
{
  unint64_t result = qword_26AC4F588;
  if (!qword_26AC4F588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F588);
  }
  return result;
}

unint64_t sub_20A9B841C()
{
  unint64_t result = qword_26AC50F48;
  if (!qword_26AC50F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F48);
  }
  return result;
}

void sub_20A9B8470()
{
  if (!qword_26AC516D0)
  {
    unint64_t v0 = sub_20AB86790();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC516D0);
    }
  }
}

uint64_t NetworkEventData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v44 = sub_20AB851C0();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  char v43 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9B8C8C(0, &qword_2676540E0, MEMORY[0x263F8E040]);
  uint64_t v47 = v4;
  uint64_t v45 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = type metadata accessor for NetworkEventData();
  uint64_t v8 = (int *)MEMORY[0x270FA5388](v7);
  int v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v10[v8[10]];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  uint64_t v12 = &v10[v8[16]];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  char v52 = (uint64_t *)v12;
  long long v53 = v10;
  uint64_t v13 = &v10[v8[17]];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  char v14 = &v10[v8[18]];
  *(void *)char v14 = 0;
  v14[8] = 1;
  uint64_t v49 = v8[19];
  *(void *)&v10[v49] = 0;
  uint64_t v50 = v8[20];
  *(void *)&v10[v50] = 0;
  char v15 = &v10[v8[21]];
  *(void *)char v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v51 = (uint64_t *)v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9B8320();
  uint64_t v46 = v6;
  uint64_t v16 = v48;
  sub_20AB86DA0();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = (int *)v7;
    uint64_t v17 = v11;
    char v39 = (uint64_t *)v14;
    char v40 = (uint64_t *)v13;
    uint64_t v18 = v45;
    LOBYTE(v54) = 0;
    sub_20A9B8F9C(&qword_2676540E8, MEMORY[0x263F07490]);
    char v20 = v43;
    uint64_t v19 = v44;
    sub_20AB86B80();
    char v21 = v53;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v53, v20, v19);
    char v55 = 1;
    sub_20A9B8CF0();
    sub_20AB86B80();
    unsigned __int8 v22 = v48;
    v21[v48[5]] = v54;
    LOBYTE(v54) = 2;
    *(void *)&v21[v22[6]] = sub_20AB86BA0();
    LOBYTE(v54) = 3;
    *(void *)&v21[v22[7]] = sub_20AB86BA0();
    LOBYTE(v54) = 4;
    *(void *)&v21[v22[8]] = sub_20AB86BA0();
    LOBYTE(v54) = 5;
    *(void *)&v21[v22[9]] = sub_20AB86BA0();
    LOBYTE(v54) = 6;
    *(void *)uint64_t v17 = sub_20AB86B30();
    v17[8] = v23 & 1;
    LOBYTE(v54) = 7;
    *(void *)&v21[v22[11]] = sub_20AB86BA0();
    LOBYTE(v54) = 8;
    *(void *)&v21[v22[12]] = sub_20AB86BA0();
    LOBYTE(v54) = 9;
    *(void *)&v53[v48[13]] = sub_20AB86BA0();
    char v55 = 10;
    sub_20A9B8D44();
    sub_20AB86B80();
    v53[v48[14]] = v54;
    char v55 = 11;
    sub_20A9B8D98();
    sub_20AB86B80();
    v53[v48[15]] = v54;
    LOBYTE(v54) = 12;
    uint64_t v24 = sub_20AB86AF0();
    uint64_t v25 = v52;
    uint64_t *v52 = v24;
    v25[1] = v26;
    LOBYTE(v54) = 13;
    uint64_t v27 = sub_20AB86B30();
    uint64_t v28 = v40;
    *char v40 = v27;
    *((unsigned char *)v28 + 8) = v29 & 1;
    LOBYTE(v54) = 14;
    uint64_t v30 = sub_20AB86B30();
    uint64_t v31 = v39;
    *char v39 = v30;
    *((unsigned char *)v31 + 8) = v32 & 1;
    sub_20A9B8470();
    char v55 = 15;
    sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B10();
    *(void *)&v53[v49] = v54;
    char v55 = 16;
    sub_20AB86B10();
    *(void *)&v53[v50] = v54;
    LOBYTE(v54) = 17;
    uint64_t v33 = sub_20AB86AF0();
    uint64_t v34 = v51;
    *uint64_t v51 = v33;
    v34[1] = v35;
    LOBYTE(v54) = 18;
    char v36 = sub_20AB86B50();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v46, v47);
    uint64_t v37 = (uint64_t)v53;
    v53[v48[22]] = v36 & 1;
    sub_20A9B8E4C(v37, v41);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_20A9B8EB0(v37);
  }
}

void sub_20A9B8C8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9B8320();
    unint64_t v7 = a3(a1, &type metadata for NetworkEventData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9B8CF0()
{
  unint64_t result = qword_2676540F0;
  if (!qword_2676540F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540F0);
  }
  return result;
}

unint64_t sub_20A9B8D44()
{
  unint64_t result = qword_2676540F8;
  if (!qword_2676540F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676540F8);
  }
  return result;
}

unint64_t sub_20A9B8D98()
{
  unint64_t result = qword_267654100;
  if (!qword_267654100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654100);
  }
  return result;
}

uint64_t sub_20A9B8DEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A9B8470();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A9B8E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9B8EB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkEventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9B8F0C()
{
  return sub_20A9B8F9C(&qword_26AC4F4A8, (void (*)(uint64_t))type metadata accessor for NetworkEventData);
}

uint64_t sub_20A9B8F54()
{
  return sub_20A9B8F9C(&qword_26AC4F4A0, (void (*)(uint64_t))type metadata accessor for NetworkEventData);
}

uint64_t sub_20A9B8F9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A9B8FE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NetworkEventData.init(from:)(a1, a2);
}

uint64_t sub_20A9B8FFC(void *a1)
{
  return NetworkEventData.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for NetworkEventData(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB851C0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    uint64_t v13 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    uint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[17];
    uint64_t v20 = a3[18];
    char v21 = (char *)a1 + v19;
    unsigned __int8 v22 = (char *)a2 + v19;
    *(void *)char v21 = *(void *)v22;
    v21[8] = v22[8];
    char v23 = (char *)a1 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(void *)char v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = a3[20];
    *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
    *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
    uint64_t v26 = a3[21];
    uint64_t v27 = a3[22];
    uint64_t v28 = (void *)((char *)a1 + v26);
    char v29 = (void *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NetworkEventData(uint64_t a1)
{
  uint64_t v2 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[17];
  uint64_t v19 = a3[18];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[21];
  uint64_t v26 = a3[22];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v11 = a3[16];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[17];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  *(unsigned char *)(v15 + 8) = *((unsigned char *)v16 + 8);
  *(void *)uint64_t v15 = v17;
  uint64_t v18 = a3[18];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  *(unsigned char *)(v19 + 8) = *((unsigned char *)v20 + 8);
  *(void *)uint64_t v19 = v21;
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[21];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  return a1;
}

uint64_t initializeWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[17];
  uint64_t v16 = a3[18];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v22 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t assignWithTake for NetworkEventData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB851C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[17];
  uint64_t v20 = a3[18];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[21];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NetworkEventData(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9B98E0);
}

uint64_t sub_20A9B98E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB851C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 64) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NetworkEventData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9B99C4);
}

uint64_t sub_20A9B99C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB851C0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 64) + 8) = a2;
  }
  return result;
}

uint64_t sub_20A9B9A84()
{
  uint64_t result = sub_20AB851C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEventData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkEventData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9B9CD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventData.CodingKeys()
{
  return &type metadata for NetworkEventData.CodingKeys;
}

unint64_t sub_20A9B9D10()
{
  unint64_t result = qword_267654108;
  if (!qword_267654108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654108);
  }
  return result;
}

unint64_t sub_20A9B9D68()
{
  unint64_t result = qword_26AC4F490;
  if (!qword_26AC4F490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F490);
  }
  return result;
}

unint64_t sub_20A9B9DC0()
{
  unint64_t result = qword_26AC4F488;
  if (!qword_26AC4F488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F488);
  }
  return result;
}

uint64_t sub_20A9B9E14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174536568636163 && a2 == 0xEA00000000006574 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461727544736E64 && a2 == 0xEB000000006E6F69 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x447463656E6E6F63 && a2 == 0xEF6E6F6974617275 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4474736575716572 && a2 == 0xEF6E6F6974617275 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA74F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617275446B736174 && a2 == 0xEC0000006E6F6974 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xEC000000657A6953 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x707954746E657665 && a2 == 0xE900000000000065 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000020ABA7510 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x72756F5361746164 && a2 == 0xEA00000000006563 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA7530 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7550 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x49676E697373696DLL && a2 == 0xEE007344496D6574 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4964696C61766E69 && a2 == 0xEE007344496D6574 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x69646E6F70736572 && a2 == 0xED0000706F50676ELL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7570)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

uint64_t static AdUserData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdUserData.userID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdUserData.userID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdUserData.userID.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdUserData __swiftcall AdUserData.init(userID:)(StocksAnalytics::AdUserData userID)
{
  *uint64_t v1 = userID;
  return userID;
}

uint64_t sub_20A9BA710()
{
  return 0x444972657375;
}

uint64_t sub_20A9BA724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x444972657375 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A9BA7B4(uint64_t a1)
{
  unint64_t v2 = sub_20A9BA978();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9BA7F0(uint64_t a1)
{
  unint64_t v2 = sub_20A9BA978();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdUserData.encode(to:)(void *a1)
{
  sub_20A9BAB50(0, &qword_26AC51808, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BA978();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A9BA978()
{
  unint64_t result = qword_26AC4EAD8;
  if (!qword_26AC4EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAD8);
  }
  return result;
}

uint64_t AdUserData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A9BAB50(0, &qword_267654110, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BA978();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9BAB50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9BA978();
    unint64_t v7 = a3(a1, &type metadata for AdUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9BABBC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdUserData.init(from:)(a1, a2);
}

uint64_t sub_20A9BABD4(void *a1)
{
  sub_20A9BAB50(0, &qword_26AC51808, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BA978();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for IssueData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IssueData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdUserData()
{
  return &type metadata for AdUserData;
}

unsigned char *storeEnumTagSinglePayload for AdUserData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9BAE50);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdUserData.CodingKeys()
{
  return &type metadata for AdUserData.CodingKeys;
}

unint64_t sub_20A9BAE8C()
{
  unint64_t result = qword_267654118;
  if (!qword_267654118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654118);
  }
  return result;
}

unint64_t sub_20A9BAEE4()
{
  unint64_t result = qword_26AC4EAE8;
  if (!qword_26AC4EAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAE8);
  }
  return result;
}

unint64_t sub_20A9BAF3C()
{
  unint64_t result = qword_26AC4EAE0;
  if (!qword_26AC4EAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAE0);
  }
  return result;
}

uint64_t static SymbolPriceChangeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

double SymbolPriceChangeData.currentPrice.getter()
{
  return *(double *)v0;
}

void SymbolPriceChangeData.currentPrice.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*SymbolPriceChangeData.currentPrice.modify())()
{
  return nullsub_1;
}

double SymbolPriceChangeData.priceChange.getter()
{
  return *(double *)(v0 + 8);
}

void SymbolPriceChangeData.priceChange.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*SymbolPriceChangeData.priceChange.modify())()
{
  return nullsub_1;
}

uint64_t SymbolPriceChangeData.currency.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolPriceChangeData.currency.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SymbolPriceChangeData.currency.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolPriceChangeData __swiftcall SymbolPriceChangeData.init(currentPrice:priceChange:currency:)(Swift::Double currentPrice, Swift::Double priceChange, Swift::String currency)
{
  *(Swift::Double *)uint64_t v3 = currentPrice;
  *(Swift::Double *)(v3 + 8) = priceChange;
  *(Swift::String *)(v3 + 16) = currency;
  result.currency = currency;
  result.priceChange = priceChange;
  result.currentPrice = currentPrice;
  return result;
}

uint64_t sub_20A9BB08C()
{
  uint64_t v1 = 0x6168436563697270;
  if (*v0 != 1) {
    uint64_t v1 = 0x79636E6572727563;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x50746E6572727563;
  }
}

uint64_t sub_20A9BB0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9BB9A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9BB120(uint64_t a1)
{
  unint64_t v2 = sub_20A9BB354();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9BB15C(uint64_t a1)
{
  unint64_t v2 = sub_20A9BB354();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolPriceChangeData.encode(to:)(void *a1)
{
  sub_20A9BB590(0, &qword_267654120, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v10 - v7;
  v10[1] = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BB354();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C30();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C30();
    char v11 = 2;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9BB354()
{
  unint64_t result = qword_267654128;
  if (!qword_267654128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654128);
  }
  return result;
}

uint64_t SymbolPriceChangeData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A9BB590(0, &qword_267654130, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BB354();
  sub_20AB86DA0();
  if (!v2)
  {
    char v21 = 0;
    sub_20AB86B60();
    uint64_t v11 = v10;
    char v20 = 1;
    sub_20AB86B60();
    uint64_t v13 = v12;
    char v19 = 2;
    uint64_t v15 = sub_20AB86B40();
    uint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9BB590(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9BB354();
    unint64_t v7 = a3(a1, &type metadata for SymbolPriceChangeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9BB5FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SymbolPriceChangeData.init(from:)(a1, a2);
}

uint64_t sub_20A9BB614(void *a1)
{
  return SymbolPriceChangeData.encode(to:)(a1);
}

uint64_t destroy for SymbolPriceChangeData()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolPriceChangeData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SymbolPriceChangeData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SymbolPriceChangeData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolPriceChangeData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolPriceChangeData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceChangeData()
{
  return &type metadata for SymbolPriceChangeData;
}

unsigned char *storeEnumTagSinglePayload for SymbolPriceChangeData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9BB860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolPriceChangeData.CodingKeys()
{
  return &type metadata for SymbolPriceChangeData.CodingKeys;
}

unint64_t sub_20A9BB89C()
{
  unint64_t result = qword_267654138;
  if (!qword_267654138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654138);
  }
  return result;
}

unint64_t sub_20A9BB8F4()
{
  unint64_t result = qword_267654140;
  if (!qword_267654140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654140);
  }
  return result;
}

unint64_t sub_20A9BB94C()
{
  unint64_t result = qword_267654148;
  if (!qword_267654148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654148);
  }
  return result;
}

uint64_t sub_20A9BB9A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x50746E6572727563 && a2 == 0xEC00000065636972;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436563697270 && a2 == 0xEB0000000065676ELL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id sub_20A9BBB28()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext];
  id result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v3 = objc_msgSend(result, sel_cachedSubscription);
  swift_unknownObjectRelease();
  _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(v3);

  id result = objc_msgSend(v1, sel_bundleSubscriptionManager);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  objc_msgSend(result, sel_addObserver_, v0);
  swift_unknownObjectRelease();
  sub_20AB86110();
  *(void *)(swift_allocObject() + 16) = v0;
  unsigned int v4 = v0;
  sub_20AB86100();

  return (id)swift_release();
}

uint64_t _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(void *a1)
{
  sub_20A9BC52C();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9BC08C(a1, (uint64_t)&v37);
  unsigned __int8 v5 = v37;
  unsigned __int8 v6 = v38;
  int v30 = v38;
  int v31 = v37;
  unsigned __int8 v7 = v39;
  int v29 = v39;
  uint64_t v8 = v40;
  uint64_t v9 = v41;
  uint64_t v27 = v41;
  uint64_t v28 = v40;
  uint64_t v10 = v42;
  uint64_t v11 = v43;
  uint64_t v25 = v43;
  uint64_t v26 = v42;
  LOBYTE(a1) = v44;
  int v32 = v44;
  uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
  sub_20AB85B30();
  unsigned __int8 v37 = v5;
  unsigned __int8 v38 = v6;
  unsigned __int8 v39 = v7;
  uint64_t v40 = v8;
  uint64_t v41 = v9;
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  unsigned __int8 v44 = a1;
  sub_20A9BC5DC();
  uint64_t v24 = v12;
  uint64_t v13 = sub_20AB85A70();
  uint64_t v14 = *(void *)(v13 - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = v15 + *(void *)(v14 + 72);
  uint64_t v16 = swift_allocObject();
  long long v22 = xmmword_20AB88020;
  *(_OWORD *)(v16 + 16) = xmmword_20AB88020;
  uint64_t v17 = *MEMORY[0x263F24D40];
  uint64_t v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 104);
  v18(v16 + v15, v17, v13);
  sub_20A9BC588();
  sub_20AB85F60();
  swift_bridgeObjectRelease();
  swift_release();
  unsigned __int8 v37 = v31;
  unsigned __int8 v38 = v30;
  unsigned __int8 v39 = v29;
  uint64_t v40 = v28;
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  uint64_t v43 = v25;
  unsigned __int8 v44 = v32;
  char v19 = v33;
  sub_20AB85910();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v22;
  v18(v20 + v15, v17, v13);
  sub_20AB85AE0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v19, v36);
}

id sub_20A9BBF78()
{
  id result = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_bundleSubscriptionManager);
  if (result)
  {
    BOOL v2 = result;
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v5[4] = sub_20A9BC4DC;
    v5[5] = v3;
    v5[0] = MEMORY[0x263EF8330];
    v5[1] = 1107296256;
    v5[2] = sub_20A9BC2F4;
    v5[3] = &block_descriptor;
    uint64_t v4 = _Block_copy(v5);
    swift_release();
    objc_msgSend(v2, sel_refreshBundleSubscriptionWithCachePolicy_completion_, 2, v4);
    _Block_release(v4);
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_20A9BC08C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_subscriptionState);
  if ((unint64_t)v4 >= 4)
  {
    id result = (id)sub_20AB86A50();
    __break(1u);
  }
  else
  {
    char v5 = (char)v4;
    unsigned __int8 v6 = objc_msgSend(a1, sel_isPurchaser);
    unsigned __int8 v7 = objc_msgSend(a1, sel_isAmplifyUser);
    id v8 = objc_msgSend(a1, sel_bundlePurchaseID);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_20AB866E0();
      uint64_t v12 = v11;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v12 = 0;
    }
    id v13 = objc_msgSend(a1, sel_servicesBundlePurchaseID);
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_20AB866E0();
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    id result = objc_msgSend(a1, sel_isPaidBundleViaOfferActivated);
    *(unsigned char *)a2 = 0x3030201u >> (8 * v5);
    *(unsigned char *)(a2 + 1) = v6;
    *(unsigned char *)(a2 + 2) = v7;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v17;
    *(unsigned char *)(a2 + 40) = (_BYTE)result;
  }
  return result;
}

uint64_t sub_20A9BC214(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  id v5 = a1;
  sub_20AB86420();

  return swift_release();
}

void sub_20A9BC298(uint64_t a1, void *a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x21052AE40](v3);
  if (v4)
  {
    id v5 = (void *)v4;
    _s15StocksAnalytics15SessionObserverC27bundleSubscriptionDidExpireyySo08FCBundleF0CF_0(a2);
  }
}

void sub_20A9BC2F4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_20A9BC448()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_20A9BC480()
{
  return sub_20A9BBF78();
}

uint64_t sub_20A9BC4A4()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20A9BC4DC(void *a1)
{
  return sub_20A9BC214(a1, v1);
}

uint64_t sub_20A9BC4E4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_20A9BC524()
{
  sub_20A9BC298(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_20A9BC52C()
{
  if (!qword_26AC4E510)
  {
    sub_20A9BC588();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E510);
    }
  }
}

unint64_t sub_20A9BC588()
{
  unint64_t result = qword_26AC51008;
  if (!qword_26AC51008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51008);
  }
  return result;
}

void sub_20A9BC5DC()
{
  if (!qword_26AC51990)
  {
    sub_20AB85A70();
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC51990);
    }
  }
}

uint64_t static BannerAdData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t BannerAdData.isInteractive.getter()
{
  return *v0;
}

uint64_t BannerAdData.isInteractive.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*BannerAdData.isInteractive.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isDownloadable.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t BannerAdData.isDownloadable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*BannerAdData.isDownloadable.modify())()
{
  return nullsub_1;
}

uint64_t BannerAdData.isVideo.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t BannerAdData.isVideo.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*BannerAdData.isVideo.modify())()
{
  return nullsub_1;
}

StocksAnalytics::BannerAdData __swiftcall BannerAdData.init(isInteractive:isDownloadable:isVideo:)(Swift::Bool isInteractive, Swift::Bool isDownloadable, Swift::Bool isVideo)
{
  *uint64_t v3 = isInteractive;
  v3[1] = isDownloadable;
  v3[2] = isVideo;
  result.isInteractive = isInteractive;
  return result;
}

uint64_t sub_20A9BC6E4()
{
  uint64_t v1 = 0x6F6C6E776F447369;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F656469567369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x617265746E497369;
  }
}

uint64_t sub_20A9BC758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9BCFC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9BC780(uint64_t a1)
{
  unint64_t v2 = sub_20A9BC9B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9BC7BC(uint64_t a1)
{
  unint64_t v2 = sub_20A9BC9B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BannerAdData.encode(to:)(void *a1)
{
  sub_20A9BCBF0(0, &qword_26AC52260, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v8 = (char *)v10 - v7;
  v10[6] = *(unsigned __int8 *)(v1 + 1);
  v10[3] = *(unsigned __int8 *)(v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BC9B0();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C20();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C20();
    char v11 = 2;
    sub_20AB86C20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9BC9B0()
{
  unint64_t result = qword_26AC52120;
  if (!qword_26AC52120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52120);
  }
  return result;
}

uint64_t BannerAdData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20A9BCBF0(0, &qword_267654210, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BC9B0();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    char v10 = sub_20AB86B50();
    char v16 = 1;
    char v11 = sub_20AB86B50();
    char v15 = 2;
    char v13 = sub_20AB86B50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
    a2[1] = v11 & 1;
    a2[2] = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9BCBF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9BC9B0();
    unint64_t v7 = a3(a1, &type metadata for BannerAdData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9BCC5C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BannerAdData.init(from:)(a1, a2);
}

uint64_t sub_20A9BCC74(void *a1)
{
  return BannerAdData.encode(to:)(a1);
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BannerAdData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for BannerAdData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)unint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)unint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData()
{
  return &type metadata for BannerAdData;
}

unsigned char *storeEnumTagSinglePayload for BannerAdData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9BCE88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BannerAdData.CodingKeys()
{
  return &type metadata for BannerAdData.CodingKeys;
}

unint64_t sub_20A9BCEC4()
{
  unint64_t result = qword_267654218;
  if (!qword_267654218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654218);
  }
  return result;
}

unint64_t sub_20A9BCF1C()
{
  unint64_t result = qword_26AC52130;
  if (!qword_26AC52130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52130);
  }
  return result;
}

unint64_t sub_20A9BCF74()
{
  unint64_t result = qword_26AC52128;
  if (!qword_26AC52128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52128);
  }
  return result;
}

uint64_t sub_20A9BCFC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617265746E497369 && a2 == 0xED00006576697463;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6E776F447369 && a2 == 0xEE00656C62616461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F656469567369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::PurchaseType_optional __swiftcall PurchaseType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t PurchaseType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574726143616C61;
      break;
    case 2:
      uint64_t result = 0x656C646E7562;
      break;
    case 3:
      uint64_t result = 0x656C646E754273;
      break;
    case 4:
      uint64_t result = 0x43656C646E754273;
      break;
    case 5:
      uint64_t result = 0x7748656C646E7562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9BD294(unsigned __int8 *a1, char *a2)
{
  return sub_20AA3893C(*a1, *a2);
}

unint64_t sub_20A9BD2A4()
{
  unint64_t result = qword_267654220;
  if (!qword_267654220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654220);
  }
  return result;
}

uint64_t sub_20A9BD2F8()
{
  return sub_20AB4CA7C();
}

uint64_t sub_20A9BD300()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9BD404()
{
  return sub_20AB4E204();
}

StocksAnalytics::PurchaseType_optional sub_20A9BD40C(Swift::String *a1)
{
  return PurchaseType.init(rawValue:)(*a1);
}

void sub_20A9BD418(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6574726143616C61;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656C646E7562;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656C646E754273;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      strcpy((char *)a1, "sBundleCarrier");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0x7748656C646E7562;
      *(void *)(a1 + 8) = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20A9BD4FC()
{
  return sub_20AB86750();
}

uint64_t sub_20A9BD55C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for PurchaseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9BD678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseType()
{
  return &type metadata for PurchaseType;
}

unint64_t sub_20A9BD6B0()
{
  unint64_t result = qword_26AC4ECF0;
  if (!qword_26AC4ECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECF0);
  }
  return result;
}

uint64_t AdGroupData.init(groupData:)@<X0>(char *a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = *a1;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

StocksAnalytics::StoreKitError_optional __swiftcall StoreKitError.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_20AB86CD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 3;
  switch(v3)
  {
    case 0:
      goto LABEL_5;
    case 1:
      char v5 = 1;
      goto LABEL_5;
    case 2:
      char v5 = 2;
LABEL_5:
      char v6 = v5;
      break;
    case 3:
      break;
    case 4:
      char v6 = 4;
      break;
    case 5:
      char v6 = 5;
      break;
    case 6:
      char v6 = 6;
      break;
    case 7:
      char v6 = 7;
      break;
    case 8:
      char v6 = 8;
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    default:
      char v6 = 21;
      break;
  }
  *unint64_t v2 = v6;
  return result;
}

unint64_t StoreKitError.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6E49746E65696C63;
      break;
    case 2:
    case 0xD:
    case 0x10:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x49746E656D796170;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000023;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x11:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x12:
      unint64_t result = 0x5479616C7265766FLL;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x14:
      unint64_t result = 0x5264696C61766E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9BDB60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA3846C(*a1, *a2);
}

unint64_t sub_20A9BDB70()
{
  unint64_t result = qword_267654228;
  if (!qword_267654228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654228);
  }
  return result;
}

uint64_t sub_20A9BDBC4()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9BDC2C()
{
  StoreKitError.rawValue.getter();
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9BDC90()
{
  return sub_20AB86D80();
}

StocksAnalytics::StoreKitError_optional sub_20A9BDCF4(Swift::String *a1)
{
  return StoreKitError.init(rawValue:)(*a1);
}

unint64_t sub_20A9BDD00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = StoreKitError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A9BDD28()
{
  return sub_20AB86750();
}

uint64_t sub_20A9BDD88()
{
  return sub_20AB86740();
}

uint64_t getEnumTagSinglePayload for StoreKitError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEC) {
    goto LABEL_17;
  }
  if (a2 + 20 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 20) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 20;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 20;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x15;
  int v8 = v6 - 21;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StoreKitError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9BDF34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitError()
{
  return &type metadata for StoreKitError;
}

unint64_t sub_20A9BDF6C()
{
  unint64_t result = qword_267654230;
  if (!qword_267654230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654230);
  }
  return result;
}

uint64_t sub_20A9BDFC0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC4FCB8, MEMORY[0x263F24D10]);
}

uint64_t static WatchListViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4E138, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FCB8, a1);
}

uint64_t static WatchListViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9BE028(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC4FCD0, MEMORY[0x263F24DC8]);
}

uint64_t static WatchListViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC4FCE8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FCD0, a1);
}

uint64_t sub_20A9BE088()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_26AC51F78);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC51F78);
  return sub_20AB85D30();
}

uint64_t static WatchListViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51F90, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51F78, a1);
}

uint64_t WatchListViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t WatchListViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*WatchListViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9BF048(type metadata accessor for WatchListViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for WatchListViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4FCF0);
}

uint64_t WatchListViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchedSymbolListData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 24);
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WatchListViewEvent.watchedSymbolListData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 24);
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchedSymbolListData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.symbolPerfData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 28);
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9BE510()
{
  unint64_t result = qword_26AC4F018;
  if (!qword_26AC4F018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F018);
  }
  return result;
}

unint64_t sub_20A9BE564()
{
  unint64_t result = qword_26AC4F010;
  if (!qword_26AC4F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F010);
  }
  return result;
}

uint64_t WatchListViewEvent.symbolPerfData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 28);
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.symbolPerfData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 32);
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WatchListViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 32);
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 36);
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WatchListViewEvent.watchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 36);
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchlistData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.watchlistAgeData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 40);
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9BEAB0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A9BEB2C()
{
  unint64_t result = qword_26AC4F7E0;
  if (!qword_26AC4F7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7E0);
  }
  return result;
}

unint64_t sub_20A9BEB80()
{
  unint64_t result = qword_26AC4F7D8;
  if (!qword_26AC4F7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F7D8);
  }
  return result;
}

uint64_t WatchListViewEvent.watchlistAgeData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent(0) + 40);
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WatchListViewEvent.watchlistAgeData.modify())()
{
  return nullsub_1;
}

uint64_t WatchListViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WatchListViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v2, v12);
  uint64_t v13 = a1 + v4[9];
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v2, v14);
  uint64_t v15 = a1 + v4[10];
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  char v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v2, v16);
}

uint64_t WatchListViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t WatchListViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9BF048(type metadata accessor for WatchListViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9BF048@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for WatchListViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654250);
}

uint64_t WatchListViewEvent.Model.watchedSymbolListData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for WatchListViewEvent.Model(0) + 24));

  return swift_bridgeObjectRetain();
}

uint64_t WatchListViewEvent.Model.symbolPerfData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t WatchListViewEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t WatchListViewEvent.Model.watchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WatchListViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

double WatchListViewEvent.Model.watchlistAgeData.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WatchListViewEvent.Model(0) + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  double result = *(double *)(v3 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

__n128 WatchListViewEvent.Model.init(eventData:timedData:watchedSymbolListData:symbolPerfData:viewEndData:watchlistData:watchlistAgeData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, __n128 *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12 = *a3;
  char v13 = *a4;
  char v14 = *a5;
  char v15 = *a6;
  uint64_t v16 = sub_20AB85FC0();
  __n128 v23 = *a7;
  unint64_t v17 = a7[1].n128_u64[0];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a8, a1, v16);
  uint64_t v18 = (int *)type metadata accessor for WatchListViewEvent.Model(0);
  uint64_t v19 = a8 + v18[5];
  uint64_t v20 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v19, a2, v20);
  *(void *)(a8 + v18[6]) = v12;
  *(unsigned char *)(a8 + v18[7]) = v13;
  *(unsigned char *)(a8 + v18[8]) = v14;
  *(unsigned char *)(a8 + v18[9]) = v15;
  char v21 = (__n128 *)(a8 + v18[10]);
  __n128 result = v23;
  *char v21 = v23;
  v21[1].n128_u64[0] = v17;
  return result;
}

unint64_t sub_20A9BF348(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x65506C6F626D7973;
      break;
    case 4:
      unint64_t result = 0x44646E4577656976;
      break;
    case 5:
      unint64_t result = 0x73696C6863746177;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20A9BF460()
{
  return sub_20A9BF348(*v0);
}

uint64_t sub_20A9BF468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9C2D2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9BF490(uint64_t a1)
{
  unint64_t v2 = sub_20A9BF880();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9BF4CC(uint64_t a1)
{
  unint64_t v2 = sub_20A9BF880();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchListViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9BFF00(0, &qword_267654238, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BF880();
  sub_20AB86DC0();
  LOBYTE(v13) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for WatchListViewEvent.Model(0);
    LOBYTE(v13) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    *(void *)&long long v13 = *(void *)(v3 + v10[6]);
    char v15 = 2;
    sub_20A992474();
    sub_20AB86C50();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[7]);
    char v15 = 3;
    sub_20A9BE564();
    sub_20AB86C50();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[8]);
    char v15 = 4;
    sub_20A97CB38();
    sub_20AB86C50();
    LOBYTE(v13) = *(unsigned char *)(v3 + v10[9]);
    char v15 = 5;
    sub_20A9875D0();
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[10]);
    long long v13 = *v11;
    uint64_t v14 = *((void *)v11 + 2);
    char v15 = 6;
    sub_20A9BEB80();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9BF880()
{
  unint64_t result = qword_267654240;
  if (!qword_267654240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654240);
  }
  return result;
}

uint64_t WatchListViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v29 = *(void *)(v3 - 8);
  uint64_t v30 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v28 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int v31 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9BFF00(0, &qword_267654248, MEMORY[0x263F8E040]);
  uint64_t v33 = v8;
  uint64_t v27 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for WatchListViewEvent.Model(0);
  MEMORY[0x270FA5388](v11);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9BF880();
  int v32 = v10;
  uint64_t v14 = v34;
  sub_20AB86DA0();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v15 = v5;
  uint64_t v34 = (int *)v11;
  uint64_t v16 = (uint64_t)v13;
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  uint64_t v19 = v30;
  LOBYTE(v35) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  char v21 = v31;
  int v31 = (char *)v6;
  v20(v16, v21, v6);
  LOBYTE(v35) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v16 + v34[5], v15, v19);
  char v37 = 2;
  sub_20A992420();
  sub_20AB86B80();
  *(void *)(v16 + v34[6]) = v35;
  char v37 = 3;
  sub_20A9BE510();
  sub_20AB86B80();
  uint64_t v22 = v27;
  *(unsigned char *)(v16 + v34[7]) = v35;
  char v37 = 4;
  sub_20A97CAE4();
  sub_20AB86B80();
  *(unsigned char *)(v16 + v34[8]) = v35;
  char v37 = 5;
  sub_20A98757C();
  sub_20AB86B80();
  *(unsigned char *)(v16 + v34[9]) = v35;
  char v37 = 6;
  sub_20A9BEB2C();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v32, v33);
  uint64_t v23 = v16 + v34[10];
  *(_OWORD *)uint64_t v23 = v35;
  *(void *)(v23 + 16) = v36;
  sub_20A9BFF64(v16, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A9BFFC8(v16);
}

void sub_20A9BFF00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9BF880();
    unint64_t v7 = a3(a1, &type metadata for WatchListViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9BFF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchListViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9BFFC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WatchListViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9C0024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchListViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9C003C(void *a1)
{
  return WatchListViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9C0054@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4E138, MEMORY[0x263F24D18], (uint64_t)qword_26AC4FCB8, a1);
}

uint64_t sub_20A9C008C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC4FCE8, MEMORY[0x263F24DD8], (uint64_t)qword_26AC4FCD0, a1);
}

uint64_t sub_20A9C00C4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51F90, MEMORY[0x263F24DE8], (uint64_t)qword_26AC51F78, a1);
}

uint64_t sub_20A9C00FC@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v4, v13);
  uint64_t v14 = a2 + a1[9];
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v4, v15);
  uint64_t v16 = a2 + a1[10];
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);

  return v18(v16, v4, v17);
}

uint64_t *initializeBufferWithCopyOfBuffer for WatchListViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for WatchListViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

uint64_t initializeWithCopy for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t initializeWithTake for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t assignWithTake for WatchListViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchListViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9C17D8);
}

uint64_t sub_20A9C17D8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[10];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for WatchListViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9C1B80);
}

uint64_t sub_20A9C1B80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_13:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_13;
  }
  sub_20A9BEAB0(0, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a4[10];

  return v22(v24, a2, a2, v23);
}

void sub_20A9C1F20()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9BEAB0(319, (unint64_t *)&qword_26AC4E660, (void (*)(void))sub_20A992420, (void (*)(void))sub_20A992474);
      if (v2 <= 0x3F)
      {
        sub_20A9BEAB0(319, (unint64_t *)&qword_26AC4E5F8, (void (*)(void))sub_20A9BE510, (void (*)(void))sub_20A9BE564);
        if (v3 <= 0x3F)
        {
          sub_20A9BEAB0(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
          if (v4 <= 0x3F)
          {
            sub_20A9BEAB0(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
            if (v5 <= 0x3F)
            {
              sub_20A9BEAB0(319, &qword_26AC4E628, (void (*)(void))sub_20A9BEB2C, (void (*)(void))sub_20A9BEB80);
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for WatchListViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[10];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((void *)v15 + 2) = *((void *)v16 + 2);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v11 = a3[10];
  uint64_t v12 = (_DWORD *)(a1 + v11);
  uint64_t v13 = (_DWORD *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  void v12[2] = v13[2];
  v12[3] = v13[3];
  v12[4] = v13[4];
  v12[5] = v13[5];
  return a1;
}

uint64_t initializeWithTake for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(void *)(v14 + 16) = *(void *)(v15 + 16);
  return a1;
}

uint64_t assignWithTake for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9C27EC);
}

uint64_t sub_20A9C27EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchListViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9C2914);
}

uint64_t sub_20A9C2914(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9C2A24()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WatchListViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9C2BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchListViewEvent.Model.CodingKeys()
{
  return &type metadata for WatchListViewEvent.Model.CodingKeys;
}

unint64_t sub_20A9C2C28()
{
  unint64_t result = qword_267654260;
  if (!qword_267654260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654260);
  }
  return result;
}

unint64_t sub_20A9C2C80()
{
  unint64_t result = qword_267654268;
  if (!qword_267654268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654268);
  }
  return result;
}

unint64_t sub_20A9C2CD8()
{
  unint64_t result = qword_267654270;
  if (!qword_267654270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654270);
  }
  return result;
}

uint64_t sub_20A9C2D2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7320 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65506C6F626D7973 && a2 == 0xEE00617461446672 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73696C6863746177 && a2 == 0xED00006174614474 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7730)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_20A9C307C()
{
  sub_20A9C32A0();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unsigned int v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85EE0();
  uint64_t v7 = v6;
  uint64_t v8 = sub_20AB85EC0();
  v15[0] = v5;
  v15[1] = v7;
  v15[2] = v8;
  v15[3] = v9;
  sub_20A9C32FC();
  sub_20AB85910();
  sub_20A9BC5DC();
  uint64_t v10 = sub_20AB85A70();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v13 + v12, *MEMORY[0x263F24D40], v10);
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_20A9C32A0()
{
  if (!qword_26AC4E540)
  {
    sub_20A9C32FC();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E540);
    }
  }
}

unint64_t sub_20A9C32FC()
{
  unint64_t result = qword_26AC51468;
  if (!qword_26AC51468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51468);
  }
  return result;
}

uint64_t static ConsentScreenActionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ConsentScreenActionData.didAcceptConsentScreen.getter()
{
  return *v0;
}

uint64_t ConsentScreenActionData.didAcceptConsentScreen.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*ConsentScreenActionData.didAcceptConsentScreen.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ConsentScreenActionData __swiftcall ConsentScreenActionData.init(didAcceptConsentScreen:)(StocksAnalytics::ConsentScreenActionData didAcceptConsentScreen)
{
  v1->didAcceptConsentScreen = didAcceptConsentScreen.didAcceptConsentScreen;
  return didAcceptConsentScreen;
}

unint64_t sub_20A9C3390()
{
  return 0xD000000000000016;
}

uint64_t sub_20A9C33AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9C3D64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A9C33D8(uint64_t a1)
{
  unint64_t v2 = sub_20A9C3598();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9C3414(uint64_t a1)
{
  unint64_t v2 = sub_20A9C3598();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConsentScreenActionData.encode(to:)(void *a1)
{
  sub_20A9C3770(0, &qword_267654278, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9C3598();
  sub_20AB86DC0();
  sub_20AB86C20();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20A9C3598()
{
  unint64_t result = qword_267654280;
  if (!qword_267654280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654280);
  }
  return result;
}

uint64_t ConsentScreenActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20A9C3770(0, &qword_267654288, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9C3598();
  sub_20AB86DA0();
  if (!v2)
  {
    char v10 = sub_20AB86B50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9C3770(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9C3598();
    unint64_t v7 = a3(a1, &type metadata for ConsentScreenActionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9C37D8()
{
  unint64_t result = qword_267654290;
  if (!qword_267654290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654290);
  }
  return result;
}

unint64_t sub_20A9C3830()
{
  unint64_t result = qword_267654298;
  if (!qword_267654298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654298);
  }
  return result;
}

uint64_t sub_20A9C3884@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ConsentScreenActionData.init(from:)(a1, a2);
}

uint64_t sub_20A9C389C(void *a1)
{
  sub_20A9C3770(0, &qword_267654278, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9C3598();
  sub_20AB86DC0();
  sub_20AB86C20();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t getEnumTagSinglePayload for ConsentScreenActionData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConsentScreenActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9C3B50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData()
{
  return &type metadata for ConsentScreenActionData;
}

unsigned char *storeEnumTagSinglePayload for ConsentScreenActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9C3C24);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConsentScreenActionData.CodingKeys()
{
  return &type metadata for ConsentScreenActionData.CodingKeys;
}

unint64_t sub_20A9C3C60()
{
  unint64_t result = qword_2676542A0;
  if (!qword_2676542A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676542A0);
  }
  return result;
}

unint64_t sub_20A9C3CB8()
{
  unint64_t result = qword_2676542A8;
  if (!qword_2676542A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676542A8);
  }
  return result;
}

unint64_t sub_20A9C3D10()
{
  unint64_t result = qword_2676542B0;
  if (!qword_2676542B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676542B0);
  }
  return result;
}

uint64_t sub_20A9C3D64(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA77C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20A9C3DEC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676542B8, MEMORY[0x263F24D10]);
}

uint64_t static ArticleScrollEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676532F8, MEMORY[0x263F24D18], (uint64_t)qword_2676542B8, a1);
}

uint64_t static ArticleScrollEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9C3E54(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676542D0, MEMORY[0x263F24DC8]);
}

uint64_t static ArticleScrollEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653300, MEMORY[0x263F24DD8], (uint64_t)qword_2676542D0, a1);
}

uint64_t sub_20A9C3EB4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676542E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676542E8);
  return sub_20AB85D30();
}

uint64_t static ArticleScrollEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653308, MEMORY[0x263F24DE8], (uint64_t)qword_2676542E8, a1);
}

uint64_t ArticleScrollEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ArticleScrollEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ArticleScrollEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9C5A8C(type metadata accessor for ArticleScrollEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for ArticleScrollEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52308);
}

uint64_t ArticleScrollEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleScrollEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 24);
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleScrollEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 28);
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleScrollEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 32);
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleScrollEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 36);
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollStartData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9C4834()
{
  unint64_t result = qword_26AC52288;
  if (!qword_26AC52288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52288);
  }
  return result;
}

unint64_t sub_20A9C4888()
{
  unint64_t result = qword_26AC52290;
  if (!qword_26AC52290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52290);
  }
  return result;
}

uint64_t ArticleScrollEvent.scrollStartData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 40);
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollStartData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.scrollEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9C4A84()
{
  unint64_t result = qword_26AC522A0;
  if (!qword_26AC522A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC522A0);
  }
  return result;
}

unint64_t sub_20A9C4AD8()
{
  unint64_t result = qword_26AC522A8;
  if (!qword_26AC522A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC522A8);
  }
  return result;
}

uint64_t ArticleScrollEvent.scrollEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 44);
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.scrollEndData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9C4CD4()
{
  unint64_t result = qword_26AC4FAA8;
  if (!qword_26AC4FAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FAA8);
  }
  return result;
}

unint64_t sub_20A9C4D28()
{
  unint64_t result = qword_26AC4FAA0;
  if (!qword_26AC4FAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FAA0);
  }
  return result;
}

uint64_t ArticleScrollEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 48);
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9C4F24()
{
  unint64_t result = qword_26AC50968;
  if (!qword_26AC50968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50968);
  }
  return result;
}

unint64_t sub_20A9C4F78()
{
  unint64_t result = qword_26AC50960;
  if (!qword_26AC50960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50960);
  }
  return result;
}

uint64_t ArticleScrollEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 52);
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ArticleScrollEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 56);
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9C531C(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ArticleScrollEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent(0) + 60);
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ArticleScrollEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ArticleScrollEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ArticleScrollEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v10, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v2, v27);
}

uint64_t ArticleScrollEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ArticleScrollEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9C5A8C(type metadata accessor for ArticleScrollEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9C5A8C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for ArticleScrollEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC523C0);
}

uint64_t ArticleScrollEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 28);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t ArticleScrollEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

float ArticleScrollEvent.Model.scrollStartData.getter@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 40));
  *a1 = result;
  return result;
}

double ArticleScrollEvent.Model.scrollEndData.getter@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 44));
  *a1 = result;
  return result;
}

uint64_t ArticleScrollEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArticleScrollEvent.Model(0);
  sub_20A9C5D88(v1 + *(int *)(v3 + 48), (uint64_t)v5);
  sub_20A9C5D88((uint64_t)v5, a1);
  return sub_20A9C5E44((uint64_t)v5);
}

uint64_t sub_20A9C5D88(uint64_t a1, uint64_t a2)
{
  sub_20A9C5DEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A9C5DEC()
{
  if (!qword_267654300)
  {
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267654300);
    }
  }
}

uint64_t sub_20A9C5E44(uint64_t a1)
{
  return a1;
}

uint64_t ArticleScrollEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ArticleScrollEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t ArticleScrollEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 56));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ArticleScrollEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ArticleScrollEvent.Model(0) + 60));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ArticleScrollEvent.Model.init(eventData:timedData:newsArticleData:feedData:groupData:viewData:scrollStartData:scrollEndData:articleScienceData:userArticleContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, int *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, __int16 *a11, uint64_t *a12, __n128 *a13)
{
  long long v43 = *a3;
  uint64_t v41 = *((void *)a3 + 3);
  uint64_t v42 = *((void *)a3 + 2);
  char v17 = *((unsigned char *)a3 + 32);
  uint64_t v18 = *((void *)a3 + 5);
  char v19 = *((unsigned char *)a3 + 48);
  uint64_t v40 = *((void *)a3 + 7);
  char v38 = *((unsigned char *)a3 + 65);
  char v39 = *((unsigned char *)a3 + 64);
  char v36 = *((unsigned char *)a3 + 67);
  char v37 = *((unsigned char *)a3 + 66);
  long long v45 = *a4;
  uint64_t v44 = *((void *)a4 + 2);
  long long v48 = a5[1];
  long long v49 = *a5;
  uint64_t v46 = *((void *)a5 + 5);
  uint64_t v47 = *((void *)a5 + 4);
  uint64_t v51 = a6[1];
  uint64_t v52 = *a6;
  __int16 v50 = *((_WORD *)a6 + 8);
  int v20 = *a7;
  sub_20A9C5D88(a10, (uint64_t)v58);
  __int16 v53 = *a11;
  uint64_t v54 = a12[1];
  uint64_t v55 = *a12;
  __n128 v57 = *a13;
  unint64_t v21 = a13[1].n128_u64[0];
  unint64_t v22 = a13[1].n128_u64[1];
  unsigned __int8 v56 = a13[2].n128_u8[0];
  unsigned __int8 v23 = a13[2].n128_u8[1];
  uint64_t v24 = sub_20AB85FC0();
  uint64_t v25 = *a8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a9, a1, v24);
  uint64_t v26 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  uint64_t v27 = a9 + v26[5];
  uint64_t v28 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a2, v28);
  uint64_t v29 = a9 + v26[6];
  *(_OWORD *)uint64_t v29 = v43;
  *(void *)(v29 + 16) = v42;
  *(void *)(v29 + 24) = v41;
  *(unsigned char *)(v29 + 32) = v17;
  *(void *)(v29 + 40) = v18;
  *(unsigned char *)(v29 + 48) = v19;
  *(void *)(v29 + 56) = v40;
  *(unsigned char *)(v29 + 64) = v39;
  *(unsigned char *)(v29 + 65) = v38;
  *(unsigned char *)(v29 + 66) = v37;
  *(unsigned char *)(v29 + 67) = v36;
  uint64_t v30 = a9 + v26[7];
  *(_OWORD *)uint64_t v30 = v45;
  *(void *)(v30 + 16) = v44;
  uint64_t v31 = a9 + v26[8];
  *(_OWORD *)uint64_t v31 = v49;
  *(_OWORD *)(v31 + 16) = v48;
  *(void *)(v31 + 32) = v47;
  *(void *)(v31 + 40) = v46;
  uint64_t v32 = a9 + v26[9];
  *(void *)uint64_t v32 = v52;
  *(void *)(v32 + 8) = v51;
  *(_WORD *)(v32 + 16) = v50;
  *(_DWORD *)(a9 + v26[10]) = v20;
  *(void *)(a9 + v26[11]) = v25;
  sub_20A9C5D88((uint64_t)v58, a9 + v26[12]);
  *(_WORD *)(a9 + v26[13]) = v53;
  uint64_t v33 = (void *)(a9 + v26[14]);
  *uint64_t v33 = v55;
  v33[1] = v54;
  uint64_t v34 = (__n128 *)(a9 + v26[15]);
  __n128 result = v57;
  *uint64_t v34 = v57;
  v34[1].n128_u64[0] = v21;
  v34[1].n128_u64[1] = v22;
  v34[2].n128_u8[0] = v56;
  v34[2].n128_u8[1] = v23;
  return result;
}

uint64_t sub_20A9C6200(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      unsigned int v3 = 1684366694;
      goto LABEL_7;
    case 4:
      uint64_t result = 0x74614470756F7267;
      break;
    case 5:
      unsigned int v3 = 2003134838;
LABEL_7:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 6:
      uint64_t result = 0x74536C6C6F726373;
      break;
    case 7:
      uint64_t result = 0x6E456C6C6F726373;
      break;
    case 8:
      uint64_t result = 0xD000000000000012;
      break;
    case 9:
      uint64_t result = 0xD000000000000016;
      break;
    case 10:
      uint64_t result = 0x7461446575737369;
      break;
    case 11:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9C639C()
{
  return sub_20A9C6200(*v0);
}

uint64_t sub_20A9C63A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9CC620(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9C63CC(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_20A9C63D8(uint64_t a1)
{
  unint64_t v2 = sub_20A9C69BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9C6414(uint64_t a1)
{
  unint64_t v2 = sub_20A9C69BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ArticleScrollEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9C744C(0, &qword_267654308, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9C69BC();
  sub_20AB86DC0();
  LOBYTE(v42) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
    LOBYTE(v42) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v42 = v12;
    *(void *)&long long v43 = v13;
    *((void *)&v43 + 1) = v14;
    LOBYTE(v44) = v15;
    *((void *)&v44 + 1) = v16;
    char v45 = v17;
    uint64_t v46 = v18;
    char v47 = v19;
    char v48 = v20;
    char v49 = v21;
    char v50 = (char)v11;
    LOBYTE(v37) = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    unint64_t v22 = (long long *)(v3 + v10[7]);
    uint64_t v23 = *((void *)v22 + 2);
    long long v42 = *v22;
    *(void *)&long long v43 = v23;
    LOBYTE(v37) = 3;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    long long v25 = v24[1];
    long long v42 = *v24;
    long long v43 = v25;
    long long v44 = v24[2];
    LOBYTE(v37) = 4;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v26 = (uint64_t *)(v3 + v10[9]);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    LOWORD(v26) = *((_WORD *)v26 + 8);
    *(void *)&long long v42 = v27;
    *((void *)&v42 + 1) = v28;
    LOWORD(v43) = (_WORD)v26;
    LOBYTE(v37) = 5;
    sub_20A986C14();
    sub_20AB86C50();
    LODWORD(v42) = *(_DWORD *)(v3 + v10[10]);
    LOBYTE(v37) = 6;
    sub_20A9C4888();
    sub_20AB86C50();
    uint64_t v52 = *(void *)(v3 + v10[11]);
    char v51 = 7;
    sub_20A9C4AD8();
    sub_20AB86C50();
    sub_20A9C5D88(v3 + v10[12], (uint64_t)&v42);
    sub_20A9C5D88((uint64_t)&v42, (uint64_t)&v37);
    char v36 = 8;
    sub_20A9C4D28();
    sub_20AB86BE0();
    LOWORD(v37) = *(_WORD *)(v3 + v10[13]);
    char v36 = 9;
    sub_20A9C4F78();
    sub_20AB86C50();
    long long v37 = *(_OWORD *)(v3 + v10[14]);
    char v36 = 10;
    sub_20A9870B4();
    sub_20AB86BE0();
    uint64_t v29 = (long long *)(v3 + v10[15]);
    long long v30 = *v29;
    uint64_t v31 = *((void *)v29 + 2);
    uint64_t v32 = *((void *)v29 + 3);
    char v33 = *((unsigned char *)v29 + 32);
    LOBYTE(v29) = *((unsigned char *)v29 + 33);
    long long v37 = v30;
    uint64_t v38 = v31;
    uint64_t v39 = v32;
    char v40 = v33;
    char v41 = (char)v29;
    char v36 = 11;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9C69BC()
{
  unint64_t result = qword_267654310;
  if (!qword_267654310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654310);
  }
  return result;
}

uint64_t ArticleScrollEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v56 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9C744C(0, &qword_267654318, MEMORY[0x263F8E040]);
  uint64_t v52 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v50 - v11;
  char v60 = (int *)type metadata accessor for ArticleScrollEvent.Model(0);
  MEMORY[0x270FA5388](v60);
  char v61 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A9C69BC();
  __n128 v57 = v12;
  uint64_t v15 = v59;
  sub_20AB86DA0();
  uint64_t v53 = v6;
  if (v15)
  {
    uint64_t v59 = v15;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  uint64_t v16 = v5;
  LOBYTE(v68) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  char v20 = v61;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v61, v8, v6);
  LOBYTE(v68) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v21 = v55;
  sub_20AB86B80();
  unint64_t v22 = v60;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v20[v60[5]], v16, v21);
  v67[0] = 2;
  sub_20A97A154();
  sub_20AB86B80();
  long long v23 = v69;
  char v24 = v70;
  uint64_t v25 = *((void *)&v70 + 1);
  char v26 = v71;
  uint64_t v27 = v72;
  char v28 = v73;
  char v29 = v74;
  char v30 = v75;
  char v31 = v76;
  uint64_t v32 = &v20[v22[6]];
  *(_OWORD *)uint64_t v32 = v68;
  *((_OWORD *)v32 + 1) = v23;
  v32[32] = v24;
  *((void *)v32 + 5) = v25;
  v32[48] = v26;
  *((void *)v32 + 7) = v27;
  v32[64] = v28;
  v32[65] = v29;
  v32[66] = v30;
  v32[67] = v31;
  v67[0] = 3;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v33 = v69;
  uint64_t v34 = &v20[v22[7]];
  *(_OWORD *)uint64_t v34 = v68;
  *((void *)v34 + 2) = v33;
  v67[0] = 4;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v35 = &v20[v22[8]];
  long long v36 = v69;
  *(_OWORD *)uint64_t v35 = v68;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v70;
  v67[0] = 5;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v37 = *((void *)&v68 + 1);
  __int16 v38 = v69;
  uint64_t v39 = &v20[v22[9]];
  *(void *)uint64_t v39 = v68;
  *((void *)v39 + 1) = v37;
  *((_WORD *)v39 + 8) = v38;
  v67[0] = 6;
  sub_20A9C4834();
  sub_20AB86B80();
  *(_DWORD *)&v20[v22[10]] = v68;
  v67[0] = 7;
  sub_20A9C4A84();
  sub_20AB86B80();
  *(void *)&v20[v60[11]] = v68;
  char v78 = 8;
  sub_20A9C4CD4();
  sub_20AB86B10();
  uint64_t v59 = 0;
  sub_20A9C5D88((uint64_t)&v68, (uint64_t)v67);
  sub_20A9C5D88((uint64_t)v67, (uint64_t)&v20[v60[12]]);
  char v77 = 9;
  sub_20A9C4F24();
  uint64_t v40 = v59;
  sub_20AB86B80();
  uint64_t v59 = v40;
  if (v40 || (*(_WORD *)&v61[v60[13]] = v62, v77 = 10, sub_20A987060(), uint64_t v41 = v59, sub_20AB86B10(), (v59 = v41) != 0))
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    char v42 = 0;
  }
  else
  {
    *(_OWORD *)&v61[v60[14]] = v62;
    char v77 = 11;
    sub_20A986280();
    uint64_t v43 = v59;
    sub_20AB86B80();
    uint64_t v59 = v43;
    if (!v43)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v52);
      uint64_t v44 = v63;
      uint64_t v45 = v64;
      char v46 = v65;
      char v47 = v66;
      uint64_t v48 = (uint64_t)v61;
      char v49 = &v61[v60[15]];
      *(_OWORD *)char v49 = v62;
      *((void *)v49 + 2) = v44;
      *((void *)v49 + 3) = v45;
      v49[32] = v46;
      v49[33] = v47;
      sub_20A9C74DC(v48, v51);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      return sub_20A9C7540(v48);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v52);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    char v42 = 1;
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v53);
  char v19 = v60;
  uint64_t v18 = v61;
  (*(void (**)(char *, uint64_t))(v54 + 8))(&v61[v60[5]], v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A98937C(*(void *)&v18[v19[8]], *(void *)&v18[v19[8] + 8], *(void *)&v18[v19[8] + 16]);
  swift_bridgeObjectRelease();
  sub_20A9C5D88((uint64_t)&v18[v19[12]], (uint64_t)&v68);
  uint64_t result = sub_20A9C74B0((uint64_t)&v68);
  if (v42) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_20A9C744C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9C69BC();
    unint64_t v7 = a3(a1, &type metadata for ArticleScrollEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9C74B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A9C74DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9C7540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ArticleScrollEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9C759C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArticleScrollEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9C75B4(void *a1)
{
  return ArticleScrollEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9C75CC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676532F8, MEMORY[0x263F24D18], (uint64_t)qword_2676542B8, a1);
}

uint64_t sub_20A9C7604@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653300, MEMORY[0x263F24DD8], (uint64_t)qword_2676542D0, a1);
}

uint64_t sub_20A9C763C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653308, MEMORY[0x263F24DE8], (uint64_t)qword_2676542E8, a1);
}

uint64_t sub_20A9C7674@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v11, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v4, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleScrollEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    __int16 v38 = (char *)a2 + v36;
    sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    char v46 = (char *)a2 + v44;
    sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9C9EA8);
}

uint64_t sub_20A9C9EA8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9CA4E4);
}

uint64_t sub_20A9CA4E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20A9C531C(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20A9C531C(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20A9C531C(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_20A9CAB18()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9C531C(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20A9C531C(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F)
        {
          sub_20A9C531C(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
          if (v4 <= 0x3F)
          {
            sub_20A9C531C(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
            if (v5 <= 0x3F)
            {
              sub_20A9C531C(319, &qword_26AC52280, (void (*)(void))sub_20A9C4834, (void (*)(void))sub_20A9C4888);
              if (v6 <= 0x3F)
              {
                sub_20A9C531C(319, &qword_26AC52298, (void (*)(void))sub_20A9C4A84, (void (*)(void))sub_20A9C4AD8);
                if (v7 <= 0x3F)
                {
                  sub_20A9C531C(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9C531C(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
                    if (v9 <= 0x3F)
                    {
                      sub_20A9C531C(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                      if (v10 <= 0x3F)
                      {
                        sub_20A9C531C(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ArticleScrollEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    *uint64_t v18 = *v19;
    uint64_t v20 = *((void *)v19 + 2);
    *((void *)v18 + 1) = *((void *)v19 + 1);
    *((void *)v18 + 2) = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v24)
    {
      *uint64_t v22 = *v23;
      *((void *)v22 + 1) = *((void *)v23 + 1);
      *((void *)v22 + 2) = v24;
      *((void *)v22 + 3) = *((void *)v23 + 3);
      uint64_t v25 = *((void *)v23 + 5);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      *((void *)v22 + 5) = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v27 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v27;
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    }
    uint64_t v28 = a3[9];
    uint64_t v29 = a3[10];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    *((_WORD *)v30 + 8) = *((_WORD *)v31 + 8);
    *(_DWORD *)((char *)a1 + v29) = *(_DWORD *)((char *)a2 + v29);
    uint64_t v33 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    long long v36 = *((_OWORD *)v35 + 1);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v36;
    long long v37 = *((_OWORD *)v35 + 3);
    *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
    *((_OWORD *)v34 + 3) = v37;
    *((_OWORD *)v34 + 4) = *((_OWORD *)v35 + 4);
    *((void *)v34 + 10) = *((void *)v35 + 10);
    *(_OWORD *)(v34 + 88) = *(_OWORD *)(v35 + 88);
    *(_OWORD *)(v34 + 104) = *(_OWORD *)(v35 + 104);
    *((_DWORD *)v34 + 30) = *((_DWORD *)v35 + 30);
    *((_OWORD *)v34 + 8) = *((_OWORD *)v35 + 8);
    v34[144] = v35[144];
    *(void *)(v34 + 148) = *(void *)(v35 + 148);
    long long v38 = *((_OWORD *)v35 + 10);
    long long v39 = *((_OWORD *)v35 + 11);
    *((void *)v34 + 24) = *((void *)v35 + 24);
    uint64_t v40 = a3[13];
    uint64_t v41 = a3[14];
    __int16 v42 = *(_WORD *)((char *)a2 + v40);
    *((_OWORD *)v34 + 10) = v38;
    *((_OWORD *)v34 + 11) = v39;
    *(_WORD *)((char *)a1 + v40) = v42;
    uint64_t v43 = (uint64_t *)((char *)a1 + v41);
    uint64_t v44 = *(uint64_t *)((char *)a2 + v41 + 8);
    *uint64_t v43 = *(uint64_t *)((char *)a2 + v41);
    v43[1] = v44;
    uint64_t v45 = a3[15];
    uint64_t v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    uint64_t v49 = *((void *)v47 + 3);
    *((void *)v46 + 2) = *((void *)v47 + 2);
    *((void *)v46 + 3) = v49;
    v46[32] = v47[32];
    v46[33] = v47[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 32) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  *(void *)(v17 + 16) = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a2 + v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23)
  {
    *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
    *(void *)(v21 + 8) = *(void *)(v22 + 8);
    *(void *)(v21 + 16) = v23;
    *(void *)(v21 + 24) = *(void *)(v22 + 24);
    uint64_t v24 = *(void *)(v22 + 40);
    *(void *)(v21 + 32) = *(void *)(v22 + 32);
    *(void *)(v21 + 40) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *(_OWORD *)(v22 + 16);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    *(_OWORD *)(v21 + 32) = *(_OWORD *)(v22 + 32);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  uint64_t v30 = *(void *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(void *)(v28 + 8) = v30;
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  *(_DWORD *)(a1 + v27) = *(_DWORD *)(a2 + v27);
  uint64_t v31 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v34;
  long long v35 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v35;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(void *)(v32 + 80) = *(void *)(v33 + 80);
  *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
  *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
  *(_DWORD *)(v32 + 120) = *(_DWORD *)(v33 + 120);
  *(_OWORD *)(v32 + 128) = *(_OWORD *)(v33 + 128);
  *(unsigned char *)(v32 + 144) = *(unsigned char *)(v33 + 144);
  *(void *)(v32 + 148) = *(void *)(v33 + 148);
  long long v36 = *(_OWORD *)(v33 + 160);
  long long v37 = *(_OWORD *)(v33 + 176);
  *(void *)(v32 + 192) = *(void *)(v33 + 192);
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  __int16 v40 = *(_WORD *)(a2 + v38);
  *(_OWORD *)(v32 + 160) = v36;
  *(_OWORD *)(v32 + 176) = v37;
  *(_WORD *)(a1 + v38) = v40;
  uint64_t v41 = (void *)(a1 + v39);
  uint64_t v42 = *(void *)(a2 + v39 + 8);
  *uint64_t v41 = *(void *)(a2 + v39);
  v41[1] = v42;
  uint64_t v43 = a3[15];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)(v45 + 8);
  *(void *)uint64_t v44 = *(void *)v45;
  *(void *)(v44 + 8) = v46;
  uint64_t v47 = *(void *)(v45 + 24);
  *(void *)(v44 + 16) = *(void *)(v45 + 16);
  *(void *)(v44 + 24) = v47;
  *(unsigned char *)(v44 + 32) = *(unsigned char *)(v45 + 32);
  *(unsigned char *)(v44 + 33) = *(unsigned char *)(v45 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (long long *)(a2 + v18);
  uint64_t v21 = *(void *)(a1 + v18 + 16);
  uint64_t v22 = *(void *)(a2 + v18 + 16);
  if (v21)
  {
    if (v22)
    {
      *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      *(void *)(v19 + 16) = *((void *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
      *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
      *(void *)(v19 + 32) = *((void *)v20 + 4);
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v19);
      long long v24 = v20[1];
      long long v23 = v20[2];
      *(_OWORD *)uint64_t v19 = *v20;
      *(_OWORD *)(v19 + 16) = v24;
      *(_OWORD *)(v19 + 32) = v23;
    }
  }
  else if (v22)
  {
    *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
    *(void *)(v19 + 8) = *((void *)v20 + 1);
    *(void *)(v19 + 16) = *((void *)v20 + 2);
    *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
    *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
    *(void *)(v19 + 32) = *((void *)v20 + 4);
    *(void *)(v19 + 40) = *((void *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v20;
    long long v26 = v20[2];
    *(_OWORD *)(v19 + 16) = v20[1];
    *(_OWORD *)(v19 + 32) = v26;
    *(_OWORD *)uint64_t v19 = v25;
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(void *)uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  *(unsigned char *)(v28 + 17) = *(unsigned char *)(v29 + 17);
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  uint64_t v30 = a3[11];
  uint64_t v31 = (_DWORD *)(a1 + v30);
  uint64_t v32 = (_DWORD *)(a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = *(void *)(a2 + v33 + 8);
  *(void *)(v34 + 16) = *(void *)(a2 + v33 + 16);
  *(void *)(v34 + 24) = *(void *)(a2 + v33 + 24);
  *(void *)(v34 + 32) = *(void *)(a2 + v33 + 32);
  *(void *)(v34 + 40) = *(void *)(a2 + v33 + 40);
  *(void *)(v34 + 48) = *(void *)(a2 + v33 + 48);
  *(void *)(v34 + 56) = *(void *)(a2 + v33 + 56);
  *(void *)(v34 + 64) = *(void *)(a2 + v33 + 64);
  *(void *)(v34 + 72) = *(void *)(a2 + v33 + 72);
  *(void *)(v34 + 80) = *(void *)(a2 + v33 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v34 + 88) = *(void *)(v35 + 88);
  *(void *)(v34 + 96) = *(void *)(v35 + 96);
  *(void *)(v34 + 104) = *(void *)(v35 + 104);
  *(void *)(v34 + 112) = *(void *)(v35 + 112);
  *(_DWORD *)(v34 + 120) = *(_DWORD *)(v35 + 120);
  *(void *)(v34 + 128) = *(void *)(v35 + 128);
  *(void *)(v34 + 136) = *(void *)(v35 + 136);
  *(unsigned char *)(v34 + 144) = *(unsigned char *)(v35 + 144);
  *(_DWORD *)(v34 + 148) = *(_DWORD *)(v35 + 148);
  *(_DWORD *)(v34 + 152) = *(_DWORD *)(v35 + 152);
  *(void *)(v34 + 160) = *(void *)(v35 + 160);
  *(void *)(v34 + 168) = *(void *)(v35 + 168);
  *(void *)(v34 + 176) = *(void *)(v35 + 176);
  *(void *)(v34 + 184) = *(void *)(v35 + 184);
  *(void *)(v34 + 192) = *(void *)(v35 + 192);
  uint64_t v36 = a3[13];
  long long v37 = (unsigned char *)(a1 + v36);
  uint64_t v38 = (unsigned char *)(a2 + v36);
  *long long v37 = *v38;
  v37[1] = v38[1];
  uint64_t v39 = a3[14];
  __int16 v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  *__int16 v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[15];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(void *)uint64_t v43 = *(void *)(a2 + v42);
  *(void *)(v43 + 8) = *(void *)(a2 + v42 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v43 + 16) = *(void *)(v44 + 16);
  *(void *)(v43 + 24) = *(void *)(v44 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v43 + 32) = *(unsigned char *)(v44 + 32);
  *(unsigned char *)(v43 + 33) = *(unsigned char *)(v44 + 33);
  return a1;
}

uint64_t initializeWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (_OWORD *)(a1 + v19);
  uint64_t v22 = (long long *)(a2 + v19);
  long long v23 = v22[2];
  long long v24 = *v22;
  v21[1] = v22[1];
  v21[2] = v23;
  *uint64_t v21 = v24;
  uint64_t v25 = a1 + v20;
  long long v26 = (long long *)(a2 + v20);
  long long v27 = *v26;
  *(_WORD *)(v25 + 16) = *((_WORD *)v26 + 8);
  *(_OWORD *)uint64_t v25 = v27;
  uint64_t v28 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  uint64_t v29 = a3[12];
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(void *)(v31 + 192) = *(void *)(v32 + 192);
  long long v33 = *(_OWORD *)(v32 + 48);
  *(_OWORD *)(v31 + 32) = *(_OWORD *)(v32 + 32);
  *(_OWORD *)(v31 + 48) = v33;
  long long v34 = *(_OWORD *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(_OWORD *)(v31 + 16) = v34;
  long long v35 = *(_OWORD *)(v32 + 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v32 + 96);
  *(_OWORD *)(v31 + 112) = v35;
  long long v36 = *(_OWORD *)(v32 + 80);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v32 + 64);
  *(_OWORD *)(v31 + 80) = v36;
  long long v37 = *(_OWORD *)(v32 + 176);
  *(_OWORD *)(v31 + 160) = *(_OWORD *)(v32 + 160);
  *(_OWORD *)(v31 + 176) = v37;
  long long v38 = *(_OWORD *)(v32 + 144);
  *(_OWORD *)(v31 + 128) = *(_OWORD *)(v32 + 128);
  *(_OWORD *)(v31 + 144) = v38;
  *(_WORD *)(a1 + v30) = *(_WORD *)(a2 + v30);
  uint64_t v39 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  long long v42 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(_WORD *)(v40 + 32) = *(_WORD *)(v41 + 32);
  return a1;
}

uint64_t assignWithTake for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  if (!*(void *)(a1 + v21 + 16)) {
    goto LABEL_5;
  }
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
    sub_20A98D5B8(v22);
LABEL_5:
    long long v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  uint64_t v25 = *(void *)(v23 + 40);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = v25;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27 + 8);
  *(void *)uint64_t v28 = *(void *)(a2 + v27);
  *(void *)(v28 + 8) = v30;
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  uint64_t v31 = a3[11];
  *(_DWORD *)(a1 + a3[10]) = *(_DWORD *)(a2 + a3[10]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  uint64_t v32 = a3[12];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  long long v35 = *(_OWORD *)(a2 + v32 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)(a2 + v32);
  *(_OWORD *)(v33 + 16) = v35;
  long long v36 = *(_OWORD *)(a2 + v32 + 48);
  *(_OWORD *)(v33 + 32) = *(_OWORD *)(a2 + v32 + 32);
  *(_OWORD *)(v33 + 48) = v36;
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(a2 + v32 + 64);
  *(void *)(v33 + 80) = *(void *)(a2 + v32 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v33 + 88) = *(_OWORD *)(v34 + 88);
  *(_OWORD *)(v33 + 104) = *(_OWORD *)(v34 + 104);
  *(_DWORD *)(v33 + 120) = *(_DWORD *)(v34 + 120);
  *(_OWORD *)(v33 + 128) = *(_OWORD *)(v34 + 128);
  *(unsigned char *)(v33 + 144) = *(unsigned char *)(v34 + 144);
  *(void *)(v33 + 148) = *(void *)(v34 + 148);
  long long v37 = *(_OWORD *)(v34 + 176);
  *(_OWORD *)(v33 + 160) = *(_OWORD *)(v34 + 160);
  *(_OWORD *)(v33 + 176) = v37;
  *(void *)(v33 + 192) = *(void *)(v34 + 192);
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = (unsigned char *)(a1 + v38);
  uint64_t v41 = (unsigned char *)(a2 + v38);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  long long v42 = (void *)(a1 + v39);
  uint64_t v43 = (uint64_t *)(a2 + v39);
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  *long long v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[15];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)(v48 + 8);
  *(void *)uint64_t v47 = *(void *)v48;
  *(void *)(v47 + 8) = v49;
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v48 + 24);
  *(void *)(v47 + 16) = *(void *)(v48 + 16);
  *(void *)(v47 + 24) = v50;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v47 + 32) = *(unsigned char *)(v48 + 32);
  *(unsigned char *)(v47 + 33) = *(unsigned char *)(v48 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9CC014);
}

uint64_t sub_20A9CC014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleScrollEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9CC140);
}

uint64_t sub_20A9CC140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9CC254()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArticleScrollEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CC4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleScrollEvent.Model.CodingKeys()
{
  return &type metadata for ArticleScrollEvent.Model.CodingKeys;
}

unint64_t sub_20A9CC51C()
{
  unint64_t result = qword_267654320;
  if (!qword_267654320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654320);
  }
  return result;
}

unint64_t sub_20A9CC574()
{
  unint64_t result = qword_267654328;
  if (!qword_267654328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654328);
  }
  return result;
}

unint64_t sub_20A9CC5CC()
{
  unint64_t result = qword_267654330;
  if (!qword_267654330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654330);
  }
  return result;
}

uint64_t sub_20A9CC620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74536C6C6F726373 && a2 == 0xEF61746144747261 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E456C6C6F726373 && a2 == 0xED00006174614464 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

StocksAnalytics::CalendarResultType_optional __swiftcall CalendarResultType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t CalendarResultType.rawValue.getter()
{
  unint64_t result = 0x6C65636E6163;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73736563637573;
      break;
    case 2:
      unint64_t result = 1818845542;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9CCC70(unsigned __int8 *a1, char *a2)
{
  return sub_20AA36E80(*a1, *a2);
}

unint64_t sub_20A9CCC80()
{
  unint64_t result = qword_267654338;
  if (!qword_267654338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654338);
  }
  return result;
}

uint64_t sub_20A9CCCD4()
{
  return sub_20AB4CB98();
}

uint64_t sub_20A9CCCDC()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9CCD98()
{
  return sub_20AB4E7F8();
}

StocksAnalytics::CalendarResultType_optional sub_20A9CCDA0(Swift::String *a1)
{
  return CalendarResultType.init(rawValue:)(*a1);
}

void sub_20A9CCDAC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x6C65636E6163;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x73736563637573;
      goto LABEL_3;
    case 2:
      *a1 = 1818845542;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0xD000000000000010;
      a1[1] = 0x800000020ABA6870;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A9CCE40()
{
  return sub_20AB86750();
}

uint64_t sub_20A9CCEA0()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for CalendarResultType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CCFBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarResultType()
{
  return &type metadata for CalendarResultType;
}

unint64_t sub_20A9CCFF4()
{
  unint64_t result = qword_267654340;
  if (!qword_267654340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654340);
  }
  return result;
}

void sub_20A9CD048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x21052AE40](v4);
  if (v5)
  {
    unsigned int v6 = (void *)v5;
    if (a2 == 1)
    {
      sub_20A9CD0EC();
      sub_20AB859D0();
      sub_20A9CD140();
      sub_20AB859D0();
      sub_20A9CD194();
      sub_20A9CD500();
    }
  }
}

unint64_t sub_20A9CD0EC()
{
  unint64_t result = qword_26AC4FFE8;
  if (!qword_26AC4FFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FFE8);
  }
  return result;
}

unint64_t sub_20A9CD140()
{
  unint64_t result = qword_26AC50308;
  if (!qword_26AC50308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50308);
  }
  return result;
}

void sub_20A9CD194()
{
  sub_20A9CE074(0, &qword_26AC4E4E8, (void (*)(void))sub_20A9CD0EC);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v23 - v4;
  id v6 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_purchaseController);
  if (v6)
  {
    BOOL v7 = v6;
    id v8 = objc_msgSend(v6, sel_webAccessOptedInTagIDs);

    if (v8)
    {
      uint64_t v9 = sub_20AB867A0();

      if (*(void *)(v9 + 16)) {
        int v10 = 1;
      }
      else {
        int v10 = 2;
      }
      int v28 = v10;
      uint64_t v11 = sub_20A9CE0D4(v9);
      uint64_t v27 = v11;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager);
      sub_20AB85B30();
      char v32 = v10;
      uint64_t v33 = v11;
      sub_20A9BC5DC();
      uint64_t v26 = v12;
      uint64_t v13 = sub_20AB85A70();
      uint64_t v29 = v2;
      uint64_t v30 = v3;
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      uint64_t v16 = *(void *)(v15 + 72);
      uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
      uint64_t v18 = (v17 + 32) & ~v17;
      uint64_t v24 = v17 | 7;
      uint64_t v25 = v18 + v16;
      uint64_t v19 = swift_allocObject();
      long long v23 = xmmword_20AB88020;
      *(_OWORD *)(v19 + 16) = xmmword_20AB88020;
      uint64_t v20 = *MEMORY[0x263F24D40];
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104);
      v21(v19 + v18, v20, v14);
      sub_20A9CD0EC();
      sub_20AB85F60();
      swift_bridgeObjectRelease();
      swift_release();
      char v32 = v28;
      uint64_t v33 = v27;
      sub_20AB85910();
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v23;
      v21(v22 + v18, v20, v14);
      sub_20AB85AE0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_20A9CD500()
{
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext), sel_purchaseController);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_20AB86110();
    uint64_t v3 = (void *)sub_20AB860F0();
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v6[4] = sub_20A9CDF6C;
    v6[5] = v4;
    v6[0] = MEMORY[0x263EF8330];
    v6[1] = 1107296256;
    v6[2] = sub_20A9CDF74;
    v6[3] = &block_descriptor_0;
    uint64_t v5 = _Block_copy(v6);
    swift_release();
    objc_msgSend(v2, sel_performEntitlementCheckWithIgnoreCache_callbackQueue_completion_, 0, v3, v5);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A9CD630()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_20A9CD668(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A9CE074(0, &qword_26AC4E090, (void (*)(void))sub_20A9CD140);
  id v6 = v5;
  BOOL v7 = (SEL *)*(v5 - 1);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t)&v82 - v8;
  swift_beginAccess();
  int v10 = (char *)MEMORY[0x21052AE40](a3 + 16);
  if (v10)
  {
    if (a1)
    {
      v93 = v10;
      if (a1 >> 62) {
        goto LABEL_84;
      }
      uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
LABEL_5:
      uint64_t v88 = v9;
      v89 = v7;
      v90 = v6;
      if (v11)
      {
        int64_t v95 = a1 & 0xC000000000000001;
        id v6 = (void *)MEMORY[0x263F8EE80];
        uint64_t v9 = 4;
        uint64_t v94 = a1;
        while (1)
        {
          uint64_t v15 = v9 - 4;
          if (v95)
          {
            id v16 = (id)MEMORY[0x21052A430](v9 - 4, a1);
            uint64_t v17 = v9 - 3;
            if (__OFADD__(v15, 1)) {
              goto LABEL_79;
            }
          }
          else
          {
            id v16 = *(id *)(a1 + 8 * v9);
            uint64_t v17 = v9 - 3;
            if (__OFADD__(v15, 1))
            {
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
              goto LABEL_83;
            }
          }
          a1 = v11;
          id v18 = v16;
          id v19 = objc_msgSend(v16, sel_inAppAdamID);
          BOOL v7 = (SEL *)objc_msgSend(v19, sel_stringValue);

          uint64_t v20 = sub_20AB866E0();
          uint64_t v22 = v21;

          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v96 = v6;
          unint64_t v25 = sub_20AADB330(v20, v22);
          uint64_t v26 = v6[2];
          BOOL v27 = (v24 & 1) == 0;
          uint64_t v28 = v26 + v27;
          if (__OFADD__(v26, v27)) {
            goto LABEL_80;
          }
          BOOL v7 = v24;
          if (v6[3] >= v28)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              id v6 = v96;
              if (v24) {
                goto LABEL_7;
              }
            }
            else
            {
              sub_20AADBB48();
              id v6 = v96;
              if (v7) {
                goto LABEL_7;
              }
            }
          }
          else
          {
            sub_20AADB538(v28, isUniquelyReferenced_nonNull_native);
            uint64_t v29 = sub_20AADB330(v20, v22);
            if ((v7 & 1) != (v30 & 1)) {
              goto LABEL_87;
            }
            unint64_t v25 = v29;
            id v6 = v96;
            if (v7)
            {
LABEL_7:
              uint64_t v12 = v6[7];
              uint64_t v13 = *(void **)(v12 + 8 * v25);
              *(void *)(v12 + 8 * v25) = v18;

              goto LABEL_8;
            }
          }
          v6[(v25 >> 6) + 8] |= 1 << v25;
          uint64_t v31 = (uint64_t *)(v6[6] + 16 * v25);
          *uint64_t v31 = v20;
          v31[1] = v22;
          *(void *)(v6[7] + 8 * v25) = v18;
          uint64_t v32 = v6[2];
          BOOL v33 = __OFADD__(v32, 1);
          uint64_t v34 = v32 + 1;
          if (v33) {
            goto LABEL_82;
          }
          v6[2] = v34;
          swift_bridgeObjectRetain();
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v9;
          uint64_t v11 = a1;
          BOOL v14 = v17 == a1;
          a1 = v94;
          if (v14) {
            goto LABEL_26;
          }
        }
      }
      id v6 = (void *)MEMORY[0x263F8EE80];
LABEL_26:
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(*(id *)&v93[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_cloudContext], sel_purchaseController);
      if (v35)
      {
        long long v36 = v35;
        id v37 = objc_msgSend(v35, sel_purchaseLookUpEntriesByTagID);

        if (v37)
        {
          sub_20A9CE038(0, &qword_26AC51738);
          uint64_t v38 = sub_20AB86660();

          int64_t v39 = 0;
          a1 = v38 + 64;
          uint64_t v40 = 1 << *(unsigned char *)(v38 + 32);
          uint64_t v41 = -1;
          if (v40 < 64) {
            uint64_t v41 = ~(-1 << v40);
          }
          unint64_t v42 = v41 & *(void *)(v38 + 64);
          int64_t v95 = (unint64_t)(v40 + 63) >> 6;
          BOOL v7 = (SEL *)&_swift_FORCE_LOAD___swift_Builtin_float___StocksAnalytics;
          uint64_t v91 = (void *)MEMORY[0x263F8EE78];
          v92 = (void *)MEMORY[0x263F8EE78];
          uint64_t v94 = v38 + 64;
          while (1)
          {
            if (v42)
            {
              unint64_t v43 = __clz(__rbit64(v42));
              v42 &= v42 - 1;
              unint64_t v44 = v43 | (v39 << 6);
            }
            else
            {
              int64_t v45 = v39 + 1;
              if (__OFADD__(v39, 1)) {
                goto LABEL_81;
              }
              if (v45 >= v95)
              {
LABEL_67:
                swift_bridgeObjectRelease();
                swift_release();
                unint64_t v67 = v91;
                char v66 = v92;
                if (v91[2]) {
                  int v68 = 3;
                }
                else {
                  int v68 = 1;
                }
                if (v91[2]) {
                  int v69 = 2;
                }
                else {
                  int v69 = 4;
                }
                if (v92[2]) {
                  int v70 = v68;
                }
                else {
                  int v70 = v69;
                }
                LODWORD(v94) = v70;
                int64_t v95 = OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_sessionManager;
                sub_20AB85B30();
                LOBYTE(v96) = v70;
                uint64_t v97 = v66;
                uint64_t v98 = v67;
                sub_20A9BC5DC();
                uint64_t v87 = v71;
                uint64_t v72 = sub_20AB85A70();
                uint64_t v73 = *(void *)(v72 - 8);
                uint64_t v74 = *(void *)(v73 + 72);
                uint64_t v75 = *(unsigned __int8 *)(v73 + 80);
                uint64_t v76 = (v75 + 32) & ~v75;
                uint64_t v85 = v75 | 7;
                uint64_t v86 = v76 + v74;
                uint64_t v77 = swift_allocObject();
                long long v84 = xmmword_20AB88020;
                *(_OWORD *)(v77 + 16) = xmmword_20AB88020;
                uint64_t v78 = *MEMORY[0x263F24D40];
                v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 104);
                v83(v77 + v76, v78, v72);
                sub_20A9CD140();
                sub_20AB85F60();
                swift_bridgeObjectRelease();
                swift_release();
                LOBYTE(v96) = v94;
                uint64_t v97 = v66;
                uint64_t v98 = v67;
                uint64_t v79 = v88;
                sub_20AB85910();
                unint64_t v80 = v93;
                uint64_t v81 = swift_allocObject();
                *(_OWORD *)(v81 + 16) = v84;
                v83(v81 + v76, v78, v72);
                sub_20AB85AE0();
                swift_bridgeObjectRelease();
                ((void (*)(uint64_t, void *))v89[1])(v79, v90);
                int v10 = v80;
                goto LABEL_77;
              }
              unint64_t v46 = *(void *)(a1 + 8 * v45);
              ++v39;
              if (!v46)
              {
                int64_t v39 = v45 + 1;
                if (v45 + 1 >= v95) {
                  goto LABEL_67;
                }
                unint64_t v46 = *(void *)(a1 + 8 * v39);
                if (!v46)
                {
                  int64_t v39 = v45 + 2;
                  if (v45 + 2 >= v95) {
                    goto LABEL_67;
                  }
                  unint64_t v46 = *(void *)(a1 + 8 * v39);
                  if (!v46)
                  {
                    int64_t v47 = v45 + 3;
                    if (v47 >= v95) {
                      goto LABEL_67;
                    }
                    unint64_t v46 = *(void *)(a1 + 8 * v47);
                    if (!v46)
                    {
                      while (1)
                      {
                        int64_t v39 = v47 + 1;
                        if (__OFADD__(v47, 1)) {
                          break;
                        }
                        if (v39 >= v95) {
                          goto LABEL_67;
                        }
                        unint64_t v46 = *(void *)(a1 + 8 * v39);
                        ++v47;
                        if (v46) {
                          goto LABEL_47;
                        }
                      }
LABEL_83:
                      __break(1u);
LABEL_84:
                      swift_bridgeObjectRetain();
                      uint64_t v11 = sub_20AB86A60();
                      goto LABEL_5;
                    }
                    int64_t v39 = v47;
                  }
                }
              }
LABEL_47:
              unint64_t v42 = (v46 - 1) & v46;
              unint64_t v44 = __clz(__rbit64(v46)) + (v39 << 6);
            }
            uint64_t v48 = (uint64_t *)(*(void *)(v38 + 48) + 16 * v44);
            uint64_t v9 = *v48;
            uint64_t v49 = v48[1];
            uint64_t v50 = *(void **)(*(void *)(v38 + 56) + 8 * v44);
            swift_bridgeObjectRetain();
            id v51 = v50;
            if ([v51 v7[93]] == (id)1)
            {
              id v52 = objc_msgSend(v51, sel_purchaseID);
              if (v52)
              {
                uint64_t v53 = v52;
                uint64_t v54 = sub_20AB866E0();
                uint64_t v56 = v55;

                if (v6[2] && (uint64_t v57 = sub_20AADB330(v54, v56), (v58 & 1) != 0))
                {
                  id v59 = *(id *)(v6[7] + 8 * v57);
                  swift_bridgeObjectRelease();
                  if (objc_msgSend(v59, sel_isTrialPeriod))
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      v92 = sub_20AA0C174(0, v92[2] + 1, 1, v92);
                    }
                    unint64_t v61 = v92[2];
                    unint64_t v60 = v92[3];
                    unint64_t v62 = v61 + 1;
                    if (v61 >= v60 >> 1) {
                      v92 = sub_20AA0C174((void *)(v60 > 1), v61 + 1, 1, v92);
                    }
                    uint64_t v63 = v92;
                  }
                  else
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v91 = sub_20AA0C174(0, v91[2] + 1, 1, v91);
                    }
                    unint64_t v61 = v91[2];
                    unint64_t v65 = v91[3];
                    unint64_t v62 = v61 + 1;
                    if (v61 >= v65 >> 1) {
                      uint64_t v91 = sub_20AA0C174((void *)(v65 > 1), v61 + 1, 1, v91);
                    }
                    uint64_t v63 = v91;
                  }
                  v63[2] = v62;
                  uint64_t v64 = &v63[2 * v61];
                  v64[4] = v9;
                  v64[5] = v49;
                }
                else
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                a1 = v94;
                BOOL v7 = (SEL *)&_swift_FORCE_LOAD___swift_Builtin_float___StocksAnalytics;
              }
              else
              {
                swift_bridgeObjectRelease();

                BOOL v7 = (SEL *)&_swift_FORCE_LOAD___swift_Builtin_float___StocksAnalytics;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_87:
      sub_20AB86CF0();
      __break(1u);
    }
    else
    {
LABEL_77:
    }
  }
}

void sub_20A9CDF6C(unint64_t a1, uint64_t a2)
{
  sub_20A9CD668(a1, a2, v2);
}

uint64_t sub_20A9CDF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    sub_20A9CE038(0, &qword_26AC4E2D8);
    uint64_t v4 = sub_20AB86770();
  }
  if (a3)
  {
    sub_20A9CE038(0, &qword_26AC51740);
    a3 = sub_20AB86770();
  }
  swift_retain();
  v5(v4, a3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9CE038(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_20A9CE074(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_20AB85920();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_20A9CE0D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_20A9CE3C0();
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_20A9CE1B8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_20A9CE3B8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_20A9CE1B8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_20A9CE3B8()
{
  return swift_release();
}

void sub_20A9CE3C0()
{
  if (!qword_26AC519D0)
  {
    unint64_t v0 = sub_20AB86C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC519D0);
    }
  }
}

StocksAnalytics::ActionMethod_optional __swiftcall ActionMethod.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ActionMethod.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x776F7272616873;
      break;
    case 2:
      uint64_t result = 0x4D747865746E6F63;
      break;
    case 3:
      uint64_t result = 0x6570697773;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9CE504(unsigned __int8 *a1, char *a2)
{
  return sub_20AA38B58(*a1, *a2);
}

unint64_t sub_20A9CE514()
{
  unint64_t result = qword_267654348;
  if (!qword_267654348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654348);
  }
  return result;
}

uint64_t sub_20A9CE568()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9CE644()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9CE708()
{
  return sub_20AB86D80();
}

StocksAnalytics::ActionMethod_optional sub_20A9CE7E0(Swift::String *a1)
{
  return ActionMethod.init(rawValue:)(*a1);
}

void sub_20A9CE7EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x776F7272616873;
      goto LABEL_3;
    case 2:
      *a1 = 0x4D747865746E6F63;
      a1[1] = 0xEB00000000756E65;
      break;
    case 3:
      *a1 = 0x6570697773;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20A9CE888()
{
  return sub_20AB86750();
}

uint64_t sub_20A9CE8E8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ActionMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CEA04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionMethod()
{
  return &type metadata for ActionMethod;
}

unint64_t sub_20A9CEA3C()
{
  unint64_t result = qword_267654350;
  if (!qword_267654350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654350);
  }
  return result;
}

StocksAnalytics::SymbolChartDateRange_optional __swiftcall SymbolChartDateRange.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t SymbolChartDateRange.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x796144656E6FLL;
      break;
    case 2:
      uint64_t result = 0x6B656557656E6FLL;
      break;
    case 3:
      uint64_t result = 0x68746E6F4D656E6FLL;
      break;
    case 4:
      uint64_t result = 0x6E6F4D6565726874;
      break;
    case 5:
      uint64_t result = 0x68746E6F4D786973;
      break;
    case 6:
      uint64_t result = 0x72616559656E6FLL;
      break;
    case 7:
      unsigned int v2 = 1500477300;
      goto LABEL_10;
    case 8:
      uint64_t result = 0x7261655965766966;
      break;
    case 9:
      unsigned int v2 = 1500407156;
LABEL_10:
      uint64_t result = v2 | 0x7372616500000000;
      break;
    case 0xA:
      uint64_t result = 7889261;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9CEC2C(unsigned __int8 *a1, char *a2)
{
  return sub_20AA361B8(*a1, *a2);
}

unint64_t sub_20A9CEC3C()
{
  unint64_t result = qword_267654358;
  if (!qword_267654358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654358);
  }
  return result;
}

uint64_t sub_20A9CEC90()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9CECD8()
{
  return sub_20AB4D608();
}

uint64_t sub_20A9CECE0()
{
  return sub_20AB86D80();
}

StocksAnalytics::SymbolChartDateRange_optional sub_20A9CED24(Swift::String *a1)
{
  return SymbolChartDateRange.init(rawValue:)(*a1);
}

uint64_t sub_20A9CED30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SymbolChartDateRange.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A9CED58()
{
  return sub_20AB86750();
}

uint64_t sub_20A9CEDB8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SymbolChartDateRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CEED4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDateRange()
{
  return &type metadata for SymbolChartDateRange;
}

unint64_t sub_20A9CEF0C()
{
  unint64_t result = qword_267654360;
  if (!qword_267654360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654360);
  }
  return result;
}

uint64_t static AdGroupData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdGroupData.groupType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdGroupData.groupType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AdGroupData.groupType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdGroupData __swiftcall AdGroupData.init(groupType:)(StocksAnalytics::AdGroupData groupType)
{
  *uint64_t v1 = *(unsigned char *)groupType.groupType;
  return groupType;
}

uint64_t sub_20A9CEFAC()
{
  return 0x70795470756F7267;
}

uint64_t sub_20A9CEFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x70795470756F7267 && a2 == 0xE900000000000065)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20A9CF06C(uint64_t a1)
{
  unint64_t v2 = sub_20A9CF240();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9CF0A8(uint64_t a1)
{
  unint64_t v2 = sub_20A9CF240();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdGroupData.encode(to:)(void *a1)
{
  sub_20A9CF480(0, &qword_267654368, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9CF240();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20A9CF294();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9CF240()
{
  unint64_t result = qword_267654370;
  if (!qword_267654370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654370);
  }
  return result;
}

unint64_t sub_20A9CF294()
{
  unint64_t result = qword_26AC51600;
  if (!qword_26AC51600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51600);
  }
  return result;
}

uint64_t AdGroupData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20A9CF480(0, &qword_267654378, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9CF240();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9CF4E4();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9CF480(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9CF240();
    unint64_t v7 = a3(a1, &type metadata for AdGroupData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9CF4E4()
{
  unint64_t result = qword_26AC52420;
  if (!qword_26AC52420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52420);
  }
  return result;
}

uint64_t sub_20A9CF540@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdGroupData.init(from:)(a1, a2);
}

uint64_t sub_20A9CF558(void *a1)
{
  return AdGroupData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AdGroupData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CF63CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData()
{
  return &type metadata for AdGroupData;
}

unsigned char *storeEnumTagSinglePayload for AdGroupData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9CF710);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdGroupData.CodingKeys()
{
  return &type metadata for AdGroupData.CodingKeys;
}

unint64_t sub_20A9CF74C()
{
  unint64_t result = qword_267654380;
  if (!qword_267654380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654380);
  }
  return result;
}

unint64_t sub_20A9CF7A4()
{
  unint64_t result = qword_267654388;
  if (!qword_267654388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654388);
  }
  return result;
}

unint64_t sub_20A9CF7FC()
{
  unint64_t result = qword_267654390;
  if (!qword_267654390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654390);
  }
  return result;
}

uint64_t static SymbolChartDisplayErrorData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SymbolChartDisplayErrorData.symbolChartDisplayErrorCode.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SymbolChartDisplayErrorData __swiftcall SymbolChartDisplayErrorData.init(symbolChartDisplayErrorCode:)(StocksAnalytics::SymbolChartDisplayErrorData symbolChartDisplayErrorCode)
{
  *uint64_t v1 = *(unsigned char *)symbolChartDisplayErrorCode.symbolChartDisplayErrorCode;
  return symbolChartDisplayErrorCode;
}

unint64_t sub_20A9CF89C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_20A9CF8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9D0170(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20A9CF8E4(uint64_t a1)
{
  unint64_t v2 = sub_20A9CFAB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9CF920(uint64_t a1)
{
  unint64_t v2 = sub_20A9CFAB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolChartDisplayErrorData.encode(to:)(void *a1)
{
  sub_20A9CFCF8(0, &qword_267654398, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9CFAB8();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20A9CFB0C();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9CFAB8()
{
  unint64_t result = qword_2676543A0;
  if (!qword_2676543A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543A0);
  }
  return result;
}

unint64_t sub_20A9CFB0C()
{
  unint64_t result = qword_2676543A8;
  if (!qword_2676543A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543A8);
  }
  return result;
}

uint64_t SymbolChartDisplayErrorData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20A9CFCF8(0, &qword_2676543B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9CFAB8();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9CFD5C();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9CFCF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9CFAB8();
    unint64_t v7 = a3(a1, &type metadata for SymbolChartDisplayErrorData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9CFD5C()
{
  unint64_t result = qword_2676543B8;
  if (!qword_2676543B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543B8);
  }
  return result;
}

unint64_t sub_20A9CFDB4()
{
  unint64_t result = qword_2676543C0;
  if (!qword_2676543C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543C0);
  }
  return result;
}

unint64_t sub_20A9CFE0C()
{
  unint64_t result = qword_2676543C8;
  if (!qword_2676543C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543C8);
  }
  return result;
}

uint64_t sub_20A9CFE60@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SymbolChartDisplayErrorData.init(from:)(a1, a2);
}

uint64_t sub_20A9CFE78(void *a1)
{
  return SymbolChartDisplayErrorData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for SymbolChartDisplayErrorData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9CFF5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorData()
{
  return &type metadata for SymbolChartDisplayErrorData;
}

unsigned char *storeEnumTagSinglePayload for SymbolChartDisplayErrorData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A9D0030);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolChartDisplayErrorData.CodingKeys()
{
  return &type metadata for SymbolChartDisplayErrorData.CodingKeys;
}

unint64_t sub_20A9D006C()
{
  unint64_t result = qword_2676543D0;
  if (!qword_2676543D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543D0);
  }
  return result;
}

unint64_t sub_20A9D00C4()
{
  unint64_t result = qword_2676543D8;
  if (!qword_2676543D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543D8);
  }
  return result;
}

unint64_t sub_20A9D011C()
{
  unint64_t result = qword_2676543E0;
  if (!qword_2676543E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676543E0);
  }
  return result;
}

uint64_t sub_20A9D0170(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x800000020ABA7900)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t PaidSubscriberToSourceChannelMethod.feldsparValue.getter()
{
  return *v0;
}

uint64_t sub_20A9D0200(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC50320, MEMORY[0x263F24D10]);
}

uint64_t static PaywallExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50338, MEMORY[0x263F24D18], (uint64_t)qword_26AC50320, a1);
}

uint64_t static PaywallExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9D0268(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC50340, MEMORY[0x263F24DC8]);
}

uint64_t static PaywallExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC50358, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50340, a1);
}

uint64_t sub_20A9D02C8()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676543E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676543E8);
  return sub_20AB85D30();
}

uint64_t static PaywallExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51FB8, MEMORY[0x263F24DE8], (uint64_t)qword_2676543E8, a1);
}

uint64_t PaywallExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t PaywallExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*PaywallExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9D19B0(type metadata accessor for PaywallExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for PaywallExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC50360);
}

uint64_t PaywallExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PaywallExposureEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 24);
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PaywallExposureEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 28);
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PaywallExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 32);
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PaywallExposureEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 36);
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t PaywallExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 40);
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9D0DF0()
{
  unint64_t result = qword_26AC4FEF0;
  if (!qword_26AC4FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEF0);
  }
  return result;
}

unint64_t sub_20A9D0E44()
{
  unint64_t result = qword_26AC4FEE8;
  if (!qword_26AC4FEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEE8);
  }
  return result;
}

uint64_t PaywallExposureEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 44);
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9D1040()
{
  unint64_t result = qword_26AC4ECE0;
  if (!qword_26AC4ECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECE0);
  }
  return result;
}

unint64_t sub_20A9D1094()
{
  unint64_t result = qword_26AC4ECD8;
  if (!qword_26AC4ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4ECD8);
  }
  return result;
}

uint64_t PaywallExposureEvent.purchaseData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 48);
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.purchaseData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9D1290(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A9D130C()
{
  unint64_t result = qword_26AC4EC10;
  if (!qword_26AC4EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC10);
  }
  return result;
}

unint64_t sub_20A9D1360()
{
  unint64_t result = qword_26AC4EC08;
  if (!qword_26AC4EC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC08);
  }
  return result;
}

uint64_t PaywallExposureEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent(0) + 52);
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*PaywallExposureEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t PaywallExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for PaywallExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t PaywallExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t PaywallExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9D19B0(type metadata accessor for PaywallExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9D19B0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for PaywallExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654418);
}

uint64_t PaywallExposureEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_20A99BE1C(v4, v5);
}

uint64_t PaywallExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 36);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(v3 + 32);

  return sub_20A99BE1C(v4, v5);
}

uint64_t PaywallExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t PaywallExposureEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 44));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.purchaseData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PaywallExposureEvent.Model(0) + 48));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOBYTE(v3) = *((unsigned char *)v3 + 16);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t PaywallExposureEvent.Model.paywallData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for PaywallExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 PaywallExposureEvent.Model.init(eventData:timedData:viewData:newsArticleData:feedData:channelData:groupData:purchaseSessionData:purchaseData:paywallData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, long long *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, char *a11)
{
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  __int16 v16 = *((_WORD *)a3 + 8);
  long long v33 = a4[1];
  long long v34 = *a4;
  long long v32 = a4[2];
  uint64_t v17 = *((void *)a4 + 6);
  uint64_t v18 = *((void *)a4 + 7);
  int v19 = *((_DWORD *)a4 + 16);
  long long v36 = *a5;
  uint64_t v35 = *((void *)a5 + 2);
  long long v40 = *a6;
  uint64_t v38 = *((void *)a6 + 3);
  uint64_t v39 = *((void *)a6 + 2);
  __int16 v37 = *((_WORD *)a6 + 16);
  __n128 v43 = (__n128)a7[1];
  long long v44 = *a7;
  uint64_t v41 = *((void *)a7 + 5);
  uint64_t v42 = *((void *)a7 + 4);
  uint64_t v45 = a8[1];
  uint64_t v46 = *a8;
  uint64_t v48 = a10[1];
  uint64_t v49 = *a10;
  char v47 = *((unsigned char *)a10 + 16);
  char v50 = *a11;
  uint64_t v20 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  uint64_t v23 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  uint64_t v24 = a9 + v21[6];
  *(void *)uint64_t v24 = v14;
  *(void *)(v24 + 8) = v15;
  *(_WORD *)(v24 + 16) = v16;
  uint64_t v25 = a9 + v21[7];
  *(_OWORD *)uint64_t v25 = v34;
  *(_OWORD *)(v25 + 16) = v33;
  *(_OWORD *)(v25 + 32) = v32;
  *(void *)(v25 + 48) = v17;
  *(void *)(v25 + 56) = v18;
  *(_DWORD *)(v25 + 64) = v19;
  uint64_t v26 = a9 + v21[8];
  *(_OWORD *)uint64_t v26 = v36;
  *(void *)(v26 + 16) = v35;
  uint64_t v27 = a9 + v21[9];
  *(_OWORD *)uint64_t v27 = v40;
  *(void *)(v27 + 16) = v39;
  *(void *)(v27 + 24) = v38;
  *(_WORD *)(v27 + 32) = v37;
  uint64_t v28 = a9 + v21[10];
  __n128 result = v43;
  *(_OWORD *)uint64_t v28 = v44;
  *(__n128 *)(v28 + 16) = v43;
  *(void *)(v28 + 32) = v42;
  *(void *)(v28 + 40) = v41;
  char v30 = (void *)(a9 + v21[11]);
  *char v30 = v46;
  v30[1] = v45;
  uint64_t v31 = a9 + v21[12];
  *(void *)uint64_t v31 = v49;
  *(void *)(v31 + 8) = v48;
  *(unsigned char *)(v31 + 16) = v47;
  *(unsigned char *)(a9 + v21[13]) = v50;
  return result;
}

uint64_t sub_20A9D1F20(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      return 0x74614464656D6974;
    case 2:
      unsigned int v3 = 2003134838;
      return v3 | 0x6174614400000000;
    case 3:
      return 0x697472417377656ELL;
    case 4:
      unsigned int v3 = 1684366694;
      return v3 | 0x6174614400000000;
    case 5:
      uint64_t v4 = 0x656E6E616863;
      goto LABEL_12;
    case 6:
      return 0x74614470756F7267;
    case 7:
      return 0xD000000000000013;
    case 8:
      return 0x6573616863727570;
    case 9:
      uint64_t v4 = 0x6C6177796170;
LABEL_12:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9D2068()
{
  return sub_20A9D1F20(*v0);
}

uint64_t sub_20A9D2070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9D76B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9D2098(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_20A9D20A4(uint64_t a1)
{
  unint64_t v2 = sub_20A9D25A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9D20E0(uint64_t a1)
{
  unint64_t v2 = sub_20A9D25A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PaywallExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9D2F04(0, &qword_267654400, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D25A8();
  sub_20AB86DC0();
  LOBYTE(v32) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for PaywallExposureEvent.Model(0);
    LOBYTE(v32) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + v10[6]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOWORD(v11) = *((_WORD *)v11 + 8);
    *(void *)&long long v32 = v12;
    *((void *)&v32 + 1) = v13;
    LOWORD(v33) = (_WORD)v11;
    char v37 = 2;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v14 = (long long *)(v3 + v10[7]);
    int v15 = *((_DWORD *)v14 + 16);
    long long v16 = v14[1];
    long long v32 = *v14;
    long long v33 = v16;
    long long v17 = v14[3];
    long long v34 = v14[2];
    long long v35 = v17;
    int v36 = v15;
    char v37 = 3;
    sub_20A97A1AC();
    sub_20AB86BE0();
    uint64_t v18 = (long long *)(v3 + v10[8]);
    uint64_t v19 = *((void *)v18 + 2);
    long long v32 = *v18;
    *(void *)&long long v33 = v19;
    char v37 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v20 = (long long *)(v3 + v10[9]);
    __int16 v21 = *((_WORD *)v20 + 16);
    long long v22 = v20[1];
    long long v32 = *v20;
    long long v33 = v22;
    LOWORD(v34) = v21;
    char v37 = 5;
    sub_20A9862D4();
    sub_20AB86BE0();
    uint64_t v23 = (long long *)(v3 + v10[10]);
    long long v24 = v23[1];
    long long v32 = *v23;
    long long v33 = v24;
    long long v34 = v23[2];
    char v37 = 6;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v25 = (uint64_t *)(v3 + v10[11]);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *(void *)&long long v32 = v27;
    *((void *)&v32 + 1) = v26;
    char v37 = 7;
    sub_20A9D0E44();
    sub_20AB86C50();
    uint64_t v28 = (uint64_t *)(v3 + v10[12]);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    LOBYTE(v28) = *((unsigned char *)v28 + 16);
    *(void *)&long long v32 = v29;
    *((void *)&v32 + 1) = v30;
    LOBYTE(v33) = (_BYTE)v28;
    char v37 = 8;
    sub_20A9D1094();
    sub_20AB86C50();
    LOBYTE(v32) = *(unsigned char *)(v3 + v10[13]);
    char v37 = 9;
    sub_20A9D1360();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9D25A8()
{
  unint64_t result = qword_267654408;
  if (!qword_267654408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654408);
  }
  return result;
}

uint64_t PaywallExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85FC0();
  uint64_t v45 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9D2F04(0, &qword_267654410, MEMORY[0x263F8E040]);
  uint64_t v41 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v48 = type metadata accessor for PaywallExposureEvent.Model(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v46 = a1;
  char v47 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D25A8();
  long long v40 = v13;
  sub_20AB86DA0();
  uint64_t v42 = v7;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  }
  LOBYTE(v49) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  int v15 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v47, v9, v7);
  LOBYTE(v49) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v16 = v44;
  sub_20AB86B80();
  long long v17 = (int *)v48;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v15[*(int *)(v48 + 20)], v6, v16);
  char v55 = 2;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v18 = *((void *)&v49 + 1);
  __int16 v19 = v50;
  uint64_t v20 = &v15[v17[6]];
  *(void *)uint64_t v20 = v49;
  *((void *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  char v55 = 3;
  sub_20A97A154();
  sub_20AB86B10();
  int v21 = v53;
  long long v22 = &v15[v17[7]];
  long long v23 = v50;
  *(_OWORD *)long long v22 = v49;
  *((_OWORD *)v22 + 1) = v23;
  long long v24 = v52;
  *((_OWORD *)v22 + 2) = v51;
  *((_OWORD *)v22 + 3) = v24;
  *((_DWORD *)v22 + 16) = v21;
  char v55 = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v25 = v50;
  uint64_t v26 = &v15[v17[8]];
  *(_OWORD *)uint64_t v26 = v49;
  *((void *)v26 + 2) = v25;
  char v55 = 5;
  sub_20A986280();
  sub_20AB86B10();
  __int16 v27 = v51;
  uint64_t v28 = &v15[v17[9]];
  long long v29 = v50;
  *(_OWORD *)uint64_t v28 = v49;
  *((_OWORD *)v28 + 1) = v29;
  *((_WORD *)v28 + 16) = v27;
  char v55 = 6;
  sub_20A9864D0();
  sub_20AB86B10();
  int v54 = 1;
  uint64_t v30 = &v15[v17[10]];
  long long v31 = v50;
  *(_OWORD *)uint64_t v30 = v49;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v51;
  char v55 = 7;
  sub_20A9D0DF0();
  sub_20AB86B80();
  uint64_t v32 = *((void *)&v49 + 1);
  long long v33 = &v15[v17[11]];
  *(void *)long long v33 = v49;
  *((void *)v33 + 1) = v32;
  char v55 = 8;
  sub_20A9D1040();
  sub_20AB86B80();
  uint64_t v34 = *((void *)&v49 + 1);
  char v35 = v50;
  int v36 = &v15[v17[12]];
  *(void *)int v36 = v49;
  *((void *)v36 + 1) = v34;
  v36[16] = v35;
  char v55 = 9;
  sub_20A9D130C();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v41);
  uint64_t v37 = (uint64_t)v47;
  v47[*(int *)(v48 + 52)] = v49;
  sub_20A9D2F68(v37, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return sub_20A9D2FCC(v37);
}

void sub_20A9D2F04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9D25A8();
    unint64_t v7 = a3(a1, &type metadata for PaywallExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9D2F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9D2FCC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PaywallExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9D3028@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PaywallExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9D3040(void *a1)
{
  return PaywallExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9D3058@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50338, MEMORY[0x263F24D18], (uint64_t)qword_26AC50320, a1);
}

uint64_t sub_20A9D3090@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC50358, MEMORY[0x263F24DD8], (uint64_t)qword_26AC50340, a1);
}

uint64_t sub_20A9D30C8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51FB8, MEMORY[0x263F24DE8], (uint64_t)qword_2676543E8, a1);
}

uint64_t sub_20A9D3100@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for PaywallExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9D524C);
}

uint64_t sub_20A9D524C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9D5780);
}

uint64_t sub_20A9D5780(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20A9D1290(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20A9D1290(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20A9D1290(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20A9D5CAC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9D1290(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
      if (v2 <= 0x3F)
      {
        sub_20A9D1290(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
        if (v3 <= 0x3F)
        {
          sub_20A9D1290(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20A9D1290(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
            if (v5 <= 0x3F)
            {
              sub_20A9D1290(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
              if (v6 <= 0x3F)
              {
                sub_20A9D1290(319, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
                if (v7 <= 0x3F)
                {
                  sub_20A9D1290(319, &qword_26AC4E0A8, (void (*)(void))sub_20A9D1040, (void (*)(void))sub_20A9D1094);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9D1290(319, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for PaywallExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    if (v19)
    {
      *(void *)uint64_t v17 = *(void *)v18;
      *((void *)v17 + 1) = v19;
      uint64_t v20 = *((void *)v18 + 3);
      *((void *)v17 + 2) = *((void *)v18 + 2);
      *((void *)v17 + 3) = v20;
      v17[32] = v18[32];
      *((void *)v17 + 5) = *((void *)v18 + 5);
      v17[48] = v18[48];
      *((void *)v17 + 7) = *((void *)v18 + 7);
      *((_DWORD *)v17 + 16) = *((_DWORD *)v18 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v22 = *((_OWORD *)v18 + 3);
      *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
      *((_OWORD *)v17 + 3) = v22;
      *((_DWORD *)v17 + 16) = *((_DWORD *)v18 + 16);
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *uint64_t v26 = *v27;
    uint64_t v28 = *((void *)v27 + 2);
    *((void *)v26 + 1) = *((void *)v27 + 1);
    *((void *)v26 + 2) = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    uint64_t v31 = *(void *)((char *)a2 + v25 + 8);
    swift_bridgeObjectRetain();
    if (v31)
    {
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = *((void *)v30 + 3);
      *((void *)v29 + 2) = *((void *)v30 + 2);
      *((void *)v29 + 3) = v32;
      *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v33 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v33;
      *((_WORD *)v29 + 16) = *((_WORD *)v30 + 16);
    }
    uint64_t v34 = a3[10];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = *((void *)v36 + 2);
    if (v37)
    {
      *uint64_t v35 = *v36;
      *((void *)v35 + 1) = *((void *)v36 + 1);
      *((void *)v35 + 2) = v37;
      *((void *)v35 + 3) = *((void *)v36 + 3);
      uint64_t v38 = *((void *)v36 + 5);
      *((void *)v35 + 4) = *((void *)v36 + 4);
      *((void *)v35 + 5) = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
      *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    }
    uint64_t v40 = a3[11];
    uint64_t v41 = a3[12];
    uint64_t v42 = (void *)((char *)a1 + v40);
    uint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = (char *)a1 + v41;
    uint64_t v46 = (char *)a2 + v41;
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    v45[16] = v46[16];
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PaywallExposureEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[10] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  uint64_t v18 = *(void *)(a2 + v12 + 8);
  swift_bridgeObjectRetain();
  if (v18)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = v18;
    uint64_t v19 = *(void *)(v17 + 24);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = v19;
    *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
    *(void *)(v16 + 40) = *(void *)(v17 + 40);
    *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
    *(void *)(v16 + 56) = *(void *)(v17 + 56);
    *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(v17 + 48);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 48) = v20;
    *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
    long long v21 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v21;
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = v26;
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  uint64_t v29 = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(void *)uint64_t v27 = *(void *)v28;
    *(void *)(v27 + 8) = v29;
    uint64_t v30 = *(void *)(v28 + 24);
    *(void *)(v27 + 16) = *(void *)(v28 + 16);
    *(void *)(v27 + 24) = v30;
    *(_WORD *)(v27 + 32) = *(_WORD *)(v28 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v31 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v31;
    *(_WORD *)(v27 + 32) = *(_WORD *)(v28 + 32);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
    *(void *)(v33 + 8) = *(void *)(v34 + 8);
    *(void *)(v33 + 16) = v35;
    *(void *)(v33 + 24) = *(void *)(v34 + 24);
    uint64_t v36 = *(void *)(v34 + 40);
    *(void *)(v33 + 32) = *(void *)(v34 + 32);
    *(void *)(v33 + 40) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *(_OWORD *)(v34 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v37;
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(v34 + 32);
  }
  uint64_t v38 = a3[11];
  uint64_t v39 = a3[12];
  uint64_t v40 = (void *)(a1 + v38);
  uint64_t v41 = (void *)(a2 + v38);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = a1 + v39;
  uint64_t v44 = a2 + v39;
  uint64_t v45 = *(void *)(v44 + 8);
  *(void *)uint64_t v43 = *(void *)v44;
  *(void *)(v43 + 8) = v45;
  *(unsigned char *)(v43 + 16) = *(unsigned char *)(v44 + 16);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a1 + v14 + 8);
  uint64_t v18 = *(void *)(a2 + v14 + 8);
  if (v17)
  {
    if (v18)
    {
      *(void *)uint64_t v15 = *(void *)v16;
      *(void *)(v15 + 8) = *(void *)(v16 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v15 + 16) = *(void *)(v16 + 16);
      *(void *)(v15 + 24) = *(void *)(v16 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
      uint64_t v19 = *(void *)(v16 + 40);
      *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
      *(void *)(v15 + 40) = v19;
      *(void *)(v15 + 56) = *(void *)(v16 + 56);
      *(unsigned char *)(v15 + 64) = *(unsigned char *)(v16 + 64);
      *(unsigned char *)(v15 + 65) = *(unsigned char *)(v16 + 65);
      *(unsigned char *)(v15 + 66) = *(unsigned char *)(v16 + 66);
      *(unsigned char *)(v15 + 67) = *(unsigned char *)(v16 + 67);
    }
    else
    {
      sub_20A9D6C28(v15);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      long long v22 = *(_OWORD *)(v16 + 32);
      long long v21 = *(_OWORD *)(v16 + 48);
      long long v23 = *(_OWORD *)(v16 + 16);
      *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
      *(_OWORD *)(v15 + 32) = v22;
      *(_OWORD *)(v15 + 48) = v21;
      *(_OWORD *)(v15 + 16) = v23;
    }
  }
  else if (v18)
  {
    *(void *)uint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = *(void *)(v16 + 8);
    *(void *)(v15 + 16) = *(void *)(v16 + 16);
    *(void *)(v15 + 24) = *(void *)(v16 + 24);
    *(unsigned char *)(v15 + 32) = *(unsigned char *)(v16 + 32);
    uint64_t v20 = *(void *)(v16 + 40);
    *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
    *(void *)(v15 + 40) = v20;
    *(void *)(v15 + 56) = *(void *)(v16 + 56);
    *(unsigned char *)(v15 + 64) = *(unsigned char *)(v16 + 64);
    *(unsigned char *)(v15 + 65) = *(unsigned char *)(v16 + 65);
    *(unsigned char *)(v15 + 66) = *(unsigned char *)(v16 + 66);
    *(unsigned char *)(v15 + 67) = *(unsigned char *)(v16 + 67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    long long v24 = *(_OWORD *)(v16 + 16);
    long long v25 = *(_OWORD *)(v16 + 32);
    long long v26 = *(_OWORD *)(v16 + 48);
    *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
    *(_OWORD *)(v15 + 32) = v25;
    *(_OWORD *)(v15 + 48) = v26;
    *(_OWORD *)(v15 + 16) = v24;
  }
  uint64_t v27 = a3[8];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (long long *)(a2 + v30);
  uint64_t v33 = *(void *)(a1 + v30 + 8);
  uint64_t v34 = *(void *)(a2 + v30 + 8);
  if (v33)
  {
    if (v34)
    {
      *(void *)uint64_t v31 = *(void *)v32;
      *(void *)(v31 + 8) = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 16) = *((void *)v32 + 2);
      *(void *)(v31 + 24) = *((void *)v32 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v31 + 32) = *((unsigned char *)v32 + 32);
      *(unsigned char *)(v31 + 33) = *((unsigned char *)v32 + 33);
    }
    else
    {
      sub_20A9A0F9C(v31);
      __int16 v35 = *((_WORD *)v32 + 16);
      long long v36 = v32[1];
      *(_OWORD *)uint64_t v31 = *v32;
      *(_OWORD *)(v31 + 16) = v36;
      *(_WORD *)(v31 + 32) = v35;
    }
  }
  else if (v34)
  {
    *(void *)uint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *((void *)v32 + 1);
    *(void *)(v31 + 16) = *((void *)v32 + 2);
    *(void *)(v31 + 24) = *((void *)v32 + 3);
    *(unsigned char *)(v31 + 32) = *((unsigned char *)v32 + 32);
    *(unsigned char *)(v31 + 33) = *((unsigned char *)v32 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *v32;
    long long v38 = v32[1];
    *(_WORD *)(v31 + 32) = *((_WORD *)v32 + 16);
    *(_OWORD *)uint64_t v31 = v37;
    *(_OWORD *)(v31 + 16) = v38;
  }
  uint64_t v39 = a3[10];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = (long long *)(a2 + v39);
  uint64_t v42 = *(void *)(a1 + v39 + 16);
  uint64_t v43 = *(void *)(a2 + v39 + 16);
  if (v42)
  {
    if (v43)
    {
      *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
      *(void *)(v40 + 8) = *((void *)v41 + 1);
      *(void *)(v40 + 16) = *((void *)v41 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v40 + 24) = *((_DWORD *)v41 + 6);
      *(_DWORD *)(v40 + 28) = *((_DWORD *)v41 + 7);
      *(void *)(v40 + 32) = *((void *)v41 + 4);
      *(void *)(v40 + 40) = *((void *)v41 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v40);
      long long v45 = v41[1];
      long long v44 = v41[2];
      *(_OWORD *)uint64_t v40 = *v41;
      *(_OWORD *)(v40 + 16) = v45;
      *(_OWORD *)(v40 + 32) = v44;
    }
  }
  else if (v43)
  {
    *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
    *(void *)(v40 + 8) = *((void *)v41 + 1);
    *(void *)(v40 + 16) = *((void *)v41 + 2);
    *(_DWORD *)(v40 + 24) = *((_DWORD *)v41 + 6);
    *(_DWORD *)(v40 + 28) = *((_DWORD *)v41 + 7);
    *(void *)(v40 + 32) = *((void *)v41 + 4);
    *(void *)(v40 + 40) = *((void *)v41 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *v41;
    long long v47 = v41[2];
    *(_OWORD *)(v40 + 16) = v41[1];
    *(_OWORD *)(v40 + 32) = v47;
    *(_OWORD *)uint64_t v40 = v46;
  }
  uint64_t v48 = a3[11];
  long long v49 = (void *)(a1 + v48);
  long long v50 = (void *)(a2 + v48);
  void *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[12];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(void *)uint64_t v52 = *(void *)(a2 + v51);
  *(void *)(v52 + 8) = *(void *)(a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v52 + 16) = *(unsigned char *)(v53 + 16);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_20A9D6C28(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(_DWORD *)(v15 + 64) = *(_DWORD *)(v16 + 64);
  long long v17 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v17;
  long long v18 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  long long v25 = *(_OWORD *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(_OWORD *)(v23 + 16) = v25;
  *(_WORD *)(v23 + 32) = *(_WORD *)(v24 + 32);
  uint64_t v26 = a3[10];
  uint64_t v27 = a3[11];
  uint64_t v28 = (_OWORD *)(a1 + v26);
  uint64_t v29 = (_OWORD *)(a2 + v26);
  long long v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  v28[2] = v29[2];
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  uint64_t v31 = a3[12];
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  if (*(void *)(a1 + v15 + 8))
  {
    uint64_t v18 = *(void *)(v17 + 8);
    if (v18)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v17 + 24);
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      *(void *)(v16 + 24) = v19;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
      *(void *)(v16 + 40) = *(void *)(v17 + 40);
      *(unsigned char *)(v16 + 48) = *(unsigned char *)(v17 + 48);
      *(void *)(v16 + 56) = *(void *)(v17 + 56);
      *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
      *(unsigned char *)(v16 + 65) = *(unsigned char *)(v17 + 65);
      *(unsigned char *)(v16 + 66) = *(unsigned char *)(v17 + 66);
      *(unsigned char *)(v16 + 67) = *(unsigned char *)(v17 + 67);
      goto LABEL_6;
    }
    sub_20A9D6C28(v16);
  }
  long long v20 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v20;
  *(_DWORD *)(v16 + 64) = *(_DWORD *)(v17 + 64);
  long long v21 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v21;
LABEL_6:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  if (*(void *)(a1 + v27 + 8))
  {
    uint64_t v30 = *(void *)(v29 + 8);
    if (v30)
    {
      *(void *)uint64_t v28 = *(void *)v29;
      *(void *)(v28 + 8) = v30;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v29 + 24);
      *(void *)(v28 + 16) = *(void *)(v29 + 16);
      *(void *)(v28 + 24) = v31;
      swift_bridgeObjectRelease();
      *(unsigned char *)(v28 + 32) = *(unsigned char *)(v29 + 32);
      *(unsigned char *)(v28 + 33) = *(unsigned char *)(v29 + 33);
      goto LABEL_11;
    }
    sub_20A9A0F9C(v28);
  }
  long long v32 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(v28 + 16) = v32;
  *(_WORD *)(v28 + 32) = *(_WORD *)(v29 + 32);
LABEL_11:
  uint64_t v33 = a3[10];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  if (!*(void *)(a1 + v33 + 16))
  {
LABEL_15:
    long long v38 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(v34 + 16) = v38;
    *(_OWORD *)(v34 + 32) = *(_OWORD *)(v35 + 32);
    goto LABEL_16;
  }
  uint64_t v36 = *(void *)(v35 + 16);
  if (!v36)
  {
    sub_20A98D5B8(v34);
    goto LABEL_15;
  }
  *(unsigned char *)uint64_t v34 = *(unsigned char *)v35;
  *(void *)(v34 + 8) = *(void *)(v35 + 8);
  *(void *)(v34 + 16) = v36;
  swift_bridgeObjectRelease();
  *(void *)(v34 + 24) = *(void *)(v35 + 24);
  uint64_t v37 = *(void *)(v35 + 40);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = v37;
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[12];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)(a2 + v44 + 8);
  *(void *)uint64_t v45 = *(void *)(a2 + v44);
  *(void *)(v45 + 8) = v47;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v45 + 16) = *(unsigned char *)(v46 + 16);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9D70C0);
}

uint64_t sub_20A9D70C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for PaywallExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9D71EC);
}

uint64_t sub_20A9D71EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9D7300()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StartMethod(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PaywallExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9D7574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallExposureEvent.Model.CodingKeys()
{
  return &type metadata for PaywallExposureEvent.Model.CodingKeys;
}

unint64_t sub_20A9D75B0()
{
  unint64_t result = qword_267654428;
  if (!qword_267654428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654428);
  }
  return result;
}

unint64_t sub_20A9D7608()
{
  unint64_t result = qword_267654430;
  if (!qword_267654430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654430);
  }
  return result;
}

unint64_t sub_20A9D7660()
{
  unint64_t result = qword_267654438;
  if (!qword_267654438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654438);
  }
  return result;
}

uint64_t sub_20A9D76B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7920 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C6C6177796170 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t DynamicEndpoint.__allocating_init(appConfigurationManager:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_20A9D7BA0(a1, v2 + 16);
  return v2;
}

uint64_t DynamicEndpoint.init(appConfigurationManager:)(long long *a1)
{
  sub_20A9D7BA0(a1, v1 + 16);
  return v1;
}

uint64_t sub_20A9D7BA0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t DynamicEndpoint.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t DynamicEndpoint.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t DynamicEndpoint.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v2 = sub_20AB85480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85500();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9D7F88();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20AB85570();
  sub_20AB853D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_20AB854D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20AB85130();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_20AB85140();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v12, v13);
  }
  __break(1u);
  return result;
}

void sub_20A9D7F88()
{
  if (!qword_26AC4E3A8)
  {
    sub_20AB85140();
    unint64_t v0 = sub_20AB868D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E3A8);
    }
  }
}

uint64_t DynamicEndpoint.name.getter()
{
  uint64_t v1 = sub_20AB85480();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85500();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_20AB85570();
  sub_20AB853D0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v9 = sub_20AB854F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t DynamicEndpoint.sharedContainerIdentifier.getter()
{
  sub_20AB85670();
  sub_20AB85660();
  uint64_t v0 = sub_20AB85650();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for DynamicEndpoint()
{
  return self;
}

uint64_t method lookup function for DynamicEndpoint(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DynamicEndpoint);
}

uint64_t dispatch thunk of DynamicEndpoint.__allocating_init(appConfigurationManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t static WatchlistSummaryItemData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void WatchlistSummaryItemData.watchlistType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *WatchlistSummaryItemData.watchlistType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*WatchlistSummaryItemData.watchlistType.modify())()
{
  return nullsub_1;
}

uint64_t WatchlistSummaryItemData.symbols.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WatchlistSummaryItemData.symbols.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WatchlistSummaryItemData.symbols.modify())()
{
  return nullsub_1;
}

StocksAnalytics::WatchlistSummaryItemData __swiftcall WatchlistSummaryItemData.init(watchlistType:symbols:)(StocksAnalytics::WatchlistType watchlistType, Swift::OpaquePointer symbols)
{
  *(unsigned char *)uint64_t v2 = *(unsigned char *)watchlistType;
  *(Swift::OpaquePointer *)(v2 + 8) = symbols;
  result.symbols = symbols;
  result.watchlistType = watchlistType;
  return result;
}

uint64_t sub_20A9D853C()
{
  if (*v0) {
    return 0x736C6F626D7973;
  }
  else {
    return 0x73696C6863746177;
  }
}

uint64_t sub_20A9D8584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9D8F28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9D85AC(uint64_t a1)
{
  unint64_t v2 = sub_20A9D8800();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9D85E8(uint64_t a1)
{
  unint64_t v2 = sub_20A9D8800();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WatchlistSummaryItemData.encode(to:)(void *a1)
{
  sub_20A9D8ABC(0, &qword_26AC51910, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v11 - v7;
  char v9 = *v1;
  v11[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D8800();
  sub_20AB86DC0();
  char v14 = v9;
  char v13 = 0;
  sub_20A9D8854();
  sub_20AB86C50();
  if (!v2)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516D8);
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9D8800()
{
  unint64_t result = qword_26AC50BE0;
  if (!qword_26AC50BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50BE0);
  }
  return result;
}

unint64_t sub_20A9D8854()
{
  unint64_t result = qword_26AC4EF88;
  if (!qword_26AC4EF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF88);
  }
  return result;
}

uint64_t WatchlistSummaryItemData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9D8ABC(0, &qword_26AC517D0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D8800();
  sub_20AB86DA0();
  if (!v2)
  {
    char v15 = 0;
    sub_20A9D8B20();
    sub_20AB86B80();
    char v10 = v16;
    sub_20A9B8470();
    char v14 = 1;
    sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = v13[1];
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20A9D8ABC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9D8800();
    unint64_t v7 = a3(a1, &type metadata for WatchlistSummaryItemData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9D8B20()
{
  unint64_t result = qword_26AC4EF98;
  if (!qword_26AC4EF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EF98);
  }
  return result;
}

unint64_t sub_20A9D8B78()
{
  unint64_t result = qword_26AC50C00;
  if (!qword_26AC50C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50C00);
  }
  return result;
}

unint64_t sub_20A9D8BD0()
{
  unint64_t result = qword_26AC50BF8;
  if (!qword_26AC50BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50BF8);
  }
  return result;
}

uint64_t sub_20A9D8C24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WatchlistSummaryItemData.init(from:)(a1, a2);
}

uint64_t sub_20A9D8C3C(void *a1)
{
  return WatchlistSummaryItemData.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WatchlistSummaryItemData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WatchlistSummaryItemData()
{
  return &type metadata for WatchlistSummaryItemData;
}

unsigned char *storeEnumTagSinglePayload for WatchlistSummaryItemData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9D8DE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistSummaryItemData.CodingKeys()
{
  return &type metadata for WatchlistSummaryItemData.CodingKeys;
}

unint64_t sub_20A9D8E24()
{
  unint64_t result = qword_267654440;
  if (!qword_267654440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654440);
  }
  return result;
}

unint64_t sub_20A9D8E7C()
{
  unint64_t result = qword_26AC50BF0;
  if (!qword_26AC50BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50BF0);
  }
  return result;
}

unint64_t sub_20A9D8ED4()
{
  unint64_t result = qword_26AC50BE8;
  if (!qword_26AC50BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50BE8);
  }
  return result;
}

uint64_t sub_20A9D8F28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73696C6863746177 && a2 == 0xED00006570795474;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6F626D7973 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20A9D9044(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654448, MEMORY[0x263F24D10]);
}

uint64_t static NoStoriesAvailableEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653310, MEMORY[0x263F24D18], (uint64_t)qword_267654448, a1);
}

uint64_t static NoStoriesAvailableEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9D90AC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654460, MEMORY[0x263F24DC8]);
}

uint64_t static NoStoriesAvailableEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653318, MEMORY[0x263F24DD8], (uint64_t)qword_267654460, a1);
}

uint64_t sub_20A9D910C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654478);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654478);
  return sub_20AB85D30();
}

uint64_t static NoStoriesAvailableEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653320, MEMORY[0x263F24DE8], (uint64_t)qword_267654478, a1);
}

uint64_t NoStoriesAvailableEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NoStoriesAvailableEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NoStoriesAvailableEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NoStoriesAvailableEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_20A9D92C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for NoStoriesAvailableEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676544A8);
}

void sub_20A9D92C8()
{
  if (!qword_26AC4E698)
  {
    sub_20A986720();
    sub_20A986774();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E698);
    }
  }
}

uint64_t NoStoriesAvailableEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_20A9D92C8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NoStoriesAvailableEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NoStoriesAvailableEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent(0) + 20);
  sub_20A9D92C8();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t NoStoriesAvailableEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NoStoriesAvailableEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NoStoriesAvailableEvent.Model(0) + 20);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for NoStoriesAvailableEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676544B8);
}

uint64_t NoStoriesAvailableEvent.Model.init(eventData:feedData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a2 + 2);
  uint64_t v8 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  uint64_t result = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  uint64_t v10 = a3 + *(int *)(result + 20);
  *(unsigned char *)uint64_t v10 = v5;
  *(void *)(v10 + 8) = v6;
  *(void *)(v10 + 16) = v7;
  return result;
}

uint64_t sub_20A9D95C8()
{
  if (*v0) {
    return 0x6174614464656566;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20A9D9608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9DAE64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9D9630(uint64_t a1)
{
  unint64_t v2 = sub_20A9D9880();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9D966C(uint64_t a1)
{
  unint64_t v2 = sub_20A9D9880();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NoStoriesAvailableEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9D9C30(0, &qword_267654490, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = &v15[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D9880();
  sub_20AB86DC0();
  char v16 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (char *)(v3 + *(int *)(type metadata accessor for NoStoriesAvailableEvent.Model(0) + 20));
    char v11 = *v10;
    uint64_t v13 = *((void *)v10 + 1);
    uint64_t v12 = *((void *)v10 + 2);
    char v16 = v11;
    uint64_t v17 = v13;
    uint64_t v18 = v12;
    v15[7] = 1;
    sub_20A986774();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9D9880()
{
  unint64_t result = qword_267654498;
  if (!qword_267654498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654498);
  }
  return result;
}

uint64_t NoStoriesAvailableEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = sub_20AB85FC0();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9D9C30(0, &qword_2676544A0, MEMORY[0x263F8E040]);
  uint64_t v28 = v6;
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9D9880();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v25;
  char v29 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v27;
  sub_20AB86B80();
  char v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v23 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v32 = 1;
  sub_20A986720();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
  uint64_t v16 = v30;
  uint64_t v17 = v31;
  uint64_t v19 = v23;
  uint64_t v18 = v24;
  uint64_t v20 = v23 + *(int *)(v9 + 20);
  *(unsigned char *)uint64_t v20 = v29;
  *(void *)(v20 + 8) = v16;
  *(void *)(v20 + 16) = v17;
  sub_20A9D9C94(v19, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A9D9CF8(v19);
}

void sub_20A9D9C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9D9880();
    unint64_t v7 = a3(a1, &type metadata for NoStoriesAvailableEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9D9C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9D9CF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoStoriesAvailableEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9D9D54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NoStoriesAvailableEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9D9D6C(void *a1)
{
  return NoStoriesAvailableEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9D9D84@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653310, MEMORY[0x263F24D18], (uint64_t)qword_267654448, a1);
}

uint64_t sub_20A9D9DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653318, MEMORY[0x263F24DD8], (uint64_t)qword_267654460, a1);
}

uint64_t sub_20A9D9DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653320, MEMORY[0x263F24DE8], (uint64_t)qword_267654478, a1);
}

uint64_t sub_20A9D9E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20A9D92C8();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for NoStoriesAvailableEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9D92C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20A9D92C8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9D92C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9D92C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9D92C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9D92C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9DA394);
}

uint64_t sub_20A9DA394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20A9D92C8();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for NoStoriesAvailableEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9DA4A0);
}

uint64_t sub_20A9DA4A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20A9D92C8();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20A9DA5A4()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9D92C8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for NoStoriesAvailableEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *uint64_t v9 = *v10;
    uint64_t v11 = *((void *)v10 + 2);
    *((void *)v9 + 1) = *((void *)v10 + 1);
    *((void *)v9 + 2) = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NoStoriesAvailableEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v8 + 8) = v11;
  *(void *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9DAA2C);
}

uint64_t sub_20A9DAA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NoStoriesAvailableEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9DAB04);
}

uint64_t sub_20A9DAB04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A9DABC4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NoStoriesAvailableEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9DAD24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoStoriesAvailableEvent.Model.CodingKeys()
{
  return &type metadata for NoStoriesAvailableEvent.Model.CodingKeys;
}

unint64_t sub_20A9DAD60()
{
  unint64_t result = qword_2676544C8;
  if (!qword_2676544C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544C8);
  }
  return result;
}

unint64_t sub_20A9DADB8()
{
  unint64_t result = qword_2676544D0;
  if (!qword_2676544D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544D0);
  }
  return result;
}

unint64_t sub_20A9DAE10()
{
  unint64_t result = qword_2676544D8;
  if (!qword_2676544D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544D8);
  }
  return result;
}

uint64_t sub_20A9DAE64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::SubscribeButtonTargetType_optional __swiftcall SubscribeButtonTargetType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t SubscribeButtonTargetType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6573616863727570;
      break;
    case 2:
      uint64_t result = 0x50676E69646E616CLL;
      break;
    case 3:
      uint64_t result = 1802398060;
      break;
    case 4:
      uint64_t result = 0x65676150706D61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9DB074(unsigned __int8 *a1, char *a2)
{
  return sub_20AA3507C(*a1, *a2);
}

unint64_t sub_20A9DB084()
{
  unint64_t result = qword_2676544E0;
  if (!qword_2676544E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544E0);
  }
  return result;
}

uint64_t sub_20A9DB0D8()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9DB1D8()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9DB2C0()
{
  return sub_20AB86D80();
}

StocksAnalytics::SubscribeButtonTargetType_optional sub_20A9DB3BC(Swift::String *a1)
{
  return SubscribeButtonTargetType.init(rawValue:)(*a1);
}

void sub_20A9DB3C8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00007465656853;
      uint64_t v3 = 0x6573616863727570;
      goto LABEL_3;
    case 2:
      *a1 = 0x50676E69646E616CLL;
      a1[1] = 0xEB00000000656761;
      break;
    case 3:
      *a1 = 1802398060;
      a1[1] = 0xE400000000000000;
      break;
    case 4:
      *a1 = 0x65676150706D61;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A9DB48C()
{
  return sub_20AB86750();
}

uint64_t sub_20A9DB4EC()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SubscribeButtonTargetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9DB608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscribeButtonTargetType()
{
  return &type metadata for SubscribeButtonTargetType;
}

unint64_t sub_20A9DB640()
{
  unint64_t result = qword_2676544E8;
  if (!qword_2676544E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544E8);
  }
  return result;
}

uint64_t static NonNewsArticleData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t NonNewsArticleData.publicationName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.publicationName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*NonNewsArticleData.publicationName.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleData.articleSource.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.articleSource.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*NonNewsArticleData.articleSource.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleData.articleURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NonNewsArticleData.articleURL.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*NonNewsArticleData.articleURL.modify())()
{
  return nullsub_1;
}

void __swiftcall NonNewsArticleData.init(publicationName:articleSource:articleURL:)(StocksAnalytics::NonNewsArticleData *__return_ptr retstr, Swift::String publicationName, Swift::String articleSource, Swift::String articleURL)
{
  retstr->publicationName = publicationName;
  retstr->articleSource = articleSource;
  retstr->articleURL = articleURL;
}

uint64_t sub_20A9DB844()
{
  uint64_t v1 = 0x53656C6369747261;
  if (*v0 != 1) {
    uint64_t v1 = 0x55656C6369747261;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746163696C627570;
  }
}

uint64_t sub_20A9DB8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9DC3B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9DB8E4(uint64_t a1)
{
  unint64_t v2 = sub_20A9DBB24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9DB920(uint64_t a1)
{
  unint64_t v2 = sub_20A9DBB24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsArticleData.encode(to:)(void *a1)
{
  sub_20A9DBE2C(0, &qword_2676544F0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  void v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9DBB24();
  sub_20AB86DC0();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_20AB86C10();
  if (!v10)
  {
    char v14 = 1;
    sub_20AB86C10();
    char v13 = 2;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20A9DBB24()
{
  unint64_t result = qword_2676544F8;
  if (!qword_2676544F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676544F8);
  }
  return result;
}

uint64_t NonNewsArticleData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A9DBE2C(0, &qword_267654500, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9DBB24();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_20AB86B40();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_20AB86B40();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20A9DBE2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9DBB24();
    unint64_t v7 = a3(a1, &type metadata for NonNewsArticleData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9DBE94()
{
  unint64_t result = qword_267654508;
  if (!qword_267654508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654508);
  }
  return result;
}

unint64_t sub_20A9DBEEC()
{
  unint64_t result = qword_267654510;
  if (!qword_267654510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654510);
  }
  return result;
}

uint64_t sub_20A9DBF40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return NonNewsArticleData.init(from:)(a1, a2);
}

uint64_t sub_20A9DBF58(void *a1)
{
  return NonNewsArticleData.encode(to:)(a1);
}

uint64_t destroy for NonNewsArticleData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for NonNewsArticleData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for NonNewsArticleData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for NonNewsArticleData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleData()
{
  return &type metadata for NonNewsArticleData;
}

unsigned char *storeEnumTagSinglePayload for NonNewsArticleData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9DC278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleData.CodingKeys()
{
  return &type metadata for NonNewsArticleData.CodingKeys;
}

unint64_t sub_20A9DC2B4()
{
  unint64_t result = qword_267654518;
  if (!qword_267654518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654518);
  }
  return result;
}

unint64_t sub_20A9DC30C()
{
  unint64_t result = qword_267654520;
  if (!qword_267654520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654520);
  }
  return result;
}

unint64_t sub_20A9DC364()
{
  unint64_t result = qword_267654528;
  if (!qword_267654528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654528);
  }
  return result;
}

uint64_t sub_20A9DC3B8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746163696C627570 && a2 == 0xEF656D614E6E6F69;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x53656C6369747261 && a2 == 0xED0000656372756FLL || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x55656C6369747261 && a2 == 0xEA00000000004C52)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A9DC564(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654530, MEMORY[0x263F24D10]);
}

uint64_t static SaveEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653328, MEMORY[0x263F24D18], (uint64_t)qword_267654530, a1);
}

uint64_t static SaveEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9DC5CC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654548, MEMORY[0x263F24DC8]);
}

uint64_t static SaveEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653330, MEMORY[0x263F24DD8], (uint64_t)qword_267654548, a1);
}

uint64_t sub_20A9DC62C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654560);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654560);
  return sub_20AB85D30();
}

uint64_t static SaveEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653338, MEMORY[0x263F24DE8], (uint64_t)qword_267654560, a1);
}

uint64_t SaveEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t SaveEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*SaveEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 20);
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for SaveEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52480);
}

uint64_t SaveEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 20);
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 24);
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 24);
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.actionData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 28);
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 28);
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 32);
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 32);
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 36);
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 36);
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 40);
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 40);
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 44);
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SaveEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 44);
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 48);
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9DD3B8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t SaveEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent(0) + 48);
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SaveEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t SaveEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for SaveEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v10, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);

  return v22(v20, v2, v21);
}

uint64_t SaveEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t SaveEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SaveEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52530);
}

uint64_t SaveEvent.Model.actionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SaveEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t SaveEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t SaveEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for SaveEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t SaveEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 44));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SaveEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SaveEvent.Model(0) + 48));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 SaveEvent.Model.init(eventData:newsArticleData:actionData:groupData:feedData:viewData:userArticleContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, __n128 *a10)
{
  long long v31 = *a2;
  uint64_t v12 = *((void *)a2 + 2);
  uint64_t v13 = *((void *)a2 + 3);
  char v14 = *((unsigned char *)a2 + 32);
  uint64_t v15 = *((void *)a2 + 5);
  char v16 = *((unsigned char *)a2 + 48);
  uint64_t v17 = *((void *)a2 + 7);
  char v18 = *((unsigned char *)a2 + 64);
  char v19 = *((unsigned char *)a2 + 65);
  char v29 = *((unsigned char *)a2 + 67);
  char v30 = *((unsigned char *)a2 + 66);
  char v32 = *a3;
  long long v35 = a4[1];
  long long v36 = *a4;
  uint64_t v33 = *((void *)a4 + 5);
  uint64_t v34 = *((void *)a4 + 4);
  long long v38 = *a5;
  uint64_t v37 = *((void *)a5 + 2);
  uint64_t v40 = a6[1];
  uint64_t v41 = *a6;
  __int16 v39 = *((_WORD *)a6 + 8);
  __int16 v42 = *a7;
  uint64_t v43 = a8[1];
  uint64_t v44 = *a8;
  __n128 v49 = *a10;
  unint64_t v47 = a10[1].n128_u64[1];
  unint64_t v48 = a10[1].n128_u64[0];
  unsigned __int8 v45 = a10[2].n128_u8[1];
  unsigned __int8 v46 = a10[2].n128_u8[0];
  uint64_t v20 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for SaveEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  *(_OWORD *)uint64_t v22 = v31;
  *(void *)(v22 + 16) = v12;
  *(void *)(v22 + 24) = v13;
  *(unsigned char *)(v22 + 32) = v14;
  *(void *)(v22 + 40) = v15;
  *(unsigned char *)(v22 + 48) = v16;
  *(void *)(v22 + 56) = v17;
  *(unsigned char *)(v22 + 64) = v18;
  *(unsigned char *)(v22 + 65) = v19;
  *(unsigned char *)(v22 + 66) = v30;
  *(unsigned char *)(v22 + 67) = v29;
  *(unsigned char *)(a9 + v21[6]) = v32;
  uint64_t v23 = a9 + v21[7];
  *(_OWORD *)uint64_t v23 = v36;
  *(_OWORD *)(v23 + 16) = v35;
  *(void *)(v23 + 32) = v34;
  *(void *)(v23 + 40) = v33;
  uint64_t v24 = a9 + v21[8];
  *(_OWORD *)uint64_t v24 = v38;
  *(void *)(v24 + 16) = v37;
  uint64_t v25 = a9 + v21[9];
  *(void *)uint64_t v25 = v41;
  *(void *)(v25 + 8) = v40;
  *(_WORD *)(v25 + 16) = v39;
  *(_WORD *)(a9 + v21[10]) = v42;
  char v26 = (void *)(a9 + v21[11]);
  *char v26 = v44;
  v26[1] = v43;
  char v27 = (__n128 *)(a9 + v21[12]);
  __n128 result = v49;
  *char v27 = v49;
  v27[1].n128_u64[0] = v48;
  v27[1].n128_u64[1] = v47;
  v27[2].n128_u8[0] = v46;
  v27[2].n128_u8[1] = v45;
  return result;
}

uint64_t sub_20A9DDEAC(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x61446E6F69746361;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_7;
    case 5:
      unsigned int v3 = 2003134838;
LABEL_7:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000016;
      break;
    case 7:
      uint64_t result = 0x7461446575737369;
      break;
    case 8:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9DDFDC()
{
  return sub_20A9DDEAC(*v0);
}

uint64_t sub_20A9DDFE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9E2B88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9DE00C(uint64_t a1)
{
  unint64_t v2 = sub_20A9DE4BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9DE048(uint64_t a1)
{
  unint64_t v2 = sub_20A9DE4BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SaveEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9DECA8(0, &qword_267654578, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9DE4BC();
  sub_20AB86DC0();
  LOBYTE(v36) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for SaveEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v36 = v12;
    *(void *)&long long v37 = v13;
    *((void *)&v37 + 1) = v14;
    LOBYTE(v38) = v15;
    *((void *)&v38 + 1) = v16;
    char v39 = v17;
    uint64_t v40 = v18;
    char v41 = v19;
    char v42 = v20;
    char v43 = v21;
    char v44 = (char)v11;
    char v35 = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    LOBYTE(v36) = *(unsigned char *)(v3 + v10[6]);
    char v35 = 2;
    sub_20A98EDB4();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = v22[1];
    long long v36 = *v22;
    long long v37 = v23;
    long long v38 = v22[2];
    char v35 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v36 = *v24;
    *(void *)&long long v37 = v25;
    char v35 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    char v26 = (long long *)(v3 + v10[9]);
    __int16 v27 = *((_WORD *)v26 + 8);
    long long v36 = *v26;
    LOWORD(v37) = v27;
    char v35 = 5;
    sub_20A986C14();
    sub_20AB86BE0();
    LOWORD(v36) = *(_WORD *)(v3 + v10[10]);
    char v35 = 6;
    sub_20A9C4F78();
    sub_20AB86C50();
    long long v36 = *(_OWORD *)(v3 + v10[11]);
    char v35 = 7;
    sub_20A9870B4();
    sub_20AB86BE0();
    char v28 = (long long *)(v3 + v10[12]);
    long long v29 = *v28;
    uint64_t v30 = *((void *)v28 + 2);
    uint64_t v31 = *((void *)v28 + 3);
    char v32 = *((unsigned char *)v28 + 32);
    LOBYTE(v28) = *((unsigned char *)v28 + 33);
    long long v36 = v29;
    *(void *)&long long v37 = v30;
    *((void *)&v37 + 1) = v31;
    LOBYTE(v38) = v32;
    BYTE1(v38) = (_BYTE)v28;
    char v35 = 8;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9DE4BC()
{
  unint64_t result = qword_267654580;
  if (!qword_267654580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654580);
  }
  return result;
}

uint64_t SaveEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9DECA8(0, &qword_267654588, MEMORY[0x263F8E040]);
  uint64_t v41 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v38 - v9;
  uint64_t v45 = type metadata accessor for SaveEvent.Model(0);
  MEMORY[0x270FA5388](v45);
  long long v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  char v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20A9DE4BC();
  char v42 = v10;
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  uint64_t v39 = v8;
  LOBYTE(v46) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v41;
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v12, v6, v4);
  char v55 = 1;
  sub_20A97A154();
  sub_20AB86B80();
  long long v15 = v47;
  char v16 = v48;
  uint64_t v17 = *((void *)&v48 + 1);
  char v18 = v49;
  uint64_t v19 = v50;
  char v20 = v51;
  char v21 = v52;
  char v22 = v53;
  char v23 = v54;
  uint64_t v24 = (int *)v45;
  uint64_t v25 = &v12[*(int *)(v45 + 20)];
  *(_OWORD *)uint64_t v25 = v46;
  *((_OWORD *)v25 + 1) = v15;
  v25[32] = v16;
  *((void *)v25 + 5) = v17;
  v25[48] = v18;
  *((void *)v25 + 7) = v19;
  v25[64] = v20;
  v25[65] = v21;
  v25[66] = v22;
  v25[67] = v23;
  char v55 = 2;
  sub_20A98ED60();
  sub_20AB86B80();
  v12[v24[6]] = v46;
  char v55 = 3;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v26 = (uint64_t)v44;
  __int16 v27 = &v12[v24[7]];
  long long v28 = v47;
  *(_OWORD *)__int16 v27 = v46;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v48;
  char v55 = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v29 = v47;
  uint64_t v30 = &v12[v24[8]];
  *(_OWORD *)uint64_t v30 = v46;
  *((void *)v30 + 2) = v29;
  char v55 = 5;
  sub_20A986BC0();
  sub_20AB86B10();
  __int16 v31 = v47;
  char v32 = &v12[v24[9]];
  *(_OWORD *)char v32 = v46;
  *((_WORD *)v32 + 8) = v31;
  char v55 = 6;
  sub_20A9C4F24();
  sub_20AB86B80();
  *(_WORD *)&v12[v24[10]] = v46;
  char v55 = 7;
  sub_20A987060();
  sub_20AB86B10();
  *(_OWORD *)&v12[v24[11]] = v46;
  char v55 = 8;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v14);
  long long v33 = v47;
  char v34 = v48;
  char v35 = BYTE1(v48);
  long long v36 = &v12[v24[12]];
  *(_OWORD *)long long v36 = v46;
  *((_OWORD *)v36 + 1) = v33;
  v36[32] = v34;
  v36[33] = v35;
  sub_20A9DED0C((uint64_t)v12, v40);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return sub_20A9DED70((uint64_t)v12);
}

void sub_20A9DECA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9DE4BC();
    unint64_t v7 = a3(a1, &type metadata for SaveEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9DED0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9DED70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SaveEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9DEDCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SaveEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9DEDE4(void *a1)
{
  return SaveEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9DEDFC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653328, MEMORY[0x263F24D18], (uint64_t)qword_267654530, a1);
}

uint64_t sub_20A9DEE34@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653330, MEMORY[0x263F24DD8], (uint64_t)qword_267654548, a1);
}

uint64_t sub_20A9DEE6C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653338, MEMORY[0x263F24DE8], (uint64_t)qword_267654560, a1);
}

uint64_t sub_20A9DEEA4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v11, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  char v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104);

  return v23(v21, v4, v22);
}

uint64_t *initializeBufferWithCopyOfBuffer for SaveEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    long long v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for SaveEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);

  return v21(v19, v20);
}

uint64_t initializeWithCopy for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

uint64_t assignWithCopy for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t initializeWithTake for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

uint64_t assignWithTake for SaveEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaveEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9E0E04);
}

uint64_t sub_20A9E0E04(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_18:
    return v9(v10, a2, v8);
  }
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_17:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_18;
  }
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  uint64_t v23 = v21;
  uint64_t v24 = a1 + a3[12];

  return v22(v24, a2, v23);
}

uint64_t storeEnumTagSinglePayload for SaveEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9E12EC);
}

uint64_t sub_20A9E12EC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_18:
    return v11(v12, a2, a2, v10);
  }
  sub_20A9DD3B8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_17:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_18;
  }
  sub_20A9DD3B8(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_17;
  }
  sub_20A9DD3B8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v25 = v23;
  uint64_t v26 = a1 + a4[12];

  return v24(v26, a2, a2, v25);
}

void sub_20A9E17CC()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A9DD3B8(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20A9DD3B8(319, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
      if (v2 <= 0x3F)
      {
        sub_20A9DD3B8(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20A9DD3B8(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20A9DD3B8(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
            if (v5 <= 0x3F)
            {
              sub_20A9DD3B8(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
              if (v6 <= 0x3F)
              {
                sub_20A9DD3B8(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                if (v7 <= 0x3F)
                {
                  sub_20A9DD3B8(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SaveEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)((char *)a2 + v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *uint64_t v15 = *v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      *((void *)v15 + 2) = v17;
      *((void *)v15 + 3) = *((void *)v16 + 3);
      uint64_t v18 = *((void *)v16 + 5);
      *((void *)v15 + 4) = *((void *)v16 + 4);
      *((void *)v15 + 5) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *uint64_t v23 = *v24;
    uint64_t v25 = *((void *)v24 + 2);
    *((void *)v23 + 1) = *((void *)v24 + 1);
    *((void *)v23 + 2) = v25;
    uint64_t v26 = (char *)a1 + v22;
    uint64_t v27 = (char *)a2 + v22;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *((void *)v27 + 1);
    *((_WORD *)v26 + 8) = *((_WORD *)v27 + 8);
    uint64_t v30 = a3[10];
    uint64_t v31 = a3[11];
    __int16 v32 = *(_WORD *)((char *)a2 + v30);
    *(void *)uint64_t v26 = v28;
    *((void *)v26 + 1) = v29;
    *(_WORD *)((char *)a1 + v30) = v32;
    uint64_t v33 = (void *)((char *)a1 + v31);
    uint64_t v34 = *(void *)((char *)a2 + v31 + 8);
    *uint64_t v33 = *(void *)((char *)a2 + v31);
    v33[1] = v34;
    uint64_t v35 = a3[12];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = *((void *)v37 + 3);
    *((void *)v36 + 2) = *((void *)v37 + 2);
    *((void *)v36 + 3) = v39;
    v36[32] = v37[32];
    v36[33] = v37[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SaveEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(void *)(v14 + 16) = v16;
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    uint64_t v17 = *(void *)(v15 + 40);
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
    *(void *)(v14 + 40) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = (uint64_t *)(a2 + v20);
  uint64_t v26 = *v25;
  uint64_t v27 = v25[1];
  *(_WORD *)(v24 + 16) = *((_WORD *)v25 + 8);
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  __int16 v30 = *(_WORD *)(a2 + v28);
  *(void *)uint64_t v24 = v26;
  *(void *)(v24 + 8) = v27;
  *(_WORD *)(a1 + v28) = v30;
  uint64_t v31 = (void *)(a1 + v29);
  uint64_t v32 = *(void *)(a2 + v29 + 8);
  *uint64_t v31 = *(void *)(a2 + v29);
  v31[1] = v32;
  uint64_t v33 = a3[12];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  uint64_t v37 = *(void *)(v35 + 24);
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(void *)(v34 + 24) = v37;
  *(unsigned char *)(v34 + 32) = *(unsigned char *)(v35 + 32);
  *(unsigned char *)(v34 + 33) = *(unsigned char *)(v35 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  uint64_t v14 = *(void *)(a1 + v11 + 16);
  uint64_t v15 = *(void *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      *(void *)(v12 + 40) = *((void *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v12);
      long long v17 = v13[1];
      long long v16 = v13[2];
      *(_OWORD *)uint64_t v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *((void *)v13 + 1);
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    *(void *)(v12 + 40) = *((void *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *v13;
    long long v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)uint64_t v12 = v18;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)(a2 + v23);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  uint64_t v26 = a3[10];
  uint64_t v27 = (unsigned char *)(a1 + v26);
  uint64_t v28 = (unsigned char *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = a3[11];
  __int16 v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *__int16 v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[12];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(void *)uint64_t v33 = *(void *)(a2 + v32);
  *(void *)(v33 + 8) = *(void *)(a2 + v32 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 16) = *(void *)(v34 + 16);
  *(void *)(v33 + 24) = *(void *)(v34 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v33 + 32) = *(unsigned char *)(v34 + 32);
  *(unsigned char *)(v33 + 33) = *(unsigned char *)(v34 + 33);
  return a1;
}

uint64_t initializeWithTake for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (_OWORD *)(a1 + v13);
  long long v16 = (_OWORD *)(a2 + v13);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  uint64_t v18 = a1 + v14;
  uint64_t v19 = a2 + v14;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  *(_WORD *)(a1 + v21) = *(_WORD *)(a2 + v21);
  uint64_t v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  long long v27 = *(_OWORD *)(v26 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(_OWORD *)(v25 + 16) = v27;
  *(_WORD *)(v25 + 32) = *(_WORD *)(v26 + 32);
  return a1;
}

uint64_t assignWithTake for SaveEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  char v14 = *(unsigned char *)(a2 + v12);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  *(unsigned char *)(a1 + v12) = v14;
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  if (!*(void *)(a1 + v13 + 16)) {
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    sub_20A98D5B8(a1 + v13);
LABEL_5:
    long long v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a2 + v25 + 8);
  *(void *)uint64_t v26 = *(void *)(a2 + v25);
  *(void *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  uint64_t v29 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  __int16 v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *__int16 v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(v36 + 8);
  *(void *)uint64_t v35 = *(void *)v36;
  *(void *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v36 + 24);
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  *(void *)(v35 + 24) = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 32) = *(unsigned char *)(v36 + 32);
  *(unsigned char *)(v35 + 33) = *(unsigned char *)(v36 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for SaveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9E2708);
}

uint64_t sub_20A9E2708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SaveEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9E27E0);
}

uint64_t sub_20A9E27E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A9E28A0()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SaveEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9E2A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SaveEvent.Model.CodingKeys()
{
  return &type metadata for SaveEvent.Model.CodingKeys;
}

unint64_t sub_20A9E2A84()
{
  unint64_t result = qword_267654590;
  if (!qword_267654590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654590);
  }
  return result;
}

unint64_t sub_20A9E2ADC()
{
  unint64_t result = qword_267654598;
  if (!qword_267654598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654598);
  }
  return result;
}

unint64_t sub_20A9E2B34()
{
  unint64_t result = qword_2676545A0;
  if (!qword_2676545A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676545A0);
  }
  return result;
}

uint64_t sub_20A9E2B88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t static ViewData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ViewData.viewSessionID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ViewData.viewSessionID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ViewData.viewSessionID.modify())()
{
  return nullsub_1;
}

void ViewData.viewType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *ViewData.viewType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ViewData.viewType.modify())()
{
  return nullsub_1;
}

void ViewData.viewAction.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

unsigned char *ViewData.viewAction.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ViewData.viewAction.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ViewData __swiftcall ViewData.init(viewSessionID:viewType:viewAction:)(Swift::String viewSessionID, StocksAnalytics::ViewType viewType, StocksAnalytics::ViewAction viewAction)
{
  char v4 = *(unsigned char *)viewType;
  char v5 = *(unsigned char *)viewAction;
  *(Swift::String *)uint64_t v3 = viewSessionID;
  *(unsigned char *)(v3 + 16) = v4;
  *(unsigned char *)(v3 + 17) = v5;
  result.viewSessionID = viewSessionID;
  result.viewType = viewType;
  return result;
}

uint64_t sub_20A9E30AC()
{
  uint64_t v1 = 0x6570795477656976;
  if (*v0 != 1) {
    uint64_t v1 = 0x6974634177656976;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7373655377656976;
  }
}

uint64_t sub_20A9E3118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9E3BBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9E3140(uint64_t a1)
{
  unint64_t v2 = sub_20A9E339C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9E317C(uint64_t a1)
{
  unint64_t v2 = sub_20A9E339C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ViewData.encode(to:)(void *a1)
{
  sub_20A9E36F8(0, &qword_26AC51958, MEMORY[0x263F8E0C0]);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - v6;
  int v8 = *(unsigned __int8 *)(v1 + 16);
  int v16 = *(unsigned __int8 *)(v1 + 17);
  int v17 = v8;
  uint64_t v9 = a1[3];
  unint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_20A9E339C();
  sub_20AB86DC0();
  char v22 = 0;
  sub_20AB86C10();
  if (!v2)
  {
    char v13 = v16;
    char v21 = v17;
    char v20 = 1;
    sub_20A9E33F0();
    sub_20AB86C50();
    char v19 = v13;
    char v18 = 2;
    sub_20A9E3444();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

unint64_t sub_20A9E339C()
{
  unint64_t result = qword_26AC51538;
  if (!qword_26AC51538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51538);
  }
  return result;
}

unint64_t sub_20A9E33F0()
{
  unint64_t result = qword_26AC51558;
  if (!qword_26AC51558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51558);
  }
  return result;
}

unint64_t sub_20A9E3444()
{
  unint64_t result = qword_26AC4EB78;
  if (!qword_26AC4EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB78);
  }
  return result;
}

uint64_t ViewData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9E36F8(0, &qword_26AC517F8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9E339C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v21 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v19 = 1;
  sub_20A9E375C();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  int v16 = v20;
  char v17 = 2;
  sub_20A9E37B0();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  char v14 = v18;
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v16;
  *(unsigned char *)(a2 + 17) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

void sub_20A9E36F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9E339C();
    unint64_t v7 = a3(a1, &type metadata for ViewData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20A9E375C()
{
  unint64_t result = qword_26AC51568;
  if (!qword_26AC51568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51568);
  }
  return result;
}

unint64_t sub_20A9E37B0()
{
  unint64_t result = qword_26AC4EB88;
  if (!qword_26AC4EB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB88);
  }
  return result;
}

uint64_t sub_20A9E380C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ViewData.init(from:)(a1, a2);
}

uint64_t sub_20A9E3824(void *a1)
{
  return ViewData.encode(to:)(a1);
}

uint64_t sub_20A9E3840(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for ViewData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewData()
{
  return &type metadata for ViewData;
}

unsigned char *storeEnumTagSinglePayload for ViewData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9E3A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewData.CodingKeys()
{
  return &type metadata for ViewData.CodingKeys;
}

unint64_t sub_20A9E3AB8()
{
  unint64_t result = qword_2676545A8;
  if (!qword_2676545A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676545A8);
  }
  return result;
}

unint64_t sub_20A9E3B10()
{
  unint64_t result = qword_26AC51548;
  if (!qword_26AC51548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51548);
  }
  return result;
}

unint64_t sub_20A9E3B68()
{
  unint64_t result = qword_26AC51540;
  if (!qword_26AC51540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51540);
  }
  return result;
}

uint64_t sub_20A9E3BBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7373655377656976 && a2 == 0xED000044496E6F69;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6570795477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974634177656976 && a2 == 0xEA00000000006E6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A9E3D44(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676545B0, MEMORY[0x263F24D10]);
}

uint64_t static AudioEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653340, MEMORY[0x263F24D18], (uint64_t)qword_2676545B0, a1);
}

uint64_t static AudioEngageEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9E3DAC(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_2676545C8, MEMORY[0x263F24DC8]);
}

uint64_t static AudioEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653348, MEMORY[0x263F24DD8], (uint64_t)qword_2676545C8, a1);
}

uint64_t sub_20A9E3E0C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_2676545E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676545E0);
  return sub_20AB85D30();
}

uint64_t static AudioEngageEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653350, MEMORY[0x263F24DE8], (uint64_t)qword_2676545E0, a1);
}

uint64_t AudioEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AudioEngageEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AudioEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9E5C34(type metadata accessor for AudioEngageEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for AudioEngageEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654628);
}

uint64_t AudioEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 24);
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 28);
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 32);
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 36);
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.trackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 40);
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.trackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.audioEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 44);
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 48);
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.articleScienceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 52);
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.articleScienceData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 56);
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.playbackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t AudioEngageEvent.playbackData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 60);
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.playbackData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9E517C()
{
  unint64_t result = qword_267654600;
  if (!qword_267654600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654600);
  }
  return result;
}

unint64_t sub_20A9E51D0()
{
  unint64_t result = qword_267654608;
  if (!qword_267654608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654608);
  }
  return result;
}

uint64_t AudioEngageEvent.audioEngagementOriginationData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 64);
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.audioEngagementOriginationData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9E53CC(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AudioEngageEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent(0) + 68);
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AudioEngageEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t AudioEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AudioEngageEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x263F24D30];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v12, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v12, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v2, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v12, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v26, v2, v27);
  uint64_t v28 = a1 + v4[16];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v2, v29);
  uint64_t v30 = a1 + v4[17];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104);

  return v32(v30, v12, v31);
}

uint64_t AudioEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AudioEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9E5C34(type metadata accessor for AudioEngageEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9E5C34@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for AudioEngageEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654638);
}

uint64_t AudioEngageEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t AudioEngageEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 36);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.trackData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngageEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 40));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 44);
  char v4 = *(unsigned char *)(v3 + 16);
  int v5 = *(_DWORD *)(v3 + 20);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  __int16 v8 = *(_WORD *)(v3 + 40);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 20) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(_WORD *)(a1 + 40) = v8;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 48));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t AudioEngageEvent.Model.articleScienceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 52);
  long long v4 = *(_OWORD *)(v3 + 144);
  long long v5 = *(_OWORD *)(v3 + 176);
  long long v31 = *(_OWORD *)(v3 + 160);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 112);
  long long v27 = *(_OWORD *)(v3 + 96);
  long long v8 = v27;
  long long v28 = v7;
  long long v9 = *(_OWORD *)(v3 + 112);
  long long v10 = *(_OWORD *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 128);
  long long v11 = v29;
  long long v30 = v10;
  long long v12 = *(_OWORD *)(v3 + 48);
  long long v13 = *(_OWORD *)(v3 + 80);
  long long v25 = *(_OWORD *)(v3 + 64);
  long long v14 = v25;
  long long v26 = v13;
  long long v15 = *(_OWORD *)(v3 + 16);
  long long v16 = *(_OWORD *)(v3 + 48);
  long long v23 = *(_OWORD *)(v3 + 32);
  long long v17 = v23;
  long long v24 = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  v22[0] = *(_OWORD *)v3;
  long long v19 = v22[0];
  v22[1] = v18;
  long long v20 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a1 + 160) = v31;
  *(_OWORD *)(a1 + 176) = v20;
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = v4;
  *(_OWORD *)(a1 + 32) = v17;
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = v14;
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v33 = *(void *)(v3 + 192);
  *(void *)(a1 + 192) = *(void *)(v3 + 192);
  *(_OWORD *)a1 = v19;
  *(_OWORD *)(a1 + 16) = v15;
  return sub_20A9C5E44((uint64_t)v22);
}

uint64_t AudioEngageEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 56));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

float AudioEngageEvent.Model.playbackData.getter@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + *(int *)(type metadata accessor for AudioEngageEvent.Model(0) + 60));
  *a1 = result;
  return result;
}

uint64_t AudioEngageEvent.Model.audioEngagementOriginationData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngageEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t AudioEngageEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AudioEngageEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 68));
  return result;
}

__n128 AudioEngageEvent.Model.init(eventData:timedData:newsArticleData:channelData:groupData:feedData:trackData:audioEngagementData:viewData:articleScienceData:issueData:playbackData:audioEngagementOriginationData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, long long *a6@<X5>, int *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, long long *a11, uint64_t *a12, int *a13, char *a14, char *a15)
{
  long long v49 = *a3;
  uint64_t v42 = *((void *)a3 + 3);
  uint64_t v43 = *((void *)a3 + 2);
  char v41 = *((unsigned char *)a3 + 32);
  uint64_t v40 = *((void *)a3 + 5);
  char v39 = *((unsigned char *)a3 + 48);
  uint64_t v48 = *((void *)a3 + 7);
  char v46 = *((unsigned char *)a3 + 65);
  char v47 = *((unsigned char *)a3 + 64);
  char v44 = *((unsigned char *)a3 + 67);
  char v45 = *((unsigned char *)a3 + 66);
  long long v54 = *a4;
  uint64_t v52 = *((void *)a4 + 3);
  uint64_t v53 = *((void *)a4 + 2);
  char v50 = *((unsigned char *)a4 + 33);
  char v51 = *((unsigned char *)a4 + 32);
  long long v58 = a5[1];
  long long v59 = *a5;
  uint64_t v56 = *((void *)a5 + 5);
  uint64_t v57 = *((void *)a5 + 4);
  long long v61 = *a6;
  uint64_t v60 = *((void *)a6 + 2);
  char v62 = *((unsigned char *)a7 + 4);
  int v63 = *a7;
  uint64_t v65 = a8[1];
  uint64_t v66 = *a8;
  char v64 = *((unsigned char *)a8 + 16);
  uint64_t v83 = *((void *)a11 + 24);
  int v17 = *((_DWORD *)a8 + 5);
  long long v81 = a11[10];
  long long v82 = a11[11];
  long long v77 = a11[6];
  long long v78 = a11[7];
  long long v79 = a11[8];
  long long v80 = a11[9];
  long long v73 = a11[2];
  long long v74 = a11[3];
  long long v75 = a11[4];
  long long v76 = a11[5];
  long long v71 = *a11;
  __n128 v72 = (__n128)a11[1];
  int v18 = *a13;
  uint64_t v20 = a8[3];
  uint64_t v19 = a8[4];
  __int16 v21 = *((_WORD *)a8 + 20);
  uint64_t v22 = *a10;
  uint64_t v23 = a10[1];
  __int16 v24 = *((_WORD *)a10 + 8);
  uint64_t v67 = *a12;
  uint64_t v68 = a12[1];
  char v69 = *a14;
  char v70 = *a15;
  uint64_t v25 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a9, a1, v25);
  long long v26 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  uint64_t v27 = a9 + v26[5];
  uint64_t v28 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v27, a2, v28);
  uint64_t v29 = a9 + v26[6];
  *(void *)(v29 + 16) = v43;
  *(void *)(v29 + 24) = v42;
  *(unsigned char *)(v29 + 32) = v41;
  *(void *)(v29 + 40) = v40;
  *(unsigned char *)(v29 + 48) = v39;
  *(_OWORD *)uint64_t v29 = v49;
  *(void *)(v29 + 56) = v48;
  *(unsigned char *)(v29 + 64) = v47;
  *(unsigned char *)(v29 + 65) = v46;
  *(unsigned char *)(v29 + 66) = v45;
  *(unsigned char *)(v29 + 67) = v44;
  uint64_t v30 = a9 + v26[7];
  *(_OWORD *)uint64_t v30 = v54;
  *(void *)(v30 + 16) = v53;
  *(void *)(v30 + 24) = v52;
  *(unsigned char *)(v30 + 32) = v51;
  *(unsigned char *)(v30 + 33) = v50;
  uint64_t v31 = a9 + v26[8];
  *(_OWORD *)uint64_t v31 = v59;
  *(_OWORD *)(v31 + 16) = v58;
  *(void *)(v31 + 32) = v57;
  *(void *)(v31 + 40) = v56;
  uint64_t v32 = a9 + v26[9];
  *(_OWORD *)uint64_t v32 = v61;
  *(void *)(v32 + 16) = v60;
  uint64_t v33 = a9 + v26[10];
  *(_DWORD *)uint64_t v33 = v63;
  *(unsigned char *)(v33 + 4) = v62;
  uint64_t v34 = a9 + v26[11];
  *(void *)uint64_t v34 = v66;
  *(void *)(v34 + 8) = v65;
  *(unsigned char *)(v34 + 16) = v64;
  *(_DWORD *)(v34 + 20) = v17;
  *(void *)(v34 + 24) = v20;
  *(void *)(v34 + 32) = v19;
  *(_WORD *)(v34 + 40) = v21;
  uint64_t v35 = a9 + v26[12];
  *(void *)uint64_t v35 = v22;
  *(void *)(v35 + 8) = v23;
  *(_WORD *)(v35 + 16) = v24;
  uint64_t v36 = a9 + v26[13];
  *(void *)(v36 + 192) = v83;
  *(_OWORD *)(v36 + 160) = v81;
  *(_OWORD *)(v36 + 176) = v82;
  *(_OWORD *)(v36 + 96) = v77;
  *(_OWORD *)(v36 + 112) = v78;
  *(_OWORD *)(v36 + 128) = v79;
  *(_OWORD *)(v36 + 144) = v80;
  *(_OWORD *)(v36 + 32) = v73;
  *(_OWORD *)(v36 + 48) = v74;
  *(_OWORD *)(v36 + 64) = v75;
  *(_OWORD *)(v36 + 80) = v76;
  __n128 result = v72;
  *(_OWORD *)uint64_t v36 = v71;
  *(__n128 *)(v36 + 16) = v72;
  uint64_t v38 = (void *)(a9 + v26[14]);
  *uint64_t v38 = v67;
  v38[1] = v68;
  *(_DWORD *)(a9 + v26[15]) = v18;
  *(unsigned char *)(a9 + v26[16]) = v69;
  *(unsigned char *)(a9 + v26[17]) = v70;
  return result;
}

uint64_t sub_20A9E64B0(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x446C656E6E616863;
      break;
    case 4:
      uint64_t result = 0x74614470756F7267;
      break;
    case 5:
      unsigned int v3 = 1684366694;
      goto LABEL_9;
    case 6:
      uint64_t result = 0x7461446B63617274;
      break;
    case 7:
    case 13:
      uint64_t result = 0xD000000000000013;
      break;
    case 8:
      unsigned int v3 = 2003134838;
LABEL_9:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 10:
      uint64_t result = 0x7461446575737369;
      break;
    case 11:
      uint64_t result = 0x6B63616279616C70;
      break;
    case 12:
      uint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9E6664()
{
  return sub_20A9E64B0(*v0);
}

uint64_t sub_20A9E666C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9EDA04(a1, a2);
  *a3 = result;
  return result;
}

void sub_20A9E6694(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_20A9E66A0(uint64_t a1)
{
  unint64_t v2 = sub_20A9E6E14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9E66DC(uint64_t a1)
{
  unint64_t v2 = sub_20A9E6E14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioEngageEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9E7CC4(0, &qword_267654610, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v49 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9E6E14();
  sub_20AB86DC0();
  LOBYTE(v51) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    long long v10 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
    LOBYTE(v51) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    long long v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v51 = v12;
    *(void *)&long long v52 = v13;
    *((void *)&v52 + 1) = v14;
    LOBYTE(v53) = v15;
    *((void *)&v53 + 1) = v16;
    LOBYTE(v54) = v17;
    *((void *)&v54 + 1) = v18;
    LOBYTE(v55) = v19;
    BYTE1(v55) = v20;
    BYTE2(v55) = v21;
    BYTE3(v55) = (_BYTE)v11;
    LOBYTE(v65) = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = *v22;
    uint64_t v24 = *((void *)v22 + 2);
    uint64_t v25 = *((void *)v22 + 3);
    char v26 = *((unsigned char *)v22 + 32);
    LOBYTE(v22) = *((unsigned char *)v22 + 33);
    long long v51 = v23;
    *(void *)&long long v52 = v24;
    *((void *)&v52 + 1) = v25;
    LOBYTE(v53) = v26;
    BYTE1(v53) = (_BYTE)v22;
    LOBYTE(v65) = 3;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v27 = (long long *)(v3 + v10[8]);
    long long v28 = v27[1];
    long long v51 = *v27;
    long long v52 = v28;
    long long v53 = v27[2];
    LOBYTE(v65) = 4;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v29 = (long long *)(v3 + v10[9]);
    uint64_t v30 = *((void *)v29 + 2);
    long long v51 = *v29;
    *(void *)&long long v52 = v30;
    LOBYTE(v65) = 5;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v31 = (int *)(v3 + v10[10]);
    int v32 = *v31;
    LOBYTE(v31) = *((unsigned char *)v31 + 4);
    LODWORD(v51) = v32;
    BYTE4(v51) = (_BYTE)v31;
    LOBYTE(v65) = 6;
    sub_20A9869C4();
    sub_20AB86C50();
    uint64_t v33 = (long long *)(v3 + v10[11]);
    char v34 = *((unsigned char *)v33 + 16);
    int v35 = *((_DWORD *)v33 + 5);
    uint64_t v36 = *((void *)v33 + 3);
    uint64_t v37 = *((void *)v33 + 4);
    __int16 v38 = *((_WORD *)v33 + 20);
    long long v51 = *v33;
    LOBYTE(v52) = v34;
    DWORD1(v52) = v35;
    *((void *)&v52 + 1) = v36;
    *(void *)&long long v53 = v37;
    WORD4(v53) = v38;
    LOBYTE(v65) = 7;
    sub_20A986E64();
    sub_20AB86C50();
    char v39 = (long long *)(v3 + v10[12]);
    __int16 v40 = *((_WORD *)v39 + 8);
    long long v65 = *v39;
    __int16 v66 = v40;
    char v64 = 8;
    sub_20A986C14();
    sub_20AB86BE0();
    char v41 = (long long *)(v3 + v10[13]);
    long long v42 = v41[11];
    long long v61 = v41[10];
    long long v62 = v42;
    uint64_t v63 = *((void *)v41 + 24);
    long long v43 = v41[7];
    long long v57 = v41[6];
    long long v58 = v43;
    long long v44 = v41[9];
    long long v59 = v41[8];
    long long v60 = v44;
    long long v45 = v41[3];
    long long v53 = v41[2];
    long long v54 = v45;
    long long v46 = v41[5];
    long long v55 = v41[4];
    long long v56 = v46;
    long long v47 = *v41;
    long long v52 = v41[1];
    long long v51 = v47;
    char v50 = 9;
    sub_20A9C4D28();
    sub_20AB86C50();
    long long v51 = *(_OWORD *)(v3 + v10[14]);
    char v50 = 10;
    sub_20A9870B4();
    sub_20AB86BE0();
    LODWORD(v51) = *(_DWORD *)(v3 + v10[15]);
    char v50 = 11;
    sub_20A987304();
    sub_20AB86C50();
    LOBYTE(v51) = *(unsigned char *)(v3 + v10[16]);
    char v50 = 12;
    sub_20A9E51D0();
    sub_20AB86C50();
    LOBYTE(v51) = *(unsigned char *)(v3 + v10[17]);
    char v50 = 13;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9E6E14()
{
  unint64_t result = qword_267654618;
  if (!qword_267654618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654618);
  }
  return result;
}

uint64_t AudioEngageEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v76 = sub_20AB85FE0();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v77 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9E7CC4(0, &qword_267654620, MEMORY[0x263F8E040]);
  uint64_t v78 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v71 - v11;
  uint64_t v98 = (int *)type metadata accessor for AudioEngageEvent.Model(0);
  MEMORY[0x270FA5388](v98);
  long long v81 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  long long v79 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A9E6E14();
  long long v73 = v12;
  sub_20AB86DA0();
  uint64_t v74 = v6;
  if (v2)
  {
    uint64_t v80 = v2;
    LODWORD(v78) = 0;
    uint64_t v16 = v81;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    int v18 = 0;
    int v19 = 0;
    char v20 = v98;
    if (v78) {
      goto LABEL_9;
    }
LABEL_5:
    if (!v19) {
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  uint64_t v15 = v10;
  LOBYTE(v85) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  long long v28 = v81;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v81, v8, v6);
  LOBYTE(v85) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v29 = v76;
  sub_20AB86B80();
  uint64_t v30 = v98;
  (*(void (**)(char *, char *, uint64_t))(v75 + 32))(&v28[v98[5]], v5, v29);
  LOBYTE(v83) = 2;
  sub_20A97A154();
  sub_20AB86B80();
  long long v31 = v86;
  char v32 = v87;
  uint64_t v33 = *((void *)&v87 + 1);
  char v34 = v88;
  uint64_t v35 = *((void *)&v88 + 1);
  char v36 = v89;
  char v37 = BYTE1(v89);
  char v38 = BYTE2(v89);
  char v39 = BYTE3(v89);
  __int16 v40 = &v28[v30[6]];
  *(_OWORD *)__int16 v40 = v85;
  *((_OWORD *)v40 + 1) = v31;
  v40[32] = v32;
  *((void *)v40 + 5) = v33;
  v40[48] = v34;
  *((void *)v40 + 7) = v35;
  v40[64] = v36;
  v40[65] = v37;
  v40[66] = v38;
  v40[67] = v39;
  LOBYTE(v83) = 3;
  sub_20A986280();
  sub_20AB86B80();
  long long v41 = v86;
  char v42 = v87;
  char v43 = BYTE1(v87);
  long long v44 = &v28[v30[7]];
  *(_OWORD *)long long v44 = v85;
  *((_OWORD *)v44 + 1) = v41;
  v44[32] = v42;
  v44[33] = v43;
  LOBYTE(v83) = 4;
  sub_20A9864D0();
  sub_20AB86B10();
  long long v45 = &v28[v30[8]];
  long long v46 = v86;
  *(_OWORD *)long long v45 = v85;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v87;
  LOBYTE(v83) = 5;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v47 = v86;
  uint64_t v48 = &v28[v30[9]];
  *(_OWORD *)uint64_t v48 = v85;
  *((void *)v48 + 2) = v47;
  LOBYTE(v83) = 6;
  sub_20A986970();
  sub_20AB86B80();
  char v49 = BYTE4(v85);
  char v50 = &v28[v30[10]];
  *(_DWORD *)char v50 = v85;
  v50[4] = v49;
  LOBYTE(v83) = 7;
  sub_20A986E10();
  sub_20AB86B80();
  char v51 = v86;
  int v52 = DWORD1(v86);
  uint64_t v53 = *((void *)&v86 + 1);
  uint64_t v54 = v87;
  __int16 v55 = WORD4(v87);
  long long v56 = &v28[v30[11]];
  *(_OWORD *)long long v56 = v85;
  v56[16] = v51;
  *((_DWORD *)v56 + 5) = v52;
  *((void *)v56 + 3) = v53;
  *((void *)v56 + 4) = v54;
  *((_WORD *)v56 + 20) = v55;
  LOBYTE(v83) = 8;
  sub_20A986BC0();
  sub_20AB86B10();
  __int16 v57 = v86;
  long long v58 = &v28[v98[12]];
  *(_OWORD *)long long v58 = v85;
  *((_WORD *)v58 + 8) = v57;
  char v84 = 9;
  sub_20A9C4CD4();
  sub_20AB86B80();
  uint64_t v80 = 0;
  long long v59 = &v81[v98[13]];
  long long v60 = v96;
  *((_OWORD *)v59 + 10) = v95;
  *((_OWORD *)v59 + 11) = v60;
  *((void *)v59 + 24) = v97;
  long long v61 = v92;
  *((_OWORD *)v59 + 6) = v91;
  *((_OWORD *)v59 + 7) = v61;
  long long v62 = v94;
  *((_OWORD *)v59 + 8) = v93;
  *((_OWORD *)v59 + 9) = v62;
  long long v63 = v88;
  *((_OWORD *)v59 + 2) = v87;
  *((_OWORD *)v59 + 3) = v63;
  long long v64 = v90;
  *((_OWORD *)v59 + 4) = v89;
  *((_OWORD *)v59 + 5) = v64;
  long long v65 = v86;
  *(_OWORD *)long long v59 = v85;
  *((_OWORD *)v59 + 1) = v65;
  char v82 = 10;
  sub_20A987060();
  uint64_t v66 = v80;
  sub_20AB86B10();
  uint64_t v80 = v66;
  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v73, v78);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    int v18 = 0;
    LODWORD(v78) = 1;
    int v19 = 1;
  }
  else
  {
    *(_OWORD *)&v81[v98[14]] = v83;
    char v82 = 11;
    sub_20A9872B0();
    uint64_t v67 = v80;
    sub_20AB86B80();
    uint64_t v80 = v67;
    if (!v67)
    {
      *(_DWORD *)&v81[v98[15]] = v83;
      char v82 = 12;
      sub_20A9E517C();
      uint64_t v68 = v80;
      sub_20AB86B80();
      uint64_t v80 = v68;
      if (!v68)
      {
        v81[v98[16]] = v83;
        char v82 = 13;
        sub_20A98757C();
        uint64_t v69 = v80;
        sub_20AB86B10();
        uint64_t v80 = v69;
        if (!v69)
        {
          (*(void (**)(char *, uint64_t))(v15 + 8))(v73, v78);
          uint64_t v70 = (uint64_t)v81;
          v81[v98[17]] = v83;
          sub_20A9E7D28(v70, v72);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
          return sub_20A9E7D8C(v70);
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v73, v78);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    LODWORD(v78) = 1;
    int v19 = 1;
    int v18 = 1;
  }
  uint64_t v16 = v81;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v81, v74);
  char v20 = v98;
  (*(void (**)(char *, uint64_t))(v75 + 8))(&v16[v98[5]], v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A98937C(*(void *)&v16[v20[8]], *(void *)&v16[v20[8] + 8], *(void *)&v16[v20[8] + 16]);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v78 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
LABEL_10:
    if (!v18) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_6:
  char v21 = &v16[v20[13]];
  long long v22 = *((_OWORD *)v21 + 11);
  long long v95 = *((_OWORD *)v21 + 10);
  long long v96 = v22;
  uint64_t v97 = *((void *)v21 + 24);
  long long v23 = *((_OWORD *)v21 + 7);
  long long v91 = *((_OWORD *)v21 + 6);
  long long v92 = v23;
  long long v24 = *((_OWORD *)v21 + 9);
  long long v93 = *((_OWORD *)v21 + 8);
  long long v94 = v24;
  long long v25 = *((_OWORD *)v21 + 3);
  long long v87 = *((_OWORD *)v21 + 2);
  long long v26 = *((_OWORD *)v21 + 4);
  long long v90 = *((_OWORD *)v21 + 5);
  long long v88 = v25;
  long long v89 = v26;
  long long v27 = *(_OWORD *)v21;
  long long v86 = *((_OWORD *)v21 + 1);
  long long v85 = v27;
  uint64_t result = sub_20A9C74B0((uint64_t)&v85);
  if ((v18 & 1) == 0) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

void sub_20A9E7CC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9E6E14();
    unint64_t v7 = a3(a1, &type metadata for AudioEngageEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9E7D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9E7D8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9E7DE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AudioEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9E7E00(void *a1)
{
  return AudioEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9E7E18@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653340, MEMORY[0x263F24D18], (uint64_t)qword_2676545B0, a1);
}

uint64_t sub_20A9E7E50@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653348, MEMORY[0x263F24DD8], (uint64_t)qword_2676545C8, a1);
}

uint64_t sub_20A9E7E88@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653350, MEMORY[0x263F24DE8], (uint64_t)qword_2676545E0, a1);
}

uint64_t sub_20A9E7EC0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x263F24D30];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v13, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v13, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v4, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v13, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v27, v4, v28);
  uint64_t v29 = a2 + a1[16];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v29, v4, v30);
  uint64_t v31 = a2 + a1[17];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104);

  return v33(v31, v13, v32);
}

uint64_t *initializeBufferWithCopyOfBuffer for AudioEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v60 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v60 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    char v34 = (char *)a2 + v32;
    sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    char v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    long long v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    long long v45 = (char *)a1 + v44;
    long long v46 = (char *)a2 + v44;
    sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    char v49 = (char *)a1 + v48;
    char v50 = (char *)a2 + v48;
    sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    uint64_t v52 = a3[16];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = a3[17];
    __int16 v57 = (char *)a1 + v56;
    long long v58 = (char *)a2 + v56;
    sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  uint64_t v27 = a1 + a2[16];
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  uint64_t v29 = a1 + a2[17];
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);

  return v31(v29, v30);
}

uint64_t initializeWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  uint64_t v51 = a3[16];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 40))(v52, v53, v54);
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9EADDC);
}

uint64_t sub_20A9EADDC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_28:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_27:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_28;
  }
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a2)
  {
    uint64_t v8 = v23;
    uint64_t v12 = *(void *)(v23 - 8);
    uint64_t v13 = a3[15];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a2)
  {
    uint64_t v8 = v24;
    uint64_t v12 = *(void *)(v24 - 8);
    uint64_t v13 = a3[16];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a3[17];

  return v27(v29, a2, v28);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9EB520);
}

uint64_t sub_20A9EB520(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_28:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_27:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_28;
  }
  sub_20A9E53CC(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
  if (*(_DWORD *)(*(void *)(v25 - 8) + 84) == a3)
  {
    uint64_t v10 = v25;
    uint64_t v14 = *(void *)(v25 - 8);
    uint64_t v15 = a4[15];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
  if (*(_DWORD *)(*(void *)(v26 - 8) + 84) == a3)
  {
    uint64_t v10 = v26;
    uint64_t v14 = *(void *)(v26 - 8);
    uint64_t v15 = a4[16];
    goto LABEL_27;
  }
  sub_20A9E53CC(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v30 = v28;
  uint64_t v31 = a1 + a4[17];

  return v29(v31, a2, a2, v30);
}

void sub_20A9EBC5C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9E53CC(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20A9E53CC(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
        if (v3 <= 0x3F)
        {
          sub_20A9E53CC(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
          if (v4 <= 0x3F)
          {
            sub_20A9E53CC(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
            if (v5 <= 0x3F)
            {
              sub_20A9E53CC(319, &qword_267653968, (void (*)(void))sub_20A986970, (void (*)(void))sub_20A9869C4);
              if (v6 <= 0x3F)
              {
                sub_20A9E53CC(319, &qword_267653980, (void (*)(void))sub_20A986E10, (void (*)(void))sub_20A986E64);
                if (v7 <= 0x3F)
                {
                  sub_20A9E53CC(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9E53CC(319, &qword_26AC4E0C0, (void (*)(void))sub_20A9C4CD4, (void (*)(void))sub_20A9C4D28);
                    if (v9 <= 0x3F)
                    {
                      sub_20A9E53CC(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                      if (v10 <= 0x3F)
                      {
                        sub_20A9E53CC(319, &qword_267653998, (void (*)(void))sub_20A9872B0, (void (*)(void))sub_20A987304);
                        if (v11 <= 0x3F)
                        {
                          sub_20A9E53CC(319, &qword_2676545F8, (void (*)(void))sub_20A9E517C, (void (*)(void))sub_20A9E51D0);
                          if (v12 <= 0x3F)
                          {
                            sub_20A9E53CC(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                            if (v13 <= 0x3F) {
                              swift_initStructMetadata();
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for AudioEngageEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = *((void *)v19 + 3);
    *((void *)v18 + 2) = *((void *)v19 + 2);
    *((void *)v18 + 3) = v21;
    *((_WORD *)v18 + 16) = *((_WORD *)v19 + 16);
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)((char *)a2 + v22 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25)
    {
      *uint64_t v23 = *v24;
      *((void *)v23 + 1) = *((void *)v24 + 1);
      *((void *)v23 + 2) = v25;
      *((void *)v23 + 3) = *((void *)v24 + 3);
      uint64_t v26 = *((void *)v24 + 5);
      *((void *)v23 + 4) = *((void *)v24 + 4);
      *((void *)v23 + 5) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v28 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v28;
      *((_OWORD *)v23 + 2) = *((_OWORD *)v24 + 2);
    }
    uint64_t v29 = a3[9];
    uint64_t v30 = a3[10];
    uint64_t v31 = (char *)a1 + v29;
    uint64_t v32 = (char *)a2 + v29;
    *uint64_t v31 = *v32;
    uint64_t v33 = *((void *)v32 + 2);
    *((void *)v31 + 1) = *((void *)v32 + 1);
    *((void *)v31 + 2) = v33;
    uint64_t v34 = (char *)a1 + v30;
    uint64_t v35 = (char *)a2 + v30;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = a3[11];
    uint64_t v37 = a3[12];
    uint64_t v38 = (char *)a1 + v36;
    uint64_t v39 = (char *)a2 + v36;
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    *((_DWORD *)v38 + 5) = *((_DWORD *)v39 + 5);
    uint64_t v40 = *((void *)v39 + 4);
    *((void *)v38 + 3) = *((void *)v39 + 3);
    *((void *)v38 + 4) = v40;
    v38[40] = v39[40];
    v38[41] = v39[41];
    uint64_t v41 = (char *)a1 + v37;
    uint64_t v42 = (char *)a2 + v37;
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    v41[16] = v42[16];
    v41[17] = v42[17];
    uint64_t v44 = a3[13];
    uint64_t v45 = a3[14];
    uint64_t v46 = (char *)a1 + v44;
    uint64_t v47 = (char *)a2 + v44;
    long long v48 = *((_OWORD *)v47 + 1);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v48;
    long long v49 = *((_OWORD *)v47 + 3);
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 3) = v49;
    *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
    *((void *)v46 + 10) = *((void *)v47 + 10);
    *(_OWORD *)(v46 + 88) = *(_OWORD *)(v47 + 88);
    *(_OWORD *)(v46 + 104) = *(_OWORD *)(v47 + 104);
    *((_DWORD *)v46 + 30) = *((_DWORD *)v47 + 30);
    *((_OWORD *)v46 + 8) = *((_OWORD *)v47 + 8);
    v46[144] = v47[144];
    *(void *)(v46 + 148) = *(void *)(v47 + 148);
    long long v50 = *((_OWORD *)v47 + 11);
    *((_OWORD *)v46 + 10) = *((_OWORD *)v47 + 10);
    *((_OWORD *)v46 + 11) = v50;
    *((void *)v46 + 24) = *((void *)v47 + 24);
    uint64_t v51 = (void *)((char *)a1 + v45);
    uint64_t v52 = (void *)((char *)a2 + v45);
    uint64_t v53 = v52[1];
    *uint64_t v51 = *v52;
    v51[1] = v53;
    uint64_t v54 = a3[16];
    *(_DWORD *)((char *)a1 + a3[15]) = *(_DWORD *)((char *)a2 + a3[15]);
    *((unsigned char *)a1 + v54) = *((unsigned char *)a2 + v54);
    *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 32) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v19;
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(a2 + v21 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24)
  {
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    *(void *)(v22 + 16) = v24;
    *(void *)(v22 + 24) = *(void *)(v23 + 24);
    uint64_t v25 = *(void *)(v23 + 40);
    *(void *)(v22 + 32) = *(void *)(v23 + 32);
    *(void *)(v22 + 40) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  uint64_t v31 = *(void *)(v30 + 16);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = v31;
  uint64_t v32 = a1 + v28;
  uint64_t v33 = a2 + v28;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(unsigned char *)(v32 + 4) = *(unsigned char *)(v33 + 4);
  uint64_t v34 = a3[11];
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(v37 + 16);
  *(_DWORD *)(v36 + 20) = *(_DWORD *)(v37 + 20);
  uint64_t v38 = *(void *)(v37 + 32);
  *(void *)(v36 + 24) = *(void *)(v37 + 24);
  *(void *)(v36 + 32) = v38;
  *(unsigned char *)(v36 + 40) = *(unsigned char *)(v37 + 40);
  *(unsigned char *)(v36 + 41) = *(unsigned char *)(v37 + 41);
  uint64_t v39 = a1 + v35;
  uint64_t v40 = a2 + v35;
  uint64_t v41 = *(void *)(v40 + 8);
  *(void *)uint64_t v39 = *(void *)v40;
  *(void *)(v39 + 8) = v41;
  *(unsigned char *)(v39 + 16) = *(unsigned char *)(v40 + 16);
  *(unsigned char *)(v39 + 17) = *(unsigned char *)(v40 + 17);
  uint64_t v42 = a3[13];
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  long long v46 = *(_OWORD *)(v45 + 16);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  long long v47 = *(_OWORD *)(v45 + 48);
  *(_OWORD *)(v44 + 32) = *(_OWORD *)(v45 + 32);
  *(_OWORD *)(v44 + 48) = v47;
  *(_OWORD *)(v44 + 64) = *(_OWORD *)(v45 + 64);
  *(void *)(v44 + 80) = *(void *)(v45 + 80);
  *(_OWORD *)(v44 + 88) = *(_OWORD *)(v45 + 88);
  *(_OWORD *)(v44 + 104) = *(_OWORD *)(v45 + 104);
  *(_DWORD *)(v44 + 120) = *(_DWORD *)(v45 + 120);
  *(_OWORD *)(v44 + 128) = *(_OWORD *)(v45 + 128);
  *(unsigned char *)(v44 + 144) = *(unsigned char *)(v45 + 144);
  *(void *)(v44 + 148) = *(void *)(v45 + 148);
  long long v48 = *(_OWORD *)(v45 + 176);
  *(_OWORD *)(v44 + 160) = *(_OWORD *)(v45 + 160);
  *(_OWORD *)(v44 + 176) = v48;
  *(void *)(v44 + 192) = *(void *)(v45 + 192);
  long long v49 = (void *)(a1 + v43);
  long long v50 = (void *)(a2 + v43);
  uint64_t v51 = v50[1];
  void *v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v52) = *(unsigned char *)(a2 + v52);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 16) = *(void *)(v17 + 16);
  *(void *)(v16 + 24) = *(void *)(v17 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 32) = *(unsigned char *)(v17 + 32);
  *(unsigned char *)(v16 + 33) = *(unsigned char *)(v17 + 33);
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (long long *)(a2 + v18);
  uint64_t v21 = *(void *)(a1 + v18 + 16);
  uint64_t v22 = *(void *)(a2 + v18 + 16);
  if (v21)
  {
    if (v22)
    {
      *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
      *(void *)(v19 + 8) = *((void *)v20 + 1);
      *(void *)(v19 + 16) = *((void *)v20 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
      *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
      *(void *)(v19 + 32) = *((void *)v20 + 4);
      *(void *)(v19 + 40) = *((void *)v20 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v19);
      long long v24 = v20[1];
      long long v23 = v20[2];
      *(_OWORD *)uint64_t v19 = *v20;
      *(_OWORD *)(v19 + 16) = v24;
      *(_OWORD *)(v19 + 32) = v23;
    }
  }
  else if (v22)
  {
    *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
    *(void *)(v19 + 8) = *((void *)v20 + 1);
    *(void *)(v19 + 16) = *((void *)v20 + 2);
    *(_DWORD *)(v19 + 24) = *((_DWORD *)v20 + 6);
    *(_DWORD *)(v19 + 28) = *((_DWORD *)v20 + 7);
    *(void *)(v19 + 32) = *((void *)v20 + 4);
    *(void *)(v19 + 40) = *((void *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v20;
    long long v26 = v20[2];
    *(_OWORD *)(v19 + 16) = v20[1];
    *(_OWORD *)(v19 + 32) = v26;
    *(_OWORD *)uint64_t v19 = v25;
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  *(void *)(v28 + 8) = *(void *)(v29 + 8);
  *(void *)(v28 + 16) = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  *(void *)uint64_t v34 = *(void *)(a2 + v33);
  *(void *)(v34 + 8) = *(void *)(a2 + v33 + 8);
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(a2 + v33 + 16);
  *(_DWORD *)(v34 + 20) = *(_DWORD *)(a2 + v33 + 20);
  *(void *)(v34 + 24) = *(void *)(a2 + v33 + 24);
  *(void *)(v34 + 32) = *(void *)(a2 + v33 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v34 + 40) = *(unsigned char *)(v35 + 40);
  *(unsigned char *)(v34 + 41) = *(unsigned char *)(v35 + 41);
  uint64_t v36 = a3[12];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)uint64_t v37 = *(void *)(a2 + v36);
  *(void *)(v37 + 8) = *(void *)(a2 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v37 + 16) = *(unsigned char *)(v38 + 16);
  *(unsigned char *)(v37 + 17) = *(unsigned char *)(v38 + 17);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(void *)uint64_t v40 = *(void *)(a2 + v39);
  *(void *)(v40 + 8) = *(void *)(a2 + v39 + 8);
  *(void *)(v40 + 16) = *(void *)(a2 + v39 + 16);
  *(void *)(v40 + 24) = *(void *)(a2 + v39 + 24);
  *(void *)(v40 + 32) = *(void *)(a2 + v39 + 32);
  *(void *)(v40 + 40) = *(void *)(a2 + v39 + 40);
  *(void *)(v40 + 48) = *(void *)(a2 + v39 + 48);
  *(void *)(v40 + 56) = *(void *)(a2 + v39 + 56);
  *(void *)(v40 + 64) = *(void *)(a2 + v39 + 64);
  *(void *)(v40 + 72) = *(void *)(a2 + v39 + 72);
  *(void *)(v40 + 80) = *(void *)(a2 + v39 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v40 + 88) = *(void *)(v41 + 88);
  *(void *)(v40 + 96) = *(void *)(v41 + 96);
  *(void *)(v40 + 104) = *(void *)(v41 + 104);
  *(void *)(v40 + 112) = *(void *)(v41 + 112);
  *(_DWORD *)(v40 + 120) = *(_DWORD *)(v41 + 120);
  *(void *)(v40 + 128) = *(void *)(v41 + 128);
  *(void *)(v40 + 136) = *(void *)(v41 + 136);
  *(unsigned char *)(v40 + 144) = *(unsigned char *)(v41 + 144);
  *(_DWORD *)(v40 + 148) = *(_DWORD *)(v41 + 148);
  *(_DWORD *)(v40 + 152) = *(_DWORD *)(v41 + 152);
  *(void *)(v40 + 160) = *(void *)(v41 + 160);
  *(void *)(v40 + 168) = *(void *)(v41 + 168);
  *(void *)(v40 + 176) = *(void *)(v41 + 176);
  *(void *)(v40 + 184) = *(void *)(v41 + 184);
  *(void *)(v40 + 192) = *(void *)(v41 + 192);
  uint64_t v42 = a3[14];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t initializeWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(_WORD *)(v17 + 32) = *(_WORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (_OWORD *)(a1 + v20);
  long long v23 = (long long *)(a2 + v20);
  long long v24 = v23[2];
  long long v25 = *v23;
  v22[1] = v23[1];
  _OWORD v22[2] = v24;
  *uint64_t v22 = v25;
  uint64_t v26 = a1 + v21;
  uint64_t v27 = (long long *)(a2 + v21);
  long long v28 = *v27;
  *(void *)(v26 + 16) = *((void *)v27 + 2);
  *(_OWORD *)uint64_t v26 = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(unsigned char *)(v31 + 4) = *(unsigned char *)(v32 + 4);
  uint64_t v33 = (_OWORD *)(a1 + v30);
  uint64_t v34 = (_OWORD *)(a2 + v30);
  long long v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  *(_OWORD *)((char *)v33 + 26) = *(_OWORD *)((char *)v34 + 26);
  uint64_t v36 = a3[12];
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(_WORD *)(v38 + 16) = *(_WORD *)(v39 + 16);
  uint64_t v40 = a1 + v37;
  uint64_t v41 = a2 + v37;
  long long v42 = *(_OWORD *)(v41 + 48);
  *(_OWORD *)(v40 + 32) = *(_OWORD *)(v41 + 32);
  *(_OWORD *)(v40 + 48) = v42;
  long long v43 = *(_OWORD *)(v41 + 16);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v43;
  long long v44 = *(_OWORD *)(v41 + 112);
  *(_OWORD *)(v40 + 96) = *(_OWORD *)(v41 + 96);
  *(_OWORD *)(v40 + 112) = v44;
  long long v45 = *(_OWORD *)(v41 + 80);
  *(_OWORD *)(v40 + 64) = *(_OWORD *)(v41 + 64);
  *(_OWORD *)(v40 + 80) = v45;
  *(void *)(v40 + 192) = *(void *)(v41 + 192);
  long long v46 = *(_OWORD *)(v41 + 176);
  *(_OWORD *)(v40 + 160) = *(_OWORD *)(v41 + 160);
  *(_OWORD *)(v40 + 176) = v46;
  long long v47 = *(_OWORD *)(v41 + 144);
  *(_OWORD *)(v40 + 128) = *(_OWORD *)(v41 + 128);
  *(_OWORD *)(v40 + 144) = v47;
  uint64_t v48 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_DWORD *)(a1 + v48) = *(_DWORD *)(a2 + v48);
  uint64_t v49 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v49) = *(unsigned char *)(a2 + v49);
  return a1;
}

uint64_t assignWithTake for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(v18 + 32);
  *(unsigned char *)(v17 + 33) = *(unsigned char *)(v18 + 33);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  if (!*(void *)(a1 + v21 + 16)) {
    goto LABEL_5;
  }
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
    sub_20A98D5B8(v22);
LABEL_5:
    long long v26 = *(_OWORD *)(v23 + 16);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 16) = v26;
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = v24;
  swift_bridgeObjectRelease();
  *(void *)(v22 + 24) = *(void *)(v23 + 24);
  uint64_t v25 = *(void *)(v23 + 40);
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  *(void *)(v22 + 40) = v25;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  uint64_t v30 = *(void *)(v29 + 16);
  *(void *)(v28 + 8) = v31;
  *(void *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(unsigned char *)(v34 + 4) = *(unsigned char *)(v35 + 4);
  uint64_t v36 = a1 + v33;
  uint64_t v37 = a2 + v33;
  *(_OWORD *)uint64_t v36 = *(_OWORD *)(a2 + v33);
  *(unsigned char *)(v36 + 16) = *(unsigned char *)(a2 + v33 + 16);
  *(_DWORD *)(v36 + 20) = *(_DWORD *)(a2 + v33 + 20);
  uint64_t v38 = *(void *)(a2 + v33 + 24);
  uint64_t v39 = *(void *)(a2 + v33 + 32);
  *(void *)(v36 + 24) = v38;
  *(void *)(v36 + 32) = v39;
  swift_bridgeObjectRelease();
  *(_WORD *)(v36 + 40) = *(_WORD *)(v37 + 40);
  uint64_t v40 = a3[12];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)(a2 + v40 + 8);
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(void *)(v41 + 8) = v43;
  swift_bridgeObjectRelease();
  *(_WORD *)(v41 + 16) = *(_WORD *)(v42 + 16);
  uint64_t v44 = a3[13];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  long long v47 = *(_OWORD *)(a2 + v44 + 16);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)(a2 + v44);
  *(_OWORD *)(v45 + 16) = v47;
  long long v48 = *(_OWORD *)(a2 + v44 + 48);
  *(_OWORD *)(v45 + 32) = *(_OWORD *)(a2 + v44 + 32);
  *(_OWORD *)(v45 + 48) = v48;
  *(_OWORD *)(v45 + 64) = *(_OWORD *)(a2 + v44 + 64);
  *(void *)(v45 + 80) = *(void *)(a2 + v44 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v45 + 88) = *(_OWORD *)(v46 + 88);
  *(_OWORD *)(v45 + 104) = *(_OWORD *)(v46 + 104);
  *(_DWORD *)(v45 + 120) = *(_DWORD *)(v46 + 120);
  *(_OWORD *)(v45 + 128) = *(_OWORD *)(v46 + 128);
  *(unsigned char *)(v45 + 144) = *(unsigned char *)(v46 + 144);
  *(void *)(v45 + 148) = *(void *)(v46 + 148);
  long long v49 = *(_OWORD *)(v46 + 176);
  *(_OWORD *)(v45 + 160) = *(_OWORD *)(v46 + 160);
  *(_OWORD *)(v45 + 176) = v49;
  *(void *)(v45 + 192) = *(void *)(v46 + 192);
  uint64_t v50 = a3[14];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *uint64_t v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  uint64_t v55 = a3[16];
  *(_DWORD *)(a1 + a3[15]) = *(_DWORD *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9ED3EC);
}

uint64_t sub_20A9ED3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9ED518);
}

uint64_t sub_20A9ED518(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9ED62C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioEngageEvent.Model.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioEngageEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9ED8C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngageEvent.Model.CodingKeys()
{
  return &type metadata for AudioEngageEvent.Model.CodingKeys;
}

unint64_t sub_20A9ED900()
{
  unint64_t result = qword_267654648;
  if (!qword_267654648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654648);
  }
  return result;
}

unint64_t sub_20A9ED958()
{
  unint64_t result = qword_267654650;
  if (!qword_267654650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654650);
  }
  return result;
}

unint64_t sub_20A9ED9B0()
{
  unint64_t result = qword_267654658;
  if (!qword_267654658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654658);
  }
  return result;
}

uint64_t sub_20A9EDA04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461446B63617274 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA72E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA77E0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xEC00000061746144 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000020ABA7990 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_20A9EDFF4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654660, MEMORY[0x263F24D10]);
}

uint64_t static NonNewsArticleViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653358, MEMORY[0x263F24D18], (uint64_t)qword_267654660, a1);
}

uint64_t static NonNewsArticleViewEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9EE05C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654678, MEMORY[0x263F24DC8]);
}

uint64_t static NonNewsArticleViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653360, MEMORY[0x263F24DD8], (uint64_t)qword_267654678, a1);
}

uint64_t sub_20A9EE0BC()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654690);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654690);
  return sub_20AB85D30();
}

uint64_t static NonNewsArticleViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653368, MEMORY[0x263F24DE8], (uint64_t)qword_267654690, a1);
}

uint64_t NonNewsArticleViewEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NonNewsArticleViewEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NonNewsArticleViewEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9EF6FC(type metadata accessor for NonNewsArticleViewEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for NonNewsArticleViewEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676546C8);
}

uint64_t NonNewsArticleViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 24);
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 24);
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.nonNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 28);
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9EE544()
{
  unint64_t result = qword_26AC4F3B8;
  if (!qword_26AC4F3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F3B8);
  }
  return result;
}

unint64_t sub_20A9EE598()
{
  unint64_t result = qword_26AC4F3B0;
  if (!qword_26AC4F3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F3B0);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 28);
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 32);
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9EE794()
{
  unint64_t result = qword_26AC4FEB8;
  if (!qword_26AC4FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEB8);
  }
  return result;
}

unint64_t sub_20A9EE7E8()
{
  unint64_t result = qword_26AC4FEB0;
  if (!qword_26AC4FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEB0);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 32);
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 36);
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 36);
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 40);
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 40);
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 44);
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 44);
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.viewEndData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 48);
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsArticleViewEvent.viewEndData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 48);
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.viewEndData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 52);
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9EF084(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NonNewsArticleViewEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent(0) + 52);
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsArticleViewEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsArticleViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NonNewsArticleViewEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v10, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v10, v23);
}

uint64_t NonNewsArticleViewEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NonNewsArticleViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9EF6FC(type metadata accessor for NonNewsArticleViewEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9EF6FC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for NonNewsArticleViewEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676546D8);
}

uint64_t NonNewsArticleViewEvent.Model.nonNewsArticleData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 28));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 32));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 36);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t NonNewsArticleViewEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsArticleViewEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsArticleViewEvent.Model.viewEndData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

__n128 NonNewsArticleViewEvent.Model.init(eventData:timedData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:viewData:viewEndData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, int *a4@<X3>, int *a5@<X4>, long long *a6@<X5>, long long *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11)
{
  long long v31 = a3[1];
  long long v32 = *a3;
  uint64_t v15 = *((void *)a3 + 4);
  uint64_t v14 = *((void *)a3 + 5);
  int v16 = *a4;
  char v17 = *((unsigned char *)a4 + 4);
  int v18 = *a5;
  char v19 = *((unsigned char *)a5 + 4);
  long long v34 = *a6;
  uint64_t v33 = *((void *)a6 + 2);
  __n128 v37 = (__n128)a7[1];
  long long v38 = *a7;
  uint64_t v35 = *((void *)a7 + 5);
  uint64_t v36 = *((void *)a7 + 4);
  uint64_t v40 = a8[1];
  uint64_t v41 = *a8;
  __int16 v39 = *((_WORD *)a8 + 8);
  char v42 = *a10;
  char v43 = *a11;
  uint64_t v20 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for NonNewsArticleViewEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  uint64_t v23 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  uint64_t v24 = a9 + v21[6];
  *(_OWORD *)uint64_t v24 = v32;
  *(_OWORD *)(v24 + 16) = v31;
  *(void *)(v24 + 32) = v15;
  *(void *)(v24 + 40) = v14;
  uint64_t v25 = a9 + v21[7];
  *(_DWORD *)uint64_t v25 = v16;
  *(unsigned char *)(v25 + 4) = v17;
  uint64_t v26 = a9 + v21[8];
  *(_DWORD *)uint64_t v26 = v18;
  *(unsigned char *)(v26 + 4) = v19;
  uint64_t v27 = a9 + v21[9];
  *(_OWORD *)uint64_t v27 = v34;
  *(void *)(v27 + 16) = v33;
  uint64_t v28 = a9 + v21[10];
  __n128 result = v37;
  *(_OWORD *)uint64_t v28 = v38;
  *(__n128 *)(v28 + 16) = v37;
  *(void *)(v28 + 32) = v36;
  *(void *)(v28 + 40) = v35;
  uint64_t v30 = a9 + v21[11];
  *(void *)uint64_t v30 = v41;
  *(void *)(v30 + 8) = v40;
  *(_WORD *)(v30 + 16) = v39;
  *(unsigned char *)(a9 + v21[12]) = v42;
  *(unsigned char *)(a9 + v21[13]) = v43;
  return result;
}

uint64_t sub_20A9EFBE8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0xD000000000000012;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      unsigned int v3 = 1684366694;
      goto LABEL_9;
    case 6:
      uint64_t result = 0x74614470756F7267;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_9:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0x44646E4577656976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9EFD20()
{
  return sub_20A9EFBE8(*v0);
}

uint64_t sub_20A9EFD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9F4DB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9EFD50(uint64_t a1)
{
  unint64_t v2 = sub_20A9F0248();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9EFD8C(uint64_t a1)
{
  unint64_t v2 = sub_20A9F0248();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsArticleViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9F0AD4(0, &qword_2676546B0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9F0248();
  sub_20AB86DC0();
  LOBYTE(v30) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NonNewsArticleViewEvent.Model(0);
    LOBYTE(v30) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    long long v13 = v11[1];
    uint64_t v15 = *((void *)v11 + 4);
    uint64_t v14 = *((void *)v11 + 5);
    long long v30 = v12;
    long long v31 = v13;
    *(void *)&long long v32 = v15;
    *((void *)&v32 + 1) = v14;
    char v29 = 2;
    sub_20A9DBEEC();
    sub_20AB86C50();
    int v16 = (int *)(v3 + v10[7]);
    int v17 = *v16;
    LOBYTE(v16) = *((unsigned char *)v16 + 4);
    LODWORD(v30) = v17;
    BYTE4(v30) = (_BYTE)v16;
    char v29 = 3;
    sub_20A9EE598();
    sub_20AB86BE0();
    int v18 = (int *)(v3 + v10[8]);
    int v19 = *v18;
    LOBYTE(v18) = *((unsigned char *)v18 + 4);
    LODWORD(v30) = v19;
    BYTE4(v30) = (_BYTE)v18;
    char v29 = 4;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v20 = (long long *)(v3 + v10[9]);
    uint64_t v21 = *((void *)v20 + 2);
    long long v30 = *v20;
    *(void *)&long long v31 = v21;
    char v29 = 5;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v22 = (long long *)(v3 + v10[10]);
    long long v23 = v22[1];
    long long v30 = *v22;
    long long v31 = v23;
    long long v32 = v22[2];
    char v29 = 6;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (uint64_t *)(v3 + v10[11]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    LOWORD(v24) = *((_WORD *)v24 + 8);
    *(void *)&long long v30 = v25;
    *((void *)&v30 + 1) = v26;
    LOWORD(v31) = (_WORD)v24;
    char v29 = 7;
    sub_20A986C14();
    sub_20AB86C50();
    LOBYTE(v30) = *(unsigned char *)(v3 + v10[12]);
    char v29 = 8;
    sub_20A97CB38();
    sub_20AB86C50();
    LOBYTE(v30) = *(unsigned char *)(v3 + v10[13]);
    char v29 = 9;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9F0248()
{
  unint64_t result = qword_2676546B8;
  if (!qword_2676546B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676546B8);
  }
  return result;
}

uint64_t NonNewsArticleViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_20AB85FE0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20AB85FC0();
  uint64_t v43 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9F0AD4(0, &qword_2676546C0, MEMORY[0x263F8E040]);
  uint64_t v39 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v35 - v12;
  uint64_t v46 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = a1;
  uint64_t v45 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9F0248();
  long long v38 = v13;
  sub_20AB86DA0();
  uint64_t v40 = v7;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  uint64_t v36 = v11;
  LOBYTE(v47) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v15 = v7;
  int v16 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v45, v9, v15);
  LOBYTE(v47) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  uint64_t v17 = v42;
  sub_20AB86B80();
  int v18 = (int *)v46;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v16[*(int *)(v46 + 20)], v6, v17);
  char v50 = 2;
  sub_20A9DBE94();
  sub_20AB86B80();
  long long v19 = v48;
  long long v20 = v49;
  uint64_t v21 = &v16[v18[6]];
  *(_OWORD *)uint64_t v21 = v47;
  *((_OWORD *)v21 + 1) = v19;
  *((_OWORD *)v21 + 2) = v20;
  char v50 = 3;
  sub_20A9EE544();
  sub_20AB86B10();
  char v22 = BYTE4(v47);
  long long v23 = &v16[v18[7]];
  *(_DWORD *)long long v23 = v47;
  v23[4] = v22;
  char v50 = 4;
  sub_20A9EE794();
  sub_20AB86B10();
  char v24 = BYTE4(v47);
  uint64_t v25 = &v16[v18[8]];
  *(_DWORD *)uint64_t v25 = v47;
  v25[4] = v24;
  char v50 = 5;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v26 = v48;
  uint64_t v27 = &v16[v18[9]];
  *(_OWORD *)uint64_t v27 = v47;
  *((void *)v27 + 2) = v26;
  char v50 = 6;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v28 = &v16[v18[10]];
  long long v29 = v48;
  *(_OWORD *)uint64_t v28 = v47;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v49;
  char v50 = 7;
  sub_20A986BC0();
  sub_20AB86B80();
  uint64_t v30 = *((void *)&v47 + 1);
  __int16 v31 = v48;
  long long v32 = &v16[v18[11]];
  *(void *)long long v32 = v47;
  *((void *)v32 + 1) = v30;
  *((_WORD *)v32 + 8) = v31;
  char v50 = 8;
  sub_20A97CAE4();
  sub_20AB86B80();
  v16[v18[12]] = v47;
  char v50 = 9;
  sub_20A98757C();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
  uint64_t v33 = (uint64_t)v45;
  v45[*(int *)(v46 + 52)] = v47;
  sub_20A9F0B38(v33, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return sub_20A9F0B9C(v33);
}

void sub_20A9F0AD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9F0248();
    unint64_t v7 = a3(a1, &type metadata for NonNewsArticleViewEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9F0B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9F0B9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonNewsArticleViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9F0BF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsArticleViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9F0C10(void *a1)
{
  return NonNewsArticleViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9F0C28@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653358, MEMORY[0x263F24D18], (uint64_t)qword_267654660, a1);
}

uint64_t sub_20A9F0C60@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653360, MEMORY[0x263F24DD8], (uint64_t)qword_267654678, a1);
}

uint64_t sub_20A9F0C98@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653368, MEMORY[0x263F24DE8], (uint64_t)qword_267654690, a1);
}

uint64_t sub_20A9F0CD0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v11, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v11, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsArticleViewEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    long long v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    long long v38 = (char *)a2 + v36;
    sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9F2E1C);
}

uint64_t sub_20A9F2E1C(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9F3350);
}

uint64_t sub_20A9F3350(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20A9EF084(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20A9EF084(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20A9EF084(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20A9F387C()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9EF084(319, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
      if (v2 <= 0x3F)
      {
        sub_20A9EF084(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
        if (v3 <= 0x3F)
        {
          sub_20A9EF084(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
          if (v4 <= 0x3F)
          {
            sub_20A9EF084(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
            if (v5 <= 0x3F)
            {
              sub_20A9EF084(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
              if (v6 <= 0x3F)
              {
                sub_20A9EF084(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                if (v7 <= 0x3F)
                {
                  sub_20A9EF084(319, &qword_26AC4E5C8, (void (*)(void))sub_20A97CAE4, (void (*)(void))sub_20A97CB38);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9EF084(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NonNewsArticleViewEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    uint64_t v18 = v15[5];
    v14[4] = v15[4];
    v14[5] = v18;
    uint64_t v19 = (char *)a1 + v13;
    uint64_t v20 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    uint64_t v25 = (char *)a1 + v22;
    uint64_t v26 = (char *)a2 + v22;
    *uint64_t v25 = *v26;
    uint64_t v27 = *((void *)v26 + 2);
    *((void *)v25 + 1) = *((void *)v26 + 1);
    *((void *)v25 + 2) = v27;
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)((char *)a2 + v28 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      *uint64_t v29 = *v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      *((void *)v29 + 2) = v31;
      *((void *)v29 + 3) = *((void *)v30 + 3);
      uint64_t v32 = *((void *)v30 + 5);
      *((void *)v29 + 4) = *((void *)v30 + 4);
      *((void *)v29 + 5) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v34 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v34;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    }
    uint64_t v35 = a3[11];
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v35;
    uint64_t v38 = (char *)a2 + v35;
    *((_WORD *)v37 + 8) = *((_WORD *)v38 + 8);
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
    *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 40) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[3];
  void v13[2] = v14[2];
  v13[3] = v16;
  uint64_t v17 = v14[5];
  v13[4] = v14[4];
  v13[5] = v17;
  uint64_t v18 = a1 + v12;
  uint64_t v19 = a2 + v12;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = *(void *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30)
  {
    *(unsigned char *)uint64_t v28 = *(unsigned char *)v29;
    *(void *)(v28 + 8) = *(void *)(v29 + 8);
    *(void *)(v28 + 16) = v30;
    *(void *)(v28 + 24) = *(void *)(v29 + 24);
    uint64_t v31 = *(void *)(v29 + 40);
    *(void *)(v28 + 32) = *(void *)(v29 + 32);
    *(void *)(v28 + 40) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  uint64_t v37 = *(void *)(v36 + 8);
  *(void *)uint64_t v35 = *(void *)v36;
  *(void *)(v35 + 8) = v37;
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[4] = v13[4];
  v12[5] = v13[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (int *)(a2 + v14);
  int v17 = *v16;
  *(unsigned char *)(v15 + 4) = *((unsigned char *)v16 + 4);
  *(_DWORD *)uint64_t v15 = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (int *)(a2 + v18);
  int v21 = *v20;
  *(unsigned char *)(v19 + 4) = *((unsigned char *)v20 + 4);
  *(_DWORD *)uint64_t v19 = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (long long *)(a2 + v25);
  uint64_t v28 = *(void *)(a1 + v25 + 16);
  uint64_t v29 = *(void *)(a2 + v25 + 16);
  if (v28)
  {
    if (v29)
    {
      *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
      *(void *)(v26 + 8) = *((void *)v27 + 1);
      *(void *)(v26 + 16) = *((void *)v27 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v26 + 24) = *((_DWORD *)v27 + 6);
      *(_DWORD *)(v26 + 28) = *((_DWORD *)v27 + 7);
      *(void *)(v26 + 32) = *((void *)v27 + 4);
      *(void *)(v26 + 40) = *((void *)v27 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v26);
      long long v31 = v27[1];
      long long v30 = v27[2];
      *(_OWORD *)uint64_t v26 = *v27;
      *(_OWORD *)(v26 + 16) = v31;
      *(_OWORD *)(v26 + 32) = v30;
    }
  }
  else if (v29)
  {
    *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
    *(void *)(v26 + 8) = *((void *)v27 + 1);
    *(void *)(v26 + 16) = *((void *)v27 + 2);
    *(_DWORD *)(v26 + 24) = *((_DWORD *)v27 + 6);
    *(_DWORD *)(v26 + 28) = *((_DWORD *)v27 + 7);
    *(void *)(v26 + 32) = *((void *)v27 + 4);
    *(void *)(v26 + 40) = *((void *)v27 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *v27;
    long long v33 = v27[2];
    *(_OWORD *)(v26 + 16) = v27[1];
    *(_OWORD *)(v26 + 32) = v33;
    *(_OWORD *)uint64_t v26 = v32;
  }
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  *(unsigned char *)(v35 + 17) = *(unsigned char *)(v36 + 17);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  void v13[2] = v14[2];
  uint64_t v16 = a1 + v12;
  uint64_t v17 = a2 + v12;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(unsigned char *)(v16 + 4) = *(unsigned char *)(v17 + 4);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)(v22 + 16) = *(void *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (_OWORD *)(a1 + v24);
  uint64_t v27 = (long long *)(a2 + v24);
  long long v28 = *v27;
  long long v29 = v27[2];
  v26[1] = v27[1];
  _OWORD v26[2] = v29;
  *uint64_t v26 = v28;
  uint64_t v30 = a1 + v25;
  uint64_t v31 = a2 + v25;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(_WORD *)(v30 + 16) = *(_WORD *)(v31 + 16);
  uint64_t v32 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  return a1;
}

uint64_t assignWithTake for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(unsigned char *)(v19 + 4) = *(unsigned char *)(v20 + 4);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = v27;
  *(void *)(v24 + 16) = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  if (!*(void *)(a1 + v28 + 16)) {
    goto LABEL_5;
  }
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    sub_20A98D5B8(v29);
LABEL_5:
    long long v33 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(v29 + 16) = v33;
    *(_OWORD *)(v29 + 32) = *(_OWORD *)(v30 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = v31;
  swift_bridgeObjectRelease();
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  uint64_t v32 = *(void *)(v30 + 40);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = v32;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(a2 + v34 + 8);
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  uint64_t v38 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9F485C);
}

uint64_t sub_20A9F485C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsArticleViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9F4988);
}

uint64_t sub_20A9F4988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9F4A9C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NonNewsArticleViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9F4C78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsArticleViewEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsArticleViewEvent.Model.CodingKeys;
}

unint64_t sub_20A9F4CB4()
{
  unint64_t result = qword_2676546E8;
  if (!qword_2676546E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676546E8);
  }
  return result;
}

unint64_t sub_20A9F4D0C()
{
  unint64_t result = qword_2676546F0;
  if (!qword_2676546F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676546F0);
  }
  return result;
}

unint64_t sub_20A9F4D64()
{
  unint64_t result = qword_2676546F8;
  if (!qword_2676546F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676546F8);
  }
  return result;
}

uint64_t sub_20A9F4DB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA79B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x44646E4577656976 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t _s15StocksAnalytics15SessionObserverC21identificationService_15didChangeUserIDy0A4Core014IdentificationF4Type_p_SStF_0()
{
  *(void *)(swift_allocObject() + 16) = v0;
  unint64_t v1 = v0;
  sub_20AB85AC0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext], *(void *)&v1[OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext + 24]);
  sub_20AB85550();
  sub_20AB85B30();
  sub_20A9F5CAC();
  sub_20AB85F60();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20A9F52EC()
{
  sub_20A9F5D00();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unsigned int v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9F54BC();
  sub_20A9BC5DC();
  uint64_t v5 = sub_20AB85A70();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F24D40], v5);
  sub_20A9F5D5C();
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_20A9F54BC()
{
  uint64_t v1 = sub_20AB851C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unsigned int v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext), *(void *)(v0 + OBJC_IVAR____TtC15StocksAnalytics15SessionObserver_userContext + 24));
  uint64_t v5 = sub_20AB85540();
  uint64_t v7 = v6;
  swift_getObjectType();
  char v8 = sub_20AB85510();
  sub_20A9F573C();
  sub_20AB851A0();
  double v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v12 = v10 * 1000.0;
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_ageGroup);
  if (v14)
  {
    uint64_t v15 = v14;
    unsigned int v16 = objc_msgSend(v14, sel_intValue);
  }
  else
  {
    unsigned int v16 = 0;
  }
  id v17 = objc_msgSend(v13, sel_gender);
  if (v17)
  {
    uint64_t v18 = v17;
    unsigned int v19 = objc_msgSend(v17, sel_intValue);
  }
  else
  {
    unsigned int v19 = 0;
  }
  if (v8) {
    char v20 = 1;
  }
  else {
    char v20 = 2;
  }
  uint64_t v21 = sub_20AB85630();
  v23[0] = v5;
  v23[1] = v7;
  char v24 = v20;
  uint64_t v25 = (uint64_t)v12;
  unsigned int v26 = v16;
  int v27 = 1065353216;
  unsigned int v28 = v19;
  int v29 = 1065353216;
  uint64_t v30 = v21;
  uint64_t v31 = v22;
  sub_20A9F5D5C();
  return sub_20AB85910();
}

uint64_t sub_20A9F573C()
{
  uint64_t v0 = sub_20AB851C0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AB85520();
  sub_20AB85170();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_20AB85160();
}

uint64_t _s11UserContextVwxx(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_unknownObjectRelease();
}

uint64_t _s11UserContextVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *_s11UserContextVwca(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t _s11UserContextVwta(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v7;
  return a1;
}

uint64_t _s11UserContextVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11UserContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionObserver.UserContext()
{
  return &type metadata for SessionObserver.UserContext;
}

uint64_t sub_20A9F5C6C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20A9F5CA4()
{
  return sub_20A9F52EC();
}

unint64_t sub_20A9F5CAC()
{
  unint64_t result = qword_26AC4EAF0;
  if (!qword_26AC4EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EAF0);
  }
  return result;
}

void sub_20A9F5D00()
{
  if (!qword_26AC4E518)
  {
    sub_20A9F5D5C();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E518);
    }
  }
}

unint64_t sub_20A9F5D5C()
{
  unint64_t result = qword_26AC51510;
  if (!qword_26AC51510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51510);
  }
  return result;
}

StocksAnalytics::ViewabilityHeight_optional __swiftcall ViewabilityHeight.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t ViewabilityHeight.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465646E61707865;
      break;
    case 2:
      uint64_t result = 0x6C616974726170;
      break;
    case 3:
      uint64_t result = 0x657370616C6C6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9F5EA4(unsigned __int8 *a1, char *a2)
{
  return sub_20AA37000(*a1, *a2);
}

unint64_t sub_20A9F5EB4()
{
  unint64_t result = qword_267654700;
  if (!qword_267654700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654700);
  }
  return result;
}

uint64_t sub_20A9F5F08()
{
  return sub_20AB86D80();
}

uint64_t sub_20A9F5FE4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A9F60A8()
{
  return sub_20AB86D80();
}

StocksAnalytics::ViewabilityHeight_optional sub_20A9F6180(Swift::String *a1)
{
  return ViewabilityHeight.init(rawValue:)(*a1);
}

void sub_20A9F618C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6465646E61707865;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C616974726170;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x657370616C6C6F63;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20A9F6228()
{
  return sub_20AB86750();
}

uint64_t sub_20A9F6288()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for ViewabilityHeight(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9F63A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewabilityHeight()
{
  return &type metadata for ViewabilityHeight;
}

unint64_t sub_20A9F63DC()
{
  unint64_t result = qword_267654708;
  if (!qword_267654708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654708);
  }
  return result;
}

uint64_t static GroupData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void GroupData.groupType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *GroupData.groupType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*GroupData.groupType.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.groupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*GroupData.groupID.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupArticleCount.getter()
{
  return *(unsigned int *)(v0 + 24);
}

uint64_t GroupData.groupArticleCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*GroupData.groupArticleCount.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.groupPosition.getter()
{
  return *(unsigned int *)(v0 + 28);
}

uint64_t GroupData.groupPosition.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 28) = result;
  return result;
}

uint64_t (*GroupData.groupPosition.modify())()
{
  return nullsub_1;
}

uint64_t GroupData.curatedSubType.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupData.curatedSubType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*GroupData.curatedSubType.modify())()
{
  return nullsub_1;
}

unsigned char *GroupData.init(groupType:groupID:groupArticleCount:groupPosition:curatedSubType:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(unsigned char *)a8 = *result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(_DWORD *)(a8 + 24) = a4;
  *(_DWORD *)(a8 + 28) = a5;
  *(void *)(a8 + 32) = a6;
  *(void *)(a8 + 40) = a7;
  return result;
}

unint64_t sub_20A9F65F8()
{
  unint64_t result = 0x70795470756F7267;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x444970756F7267;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x736F5070756F7267;
      break;
    case 4:
      unint64_t result = 0x5364657461727563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9F66C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9F719C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9F66EC(uint64_t a1)
{
  unint64_t v2 = sub_20A9F69BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9F6728(uint64_t a1)
{
  unint64_t v2 = sub_20A9F69BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GroupData.encode(to:)(void *a1)
{
  sub_20A9F6CE4(0, &qword_26AC51968, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  uint64_t v16 = *((void *)v1 + 2);
  uint64_t v17 = v10;
  LODWORD(v10) = *((_DWORD *)v1 + 6);
  int v14 = *((_DWORD *)v1 + 7);
  int v15 = v10;
  uint64_t v11 = *((void *)v1 + 4);
  v13[1] = *((void *)v1 + 5);
  void v13[2] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9F69BC();
  sub_20AB86DC0();
  char v23 = v9;
  char v22 = 0;
  sub_20A9CF294();
  sub_20AB86C50();
  if (!v2)
  {
    char v21 = 1;
    sub_20AB86C10();
    char v20 = 2;
    sub_20AB86C60();
    char v19 = 3;
    sub_20AB86C60();
    char v18 = 4;
    sub_20AB86BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A9F69BC()
{
  unint64_t result = qword_26AC515D8;
  if (!qword_26AC515D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515D8);
  }
  return result;
}

uint64_t GroupData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A9F6CE4(0, &qword_26AC52588, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9F69BC();
  sub_20AB86DA0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v29 = 0;
    sub_20A9CF4E4();
    sub_20AB86B80();
    int v10 = v30;
    char v28 = 1;
    uint64_t v11 = sub_20AB86B40();
    uint64_t v14 = v13;
    uint64_t v23 = v11;
    int v24 = v10;
    char v27 = 2;
    swift_bridgeObjectRetain();
    int v15 = sub_20AB86B90();
    char v26 = 3;
    int v22 = sub_20AB86B90();
    char v25 = 4;
    uint64_t v16 = sub_20AB86AF0();
    uint64_t v18 = v17;
    char v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v21 = v16;
    v19(v9, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v24;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v14;
    int v20 = v22;
    *(_DWORD *)(a2 + 24) = v15;
    *(_DWORD *)(a2 + 28) = v20;
    *(void *)(a2 + 32) = v21;
    *(void *)(a2 + 40) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_20A9F6CE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9F69BC();
    unint64_t v7 = a3(a1, &type metadata for GroupData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9F6D50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return GroupData.init(from:)(a1, a2);
}

uint64_t sub_20A9F6D68(void *a1)
{
  return GroupData.encode(to:)(a1);
}

uint64_t destroy for GroupData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GroupData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupData()
{
  return &type metadata for GroupData;
}

unsigned char *storeEnumTagSinglePayload for GroupData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9F705CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupData.CodingKeys()
{
  return &type metadata for GroupData.CodingKeys;
}

unint64_t sub_20A9F7098()
{
  unint64_t result = qword_267654710;
  if (!qword_267654710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654710);
  }
  return result;
}

unint64_t sub_20A9F70F0()
{
  unint64_t result = qword_26AC515E8;
  if (!qword_26AC515E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515E8);
  }
  return result;
}

unint64_t sub_20A9F7148()
{
  unint64_t result = qword_26AC515E0;
  if (!qword_26AC515E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515E0);
  }
  return result;
}

uint64_t sub_20A9F719C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x70795470756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444970756F7267 && a2 == 0xE700000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7A80 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F5070756F7267 && a2 == 0xED00006E6F697469 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x5364657461727563 && a2 == 0xEE00657079546275)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_20A9F7408(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654718, MEMORY[0x263F24D10]);
}

uint64_t static MediaEngageEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653370, MEMORY[0x263F24D18], (uint64_t)qword_267654718, a1);
}

uint64_t static MediaEngageEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20A9F7470(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654730, MEMORY[0x263F24DC8]);
}

uint64_t static MediaEngageEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653378, MEMORY[0x263F24DD8], (uint64_t)qword_267654730, a1);
}

uint64_t sub_20A9F74D0()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654748);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654748);
  return sub_20AB85D30();
}

uint64_t static MediaEngageEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653380, MEMORY[0x263F24DE8], (uint64_t)qword_267654748, a1);
}

uint64_t MediaEngageEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t MediaEngageEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*MediaEngageEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9F8F58(type metadata accessor for MediaEngageEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for MediaEngageEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC4F3C8);
}

uint64_t MediaEngageEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 24);
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 28);
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 32);
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9F7CA8()
{
  unint64_t result = qword_26AC51640;
  if (!qword_26AC51640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51640);
  }
  return result;
}

unint64_t sub_20A9F7CFC()
{
  unint64_t result = qword_26AC51638;
  if (!qword_26AC51638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC51638);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 36);
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20A9F7EF8()
{
  unint64_t result = qword_26AC4FEC8;
  if (!qword_26AC4FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEC8);
  }
  return result;
}

unint64_t sub_20A9F7F4C()
{
  unint64_t result = qword_26AC4FEC0;
  if (!qword_26AC4FEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEC0);
  }
  return result;
}

uint64_t MediaEngageEvent.mediaEngagementData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 40);
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.mediaEngagementData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 44);
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.anfComponentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.anfComponentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 48);
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.anfComponentData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 52);
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t MediaEngageEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 56);
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20A9F87E8(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t MediaEngageEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent(0) + 60);
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*MediaEngageEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t MediaEngageEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for MediaEngageEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v10, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v2, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v10, v27);
}

uint64_t MediaEngageEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t MediaEngageEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A9F8F58(type metadata accessor for MediaEngageEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20A9F8F58@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for MediaEngageEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC525E8);
}

uint64_t MediaEngageEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 24));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t MediaEngageEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 36));
  char v4 = *v3;
  uint64_t v6 = *((void *)v3 + 1);
  uint64_t v5 = *((void *)v3 + 2);
  int v7 = *((_DWORD *)v3 + 6);
  LOBYTE(v3) = v3[28];
  *(unsigned char *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 28) = (_BYTE)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.mediaEngagementData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageEvent.Model(0);
  char v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  int v7 = *((_DWORD *)v4 + 3);
  LOBYTE(v4) = *((unsigned char *)v4 + 16);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(_DWORD *)(a1 + 12) = v7;
  *(unsigned char *)(a1 + 16) = (_BYTE)v4;
  return result;
}

uint64_t MediaEngageEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 44));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.anfComponentData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 48));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t sub_20A9F9290(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t MediaEngageEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 52));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for MediaEngageEvent.Model(0) + 56));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t MediaEngageEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for MediaEngageEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

__n128 MediaEngageEvent.Model.init(eventData:timedData:newsArticleData:groupData:feedData:mediaData:mediaEngagementData:viewData:anfComponentData:issueData:channelData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, __n128 *a12, char *a13)
{
  long long v40 = *a3;
  uint64_t v16 = *((void *)a3 + 2);
  uint64_t v17 = *((void *)a3 + 3);
  char v18 = *((unsigned char *)a3 + 32);
  uint64_t v19 = *((void *)a3 + 5);
  char v20 = *((unsigned char *)a3 + 48);
  uint64_t v21 = *((void *)a3 + 7);
  char v38 = *((unsigned char *)a3 + 65);
  char v39 = *((unsigned char *)a3 + 64);
  char v36 = *((unsigned char *)a3 + 67);
  char v37 = *((unsigned char *)a3 + 66);
  long long v43 = a4[1];
  long long v44 = *a4;
  uint64_t v41 = *((void *)a4 + 5);
  uint64_t v42 = *((void *)a4 + 4);
  long long v46 = *a5;
  uint64_t v45 = *((void *)a5 + 2);
  uint64_t v50 = *((void *)a6 + 1);
  uint64_t v49 = *((void *)a6 + 2);
  int v48 = *((_DWORD *)a6 + 6);
  char v47 = a6[28];
  uint64_t v55 = *a7;
  char v54 = *((unsigned char *)a7 + 8);
  int v53 = *((_DWORD *)a7 + 3);
  char v51 = *a6;
  char v52 = *((unsigned char *)a7 + 16);
  uint64_t v57 = a8[1];
  uint64_t v58 = *a8;
  __int16 v56 = *((_WORD *)a8 + 8);
  uint64_t v59 = a10[1];
  uint64_t v60 = *a10;
  uint64_t v61 = a11[1];
  uint64_t v62 = *a11;
  __n128 v67 = *a12;
  unint64_t v65 = a12[1].n128_u64[1];
  unint64_t v66 = a12[1].n128_u64[0];
  unsigned __int8 v63 = a12[2].n128_u8[1];
  unsigned __int8 v64 = a12[2].n128_u8[0];
  char v68 = *a13;
  uint64_t v22 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(a9, a1, v22);
  uint64_t v23 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  uint64_t v24 = a9 + v23[5];
  uint64_t v25 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v24, a2, v25);
  uint64_t v26 = a9 + v23[6];
  *(void *)(v26 + 16) = v16;
  *(void *)(v26 + 24) = v17;
  *(unsigned char *)(v26 + 32) = v18;
  *(void *)(v26 + 40) = v19;
  *(unsigned char *)(v26 + 48) = v20;
  *(void *)(v26 + 56) = v21;
  *(_OWORD *)uint64_t v26 = v40;
  *(unsigned char *)(v26 + 64) = v39;
  *(unsigned char *)(v26 + 65) = v38;
  *(unsigned char *)(v26 + 66) = v37;
  *(unsigned char *)(v26 + 67) = v36;
  uint64_t v27 = a9 + v23[7];
  *(_OWORD *)uint64_t v27 = v44;
  *(_OWORD *)(v27 + 16) = v43;
  *(void *)(v27 + 32) = v42;
  *(void *)(v27 + 40) = v41;
  uint64_t v28 = a9 + v23[8];
  *(_OWORD *)uint64_t v28 = v46;
  *(void *)(v28 + 16) = v45;
  uint64_t v29 = a9 + v23[9];
  *(unsigned char *)uint64_t v29 = v51;
  *(void *)(v29 + 8) = v50;
  *(void *)(v29 + 16) = v49;
  *(_DWORD *)(v29 + 24) = v48;
  *(unsigned char *)(v29 + 28) = v47;
  uint64_t v30 = a9 + v23[10];
  *(void *)uint64_t v30 = v55;
  *(unsigned char *)(v30 + 8) = v54;
  *(_DWORD *)(v30 + 12) = v53;
  *(unsigned char *)(v30 + 16) = v52;
  uint64_t v31 = a9 + v23[11];
  *(void *)uint64_t v31 = v58;
  *(void *)(v31 + 8) = v57;
  *(_WORD *)(v31 + 16) = v56;
  uint64_t v32 = (void *)(a9 + v23[12]);
  *uint64_t v32 = v60;
  v32[1] = v59;
  long long v33 = (void *)(a9 + v23[13]);
  *long long v33 = v62;
  v33[1] = v61;
  uint64_t v34 = (__n128 *)(a9 + v23[14]);
  __n128 result = v67;
  *uint64_t v34 = v67;
  v34[1].n128_u64[0] = v66;
  v34[1].n128_u64[1] = v65;
  v34[2].n128_u8[0] = v64;
  v34[2].n128_u8[1] = v63;
  *(unsigned char *)(a9 + v23[15]) = v68;
  return result;
}

uint64_t sub_20A9F96A8(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_8;
    case 5:
      uint64_t result = 0x746144616964656DLL;
      break;
    case 6:
    case 11:
      uint64_t result = 0xD000000000000013;
      break;
    case 7:
      unsigned int v3 = 2003134838;
LABEL_8:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 8:
      uint64_t result = 0xD000000000000010;
      break;
    case 9:
      uint64_t result = 0x7461446575737369;
      break;
    case 10:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20A9F981C()
{
  return sub_20A9F96A8(*v0);
}

uint64_t sub_20A9F9824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A9FFA94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A9F984C(uint64_t a1)
{
  unint64_t v2 = sub_20A9F9E48();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A9F9888(uint64_t a1)
{
  unint64_t v2 = sub_20A9F9E48();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MediaEngageEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A9FA964(0, &qword_267654760, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v44 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A9F9E48();
  sub_20AB86DC0();
  LOBYTE(v46) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
    LOBYTE(v46) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v46 = v12;
    *(void *)&long long v47 = v13;
    *((void *)&v47 + 1) = v14;
    LOBYTE(v48) = v15;
    *((void *)&v48 + 1) = v16;
    char v49 = v17;
    uint64_t v50 = v18;
    char v51 = v19;
    char v52 = v20;
    char v53 = v21;
    char v54 = (char)v11;
    char v45 = 2;
    sub_20A97A1AC();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = v22[1];
    long long v46 = *v22;
    long long v47 = v23;
    long long v48 = v22[2];
    char v45 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v46 = *v24;
    *(void *)&long long v47 = v25;
    char v45 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v26 = (char *)(v3 + v10[9]);
    char v27 = *v26;
    uint64_t v28 = *((void *)v26 + 1);
    uint64_t v29 = *((void *)v26 + 2);
    int v30 = *((_DWORD *)v26 + 6);
    LOBYTE(v26) = v26[28];
    LOBYTE(v46) = v27;
    *((void *)&v46 + 1) = v28;
    *(void *)&long long v47 = v29;
    DWORD2(v47) = v30;
    BYTE12(v47) = (_BYTE)v26;
    char v45 = 5;
    sub_20A9F7CFC();
    sub_20AB86C50();
    uint64_t v31 = (uint64_t *)(v3 + v10[10]);
    uint64_t v32 = *v31;
    char v33 = *((unsigned char *)v31 + 8);
    int v34 = *((_DWORD *)v31 + 3);
    LOBYTE(v31) = *((unsigned char *)v31 + 16);
    *(void *)&long long v46 = v32;
    BYTE8(v46) = v33;
    HIDWORD(v46) = v34;
    LOBYTE(v47) = (_BYTE)v31;
    char v45 = 6;
    sub_20A9F7F4C();
    sub_20AB86C50();
    uint64_t v35 = (uint64_t *)(v3 + v10[11]);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    LOWORD(v35) = *((_WORD *)v35 + 8);
    *(void *)&long long v46 = v36;
    *((void *)&v46 + 1) = v37;
    LOWORD(v47) = (_WORD)v35;
    char v45 = 7;
    sub_20A986C14();
    sub_20AB86C50();
    long long v46 = *(_OWORD *)(v3 + v10[12]);
    char v45 = 8;
    sub_20A9AE6E4();
    sub_20AB86BE0();
    long long v46 = *(_OWORD *)(v3 + v10[13]);
    char v45 = 9;
    sub_20A9870B4();
    sub_20AB86BE0();
    char v38 = (long long *)(v3 + v10[14]);
    long long v39 = *v38;
    uint64_t v40 = *((void *)v38 + 2);
    uint64_t v41 = *((void *)v38 + 3);
    char v42 = *((unsigned char *)v38 + 32);
    LOBYTE(v38) = *((unsigned char *)v38 + 33);
    long long v46 = v39;
    *(void *)&long long v47 = v40;
    *((void *)&v47 + 1) = v41;
    LOBYTE(v48) = v42;
    BYTE1(v48) = (_BYTE)v38;
    char v45 = 10;
    sub_20A9862D4();
    sub_20AB86C50();
    LOBYTE(v46) = *(unsigned char *)(v3 + v10[15]);
    char v45 = 11;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A9F9E48()
{
  unint64_t result = qword_267654768;
  if (!qword_267654768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654768);
  }
  return result;
}

uint64_t MediaEngageEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v62 = sub_20AB85FE0();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v63 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A9FA964(0, &qword_267654770, MEMORY[0x263F8E040]);
  uint64_t v61 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v56 - v11;
  __n128 v67 = (int *)type metadata accessor for MediaEngageEvent.Model(0);
  MEMORY[0x270FA5388](v67);
  unint64_t v66 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  unsigned __int8 v64 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_20A9F9E48();
  uint64_t v58 = v12;
  sub_20AB86DA0();
  uint64_t v59 = v6;
  if (v2)
  {
    uint64_t v65 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    int v16 = 0;
    int v17 = 0;
    int v77 = 0;
  }
  else
  {
    uint64_t v56 = v10;
    LOBYTE(v68) = 0;
    sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
    sub_20AB86B80();
    char v19 = v66;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v66, v8, v6);
    LOBYTE(v68) = 1;
    sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
    uint64_t v20 = v62;
    sub_20AB86B80();
    char v21 = v67;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v19[v67[5]], v5, v20);
    char v78 = 2;
    sub_20A97A154();
    sub_20AB86B80();
    long long v22 = v69;
    char v23 = v70;
    uint64_t v24 = *((void *)&v70 + 1);
    char v25 = v71;
    uint64_t v26 = v72;
    char v27 = v73;
    char v28 = v74;
    char v29 = v75;
    char v30 = v76;
    uint64_t v31 = &v19[v21[6]];
    *(_OWORD *)uint64_t v31 = v68;
    *((_OWORD *)v31 + 1) = v22;
    v31[32] = v23;
    *((void *)v31 + 5) = v24;
    v31[48] = v25;
    *((void *)v31 + 7) = v26;
    v31[64] = v27;
    v31[65] = v28;
    v31[66] = v29;
    v31[67] = v30;
    char v78 = 3;
    sub_20A9864D0();
    sub_20AB86B10();
    uint64_t v32 = &v19[v21[7]];
    long long v33 = v69;
    *(_OWORD *)uint64_t v32 = v68;
    *((_OWORD *)v32 + 1) = v33;
    *((_OWORD *)v32 + 2) = v70;
    char v78 = 4;
    sub_20A986720();
    sub_20AB86B10();
    uint64_t v34 = v69;
    uint64_t v35 = &v19[v21[8]];
    *(_OWORD *)uint64_t v35 = v68;
    *((void *)v35 + 2) = v34;
    char v78 = 5;
    sub_20A9F7CA8();
    sub_20AB86B80();
    uint64_t v36 = *((void *)&v68 + 1);
    uint64_t v37 = v69;
    int v38 = DWORD2(v69);
    char v39 = BYTE12(v69);
    uint64_t v40 = &v19[v21[9]];
    *uint64_t v40 = v68;
    *((void *)v40 + 1) = v36;
    *((void *)v40 + 2) = v37;
    *((_DWORD *)v40 + 6) = v38;
    v40[28] = v39;
    char v78 = 6;
    sub_20A9F7EF8();
    sub_20AB86B80();
    char v41 = BYTE8(v68);
    int v42 = HIDWORD(v68);
    char v43 = v69;
    uint64_t v44 = &v19[v21[10]];
    *(void *)uint64_t v44 = v68;
    v44[8] = v41;
    *((_DWORD *)v44 + 3) = v42;
    v44[16] = v43;
    char v78 = 7;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v45 = *((void *)&v68 + 1);
    __int16 v46 = v69;
    long long v47 = &v19[v21[11]];
    *(void *)long long v47 = v68;
    *((void *)v47 + 1) = v45;
    *((_WORD *)v47 + 8) = v46;
    char v78 = 8;
    sub_20A9AE68C();
    sub_20AB86B10();
    int v77 = 1;
    *(_OWORD *)&v19[v21[12]] = v68;
    char v78 = 9;
    sub_20A987060();
    sub_20AB86B10();
    uint64_t v65 = 0;
    *(_OWORD *)&v66[v67[13]] = v68;
    char v78 = 10;
    sub_20A986280();
    uint64_t v48 = v65;
    sub_20AB86B80();
    uint64_t v65 = v48;
    if (v48)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v61);
      int v16 = 0;
      int v17 = 1;
    }
    else
    {
      long long v49 = v69;
      char v50 = v70;
      char v51 = BYTE1(v70);
      char v52 = &v66[v67[14]];
      *(_OWORD *)char v52 = v68;
      *((_OWORD *)v52 + 1) = v49;
      v52[32] = v50;
      v52[33] = v51;
      char v78 = 11;
      sub_20A98757C();
      uint64_t v53 = v65;
      sub_20AB86B10();
      uint64_t v65 = v53;
      if (!v53)
      {
        (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v61);
        uint64_t v55 = (uint64_t)v66;
        v66[v67[15]] = v68;
        sub_20A9FA9DC(v55, v57);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
        return sub_20A9FAA40(v55);
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v61);
      int v17 = 1;
      int v16 = 1;
    }
    char v54 = v66;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v54, v59);
    uint64_t v18 = v67;
    (*(void (**)(char *, uint64_t))(v60 + 8))(&v54[v67[5]], v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A98937C(*(void *)&v54[v18[7]], *(void *)&v54[v18[7] + 8], *(void *)&v54[v18[7] + 16]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v77)
    {
      sub_20A9FA9C8(*(void *)&v54[v18[12]], *(void *)&v54[v18[12] + 8]);
      goto LABEL_6;
    }
  }
  if (!v17)
  {
    if (!v16) {
      return result;
    }
    goto LABEL_10;
  }
LABEL_6:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return result;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20A9FA964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A9F9E48();
    unint64_t v7 = a3(a1, &type metadata for MediaEngageEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A9FA9C8(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A9FA9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A9FAA40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MediaEngageEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A9FAA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaEngageEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20A9FAAB4(void *a1)
{
  return MediaEngageEvent.Model.encode(to:)(a1);
}

uint64_t sub_20A9FAACC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653370, MEMORY[0x263F24D18], (uint64_t)qword_267654718, a1);
}

uint64_t sub_20A9FAB04@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653378, MEMORY[0x263F24DD8], (uint64_t)qword_267654730, a1);
}

uint64_t sub_20A9FAB3C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653380, MEMORY[0x263F24DE8], (uint64_t)qword_267654748, a1);
}

uint64_t sub_20A9FAB74@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v11, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v4, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v11, v28);
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaEngageEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    char v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    long long v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    int v38 = (char *)a2 + v36;
    sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    char v41 = (char *)a1 + v40;
    int v42 = (char *)a2 + v40;
    sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[14];
    uint64_t v45 = (char *)a1 + v44;
    __int16 v46 = (char *)a2 + v44;
    sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    long long v49 = (char *)a1 + v48;
    char v50 = (char *)a2 + v48;
    sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = a1 + a2[14];
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = a1 + a2[15];
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);

  return v27(v25, v26);
}

uint64_t initializeWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = a3[14];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[15];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 40))(v48, v49, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9FD3A8);
}

uint64_t sub_20A9FD3A8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_24:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_23:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_24;
  }
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a2)
  {
    uint64_t v8 = v21;
    uint64_t v12 = *(void *)(v21 - 8);
    uint64_t v13 = a3[13];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a2)
  {
    uint64_t v8 = v22;
    uint64_t v12 = *(void *)(v22 - 8);
    uint64_t v13 = a3[14];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a3[15];

  return v25(v27, a2, v26);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9FD9E4);
}

uint64_t sub_20A9FD9E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_24:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_23:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_24;
  }
  sub_20A9F87E8(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v23 - 8) + 84) == a3)
  {
    uint64_t v10 = v23;
    uint64_t v14 = *(void *)(v23 - 8);
    uint64_t v15 = a4[13];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  if (*(_DWORD *)(*(void *)(v24 - 8) + 84) == a3)
  {
    uint64_t v10 = v24;
    uint64_t v14 = *(void *)(v24 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_23;
  }
  sub_20A9F87E8(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v28 = v26;
  uint64_t v29 = a1 + a4[15];

  return v27(v29, a2, a2, v28);
}

void sub_20A9FE018()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20A9F87E8(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
      if (v2 <= 0x3F)
      {
        sub_20A9F87E8(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20A9F87E8(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20A9F87E8(319, &qword_26AC4E6C0, (void (*)(void))sub_20A9F7CA8, (void (*)(void))sub_20A9F7CFC);
            if (v5 <= 0x3F)
            {
              sub_20A9F87E8(319, &qword_26AC4E640, (void (*)(void))sub_20A9F7EF8, (void (*)(void))sub_20A9F7F4C);
              if (v6 <= 0x3F)
              {
                sub_20A9F87E8(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
                if (v7 <= 0x3F)
                {
                  sub_20A9F87E8(319, &qword_26AC4E618, (void (*)(void))sub_20A9AE68C, (void (*)(void))sub_20A9AE6E4);
                  if (v8 <= 0x3F)
                  {
                    sub_20A9F87E8(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                    if (v9 <= 0x3F)
                    {
                      sub_20A9F87E8(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                      if (v10 <= 0x3F)
                      {
                        sub_20A9F87E8(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                        if (v11 <= 0x3F) {
                          swift_initStructMetadata();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for MediaEngageEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    v14[32] = v15[32];
    *((void *)v14 + 5) = *((void *)v15 + 5);
    v14[48] = v15[48];
    *((void *)v14 + 7) = *((void *)v15 + 7);
    uint64_t v17 = *((void *)v15 + 3);
    *((void *)v14 + 2) = *((void *)v15 + 2);
    *((void *)v14 + 3) = v17;
    *((_DWORD *)v14 + 16) = *((_DWORD *)v15 + 16);
    uint64_t v18 = (char *)a1 + v13;
    uint64_t v19 = (char *)a2 + v13;
    uint64_t v20 = *(void *)((char *)a2 + v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *uint64_t v18 = *v19;
      *((void *)v18 + 1) = *((void *)v19 + 1);
      *((void *)v18 + 2) = v20;
      *((void *)v18 + 3) = *((void *)v19 + 3);
      uint64_t v21 = *((void *)v19 + 5);
      *((void *)v18 + 4) = *((void *)v19 + 4);
      *((void *)v18 + 5) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v23 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v23;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    }
    uint64_t v24 = a3[8];
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *uint64_t v26 = *v27;
    uint64_t v28 = *((void *)v27 + 2);
    *((void *)v26 + 1) = *((void *)v27 + 1);
    *((void *)v26 + 2) = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    *uint64_t v29 = *v30;
    uint64_t v31 = *((void *)v30 + 2);
    *((void *)v29 + 1) = *((void *)v30 + 1);
    *((void *)v29 + 2) = v31;
    *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
    v29[28] = v30[28];
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    uint64_t v36 = (char *)a1 + v33;
    uint64_t v37 = (char *)a2 + v33;
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    v36[16] = v37[16];
    v36[17] = v37[17];
    uint64_t v39 = a3[12];
    uint64_t v40 = (char *)a1 + v39;
    uint64_t v41 = (_OWORD *)((char *)a2 + v39);
    uint64_t v42 = *(void *)((char *)a2 + v39 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42 == 1)
    {
      *(_OWORD *)uint64_t v40 = *v41;
    }
    else
    {
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = v42;
      swift_bridgeObjectRetain();
    }
    uint64_t v43 = a3[13];
    uint64_t v44 = a3[14];
    uint64_t v45 = (void *)((char *)a1 + v43);
    uint64_t v46 = (void *)((char *)a2 + v43);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    uint64_t v48 = (char *)a1 + v44;
    uint64_t v49 = (char *)a2 + v44;
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = *((void *)v49 + 3);
    *((void *)v48 + 2) = *((void *)v49 + 2);
    *((void *)v48 + 3) = v51;
    *((_WORD *)v48 + 16) = *((_WORD *)v49 + 16);
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaEngageEvent.Model(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[7] + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[12] + 8) != 1) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(unsigned char *)(v13 + 48) = *(unsigned char *)(v14 + 48);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  uint64_t v16 = *(void *)(v14 + 24);
  *(void *)(v13 + 16) = *(void *)(v14 + 16);
  *(void *)(v13 + 24) = v16;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  uint64_t v19 = *(void *)(a2 + v12 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
    *(void *)(v17 + 8) = *(void *)(v18 + 8);
    *(void *)(v17 + 16) = v19;
    *(void *)(v17 + 24) = *(void *)(v18 + 24);
    uint64_t v20 = *(void *)(v18 + 40);
    *(void *)(v17 + 32) = *(void *)(v18 + 32);
    *(void *)(v17 + 40) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(unsigned char *)uint64_t v24 = *(unsigned char *)v25;
  uint64_t v26 = *(void *)(v25 + 16);
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  *(void *)(v24 + 16) = v26;
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  *(unsigned char *)uint64_t v27 = *(unsigned char *)v28;
  uint64_t v29 = *(void *)(v28 + 16);
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  *(void *)(v27 + 16) = v29;
  *(_DWORD *)(v27 + 24) = *(_DWORD *)(v28 + 24);
  *(unsigned char *)(v27 + 28) = *(unsigned char *)(v28 + 28);
  uint64_t v30 = a3[10];
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v34 = a1 + v31;
  uint64_t v35 = a2 + v31;
  uint64_t v36 = *(void *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
  *(unsigned char *)(v34 + 17) = *(unsigned char *)(v35 + 17);
  uint64_t v37 = a3[12];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (_OWORD *)(a2 + v37);
  uint64_t v40 = *(void *)(a2 + v37 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 == 1)
  {
    *(_OWORD *)uint64_t v38 = *v39;
  }
  else
  {
    *(void *)uint64_t v38 = *(void *)v39;
    *(void *)(v38 + 8) = v40;
    swift_bridgeObjectRetain();
  }
  uint64_t v41 = a3[13];
  uint64_t v42 = a3[14];
  uint64_t v43 = (void *)(a1 + v41);
  uint64_t v44 = (void *)(a2 + v41);
  uint64_t v45 = v44[1];
  *uint64_t v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a1 + v42;
  uint64_t v47 = a2 + v42;
  uint64_t v48 = *(void *)(v47 + 8);
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v48;
  uint64_t v49 = *(void *)(v47 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = v49;
  *(_WORD *)(v46 + 32) = *(_WORD *)(v47 + 32);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  uint64_t v14 = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 40) = v14;
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (long long *)(a2 + v15);
  uint64_t v18 = *(void *)(a1 + v15 + 16);
  uint64_t v19 = *(void *)(a2 + v15 + 16);
  if (v18)
  {
    if (v19)
    {
      *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
      *(void *)(v16 + 8) = *((void *)v17 + 1);
      *(void *)(v16 + 16) = *((void *)v17 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
      *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
      *(void *)(v16 + 32) = *((void *)v17 + 4);
      *(void *)(v16 + 40) = *((void *)v17 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v16);
      long long v21 = v17[1];
      long long v20 = v17[2];
      *(_OWORD *)uint64_t v16 = *v17;
      *(_OWORD *)(v16 + 16) = v21;
      *(_OWORD *)(v16 + 32) = v20;
    }
  }
  else if (v19)
  {
    *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
    *(void *)(v16 + 8) = *((void *)v17 + 1);
    *(void *)(v16 + 16) = *((void *)v17 + 2);
    *(_DWORD *)(v16 + 24) = *((_DWORD *)v17 + 6);
    *(_DWORD *)(v16 + 28) = *((_DWORD *)v17 + 7);
    *(void *)(v16 + 32) = *((void *)v17 + 4);
    *(void *)(v16 + 40) = *((void *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *v17;
    long long v23 = v17[2];
    *(_OWORD *)(v16 + 16) = v17[1];
    *(_OWORD *)(v16 + 32) = v23;
    *(_OWORD *)uint64_t v16 = v22;
  }
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(unsigned char *)uint64_t v25 = *(unsigned char *)v26;
  *(void *)(v25 + 8) = *(void *)(v26 + 8);
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  *(void *)(v28 + 16) = *(void *)(a2 + v27 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v30 = *(_DWORD *)(v29 + 24);
  *(unsigned char *)(v28 + 28) = *(unsigned char *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = v30;
  uint64_t v31 = a3[10];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(_DWORD *)(v32 + 12) = *(_DWORD *)(v33 + 12);
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v34 = a3[11];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(void *)uint64_t v35 = *(void *)(a2 + v34);
  *(void *)(v35 + 8) = *(void *)(a2 + v34 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
  *(unsigned char *)(v35 + 17) = *(unsigned char *)(v36 + 17);
  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = *(void *)(a1 + v37 + 8);
  uint64_t v41 = *(void *)(a2 + v37 + 8);
  if (v40 != 1)
  {
    if (v41 != 1)
    {
      *uint64_t v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_20A9FF03C((uint64_t)v38);
    goto LABEL_13;
  }
  if (v41 == 1)
  {
LABEL_13:
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    goto LABEL_15;
  }
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
LABEL_15:
  uint64_t v42 = a3[13];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[14];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)(a2 + v45);
  *(void *)(v46 + 8) = *(void *)(a2 + v45 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = *(void *)(v47 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v46 + 32) = *(unsigned char *)(v47 + 32);
  *(unsigned char *)(v46 + 33) = *(unsigned char *)(v47 + 33);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_20A9FF03C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_DWORD *)(v13 + 64) = *(_DWORD *)(v14 + 64);
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = (_OWORD *)(a1 + v12);
  uint64_t v18 = (long long *)(a2 + v12);
  long long v19 = v18[2];
  long long v20 = *v18;
  v17[1] = v18[1];
  v17[2] = v19;
  *uint64_t v17 = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)(v23 + 16) = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  uint64_t v25 = (_OWORD *)(a1 + v22);
  uint64_t v26 = (long long *)(a2 + v22);
  long long v27 = *v26;
  *(_OWORD *)((char *)v25 + 13) = *(long long *)((char *)v26 + 13);
  *uint64_t v25 = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_WORD *)(v32 + 16) = *(_WORD *)(v33 + 16);
  uint64_t v34 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  uint64_t v35 = a3[14];
  uint64_t v36 = a3[15];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(_WORD *)(v37 + 32) = *(_WORD *)(v38 + 32);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  return a1;
}

uint64_t assignWithTake for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v13 + 24);
  *(void *)(v12 + 16) = *(void *)(v13 + 16);
  *(void *)(v12 + 24) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 32) = *(unsigned char *)(v13 + 32);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(unsigned char *)(v12 + 48) = *(unsigned char *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(unsigned char *)(v12 + 65) = *(unsigned char *)(v13 + 65);
  *(unsigned char *)(v12 + 66) = *(unsigned char *)(v13 + 66);
  *(unsigned char *)(v12 + 67) = *(unsigned char *)(v13 + 67);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  if (*(void *)(a1 + v16 + 16))
  {
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
      *(void *)(v17 + 8) = *(void *)(v18 + 8);
      *(void *)(v17 + 16) = v19;
      swift_bridgeObjectRelease();
      *(void *)(v17 + 24) = *(void *)(v18 + 24);
      uint64_t v20 = *(void *)(v18 + 40);
      *(void *)(v17 + 32) = *(void *)(v18 + 32);
      *(void *)(v17 + 40) = v20;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_20A98D5B8(v17);
  }
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v21;
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
LABEL_6:
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(unsigned char *)uint64_t v23 = *(unsigned char *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  uint64_t v25 = *(void *)(v24 + 16);
  *(void *)(v23 + 8) = v26;
  *(void *)(v23 + 16) = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
  uint64_t v30 = *(void *)(a2 + v27 + 16);
  *(void *)(v28 + 8) = *(void *)(a2 + v27 + 8);
  *(void *)(v28 + 16) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 28) = *(unsigned char *)(v29 + 28);
  *(_DWORD *)(v28 + 24) = *(_DWORD *)(v29 + 24);
  uint64_t v31 = a3[10];
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(void *)uint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  *(_DWORD *)(v33 + 12) = *(_DWORD *)(v34 + 12);
  *(unsigned char *)(v33 + 16) = *(unsigned char *)(v34 + 16);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  uint64_t v37 = *(void *)(a2 + v32);
  uint64_t v38 = *(void *)(a2 + v32 + 8);
  *(void *)uint64_t v35 = v37;
  *(void *)(v35 + 8) = v38;
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 16) = *(_WORD *)(v36 + 16);
  uint64_t v39 = a3[12];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  if (*(void *)(a1 + v39 + 8) != 1)
  {
    uint64_t v42 = v41[1];
    if (v42 != 1)
    {
      *uint64_t v40 = *v41;
      v40[1] = v42;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_20A9FF03C((uint64_t)v40);
  }
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
LABEL_11:
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (uint64_t *)(a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[14];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(a2 + v48 + 8);
  *(void *)uint64_t v49 = *(void *)(a2 + v48);
  *(void *)(v49 + 8) = v51;
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v50 + 24);
  *(void *)(v49 + 16) = *(void *)(v50 + 16);
  *(void *)(v49 + 24) = v52;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 32) = *(unsigned char *)(v50 + 32);
  *(unsigned char *)(v49 + 33) = *(unsigned char *)(v50 + 33);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A9FF51C);
}

uint64_t sub_20A9FF51C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaEngageEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A9FF648);
}

uint64_t sub_20A9FF648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20A9FF75C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MediaEngageEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A9FF954);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaEngageEvent.Model.CodingKeys()
{
  return &type metadata for MediaEngageEvent.Model.CodingKeys;
}

unint64_t sub_20A9FF990()
{
  unint64_t result = qword_267654778;
  if (!qword_267654778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654778);
  }
  return result;
}

unint64_t sub_20A9FF9E8()
{
  unint64_t result = qword_267654780;
  if (!qword_267654780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654780);
  }
  return result;
}

unint64_t sub_20A9FFA40()
{
  unint64_t result = qword_267654788;
  if (!qword_267654788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654788);
  }
  return result;
}

uint64_t sub_20A9FFA94(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746144616964656DLL && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7AA0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7AC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

StocksAnalytics::StoryType_optional __swiftcall StoryType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t StoryType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696B61657262;
      break;
    case 2:
      uint64_t result = 0x69706F6C65766564;
      break;
    case 3:
      uint64_t result = 0x64657461647075;
      break;
    case 4:
      uint64_t result = 0x6C65527373657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA000D0(unsigned __int8 *a1, char *a2)
{
  return sub_20AA33640(*a1, *a2);
}

unint64_t sub_20AA000E0()
{
  unint64_t result = qword_267654790;
  if (!qword_267654790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654790);
  }
  return result;
}

uint64_t sub_20AA00134()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA00234()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA0031C()
{
  return sub_20AB86D80();
}

StocksAnalytics::StoryType_optional sub_20AA00418(Swift::String *a1)
{
  return StoryType.init(rawValue:)(*a1);
}

void sub_20AA00424(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x676E696B61657262;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x69706F6C65766564;
      *(void *)(a1 + 8) = 0xEA0000000000676ELL;
      break;
    case 3:
      *(void *)a1 = 0x64657461647075;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 4:
      strcpy((char *)a1, "pressRelease");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA004E8()
{
  return sub_20AB86750();
}

uint64_t sub_20AA00548()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for StoryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA00664);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoryType()
{
  return &type metadata for StoryType;
}

unint64_t sub_20AA0069C()
{
  unint64_t result = qword_26AC52648;
  if (!qword_26AC52648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52648);
  }
  return result;
}

uint64_t static StoreKitErrorData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void StoreKitErrorData.storeKitError.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *StoreKitErrorData.storeKitError.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*StoreKitErrorData.storeKitError.modify())()
{
  return nullsub_1;
}

StocksAnalytics::StoreKitErrorData __swiftcall StoreKitErrorData.init(storeKitError:)(StocksAnalytics::StoreKitErrorData storeKitError)
{
  *unint64_t v1 = *(unsigned char *)storeKitError.storeKitError;
  return storeKitError;
}

uint64_t sub_20AA0073C()
{
  return 0x74694B65726F7473;
}

uint64_t sub_20AA00760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74694B65726F7473 && a2 == 0xED0000726F727245)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA0081C(uint64_t a1)
{
  unint64_t v2 = sub_20AA009F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA00858(uint64_t a1)
{
  unint64_t v2 = sub_20AA009F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StoreKitErrorData.encode(to:)(void *a1)
{
  sub_20AA00C30(0, &qword_267654798, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA009F0();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA00A44();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA009F0()
{
  unint64_t result = qword_2676547A0;
  if (!qword_2676547A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547A0);
  }
  return result;
}

unint64_t sub_20AA00A44()
{
  unint64_t result = qword_2676547A8;
  if (!qword_2676547A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547A8);
  }
  return result;
}

uint64_t StoreKitErrorData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA00C30(0, &qword_2676547B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA009F0();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA00C94();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA00C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA009F0();
    unint64_t v7 = a3(a1, &type metadata for StoreKitErrorData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA00C94()
{
  unint64_t result = qword_2676547B8;
  if (!qword_2676547B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547B8);
  }
  return result;
}

unint64_t sub_20AA00CEC()
{
  unint64_t result = qword_2676547C0;
  if (!qword_2676547C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547C0);
  }
  return result;
}

unint64_t sub_20AA00D44()
{
  unint64_t result = qword_2676547C8;
  if (!qword_2676547C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547C8);
  }
  return result;
}

uint64_t sub_20AA00D98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StoreKitErrorData.init(from:)(a1, a2);
}

uint64_t sub_20AA00DB0(void *a1)
{
  return StoreKitErrorData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for StoreKitErrorData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 20 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 20) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEB)
  {
    unsigned int v6 = ((a2 - 236) >> 8) + 1;
    *unint64_t result = a2 + 20;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA00E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 20;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData()
{
  return &type metadata for StoreKitErrorData;
}

unsigned char *storeEnumTagSinglePayload for StoreKitErrorData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA00F68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreKitErrorData.CodingKeys()
{
  return &type metadata for StoreKitErrorData.CodingKeys;
}

unint64_t sub_20AA00FA4()
{
  unint64_t result = qword_2676547D0;
  if (!qword_2676547D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547D0);
  }
  return result;
}

unint64_t sub_20AA00FFC()
{
  unint64_t result = qword_2676547D8;
  if (!qword_2676547D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547D8);
  }
  return result;
}

unint64_t sub_20AA01054()
{
  unint64_t result = qword_2676547E0;
  if (!qword_2676547E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547E0);
  }
  return result;
}

uint64_t static PersonalizedAdsUserSelectionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void PersonalizedAdsUserSelectionData.selectionType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *PersonalizedAdsUserSelectionData.selectionType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*PersonalizedAdsUserSelectionData.selectionType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PersonalizedAdsUserSelectionData __swiftcall PersonalizedAdsUserSelectionData.init(selectionType:)(StocksAnalytics::PersonalizedAdsUserSelectionData selectionType)
{
  *unint64_t v1 = *(unsigned char *)selectionType.selectionType;
  return selectionType;
}

uint64_t sub_20AA010F4()
{
  return 0x6F697463656C6573;
}

uint64_t sub_20AA01118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6F697463656C6573 && a2 == 0xED0000657079546ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA011D4(uint64_t a1)
{
  unint64_t v2 = sub_20AA013A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA01210(uint64_t a1)
{
  unint64_t v2 = sub_20AA013A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PersonalizedAdsUserSelectionData.encode(to:)(void *a1)
{
  sub_20AA015E8(0, &qword_2676547E8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA013A8();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA013FC();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA013A8()
{
  unint64_t result = qword_2676547F0;
  if (!qword_2676547F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547F0);
  }
  return result;
}

unint64_t sub_20AA013FC()
{
  unint64_t result = qword_2676547F8;
  if (!qword_2676547F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676547F8);
  }
  return result;
}

uint64_t PersonalizedAdsUserSelectionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA015E8(0, &qword_267654800, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA013A8();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA0164C();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA015E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA013A8();
    unint64_t v7 = a3(a1, &type metadata for PersonalizedAdsUserSelectionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA0164C()
{
  unint64_t result = qword_267654808;
  if (!qword_267654808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654808);
  }
  return result;
}

unint64_t sub_20AA016A4()
{
  unint64_t result = qword_267654810;
  if (!qword_267654810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654810);
  }
  return result;
}

unint64_t sub_20AA016FC()
{
  unint64_t result = qword_267654818;
  if (!qword_267654818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654818);
  }
  return result;
}

uint64_t sub_20AA01750@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return PersonalizedAdsUserSelectionData.init(from:)(a1, a2);
}

uint64_t sub_20AA01768(void *a1)
{
  return PersonalizedAdsUserSelectionData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0184CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData()
{
  return &type metadata for PersonalizedAdsUserSelectionData;
}

unsigned char *storeEnumTagSinglePayload for PersonalizedAdsUserSelectionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA01920);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalizedAdsUserSelectionData.CodingKeys()
{
  return &type metadata for PersonalizedAdsUserSelectionData.CodingKeys;
}

unint64_t sub_20AA0195C()
{
  unint64_t result = qword_267654820;
  if (!qword_267654820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654820);
  }
  return result;
}

unint64_t sub_20AA019B4()
{
  unint64_t result = qword_267654828;
  if (!qword_267654828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654828);
  }
  return result;
}

unint64_t sub_20AA01A0C()
{
  unint64_t result = qword_267654830;
  if (!qword_267654830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654830);
  }
  return result;
}

uint64_t sub_20AA01A60(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654838, MEMORY[0x263F24D10]);
}

uint64_t static OnboardingScreenContinueEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653388, MEMORY[0x263F24D18], (uint64_t)qword_267654838, a1);
}

uint64_t static OnboardingScreenContinueEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA01AC8(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654850, MEMORY[0x263F24DC8]);
}

uint64_t static OnboardingScreenContinueEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653390, MEMORY[0x263F24DD8], (uint64_t)qword_267654850, a1);
}

uint64_t sub_20AA01B28()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654868);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654868);
  return sub_20AB85D30();
}

uint64_t static OnboardingScreenContinueEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653398, MEMORY[0x263F24DE8], (uint64_t)qword_267654868, a1);
}

uint64_t OnboardingScreenContinueEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t OnboardingScreenContinueEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*OnboardingScreenContinueEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenContinueEvent.onboardingScreenData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_20AA01CE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for OnboardingScreenContinueEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676548B0);
}

void sub_20AA01CE4()
{
  if (!qword_267654880)
  {
    sub_20AA01D4C();
    sub_20AA01DA0();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_267654880);
    }
  }
}

unint64_t sub_20AA01D4C()
{
  unint64_t result = qword_267654888;
  if (!qword_267654888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654888);
  }
  return result;
}

unint64_t sub_20AA01DA0()
{
  unint64_t result = qword_267654890;
  if (!qword_267654890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654890);
  }
  return result;
}

uint64_t OnboardingScreenContinueEvent.onboardingScreenData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_20AA01CE4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*OnboardingScreenContinueEvent.onboardingScreenData.modify())()
{
  return nullsub_1;
}

uint64_t OnboardingScreenContinueEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent(0) + 20);
  sub_20AA01CE4();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t OnboardingScreenContinueEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t OnboardingScreenContinueEvent.Model.onboardingScreenData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for OnboardingScreenContinueEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_2676548C0);
}

uint64_t OnboardingScreenContinueEvent.Model.init(eventData:onboardingScreenData:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AA0205C()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA020A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA0384C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA020C8(uint64_t a1)
{
  unint64_t v2 = sub_20AA0230C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA02104(uint64_t a1)
{
  unint64_t v2 = sub_20AA0230C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OnboardingScreenContinueEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA026B0(0, &qword_267654898, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0230C();
  sub_20AB86DC0();
  v11[15] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for OnboardingScreenContinueEvent.Model(0) + 20));
    v11[13] = 1;
    sub_20AA01DA0();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA0230C()
{
  unint64_t result = qword_2676548A0;
  if (!qword_2676548A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676548A0);
  }
  return result;
}

uint64_t OnboardingScreenContinueEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v23 = sub_20AB85FC0();
  uint64_t v21 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA026B0(0, &qword_2676548A8, MEMORY[0x263F8E040]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0230C();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v12 = v11;
  uint64_t v13 = v21;
  char v27 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v23;
  sub_20AB86B80();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v19 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v25 = 1;
  sub_20AA01D4C();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t v17 = v19;
  uint64_t v16 = v20;
  *(unsigned char *)(v19 + *(int *)(v9 + 20)) = v26;
  sub_20AA02714(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA02778(v17);
}

void sub_20AA026B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0230C();
    unint64_t v7 = a3(a1, &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA02714(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA02778(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OnboardingScreenContinueEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA027D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingScreenContinueEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA027EC(void *a1)
{
  return OnboardingScreenContinueEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA02804@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653388, MEMORY[0x263F24D18], (uint64_t)qword_267654838, a1);
}

uint64_t sub_20AA0283C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653390, MEMORY[0x263F24DD8], (uint64_t)qword_267654850, a1);
}

uint64_t sub_20AA02874@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653398, MEMORY[0x263F24DE8], (uint64_t)qword_267654868, a1);
}

uint64_t sub_20AA028AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AA01CE4();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for OnboardingScreenContinueEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA01CE4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AA01CE4();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA01CE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA02E14);
}

uint64_t sub_20AA02E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AA01CE4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenContinueEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA02F20);
}

uint64_t sub_20AA02F20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AA01CE4();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AA03024()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA01CE4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *initializeBufferWithCopyOfBuffer for OnboardingScreenContinueEvent.Model(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for OnboardingScreenContinueEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA03420);
}

uint64_t sub_20AA03420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for OnboardingScreenContinueEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA034F0);
}

uint64_t sub_20AA034F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  }
  return result;
}

uint64_t sub_20AA035AC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OnboardingScreenContinueEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0370CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingScreenContinueEvent.Model.CodingKeys()
{
  return &type metadata for OnboardingScreenContinueEvent.Model.CodingKeys;
}

unint64_t sub_20AA03748()
{
  unint64_t result = qword_2676548D0;
  if (!qword_2676548D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676548D0);
  }
  return result;
}

unint64_t sub_20AA037A0()
{
  unint64_t result = qword_2676548D8;
  if (!qword_2676548D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676548D8);
  }
  return result;
}

unint64_t sub_20AA037F8()
{
  unint64_t result = qword_2676548E0;
  if (!qword_2676548E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676548E0);
  }
  return result;
}

uint64_t sub_20AA0384C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA7AE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AA03948(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_2676548E8, MEMORY[0x263F24D10]);
}

uint64_t static AdInterstitialImpressionEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533A0, MEMORY[0x263F24D18], (uint64_t)qword_2676548E8, a1);
}

uint64_t static AdInterstitialImpressionEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA039B0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654900, MEMORY[0x263F24DC8]);
}

uint64_t static AdInterstitialImpressionEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533A8, MEMORY[0x263F24DD8], (uint64_t)qword_267654900, a1);
}

uint64_t sub_20AA03A10()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654918);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654918);
  return sub_20AB85D30();
}

uint64_t static AdInterstitialImpressionEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533B0, MEMORY[0x263F24DE8], (uint64_t)qword_267654918, a1);
}

uint64_t AdInterstitialImpressionEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t AdInterstitialImpressionEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*AdInterstitialImpressionEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA042BC(type metadata accessor for AdInterstitialImpressionEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for AdInterstitialImpressionEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654960);
}

uint64_t AdInterstitialImpressionEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 24);
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA03CF0()
{
  unint64_t result = qword_267654938;
  if (!qword_267654938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654938);
  }
  return result;
}

unint64_t sub_20AA03D44()
{
  unint64_t result = qword_267654940;
  if (!qword_267654940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654940);
  }
  return result;
}

uint64_t AdInterstitialImpressionEvent.adData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 24);
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.adData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 28);
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA03F40(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t AdInterstitialImpressionEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent(0) + 28);
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*AdInterstitialImpressionEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t AdInterstitialImpressionEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for AdInterstitialImpressionEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);

  return v11(v9, v2, v10);
}

uint64_t AdInterstitialImpressionEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t AdInterstitialImpressionEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA042BC(type metadata accessor for AdInterstitialImpressionEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA042BC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for AdInterstitialImpressionEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654970);
}

uint64_t AdInterstitialImpressionEvent.Model.adData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent.Model(0) + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  __int16 v5 = *(_WORD *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 64);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AdInterstitialImpressionEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AdInterstitialImpressionEvent.Model(0) + 28);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

__n128 AdInterstitialImpressionEvent.Model.init(eventData:timedData:adData:feedData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  __int16 v10 = *((_WORD *)a3 + 8);
  __n128 v21 = *(__n128 *)(a3 + 5);
  long long v22 = *(_OWORD *)(a3 + 3);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  char v13 = *a4;
  uint64_t v23 = *((void *)a4 + 2);
  uint64_t v24 = *((void *)a4 + 1);
  uint64_t v14 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  uint64_t v15 = (int *)type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  uint64_t v16 = a5 + v15[5];
  uint64_t v17 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a2, v17);
  uint64_t v18 = a5 + v15[6];
  *(void *)uint64_t v18 = v8;
  *(void *)(v18 + 8) = v9;
  *(_WORD *)(v18 + 16) = v10;
  *(_OWORD *)(v18 + 24) = v22;
  __n128 result = v21;
  *(__n128 *)(v18 + 40) = v21;
  *(void *)(v18 + 56) = v11;
  *(void *)(v18 + 64) = v12;
  uint64_t v20 = a5 + v15[7];
  *(unsigned char *)uint64_t v20 = v13;
  *(void *)(v20 + 8) = v24;
  *(void *)(v20 + 16) = v23;
  return result;
}

uint64_t sub_20AA0458C()
{
  uint64_t result = 0x746144746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74614464656D6974;
      break;
    case 2:
      uint64_t result = 0x617461446461;
      break;
    case 3:
      uint64_t result = 0x6174614464656566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA04618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA07078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA04640(uint64_t a1)
{
  unint64_t v2 = sub_20AA04984();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0467C(uint64_t a1)
{
  unint64_t v2 = sub_20AA04984();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdInterstitialImpressionEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA04F84(0, &qword_267654948, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA04984();
  sub_20AB86DC0();
  LOBYTE(v21) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
    LOBYTE(v21) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    uint64_t v12 = v11[1];
    __int16 v13 = *((_WORD *)v11 + 8);
    uint64_t v21 = *v11;
    uint64_t v22 = v12;
    LOWORD(v23) = v13;
    long long v14 = *(_OWORD *)(v11 + 5);
    long long v24 = *(_OWORD *)(v11 + 3);
    long long v25 = v14;
    long long v26 = *(_OWORD *)(v11 + 7);
    HIBYTE(v20) = 2;
    sub_20AA03D44();
    sub_20AB86C50();
    uint64_t v15 = (char *)(v3 + *(int *)(v10 + 28));
    char v16 = *v15;
    uint64_t v18 = *((void *)v15 + 1);
    uint64_t v17 = *((void *)v15 + 2);
    LOBYTE(v21) = v16;
    uint64_t v22 = v18;
    uint64_t v23 = v17;
    HIBYTE(v20) = 3;
    sub_20A986774();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA04984()
{
  unint64_t result = qword_267654950;
  if (!qword_267654950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654950);
  }
  return result;
}

uint64_t AdInterstitialImpressionEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v29 = sub_20AB85FE0();
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA04F84(0, &qword_267654958, MEMORY[0x263F8E040]);
  uint64_t v30 = v7;
  uint64_t v27 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = (int *)type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA04984();
  uint64_t v32 = v9;
  uint64_t v13 = (uint64_t)v33;
  sub_20AB86DA0();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v33 = a1;
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  LOBYTE(v34) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  char v16 = *(void (**)(char *, char *))(v14 + 32);
  uint64_t v17 = v31;
  uint64_t v31 = (char *)v5;
  v16(v12, v17);
  LOBYTE(v34) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  sub_20AB86B80();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v12[v10[5]], v4, v15);
  char v40 = 2;
  sub_20AA03CF0();
  sub_20AB86B80();
  uint64_t v18 = v35;
  __int16 v19 = v36;
  uint64_t v20 = &v12[v10[6]];
  *(void *)uint64_t v20 = v34;
  *((void *)v20 + 1) = v18;
  *((_WORD *)v20 + 8) = v19;
  *(_OWORD *)(v20 + 24) = v37;
  *(_OWORD *)(v20 + 40) = v38;
  *(_OWORD *)(v20 + 56) = v39;
  char v40 = 3;
  sub_20A986720();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v30);
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  uint64_t v23 = &v12[v10[7]];
  *uint64_t v23 = v34;
  *((void *)v23 + 1) = v21;
  *((void *)v23 + 2) = v22;
  sub_20AA04FE8((uint64_t)v12, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_20AA0504C((uint64_t)v12);
}

void sub_20AA04F84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA04984();
    unint64_t v7 = a3(a1, &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA04FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA0504C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AdInterstitialImpressionEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA050A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AdInterstitialImpressionEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA050C0(void *a1)
{
  return AdInterstitialImpressionEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA050D8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533A0, MEMORY[0x263F24D18], (uint64_t)qword_2676548E8, a1);
}

uint64_t sub_20AA05110@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533A8, MEMORY[0x263F24DD8], (uint64_t)qword_267654900, a1);
}

uint64_t sub_20AA05148@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533B0, MEMORY[0x263F24DE8], (uint64_t)qword_267654918, a1);
}

uint64_t sub_20AA05180@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);

  return v12(v10, v4, v11);
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialImpressionEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for AdInterstitialImpressionEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t initializeWithCopy for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t initializeWithTake for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA05E00);
}

uint64_t sub_20AA05E00(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[7];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialImpressionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA0601C);
}

uint64_t sub_20AA0601C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_8:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_7:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_8;
  }
  sub_20AA03F40(0, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_7;
  }
  sub_20AA03F40(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[7];

  return v19(v21, a2, a2, v20);
}

void sub_20AA06230()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA03F40(319, &qword_267654930, (void (*)(void))sub_20AA03CF0, (void (*)(void))sub_20AA03D44);
      if (v2 <= 0x3F)
      {
        sub_20AA03F40(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for AdInterstitialImpressionEvent.Model(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    *((_WORD *)v14 + 8) = *((_WORD *)v15 + 8);
    uint64_t v17 = *((void *)v15 + 4);
    *((void *)v14 + 3) = *((void *)v15 + 3);
    *((void *)v14 + 4) = v17;
    uint64_t v18 = *((void *)v15 + 6);
    *((void *)v14 + 5) = *((void *)v15 + 5);
    *((void *)v14 + 6) = v18;
    uint64_t v19 = *((void *)v15 + 8);
    *((void *)v14 + 7) = *((void *)v15 + 7);
    *((void *)v14 + 8) = v19;
    uint64_t v20 = (char *)a1 + v13;
    uint64_t v21 = (char *)a2 + v13;
    *uint64_t v20 = *v21;
    uint64_t v22 = *((void *)v21 + 2);
    *((void *)v20 + 1) = *((void *)v21 + 1);
    *((void *)v20 + 2) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  uint64_t v15 = *(void *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(void *)(v13 + 8) = v15;
  *(_WORD *)(v13 + 16) = *(_WORD *)(v14 + 16);
  uint64_t v16 = *(void *)(v14 + 32);
  *(void *)(v13 + 24) = *(void *)(v14 + 24);
  *(void *)(v13 + 32) = v16;
  uint64_t v17 = *(void *)(v14 + 48);
  *(void *)(v13 + 40) = *(void *)(v14 + 40);
  *(void *)(v13 + 48) = v17;
  uint64_t v18 = *(void *)(v14 + 64);
  *(void *)(v13 + 56) = *(void *)(v14 + 56);
  *(void *)(v13 + 64) = v18;
  uint64_t v19 = a1 + v12;
  uint64_t v20 = a2 + v12;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(unsigned char *)(v12 + 17) = *(unsigned char *)(v13 + 17);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(void *)(v12 + 64) = *(void *)(v13 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  long long v15 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v13 + 48) = v15;
  *(void *)(v13 + 64) = *(void *)(v14 + 64);
  long long v16 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v16;
  uint64_t v17 = a1 + v12;
  uint64_t v18 = a2 + v12;
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  return a1;
}

uint64_t assignWithTake for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = v14;
  swift_bridgeObjectRelease();
  *(_WORD *)(v12 + 16) = *(_WORD *)(v13 + 16);
  uint64_t v15 = *(void *)(v13 + 32);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v13 + 48);
  *(void *)(v12 + 40) = *(void *)(v13 + 40);
  *(void *)(v12 + 48) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(v13 + 64);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  *(void *)(v12 + 64) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v21 = *(void *)(v20 + 16);
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA06B50);
}

uint64_t sub_20AA06B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for AdInterstitialImpressionEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA06C7C);
}

uint64_t sub_20AA06C7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA06D90()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AdInterstitialImpressionEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA06F38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdInterstitialImpressionEvent.Model.CodingKeys()
{
  return &type metadata for AdInterstitialImpressionEvent.Model.CodingKeys;
}

unint64_t sub_20AA06F74()
{
  unint64_t result = qword_267654980;
  if (!qword_267654980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654980);
  }
  return result;
}

unint64_t sub_20AA06FCC()
{
  unint64_t result = qword_267654988;
  if (!qword_267654988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654988);
  }
  return result;
}

unint64_t sub_20AA07024()
{
  unint64_t result = qword_267654990;
  if (!qword_267654990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654990);
  }
  return result;
}

uint64_t sub_20AA07078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617461446461 && a2 == 0xE600000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

StocksAnalytics::SymbolType_optional __swiftcall SymbolType.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t SymbolType.rawValue.getter()
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x797469757165;
      break;
    case 2:
      unint64_t result = 0x6E75467865646E69;
      break;
    case 3:
      unint64_t result = 0x75466C617574756DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x75636F7470797263;
      break;
    case 6:
      unint64_t result = 0x79636E6572727563;
      break;
    case 7:
      unint64_t result = 0x73657275747566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA073B0(unsigned __int8 *a1, char *a2)
{
  return sub_20AA395F4(*a1, *a2);
}

unint64_t sub_20AA073C0()
{
  unint64_t result = qword_267654998;
  if (!qword_267654998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654998);
  }
  return result;
}

uint64_t sub_20AA07414()
{
  return sub_20AB4E0AC();
}

uint64_t sub_20AA07420()
{
  return sub_20AB4DF64();
}

uint64_t sub_20AA07428()
{
  return sub_20AB4E0AC();
}

StocksAnalytics::SymbolType_optional sub_20AA07430(Swift::String *a1)
{
  return SymbolType.init(rawValue:)(*a1);
}

unint64_t sub_20AA0743C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SymbolType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20AA07464()
{
  return sub_20AB86750();
}

uint64_t sub_20AA074C4()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for SymbolType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA075E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolType()
{
  return &type metadata for SymbolType;
}

unint64_t sub_20AA07618()
{
  unint64_t result = qword_26AC4EB70;
  if (!qword_26AC4EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB70);
  }
  return result;
}

uint64_t static AdReferralData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t AdReferralData.qToken.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdReferralData.qToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdReferralData.qToken.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdReferralData __swiftcall AdReferralData.init(qToken:)(StocksAnalytics::AdReferralData qToken)
{
  *uint64_t v1 = qToken;
  return qToken;
}

uint64_t sub_20AA07704()
{
  return 0x6E656B6F5471;
}

uint64_t sub_20AA07718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656B6F5471 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA077A8(uint64_t a1)
{
  unint64_t v2 = sub_20AA0796C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA077E4(uint64_t a1)
{
  unint64_t v2 = sub_20AA0796C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdReferralData.encode(to:)(void *a1)
{
  sub_20AA07B44(0, &qword_2676549A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0796C();
  sub_20AB86DC0();
  sub_20AB86BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA0796C()
{
  unint64_t result = qword_2676549A8;
  if (!qword_2676549A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549A8);
  }
  return result;
}

uint64_t AdReferralData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA07B44(0, &qword_2676549B0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0796C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86AF0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA07B44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0796C();
    unint64_t v7 = a3(a1, &type metadata for AdReferralData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA07BAC()
{
  unint64_t result = qword_26AC4EFF0;
  if (!qword_26AC4EFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFF0);
  }
  return result;
}

unint64_t sub_20AA07C04()
{
  unint64_t result = qword_26AC4EFE8;
  if (!qword_26AC4EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFE8);
  }
  return result;
}

uint64_t sub_20AA07C58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AdReferralData.init(from:)(a1, a2);
}

uint64_t sub_20AA07C70(void *a1)
{
  sub_20AA07B44(0, &qword_2676549A0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0796C();
  sub_20AB86DC0();
  sub_20AB86BC0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for AdReferralData()
{
  return &type metadata for AdReferralData;
}

unsigned char *storeEnumTagSinglePayload for AdReferralData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA07E68);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdReferralData.CodingKeys()
{
  return &type metadata for AdReferralData.CodingKeys;
}

unint64_t sub_20AA07EA4()
{
  unint64_t result = qword_2676549B8;
  if (!qword_2676549B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549B8);
  }
  return result;
}

unint64_t sub_20AA07EFC()
{
  unint64_t result = qword_2676549C0;
  if (!qword_2676549C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549C0);
  }
  return result;
}

unint64_t sub_20AA07F54()
{
  unint64_t result = qword_2676549C8;
  if (!qword_2676549C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549C8);
  }
  return result;
}

StocksAnalytics::AdCreativeType_optional __swiftcall AdCreativeType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AdCreativeType.rawValue.getter()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x72656E6E6162;
      break;
    case 2:
      uint64_t result = 0x566C6C6F52657270;
      break;
    case 3:
      uint64_t result = 0x644165766974616ELL;
      break;
    case 4:
      uint64_t result = 0x6974737265746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA080BC(unsigned __int8 *a1, char *a2)
{
  return sub_20AA381F0(*a1, *a2);
}

unint64_t sub_20AA080CC()
{
  unint64_t result = qword_2676549D0;
  if (!qword_2676549D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549D0);
  }
  return result;
}

uint64_t sub_20AA08120()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA08224()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA08310()
{
  return sub_20AB86D80();
}

StocksAnalytics::AdCreativeType_optional sub_20AA08410(Swift::String *a1)
{
  return AdCreativeType.init(rawValue:)(*a1);
}

void sub_20AA0841C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E776F6E6B6E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x72656E6E6162;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "preRollVideo");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x644165766974616ELL;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 4:
      strcpy((char *)a1, "interstitial");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA084E4()
{
  return sub_20AB86750();
}

uint64_t sub_20AA08544()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AdCreativeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA08660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeType()
{
  return &type metadata for AdCreativeType;
}

unint64_t sub_20AA08698()
{
  unint64_t result = qword_26AC4EFD0;
  if (!qword_26AC4EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFD0);
  }
  return result;
}

uint64_t static SearchResultsData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SearchResultsData.results.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SearchResultsData.results.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*SearchResultsData.results.modify())()
{
  return nullsub_1;
}

StocksAnalytics::SearchResultsData __swiftcall SearchResultsData.init(results:)(StocksAnalytics::SearchResultsData results)
{
  v1->results._rawValue = results.results._rawValue;
  return results;
}

uint64_t sub_20AA08750()
{
  return 0x73746C75736572;
}

uint64_t sub_20AA08768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73746C75736572 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA08800(uint64_t a1)
{
  unint64_t v2 = sub_20AA08A00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0883C(uint64_t a1)
{
  unint64_t v2 = sub_20AA08A00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SearchResultsData.encode(to:)(void *a1)
{
  sub_20AA08C18(0, &qword_2676549D8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA08A00();
  sub_20AB86DC0();
  v10[1] = v8;
  sub_20A9B8470();
  sub_20A9B8DEC(&qword_26AC516D8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA08A00()
{
  unint64_t result = qword_2676549E0;
  if (!qword_2676549E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549E0);
  }
  return result;
}

uint64_t SearchResultsData.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20AA08C18(0, &qword_2676549E8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA08A00();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA08C18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA08A00();
    unint64_t v7 = a3(a1, &type metadata for SearchResultsData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA08C84@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SearchResultsData.init(from:)(a1, a2);
}

uint64_t sub_20AA08C9C(void *a1)
{
  return SearchResultsData.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for SearchResultsData()
{
  return &type metadata for SearchResultsData;
}

unsigned char *storeEnumTagSinglePayload for SearchResultsData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA08D60);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchResultsData.CodingKeys()
{
  return &type metadata for SearchResultsData.CodingKeys;
}

unint64_t sub_20AA08D9C()
{
  unint64_t result = qword_2676549F0;
  if (!qword_2676549F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549F0);
  }
  return result;
}

unint64_t sub_20AA08DF4()
{
  unint64_t result = qword_2676549F8;
  if (!qword_2676549F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676549F8);
  }
  return result;
}

unint64_t sub_20AA08E4C()
{
  unint64_t result = qword_267654A00;
  if (!qword_267654A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A00);
  }
  return result;
}

uint64_t static SymbolData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t SymbolData.symbol.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolData.symbol.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SymbolData.symbol.modify())()
{
  return nullsub_1;
}

void SymbolData.symbolType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *SymbolData.symbolType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*SymbolData.symbolType.modify())()
{
  return nullsub_1;
}

uint64_t SymbolData.exchange.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymbolData.exchange.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SymbolData.exchange.modify())()
{
  return nullsub_1;
}

void __swiftcall SymbolData.init(symbol:symbolType:exchange:)(StocksAnalytics::SymbolData *__return_ptr retstr, Swift::String symbol, StocksAnalytics::SymbolType symbolType, Swift::String exchange)
{
  StocksAnalytics::SymbolType v4 = *(unsigned char *)symbolType;
  retstr->symbol = symbol;
  retstr->symbolType = v4;
  retstr->exchange = exchange;
}

uint64_t sub_20AA09004()
{
  uint64_t v1 = 0x79546C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 0x65676E6168637865;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6F626D7973;
  }
}

uint64_t sub_20AA09060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA09AEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA09088(uint64_t a1)
{
  unint64_t v2 = sub_20AA092E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA090C4(uint64_t a1)
{
  unint64_t v2 = sub_20AA092E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymbolData.encode(to:)(void *a1)
{
  sub_20AA095F0(0, &qword_26AC51818, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)v11 - v6;
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  v11[1] = *(void *)(v1 + 32);
  void v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA092E0();
  sub_20AB86DC0();
  char v16 = 0;
  uint64_t v9 = v11[3];
  sub_20AB86C10();
  if (!v9)
  {
    char v15 = v12;
    char v14 = 1;
    sub_20AA09334();
    sub_20AB86C50();
    char v13 = 2;
    sub_20AB86C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA092E0()
{
  unint64_t result = qword_26AC4EB40;
  if (!qword_26AC4EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB40);
  }
  return result;
}

unint64_t sub_20AA09334()
{
  unint64_t result = qword_26AC4EB68;
  if (!qword_26AC4EB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB68);
  }
  return result;
}

uint64_t SymbolData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA095F0(0, &qword_267654A08, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA092E0();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v10 = sub_20AB86B40();
  uint64_t v12 = v11;
  char v22 = 1;
  sub_20AA09654();
  swift_bridgeObjectRetain();
  sub_20AB86B80();
  int v20 = v23;
  char v21 = 2;
  uint64_t v13 = sub_20AB86B40();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v19 = v13;
  v17(v9, v6);
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA095F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA092E0();
    unint64_t v7 = a3(a1, &type metadata for SymbolData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA09654()
{
  unint64_t result = qword_267654A10;
  if (!qword_267654A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A10);
  }
  return result;
}

uint64_t sub_20AA096B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SymbolData.init(from:)(a1, a2);
}

uint64_t sub_20AA096C8(void *a1)
{
  return SymbolData.encode(to:)(a1);
}

uint64_t destroy for SymbolData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SymbolData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolData()
{
  return &type metadata for SymbolData;
}

unsigned char *storeEnumTagSinglePayload for SymbolData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA099ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolData.CodingKeys()
{
  return &type metadata for SymbolData.CodingKeys;
}

unint64_t sub_20AA099E8()
{
  unint64_t result = qword_267654A18;
  if (!qword_267654A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A18);
  }
  return result;
}

unint64_t sub_20AA09A40()
{
  unint64_t result = qword_26AC4EB50;
  if (!qword_26AC4EB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB50);
  }
  return result;
}

unint64_t sub_20AA09A98()
{
  unint64_t result = qword_26AC4EB48;
  if (!qword_26AC4EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB48);
  }
  return result;
}

uint64_t sub_20AA09AEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79546C6F626D7973 && a2 == 0xEA00000000006570 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65676E6168637865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

StocksAnalytics::OsInstallVariant_optional __swiftcall OsInstallVariant.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t OsInstallVariant.rawValue.getter()
{
  uint64_t v1 = 0x6C616E7265746E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C616E7265747865;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA09CF4(char *a1, unsigned __int8 *a2)
{
  return sub_20AA37744(*a1, *a2);
}

unint64_t sub_20AA09D04()
{
  unint64_t result = qword_267654A20;
  if (!qword_267654A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A20);
  }
  return result;
}

uint64_t sub_20AA09D58()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA09DF0()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA09E74()
{
  return sub_20AB86D80();
}

StocksAnalytics::OsInstallVariant_optional sub_20AA09F08(Swift::String *a1)
{
  return OsInstallVariant.init(rawValue:)(*a1);
}

void sub_20AA09F14(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6C616E7265746E69;
  if (v2 != 1) {
    uint64_t v4 = 0x6C616E7265747865;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6E776F6E6B6E75;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_20AA09F68()
{
  return sub_20AB86750();
}

uint64_t sub_20AA09FC8()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for OsInstallVariant(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0A0E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OsInstallVariant()
{
  return &type metadata for OsInstallVariant;
}

unint64_t sub_20AA0A11C()
{
  unint64_t result = qword_26AC4F5A0;
  if (!qword_26AC4F5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F5A0);
  }
  return result;
}

uint64_t static PaywallData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void PaywallData.paywallType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *PaywallData.paywallType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*PaywallData.paywallType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::PaywallData __swiftcall PaywallData.init(paywallType:)(StocksAnalytics::PaywallData paywallType)
{
  *uint64_t v1 = *(unsigned char *)paywallType.paywallType;
  return paywallType;
}

uint64_t sub_20AA0A1BC()
{
  return 0x546C6C6177796170;
}

uint64_t sub_20AA0A1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x546C6C6177796170 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA0A28C(uint64_t a1)
{
  unint64_t v2 = sub_20AA0A460();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0A2C8(uint64_t a1)
{
  unint64_t v2 = sub_20AA0A460();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PaywallData.encode(to:)(void *a1)
{
  sub_20AA0A6A0(0, &qword_26AC51828, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0A460();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA0A4B4();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA0A460()
{
  unint64_t result = qword_26AC4EBF0;
  if (!qword_26AC4EBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBF0);
  }
  return result;
}

unint64_t sub_20AA0A4B4()
{
  unint64_t result = qword_26AC4EC18;
  if (!qword_26AC4EC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC18);
  }
  return result;
}

uint64_t PaywallData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA0A6A0(0, &qword_267654A28, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0A460();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA0A704();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA0A6A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0A460();
    unint64_t v7 = a3(a1, &type metadata for PaywallData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA0A704()
{
  unint64_t result = qword_267654A30;
  if (!qword_267654A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A30);
  }
  return result;
}

uint64_t sub_20AA0A760@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return PaywallData.init(from:)(a1, a2);
}

uint64_t sub_20AA0A778(void *a1)
{
  return PaywallData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for PaywallData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0A85CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallData()
{
  return &type metadata for PaywallData;
}

unsigned char *storeEnumTagSinglePayload for PaywallData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA0A930);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaywallData.CodingKeys()
{
  return &type metadata for PaywallData.CodingKeys;
}

unint64_t sub_20AA0A96C()
{
  unint64_t result = qword_267654A38;
  if (!qword_267654A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A38);
  }
  return result;
}

unint64_t sub_20AA0A9C4()
{
  unint64_t result = qword_26AC4EC00;
  if (!qword_26AC4EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC00);
  }
  return result;
}

unint64_t sub_20AA0AA1C()
{
  unint64_t result = qword_26AC4EBF8;
  if (!qword_26AC4EBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EBF8);
  }
  return result;
}

uint64_t static InGroupPositionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t InGroupPositionData.position.getter()
{
  return *v0;
}

uint64_t InGroupPositionData.position.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*InGroupPositionData.position.modify())()
{
  return nullsub_1;
}

uint64_t InGroupPositionData.init(position:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_20AA0AAB0()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_20AA0AAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA0AB60(uint64_t a1)
{
  unint64_t v2 = sub_20AA0AD20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0AB9C(uint64_t a1)
{
  unint64_t v2 = sub_20AA0AD20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InGroupPositionData.encode(to:)(void *a1)
{
  sub_20AA0AEF4(0, &qword_26AC518C0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0AD20();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA0AD20()
{
  unint64_t result = qword_26AC4FE98;
  if (!qword_26AC4FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FE98);
  }
  return result;
}

uint64_t InGroupPositionData.init(from:)@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  sub_20AA0AEF4(0, &qword_26AC52650, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0AD20();
  sub_20AB86DA0();
  if (!v2)
  {
    int v10 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA0AEF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0AD20();
    unint64_t v7 = a3(a1, &type metadata for InGroupPositionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA0AF60@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  return InGroupPositionData.init(from:)(a1, a2);
}

uint64_t sub_20AA0AF78(void *a1)
{
  sub_20AA0AEF4(0, &qword_26AC518C0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0AD20();
  sub_20AB86DC0();
  sub_20AB86C60();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for InGroupPositionData()
{
  return &type metadata for InGroupPositionData;
}

unsigned char *storeEnumTagSinglePayload for InGroupPositionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA0B16CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InGroupPositionData.CodingKeys()
{
  return &type metadata for InGroupPositionData.CodingKeys;
}

unint64_t sub_20AA0B1A8()
{
  unint64_t result = qword_267654A40;
  if (!qword_267654A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A40);
  }
  return result;
}

unint64_t sub_20AA0B200()
{
  unint64_t result = qword_26AC4FEA8;
  if (!qword_26AC4FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEA8);
  }
  return result;
}

unint64_t sub_20AA0B258()
{
  unint64_t result = qword_26AC4FEA0;
  if (!qword_26AC4FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4FEA0);
  }
  return result;
}

uint64_t static AudioEngagementOriginationData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AudioEngagementOriginationData.audioEngagementOrigin.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AudioEngagementOriginationData.audioEngagementOrigin.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AudioEngagementOriginationData.audioEngagementOrigin.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AudioEngagementOriginationData __swiftcall AudioEngagementOriginationData.init(audioEngagementOrigin:)(StocksAnalytics::AudioEngagementOriginationData audioEngagementOrigin)
{
  *uint64_t v1 = *(unsigned char *)audioEngagementOrigin.audioEngagementOrigin;
  return audioEngagementOrigin;
}

unint64_t sub_20AA0B2F8()
{
  return 0xD000000000000015;
}

uint64_t sub_20AA0B314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA0BB24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AA0B340(uint64_t a1)
{
  unint64_t v2 = sub_20AA0B514();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0B37C(uint64_t a1)
{
  unint64_t v2 = sub_20AA0B514();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AudioEngagementOriginationData.encode(to:)(void *a1)
{
  sub_20AA0B754(0, &qword_267654A48, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0B514();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA0B568();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA0B514()
{
  unint64_t result = qword_267654A50;
  if (!qword_267654A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A50);
  }
  return result;
}

unint64_t sub_20AA0B568()
{
  unint64_t result = qword_267654A58;
  if (!qword_267654A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A58);
  }
  return result;
}

uint64_t AudioEngagementOriginationData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA0B754(0, &qword_267654A60, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0B514();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA0B7B8();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA0B754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0B514();
    unint64_t v7 = a3(a1, &type metadata for AudioEngagementOriginationData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA0B7B8()
{
  unint64_t result = qword_267654A68;
  if (!qword_267654A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A68);
  }
  return result;
}

uint64_t sub_20AA0B814@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AudioEngagementOriginationData.init(from:)(a1, a2);
}

uint64_t sub_20AA0B82C(void *a1)
{
  return AudioEngagementOriginationData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementOriginationData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0B910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData()
{
  return &type metadata for AudioEngagementOriginationData;
}

unsigned char *storeEnumTagSinglePayload for AudioEngagementOriginationData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA0B9E4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioEngagementOriginationData.CodingKeys()
{
  return &type metadata for AudioEngagementOriginationData.CodingKeys;
}

unint64_t sub_20AA0BA20()
{
  unint64_t result = qword_267654A70;
  if (!qword_267654A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A70);
  }
  return result;
}

unint64_t sub_20AA0BA78()
{
  unint64_t result = qword_267654A78;
  if (!qword_267654A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A78);
  }
  return result;
}

unint64_t sub_20AA0BAD0()
{
  unint64_t result = qword_267654A80;
  if (!qword_267654A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A80);
  }
  return result;
}

uint64_t sub_20AA0BB24(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000020ABA7B00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20AA0BBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v37 = a2;
  uint64_t v39 = a1;
  uint64_t v5 = sub_20AB851F0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_20AB850A0();
  uint64_t v7 = *(void *)(v33 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v33);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  char v12 = (char *)&v32 - v11;
  sub_20AA0C064();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20AB85990();
  MEMORY[0x270FA5388](v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v32 - v19, v39, v18);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_20AB85090();
    uint64_t v21 = v33;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v33);
    unint64_t v22 = sub_20AA0C2D8(0, 1, 1, MEMORY[0x263F8EE78], &qword_26AC52660, MEMORY[0x263F06338], MEMORY[0x263F06338]);
    unint64_t v24 = *(void *)(v22 + 16);
    unint64_t v23 = *(void *)(v22 + 24);
    uint64_t v25 = v12;
    if (v24 >= v23 >> 1) {
      unint64_t v22 = sub_20AA0C2D8(v23 > 1, v24 + 1, 1, v22, &qword_26AC52660, MEMORY[0x263F06338], MEMORY[0x263F06338]);
    }
    *(void *)(v22 + 16) = v24 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v24, v10, v21);
    uint64_t v26 = v34;
    sub_20AB851E0();
    uint64_t v27 = sub_20AB851D0();
    uint64_t v29 = v28;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v36);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v21);
    *(void *)a4 = v22;
    *(_OWORD *)(a4 + 8) = 0u;
    *(_OWORD *)(a4 + 24) = 0u;
    *(_OWORD *)(a4 + 40) = 0u;
    *(_OWORD *)(a4 + 56) = 0u;
    *(void *)(a4 + 72) = 0;
    *(void *)(a4 + 80) = 3;
    uint64_t v30 = v38;
    *(void *)(a4 + 88) = v37;
    *(void *)(a4 + 96) = v30;
    *(void *)(a4 + 104) = v27;
    *(void *)(a4 + 112) = v29;
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_20AA0C120();
    swift_allocError();
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for AppSessionStartEventQueryItemsGenerator()
{
  return self;
}

uint64_t sub_20AA0C04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_20AA0BBAC(a1, a2, a3, a4);
}

void sub_20AA0C064()
{
  if (!qword_26AC4E580)
  {
    type metadata accessor for AppSessionStartEvent(255);
    sub_20AA0C0C8();
    unint64_t v0 = sub_20AB85990();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E580);
    }
  }
}

unint64_t sub_20AA0C0C8()
{
  unint64_t result = qword_26AC50118;
  if (!qword_26AC50118)
  {
    type metadata accessor for AppSessionStartEvent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50118);
  }
  return result;
}

unint64_t sub_20AA0C120()
{
  unint64_t result = qword_26AC52658;
  if (!qword_26AC52658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52658);
  }
  return result;
}

void *sub_20AA0C174(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_20AA0C804(0, (unint64_t *)&qword_26AC519D0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20AA0C560(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20AA0C290(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20AA0C2D8(a1, a2, a3, a4, &qword_26AC52660, MEMORY[0x263F06338], MEMORY[0x263F06338]);
}

uint64_t sub_20AA0C2B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20AA0C2D8(a1, a2, a3, a4, &qword_26AC51978, MEMORY[0x263F07490], MEMORY[0x263F07490]);
}

uint64_t sub_20AA0C2D8(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_20AA0C654(0, a5, a6);
  uint64_t v15 = *(void *)(a7(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_20AB86A40();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a7(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_20AA0C6A8(0, v13, v23, a4, (uint64_t (*)(void))a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_20AA0C560(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

void sub_20AA0C654(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20AB86C90();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20AA0C6A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_20AB86AB0();
  __break(1u);
  return result;
}

void sub_20AA0C804(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20AB86C90();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t static FeedViewExperienceData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t FeedViewExperienceData.isNewsFreeExperience.getter()
{
  return *v0;
}

uint64_t FeedViewExperienceData.isNewsFreeExperience.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FeedViewExperienceData.isNewsFreeExperience.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewExperienceData.numberOfArticles.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t FeedViewExperienceData.numberOfArticles.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*FeedViewExperienceData.numberOfArticles.modify())()
{
  return nullsub_1;
}

uint64_t FeedViewExperienceData.init(isNewsFreeExperience:numberOfArticles:)@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = result;
  *(_DWORD *)(a3 + 4) = a2;
  return result;
}

unint64_t sub_20AA0C8C0()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0xD000000000000014;
  }
}

uint64_t sub_20AA0C900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA0D120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA0C928(uint64_t a1)
{
  unint64_t v2 = sub_20AA0CB20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0C964(uint64_t a1)
{
  unint64_t v2 = sub_20AA0CB20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedViewExperienceData.encode(to:)(void *a1)
{
  sub_20AA0CD2C(0, &qword_26AC51900, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - v7;
  int v11 = *(_DWORD *)(v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0CB20();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB86C20();
  if (!v2)
  {
    char v12 = 1;
    sub_20AB86C60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA0CB20()
{
  unint64_t result = qword_26AC50858;
  if (!qword_26AC50858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50858);
  }
  return result;
}

uint64_t FeedViewExperienceData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA0CD2C(0, &qword_26AC517C0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0CB20();
  sub_20AB86DA0();
  if (!v2)
  {
    char v15 = 0;
    char v10 = sub_20AB86B50();
    char v14 = 1;
    int v12 = sub_20AB86B90();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v10 & 1;
    *(_DWORD *)(a2 + 4) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA0CD2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0CB20();
    unint64_t v7 = a3(a1, &type metadata for FeedViewExperienceData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA0CD94()
{
  unint64_t result = qword_26AC50878;
  if (!qword_26AC50878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50878);
  }
  return result;
}

unint64_t sub_20AA0CDEC()
{
  unint64_t result = qword_26AC50870;
  if (!qword_26AC50870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50870);
  }
  return result;
}

uint64_t sub_20AA0CE40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeedViewExperienceData.init(from:)(a1, a2);
}

uint64_t sub_20AA0CE58(void *a1)
{
  return FeedViewExperienceData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for FeedViewExperienceData(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedViewExperienceData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedViewExperienceData()
{
  return &type metadata for FeedViewExperienceData;
}

unsigned char *storeEnumTagSinglePayload for FeedViewExperienceData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0CFE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedViewExperienceData.CodingKeys()
{
  return &type metadata for FeedViewExperienceData.CodingKeys;
}

unint64_t sub_20AA0D01C()
{
  unint64_t result = qword_267654A88;
  if (!qword_267654A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654A88);
  }
  return result;
}

unint64_t sub_20AA0D074()
{
  unint64_t result = qword_26AC50868;
  if (!qword_26AC50868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50868);
  }
  return result;
}

unint64_t sub_20AA0D0CC()
{
  unint64_t result = qword_26AC50860;
  if (!qword_26AC50860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50860);
  }
  return result;
}

uint64_t sub_20AA0D120(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA7C60 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7C80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AA0D20C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_26AC51200, MEMORY[0x263F24D10]);
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51218, MEMORY[0x263F24D18], (uint64_t)qword_26AC51200, a1);
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA0D274(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_26AC51220, MEMORY[0x263F24DC8]);
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_26AC51238, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51220, a1);
}

uint64_t sub_20AA0D2D4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654A90);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654A90);
  return sub_20AB85D30();
}

uint64_t static UserSegmentationTreatmentIDsChangeEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533B8, MEMORY[0x263F24DE8], (uint64_t)qword_267654A90, a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*UserSegmentationTreatmentIDsChangeEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_20AA0D490();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC51248);
}

void sub_20AA0D490()
{
  if (!qword_26AC4E680)
  {
    sub_20AA0D4F8();
    sub_20AA0D54C();
    unint64_t v0 = sub_20AB85A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E680);
    }
  }
}

unint64_t sub_20AA0D4F8()
{
  unint64_t result = qword_26AC50F80;
  if (!qword_26AC50F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F80);
  }
  return result;
}

unint64_t sub_20AA0D54C()
{
  unint64_t result = qword_26AC50F78;
  if (!qword_26AC50F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50F78);
  }
  return result;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_20AA0D490();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*UserSegmentationTreatmentIDsChangeEvent.userSegmentationTreatmentData.modify())()
{
  return nullsub_1;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent(0) + 20);
  sub_20AA0D490();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v4, v2, v5);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.userSegmentationTreatmentData.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0) + 20));

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654AC0);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.init(eventData:userSegmentationTreatmentData:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  *(void *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_20AA0D818()
{
  if (*v0) {
    return 0xD00000000000001DLL;
  }
  else {
    return 0x746144746E657665;
  }
}

uint64_t sub_20AA0D85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA0F040(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA0D884(uint64_t a1)
{
  unint64_t v2 = sub_20AA0DAC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0D8C0(uint64_t a1)
{
  unint64_t v2 = sub_20AA0DAC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA0DE6C(0, &qword_267654AA8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0DAC8();
  sub_20AB86DC0();
  char v13 = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + *(int *)(type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0) + 20));
    v11[15] = 1;
    sub_20AA0D54C();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA0DAC8()
{
  unint64_t result = qword_267654AB0;
  if (!qword_267654AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654AB0);
  }
  return result;
}

uint64_t UserSegmentationTreatmentIDsChangeEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v24 = sub_20AB85FC0();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA0DE6C(0, &qword_267654AB8, MEMORY[0x263F8E040]);
  uint64_t v25 = v6;
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0DAC8();
  sub_20AB86DA0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = v11;
  uint64_t v13 = v22;
  char v28 = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  uint64_t v14 = v24;
  sub_20AB86B80();
  char v15 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v20 = (uint64_t)v12;
  v15(v12, v5, v14);
  char v27 = 1;
  sub_20AA0D4F8();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v25);
  uint64_t v17 = v20;
  uint64_t v16 = v21;
  *(void *)(v20 + *(int *)(v9 + 20)) = v26;
  sub_20AA0DED0(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20AA0DF34(v17);
}

void sub_20AA0DE6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0DAC8();
    unint64_t v7 = a3(a1, &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA0DED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA0DF34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA0DF90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return UserSegmentationTreatmentIDsChangeEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA0DFA8(void *a1)
{
  return UserSegmentationTreatmentIDsChangeEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA0DFC0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51218, MEMORY[0x263F24D18], (uint64_t)qword_26AC51200, a1);
}

uint64_t sub_20AA0DFF8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_26AC51238, MEMORY[0x263F24DD8], (uint64_t)qword_26AC51220, a1);
}

uint64_t sub_20AA0E030@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533B8, MEMORY[0x263F24DE8], (uint64_t)qword_267654A90, a1);
}

uint64_t sub_20AA0E068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  sub_20AA0D490();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);

  return v8(v6, v4, v7);
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationTreatmentIDsChangeEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA0D490();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_20AA0D490();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA0D490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA0D490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA0D490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA0D490();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA0E5D0);
}

uint64_t sub_20AA0E5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20AA0D490();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA0E6DC);
}

uint64_t sub_20AA0E6DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20AA0D490();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_20AA0E7E0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA0D490();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1)
{
  uint64_t v2 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA0EC0C);
}

uint64_t sub_20AA0EC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA0ECE0);
}

uint64_t sub_20AA0ECE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA0ED9C()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA0EF00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys()
{
  return &type metadata for UserSegmentationTreatmentIDsChangeEvent.Model.CodingKeys;
}

unint64_t sub_20AA0EF3C()
{
  unint64_t result = qword_267654AD0;
  if (!qword_267654AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654AD0);
  }
  return result;
}

unint64_t sub_20AA0EF94()
{
  unint64_t result = qword_267654AD8;
  if (!qword_267654AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654AD8);
  }
  return result;
}

unint64_t sub_20AA0EFEC()
{
  unint64_t result = qword_267654AE0;
  if (!qword_267654AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654AE0);
  }
  return result;
}

uint64_t sub_20AA0F040(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000020ABA7CA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_20AA0F13C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654AE8, MEMORY[0x263F24D10]);
}

uint64_t static ReorderWatchlistEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533C0, MEMORY[0x263F24D18], (uint64_t)qword_267654AE8, a1);
}

uint64_t static ReorderWatchlistEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA0F1A4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654B00, MEMORY[0x263F24DC8]);
}

uint64_t static ReorderWatchlistEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533C8, MEMORY[0x263F24DD8], (uint64_t)qword_267654B00, a1);
}

uint64_t sub_20AA0F204()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654B18);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654B18);
  return sub_20AB85D30();
}

uint64_t static ReorderWatchlistEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533D0, MEMORY[0x263F24DE8], (uint64_t)qword_267654B18, a1);
}

uint64_t ReorderWatchlistEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ReorderWatchlistEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ReorderWatchlistEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ReorderWatchlistEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t ReorderWatchlistEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ReorderWatchlistEvent.Model.init(eventData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_20AA0F420(uint64_t a1)
{
  unint64_t v2 = sub_20AA0F60C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA0F45C(uint64_t a1)
{
  unint64_t v2 = sub_20AA0F60C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ReorderWatchlistEvent.Model.encode(to:)(void *a1)
{
  sub_20AA0F8F8(0, &qword_267654B30, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0F60C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA0F60C()
{
  unint64_t result = qword_267654B38;
  if (!qword_267654B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B38);
  }
  return result;
}

uint64_t ReorderWatchlistEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = sub_20AB85FC0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA0F8F8(0, &qword_267654B40, MEMORY[0x263F8E040]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = type metadata accessor for ReorderWatchlistEvent.Model(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0F60C();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v20, v4);
    sub_20AA0F97C((uint64_t)v12, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA0F8F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA0F60C();
    unint64_t v7 = a3(a1, &type metadata for ReorderWatchlistEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for ReorderWatchlistEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654B58);
}

uint64_t sub_20AA0F97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReorderWatchlistEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA0F9E0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ReorderWatchlistEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA0F9F8(void *a1)
{
  sub_20AA0F8F8(0, &qword_267654B30, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA0F60C();
  sub_20AB86DC0();
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20AA0FB6C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533C0, MEMORY[0x263F24D18], (uint64_t)qword_267654AE8, a1);
}

uint64_t sub_20AA0FBA4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533C8, MEMORY[0x263F24DD8], (uint64_t)qword_267654B00, a1);
}

uint64_t sub_20AA0FBDC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533D0, MEMORY[0x263F24DE8], (uint64_t)qword_267654B18, a1);
}

uint64_t getEnumTagSinglePayload for ReorderWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA0FC28);
}

uint64_t sub_20AA0FC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t storeEnumTagSinglePayload for ReorderWatchlistEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA0FC54);
}

uint64_t sub_20AA0FC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))sub_20A97BF54);
}

uint64_t type metadata accessor for ReorderWatchlistEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654B48);
}

uint64_t getEnumTagSinglePayload for ReorderWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA0FCA0);
}

uint64_t sub_20AA0FCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, MEMORY[0x263F24E70]);
}

uint64_t storeEnumTagSinglePayload for ReorderWatchlistEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA0FCCC);
}

uint64_t sub_20AA0FCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, MEMORY[0x263F24E70]);
}

unsigned char *storeEnumTagSinglePayload for ReorderWatchlistEvent.Model.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA0FD80);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReorderWatchlistEvent.Model.CodingKeys()
{
  return &type metadata for ReorderWatchlistEvent.Model.CodingKeys;
}

unint64_t sub_20AA0FDBC()
{
  unint64_t result = qword_267654B68;
  if (!qword_267654B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B68);
  }
  return result;
}

unint64_t sub_20AA0FE14()
{
  unint64_t result = qword_267654B70;
  if (!qword_267654B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B70);
  }
  return result;
}

unint64_t sub_20AA0FE6C()
{
  unint64_t result = qword_267654B78;
  if (!qword_267654B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B78);
  }
  return result;
}

StocksAnalytics::AdState_optional __swiftcall AdState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t AdState.rawValue.getter()
{
  uint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E69646E6570;
      break;
    case 2:
      uint64_t result = 0x64656C696166;
      break;
    case 3:
      uint64_t result = 0x656C6C69666C7566;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA0FFA8(unsigned __int8 *a1, char *a2)
{
  return sub_20AA344C0(*a1, *a2);
}

unint64_t sub_20AA0FFB8()
{
  unint64_t result = qword_267654B80;
  if (!qword_267654B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B80);
  }
  return result;
}

uint64_t sub_20AA1000C()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA100E4()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA101A4()
{
  return sub_20AB86D80();
}

StocksAnalytics::AdState_optional sub_20AA10278(Swift::String *a1)
{
  return AdState.init(rawValue:)(*a1);
}

void sub_20AA10284(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C616974696E69;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x676E69646E6570;
      goto LABEL_3;
    case 2:
      *a1 = 0x64656C696166;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x656C6C69666C7566;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE700000000000000;
      break;
  }
}

uint64_t sub_20AA1031C()
{
  return sub_20AB86750();
}

uint64_t sub_20AA1037C()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for AdState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA10498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdState()
{
  return &type metadata for AdState;
}

unint64_t sub_20AA104D0()
{
  unint64_t result = qword_26AC52248;
  if (!qword_26AC52248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52248);
  }
  return result;
}

uint64_t static ActionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void ActionData.actionMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ActionData.actionMethod.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*ActionData.actionMethod.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ActionData __swiftcall ActionData.init(actionMethod:)(StocksAnalytics::ActionData actionMethod)
{
  *uint64_t v1 = *(unsigned char *)actionMethod.actionMethod;
  return actionMethod;
}

uint64_t sub_20AA10570()
{
  return 0x654D6E6F69746361;
}

uint64_t sub_20AA10590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x654D6E6F69746361 && a2 == 0xEC000000646F6874)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA10640(uint64_t a1)
{
  unint64_t v2 = sub_20AA10814();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA1067C(uint64_t a1)
{
  unint64_t v2 = sub_20AA10814();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ActionData.encode(to:)(void *a1)
{
  sub_20AA10A54(0, &qword_267654B88, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA10814();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA10868();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA10814()
{
  unint64_t result = qword_267654B90;
  if (!qword_267654B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B90);
  }
  return result;
}

unint64_t sub_20AA10868()
{
  unint64_t result = qword_267654B98;
  if (!qword_267654B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654B98);
  }
  return result;
}

uint64_t ActionData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA10A54(0, &qword_267654BA0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA10814();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA10AB8();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA10A54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA10814();
    unint64_t v7 = a3(a1, &type metadata for ActionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA10AB8()
{
  unint64_t result = qword_267654BA8;
  if (!qword_267654BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BA8);
  }
  return result;
}

uint64_t sub_20AA10B14@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ActionData.init(from:)(a1, a2);
}

uint64_t sub_20AA10B2C(void *a1)
{
  return ActionData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for ActionData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA10C10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionData()
{
  return &type metadata for ActionData;
}

unsigned char *storeEnumTagSinglePayload for ActionData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA10CE4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionData.CodingKeys()
{
  return &type metadata for ActionData.CodingKeys;
}

unint64_t sub_20AA10D20()
{
  unint64_t result = qword_267654BB0;
  if (!qword_267654BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BB0);
  }
  return result;
}

unint64_t sub_20AA10D78()
{
  unint64_t result = qword_267654BB8;
  if (!qword_267654BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BB8);
  }
  return result;
}

unint64_t sub_20AA10DD0()
{
  unint64_t result = qword_267654BC0;
  if (!qword_267654BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BC0);
  }
  return result;
}

uint64_t static AdCreativeData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AdCreativeData.type.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AdCreativeData.type.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AdCreativeData.type.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AdCreativeData __swiftcall AdCreativeData.init(type:)(StocksAnalytics::AdCreativeData type)
{
  *uint64_t v1 = *(unsigned char *)type.type;
  return type;
}

uint64_t sub_20AA10E70()
{
  return 1701869940;
}

uint64_t sub_20AA10E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA10F08(uint64_t a1)
{
  unint64_t v2 = sub_20AA110DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA10F44(uint64_t a1)
{
  unint64_t v2 = sub_20AA110DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AdCreativeData.encode(to:)(void *a1)
{
  sub_20AA1131C(0, &qword_26AC51860, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA110DC();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA11130();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA110DC()
{
  unint64_t result = qword_26AC4EFA0;
  if (!qword_26AC4EFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFA0);
  }
  return result;
}

unint64_t sub_20AA11130()
{
  unint64_t result = qword_26AC4EFC8;
  if (!qword_26AC4EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFC8);
  }
  return result;
}

uint64_t AdCreativeData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA1131C(0, &qword_267654BC8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA110DC();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA11380();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA1131C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA110DC();
    unint64_t v7 = a3(a1, &type metadata for AdCreativeData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA11380()
{
  unint64_t result = qword_267654BD0;
  if (!qword_267654BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BD0);
  }
  return result;
}

unint64_t sub_20AA113D8()
{
  unint64_t result = qword_26AC4EFC0;
  if (!qword_26AC4EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFC0);
  }
  return result;
}

unint64_t sub_20AA11430()
{
  unint64_t result = qword_26AC4EFB8;
  if (!qword_26AC4EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFB8);
  }
  return result;
}

uint64_t sub_20AA11484@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AdCreativeData.init(from:)(a1, a2);
}

uint64_t sub_20AA1149C(void *a1)
{
  return AdCreativeData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AdCreativeData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA11580);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeData()
{
  return &type metadata for AdCreativeData;
}

unsigned char *storeEnumTagSinglePayload for AdCreativeData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA11654);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdCreativeData.CodingKeys()
{
  return &type metadata for AdCreativeData.CodingKeys;
}

unint64_t sub_20AA11690()
{
  unint64_t result = qword_267654BD8;
  if (!qword_267654BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BD8);
  }
  return result;
}

unint64_t sub_20AA116E8()
{
  unint64_t result = qword_26AC4EFB0;
  if (!qword_26AC4EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFB0);
  }
  return result;
}

unint64_t sub_20AA11740()
{
  unint64_t result = qword_26AC4EFA8;
  if (!qword_26AC4EFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EFA8);
  }
  return result;
}

uint64_t static DebugData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t DebugData.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DebugData.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DebugData.name.modify())()
{
  return nullsub_1;
}

StocksAnalytics::DebugData __swiftcall DebugData.init(name:)(StocksAnalytics::DebugData name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t sub_20AA1182C()
{
  return 1701667182;
}

uint64_t sub_20AA1183C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA118C4(uint64_t a1)
{
  unint64_t v2 = sub_20AA11A88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA11900(uint64_t a1)
{
  unint64_t v2 = sub_20AA11A88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DebugData.encode(to:)(void *a1)
{
  sub_20AA11C60(0, &qword_267654BE0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA11A88();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA11A88()
{
  unint64_t result = qword_267654BE8;
  if (!qword_267654BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BE8);
  }
  return result;
}

uint64_t DebugData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA11C60(0, &qword_267654BF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA11A88();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA11C60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA11A88();
    unint64_t v7 = a3(a1, &type metadata for DebugData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA11CC8()
{
  unint64_t result = qword_26AC515B8;
  if (!qword_26AC515B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515B8);
  }
  return result;
}

unint64_t sub_20AA11D20()
{
  unint64_t result = qword_26AC515B0;
  if (!qword_26AC515B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC515B0);
  }
  return result;
}

uint64_t sub_20AA11D74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DebugData.init(from:)(a1, a2);
}

uint64_t sub_20AA11D8C(void *a1)
{
  sub_20AA11C60(0, &qword_267654BE0, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA11A88();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for DebugData()
{
  return &type metadata for DebugData;
}

unsigned char *storeEnumTagSinglePayload for DebugData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA11F84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugData.CodingKeys()
{
  return &type metadata for DebugData.CodingKeys;
}

unint64_t sub_20AA11FC0()
{
  unint64_t result = qword_267654BF8;
  if (!qword_267654BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654BF8);
  }
  return result;
}

unint64_t sub_20AA12018()
{
  unint64_t result = qword_267654C00;
  if (!qword_267654C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C00);
  }
  return result;
}

unint64_t sub_20AA12070()
{
  unint64_t result = qword_267654C08;
  if (!qword_267654C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C08);
  }
  return result;
}

uint64_t sub_20AA120C4(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654C10, MEMORY[0x263F24D10]);
}

uint64_t static ShareEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533D8, MEMORY[0x263F24D18], (uint64_t)qword_267654C10, a1);
}

uint64_t static ShareEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA1212C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654C28, MEMORY[0x263F24DC8]);
}

uint64_t static ShareEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533E0, MEMORY[0x263F24DD8], (uint64_t)qword_267654C28, a1);
}

uint64_t sub_20AA1218C()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654C40);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654C40);
  return sub_20AB85D30();
}

uint64_t static ShareEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533E8, MEMORY[0x263F24DE8], (uint64_t)qword_267654C40, a1);
}

uint64_t ShareEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t ShareEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*ShareEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShareEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC526D8);
}

uint64_t ShareEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 20);
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.actionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.actionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 24);
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.actionData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 28);
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 28);
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 32);
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 32);
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 36);
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 36);
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.userArticleContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 40);
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.userArticleContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 40);
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.userArticleContextData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.shareContextData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 44);
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA12D70()
{
  unint64_t result = qword_26AC52670;
  if (!qword_26AC52670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52670);
  }
  return result;
}

unint64_t sub_20AA12DC4()
{
  unint64_t result = qword_26AC52678;
  if (!qword_26AC52678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC52678);
  }
  return result;
}

uint64_t ShareEvent.shareContextData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 44);
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.shareContextData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.issueData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 48);
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ShareEvent.issueData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 48);
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.issueData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 52);
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA13168(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t ShareEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent(0) + 52);
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*ShareEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t ShareEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for ShareEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = *MEMORY[0x263F24D30];
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v9, v10, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v10, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v10, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v10, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104);

  return v24(v22, v2, v23);
}

uint64_t ShareEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t ShareEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 20));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  uint64_t v9 = v3[5];
  char v10 = *((unsigned char *)v3 + 48);
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  char v13 = *((unsigned char *)v3 + 65);
  char v14 = *((unsigned char *)v3 + 66);
  LOBYTE(v3) = *((unsigned char *)v3 + 67);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 65) = v13;
  *(unsigned char *)(a1 + 66) = v14;
  *(unsigned char *)(a1 + 67) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ShareEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, qword_26AC52788);
}

uint64_t ShareEvent.Model.actionData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShareEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t ShareEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 28));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t ShareEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 32);
  uint64_t v4 = *(void *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 36));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.userArticleContextData.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for ShareEvent.Model(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t ShareEvent.Model.shareContextData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 44));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.issueData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 48));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t ShareEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ShareEvent.Model(0) + 52));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 ShareEvent.Model.init(eventData:newsArticleData:actionData:groupData:feedData:viewData:userArticleContextData:shareContextData:issueData:channelData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X2>, long long *a4@<X3>, long long *a5@<X4>, uint64_t *a6@<X5>, __int16 *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, __n128 *a11)
{
  long long v33 = *a2;
  uint64_t v13 = *((void *)a2 + 2);
  uint64_t v14 = *((void *)a2 + 3);
  char v15 = *((unsigned char *)a2 + 32);
  uint64_t v16 = *((void *)a2 + 5);
  char v17 = *((unsigned char *)a2 + 48);
  uint64_t v18 = *((void *)a2 + 7);
  char v19 = *((unsigned char *)a2 + 64);
  char v20 = *((unsigned char *)a2 + 65);
  char v31 = *((unsigned char *)a2 + 67);
  char v32 = *((unsigned char *)a2 + 66);
  char v34 = *a3;
  long long v37 = a4[1];
  long long v38 = *a4;
  uint64_t v35 = *((void *)a4 + 5);
  uint64_t v36 = *((void *)a4 + 4);
  long long v40 = *a5;
  uint64_t v39 = *((void *)a5 + 2);
  uint64_t v42 = a6[1];
  uint64_t v43 = *a6;
  __int16 v41 = *((_WORD *)a6 + 8);
  __int16 v44 = *a7;
  uint64_t v46 = *a8;
  uint64_t v45 = a8[1];
  uint64_t v47 = a10[1];
  uint64_t v48 = *a10;
  __n128 v53 = *a11;
  unint64_t v51 = a11[1].n128_u64[1];
  unint64_t v52 = a11[1].n128_u64[0];
  unsigned __int8 v49 = a11[2].n128_u8[1];
  unsigned __int8 v50 = a11[2].n128_u8[0];
  uint64_t v21 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t v22 = (int *)type metadata accessor for ShareEvent.Model(0);
  uint64_t v23 = a9 + v22[5];
  *(_OWORD *)uint64_t v23 = v33;
  *(void *)(v23 + 16) = v13;
  *(void *)(v23 + 24) = v14;
  *(unsigned char *)(v23 + 32) = v15;
  *(void *)(v23 + 40) = v16;
  *(unsigned char *)(v23 + 48) = v17;
  *(void *)(v23 + 56) = v18;
  *(unsigned char *)(v23 + 64) = v19;
  *(unsigned char *)(v23 + 65) = v20;
  *(unsigned char *)(v23 + 66) = v32;
  *(unsigned char *)(v23 + 67) = v31;
  *(unsigned char *)(a9 + v22[6]) = v34;
  uint64_t v24 = a9 + v22[7];
  *(_OWORD *)uint64_t v24 = v38;
  *(_OWORD *)(v24 + 16) = v37;
  *(void *)(v24 + 32) = v36;
  *(void *)(v24 + 40) = v35;
  uint64_t v25 = a9 + v22[8];
  *(_OWORD *)uint64_t v25 = v40;
  *(void *)(v25 + 16) = v39;
  uint64_t v26 = a9 + v22[9];
  *(void *)uint64_t v26 = v43;
  *(void *)(v26 + 8) = v42;
  *(_WORD *)(v26 + 16) = v41;
  *(_WORD *)(a9 + v22[10]) = v44;
  char v27 = (void *)(a9 + v22[11]);
  *char v27 = v46;
  v27[1] = v45;
  char v28 = (void *)(a9 + v22[12]);
  *char v28 = v48;
  v28[1] = v47;
  uint64_t v29 = (__n128 *)(a9 + v22[13]);
  __n128 result = v53;
  *uint64_t v29 = v53;
  v29[1].n128_u64[0] = v52;
  v29[1].n128_u64[1] = v51;
  v29[2].n128_u8[0] = v50;
  v29[2].n128_u8[1] = v49;
  return result;
}

uint64_t sub_20AA13D40(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 2:
      uint64_t result = 0x61446E6F69746361;
      break;
    case 3:
      uint64_t result = 0x74614470756F7267;
      break;
    case 4:
      unsigned int v3 = 1684366694;
      goto LABEL_7;
    case 5:
      unsigned int v3 = 2003134838;
LABEL_7:
      uint64_t result = v3 | 0x6174614400000000;
      break;
    case 6:
      uint64_t result = 0xD000000000000016;
      break;
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    case 8:
      uint64_t result = 0x7461446575737369;
      break;
    case 9:
      uint64_t result = 0x446C656E6E616863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA13E94()
{
  return sub_20AA13D40(*v0);
}

uint64_t sub_20AA13E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA1909C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA13EC4(uint64_t a1)
{
  unint64_t v2 = sub_20AA143BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA13F00(uint64_t a1)
{
  unint64_t v2 = sub_20AA143BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ShareEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA14C30(0, &qword_267654C58, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v37 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA143BC();
  sub_20AB86DC0();
  LOBYTE(v39) = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    char v10 = (int *)type metadata accessor for ShareEvent.Model(0);
    uint64_t v11 = (long long *)(v3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    uint64_t v14 = *((void *)v11 + 3);
    char v15 = *((unsigned char *)v11 + 32);
    uint64_t v16 = *((void *)v11 + 5);
    char v17 = *((unsigned char *)v11 + 48);
    uint64_t v18 = *((void *)v11 + 7);
    char v19 = *((unsigned char *)v11 + 64);
    char v20 = *((unsigned char *)v11 + 65);
    char v21 = *((unsigned char *)v11 + 66);
    LOBYTE(v11) = *((unsigned char *)v11 + 67);
    long long v39 = v12;
    *(void *)&long long v40 = v13;
    *((void *)&v40 + 1) = v14;
    LOBYTE(v41) = v15;
    *((void *)&v41 + 1) = v16;
    char v42 = v17;
    uint64_t v43 = v18;
    char v44 = v19;
    char v45 = v20;
    char v46 = v21;
    char v47 = (char)v11;
    char v38 = 1;
    sub_20A97A1AC();
    sub_20AB86C50();
    LOBYTE(v39) = *(unsigned char *)(v3 + v10[6]);
    char v38 = 2;
    sub_20A98EDB4();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[7]);
    long long v23 = v22[1];
    long long v39 = *v22;
    long long v40 = v23;
    long long v41 = v22[2];
    char v38 = 3;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v24 = (long long *)(v3 + v10[8]);
    uint64_t v25 = *((void *)v24 + 2);
    long long v39 = *v24;
    *(void *)&long long v40 = v25;
    char v38 = 4;
    sub_20A986774();
    sub_20AB86BE0();
    uint64_t v26 = (long long *)(v3 + v10[9]);
    __int16 v27 = *((_WORD *)v26 + 8);
    long long v39 = *v26;
    LOWORD(v40) = v27;
    char v38 = 5;
    sub_20A986C14();
    sub_20AB86BE0();
    LOWORD(v39) = *(_WORD *)(v3 + v10[10]);
    char v38 = 6;
    sub_20A9C4F78();
    sub_20AB86C50();
    char v28 = (uint64_t *)(v3 + v10[11]);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    *(void *)&long long v39 = v30;
    *((void *)&v39 + 1) = v29;
    char v38 = 7;
    sub_20AA12DC4();
    sub_20AB86C50();
    long long v39 = *(_OWORD *)(v3 + v10[12]);
    char v38 = 8;
    sub_20A9870B4();
    sub_20AB86BE0();
    char v31 = (long long *)(v3 + v10[13]);
    long long v32 = *v31;
    uint64_t v33 = *((void *)v31 + 2);
    uint64_t v34 = *((void *)v31 + 3);
    char v35 = *((unsigned char *)v31 + 32);
    LOBYTE(v31) = *((unsigned char *)v31 + 33);
    long long v39 = v32;
    *(void *)&long long v40 = v33;
    *((void *)&v40 + 1) = v34;
    LOBYTE(v41) = v35;
    BYTE1(v41) = (_BYTE)v31;
    char v38 = 9;
    sub_20A9862D4();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA143BC()
{
  unint64_t result = qword_267654C60;
  if (!qword_267654C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C60);
  }
  return result;
}

uint64_t ShareEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v44 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA14C30(0, &qword_267654C68, MEMORY[0x263F8E040]);
  uint64_t v42 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - v10;
  char v47 = (int *)type metadata accessor for ShareEvent.Model(0);
  MEMORY[0x270FA5388](v47);
  char v45 = a1;
  char v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA143BC();
  sub_20AB86DA0();
  uint64_t v43 = v5;
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  uint64_t v41 = a2;
  uint64_t v13 = v9;
  LOBYTE(v48) = 0;
  sub_20A985F3C(&qword_26AC4E0C8);
  sub_20AB86B80();
  uint64_t v14 = v46;
  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v46, v7, v5);
  char v57 = 1;
  sub_20A97A154();
  sub_20AB86B80();
  long long v15 = v49;
  char v16 = v50;
  uint64_t v17 = *((void *)&v50 + 1);
  char v18 = v51;
  uint64_t v19 = v52;
  char v20 = v53;
  char v21 = v54;
  char v22 = v55;
  char v23 = v56;
  uint64_t v24 = v47;
  uint64_t v25 = &v14[v47[5]];
  *(_OWORD *)uint64_t v25 = v48;
  *((_OWORD *)v25 + 1) = v15;
  v25[32] = v16;
  *((void *)v25 + 5) = v17;
  v25[48] = v18;
  *((void *)v25 + 7) = v19;
  v25[64] = v20;
  v25[65] = v21;
  v25[66] = v22;
  v25[67] = v23;
  char v57 = 2;
  sub_20A98ED60();
  sub_20AB86B80();
  v14[v24[6]] = v48;
  char v57 = 3;
  sub_20A9864D0();
  sub_20AB86B10();
  uint64_t v26 = &v14[v24[7]];
  long long v27 = v49;
  *(_OWORD *)uint64_t v26 = v48;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v50;
  char v57 = 4;
  sub_20A986720();
  sub_20AB86B10();
  uint64_t v28 = v49;
  uint64_t v29 = &v14[v24[8]];
  *(_OWORD *)uint64_t v29 = v48;
  *((void *)v29 + 2) = v28;
  char v57 = 5;
  sub_20A986BC0();
  sub_20AB86B10();
  __int16 v30 = v49;
  char v31 = &v14[v24[9]];
  *(_OWORD *)char v31 = v48;
  *((_WORD *)v31 + 8) = v30;
  char v57 = 6;
  sub_20A9C4F24();
  sub_20AB86B80();
  *(_WORD *)&v14[v24[10]] = v48;
  char v57 = 7;
  sub_20AA12D70();
  sub_20AB86B80();
  uint64_t v32 = *((void *)&v48 + 1);
  uint64_t v33 = &v14[v47[11]];
  *(void *)uint64_t v33 = v48;
  *((void *)v33 + 1) = v32;
  char v57 = 8;
  sub_20A987060();
  sub_20AB86B10();
  *(_OWORD *)&v14[v47[12]] = v48;
  char v57 = 9;
  sub_20A986280();
  sub_20AB86B80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v42);
  long long v34 = v49;
  char v35 = v50;
  char v36 = BYTE1(v50);
  uint64_t v37 = (uint64_t)v46;
  char v38 = &v46[v47[13]];
  *(_OWORD *)char v38 = v48;
  *((_OWORD *)v38 + 1) = v34;
  v38[32] = v35;
  v38[33] = v36;
  sub_20AA14C94(v37, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return sub_20AA14CF8(v37);
}

void sub_20AA14C30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA143BC();
    unint64_t v7 = a3(a1, &type metadata for ShareEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA14C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA14CF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShareEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA14D54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ShareEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA14D6C(void *a1)
{
  return ShareEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA14D84@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533D8, MEMORY[0x263F24D18], (uint64_t)qword_267654C10, a1);
}

uint64_t sub_20AA14DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533E0, MEMORY[0x263F24DD8], (uint64_t)qword_267654C28, a1);
}

uint64_t sub_20AA14DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533E8, MEMORY[0x263F24DE8], (uint64_t)qword_267654C40, a1);
}

uint64_t sub_20AA14E2C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = *MEMORY[0x263F24D30];
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v11, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v11, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v11, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);

  return v25(v23, v4, v24);
}

uint64_t *initializeBufferWithCopyOfBuffer for ShareEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    __int16 v30 = (char *)a2 + v28;
    sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    long long v34 = (char *)a2 + v32;
    sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[12];
    uint64_t v37 = (char *)a1 + v36;
    char v38 = (char *)a2 + v36;
    sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = a3[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  }
  return a1;
}

uint64_t destroy for ShareEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = a1 + a2[12];
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = a1 + a2[13];
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);

  return v23(v21, v22);
}

uint64_t initializeWithCopy for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  return a1;
}

uint64_t assignWithCopy for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
  return a1;
}

uint64_t initializeWithTake for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  return a1;
}

uint64_t assignWithTake for ShareEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 40))(v36, v37, v38);
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA17100);
}

uint64_t sub_20AA17100(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_20:
    return v9(v10, a2, v8);
  }
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_19:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_20;
  }
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_19;
  }
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a2)
  {
    uint64_t v8 = v19;
    uint64_t v12 = *(void *)(v19 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a2)
  {
    uint64_t v8 = v20;
    uint64_t v12 = *(void *)(v20 - 8);
    uint64_t v13 = a3[12];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a3[13];

  return v23(v25, a2, v24);
}

uint64_t storeEnumTagSinglePayload for ShareEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA1766C);
}

uint64_t sub_20AA1766C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_20:
    return v11(v12, a2, a2, v10);
  }
  sub_20AA13168(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_19:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_20;
  }
  sub_20AA13168(0, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_19;
  }
  sub_20AA13168(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
  if (*(_DWORD *)(*(void *)(v21 - 8) + 84) == a3)
  {
    uint64_t v10 = v21;
    uint64_t v14 = *(void *)(v21 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
  if (*(_DWORD *)(*(void *)(v22 - 8) + 84) == a3)
  {
    uint64_t v10 = v22;
    uint64_t v14 = *(void *)(v22 - 8);
    uint64_t v15 = a4[12];
    goto LABEL_19;
  }
  sub_20AA13168(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v26 = v24;
  uint64_t v27 = a1 + a4[13];

  return v25(v27, a2, a2, v26);
}

void sub_20AA17BD0()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20AA13168(319, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
    if (v1 <= 0x3F)
    {
      sub_20AA13168(319, &qword_26AC52268, (void (*)(void))sub_20A98ED60, (void (*)(void))sub_20A98EDB4);
      if (v2 <= 0x3F)
      {
        sub_20AA13168(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
        if (v3 <= 0x3F)
        {
          sub_20AA13168(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
          if (v4 <= 0x3F)
          {
            sub_20AA13168(319, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
            if (v5 <= 0x3F)
            {
              sub_20AA13168(319, &qword_26AC4E670, (void (*)(void))sub_20A9C4F24, (void (*)(void))sub_20A9C4F78);
              if (v6 <= 0x3F)
              {
                sub_20AA13168(319, &qword_26AC52668, (void (*)(void))sub_20AA12D70, (void (*)(void))sub_20AA12DC4);
                if (v7 <= 0x3F)
                {
                  sub_20AA13168(319, &qword_26AC4E6B8, (void (*)(void))sub_20A987060, (void (*)(void))sub_20A9870B4);
                  if (v8 <= 0x3F)
                  {
                    sub_20AA13168(319, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
                    if (v9 <= 0x3F) {
                      swift_initStructMetadata();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ShareEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *((void *)v10 + 7) = *((void *)v11 + 7);
    uint64_t v13 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v13;
    *((_DWORD *)v10 + 16) = *((_DWORD *)v11 + 16);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)((char *)a2 + v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *uint64_t v15 = *v16;
      *((void *)v15 + 1) = *((void *)v16 + 1);
      *((void *)v15 + 2) = v17;
      *((void *)v15 + 3) = *((void *)v16 + 3);
      uint64_t v18 = *((void *)v16 + 5);
      *((void *)v15 + 4) = *((void *)v16 + 4);
      *((void *)v15 + 5) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v20;
      *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *uint64_t v23 = *v24;
    uint64_t v25 = *((void *)v24 + 2);
    *((void *)v23 + 1) = *((void *)v24 + 1);
    *((void *)v23 + 2) = v25;
    uint64_t v26 = (char *)a1 + v22;
    uint64_t v27 = (char *)a2 + v22;
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    *((_WORD *)v26 + 8) = *((_WORD *)v27 + 8);
    uint64_t v29 = a3[11];
    *(_WORD *)((char *)a1 + a3[10]) = *(_WORD *)((char *)a2 + a3[10]);
    uint64_t v30 = (void *)((char *)a1 + v29);
    uint64_t v31 = (void *)((char *)a2 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    uint64_t v33 = a3[12];
    uint64_t v34 = a3[13];
    uint64_t v35 = (void *)((char *)a1 + v33);
    uint64_t v36 = (void *)((char *)a2 + v33);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = (char *)a1 + v34;
    uint64_t v39 = (char *)a2 + v34;
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = *((void *)v39 + 3);
    *((void *)v38 + 2) = *((void *)v39 + 2);
    *((void *)v38 + 3) = v41;
    v38[32] = v39[32];
    v38[33] = v39[33];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ShareEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28) + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 24);
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = v12;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    *(void *)(v14 + 16) = v16;
    *(void *)(v14 + 24) = *(void *)(v15 + 24);
    uint64_t v17 = *(void *)(v15 + 40);
    *(void *)(v14 + 32) = *(void *)(v15 + 32);
    *(void *)(v14 + 40) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(v14 + 16) = v18;
    *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  uint64_t v26 = *(void *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  *(_WORD *)(v24 + 16) = *(_WORD *)(v25 + 16);
  uint64_t v27 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[12];
  uint64_t v32 = a3[13];
  uint64_t v33 = (void *)(a1 + v31);
  uint64_t v34 = (void *)(a2 + v31);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a1 + v32;
  uint64_t v37 = a2 + v32;
  uint64_t v38 = *(void *)(v37 + 8);
  *(void *)uint64_t v36 = *(void *)v37;
  *(void *)(v36 + 8) = v38;
  uint64_t v39 = *(void *)(v37 + 24);
  *(void *)(v36 + 16) = *(void *)(v37 + 16);
  *(void *)(v36 + 24) = v39;
  *(unsigned char *)(v36 + 32) = *(unsigned char *)(v37 + 32);
  *(unsigned char *)(v36 + 33) = *(unsigned char *)(v37 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  uint64_t v10 = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 40) = v10;
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (long long *)(a2 + v11);
  uint64_t v14 = *(void *)(a1 + v11 + 16);
  uint64_t v15 = *(void *)(a2 + v11 + 16);
  if (v14)
  {
    if (v15)
    {
      *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
      *(void *)(v12 + 8) = *((void *)v13 + 1);
      *(void *)(v12 + 16) = *((void *)v13 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
      *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
      *(void *)(v12 + 32) = *((void *)v13 + 4);
      *(void *)(v12 + 40) = *((void *)v13 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v12);
      long long v17 = v13[1];
      long long v16 = v13[2];
      *(_OWORD *)uint64_t v12 = *v13;
      *(_OWORD *)(v12 + 16) = v17;
      *(_OWORD *)(v12 + 32) = v16;
    }
  }
  else if (v15)
  {
    *(unsigned char *)uint64_t v12 = *(unsigned char *)v13;
    *(void *)(v12 + 8) = *((void *)v13 + 1);
    *(void *)(v12 + 16) = *((void *)v13 + 2);
    *(_DWORD *)(v12 + 24) = *((_DWORD *)v13 + 6);
    *(_DWORD *)(v12 + 28) = *((_DWORD *)v13 + 7);
    *(void *)(v12 + 32) = *((void *)v13 + 4);
    *(void *)(v12 + 40) = *((void *)v13 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *v13;
    long long v19 = v13[2];
    *(_OWORD *)(v12 + 16) = v13[1];
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)uint64_t v12 = v18;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)uint64_t v24 = *(void *)(a2 + v23);
  *(void *)(v24 + 8) = *(void *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  uint64_t v26 = a3[10];
  uint64_t v27 = (unsigned char *)(a1 + v26);
  uint64_t v28 = (unsigned char *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[12];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[13];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  *(void *)uint64_t v36 = *(void *)(a2 + v35);
  *(void *)(v36 + 8) = *(void *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v36 + 16) = *(void *)(v37 + 16);
  *(void *)(v36 + 24) = *(void *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v36 + 32) = *(unsigned char *)(v37 + 32);
  *(unsigned char *)(v36 + 33) = *(unsigned char *)(v37 + 33);
  return a1;
}

uint64_t initializeWithTake for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)(v9 + 64) = *(_DWORD *)(v10 + 64);
  long long v11 = *(_OWORD *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_OWORD *)(v9 + 48) = v11;
  long long v12 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v12;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (_OWORD *)(a1 + v13);
  long long v16 = (_OWORD *)(a2 + v13);
  long long v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  v15[2] = v16[2];
  uint64_t v18 = a1 + v14;
  uint64_t v19 = a2 + v14;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_WORD *)(v22 + 16) = *(_WORD *)(v23 + 16);
  *(_WORD *)(a1 + v21) = *(_WORD *)(a2 + v21);
  uint64_t v24 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[13];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  long long v28 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v28;
  *(_WORD *)(v26 + 32) = *(_WORD *)(v27 + 32);
  return a1;
}

uint64_t assignWithTake for ShareEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(unsigned char *)(v8 + 64) = *(unsigned char *)(v9 + 64);
  *(unsigned char *)(v8 + 65) = *(unsigned char *)(v9 + 65);
  *(unsigned char *)(v8 + 66) = *(unsigned char *)(v9 + 66);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  char v14 = *(unsigned char *)(a2 + v12);
  *(unsigned char *)(v8 + 67) = *(unsigned char *)(v9 + 67);
  *(unsigned char *)(a1 + v12) = v14;
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  if (!*(void *)(a1 + v13 + 16)) {
    goto LABEL_5;
  }
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
    sub_20A98D5B8(a1 + v13);
LABEL_5:
    long long v19 = *(_OWORD *)(v16 + 16);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  *(void *)(v15 + 16) = v17;
  swift_bridgeObjectRelease();
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  uint64_t v18 = *(void *)(v16 + 40);
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a2 + v25 + 8);
  *(void *)uint64_t v26 = *(void *)(a2 + v25);
  *(void *)(v26 + 8) = v28;
  swift_bridgeObjectRelease();
  *(_WORD *)(v26 + 16) = *(_WORD *)(v27 + 16);
  uint64_t v29 = a3[11];
  *(_WORD *)(a1 + a3[10]) = *(_WORD *)(a2 + a3[10]);
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v38 = *v36;
  uint64_t v37 = v36[1];
  *uint64_t v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(v41 + 8);
  *(void *)uint64_t v40 = *(void *)v41;
  *(void *)(v40 + 8) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v41 + 24);
  *(void *)(v40 + 16) = *(void *)(v41 + 16);
  *(void *)(v40 + 24) = v43;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v40 + 32) = *(unsigned char *)(v41 + 32);
  *(unsigned char *)(v40 + 33) = *(unsigned char *)(v41 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA18C14);
}

uint64_t sub_20AA18C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ShareEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA18CEC);
}

uint64_t sub_20AA18CEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20AB85FC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20AA18DAC()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ShareEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA18F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareEvent.Model.CodingKeys()
{
  return &type metadata for ShareEvent.Model.CodingKeys;
}

unint64_t sub_20AA18F98()
{
  unint64_t result = qword_267654C70;
  if (!qword_267654C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C70);
  }
  return result;
}

unint64_t sub_20AA18FF0()
{
  unint64_t result = qword_267654C78;
  if (!qword_267654C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C78);
  }
  return result;
}

unint64_t sub_20AA19048()
{
  unint64_t result = qword_267654C80;
  if (!qword_267654C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C80);
  }
  return result;
}

uint64_t sub_20AA1909C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697472417377656ELL && a2 == 0xEF61746144656C63 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61446E6F69746361 && a2 == 0xEA00000000006174 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614477656976 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7800 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA7CC0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461446575737369 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x446C656E6E616863 && a2 == 0xEB00000000617461)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t static ShareContextData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t ShareContextData.iosActivityType.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ShareContextData.iosActivityType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ShareContextData.iosActivityType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::ShareContextData __swiftcall ShareContextData.init(iosActivityType:)(StocksAnalytics::ShareContextData iosActivityType)
{
  *uint64_t v1 = iosActivityType;
  return iosActivityType;
}

uint64_t sub_20AA1959C()
{
  return 0x7669746341736F69;
}

uint64_t sub_20AA195C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7669746341736F69 && a2 == 0xEF65707954797469)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA1967C(uint64_t a1)
{
  unint64_t v2 = sub_20AA19840();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA196B8(uint64_t a1)
{
  unint64_t v2 = sub_20AA19840();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ShareContextData.encode(to:)(void *a1)
{
  sub_20AA19A18(0, &qword_267654C88, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA19840();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_20AA19840()
{
  unint64_t result = qword_267654C90;
  if (!qword_267654C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654C90);
  }
  return result;
}

uint64_t ShareContextData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20AA19A18(0, &qword_267654C98, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA19840();
  sub_20AB86DA0();
  if (!v2)
  {
    uint64_t v10 = sub_20AB86B40();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA19A18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA19840();
    unint64_t v7 = a3(a1, &type metadata for ShareContextData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA19A84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShareContextData.init(from:)(a1, a2);
}

uint64_t sub_20AA19A9C(void *a1)
{
  sub_20AA19A18(0, &qword_267654C88, MEMORY[0x263F8E0C0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA19840();
  sub_20AB86DC0();
  sub_20AB86C10();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for ShareContextData()
{
  return &type metadata for ShareContextData;
}

unsigned char *storeEnumTagSinglePayload for ShareContextData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA19C94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareContextData.CodingKeys()
{
  return &type metadata for ShareContextData.CodingKeys;
}

unint64_t sub_20AA19CD0()
{
  unint64_t result = qword_267654CA0;
  if (!qword_267654CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CA0);
  }
  return result;
}

unint64_t sub_20AA19D28()
{
  unint64_t result = qword_267654CA8;
  if (!qword_267654CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CA8);
  }
  return result;
}

unint64_t sub_20AA19D80()
{
  unint64_t result = qword_267654CB0;
  if (!qword_267654CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CB0);
  }
  return result;
}

uint64_t static OrientationData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void OrientationData.deviceOrientation.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *OrientationData.deviceOrientation.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*OrientationData.deviceOrientation.modify())()
{
  return nullsub_1;
}

void OrientationData.interfaceOrientation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *OrientationData.interfaceOrientation.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*OrientationData.interfaceOrientation.modify())()
{
  return nullsub_1;
}

StocksAnalytics::OrientationData __swiftcall OrientationData.init(deviceOrientation:interfaceOrientation:)(StocksAnalytics::DeviceOrientation deviceOrientation, StocksAnalytics::InterfaceOrientation interfaceOrientation)
{
  char v3 = *(unsigned char *)interfaceOrientation;
  *uint64_t v2 = *(unsigned char *)deviceOrientation;
  v2[1] = v3;
  result.deviceOrientation = deviceOrientation;
  return result;
}

unint64_t sub_20AA19E60()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_20AA19EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA1A8B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA19EC8(uint64_t a1)
{
  unint64_t v2 = sub_20AA1A0EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA19F04(uint64_t a1)
{
  unint64_t v2 = sub_20AA1A0EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OrientationData.encode(to:)(void *a1)
{
  sub_20AA1A3CC(0, &qword_26AC4E2E0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  char v9 = *v1;
  int v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA1A0EC();
  sub_20AB86DC0();
  char v16 = v9;
  char v15 = 0;
  sub_20AA1A140();
  sub_20AB86C50();
  if (!v2)
  {
    char v14 = v12;
    char v13 = 1;
    sub_20AA1A194();
    sub_20AB86C50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA1A0EC()
{
  unint64_t result = qword_26AC4F268;
  if (!qword_26AC4F268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F268);
  }
  return result;
}

unint64_t sub_20AA1A140()
{
  unint64_t result = qword_26AC4F800;
  if (!qword_26AC4F800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F800);
  }
  return result;
}

unint64_t sub_20AA1A194()
{
  unint64_t result = qword_26AC501B8;
  if (!qword_26AC501B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC501B8);
  }
  return result;
}

uint64_t OrientationData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA1A3CC(0, &qword_26AC51790, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA1A0EC();
  sub_20AB86DA0();
  if (!v2)
  {
    char v16 = 0;
    sub_20AA1A430();
    sub_20AB86B80();
    char v10 = v17;
    char v14 = 1;
    sub_20AA1A484();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v12 = v15;
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA1A3CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA1A0EC();
    unint64_t v7 = a3(a1, &type metadata for OrientationData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA1A430()
{
  unint64_t result = qword_26AC4F810;
  if (!qword_26AC4F810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F810);
  }
  return result;
}

unint64_t sub_20AA1A484()
{
  unint64_t result = qword_26AC501C8;
  if (!qword_26AC501C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC501C8);
  }
  return result;
}

uint64_t sub_20AA1A4E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OrientationData.init(from:)(a1, a2);
}

uint64_t sub_20AA1A4F8(void *a1)
{
  return OrientationData.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for OrientationData(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 65284 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65284 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65284;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65284;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OrientationData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65284 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 252;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA1A670);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationData()
{
  return &type metadata for OrientationData;
}

unsigned char *storeEnumTagSinglePayload for OrientationData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA1A774);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrientationData.CodingKeys()
{
  return &type metadata for OrientationData.CodingKeys;
}

unint64_t sub_20AA1A7B0()
{
  unint64_t result = qword_267654CB8;
  if (!qword_267654CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CB8);
  }
  return result;
}

unint64_t sub_20AA1A808()
{
  unint64_t result = qword_26AC4F278;
  if (!qword_26AC4F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F278);
  }
  return result;
}

unint64_t sub_20AA1A860()
{
  unint64_t result = qword_26AC4F270;
  if (!qword_26AC4F270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4F270);
  }
  return result;
}

uint64_t sub_20AA1A8B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x800000020ABA7CE0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000020ABA7D00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

StocksAnalytics::VideoAdEngagementType_optional __swiftcall VideoAdEngagementType.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t VideoAdEngagementType.rawValue.getter()
{
  uint64_t result = 2036427888;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6573756170;
      break;
    case 2:
      uint64_t result = 0x656D75736572;
      break;
    case 3:
      uint64_t result = 0x6D6F436863746177;
      break;
    case 4:
      uint64_t result = 1885956979;
      break;
    case 5:
      uint64_t result = 0x726F4D6E7261656CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA1AAB8(unsigned __int8 *a1, char *a2)
{
  return sub_20AA35D94(*a1, *a2);
}

unint64_t sub_20AA1AAC8()
{
  unint64_t result = qword_267654CC0;
  if (!qword_267654CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CC0);
  }
  return result;
}

uint64_t sub_20AA1AB1C()
{
  return sub_20AB4CC6C();
}

uint64_t sub_20AA1AB24()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA1AC14()
{
  return sub_20AB4EC5C();
}

StocksAnalytics::VideoAdEngagementType_optional sub_20AA1AC1C(Swift::String *a1)
{
  return VideoAdEngagementType.init(rawValue:)(*a1);
}

void sub_20AA1AC28(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 2036427888;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x6573756170;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x656D75736572;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "watchComplete");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 1885956979;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 5:
      *(void *)a1 = 0x726F4D6E7261656CLL;
      *(void *)(a1 + 8) = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_20AA1ACF8()
{
  return sub_20AB86750();
}

uint64_t sub_20AA1AD58()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for VideoAdEngagementType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA1AE74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VideoAdEngagementType()
{
  return &type metadata for VideoAdEngagementType;
}

unint64_t sub_20AA1AEAC()
{
  unint64_t result = qword_267654CC8;
  if (!qword_267654CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CC8);
  }
  return result;
}

uint64_t AdJournalEntryData.init(status:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_20AB86580();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB865A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20AB865B0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x263F58810])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    char v15 = (void *)sub_20AB86570();
    sub_20AA1B338(v15, &v29);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    char v17 = v29;
  }
  else
  {
    int v19 = v14;
    if (v14 == *MEMORY[0x263F58820])
    {
      (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
      uint64_t v20 = v27;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v5, v13, v3);
      uint64_t v21 = (void *)sub_20AB86570();
      sub_20AA1B338(v21, &v30);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
      char v17 = v30;
      char v18 = 3;
      goto LABEL_11;
    }
    uint64_t v22 = a1;
    if (v19 == *MEMORY[0x263F58818])
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      char v18 = 0;
      char v17 = 4;
      goto LABEL_11;
    }
    if (v19 == *MEMORY[0x263F58838] || v19 == *MEMORY[0x263F58840])
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      char v17 = 4;
      char v18 = 2;
      goto LABEL_11;
    }
    if (v19 == *MEMORY[0x263F58828])
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      char v18 = 4;
      char v17 = 4;
      goto LABEL_11;
    }
    int v24 = *MEMORY[0x263F58830];
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    uint64_t result = v25(v22, v10);
    if (v19 == v24)
    {
      char v17 = 4;
      char v18 = 5;
      goto LABEL_11;
    }
    uint64_t result = v25((uint64_t)v13, v10);
    char v17 = 4;
  }
  char v18 = 1;
LABEL_11:
  uint64_t v23 = v28;
  *uint64_t v28 = v18;
  v23[1] = v17;
  return result;
}

void sub_20AA1B338(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_20AB865D0();
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB86520();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20AB86510();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = a1;
  id v14 = a1;
  sub_20AA1B730();
  if (!swift_dynamicCast())
  {
LABEL_5:

    id v27 = a1;
    id v19 = a1;
    if (swift_dynamicCast())
    {
      int v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      if (v20 == *MEMORY[0x263F587A0] || v20 == *MEMORY[0x263F587B0] || v20 == *MEMORY[0x263F587A8])
      {

        char v18 = 2;
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }

    id v27 = a1;
    if (swift_dynamicCast())
    {
      uint64_t v23 = v25;
      if ((*(unsigned int (**)(char *, uint64_t))(v25 + 88))(v5, v3) == *MEMORY[0x263F58908])
      {

        char v18 = 1;
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v3);
    }

    char v18 = 3;
    goto LABEL_20;
  }
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) != *MEMORY[0x263F58798])
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_5;
  }

  (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
  swift_bridgeObjectRelease();
  sub_20AA1B788();
  char v16 = &v13[*(int *)(v15 + 48)];
  uint64_t v17 = sub_20AB865C0();
  (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);

  char v18 = 0;
LABEL_20:
  *uint64_t v26 = v18;
}

unint64_t sub_20AA1B730()
{
  unint64_t result = qword_26AC519E0;
  if (!qword_26AC519E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC519E0);
  }
  return result;
}

void sub_20AA1B788()
{
  if (!qword_267654CD0)
  {
    sub_20AB865C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_267654CD0);
    }
  }
}

uint64_t sub_20AA1B7F4()
{
  sub_20AA1B9C4();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA1BA74();
  sub_20A9BC5DC();
  uint64_t v5 = sub_20AB85A70();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20AB88020;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, *MEMORY[0x263F24D40], v5);
  sub_20AA1BA20();
  sub_20AB85C50();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_20AA1B9C4()
{
  if (!qword_26AC4E530)
  {
    sub_20AA1BA20();
    unint64_t v0 = sub_20AB85920();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC4E530);
    }
  }
}

unint64_t sub_20AA1BA20()
{
  unint64_t result = qword_26AC4EB28;
  if (!qword_26AC4EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB28);
  }
  return result;
}

void sub_20AA1BA74()
{
  sub_20AA1BC68();
  unint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_systemName);

  sub_20AB866E0();
  sub_20AB86090();
  sub_20AB86080();
  id v3 = objc_msgSend(v0, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_systemVersion);

  sub_20AB866E0();
  id v5 = objc_msgSend(v0, sel_currentDevice);
  id v6 = objc_msgSend(v5, sel_sa_buildVersion);

  if (v6)
  {
    sub_20AB866E0();

    sub_20AA1BA20();
    sub_20AB85910();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20AA1BC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_9:
    __break(1u);
    return MEMORY[0x270F9D6B0](a1, a2);
  }
  uint64_t v3 = a1;
  int v4 = *(unsigned __int8 *)(a1 + 32);
  a1 += 32;
  if (v4)
  {
    a2 = 0;
    uint64_t v5 = v2 - 1;
    uint64_t v6 = v3 + 33;
    while (v5 != a2)
    {
      if (!*(unsigned __int8 *)(v6 + a2++)) {
        return MEMORY[0x270F9D6B0](a1, a2);
      }
    }
    __break(1u);
    goto LABEL_9;
  }
  a2 = 0;
  return MEMORY[0x270F9D6B0](a1, a2);
}

uint64_t sub_20AA1BC68()
{
  v5[1] = *MEMORY[0x263EF8340];
  v5[0] = 0;
  sysctlbyname("hw.machine", 0, v5, 0, 0);
  size_t v0 = v5[0];
  if ((v5[0] & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_20AB86A40();
    __break(1u);
  }
  else
  {
    if (v5[0])
    {
      uint64_t v1 = sub_20AB86780();
      *(void *)(v1 + 16) = v0;
      bzero((void *)(v1 + 32), v0);
    }
    else
    {
      uint64_t v1 = MEMORY[0x263F8EE78];
    }
    sysctlbyname("hw.machine", (void *)(v1 + 32), v5, 0, 0);
    uint64_t v3 = sub_20AA1BC20(v1, v2);
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

uint64_t static AddToCalendarResultData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void AddToCalendarResultData.calendarResultType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *AddToCalendarResultData.calendarResultType.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*AddToCalendarResultData.calendarResultType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::AddToCalendarResultData __swiftcall AddToCalendarResultData.init(calendarResultType:)(StocksAnalytics::AddToCalendarResultData calendarResultType)
{
  *uint64_t v1 = *(unsigned char *)calendarResultType.calendarResultType;
  return calendarResultType;
}

unint64_t sub_20AA1BDEC()
{
  return 0xD000000000000012;
}

uint64_t sub_20AA1BE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA1C6C0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20AA1BE34(uint64_t a1)
{
  unint64_t v2 = sub_20AA1C008();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA1BE70(uint64_t a1)
{
  unint64_t v2 = sub_20AA1C008();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AddToCalendarResultData.encode(to:)(void *a1)
{
  sub_20AA1C248(0, &qword_267654CD8, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA1C008();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA1C05C();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA1C008()
{
  unint64_t result = qword_267654CE0;
  if (!qword_267654CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CE0);
  }
  return result;
}

unint64_t sub_20AA1C05C()
{
  unint64_t result = qword_267654CE8;
  if (!qword_267654CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CE8);
  }
  return result;
}

uint64_t AddToCalendarResultData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA1C248(0, &qword_267654CF0, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA1C008();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA1C2AC();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA1C248(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA1C008();
    unint64_t v7 = a3(a1, &type metadata for AddToCalendarResultData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA1C2AC()
{
  unint64_t result = qword_267654CF8;
  if (!qword_267654CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654CF8);
  }
  return result;
}

unint64_t sub_20AA1C304()
{
  unint64_t result = qword_267654D00;
  if (!qword_267654D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D00);
  }
  return result;
}

unint64_t sub_20AA1C35C()
{
  unint64_t result = qword_267654D08;
  if (!qword_267654D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D08);
  }
  return result;
}

uint64_t sub_20AA1C3B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AddToCalendarResultData.init(from:)(a1, a2);
}

uint64_t sub_20AA1C3C8(void *a1)
{
  return AddToCalendarResultData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for AddToCalendarResultData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA1C4ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AddToCalendarResultData()
{
  return &type metadata for AddToCalendarResultData;
}

unsigned char *storeEnumTagSinglePayload for AddToCalendarResultData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA1C580);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AddToCalendarResultData.CodingKeys()
{
  return &type metadata for AddToCalendarResultData.CodingKeys;
}

unint64_t sub_20AA1C5BC()
{
  unint64_t result = qword_267654D10;
  if (!qword_267654D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D10);
  }
  return result;
}

unint64_t sub_20AA1C614()
{
  unint64_t result = qword_267654D18;
  if (!qword_267654D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D18);
  }
  return result;
}

unint64_t sub_20AA1C66C()
{
  unint64_t result = qword_267654D20;
  if (!qword_267654D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D20);
  }
  return result;
}

uint64_t sub_20AA1C6C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA7E00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_20AA1C748(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654D28, MEMORY[0x263F24D10]);
}

uint64_t static NonNewsHeadlineExposureEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533F0, MEMORY[0x263F24D18], (uint64_t)qword_267654D28, a1);
}

uint64_t static NonNewsHeadlineExposureEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA1C7B0(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654D40, MEMORY[0x263F24DC8]);
}

uint64_t static NonNewsHeadlineExposureEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_2676533F8, MEMORY[0x263F24DD8], (uint64_t)qword_267654D40, a1);
}

uint64_t sub_20AA1C810()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654D58);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654D58);
  return sub_20AB85D30();
}

uint64_t static NonNewsHeadlineExposureEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653400, MEMORY[0x263F24DE8], (uint64_t)qword_267654D58, a1);
}

uint64_t NonNewsHeadlineExposureEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t NonNewsHeadlineExposureEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*NonNewsHeadlineExposureEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA1D8B8(type metadata accessor for NonNewsHeadlineExposureEvent, (uint64_t (*)(void))sub_20A97C0F4, a1);
}

uint64_t type metadata accessor for NonNewsHeadlineExposureEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654D88);
}

uint64_t NonNewsHeadlineExposureEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 20);
  sub_20A97C0F4();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.timedData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.nonNewsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 24);
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.nonNewsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 24);
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.nonNewsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.feedPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 28);
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.feedPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 28);
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.feedPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 32);
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.inGroupPositionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 32);
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.inGroupPositionData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 36);
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 36);
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 40);
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NonNewsHeadlineExposureEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 40);
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.activeWatchlistData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 44);
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA1D338(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t NonNewsHeadlineExposureEvent.activeWatchlistData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent(0) + 44);
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*NonNewsHeadlineExposureEvent.activeWatchlistData.modify())()
{
  return nullsub_1;
}

uint64_t NonNewsHeadlineExposureEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent(0);
  uint64_t v5 = a1 + v4[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = *MEMORY[0x263F24D30];
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v2, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v12, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  int v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104);

  return v20(v18, v12, v19);
}

uint64_t NonNewsHeadlineExposureEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t NonNewsHeadlineExposureEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20AA1D8B8(type metadata accessor for NonNewsHeadlineExposureEvent.Model, MEMORY[0x263F24E90], a1);
}

uint64_t sub_20AA1D8B8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *(int *)(a1(0) + 20);
  uint64_t v7 = a2(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v8(a3, v6, v7);
}

uint64_t type metadata accessor for NonNewsHeadlineExposureEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654D98);
}

uint64_t NonNewsHeadlineExposureEvent.Model.nonNewsArticleData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 24));
  uint64_t v4 = v3[1];
  uint64_t v5 = v3[2];
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsHeadlineExposureEvent.Model.feedPositionData.getter@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  *a1 = *(_DWORD *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.inGroupPositionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  uint64_t v4 = (int *)(v1 + *(int *)(result + 32));
  int v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 4);
  *(_DWORD *)a1 = v5;
  *(unsigned char *)(a1 + 4) = (_BYTE)v4;
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 36);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t NonNewsHeadlineExposureEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NonNewsHeadlineExposureEvent.Model(0) + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t NonNewsHeadlineExposureEvent.Model.activeWatchlistData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

__n128 NonNewsHeadlineExposureEvent.Model.init(eventData:timedData:nonNewsArticleData:feedPositionData:inGroupPositionData:feedData:groupData:activeWatchlistData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, int *a4@<X3>, int *a5@<X4>, char *a6@<X5>, long long *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>)
{
  long long v27 = a3[1];
  long long v28 = *a3;
  uint64_t v12 = *((void *)a3 + 4);
  uint64_t v13 = *((void *)a3 + 5);
  int v14 = *a4;
  int v15 = *a5;
  char v16 = *((unsigned char *)a5 + 4);
  char v30 = *a6;
  uint64_t v17 = *((void *)a6 + 2);
  uint64_t v29 = *((void *)a6 + 1);
  __n128 v33 = (__n128)a7[1];
  long long v34 = *a7;
  uint64_t v31 = *((void *)a7 + 5);
  uint64_t v32 = *((void *)a7 + 4);
  char v35 = *a8;
  uint64_t v18 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(a9, a1, v18);
  uint64_t v19 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  uint64_t v20 = a9 + v19[5];
  uint64_t v21 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a2, v21);
  uint64_t v22 = a9 + v19[6];
  *(_OWORD *)uint64_t v22 = v28;
  *(_OWORD *)(v22 + 16) = v27;
  *(void *)(v22 + 32) = v12;
  *(void *)(v22 + 40) = v13;
  *(_DWORD *)(a9 + v19[7]) = v14;
  uint64_t v23 = a9 + v19[8];
  *(_DWORD *)uint64_t v23 = v15;
  *(unsigned char *)(v23 + 4) = v16;
  uint64_t v24 = a9 + v19[9];
  *(unsigned char *)uint64_t v24 = v30;
  *(void *)(v24 + 8) = v29;
  *(void *)(v24 + 16) = v17;
  uint64_t v25 = a9 + v19[10];
  __n128 result = v33;
  *(_OWORD *)uint64_t v25 = v34;
  *(__n128 *)(v25 + 16) = v33;
  *(void *)(v25 + 32) = v32;
  *(void *)(v25 + 40) = v31;
  *(unsigned char *)(a9 + v19[11]) = v35;
  return result;
}

unint64_t sub_20AA1DCC4(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74614464656D6974;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x6174614464656566;
      break;
    case 6:
      unint64_t result = 0x74614470756F7267;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20AA1DDC4()
{
  return sub_20AA1DCC4(*v0);
}

uint64_t sub_20AA1DDCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA22208(a1, a2);
  *a3 = result;
  return result;
}

void sub_20AA1DDF4(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_20AA1DE00(uint64_t a1)
{
  unint64_t v2 = sub_20AA1E258();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA1DE3C(uint64_t a1)
{
  unint64_t v2 = sub_20AA1E258();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t NonNewsHeadlineExposureEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA1EA44(0, &qword_267654D70, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA1E258();
  sub_20AB86DC0();
  LOBYTE(v27) = 0;
  sub_20AB85FC0();
  sub_20A97C1C0(&qword_26AC4E6F8, MEMORY[0x263F24E70]);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
    LOBYTE(v27) = 1;
    sub_20AB85FE0();
    sub_20A97C1C0(&qword_26AC4E708, MEMORY[0x263F24E90]);
    sub_20AB86C50();
    uint64_t v11 = (long long *)(v3 + v10[6]);
    long long v12 = *v11;
    long long v13 = v11[1];
    uint64_t v15 = *((void *)v11 + 4);
    uint64_t v14 = *((void *)v11 + 5);
    long long v27 = v12;
    long long v28 = v13;
    *(void *)&long long v29 = v15;
    *((void *)&v29 + 1) = v14;
    char v26 = 2;
    sub_20A9DBEEC();
    sub_20AB86C50();
    LODWORD(v27) = *(_DWORD *)(v3 + v10[7]);
    char v26 = 3;
    sub_20A9EE598();
    sub_20AB86C50();
    char v16 = (int *)(v3 + v10[8]);
    int v17 = *v16;
    LOBYTE(v16) = *((unsigned char *)v16 + 4);
    LODWORD(v27) = v17;
    BYTE4(v27) = (_BYTE)v16;
    char v26 = 4;
    sub_20A9EE7E8();
    sub_20AB86BE0();
    uint64_t v18 = (char *)(v3 + v10[9]);
    char v19 = *v18;
    uint64_t v21 = *((void *)v18 + 1);
    uint64_t v20 = *((void *)v18 + 2);
    LOBYTE(v27) = v19;
    *((void *)&v27 + 1) = v21;
    *(void *)&long long v28 = v20;
    char v26 = 5;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v22 = (long long *)(v3 + v10[10]);
    long long v23 = v22[1];
    long long v27 = *v22;
    long long v28 = v23;
    long long v29 = v22[2];
    char v26 = 6;
    sub_20A986524();
    sub_20AB86BE0();
    LOBYTE(v27) = *(unsigned char *)(v3 + v10[11]);
    char v26 = 7;
    sub_20A9875D0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA1E258()
{
  unint64_t result = qword_267654D78;
  if (!qword_267654D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654D78);
  }
  return result;
}

uint64_t NonNewsHeadlineExposureEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_20AB85FE0();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA1EA44(0, &qword_267654D80, MEMORY[0x263F8E040]);
  uint64_t v35 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v33 - v11;
  uint64_t v41 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  MEMORY[0x270FA5388](v41);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_20AA1E258();
  uint64_t v39 = v12;
  uint64_t v16 = v42;
  sub_20AB86DA0();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  LOBYTE(v43) = 0;
  sub_20A97C1C0(&qword_26AC4E0C8, MEMORY[0x263F24E70]);
  sub_20AB86B80();
  uint64_t v17 = v6;
  uint64_t v18 = (uint64_t)v14;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v14, v8, v17);
  LOBYTE(v43) = 1;
  sub_20A97C1C0(&qword_26AC4E710, MEMORY[0x263F24E90]);
  char v19 = v5;
  uint64_t v20 = v37;
  sub_20AB86B80();
  uint64_t v21 = (int *)v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v18 + *(int *)(v41 + 20), v19, v20);
  char v46 = 2;
  sub_20A9DBE94();
  sub_20AB86B80();
  long long v22 = v44;
  long long v23 = v45;
  uint64_t v24 = (_OWORD *)(v18 + v21[6]);
  *uint64_t v24 = v43;
  v24[1] = v22;
  v24[2] = v23;
  char v46 = 3;
  sub_20A9EE544();
  sub_20AB86B80();
  *(_DWORD *)(v18 + v21[7]) = v43;
  char v46 = 4;
  sub_20A9EE794();
  sub_20AB86B10();
  char v25 = BYTE4(v43);
  uint64_t v26 = v18 + v21[8];
  *(_DWORD *)uint64_t v26 = v43;
  *(unsigned char *)(v26 + 4) = v25;
  char v46 = 5;
  sub_20A986720();
  sub_20AB86B80();
  uint64_t v27 = *((void *)&v43 + 1);
  uint64_t v28 = v44;
  uint64_t v29 = v18 + v21[9];
  *(unsigned char *)uint64_t v29 = v43;
  *(void *)(v29 + 8) = v27;
  *(void *)(v29 + 16) = v28;
  char v46 = 6;
  sub_20A9864D0();
  sub_20AB86B10();
  char v30 = (_OWORD *)(v18 + v21[10]);
  long long v31 = v44;
  *char v30 = v43;
  v30[1] = v31;
  v30[2] = v45;
  char v46 = 7;
  sub_20A98757C();
  sub_20AB86B10();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v39, v35);
  *(unsigned char *)(v18 + v21[11]) = v43;
  sub_20AA1EAA8(v18, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  return sub_20AA1EB0C(v18);
}

void sub_20AA1EA44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA1E258();
    unint64_t v7 = a3(a1, &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA1EAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA1EB0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NonNewsHeadlineExposureEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA1EB68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NonNewsHeadlineExposureEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA1EB80(void *a1)
{
  return NonNewsHeadlineExposureEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA1EB98@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533F0, MEMORY[0x263F24D18], (uint64_t)qword_267654D28, a1);
}

uint64_t sub_20AA1EBD0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_2676533F8, MEMORY[0x263F24DD8], (uint64_t)qword_267654D40, a1);
}

uint64_t sub_20AA1EC08@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653400, MEMORY[0x263F24DE8], (uint64_t)qword_267654D58, a1);
}

uint64_t sub_20AA1EC40@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = *MEMORY[0x263F24D30];
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v4, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v13, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104);

  return v21(v19, v13, v20);
}

uint64_t *initializeBufferWithCopyOfBuffer for NonNewsHeadlineExposureEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v36 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A97BF54();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_20A97C0F4();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v20;
    long long v22 = (char *)a2 + v20;
    sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    char v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    uint64_t v28 = a3[10];
    uint64_t v29 = (char *)a1 + v28;
    char v30 = (char *)a2 + v28;
    sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = a3[11];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return a1;
}

uint64_t destroy for NonNewsHeadlineExposureEvent(uint64_t a1, int *a2)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + a2[6];
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[7];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[8];
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[9];
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[10];
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = a1 + a2[11];
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t initializeWithCopy for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

uint64_t assignWithTake for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  sub_20A97C0F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA206A4);
}

uint64_t sub_20AA206A4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_20A97BF54();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_15:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_16;
  }
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_15;
  }
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v12 = *(void *)(v16 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_15;
  }
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v12 = *(void *)(v17 - 8);
    uint64_t v13 = a3[9];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v12 = *(void *)(v18 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48);
  uint64_t v22 = v20;
  uint64_t v23 = a1 + a3[11];

  return v21(v23, a2, v22);
}

uint64_t storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA20AD0);
}

uint64_t sub_20AA20AD0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_20A97BF54();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_16:
    return v11(v12, a2, a2, v10);
  }
  sub_20A97C0F4();
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_15:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_16;
  }
  sub_20AA1D338(0, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_15;
  }
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_15;
  }
  sub_20AA1D338(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  if (*(_DWORD *)(*(void *)(v19 - 8) + 84) == a3)
  {
    uint64_t v10 = v19;
    uint64_t v14 = *(void *)(v19 - 8);
    uint64_t v15 = a4[9];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  if (*(_DWORD *)(*(void *)(v20 - 8) + 84) == a3)
  {
    uint64_t v10 = v20;
    uint64_t v14 = *(void *)(v20 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_15;
  }
  sub_20AA1D338(0, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v24 = v22;
  uint64_t v25 = a1 + a4[11];

  return v23(v25, a2, a2, v24);
}

void sub_20AA20EF4()
{
  sub_20A97BF54();
  if (v0 <= 0x3F)
  {
    sub_20A97C0F4();
    if (v1 <= 0x3F)
    {
      sub_20AA1D338(319, &qword_2676546A8, (void (*)(void))sub_20A9DBE94, (void (*)(void))sub_20A9DBEEC);
      if (v2 <= 0x3F)
      {
        sub_20AA1D338(319, (unint64_t *)&qword_26AC4E620, (void (*)(void))sub_20A9EE544, (void (*)(void))sub_20A9EE598);
        if (v3 <= 0x3F)
        {
          sub_20AA1D338(319, &qword_26AC4E638, (void (*)(void))sub_20A9EE794, (void (*)(void))sub_20A9EE7E8);
          if (v4 <= 0x3F)
          {
            sub_20AA1D338(319, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
            if (v5 <= 0x3F)
            {
              sub_20AA1D338(319, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
              if (v6 <= 0x3F)
              {
                sub_20AA1D338(319, &qword_26AC4E5E0, (void (*)(void))sub_20A98757C, (void (*)(void))sub_20A9875D0);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for NonNewsHeadlineExposureEvent.Model(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20AB85FC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20AB85FE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v15[3];
    v14[2] = v15[2];
    v14[3] = v17;
    uint64_t v18 = v15[5];
    v14[4] = v15[4];
    v14[5] = v18;
    *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = (char *)a1 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *uint64_t v23 = *v24;
    uint64_t v25 = *((void *)v24 + 2);
    *((void *)v23 + 1) = *((void *)v24 + 1);
    *((void *)v23 + 2) = v25;
    uint64_t v26 = a3[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)((char *)a2 + v26 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      *uint64_t v27 = *v28;
      *((void *)v27 + 1) = *((void *)v28 + 1);
      *((void *)v27 + 2) = v29;
      *((void *)v27 + 3) = *((void *)v28 + 3);
      uint64_t v30 = *((void *)v28 + 5);
      *((void *)v27 + 4) = *((void *)v28 + 4);
      *((void *)v27 + 5) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v32 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *((_OWORD *)v27 + 1) = v32;
      *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
    }
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return a1;
}

uint64_t destroy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(a2 + 40) + 16);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v14[3];
  void v13[2] = v14[2];
  void v13[3] = v16;
  uint64_t v17 = v14[5];
  v13[4] = v14[4];
  v13[5] = v17;
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
  uint64_t v24 = *(void *)(v23 + 16);
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(void *)(v22 + 16) = v24;
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a2 + v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
    *(void *)(v26 + 8) = *(void *)(v27 + 8);
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = *(void *)(v27 + 24);
    uint64_t v29 = *(void *)(v27 + 40);
    *(void *)(v26 + 32) = *(void *)(v27 + 32);
    *(void *)(v26 + 40) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v30;
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v12[2] = v13[2];
  v12[3] = v13[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12[4] = v13[4];
  v12[5] = v13[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  char v17 = *(unsigned char *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(v15 + 4) = v17;
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(v19 + 16) = *(void *)(v20 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (long long *)(a2 + v21);
  uint64_t v24 = *(void *)(a1 + v21 + 16);
  uint64_t v25 = *(void *)(a2 + v21 + 16);
  if (v24)
  {
    if (v25)
    {
      *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
      *(void *)(v22 + 8) = *((void *)v23 + 1);
      *(void *)(v22 + 16) = *((void *)v23 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
      *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
      *(void *)(v22 + 32) = *((void *)v23 + 4);
      *(void *)(v22 + 40) = *((void *)v23 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_20A98D5B8(v22);
      long long v27 = v23[1];
      long long v26 = v23[2];
      *(_OWORD *)uint64_t v22 = *v23;
      *(_OWORD *)(v22 + 16) = v27;
      *(_OWORD *)(v22 + 32) = v26;
    }
  }
  else if (v25)
  {
    *(unsigned char *)uint64_t v22 = *(unsigned char *)v23;
    *(void *)(v22 + 8) = *((void *)v23 + 1);
    *(void *)(v22 + 16) = *((void *)v23 + 2);
    *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
    *(_DWORD *)(v22 + 28) = *((_DWORD *)v23 + 7);
    *(void *)(v22 + 32) = *((void *)v23 + 4);
    *(void *)(v22 + 40) = *((void *)v23 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *v23;
    long long v29 = v23[2];
    *(_OWORD *)(v22 + 16) = v23[1];
    *(_OWORD *)(v22 + 32) = v29;
    *(_OWORD *)uint64_t v22 = v28;
  }
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (_OWORD *)(a1 + v11);
  uint64_t v14 = (_OWORD *)(a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  void v13[2] = v14[2];
  *(_DWORD *)(a1 + v12) = *(_DWORD *)(a2 + v12);
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (_OWORD *)(a1 + v22);
  uint64_t v25 = (_OWORD *)(a2 + v22);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  v24[2] = v25[2];
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20AB85FE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = *(void *)(a2 + v11 + 8);
  *uint64_t v12 = *(void *)(a2 + v11);
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v13[3];
  void v12[2] = v13[2];
  v12[3] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v13[5];
  v12[4] = v13[4];
  v12[5] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(unsigned char *)(v18 + 4) = *(unsigned char *)(v19 + 4);
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v23 = *(void *)(v22 + 16);
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  if (!*(void *)(a1 + v25 + 16)) {
    goto LABEL_5;
  }
  uint64_t v28 = *(void *)(v27 + 16);
  if (!v28)
  {
    sub_20A98D5B8(v26);
LABEL_5:
    long long v30 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *(_OWORD *)(v26 + 16) = v30;
    *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
    goto LABEL_6;
  }
  *(unsigned char *)uint64_t v26 = *(unsigned char *)v27;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  *(void *)(v26 + 16) = v28;
  swift_bridgeObjectRelease();
  *(void *)(v26 + 24) = *(void *)(v27 + 24);
  uint64_t v29 = *(void *)(v27 + 40);
  *(void *)(v26 + 32) = *(void *)(v27 + 32);
  *(void *)(v26 + 40) = v29;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20AA21CB4);
}

uint64_t sub_20AA21CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20AB85FC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_20AB85FE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20AA21DE0);
}

uint64_t sub_20AA21DE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20AB85FC0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20AB85FE0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_20AA21EF4()
{
  uint64_t result = sub_20AB85FC0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20AB85FE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NonNewsHeadlineExposureEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA220C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NonNewsHeadlineExposureEvent.Model.CodingKeys()
{
  return &type metadata for NonNewsHeadlineExposureEvent.Model.CodingKeys;
}

unint64_t sub_20AA22104()
{
  unint64_t result = qword_267654DA8;
  if (!qword_267654DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DA8);
  }
  return result;
}

unint64_t sub_20AA2215C()
{
  unint64_t result = qword_267654DB0;
  if (!qword_267654DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DB0);
  }
  return result;
}

unint64_t sub_20AA221B4()
{
  unint64_t result = qword_267654DB8;
  if (!qword_267654DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DB8);
  }
  return result;
}

uint64_t sub_20AA22208(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000020ABA79B0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020ABA79D0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA79F0 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6174614464656566 && a2 == 0xE800000000000000 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74614470756F7267 && a2 == 0xE900000000000061 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020ABA7300)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t static LinkData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void LinkData.linkType.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *LinkData.linkType.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*LinkData.linkType.modify())()
{
  return nullsub_1;
}

StocksAnalytics::LinkData __swiftcall LinkData.init(linkType:)(StocksAnalytics::LinkData linkType)
{
  *unint64_t v1 = *(unsigned char *)linkType.linkType;
  return linkType;
}

uint64_t sub_20AA22590()
{
  return 0x657079546B6E696CLL;
}

uint64_t sub_20AA225A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x657079546B6E696CLL && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20AA22640(uint64_t a1)
{
  unint64_t v2 = sub_20AA22814();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA2267C(uint64_t a1)
{
  unint64_t v2 = sub_20AA22814();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LinkData.encode(to:)(void *a1)
{
  sub_20AA22A54(0, &qword_267654DC0, MEMORY[0x263F8E0C0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v10 - v6;
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA22814();
  sub_20AB86DC0();
  char v11 = v8;
  sub_20AA22868();
  sub_20AB86C50();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_20AA22814()
{
  unint64_t result = qword_267654DC8;
  if (!qword_267654DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DC8);
  }
  return result;
}

unint64_t sub_20AA22868()
{
  unint64_t result = qword_267654DD0;
  if (!qword_267654DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DD0);
  }
  return result;
}

uint64_t LinkData.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  sub_20AA22A54(0, &qword_267654DD8, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA22814();
  sub_20AB86DA0();
  if (!v2)
  {
    sub_20AA22AB8();
    sub_20AB86B80();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_20AA22A54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA22814();
    unint64_t v7 = a3(a1, &type metadata for LinkData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA22AB8()
{
  unint64_t result = qword_267654DE0;
  if (!qword_267654DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DE0);
  }
  return result;
}

unint64_t sub_20AA22B10()
{
  unint64_t result = qword_267654DE8;
  if (!qword_267654DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DE8);
  }
  return result;
}

unint64_t sub_20AA22B68()
{
  unint64_t result = qword_267654DF0;
  if (!qword_267654DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DF0);
  }
  return result;
}

uint64_t sub_20AA22BBC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return LinkData.init(from:)(a1, a2);
}

uint64_t sub_20AA22BD4(void *a1)
{
  return LinkData.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for LinkData(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA22CB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkData()
{
  return &type metadata for LinkData;
}

unsigned char *storeEnumTagSinglePayload for LinkData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20AA22D8CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkData.CodingKeys()
{
  return &type metadata for LinkData.CodingKeys;
}

unint64_t sub_20AA22DC8()
{
  unint64_t result = qword_267654DF8;
  if (!qword_267654DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654DF8);
  }
  return result;
}

unint64_t sub_20AA22E20()
{
  unint64_t result = qword_267654E00;
  if (!qword_267654E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E00);
  }
  return result;
}

unint64_t sub_20AA22E78()
{
  unint64_t result = qword_267654E08;
  if (!qword_267654E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E08);
  }
  return result;
}

StocksAnalytics::CacheState_optional __swiftcall CacheState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20AB86AD0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CacheState.rawValue.getter()
{
  uint64_t v1 = 7629160;
  if (*v0 != 1) {
    uint64_t v1 = 1936943469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E75;
  }
}

uint64_t sub_20AA22F74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20AA399AC(*a1, *a2);
}

unint64_t sub_20AA22F84()
{
  unint64_t result = qword_267654E10;
  if (!qword_267654E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E10);
  }
  return result;
}

uint64_t sub_20AA22FD8()
{
  return sub_20AB86D80();
}

uint64_t sub_20AA2306C()
{
  sub_20AB86710();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20AA230EC()
{
  return sub_20AB86D80();
}

StocksAnalytics::CacheState_optional sub_20AA2317C(Swift::String *a1)
{
  return CacheState.init(rawValue:)(*a1);
}

void sub_20AA23188(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE300000000000000;
  uint64_t v5 = 7629160;
  if (v2 != 1)
  {
    uint64_t v5 = 1936943469;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E776F6E6B6E75;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20AA231D8()
{
  return sub_20AB86750();
}

uint64_t sub_20AA23238()
{
  return sub_20AB86740();
}

unsigned char *storeEnumTagSinglePayload for CacheState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA23354);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CacheState()
{
  return &type metadata for CacheState;
}

unint64_t sub_20AA2338C()
{
  unint64_t result = qword_26AC4EB10;
  if (!qword_26AC4EB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EB10);
  }
  return result;
}

unsigned char *PaidSubscriptionData.init(paidSubscriptionStatus:trialSubscriptionChannelIDs:paidSubscriptionChannelIDs:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t static PaidSubscriptionData.requiresDiagnosticsConsent.getter()
{
  return 0;
}

void PaidSubscriptionData.paidSubscriptionStatus.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *PaidSubscriptionData.paidSubscriptionStatus.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*PaidSubscriptionData.paidSubscriptionStatus.modify())()
{
  return nullsub_1;
}

uint64_t PaidSubscriptionData.trialSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaidSubscriptionData.trialSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PaidSubscriptionData.trialSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

uint64_t PaidSubscriptionData.paidSubscriptionChannelIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaidSubscriptionData.paidSubscriptionChannelIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*PaidSubscriptionData.paidSubscriptionChannelIDs.modify())()
{
  return nullsub_1;
}

unint64_t sub_20AA234D8(char a1)
{
  unint64_t result = 0xD000000000000016;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD00000000000001BLL;
    }
    else {
      return 0xD00000000000001ALL;
    }
  }
  return result;
}

unint64_t sub_20AA23538()
{
  return sub_20AA234D8(*v0);
}

uint64_t sub_20AA23540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA240E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA23568(uint64_t a1)
{
  unint64_t v2 = sub_20AA237F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA235A4(uint64_t a1)
{
  unint64_t v2 = sub_20AA237F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PaidSubscriptionData.encode(to:)(void *a1)
{
  sub_20AA23B54(0, &qword_26AC518E0, MEMORY[0x263F8E0C0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v13 - v7;
  char v9 = *v1;
  uint64_t v10 = *((void *)v1 + 1);
  uint64_t v14 = *((void *)v1 + 2);
  uint64_t v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA237F8();
  sub_20AB86DC0();
  LOBYTE(v16) = v9;
  char v17 = 0;
  sub_20AA2384C();
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v16 = v15;
    char v17 = 1;
    sub_20A9B8470();
    sub_20A9B8DEC(&qword_26AC516D8);
    sub_20AB86BE0();
    uint64_t v16 = v11;
    char v17 = 2;
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20AA237F8()
{
  unint64_t result = qword_26AC502F8;
  if (!qword_26AC502F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC502F8);
  }
  return result;
}

unint64_t sub_20AA2384C()
{
  unint64_t result = qword_26AC50880;
  if (!qword_26AC50880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50880);
  }
  return result;
}

uint64_t PaidSubscriptionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20AA23B54(0, &qword_267654E18, MEMORY[0x263F8E040]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA237F8();
  sub_20AB86DA0();
  if (!v2)
  {
    char v17 = 0;
    sub_20AA23BB8();
    sub_20AB86B80();
    int v10 = v15;
    sub_20A9B8470();
    char v17 = 1;
    uint64_t v14 = sub_20A9B8DEC(&qword_26AC516E8);
    sub_20AB86B10();
    int v16 = v10;
    uint64_t v12 = v15;
    char v17 = 2;
    swift_bridgeObjectRetain();
    sub_20AB86B10();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v13 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v16;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_20AA23B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA237F8();
    unint64_t v7 = a3(a1, &type metadata for PaidSubscriptionData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_20AA23BB8()
{
  unint64_t result = qword_267654E20;
  if (!qword_267654E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E20);
  }
  return result;
}

unint64_t sub_20AA23C10()
{
  unint64_t result = qword_26AC50318;
  if (!qword_26AC50318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50318);
  }
  return result;
}

unint64_t sub_20AA23C68()
{
  unint64_t result = qword_26AC50310;
  if (!qword_26AC50310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50310);
  }
  return result;
}

uint64_t sub_20AA23CBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PaidSubscriptionData.init(from:)(a1, a2);
}

uint64_t sub_20AA23CD4(void *a1)
{
  return PaidSubscriptionData.encode(to:)(a1);
}

uint64_t destroy for PaidSubscriptionData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s15StocksAnalytics20PaidSubscriptionDataVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaidSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PaidSubscriptionData(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaidSubscriptionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaidSubscriptionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionData()
{
  return &type metadata for PaidSubscriptionData;
}

unsigned char *storeEnumTagSinglePayload for PaidSubscriptionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20AA23FA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaidSubscriptionData.CodingKeys()
{
  return &type metadata for PaidSubscriptionData.CodingKeys;
}

unint64_t sub_20AA23FE4()
{
  unint64_t result = qword_267654E28;
  if (!qword_267654E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E28);
  }
  return result;
}

unint64_t sub_20AA2403C()
{
  unint64_t result = qword_26AC4E160;
  if (!qword_26AC4E160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4E160);
  }
  return result;
}

unint64_t sub_20AA24094()
{
  unint64_t result = qword_26AC50300;
  if (!qword_26AC50300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC50300);
  }
  return result;
}

uint64_t sub_20AA240E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000020ABA7E20 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000020ABA7E40 || (sub_20AB86CA0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000020ABA7E60)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_20AB86CA0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20AA2422C(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24D18], qword_267654E30, MEMORY[0x263F24D10]);
}

uint64_t static WebSubscriptionAuthenticationEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653408, MEMORY[0x263F24D18], (uint64_t)qword_267654E30, a1);
}

uint64_t static WebSubscriptionAuthenticationEvent.requiresDiagnosticsConsent.getter()
{
  return 0;
}

uint64_t sub_20AA24294(uint64_t a1)
{
  return sub_20A97BD54(a1, MEMORY[0x263F24DD8], qword_267654E48, MEMORY[0x263F24DC8]);
}

uint64_t static WebSubscriptionAuthenticationEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653410, MEMORY[0x263F24DD8], (uint64_t)qword_267654E48, a1);
}

uint64_t sub_20AA242F4()
{
  uint64_t v0 = sub_20AB85D40();
  __swift_allocate_value_buffer(v0, qword_267654E60);
  __swift_project_value_buffer(v0, (uint64_t)qword_267654E60);
  return sub_20AB85D30();
}

uint64_t static WebSubscriptionAuthenticationEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97BE9C(&qword_267653418, MEMORY[0x263F24DE8], (uint64_t)qword_267654E60, a1);
}

uint64_t WebSubscriptionAuthenticationEvent.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58((uint64_t (*)(void))sub_20A97BF54, a1);
}

uint64_t WebSubscriptionAuthenticationEvent.eventData.setter(uint64_t a1)
{
  sub_20A97BF54();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*WebSubscriptionAuthenticationEvent.eventData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 20);
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for WebSubscriptionAuthenticationEvent(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654EB8);
}

uint64_t WebSubscriptionAuthenticationEvent.newsArticleData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 20);
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.newsArticleData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 24);
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.feedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 24);
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.feedData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 28);
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.channelData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 28);
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.channelData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 32);
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.viewData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 32);
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.viewData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.groupData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 36);
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.groupData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 36);
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.groupData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.purchaseSessionData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 40);
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.purchaseSessionData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 40);
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.purchaseSessionData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.paywallData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 44);
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.paywallData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 44);
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.paywallData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 48);
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

unint64_t sub_20AA25080()
{
  unint64_t result = qword_267654E80;
  if (!qword_267654E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E80);
  }
  return result;
}

unint64_t sub_20AA250D4()
{
  unint64_t result = qword_267654E88;
  if (!qword_267654E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654E88);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.resultData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 48);
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.resultData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.storeKitErrorData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 52);
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.storeKitErrorData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 52);
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.storeKitErrorData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.adReferralData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 56);
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t WebSubscriptionAuthenticationEvent.adReferralData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 56);
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.adReferralData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.campaignData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 60);
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

void sub_20AA25620(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  if (!*a2)
  {
    a3();
    a4();
    unint64_t v6 = sub_20AB85A60();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20AA2569C()
{
  unint64_t result = qword_26AC4EC98;
  if (!qword_26AC4EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC98);
  }
  return result;
}

unint64_t sub_20AA256F0()
{
  unint64_t result = qword_26AC4EC90;
  if (!qword_26AC4EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC4EC90);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.campaignData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent(0) + 60);
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*WebSubscriptionAuthenticationEvent.campaignData.modify())()
{
  return nullsub_1;
}

uint64_t WebSubscriptionAuthenticationEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = *MEMORY[0x263F24D30];
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = a1 + v4[6];
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v2, v9);
  uint64_t v10 = a1 + v4[7];
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v2, v11);
  uint64_t v12 = a1 + v4[8];
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v12, v2, v13);
  uint64_t v14 = a1 + v4[9];
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v14, v6, v15);
  uint64_t v16 = a1 + v4[10];
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v16, v2, v17);
  uint64_t v18 = a1 + v4[11];
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v18, v2, v19);
  uint64_t v20 = a1 + v4[12];
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v20, v2, v21);
  uint64_t v22 = a1 + v4[13];
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v22, v6, v23);
  uint64_t v24 = a1 + v4[14];
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v24, v6, v25);
  uint64_t v26 = a1 + v4[15];
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104);

  return v28(v26, v6, v27);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.eventData.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97CF58(MEMORY[0x263F24E70], a1);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.newsArticleData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LODWORD(v3) = *(_DWORD *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(_DWORD *)(a1 + 64) = v3;
  return sub_20A99BE1C(v4, v5);
}

uint64_t type metadata accessor for WebSubscriptionAuthenticationEvent.Model(uint64_t a1)
{
  return sub_20A97D0A4(a1, (uint64_t *)&unk_267654EC8);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.feedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 24);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.channelData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 28));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  char v8 = *((unsigned char *)v3 + 32);
  LOBYTE(v3) = *((unsigned char *)v3 + 33);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 33) = (_BYTE)v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.viewData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  LOWORD(v3) = *((_WORD *)v3 + 8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = (_WORD)v3;

  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.groupData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 36));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20A987E20(v4, v5, v6);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.purchaseSessionData.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 40));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.paywallData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 44));
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.resultData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 48);
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v4 = *(void *)(v3 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;

  return swift_bridgeObjectRetain();
}

uint64_t WebSubscriptionAuthenticationEvent.Model.storeKitErrorData.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52));
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.adReferralData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 56));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;

  return sub_20A9F9290(v4, v5);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.campaignData.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0) + 60));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;

  return sub_20AA261CC(v4, v5);
}

uint64_t sub_20AA261CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 WebSubscriptionAuthenticationEvent.Model.init(eventData:newsArticleData:feedData:channelData:viewData:groupData:purchaseSessionData:paywallData:resultData:storeKitErrorData:adReferralData:campaignData:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, char *a3@<X2>, long long *a4@<X3>, uint64_t *a5@<X4>, long long *a6@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, char *a11, uint64_t *a12, long long *a13)
{
  long long v36 = a2[1];
  long long v37 = *a2;
  long long v35 = a2[2];
  uint64_t v16 = *((void *)a2 + 6);
  uint64_t v15 = *((void *)a2 + 7);
  int v17 = *((_DWORD *)a2 + 16);
  char v18 = *a3;
  uint64_t v19 = *((void *)a3 + 1);
  uint64_t v20 = *((void *)a3 + 2);
  long long v40 = *a4;
  uint64_t v38 = *((void *)a4 + 3);
  uint64_t v39 = *((void *)a4 + 2);
  char v21 = *((unsigned char *)a4 + 32);
  char v22 = *((unsigned char *)a4 + 33);
  uint64_t v42 = a5[1];
  uint64_t v43 = *a5;
  __int16 v41 = *((_WORD *)a5 + 8);
  long long v46 = a6[1];
  long long v47 = *a6;
  uint64_t v44 = *((void *)a6 + 5);
  uint64_t v45 = *((void *)a6 + 4);
  uint64_t v48 = a7[1];
  uint64_t v49 = *a7;
  char v50 = *a8;
  char v53 = *a10;
  uint64_t v52 = *((void *)a10 + 1);
  uint64_t v51 = *((void *)a10 + 2);
  char v54 = *a11;
  uint64_t v55 = a12[1];
  uint64_t v56 = *a12;
  __n128 v59 = (__n128)a13[1];
  long long v60 = *a13;
  uint64_t v57 = *((void *)a13 + 5);
  uint64_t v58 = *((void *)a13 + 4);
  uint64_t v23 = sub_20AB85FC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a9, a1, v23);
  uint64_t v24 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  uint64_t v25 = a9 + v24[5];
  *(_OWORD *)uint64_t v25 = v37;
  *(_OWORD *)(v25 + 16) = v36;
  *(_OWORD *)(v25 + 32) = v35;
  *(void *)(v25 + 48) = v16;
  *(void *)(v25 + 56) = v15;
  *(_DWORD *)(v25 + 64) = v17;
  uint64_t v26 = a9 + v24[6];
  *(unsigned char *)uint64_t v26 = v18;
  *(void *)(v26 + 8) = v19;
  *(void *)(v26 + 16) = v20;
  uint64_t v27 = a9 + v24[7];
  *(_OWORD *)uint64_t v27 = v40;
  *(void *)(v27 + 16) = v39;
  *(void *)(v27 + 24) = v38;
  *(unsigned char *)(v27 + 32) = v21;
  *(unsigned char *)(v27 + 33) = v22;
  uint64_t v28 = a9 + v24[8];
  *(void *)uint64_t v28 = v43;
  *(void *)(v28 + 8) = v42;
  *(_WORD *)(v28 + 16) = v41;
  uint64_t v29 = a9 + v24[9];
  *(_OWORD *)uint64_t v29 = v47;
  *(_OWORD *)(v29 + 16) = v46;
  *(void *)(v29 + 32) = v45;
  *(void *)(v29 + 40) = v44;
  long long v30 = (void *)(a9 + v24[10]);
  *long long v30 = v49;
  v30[1] = v48;
  *(unsigned char *)(a9 + v24[11]) = v50;
  uint64_t v31 = a9 + v24[12];
  *(unsigned char *)uint64_t v31 = v53;
  *(void *)(v31 + 8) = v52;
  *(void *)(v31 + 16) = v51;
  *(unsigned char *)(a9 + v24[13]) = v54;
  long long v32 = (void *)(a9 + v24[14]);
  *long long v32 = v56;
  v32[1] = v55;
  uint64_t v33 = a9 + v24[15];
  __n128 result = v59;
  *(_OWORD *)uint64_t v33 = v60;
  *(__n128 *)(v33 + 16) = v59;
  *(void *)(v33 + 32) = v58;
  *(void *)(v33 + 40) = v57;
  return result;
}

uint64_t sub_20AA2647C(char a1)
{
  uint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      return 0x697472417377656ELL;
    case 2:
      unsigned int v3 = 1684366694;
      return v3 | 0x6174614400000000;
    case 3:
      uint64_t v4 = 0x656E6E616863;
      goto LABEL_10;
    case 4:
      unsigned int v3 = 2003134838;
      return v3 | 0x6174614400000000;
    case 5:
      return 0x74614470756F7267;
    case 6:
      return 0xD000000000000013;
    case 7:
      uint64_t v4 = 0x6C6177796170;
LABEL_10:
      uint64_t result = v4 & 0xFFFFFFFFFFFFLL | 0x446C000000000000;
      break;
    case 8:
      uint64_t result = 0x6144746C75736572;
      break;
    case 9:
      uint64_t result = 0xD000000000000011;
      break;
    case 10:
      uint64_t result = 0x7272656665526461;
      break;
    case 11:
      uint64_t result = 0x6E676961706D6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20AA26618()
{
  return sub_20AA2647C(*v0);
}

uint64_t sub_20AA26620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20AA2C984(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20AA26648(uint64_t a1)
{
  unint64_t v2 = sub_20AA26BA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20AA26684(uint64_t a1)
{
  unint64_t v2 = sub_20AA26BA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WebSubscriptionAuthenticationEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20AA27570(0, &qword_267654EA0, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v36 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20AA26BA8();
  sub_20AB86DC0();
  v38[0] = 0;
  sub_20AB85FC0();
  sub_20A985F3C(&qword_26AC4E6F8);
  sub_20AB86C50();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
    uint64_t v11 = v3 + v10[5];
    int v12 = *(_DWORD *)(v11 + 64);
    long long v13 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v11;
    *(_OWORD *)&v38[16] = v13;
    long long v14 = *(_OWORD *)(v11 + 48);
    long long v39 = *(_OWORD *)(v11 + 32);
    long long v40 = v14;
    int v41 = v12;
    char v37 = 1;
    sub_20A97A1AC();
    sub_20AB86BE0();
    uint64_t v15 = (char *)(v3 + v10[6]);
    char v16 = *v15;
    uint64_t v18 = *((void *)v15 + 1);
    uint64_t v17 = *((void *)v15 + 2);
    v38[0] = v16;
    *(void *)&v38[8] = v18;
    *(void *)&v38[16] = v17;
    char v37 = 2;
    sub_20A986774();
    sub_20AB86C50();
    uint64_t v19 = (long long *)(v3 + v10[7]);
    long long v20 = *v19;
    uint64_t v21 = *((void *)v19 + 2);
    uint64_t v22 = *((void *)v19 + 3);
    char v23 = *((unsigned char *)v19 + 32);
    LOBYTE(v19) = *((unsigned char *)v19 + 33);
    *(_OWORD *)uint64_t v38 = v20;
    *(void *)&v38[16] = v21;
    *(void *)&v38[24] = v22;
    LOBYTE(v39) = v23;
    BYTE1(v39) = (_BYTE)v19;
    char v37 = 3;
    sub_20A9862D4();
    sub_20AB86C50();
    uint64_t v24 = (uint64_t *)(v3 + v10[8]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    LOWORD(v24) = *((_WORD *)v24 + 8);
    *(void *)uint64_t v38 = v25;
    *(void *)&v38[8] = v26;
    *(_WORD *)&v38[16] = (_WORD)v24;
    char v37 = 4;
    sub_20A986C14();
    sub_20AB86C50();
    uint64_t v27 = (_OWORD *)(v3 + v10[9]);
    long long v28 = v27[1];
    *(_OWORD *)uint64_t v38 = *v27;
    *(_OWORD *)&v38[16] = v28;
    long long v39 = v27[2];
    char v37 = 5;
    sub_20A986524();
    sub_20AB86BE0();
    uint64_t v29 = (uint64_t *)(v3 + v10[10]);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    *(void *)uint64_t v38 = v31;
    *(void *)&v38[8] = v30;
    char v37 = 6;
    sub_20A9D0E44();
    sub_20AB86C50();
    v38[0] = *(unsigned char *)(v3 + v10[11]);
    char v37 = 7;
    sub_20A9D1360();
    sub_20AB86C50();
    uint64_t v32 = v3 + v10[12];
    v38[0] = *(unsigned char *)v32;
    *(_OWORD *)&v38[8] = *(_OWORD *)(v32 + 8);
    char v37 = 8;
    sub_20AA250D4();
    sub_20AB86C50();
    v38[0] = *(unsigned char *)(v3 + v10[13]);
    char v37 = 9;
    sub_20AA00D44();
    sub_20AB86BE0();
    *(_OWORD *)uint64_t v38 = *(_OWORD *)(v3 + v10[14]);
    char v37 = 10;
    sub_20AA07C04();
    sub_20AB86BE0();
    uint64_t v33 = (_OWORD *)(v3 + v10[15]);
    long long v34 = v33[1];
    *(_OWORD *)uint64_t v38 = *v33;
    *(_OWORD *)&v38[16] = v34;
    long long v39 = v33[2];
    char v37 = 11;
    sub_20AA256F0();
    sub_20AB86BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20AA26BA8()
{
  unint64_t result = qword_267654EA8;
  if (!qword_267654EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_267654EA8);
  }
  return result;
}

uint64_t WebSubscriptionAuthenticationEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_20AB85FC0();
  uint64_t v47 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20AA27570(0, &qword_267654EB0, MEMORY[0x263F8E040]);
  uint64_t v48 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v52 = (int *)type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  MEMORY[0x270FA5388](v52);
  uint64_t v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_20AA26BA8();
  sub_20AB86DA0();
  uint64_t v46 = v5;
  if (v2)
  {
    uint64_t v50 = v2;
    uint64_t v15 = v51;
    char v16 = v52;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    int v18 = 0;
    int v57 = 0;
  }
  else
  {
    uint64_t v45 = a2;
    uint64_t v14 = v9;
    v53[0] = 0;
    sub_20A985F3C(&qword_26AC4E0C8);
    sub_20AB86B80();
    uint64_t v19 = v51;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v51, v7, v5);
    char v58 = 1;
    sub_20A97A154();
    sub_20AB86B10();
    long long v20 = v52;
    int v21 = v56;
    uint64_t v22 = &v19[v52[5]];
    long long v23 = *(_OWORD *)&v53[16];
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v53;
    *((_OWORD *)v22 + 1) = v23;
    long long v24 = v55;
    *((_OWORD *)v22 + 2) = v54;
    *((_OWORD *)v22 + 3) = v24;
    *((_DWORD *)v22 + 16) = v21;
    char v58 = 2;
    sub_20A986720();
    sub_20AB86B80();
    uint64_t v25 = *(void *)&v53[8];
    uint64_t v26 = *(void *)&v53[16];
    uint64_t v27 = &v19[v20[6]];
    *uint64_t v27 = v53[0];
    *((void *)v27 + 1) = v25;
    *((void *)v27 + 2) = v26;
    char v58 = 3;
    sub_20A986280();
    sub_20AB86B80();
    long long v28 = *(_OWORD *)&v53[16];
    char v29 = v54;
    char v30 = BYTE1(v54);
    uint64_t v31 = &v19[v20[7]];
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v53;
    *((_OWORD *)v31 + 1) = v28;
    v31[32] = v29;
    v31[33] = v30;
    char v58 = 4;
    sub_20A986BC0();
    sub_20AB86B80();
    uint64_t v32 = *(void *)&v53[8];
    __int16 v33 = *(_WORD *)&v53[16];
    long long v34 = &v19[v20[8]];
    *(void *)long long v34 = *(void *)v53;
    *((void *)v34 + 1) = v32;
    *((_WORD *)v34 + 8) = v33;
    char v58 = 5;
    sub_20A9864D0();
    sub_20AB86B10();
    long long v35 = &v19[v20[9]];
    long long v36 = *(_OWORD *)&v53[16];
    *(_OWORD *)long long v35 = *(_OWORD *)v53;
    *((_OWORD *)v35 + 1) = v36;
    *((_OWORD *)v35 + 2) = v54;
    char v58 = 6;
    sub_20A9D0DF0();
    sub_20AB86B80();
    uint64_t v37 = *(void *)&v53[8];
    uint64_t v38 = &v19[v20[10]];
    *(void *)uint64_t v38 = *(void *)v53;
    *((void *)v38 + 1) = v37;
    char v58 = 7;
    sub_20A9D130C();
    sub_20AB86B80();
    v19[v20[11]] = v53[0];
    char v58 = 8;
    sub_20AA25080();
    sub_20AB86B80();
    int v57 = 1;
    long long v39 = &v19[v20[12]];
    *long long v39 = v53[0];
    *(_OWORD *)(v39 + 8) = *(_OWORD *)&v53[8];
    char v58 = 9;
    sub_20AA00CEC();
    sub_20AB86B10();
    uint64_t v50 = 0;
    v51[v52[13]] = v53[0];
    char v58 = 10;
    sub_20AA07BAC();
    uint64_t v40 = v50;
    sub_20AB86B10();
    uint64_t v50 = v40;
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v48);
      int v18 = 0;
    }
    else
    {
      *(_OWORD *)&v51[v52[14]] = *(_OWORD *)v53;
      char v58 = 11;
      sub_20AA2569C();
      uint64_t v41 = v50;
      sub_20AB86B10();
      uint64_t v50 = v41;
      if (!v41)
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v48);
        uint64_t v42 = (uint64_t)v51;
        uint64_t v43 = &v51[v52[15]];
        long long v44 = *(_OWORD *)&v53[16];
        *(_OWORD *)uint64_t v43 = *(_OWORD *)v53;
        *((_OWORD *)v43 + 1) = v44;
        *((_OWORD *)v43 + 2) = v54;
        sub_20AA275D4(v42, v45);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
        return sub_20AA27638(v42);
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v48);
      int v18 = 1;
    }
    uint64_t v15 = v51;
    char v16 = v52;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v46);
    sub_20A99D1CC(*(void *)&v15[v16[5]], *(void *)&v15[v16[5] + 8]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_20A98937C(*(void *)&v15[v16[9]], *(void *)&v15[v16[9] + 8], *(void *)&v15[v16[9] + 16]);
    uint64_t result = swift_bridgeObjectRelease();
    if (v57)
    {
      uint64_t result = swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        return result;
      }
      return sub_20A9FA9C8(*(void *)&v15[v16[14]], *(void *)&v15[v16[14] + 8]);
    }
  }
  if (!v18) {
    return result;
  }
  return sub_20A9FA9C8(*(void *)&v15[v16[14]], *(void *)&v15[v16[14] + 8]);
}

void sub_20AA27570(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20AA26BA8();
    unint64_t v7 = a3(a1, &type metadata for WebSubscriptionAuthenticationEvent.Model.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20AA275D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20AA27638(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WebSubscriptionAuthenticationEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20AA27694@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WebSubscriptionAuthenticationEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_20AA276AC(void *a1)
{
  return WebSubscriptionAuthenticationEvent.Model.encode(to:)(a1);
}

uint64_t sub_20AA276C4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653408, MEMORY[0x263F24D18], (uint64_t)qword_267654E30, a1);
}

uint64_t sub_20AA276FC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653410, MEMORY[0x263F24DD8], (uint64_t)qword_267654E48, a1);
}

uint64_t sub_20AA27734@<X0>(uint64_t a1@<X8>)
{
  return sub_20A97E0B8(&qword_267653418, MEMORY[0x263F24DE8], (uint64_t)qword_267654E60, a1);
}

uint64_t sub_20AA2776C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *MEMORY[0x263F24D38];
  sub_20A97BF54();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = *MEMORY[0x263F24D30];
  sub_20AA25620(0, &qword_26AC4E608, (void (*)(void))sub_20A97A154, (void (*)(void))sub_20A97A1AC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = a2 + a1[6];
  sub_20AA25620(0, (unint64_t *)&qword_26AC4E698, (void (*)(void))sub_20A986720, (void (*)(void))sub_20A986774);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v4, v10);
  uint64_t v11 = a2 + a1[7];
  sub_20AA25620(0, &qword_26AC4E5B0, (void (*)(void))sub_20A986280, (void (*)(void))sub_20A9862D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v11, v4, v12);
  uint64_t v13 = a2 + a1[8];
  sub_20AA25620(0, &qword_26AC4E6A0, (void (*)(void))sub_20A986BC0, (void (*)(void))sub_20A986C14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v13, v4, v14);
  uint64_t v15 = a2 + a1[9];
  sub_20AA25620(0, &qword_26AC4E6B0, (void (*)(void))sub_20A9864D0, (void (*)(void))sub_20A986524);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v15, v7, v16);
  uint64_t v17 = a2 + a1[10];
  sub_20AA25620(0, &qword_26AC4E648, (void (*)(void))sub_20A9D0DF0, (void (*)(void))sub_20A9D0E44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v17, v4, v18);
  uint64_t v19 = a2 + a1[11];
  sub_20AA25620(0, &qword_26AC4E5C0, (void (*)(void))sub_20A9D130C, (void (*)(void))sub_20A9D1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v4, v20);
  uint64_t v21 = a2 + a1[12];
  sub_20AA25620(0, &qword_267654E78, (void (*)(void))sub_20AA25080, (void (*)(void))sub_20AA250D4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v21, v4, v22);
  uint64_t v23 = a2 + a1[13];
  sub_20AA25620(0, &qword_267654E90, (void (*)(void))sub_20AA00CEC, (void (*)(void))sub_20AA00D44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v23, v7, v24);
  uint64_t v25 = a2 + a1[14];
  sub_20AA25620(0, &qword_267654E98, (void (*)(void))sub_20AA07BAC, (void (*)(void))sub_20AA07C04);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v25, v7, v26);
  uint64_t v27 = a2 + a1[15];
  sub_20AA25620(0, &qword_26AC4E5D0, (void (*)(void))sub_20AA2569C, (void (*)(void))sub_20AA256F0);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);

  return v29(v27, v7, v28);
}